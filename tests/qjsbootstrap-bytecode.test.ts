import fs from "fs";
import path from "path";
import { cp, rm, mkdir } from "shelljs";
import { spawn } from "first-base";
import { binDir, rootDir } from "./_utils";

// Generated by running this in `qjs --bignum`: require("quickjs:bytecode").fromFile("./tests/fixtures/log-four.js")
const bytecode = Buffer.from([
  2, 3, 14, 99, 111, 110, 115, 111, 108, 101, 6, 108, 111, 103, 56, 46, 47, 116,
  101, 115, 116, 115, 47, 102, 105, 120, 116, 117, 114, 101, 115, 47, 108, 111,
  103, 45, 102, 111, 117, 114, 46, 106, 115, 14, 0, 6, 0, 162, 1, 0, 1, 0, 4, 0,
  0, 18, 1, 164, 1, 0, 0, 0, 56, 227, 0, 0, 0, 66, 228, 0, 0, 0, 183, 183, 157,
  36, 1, 0, 205, 40, 202, 3, 1, 0,
]);

const workdir = rootDir("build/tests/qjsbootstrap-bytecode");

beforeEach(() => {
  rm("-rf", workdir);
  mkdir("-p", workdir);
});

test("qjsbootstrap-bytecode - can execute bytecode", async () => {
  const prog = path.join(workdir, "myprog");
  cp(binDir("qjsbootstrap-bytecode"), prog);
  fs.appendFileSync(prog, bytecode);

  const run2 = spawn(prog, { argv0: "myprog" });
  await run2.completion;
  expect(run2.result).toMatchInlineSnapshot(`
    {
      "code": 0,
      "error": false,
      "stderr": "",
      "stdout": "4
    ",
    }
  `);
});
