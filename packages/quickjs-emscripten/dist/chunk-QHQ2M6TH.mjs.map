{"version":3,"sources":["../src/variants.ts"],"sourcesContent":["import {\n  QuickJSSyncVariant,\n  QuickJSAsyncVariant,\n  newQuickJSWASMModuleFromVariant,\n  newQuickJSAsyncWASMModuleFromVariant,\n  QuickJSWASMModule,\n  QuickJSAsyncWASMModule,\n} from \"quickjs-emscripten-core\"\nimport DEBUG_SYNC from \"quickjs-emscripten/variants/debug\"\nimport RELEASE_SYNC from \"quickjs-emscripten/variants/release\"\nimport DEBUG_ASYNC from \"quickjs-emscripten/variants/debug-asyncify\"\nimport RELEASE_ASYNC from \"quickjs-emscripten/variants/release-asyncify\"\n\n/**\n * Create a new, completely isolated WebAssembly module containing the QuickJS library.\n * See the documentation on [[QuickJSWASMModule]].\n *\n * Note that there is a hard limit on the number of WebAssembly modules in older\n * versions of v8:\n * https://bugs.chromium.org/p/v8/issues/detail?id=12076\n */\nexport async function newQuickJSWASMModule(\n  /**\n   * Optionally, pass a {@link SyncBuildVariant} to construct a different WebAssembly module.\n   */\n  variant: QuickJSSyncVariant = RELEASE_SYNC\n): Promise<QuickJSWASMModule> {\n  return newQuickJSWASMModuleFromVariant(variant)\n}\n\n/**\n * Create a new, completely isolated WebAssembly module containing a version of the QuickJS library\n * compiled with Emscripten's [ASYNCIFY](https://emscripten.org/docs/porting/asyncify.html) transform.\n *\n * This version of the library offers features that enable synchronous code\n * inside the VM to interact with asynchronous code in the host environment.\n * See the documentation on [[QuickJSAsyncWASMModule]], [[QuickJSAsyncRuntime]],\n * and [[QuickJSAsyncContext]].\n *\n * Note that there is a hard limit on the number of WebAssembly modules in older\n * versions of v8:\n * https://bugs.chromium.org/p/v8/issues/detail?id=12076\n */\nexport async function newQuickJSAsyncWASMModule(\n  /**\n   * Optionally, pass a {@link AsyncBuildVariant} to construct a different WebAssembly module.\n   */\n  variant: QuickJSAsyncVariant = RELEASE_ASYNC\n): Promise<QuickJSAsyncWASMModule> {\n  return newQuickJSAsyncWASMModuleFromVariant(variant)\n}\n\nexport { DEBUG_SYNC, RELEASE_SYNC, DEBUG_ASYNC, RELEASE_ASYNC }\n"],"mappings":";AAAA;AAAA,EAGE;AAAA,EACA;AAAA,OAGK;AACP,OAAO,gBAAgB;AACvB,OAAO,kBAAkB;AACzB,OAAO,iBAAiB;AACxB,OAAO,mBAAmB;AAU1B,eAAsB,qBAIpB,UAA8B,cACF;AAC5B,SAAO,gCAAgC,OAAO;AAChD;AAeA,eAAsB,0BAIpB,UAA+B,eACE;AACjC,SAAO,qCAAqC,OAAO;AACrD;","names":[]}