/*
 * Copyright 2019 Hippo Seven
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.util.zip.CRC32

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId 'com.hippo.quickjs.android.test'
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 1
        versionName '1.0'
        externalNativeBuild {
            cmake {
                arguments '-DCMAKE_VERBOSE_MAKEFILE:BOOL=ON'
            }
        }
    }

    sourceSets {
        main.assets.srcDirs += 'testassets'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }
}

task bundleTestAssets(type: Zip) {
    doFirst {
        delete "${projectDir}/testassets"
        file("${projectDir}/testassets").mkdirs()
    }

    from "${rootProject.projectDir}/quickjs/quickjs"
    exclude '**/*.c', '**/*.h'
    archiveName "testassets.zip"
    destinationDir file("${projectDir}/testassets")

    doLast {
        File testassets = file("${projectDir}/testassets/testassets.zip")
        CRC32 crc32 = new CRC32()
        testassets.eachByte 4096, { bytes, size ->
            crc32.update(bytes, 0, size)
        }
        new File("${projectDir}/testassets/testassets-${crc32.getValue()}.crc32").createNewFile()
    }
}

project.afterEvaluate {
    generateDebugAssets.dependsOn 'bundleTestAssets'
    generateReleaseAssets.dependsOn 'bundleTestAssets'
    externalNativeBuildDebug.dependsOn ':quickjs:patchQuickJS'
    externalNativeBuildRelease.dependsOn ':quickjs:patchQuickJS'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0-RC'
    implementation 'net.lingala.zip4j:zip4j:1.3.2'
    implementation 'com.getkeepsafe.relinker:relinker:1.3.1'
}
