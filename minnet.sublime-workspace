{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Minner",
				"MinnetRingbuffer"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"LWS_GENHASH_",
				"LWS_GENHASH_TYPE_SHA256"
			],
			[
				"LWS_GEN",
				"LWS_GENHASH_TYPE_SHA256"
			],
			[
				"JS_NewArra",
				"JS_NewArrayBufferCopy"
			],
			[
				"cons",
				"constructor"
			],
			[
				"i",
				"is_dir"
			],
			[
				"getText",
				"getTextArray"
			],
			[
				"Lin",
				"LinearTransform"
			],
			[
				"CURL_LIB",
				"CURL_LIBRARY_DEBUG"
			],
			[
				"Circ",
				"CircuitJS"
			],
			[
				"dep",
				"dependency"
			],
			[
				"opt",
				"optimization"
			],
			[
				"OPENCV_LIB",
				"OPENCV_LIBRARIES"
			],
			[
				"getOwn",
				"getOwnPropertyNames(...)"
			],
			[
				"relat",
				"relativeTo"
			],
			[
				"max",
				"maxLineGap"
			],
			[
				"Pm_Op",
				"Pm_OpenInput"
			],
			[
				"Pm_Get",
				"Pm_GetDeviceInfo"
			],
			[
				"getOwnProp",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"getMem",
				"getMemberEntries"
			],
			[
				"break",
				"breakLength"
			],
			[
				"from",
				"fromCodePoint(...)"
			],
			[
				"Res",
				"ResizeHandler"
			],
			[
				"COLOR",
				"COLOR_BGR2Lab"
			],
			[
				"JS_SetP",
				"JS_SetPropertyFunctionList"
			],
			[
				"inspe",
				"inspectOptions"
			],
			[
				"Sin",
				"SingleLineComment"
			],
			[
				"use",
				"useAsyncIterator_1"
			],
			[
				"high",
				"highlight"
			],
			[
				"hig",
				"highlight"
			],
			[
				"useDe",
				"useDebouncedCallback"
			],
			[
				"preac",
				"preactComponent"
			],
			[
				"modul",
				"module_loader_func"
			],
			[
				"mod",
				"module_loader_func"
			],
			[
				"jsm_mo",
				"jsm_module_record"
			],
			[
				"jsm_mod",
				"jsm_module_record"
			],
			[
				"jsm_com",
				"jsm_compiled_modules"
			],
			[
				"QUICKJS_IN",
				"QUICKJS_INCLUDE_DIR"
			],
			[
				"QUICKJS_SOU",
				"QUICKJS_SOURCES_ROOT"
			],
			[
				"Po",
				"PortableFileSystem"
			],
			[
				"JS_EVAL",
				"JS_EVAL_TYPE_MODULE"
			],
			[
				"CPACK",
				"CPACK_PACKAGE_VERSION_MAJOR"
			],
			[
				"CPACK_PACK",
				"CPACK_PACKAGE_VERSION"
			],
			[
				"align_",
				"align_value_attr"
			],
			[
				"histo",
				"historySearch"
			],
			[
				"mouse",
				"mousetrackingDisable"
			],
			[
				"library",
				"libraryNames"
			],
			[
				"setMax",
				"setMaxListeners"
			],
			[
				"Portable",
				"PortableFileSystem"
			],
			[
				"Get",
				"GetRange"
			],
			[
				"Minn",
				"MinnetHttpRequest"
			],
			[
				"Des",
				"DeserializeEntries"
			],
			[
				"define",
				"defineProperties(...)"
			],
			[
				"Deseria",
				"DeserializeEntries"
			],
			[
				"De",
				"DeserializeEntries"
			],
			[
				"Eve",
				"EventEmitter"
			],
			[
				"PATH_",
				"PATH_FNM_NOMATCH"
			],
			[
				"PATH_FNM_NO",
				"PATH_FNM_NOESCAPE"
			],
			[
				"asyn",
				"asyncIterator"
			],
			[
				"RPC",
				"RPCClientConnection"
			],
			[
				"Const",
				"Constants"
			],
			[
				"Impo",
				"ImportSpecifier"
			],
			[
				"Export",
				"ExportNamedDeclaration"
			],
			[
				"Imm",
				"ImmutableTranslation"
			],
			[
				"elem",
				"elementTransform"
			],
			[
				"minn",
				"minnet_ws_class_id"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"getOw",
				"getOwnPropertySymbols(...)"
			],
			[
				"Minnet",
				"MinnetWebsocket"
			],
			[
				"Message",
				"MessageTransceiver"
			],
			[
				"corr",
				"CorrelateSchematicAndBoard"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"getProp",
				"getPropertyDescriptors"
			],
			[
				"getO",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"get",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"toArra",
				"toArrayBuffer"
			],
			[
				"codePo",
				"codePointAt"
			],
			[
				"print",
				"print_status"
			],
			[
				"tty",
				"ttySetRaw"
			],
			[
				"variable",
				"variablesReference"
			],
			[
				"variables",
				"variablesReference"
			],
			[
				"JSIn",
				"JSInputArray"
			],
			[
				"keypoin",
				"keypoint_proto"
			],
			[
				"lws_call",
				"lws_callback_http_dummy"
			],
			[
				"utf",
				"utf8_first_code_mask"
			],
			[
				"length",
				"history_length"
			],
			[
				"Array",
				"ArrayBufferToString"
			],
			[
				"JSMo",
				"JSModuleLoaderFunc"
			],
			[
				"JS",
				"JSVideoWriterData"
			],
			[
				"D",
				"DebuggerProtocol"
			],
			[
				"Debu",
				"DebuggerProtocol"
			],
			[
				"descripto",
				"descriptor_channels"
			],
			[
				"descript",
				"descriptorExtractor"
			],
			[
				"pattern",
				"patternScale"
			],
			[
				"n",
				"nOctaves"
			],
			[
				"nO",
				"nOctaves"
			],
			[
				"quali",
				"quality_level"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"Feat",
				"Feature2D"
			],
			[
				"PROP_DESCRIPTOR_",
				"PROP_DESCRIPTOR_TYPE"
			],
			[
				"js_feat",
				"js_feature2d_data"
			],
			[
				"js_key",
				"js_keypoint_export"
			],
			[
				"x",
				"xfeatures2d"
			],
			[
				"JSInput",
				"JSInputOutputArray"
			],
			[
				"JS_NewArray",
				"JS_NewArrayBufferCopy"
			],
			[
				"Rota",
				"RotatedRect"
			],
			[
				"js_rotated",
				"js_rotated_rect_new"
			],
			[
				"getOwnP",
				"getOwnPropertyNames"
			],
			[
				"PROP_Y",
				"PROP_YINTERCEPT"
			],
			[
				"PROP_X",
				"PROP_XINTERCEPT"
			],
			[
				"RE",
				"RETURN_PATH"
			],
			[
				"insp",
				"inspectSymbol"
			],
			[
				"contour",
				"contour_proto"
			],
			[
				"dst",
				"dst_pts"
			],
			[
				"CXX_",
				"CXX_STANDARD_VALUE"
			],
			[
				"process",
				"processor_or_index"
			],
			[
				"proces",
				"processor_or_index"
			],
			[
				"w",
				"width"
			],
			[
				"FUNC_TO",
				"FUNC_TOARRAY"
			],
			[
				"JSInpu",
				"JSInputOutputArray"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"typed",
				"typedarray_ctor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"depe",
				"dependent_scope_decl_ref_expr"
			],
			[
				"com",
				"compound_stmt"
			],
			[
				"CXXConstruc",
				"CXXConstructorDecl"
			],
			[
				"refere",
				"referencedDecl"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "—Ⓕ– generator_zero ( ) { … } — function\n—Ⓕ– generator_destroy ( ) { … } — function\n—Ⓕ– generator_free ( ) { … } — function\n—Ⓕ– generator_new ( ) { … } — function\n—Ⓕ– generator_next ( ) { … } — function\n—Ⓕ– generator_write ( ) { … } — function\n—Ⓕ– generator_close ( ) { … } — function\n—Ⓕ– generator_queue ( ) { … } — function\n—Ⓕ– minnet_generator_iterator ( ) { … } — function\n—Ⓕ– minnet_generator_next ( ) { … } — function\n—Ⓕ– minnet_generator_create ( ) { … } — function",
			"settings":
			{
				"buffer_size": 471,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					430,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								807,
								820
							],
							[
								1166,
								1172
							],
							[
								1689,
								1704
							],
							[
								2299,
								2313
							],
							[
								2467,
								2479
							],
							[
								2590,
								2601
							],
							[
								2753,
								2764
							],
							[
								3186,
								3194
							],
							[
								3281,
								3291
							],
							[
								3420,
								3427
							],
							[
								3565,
								3571
							],
							[
								3659,
								3669
							],
							[
								3995,
								4005
							],
							[
								4872,
								4886
							],
							[
								5120,
								5137
							],
							[
								5714,
								5728
							],
							[
								6361,
								6378
							],
							[
								8037,
								8051
							],
							[
								8695,
								8709
							],
							[
								9353,
								9368
							],
							[
								10529,
								10542
							],
							[
								13078,
								13091
							],
							[
								13438,
								13459
							],
							[
								14643,
								14662
							]
						],
						"symlist":
						[
							"—Ⓕ– minnet_ws_new ( ) { … } — function",
							"—Ⓕ– ws_new ( ) { … } — function",
							"—Ⓕ– opaque_clear_rt ( ) { … } — function",
							"—Ⓕ– opaque_free_rt ( ) { … } — function",
							"—Ⓕ– opaque_clear ( ) { … } — function",
							"—Ⓕ– opaque_free ( ) { … } — function",
							"—Ⓕ– ws_clear_rt ( ) { … } — function",
							"—Ⓕ– ws_clear ( ) { … } — function",
							"—Ⓕ– ws_free_rt ( ) { … } — function",
							"—Ⓕ– ws_free ( ) { … } — function",
							"—Ⓕ– ws_dup ( ) { … } — function",
							"—Ⓕ– opaque_new ( ) { … } — function",
							"—Ⓕ– lws_opaque ( ) { … } — function",
							"—Ⓕ– minnet_ws_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ws_fromwsi ( ) { … } — function",
							"—Ⓕ– minnet_ws_send ( ) { … } — function",
							"—Ⓕ– minnet_ws_respond ( ) { … } — function",
							"—Ⓕ– minnet_ws_ping ( ) { … } — function",
							"—Ⓕ– minnet_ws_pong ( ) { … } — function",
							"—Ⓕ– minnet_ws_close ( ) { … } — function",
							"—Ⓕ– minnet_ws_get ( ) { … } — function",
							"—Ⓕ– minnet_ws_set ( ) { … } — function",
							"—Ⓕ– minnet_ws_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ws_finalizer ( ) { … } — function"
						]
					},
					"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",
					"AQAAAAAAAAAAAAAA"
				],
				[
					431,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-buffer.h",
						"symkeys":
						[
							[
								32,
								47
							],
							[
								218,
								229
							],
							[
								240,
								250
							],
							[
								294,
								305
							],
							[
								335,
								344
							],
							[
								372,
								383
							],
							[
								440,
								450
							],
							[
								493,
								504
							],
							[
								549,
								562
							],
							[
								603,
								613
							],
							[
								645,
								666
							],
							[
								711,
								730
							],
							[
								766,
								780
							],
							[
								840,
								852
							],
							[
								961,
								971
							],
							[
								1108,
								1118
							],
							[
								1350,
								1362
							],
							[
								1373,
								1379
							],
							[
								1549,
								1557
							],
							[
								1620,
								1628
							],
							[
								1759,
								1771
							],
							[
								1818,
								1830
							],
							[
								1879,
								1892
							],
							[
								1940,
								1951
							],
							[
								1997,
								2008
							],
							[
								2053,
								2065
							],
							[
								2098,
								2110
							],
							[
								2147,
								2157
							],
							[
								2192,
								2203
							],
							[
								2240,
								2251
							],
							[
								2298,
								2309
							],
							[
								2353,
								2365
							],
							[
								2410,
								2423
							],
							[
								2482,
								2493
							],
							[
								2527,
								2539
							],
							[
								2581,
								2595
							],
							[
								2638,
								2651
							],
							[
								2695,
								2709
							],
							[
								2750,
								2772
							],
							[
								2819,
								2835
							],
							[
								2886,
								2901
							],
							[
								2943,
								2956
							],
							[
								3016,
								3030
							],
							[
								3070,
								3086
							],
							[
								3122,
								3142
							],
							[
								3179,
								3204
							],
							[
								3258,
								3269
							],
							[
								3310,
								3322
							],
							[
								3381,
								3392
							],
							[
								3422,
								3436
							],
							[
								3472,
								3483
							],
							[
								3509,
								3520
							],
							[
								3590,
								3602
							]
						],
						"symlist":
						[
							" Ⓜ  MINNET_BUFFER_H … — macro object",
							" Ⓣ  MinnetBytes ; — typedef",
							"—Ⓜ– block_SIZE ( ) … — macro function",
							"—Ⓜ– block_BEGIN ( ) … — macro function",
							"—Ⓜ– block_END ( ) … — macro function",
							"—Ⓜ– block_ALLOC ( ) … — macro function",
							"—Ⓕ– block_init ( ) { … } — function",
							"—Ⓕ– block_alloc ( ) { … } — function",
							"—Ⓕ– block_realloc ( ) { … } — function",
							"—Ⓕ– block_free ( ) { … } — function",
							"—Ⓕ– block_fromarraybuffer ( ) { … } — function",
							"—Ⓕ– block_toarraybuffer ( ) { … } — function",
							"—Ⓕ– block_tostring ( ) { … } — function",
							"—Ⓕ– block_fromjs ( ) { … } — function",
							"—Ⓕ– block_grow ( ) { … } — function",
							"—Ⓕ– block_move ( ) { … } — function",
							" Ⓣ  MinnetBuffer ; — typedef",
							"—Ⓜ– BUFFER ( ) … — macro function",
							"—Ⓜ– BUFFER_0 ( ) … — macro function",
							"—Ⓜ– BUFFER_N ( ) … — macro function",
							"—Ⓜ– buffer_AVAIL ( ) … — macro function",
							"—Ⓜ– buffer_BYTES ( ) … — macro function",
							"—Ⓜ– buffer_REMAIN ( ) … — macro function",
							"—Ⓜ– buffer_HEAD ( ) … — macro function",
							"—Ⓜ– buffer_TAIL ( ) … — macro function",
							"—Ⓜ– buffer_ALLOC ( ) … — macro function",
							"—Ⓜ– buffer_BEGIN ( ) … — macro function",
							"—Ⓜ– buffer_END ( ) … — macro function",
							"—Ⓜ– buffer_SIZE ( ) … — macro function",
							"—Ⓜ– buffer_zero ( ) … — macro function",
							"—Ⓕ– buffer_init ( ) { … } — function",
							"—Ⓕ– buffer_alloc ( ) { … } — function",
							"—Ⓕ– buffer_append ( ) { … } — function",
							"—Ⓕ– buffer_free ( ) { … } — function",
							"—Ⓕ– buffer_write ( ) { … } — function",
							"—Ⓕ– buffer_vprintf ( ) { … } — function",
							"—Ⓕ– buffer_printf ( ) { … } — function",
							"—Ⓕ– buffer_realloc ( ) { … } — function",
							"—Ⓕ– buffer_fromarraybuffer ( ) { … } — function",
							"—Ⓕ– buffer_fromvalue ( ) { … } — function",
							"—Ⓕ– buffer_tostring ( ) { … } — function",
							"—Ⓕ– buffer_escape ( ) { … } — function",
							"—Ⓕ– buffer_escaped ( ) { … } — function",
							"—Ⓕ– buffer_finalizer ( ) { … } — function",
							"—Ⓕ– buffer_toarraybuffer ( ) { … } — function",
							"—Ⓕ– buffer_toarraybuffer_size ( ) { … } — function",
							"—Ⓕ– buffer_dump ( ) { … } — function",
							"—Ⓕ– buffer_clone ( ) { … } — function",
							"—Ⓕ– buffer_skip ( ) { … } — function",
							"—Ⓕ– buffer_putchar ( ) { … } — function",
							"—Ⓕ– buffer_move ( ) { … } — function",
							"—Ⓕ– buffer_grow ( ) { … } — function",
							"—Ⓕ– buffer_reset ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACPBAAA4oCU4pK74oCTIG1pbm5ldF93c19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvcGFxdWVfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvcGFxdWVfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG9wYXF1ZV9jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG9wYXF1ZV9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgb3BhcXVlX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGx3c19vcGFxdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3Nfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19mcm9td3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3NlbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19waW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3BvbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xvc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAQCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					432,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
						"symkeys":
						[
							[
								350,
								370
							],
							[
								723,
								740
							],
							[
								1267,
								1292
							],
							[
								1666,
								1687
							],
							[
								2437,
								2455
							],
							[
								2624,
								2647
							],
							[
								2989,
								3007
							],
							[
								3267,
								3279
							],
							[
								4319,
								4328
							],
							[
								6325,
								6335
							],
							[
								7514,
								7526
							],
							[
								8162,
								8172
							],
							[
								8434,
								8453
							],
							[
								10601,
								10610
							],
							[
								10789,
								10799
							],
							[
								12319,
								12339
							],
							[
								13781,
								13801
							],
							[
								15662,
								15682
							]
						],
						"symlist":
						[
							"—Ⓕ– vhost_options_create ( ) { … } — function",
							"—Ⓕ– vhost_options_new ( ) { … } — function",
							"—Ⓕ– vhost_options_fromentries ( ) { … } — function",
							"—Ⓕ– vhost_options_fromobj ( ) { … } — function",
							"—Ⓕ– vhost_options_dump ( ) { … } — function",
							"—Ⓕ– vhost_options_free_list ( ) { … } — function",
							"—Ⓕ– vhost_options_free ( ) { … } — function",
							"—Ⓕ– mount_create ( ) { … } — function",
							"—Ⓕ– mount_new ( ) { … } — function",
							"—Ⓕ– mount_find ( ) { … } — function",
							"—Ⓕ– mount_find_s ( ) { … } — function",
							"—Ⓕ– mount_free ( ) { … } — function",
							"—Ⓕ– http_server_respond ( ) { … } — function",
							"—Ⓕ– file_size ( ) { … } — function",
							"—Ⓕ– serve_file ( ) { … } — function",
							"—Ⓕ– http_server_writable ( ) { … } — function",
							"—Ⓕ– http_server_generate ( ) { … } — function",
							"—Ⓕ– http_server_callback ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAASCgAAICAg4pOCICBNSU5ORVRfQlVGRkVSX0gg4oCmIOKAlCBtYWNybyBvYmplY3QKICAg4pOJICBNaW5uZXRCeXRlcyA7IOKAlCB0eXBlZGVmCuKAlOKTguKAkyBibG9ja19TSVpFICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBibG9ja19CRUdJTiAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYmxvY2tfRU5EICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBibG9ja19BTExPQyAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTikrvigJMgYmxvY2tfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJsb2NrX2FsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvY2tfcmVhbGxvYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJsb2NrX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja19mcm9tYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja190b2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvY2tfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja19mcm9tanMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja19ncm93ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvY2tfbW92ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICAg4pOJICBNaW5uZXRCdWZmZXIgOyDigJQgdHlwZWRlZgrigJTik4LigJMgQlVGRkVSICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBCVUZGRVJfMCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgQlVGRkVSX04gKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGJ1ZmZlcl9BVkFJTCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYnVmZmVyX0JZVEVTICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfUkVNQUlOICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfSEVBRCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYnVmZmVyX1RBSUwgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGJ1ZmZlcl9BTExPQyAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYnVmZmVyX0JFR0lOICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfRU5EICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfU0laRSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYnVmZmVyX3plcm8gKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX2FsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX2FwcGVuZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3ZwcmludGYgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfcHJpbnRmICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3JlYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfZnJvbWFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX2Zyb212YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl90b3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9lc2NhcGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfZXNjYXBlZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfdG9hcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl90b2FycmF5YnVmZmVyX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9jbG9uZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9za2lwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3B1dGNoYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfbW92ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9ncm93ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3Jlc2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAA+AIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					433,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								807,
								820
							],
							[
								1166,
								1172
							],
							[
								1689,
								1704
							],
							[
								2299,
								2313
							],
							[
								2467,
								2479
							],
							[
								2590,
								2601
							],
							[
								2753,
								2764
							],
							[
								3186,
								3194
							],
							[
								3281,
								3291
							],
							[
								3420,
								3427
							],
							[
								3565,
								3571
							],
							[
								3659,
								3669
							],
							[
								3995,
								4005
							],
							[
								4872,
								4886
							],
							[
								5120,
								5137
							],
							[
								5714,
								5728
							],
							[
								6361,
								6378
							],
							[
								8037,
								8051
							],
							[
								8695,
								8709
							],
							[
								9353,
								9368
							],
							[
								10529,
								10542
							],
							[
								13078,
								13091
							],
							[
								13438,
								13459
							],
							[
								14643,
								14662
							]
						],
						"symlist":
						[
							"—Ⓕ– minnet_ws_new ( ) { … } — function",
							"—Ⓕ– ws_new ( ) { … } — function",
							"—Ⓕ– opaque_clear_rt ( ) { … } — function",
							"—Ⓕ– opaque_free_rt ( ) { … } — function",
							"—Ⓕ– opaque_clear ( ) { … } — function",
							"—Ⓕ– opaque_free ( ) { … } — function",
							"—Ⓕ– ws_clear_rt ( ) { … } — function",
							"—Ⓕ– ws_clear ( ) { … } — function",
							"—Ⓕ– ws_free_rt ( ) { … } — function",
							"—Ⓕ– ws_free ( ) { … } — function",
							"—Ⓕ– ws_dup ( ) { … } — function",
							"—Ⓕ– opaque_new ( ) { … } — function",
							"—Ⓕ– lws_opaque ( ) { … } — function",
							"—Ⓕ– minnet_ws_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ws_fromwsi ( ) { … } — function",
							"—Ⓕ– minnet_ws_send ( ) { … } — function",
							"—Ⓕ– minnet_ws_respond ( ) { … } — function",
							"—Ⓕ– minnet_ws_ping ( ) { … } — function",
							"—Ⓕ– minnet_ws_pong ( ) { … } — function",
							"—Ⓕ– minnet_ws_close ( ) { … } — function",
							"—Ⓕ– minnet_ws_get ( ) { … } — function",
							"—Ⓕ– minnet_ws_set ( ) { … } — function",
							"—Ⓕ– minnet_ws_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ws_finalizer ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACsAwAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2Zyb21lbnRyaWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19mcmVlX2xpc3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZmluZF9zICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfc2VydmVyX3Jlc3BvbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmaWxlX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXJ2ZV9maWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9zZXJ2ZXJfd3JpdGFibGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3NlcnZlcl9nZW5lcmF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfc2VydmVyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAnwMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					436,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								807,
								820
							],
							[
								1166,
								1172
							],
							[
								1689,
								1704
							],
							[
								2299,
								2313
							],
							[
								2467,
								2479
							],
							[
								2590,
								2601
							],
							[
								2753,
								2764
							],
							[
								3186,
								3194
							],
							[
								3281,
								3291
							],
							[
								3420,
								3427
							],
							[
								3565,
								3571
							],
							[
								3659,
								3669
							],
							[
								3995,
								4005
							],
							[
								4872,
								4886
							],
							[
								5120,
								5137
							],
							[
								5714,
								5728
							],
							[
								6360,
								6377
							],
							[
								8036,
								8050
							],
							[
								8694,
								8708
							],
							[
								9352,
								9367
							],
							[
								10528,
								10541
							],
							[
								13077,
								13090
							],
							[
								13437,
								13458
							],
							[
								14642,
								14661
							]
						],
						"symlist":
						[
							"—Ⓕ– minnet_ws_new ( ) { … } — function",
							"—Ⓕ– ws_new ( ) { … } — function",
							"—Ⓕ– opaque_clear_rt ( ) { … } — function",
							"—Ⓕ– opaque_free_rt ( ) { … } — function",
							"—Ⓕ– opaque_clear ( ) { … } — function",
							"—Ⓕ– opaque_free ( ) { … } — function",
							"—Ⓕ– ws_clear_rt ( ) { … } — function",
							"—Ⓕ– ws_clear ( ) { … } — function",
							"—Ⓕ– ws_free_rt ( ) { … } — function",
							"—Ⓕ– ws_free ( ) { … } — function",
							"—Ⓕ– ws_dup ( ) { … } — function",
							"—Ⓕ– opaque_new ( ) { … } — function",
							"—Ⓕ– lws_opaque ( ) { … } — function",
							"—Ⓕ– minnet_ws_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ws_fromwsi ( ) { … } — function",
							"—Ⓕ– minnet_ws_send ( ) { … } — function",
							"—Ⓕ– minnet_ws_respond ( ) { … } — function",
							"—Ⓕ– minnet_ws_ping ( ) { … } — function",
							"—Ⓕ– minnet_ws_pong ( ) { … } — function",
							"—Ⓕ– minnet_ws_close ( ) { … } — function",
							"—Ⓕ– minnet_ws_get ( ) { … } — function",
							"—Ⓕ– minnet_ws_set ( ) { … } — function",
							"—Ⓕ– minnet_ws_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ws_finalizer ( ) { … } — function"
						]
					},
					"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"
				],
				[
					437,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								807,
								820
							],
							[
								1166,
								1172
							],
							[
								1689,
								1704
							],
							[
								2299,
								2313
							],
							[
								2467,
								2479
							],
							[
								2590,
								2601
							],
							[
								2753,
								2764
							],
							[
								3186,
								3194
							],
							[
								3281,
								3291
							],
							[
								3420,
								3427
							],
							[
								3565,
								3571
							],
							[
								3659,
								3669
							],
							[
								3995,
								4005
							],
							[
								4872,
								4886
							],
							[
								5120,
								5137
							],
							[
								5714,
								5728
							],
							[
								6360,
								6377
							],
							[
								8036,
								8050
							],
							[
								8694,
								8708
							],
							[
								9352,
								9367
							],
							[
								10528,
								10541
							],
							[
								13077,
								13090
							],
							[
								13437,
								13458
							],
							[
								14642,
								14661
							]
						],
						"symlist":
						[
							"—Ⓕ– minnet_ws_new ( ) { … } — function",
							"—Ⓕ– ws_new ( ) { … } — function",
							"—Ⓕ– opaque_clear_rt ( ) { … } — function",
							"—Ⓕ– opaque_free_rt ( ) { … } — function",
							"—Ⓕ– opaque_clear ( ) { … } — function",
							"—Ⓕ– opaque_free ( ) { … } — function",
							"—Ⓕ– ws_clear_rt ( ) { … } — function",
							"—Ⓕ– ws_clear ( ) { … } — function",
							"—Ⓕ– ws_free_rt ( ) { … } — function",
							"—Ⓕ– ws_free ( ) { … } — function",
							"—Ⓕ– ws_dup ( ) { … } — function",
							"—Ⓕ– opaque_new ( ) { … } — function",
							"—Ⓕ– lws_opaque ( ) { … } — function",
							"—Ⓕ– minnet_ws_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ws_fromwsi ( ) { … } — function",
							"—Ⓕ– minnet_ws_send ( ) { … } — function",
							"—Ⓕ– minnet_ws_respond ( ) { … } — function",
							"—Ⓕ– minnet_ws_ping ( ) { … } — function",
							"—Ⓕ– minnet_ws_pong ( ) { … } — function",
							"—Ⓕ– minnet_ws_close ( ) { … } — function",
							"—Ⓕ– minnet_ws_get ( ) { … } — function",
							"—Ⓕ– minnet_ws_set ( ) { … } — function",
							"—Ⓕ– minnet_ws_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ws_finalizer ( ) { … } — function"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACPBAAA4oCU4pK74oCTIG1pbm5ldF93c19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvcGFxdWVfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvcGFxdWVfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG9wYXF1ZV9jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG9wYXF1ZV9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgb3BhcXVlX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGx3c19vcGFxdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3Nfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19mcm9td3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3NlbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19waW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3BvbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xvc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAACfAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjwQAAOKAlOKSu+KAkyBtaW5uZXRfd3NfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgb3BhcXVlX2NsZWFyX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgb3BhcXVlX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvcGFxdWVfY2xlYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvcGFxdWVfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2NsZWFyX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2xlYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19mcmVlX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2R1cCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG9wYXF1ZV9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBsd3Nfb3BhcXVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3dyYXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19zZW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3Jlc3BvbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfcGluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19wb25nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX2Nsb3NlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAnwMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					442,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								807,
								820
							],
							[
								1166,
								1172
							],
							[
								1688,
								1703
							],
							[
								2298,
								2312
							],
							[
								2466,
								2478
							],
							[
								2589,
								2600
							],
							[
								2752,
								2763
							],
							[
								3185,
								3193
							],
							[
								3280,
								3290
							],
							[
								3419,
								3426
							],
							[
								3564,
								3570
							],
							[
								3658,
								3668
							],
							[
								3994,
								4004
							],
							[
								4871,
								4885
							],
							[
								5119,
								5136
							],
							[
								5713,
								5727
							],
							[
								6359,
								6376
							],
							[
								8035,
								8049
							],
							[
								8693,
								8707
							],
							[
								9351,
								9366
							],
							[
								10527,
								10540
							],
							[
								13076,
								13089
							],
							[
								13436,
								13457
							],
							[
								14641,
								14660
							]
						],
						"symlist":
						[
							"—Ⓕ– minnet_ws_new ( ) { … } — function",
							"—Ⓕ– ws_new ( ) { … } — function",
							"—Ⓕ– opaque_clear_rt ( ) { … } — function",
							"—Ⓕ– opaque_free_rt ( ) { … } — function",
							"—Ⓕ– opaque_clear ( ) { … } — function",
							"—Ⓕ– opaque_free ( ) { … } — function",
							"—Ⓕ– ws_clear_rt ( ) { … } — function",
							"—Ⓕ– ws_clear ( ) { … } — function",
							"—Ⓕ– ws_free_rt ( ) { … } — function",
							"—Ⓕ– ws_free ( ) { … } — function",
							"—Ⓕ– ws_dup ( ) { … } — function",
							"—Ⓕ– opaque_new ( ) { … } — function",
							"—Ⓕ– lws_opaque ( ) { … } — function",
							"—Ⓕ– minnet_ws_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ws_fromwsi ( ) { … } — function",
							"—Ⓕ– minnet_ws_send ( ) { … } — function",
							"—Ⓕ– minnet_ws_respond ( ) { … } — function",
							"—Ⓕ– minnet_ws_ping ( ) { … } — function",
							"—Ⓕ– minnet_ws_pong ( ) { … } — function",
							"—Ⓕ– minnet_ws_close ( ) { … } — function",
							"—Ⓕ– minnet_ws_get ( ) { … } — function",
							"—Ⓕ– minnet_ws_set ( ) { … } — function",
							"—Ⓕ– minnet_ws_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ws_finalizer ( ) { … } — function"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACPBAAA4oCU4pK74oCTIG1pbm5ldF93c19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvcGFxdWVfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvcGFxdWVfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG9wYXF1ZV9jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG9wYXF1ZV9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgb3BhcXVlX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGx3c19vcGFxdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3Nfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19mcm9td3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3NlbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19waW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3BvbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xvc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAACfAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjwQAAOKAlOKSu+KAkyBtaW5uZXRfd3NfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgb3BhcXVlX2NsZWFyX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgb3BhcXVlX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvcGFxdWVfY2xlYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvcGFxdWVfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2NsZWFyX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2xlYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19mcmVlX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2R1cCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG9wYXF1ZV9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBsd3Nfb3BhcXVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3dyYXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19zZW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3Jlc3BvbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfcGluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19wb25nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX2Nsb3NlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAnwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQAAAAAAAAAzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					443,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
						"symkeys":
						[
							[
								207,
								227
							],
							[
								298,
								316
							],
							[
								341,
								352
							]
						],
						"symlist":
						[
							"—Ⓕ– http_server_callback ( ) { … } — function",
							"—Ⓕ– lws_hdr_simple_ptr ( ) { … } — function",
							"—Ⓕ– ws_callback ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACPBAAA4oCU4pK74oCTIG1pbm5ldF93c19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvcGFxdWVfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvcGFxdWVfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG9wYXF1ZV9jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG9wYXF1ZV9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgb3BhcXVlX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGx3c19vcGFxdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3Nfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19mcm9td3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3NlbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19waW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3BvbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xvc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAB+AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					444,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								807,
								820
							],
							[
								1166,
								1172
							],
							[
								1688,
								1703
							],
							[
								2298,
								2312
							],
							[
								2466,
								2478
							],
							[
								2589,
								2600
							],
							[
								2752,
								2763
							],
							[
								3185,
								3193
							],
							[
								3280,
								3290
							],
							[
								3419,
								3426
							],
							[
								3564,
								3570
							],
							[
								3658,
								3668
							],
							[
								3994,
								4004
							],
							[
								4871,
								4885
							],
							[
								5119,
								5136
							],
							[
								5713,
								5727
							],
							[
								6359,
								6376
							],
							[
								8035,
								8049
							],
							[
								8693,
								8707
							],
							[
								9351,
								9366
							],
							[
								10527,
								10540
							],
							[
								13076,
								13089
							],
							[
								13436,
								13457
							],
							[
								14641,
								14660
							]
						],
						"symlist":
						[
							"—Ⓕ– minnet_ws_new ( ) { … } — function",
							"—Ⓕ– ws_new ( ) { … } — function",
							"—Ⓕ– opaque_clear_rt ( ) { … } — function",
							"—Ⓕ– opaque_free_rt ( ) { … } — function",
							"—Ⓕ– opaque_clear ( ) { … } — function",
							"—Ⓕ– opaque_free ( ) { … } — function",
							"—Ⓕ– ws_clear_rt ( ) { … } — function",
							"—Ⓕ– ws_clear ( ) { … } — function",
							"—Ⓕ– ws_free_rt ( ) { … } — function",
							"—Ⓕ– ws_free ( ) { … } — function",
							"—Ⓕ– ws_dup ( ) { … } — function",
							"—Ⓕ– opaque_new ( ) { … } — function",
							"—Ⓕ– lws_opaque ( ) { … } — function",
							"—Ⓕ– minnet_ws_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ws_fromwsi ( ) { … } — function",
							"—Ⓕ– minnet_ws_send ( ) { … } — function",
							"—Ⓕ– minnet_ws_respond ( ) { … } — function",
							"—Ⓕ– minnet_ws_ping ( ) { … } — function",
							"—Ⓕ– minnet_ws_pong ( ) { … } — function",
							"—Ⓕ– minnet_ws_close ( ) { … } — function",
							"—Ⓕ– minnet_ws_get ( ) { … } — function",
							"—Ⓕ– minnet_ws_set ( ) { … } — function",
							"—Ⓕ– minnet_ws_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ws_finalizer ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACcAAAA4oCU4pK74oCTIGh0dHBfc2VydmVyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzX2hkcl9zaW1wbGVfcHRyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAACfAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					445,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAACPBAAA4oCU4pK74oCTIG1pbm5ldF93c19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvcGFxdWVfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvcGFxdWVfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG9wYXF1ZV9jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG9wYXF1ZV9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgb3BhcXVlX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGx3c19vcGFxdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3Nfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19mcm9td3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3NlbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19waW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3BvbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xvc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					446,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-ringbuffer.c",
						"symkeys":
						[
							[
								248,
								263
							],
							[
								485,
								511
							],
							[
								536,
								551
							],
							[
								946,
								960
							],
							[
								1113,
								1129
							],
							[
								1322,
								1337
							],
							[
								1527,
								1544
							],
							[
								1789,
								1807
							],
							[
								2049,
								2064
							],
							[
								2298,
								2313
							],
							[
								2419,
								2434
							],
							[
								2555,
								2571
							],
							[
								2684,
								2699
							],
							[
								2812,
								2827
							],
							[
								2930,
								2959
							],
							[
								4269,
								4290
							],
							[
								4627,
								4649
							],
							[
								5026,
								5047
							],
							[
								6009,
								6035
							],
							[
								6163,
								6185
							],
							[
								6791,
								6818
							]
						],
						"symlist":
						[
							"—Ⓕ– ringbuffer_dump ( ) { … } — function",
							"—Ⓕ– ringbuffer_destroy_element ( ) { … } — function",
							"—Ⓕ– ringbuffer_init ( ) { … } — function",
							"—Ⓕ– ringbuffer_new ( ) { … } — function",
							"—Ⓕ– ringbuffer_init2 ( ) { … } — function",
							"—Ⓕ– ringbuffer_new2 ( ) { … } — function",
							"—Ⓕ– ringbuffer_insert ( ) { … } — function",
							"—Ⓕ– ringbuffer_consume ( ) { … } — function",
							"—Ⓕ– ringbuffer_skip ( ) { … } — function",
							"—Ⓕ– ringbuffer_next ( ) { … } — function",
							"—Ⓕ– ringbuffer_size ( ) { … } — function",
							"—Ⓕ– ringbuffer_avail ( ) { … } — function",
							"—Ⓕ– ringbuffer_zero ( ) { … } — function",
							"—Ⓕ– ringbuffer_free ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_new ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_get ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_iterator ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_next ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_finalizer ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAArAMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					451,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-ringbuffer.c",
						"symkeys":
						[
							[
								248,
								263
							],
							[
								485,
								511
							],
							[
								539,
								554
							],
							[
								940,
								954
							],
							[
								1107,
								1123
							],
							[
								1316,
								1331
							],
							[
								1521,
								1538
							],
							[
								1783,
								1801
							],
							[
								2043,
								2058
							],
							[
								2292,
								2307
							],
							[
								2413,
								2428
							],
							[
								2549,
								2565
							],
							[
								2678,
								2693
							],
							[
								2806,
								2821
							],
							[
								2924,
								2953
							],
							[
								4263,
								4284
							],
							[
								4621,
								4643
							],
							[
								5020,
								5041
							],
							[
								6003,
								6029
							],
							[
								6157,
								6179
							],
							[
								6785,
								6812
							]
						],
						"symlist":
						[
							"—Ⓕ– ringbuffer_dump ( ) { … } — function",
							"—Ⓕ– ringbuffer_destroy_element ( ) { … } — function",
							"—Ⓕ– ringbuffer_init ( ) { … } — function",
							"—Ⓕ– ringbuffer_new ( ) { … } — function",
							"—Ⓕ– ringbuffer_init2 ( ) { … } — function",
							"—Ⓕ– ringbuffer_new2 ( ) { … } — function",
							"—Ⓕ– ringbuffer_insert ( ) { … } — function",
							"—Ⓕ– ringbuffer_consume ( ) { … } — function",
							"—Ⓕ– ringbuffer_skip ( ) { … } — function",
							"—Ⓕ– ringbuffer_next ( ) { … } — function",
							"—Ⓕ– ringbuffer_size ( ) { … } — function",
							"—Ⓕ– ringbuffer_avail ( ) { … } — function",
							"—Ⓕ– ringbuffer_zero ( ) { … } — function",
							"—Ⓕ– ringbuffer_free ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_new ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_get ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_iterator ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_next ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_finalizer ( ) { … } — function"
						]
					},
					"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IHJpbmdidWZmZXJfYXZhaWwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yaW5nYnVmZmVyX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yaW5nYnVmZmVyX3dyYXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9nZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9pdGVyYXRvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yaW5nYnVmZmVyX25leHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAACsAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQAAAAAAAAA5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					452,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-ringbuffer.c",
						"symkeys":
						[
							[
								248,
								263
							],
							[
								485,
								511
							],
							[
								539,
								554
							],
							[
								940,
								954
							],
							[
								1107,
								1123
							],
							[
								1316,
								1331
							],
							[
								1521,
								1538
							],
							[
								1783,
								1801
							],
							[
								2043,
								2058
							],
							[
								2292,
								2307
							],
							[
								2413,
								2428
							],
							[
								2549,
								2565
							],
							[
								2678,
								2693
							],
							[
								2806,
								2821
							],
							[
								2924,
								2953
							],
							[
								4263,
								4284
							],
							[
								4621,
								4643
							],
							[
								5020,
								5041
							],
							[
								6003,
								6029
							],
							[
								6157,
								6179
							],
							[
								6785,
								6812
							]
						],
						"symlist":
						[
							"—Ⓕ– ringbuffer_dump ( ) { … } — function",
							"—Ⓕ– ringbuffer_destroy_element ( ) { … } — function",
							"—Ⓕ– ringbuffer_init ( ) { … } — function",
							"—Ⓕ– ringbuffer_new ( ) { … } — function",
							"—Ⓕ– ringbuffer_init2 ( ) { … } — function",
							"—Ⓕ– ringbuffer_new2 ( ) { … } — function",
							"—Ⓕ– ringbuffer_insert ( ) { … } — function",
							"—Ⓕ– ringbuffer_consume ( ) { … } — function",
							"—Ⓕ– ringbuffer_skip ( ) { … } — function",
							"—Ⓕ– ringbuffer_next ( ) { … } — function",
							"—Ⓕ– ringbuffer_size ( ) { … } — function",
							"—Ⓕ– ringbuffer_avail ( ) { … } — function",
							"—Ⓕ– ringbuffer_zero ( ) { … } — function",
							"—Ⓕ– ringbuffer_free ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_new ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_get ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_iterator ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_next ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_finalizer ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB+BAAA4oCU4pK74oCTIHJpbmdidWZmZXJfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfZGVzdHJveV9lbGVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2luaXQyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9uZXcyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9pbnNlcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2NvbnN1bWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX3NraXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX25leHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2F2YWlsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl96ZXJvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl93cmFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfaXRlcmF0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAArAMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					453,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-buffer.h",
						"symkeys":
						[
							[
								32,
								47
							],
							[
								218,
								229
							],
							[
								240,
								250
							],
							[
								294,
								305
							],
							[
								335,
								344
							],
							[
								372,
								383
							],
							[
								440,
								450
							],
							[
								493,
								504
							],
							[
								549,
								562
							],
							[
								603,
								613
							],
							[
								645,
								666
							],
							[
								711,
								730
							],
							[
								766,
								780
							],
							[
								840,
								852
							],
							[
								962,
								972
							],
							[
								1109,
								1119
							],
							[
								1351,
								1363
							],
							[
								1374,
								1380
							],
							[
								1550,
								1558
							],
							[
								1621,
								1629
							],
							[
								1760,
								1772
							],
							[
								1819,
								1831
							],
							[
								1880,
								1893
							],
							[
								1941,
								1952
							],
							[
								1998,
								2009
							],
							[
								2054,
								2066
							],
							[
								2099,
								2111
							],
							[
								2148,
								2158
							],
							[
								2193,
								2204
							],
							[
								2241,
								2252
							],
							[
								2299,
								2310
							],
							[
								2354,
								2366
							],
							[
								2411,
								2424
							],
							[
								2483,
								2494
							],
							[
								2528,
								2540
							],
							[
								2582,
								2596
							],
							[
								2639,
								2652
							],
							[
								2696,
								2710
							],
							[
								2751,
								2773
							],
							[
								2820,
								2836
							],
							[
								2887,
								2902
							],
							[
								2944,
								2957
							],
							[
								3017,
								3031
							],
							[
								3071,
								3087
							],
							[
								3123,
								3143
							],
							[
								3180,
								3205
							],
							[
								3259,
								3270
							],
							[
								3311,
								3323
							],
							[
								3382,
								3393
							],
							[
								3423,
								3437
							],
							[
								3473,
								3484
							],
							[
								3510,
								3521
							],
							[
								3591,
								3603
							]
						],
						"symlist":
						[
							" Ⓜ  MINNET_BUFFER_H … — macro object",
							" Ⓣ  MinnetBytes ; — typedef",
							"—Ⓜ– block_SIZE ( ) … — macro function",
							"—Ⓜ– block_BEGIN ( ) … — macro function",
							"—Ⓜ– block_END ( ) … — macro function",
							"—Ⓜ– block_ALLOC ( ) … — macro function",
							"—Ⓕ– block_init ( ) { … } — function",
							"—Ⓕ– block_alloc ( ) { … } — function",
							"—Ⓕ– block_realloc ( ) { … } — function",
							"—Ⓕ– block_free ( ) { … } — function",
							"—Ⓕ– block_fromarraybuffer ( ) { … } — function",
							"—Ⓕ– block_toarraybuffer ( ) { … } — function",
							"—Ⓕ– block_tostring ( ) { … } — function",
							"—Ⓕ– block_fromjs ( ) { … } — function",
							"—Ⓕ– block_grow ( ) { … } — function",
							"—Ⓕ– block_move ( ) { … } — function",
							" Ⓣ  MinnetBuffer ; — typedef",
							"—Ⓜ– BUFFER ( ) … — macro function",
							"—Ⓜ– BUFFER_0 ( ) … — macro function",
							"—Ⓜ– BUFFER_N ( ) … — macro function",
							"—Ⓜ– buffer_AVAIL ( ) … — macro function",
							"—Ⓜ– buffer_BYTES ( ) … — macro function",
							"—Ⓜ– buffer_REMAIN ( ) … — macro function",
							"—Ⓜ– buffer_HEAD ( ) … — macro function",
							"—Ⓜ– buffer_TAIL ( ) … — macro function",
							"—Ⓜ– buffer_ALLOC ( ) … — macro function",
							"—Ⓜ– buffer_BEGIN ( ) … — macro function",
							"—Ⓜ– buffer_END ( ) … — macro function",
							"—Ⓜ– buffer_SIZE ( ) … — macro function",
							"—Ⓜ– buffer_zero ( ) … — macro function",
							"—Ⓕ– buffer_init ( ) { … } — function",
							"—Ⓕ– buffer_alloc ( ) { … } — function",
							"—Ⓕ– buffer_append ( ) { … } — function",
							"—Ⓕ– buffer_free ( ) { … } — function",
							"—Ⓕ– buffer_write ( ) { … } — function",
							"—Ⓕ– buffer_vprintf ( ) { … } — function",
							"—Ⓕ– buffer_printf ( ) { … } — function",
							"—Ⓕ– buffer_realloc ( ) { … } — function",
							"—Ⓕ– buffer_fromarraybuffer ( ) { … } — function",
							"—Ⓕ– buffer_fromvalue ( ) { … } — function",
							"—Ⓕ– buffer_tostring ( ) { … } — function",
							"—Ⓕ– buffer_escape ( ) { … } — function",
							"—Ⓕ– buffer_escaped ( ) { … } — function",
							"—Ⓕ– buffer_finalizer ( ) { … } — function",
							"—Ⓕ– buffer_toarraybuffer ( ) { … } — function",
							"—Ⓕ– buffer_toarraybuffer_size ( ) { … } — function",
							"—Ⓕ– buffer_dump ( ) { … } — function",
							"—Ⓕ– buffer_clone ( ) { … } — function",
							"—Ⓕ– buffer_skip ( ) { … } — function",
							"—Ⓕ– buffer_putchar ( ) { … } — function",
							"—Ⓕ– buffer_move ( ) { … } — function",
							"—Ⓕ– buffer_grow ( ) { … } — function",
							"—Ⓕ– buffer_reset ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB+BAAA4oCU4pK74oCTIHJpbmdidWZmZXJfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfZGVzdHJveV9lbGVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2luaXQyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9uZXcyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9pbnNlcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2NvbnN1bWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX3NraXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX25leHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2F2YWlsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl96ZXJvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl93cmFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfaXRlcmF0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAEAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					454,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/jsutils.h",
						"symkeys":
						[
							[
								33,
								49
							],
							[
								355,
								368
							],
							[
								430,
								442
							],
							[
								615,
								623
							],
							[
								634,
								651
							],
							[
								704,
								715
							],
							[
								755,
								764
							],
							[
								965,
								981
							],
							[
								991,
								1003
							],
							[
								1123,
								1130
							],
							[
								1217,
								1230
							],
							[
								1336,
								1343
							],
							[
								1444,
								1451
							],
							[
								1872,
								1880
							],
							[
								2226,
								2235
							],
							[
								2428,
								2440
							],
							[
								2457,
								2469
							],
							[
								2526,
								2547
							],
							[
								2591,
								2610
							],
							[
								2653,
								2667
							],
							[
								2733,
								2750
							],
							[
								2861,
								2877
							],
							[
								2954,
								2972
							],
							[
								3035,
								3056
							],
							[
								3128,
								3144
							],
							[
								3190,
								3206
							],
							[
								3306,
								3324
							],
							[
								3394,
								3408
							],
							[
								3470,
								3483
							],
							[
								3526,
								3538
							],
							[
								3586,
								3599
							],
							[
								3668,
								3683
							],
							[
								3714,
								3729
							],
							[
								3772,
								3786
							],
							[
								3825,
								3839
							],
							[
								3876,
								3890
							],
							[
								3931,
								3945
							],
							[
								3988,
								4009
							],
							[
								4053,
								4075
							],
							[
								4119,
								4133
							],
							[
								4159,
								4172
							],
							[
								4216,
								4228
							],
							[
								4254,
								4263
							],
							[
								4307,
								4321
							],
							[
								4374,
								4389
							],
							[
								4432,
								4445
							],
							[
								4466,
								4483
							],
							[
								4595,
								4612
							],
							[
								4665,
								4681
							],
							[
								4718,
								4733
							],
							[
								4781,
								4799
							],
							[
								4847,
								4861
							],
							[
								4919,
								4930
							],
							[
								4976,
								4985
							],
							[
								5085,
								5102
							],
							[
								5153,
								5171
							],
							[
								5242,
								5259
							],
							[
								5327,
								5342
							],
							[
								5374,
								5392
							],
							[
								5430,
								5445
							],
							[
								5483,
								5496
							],
							[
								5542,
								5554
							],
							[
								5603,
								5615
							],
							[
								5678,
								5701
							],
							[
								5762,
								5786
							],
							[
								5848,
								5873
							],
							[
								5931,
								5949
							],
							[
								6020,
								6034
							],
							[
								6065,
								6077
							],
							[
								6115,
								6129
							],
							[
								6173,
								6189
							],
							[
								6231,
								6252
							],
							[
								6296,
								6317
							],
							[
								6358,
								6372
							],
							[
								6418,
								6433
							],
							[
								6478,
								6494
							],
							[
								6552,
								6573
							],
							[
								6616,
								6632
							],
							[
								6728,
								6744
							],
							[
								6792,
								6808
							],
							[
								6859,
								6876
							],
							[
								6931,
								6948
							],
							[
								6988,
								7003
							],
							[
								7050,
								7064
							],
							[
								7111,
								7124
							],
							[
								7178,
								7195
							],
							[
								7238,
								7252
							],
							[
								7295,
								7311
							],
							[
								7354,
								7369
							],
							[
								7427,
								7435
							],
							[
								7587,
								7601
							],
							[
								7979,
								7991
							],
							[
								8202,
								8219
							],
							[
								8467,
								8480
							],
							[
								8577,
								8599
							],
							[
								8842,
								8857
							],
							[
								8931,
								8944
							],
							[
								9083,
								9092
							],
							[
								9181,
								9190
							],
							[
								9295,
								9308
							],
							[
								9316,
								9334
							],
							[
								9360,
								9379
							],
							[
								9430,
								9447
							],
							[
								9473,
								9491
							],
							[
								9533,
								9560
							],
							[
								9602,
								9621
							],
							[
								9682,
								9706
							],
							[
								9768,
								9786
							],
							[
								9848,
								9869
							],
							[
								9932,
								9949
							]
						],
						"symlist":
						[
							" Ⓜ  MINNET_JSUTILS_H … — macro object",
							" Ⓣ  JSThreadState ; — typedef",
							" Ⓣ  OffsetLength ; — typedef",
							" Ⓣ  JSBuffer ; — typedef",
							"—Ⓜ– JS_BUFFER_DEFAULT ( ) … — macro function",
							"—Ⓜ– JS_BUFFER_0 ( ) … — macro function",
							"—Ⓜ– JS_BUFFER ( ) … — macro function",
							" Ⓣ  ResolveFunctions ; — typedef",
							"TimerClosure",
							"—Ⓕ– ol_init ( ) { … } — function",
							"—Ⓕ– ol_is_default ( ) { … } — function",
							"—Ⓕ– ol_data ( ) { … } — function",
							"—Ⓕ– ol_size ( ) { … } — function",
							"—Ⓕ– ol_slice ( ) { … } — function",
							"—Ⓕ– ol_offset ( ) { … } — function",
							" Ⓜ  JS_BIND_THIS … — macro object",
							"—Ⓕ– vector2array ( ) { … } — function",
							"—Ⓕ– js_object_constructor ( ) { … } — function",
							"—Ⓕ– js_object_classname ( ) { … } — function",
							"—Ⓕ– js_console_log ( ) { … } — function",
							"—Ⓕ– js_function_bound ( ) { … } — function",
							"—Ⓕ– js_function_bind ( ) { … } — function",
							"—Ⓕ– js_function_bind_1 ( ) { … } — function",
							"—Ⓕ– js_function_bind_this ( ) { … } — function",
							"—Ⓕ– js_function_name ( ) { … } — function",
							"—Ⓕ– js_iterator_next ( ) { … } — function",
							"—Ⓕ– js_copy_properties ( ) { … } — function",
							"—Ⓕ– js_buffer_from ( ) { … } — function",
							"—Ⓕ– js_buffer_new ( ) { … } — function",
							"—Ⓕ– js_buffer_to ( ) { … } — function",
							"—Ⓕ– js_buffer_to3 ( ) { … } — function",
							"—Ⓕ– js_buffer_valid ( ) { … } — function",
							"—Ⓕ– js_buffer_clone ( ) { … } — function",
							"—Ⓕ– js_buffer_dump ( ) { … } — function",
							"—Ⓕ– js_buffer_free ( ) { … } — function",
							"—Ⓕ– js_is_iterable ( ) { … } — function",
							"—Ⓕ– js_is_iterator ( ) { … } — function",
							"—Ⓕ– js_symbol_static_atom ( ) { … } — function",
							"—Ⓕ– js_symbol_static_value ( ) { … } — function",
							"—Ⓕ– js_symbol_ctor ( ) { … } — function",
							"—Ⓕ– js_global_get ( ) { … } — function",
							"—Ⓕ– js_global_os ( ) { … } — function",
							"—Ⓕ– js_os_get ( ) { … } — function",
							"—Ⓕ– js_timer_start ( ) { … } — function",
							"—Ⓕ– js_timer_cancel ( ) { … } — function",
							"—Ⓕ– js_timer_free ( ) { … } — function",
							"—Ⓕ– js_timer_callback ( ) { … } — function",
							"—Ⓕ– js_timer_interval ( ) { … } — function",
							"—Ⓕ– js_timer_restart ( ) { … } — function",
							"—Ⓕ– js_promise_free ( ) { … } — function",
							"—Ⓕ– js_promise_free_rt ( ) { … } — function",
							"—Ⓕ– js_tostringlen ( ) { … } — function",
							"—Ⓕ– js_tostring ( ) { … } — function",
							"—Ⓕ– js_invoke ( ) { … } — function",
							"—Ⓕ– js_promise_create ( ) { … } — function",
							"—Ⓕ– js_promise_resolve ( ) { … } — function",
							"—Ⓕ– js_promise_reject ( ) { … } — function",
							"—Ⓕ– js_promise_zero ( ) { … } — function",
							"—Ⓕ– js_promise_pending ( ) { … } — function",
							"—Ⓕ– js_promise_done ( ) { … } — function",
							"—Ⓕ– js_is_promise ( ) { … } — function",
							"—Ⓕ– js_error_new ( ) { … } — function",
							"—Ⓕ– js_toptrsize ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_bool ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_int64 ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_uint32 ( ) { … } — function",
							"—Ⓕ– js_has_propertystr ( ) { … } — function",
							"—Ⓕ– js_module_list ( ) { … } — function",
							"—Ⓕ– js_module_at ( ) { … } — function",
							"—Ⓕ– js_module_find ( ) { … } — function",
							"—Ⓕ– js_module_find_s ( ) { … } — function",
							"—Ⓕ– js_module_export_find ( ) { … } — function",
							"—Ⓕ– js_module_import_meta ( ) { … } — function",
							"—Ⓕ– js_error_print ( ) { … } — function",
							"—Ⓕ– js_array_length ( ) { … } — function",
							"—Ⓕ– js_array_to_argv ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_length ( ) { … } — function",
							"—Ⓕ– js_offset_length ( ) { … } — function",
							"—Ⓕ– js_argv_to_array ( ) { … } — function",
							"—Ⓕ– js_atom_is_index ( ) { … } — function",
							"—Ⓕ– js_atom_is_string ( ) { … } — function",
							"—Ⓕ– js_atom_is_length ( ) { … } — function",
							"—Ⓕ– js_input_buffer ( ) { … } — function",
							"—Ⓕ– js_input_chars ( ) { … } — function",
							"—Ⓕ– js_input_args ( ) { … } — function",
							"—Ⓕ– js_is_arraybuffer ( ) { … } — function",
							"—Ⓕ– js_is_dataview ( ) { … } — function",
							"—Ⓕ– js_is_typedarray ( ) { … } — function",
							"—Ⓕ– js_is_generator ( ) { … } — function",
							"—Ⓕ– js_clear ( ) { … } — function",
							"—Ⓕ– js_dump_string ( ) { … } — function",
							"—Ⓕ– js_to_string ( ) { … } — function",
							"—Ⓕ– js_replace_string ( ) { … } — function",
							"—Ⓕ– js_is_nullish ( ) { … } — function",
							"—Ⓕ– js_buffer_free_default ( ) { … } — function",
							"—Ⓕ– js_buffer_begin ( ) { … } — function",
							"—Ⓕ– js_buffer_end ( ) { … } — function",
							" Ⓣ  AsyncRead ; — typedef",
							" Ⓣ  ValueItem ; — typedef",
							" Ⓣ  AsyncIterator ; — typedef",
							"—Ⓕ– asynciterator_zero ( ) { … } — function",
							"—Ⓕ– asynciterator_clear ( ) { … } — function",
							"—Ⓕ– asynciterator_new ( ) { … } — function",
							"—Ⓕ– asynciterator_next ( ) { … } — function",
							"—Ⓕ– asynciterator_check_closing ( ) { … } — function",
							"—Ⓕ– asynciterator_yield ( ) { … } — function",
							"—Ⓕ– asynciterator_reject_all ( ) { … } — function",
							"—Ⓕ– asynciterator_stop ( ) { … } — function",
							"—Ⓕ– asynciterator_emplace ( ) { … } — function",
							"—Ⓕ– asynciterator_obj ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAASCgAAICAg4pOCICBNSU5ORVRfQlVGRkVSX0gg4oCmIOKAlCBtYWNybyBvYmplY3QKICAg4pOJICBNaW5uZXRCeXRlcyA7IOKAlCB0eXBlZGVmCuKAlOKTguKAkyBibG9ja19TSVpFICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBibG9ja19CRUdJTiAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYmxvY2tfRU5EICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBibG9ja19BTExPQyAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTikrvigJMgYmxvY2tfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJsb2NrX2FsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvY2tfcmVhbGxvYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJsb2NrX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja19mcm9tYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja190b2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvY2tfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja19mcm9tanMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja19ncm93ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvY2tfbW92ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICAg4pOJICBNaW5uZXRCdWZmZXIgOyDigJQgdHlwZWRlZgrigJTik4LigJMgQlVGRkVSICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBCVUZGRVJfMCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgQlVGRkVSX04gKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGJ1ZmZlcl9BVkFJTCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYnVmZmVyX0JZVEVTICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfUkVNQUlOICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfSEVBRCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYnVmZmVyX1RBSUwgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGJ1ZmZlcl9BTExPQyAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYnVmZmVyX0JFR0lOICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfRU5EICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfU0laRSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYnVmZmVyX3plcm8gKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX2FsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX2FwcGVuZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3ZwcmludGYgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfcHJpbnRmICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3JlYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfZnJvbWFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX2Zyb212YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl90b3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9lc2NhcGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfZXNjYXBlZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfdG9hcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl90b2FycmF5YnVmZmVyX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9jbG9uZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9za2lwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3B1dGNoYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfbW92ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9ncm93ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3Jlc2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAbBEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					455,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-buffer.h",
						"symkeys":
						[
							[
								32,
								47
							],
							[
								218,
								229
							],
							[
								240,
								250
							],
							[
								294,
								305
							],
							[
								335,
								344
							],
							[
								372,
								383
							],
							[
								440,
								450
							],
							[
								493,
								504
							],
							[
								549,
								562
							],
							[
								603,
								613
							],
							[
								645,
								666
							],
							[
								711,
								730
							],
							[
								766,
								780
							],
							[
								840,
								852
							],
							[
								962,
								972
							],
							[
								1109,
								1119
							],
							[
								1351,
								1363
							],
							[
								1374,
								1380
							],
							[
								1550,
								1558
							],
							[
								1621,
								1629
							],
							[
								1760,
								1772
							],
							[
								1819,
								1831
							],
							[
								1880,
								1893
							],
							[
								1941,
								1952
							],
							[
								1998,
								2009
							],
							[
								2054,
								2066
							],
							[
								2099,
								2111
							],
							[
								2148,
								2158
							],
							[
								2193,
								2204
							],
							[
								2241,
								2252
							],
							[
								2299,
								2310
							],
							[
								2354,
								2366
							],
							[
								2411,
								2424
							],
							[
								2483,
								2494
							],
							[
								2528,
								2540
							],
							[
								2582,
								2596
							],
							[
								2639,
								2652
							],
							[
								2696,
								2710
							],
							[
								2751,
								2773
							],
							[
								2820,
								2836
							],
							[
								2887,
								2902
							],
							[
								2944,
								2957
							],
							[
								3017,
								3031
							],
							[
								3071,
								3087
							],
							[
								3123,
								3143
							],
							[
								3180,
								3205
							],
							[
								3259,
								3270
							],
							[
								3311,
								3323
							],
							[
								3382,
								3393
							],
							[
								3423,
								3437
							],
							[
								3473,
								3484
							],
							[
								3510,
								3521
							],
							[
								3591,
								3603
							]
						],
						"symlist":
						[
							" Ⓜ  MINNET_BUFFER_H … — macro object",
							" Ⓣ  MinnetBytes ; — typedef",
							"—Ⓜ– block_SIZE ( ) … — macro function",
							"—Ⓜ– block_BEGIN ( ) … — macro function",
							"—Ⓜ– block_END ( ) … — macro function",
							"—Ⓜ– block_ALLOC ( ) … — macro function",
							"—Ⓕ– block_init ( ) { … } — function",
							"—Ⓕ– block_alloc ( ) { … } — function",
							"—Ⓕ– block_realloc ( ) { … } — function",
							"—Ⓕ– block_free ( ) { … } — function",
							"—Ⓕ– block_fromarraybuffer ( ) { … } — function",
							"—Ⓕ– block_toarraybuffer ( ) { … } — function",
							"—Ⓕ– block_tostring ( ) { … } — function",
							"—Ⓕ– block_fromjs ( ) { … } — function",
							"—Ⓕ– block_grow ( ) { … } — function",
							"—Ⓕ– block_move ( ) { … } — function",
							" Ⓣ  MinnetBuffer ; — typedef",
							"—Ⓜ– BUFFER ( ) … — macro function",
							"—Ⓜ– BUFFER_0 ( ) … — macro function",
							"—Ⓜ– BUFFER_N ( ) … — macro function",
							"—Ⓜ– buffer_AVAIL ( ) … — macro function",
							"—Ⓜ– buffer_BYTES ( ) … — macro function",
							"—Ⓜ– buffer_REMAIN ( ) … — macro function",
							"—Ⓜ– buffer_HEAD ( ) … — macro function",
							"—Ⓜ– buffer_TAIL ( ) … — macro function",
							"—Ⓜ– buffer_ALLOC ( ) … — macro function",
							"—Ⓜ– buffer_BEGIN ( ) … — macro function",
							"—Ⓜ– buffer_END ( ) … — macro function",
							"—Ⓜ– buffer_SIZE ( ) … — macro function",
							"—Ⓜ– buffer_zero ( ) … — macro function",
							"—Ⓕ– buffer_init ( ) { … } — function",
							"—Ⓕ– buffer_alloc ( ) { … } — function",
							"—Ⓕ– buffer_append ( ) { … } — function",
							"—Ⓕ– buffer_free ( ) { … } — function",
							"—Ⓕ– buffer_write ( ) { … } — function",
							"—Ⓕ– buffer_vprintf ( ) { … } — function",
							"—Ⓕ– buffer_printf ( ) { … } — function",
							"—Ⓕ– buffer_realloc ( ) { … } — function",
							"—Ⓕ– buffer_fromarraybuffer ( ) { … } — function",
							"—Ⓕ– buffer_fromvalue ( ) { … } — function",
							"—Ⓕ– buffer_tostring ( ) { … } — function",
							"—Ⓕ– buffer_escape ( ) { … } — function",
							"—Ⓕ– buffer_escaped ( ) { … } — function",
							"—Ⓕ– buffer_finalizer ( ) { … } — function",
							"—Ⓕ– buffer_toarraybuffer ( ) { … } — function",
							"—Ⓕ– buffer_toarraybuffer_size ( ) { … } — function",
							"—Ⓕ– buffer_dump ( ) { … } — function",
							"—Ⓕ– buffer_clone ( ) { … } — function",
							"—Ⓕ– buffer_skip ( ) { … } — function",
							"—Ⓕ– buffer_putchar ( ) { … } — function",
							"—Ⓕ– buffer_move ( ) { … } — function",
							"—Ⓕ– buffer_grow ( ) { … } — function",
							"—Ⓕ– buffer_reset ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB8FQAAICAg4pOCICBNSU5ORVRfSlNVVElMU19IIOKApiDigJQgbWFjcm8gb2JqZWN0CiAgIOKTiSAgSlNUaHJlYWRTdGF0ZSA7IOKAlCB0eXBlZGVmCiAgIOKTiSAgT2Zmc2V0TGVuZ3RoIDsg4oCUIHR5cGVkZWYKICAg4pOJICBKU0J1ZmZlciA7IOKAlCB0eXBlZGVmCuKAlOKTguKAkyBKU19CVUZGRVJfREVGQVVMVCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgSlNfQlVGRkVSXzAgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIEpTX0JVRkZFUiAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgogICDik4kgIFJlc29sdmVGdW5jdGlvbnMgOyDigJQgdHlwZWRlZgpUaW1lckNsb3N1cmUK4oCU4pK74oCTIG9sX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvbF9pc19kZWZhdWx0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgb2xfZGF0YSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG9sX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvbF9zbGljZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG9sX29mZnNldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICAg4pOCICBKU19CSU5EX1RISVMg4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIHZlY3RvcjJhcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29iamVjdF9jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29iamVjdF9jbGFzc25hbWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19jb25zb2xlX2xvZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Z1bmN0aW9uX2JvdW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZnVuY3Rpb25fYmluZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Z1bmN0aW9uX2JpbmRfMSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Z1bmN0aW9uX2JpbmRfdGhpcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Z1bmN0aW9uX25hbWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pdGVyYXRvcl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfY29weV9wcm9wZXJ0aWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYnVmZmVyX2Zyb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19idWZmZXJfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYnVmZmVyX3RvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYnVmZmVyX3RvMyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2J1ZmZlcl92YWxpZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2J1ZmZlcl9jbG9uZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2J1ZmZlcl9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYnVmZmVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pc19pdGVyYWJsZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2lzX2l0ZXJhdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3ltYm9sX3N0YXRpY19hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3ltYm9sX3N0YXRpY192YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N5bWJvbF9jdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZ2xvYmFsX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2dsb2JhbF9vcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29zX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3RpbWVyX3N0YXJ0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfdGltZXJfY2FuY2VsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfdGltZXJfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3RpbWVyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfdGltZXJfaW50ZXJ2YWwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc190aW1lcl9yZXN0YXJ0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcHJvbWlzZV9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcHJvbWlzZV9mcmVlX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfdG9zdHJpbmdsZW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc190b3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2ludm9rZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3Byb21pc2VfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcHJvbWlzZV9yZXNvbHZlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcHJvbWlzZV9yZWplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19wcm9taXNlX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19wcm9taXNlX3BlbmRpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19wcm9taXNlX2RvbmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pc19wcm9taXNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZXJyb3JfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfdG9wdHJzaXplICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZ2V0X3Byb3BlcnR5c3RyX2Jvb2wgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19nZXRfcHJvcGVydHlzdHJfaW50NjQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19nZXRfcHJvcGVydHlzdHJfdWludDMyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaGFzX3Byb3BlcnR5c3RyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbW9kdWxlX2xpc3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19tb2R1bGVfYXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19tb2R1bGVfZmluZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21vZHVsZV9maW5kX3MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19tb2R1bGVfZXhwb3J0X2ZpbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19tb2R1bGVfaW1wb3J0X21ldGEgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19lcnJvcl9wcmludCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2FycmF5X2xlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2FycmF5X3RvX2FyZ3YgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19hcnJheWJ1ZmZlcl9sZW5ndGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vZmZzZXRfbGVuZ3RoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYXJndl90b19hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2F0b21faXNfaW5kZXggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19hdG9tX2lzX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2F0b21faXNfbGVuZ3RoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5wdXRfYnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5wdXRfY2hhcnMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnB1dF9hcmdzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaXNfYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pc19kYXRhdmlldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2lzX3R5cGVkYXJyYXkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pc19nZW5lcmF0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2R1bXBfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfdG9fc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcmVwbGFjZV9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pc19udWxsaXNoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYnVmZmVyX2ZyZWVfZGVmYXVsdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2J1ZmZlcl9iZWdpbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2J1ZmZlcl9lbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCiAgIOKTiSAgQXN5bmNSZWFkIDsg4oCUIHR5cGVkZWYKICAg4pOJICBWYWx1ZUl0ZW0gOyDigJQgdHlwZWRlZgogICDik4kgIEFzeW5jSXRlcmF0b3IgOyDigJQgdHlwZWRlZgrigJTikrvigJMgYXN5bmNpdGVyYXRvcl96ZXJvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYXN5bmNpdGVyYXRvcl9jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFzeW5jaXRlcmF0b3JfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYXN5bmNpdGVyYXRvcl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYXN5bmNpdGVyYXRvcl9jaGVja19jbG9zaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYXN5bmNpdGVyYXRvcl95aWVsZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFzeW5jaXRlcmF0b3JfcmVqZWN0X2FsbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFzeW5jaXRlcmF0b3Jfc3RvcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFzeW5jaXRlcmF0b3JfZW1wbGFjZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFzeW5jaXRlcmF0b3Jfb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAEAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					456,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-buffer.h",
						"symkeys":
						[
							[
								32,
								47
							],
							[
								239,
								250
							],
							[
								261,
								271
							],
							[
								315,
								326
							],
							[
								356,
								365
							],
							[
								393,
								404
							],
							[
								461,
								471
							],
							[
								514,
								525
							],
							[
								570,
								583
							],
							[
								624,
								634
							],
							[
								666,
								687
							],
							[
								732,
								751
							],
							[
								787,
								801
							],
							[
								861,
								873
							],
							[
								983,
								993
							],
							[
								1130,
								1140
							],
							[
								1372,
								1384
							],
							[
								1395,
								1401
							],
							[
								1571,
								1579
							],
							[
								1642,
								1650
							],
							[
								1781,
								1793
							],
							[
								1840,
								1852
							],
							[
								1901,
								1914
							],
							[
								1962,
								1973
							],
							[
								2019,
								2030
							],
							[
								2075,
								2087
							],
							[
								2120,
								2132
							],
							[
								2169,
								2179
							],
							[
								2214,
								2225
							],
							[
								2262,
								2273
							],
							[
								2320,
								2331
							],
							[
								2375,
								2387
							],
							[
								2432,
								2445
							],
							[
								2504,
								2515
							],
							[
								2549,
								2561
							],
							[
								2603,
								2617
							],
							[
								2660,
								2673
							],
							[
								2717,
								2731
							],
							[
								2772,
								2794
							],
							[
								2841,
								2857
							],
							[
								2908,
								2923
							],
							[
								2965,
								2978
							],
							[
								3038,
								3052
							],
							[
								3092,
								3108
							],
							[
								3144,
								3164
							],
							[
								3201,
								3226
							],
							[
								3280,
								3291
							],
							[
								3332,
								3344
							],
							[
								3403,
								3414
							],
							[
								3444,
								3458
							],
							[
								3494,
								3505
							],
							[
								3531,
								3542
							],
							[
								3612,
								3624
							]
						],
						"symlist":
						[
							" Ⓜ  MINNET_BUFFER_H … — macro object",
							" Ⓣ  MinnetBytes ; — typedef",
							"—Ⓜ– block_SIZE ( ) … — macro function",
							"—Ⓜ– block_BEGIN ( ) … — macro function",
							"—Ⓜ– block_END ( ) … — macro function",
							"—Ⓜ– block_ALLOC ( ) … — macro function",
							"—Ⓕ– block_init ( ) { … } — function",
							"—Ⓕ– block_alloc ( ) { … } — function",
							"—Ⓕ– block_realloc ( ) { … } — function",
							"—Ⓕ– block_free ( ) { … } — function",
							"—Ⓕ– block_fromarraybuffer ( ) { … } — function",
							"—Ⓕ– block_toarraybuffer ( ) { … } — function",
							"—Ⓕ– block_tostring ( ) { … } — function",
							"—Ⓕ– block_fromjs ( ) { … } — function",
							"—Ⓕ– block_grow ( ) { … } — function",
							"—Ⓕ– block_move ( ) { … } — function",
							" Ⓣ  MinnetBuffer ; — typedef",
							"—Ⓜ– BUFFER ( ) … — macro function",
							"—Ⓜ– BUFFER_0 ( ) … — macro function",
							"—Ⓜ– BUFFER_N ( ) … — macro function",
							"—Ⓜ– buffer_AVAIL ( ) … — macro function",
							"—Ⓜ– buffer_BYTES ( ) … — macro function",
							"—Ⓜ– buffer_REMAIN ( ) … — macro function",
							"—Ⓜ– buffer_HEAD ( ) … — macro function",
							"—Ⓜ– buffer_TAIL ( ) … — macro function",
							"—Ⓜ– buffer_ALLOC ( ) … — macro function",
							"—Ⓜ– buffer_BEGIN ( ) … — macro function",
							"—Ⓜ– buffer_END ( ) … — macro function",
							"—Ⓜ– buffer_SIZE ( ) … — macro function",
							"—Ⓜ– buffer_zero ( ) … — macro function",
							"—Ⓕ– buffer_init ( ) { … } — function",
							"—Ⓕ– buffer_alloc ( ) { … } — function",
							"—Ⓕ– buffer_append ( ) { … } — function",
							"—Ⓕ– buffer_free ( ) { … } — function",
							"—Ⓕ– buffer_write ( ) { … } — function",
							"—Ⓕ– buffer_vprintf ( ) { … } — function",
							"—Ⓕ– buffer_printf ( ) { … } — function",
							"—Ⓕ– buffer_realloc ( ) { … } — function",
							"—Ⓕ– buffer_fromarraybuffer ( ) { … } — function",
							"—Ⓕ– buffer_fromvalue ( ) { … } — function",
							"—Ⓕ– buffer_tostring ( ) { … } — function",
							"—Ⓕ– buffer_escape ( ) { … } — function",
							"—Ⓕ– buffer_escaped ( ) { … } — function",
							"—Ⓕ– buffer_finalizer ( ) { … } — function",
							"—Ⓕ– buffer_toarraybuffer ( ) { … } — function",
							"—Ⓕ– buffer_toarraybuffer_size ( ) { … } — function",
							"—Ⓕ– buffer_dump ( ) { … } — function",
							"—Ⓕ– buffer_clone ( ) { … } — function",
							"—Ⓕ– buffer_skip ( ) { … } — function",
							"—Ⓕ– buffer_putchar ( ) { … } — function",
							"—Ⓕ– buffer_move ( ) { … } — function",
							"—Ⓕ– buffer_grow ( ) { … } — function",
							"—Ⓕ– buffer_reset ( ) { … } — function"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAASCgAAICAg4pOCICBNSU5ORVRfQlVGRkVSX0gg4oCmIOKAlCBtYWNybyBvYmplY3QKICAg4pOJICBNaW5uZXRCeXRlcyA7IOKAlCB0eXBlZGVmCuKAlOKTguKAkyBibG9ja19TSVpFICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBibG9ja19CRUdJTiAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYmxvY2tfRU5EICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBibG9ja19BTExPQyAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTikrvigJMgYmxvY2tfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJsb2NrX2FsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvY2tfcmVhbGxvYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJsb2NrX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja19mcm9tYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja190b2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvY2tfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja19mcm9tanMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja19ncm93ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvY2tfbW92ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICAg4pOJICBNaW5uZXRCdWZmZXIgOyDigJQgdHlwZWRlZgrigJTik4LigJMgQlVGRkVSICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBCVUZGRVJfMCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgQlVGRkVSX04gKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGJ1ZmZlcl9BVkFJTCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYnVmZmVyX0JZVEVTICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfUkVNQUlOICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfSEVBRCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYnVmZmVyX1RBSUwgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGJ1ZmZlcl9BTExPQyAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYnVmZmVyX0JFR0lOICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfRU5EICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfU0laRSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYnVmZmVyX3plcm8gKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX2FsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX2FwcGVuZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3ZwcmludGYgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfcHJpbnRmICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3JlYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfZnJvbWFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX2Zyb212YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl90b3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9lc2NhcGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfZXNjYXBlZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfdG9hcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl90b2FycmF5YnVmZmVyX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9jbG9uZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9za2lwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3B1dGNoYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfbW92ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9ncm93ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3Jlc2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAEAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIKAAAgICDik4IgIE1JTk5FVF9CVUZGRVJfSCDigKYg4oCUIG1hY3JvIG9iamVjdAogICDik4kgIE1pbm5ldEJ5dGVzIDsg4oCUIHR5cGVkZWYK4oCU4pOC4oCTIGJsb2NrX1NJWkUgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGJsb2NrX0JFR0lOICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBibG9ja19FTkQgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGJsb2NrX0FMTE9DICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja19pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvY2tfYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja19yZWFsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvY2tfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJsb2NrX2Zyb21hcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJsb2NrX3RvYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja190b3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJsb2NrX2Zyb21qcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJsb2NrX2dyb3cgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja19tb3ZlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogICDik4kgIE1pbm5ldEJ1ZmZlciA7IOKAlCB0eXBlZGVmCuKAlOKTguKAkyBCVUZGRVIgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIEJVRkZFUl8wICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBCVUZGRVJfTiAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYnVmZmVyX0FWQUlMICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfQllURVMgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGJ1ZmZlcl9SRU1BSU4gKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGJ1ZmZlcl9IRUFEICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfVEFJTCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYnVmZmVyX0FMTE9DICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfQkVHSU4gKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGJ1ZmZlcl9FTkQgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGJ1ZmZlcl9TSVpFICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfemVybyAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfYXBwZW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfd3JpdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfdnByaW50ZiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9wcmludGYgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfcmVhbGxvYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9mcm9tYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfZnJvbXZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3Rvc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX2VzY2FwZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9lc2NhcGVkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl90b2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3RvYXJyYXlidWZmZXJfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX2Nsb25lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3NraXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfcHV0Y2hhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9tb3ZlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX2dyb3cgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfcmVzZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAQCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					457,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-ringbuffer.c",
						"symkeys":
						[
							[
								248,
								263
							],
							[
								485,
								511
							],
							[
								536,
								551
							],
							[
								937,
								951
							],
							[
								1104,
								1120
							],
							[
								1313,
								1328
							],
							[
								1518,
								1535
							],
							[
								1780,
								1798
							],
							[
								2040,
								2055
							],
							[
								2289,
								2304
							],
							[
								2410,
								2425
							],
							[
								2546,
								2562
							],
							[
								2675,
								2690
							],
							[
								2803,
								2818
							],
							[
								2921,
								2950
							],
							[
								4260,
								4281
							],
							[
								4618,
								4640
							],
							[
								5017,
								5038
							],
							[
								6000,
								6026
							],
							[
								6154,
								6176
							],
							[
								6782,
								6809
							]
						],
						"symlist":
						[
							"—Ⓕ– ringbuffer_dump ( ) { … } — function",
							"—Ⓕ– ringbuffer_destroy_element ( ) { … } — function",
							"—Ⓕ– ringbuffer_init ( ) { … } — function",
							"—Ⓕ– ringbuffer_new ( ) { … } — function",
							"—Ⓕ– ringbuffer_init2 ( ) { … } — function",
							"—Ⓕ– ringbuffer_new2 ( ) { … } — function",
							"—Ⓕ– ringbuffer_insert ( ) { … } — function",
							"—Ⓕ– ringbuffer_consume ( ) { … } — function",
							"—Ⓕ– ringbuffer_skip ( ) { … } — function",
							"—Ⓕ– ringbuffer_next ( ) { … } — function",
							"—Ⓕ– ringbuffer_size ( ) { … } — function",
							"—Ⓕ– ringbuffer_avail ( ) { … } — function",
							"—Ⓕ– ringbuffer_zero ( ) { … } — function",
							"—Ⓕ– ringbuffer_free ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_new ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_get ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_iterator ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_next ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_finalizer ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAASCgAAICAg4pOCICBNSU5ORVRfQlVGRkVSX0gg4oCmIOKAlCBtYWNybyBvYmplY3QKICAg4pOJICBNaW5uZXRCeXRlcyA7IOKAlCB0eXBlZGVmCuKAlOKTguKAkyBibG9ja19TSVpFICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBibG9ja19CRUdJTiAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYmxvY2tfRU5EICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBibG9ja19BTExPQyAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTikrvigJMgYmxvY2tfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJsb2NrX2FsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvY2tfcmVhbGxvYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJsb2NrX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja19mcm9tYXJyYXlidWZmZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja190b2FycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvY2tfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja19mcm9tanMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBibG9ja19ncm93ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYmxvY2tfbW92ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICAg4pOJICBNaW5uZXRCdWZmZXIgOyDigJQgdHlwZWRlZgrigJTik4LigJMgQlVGRkVSICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBCVUZGRVJfMCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgQlVGRkVSX04gKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGJ1ZmZlcl9BVkFJTCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYnVmZmVyX0JZVEVTICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfUkVNQUlOICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfSEVBRCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYnVmZmVyX1RBSUwgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGJ1ZmZlcl9BTExPQyAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYnVmZmVyX0JFR0lOICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfRU5EICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBidWZmZXJfU0laRSAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTik4LigJMgYnVmZmVyX3plcm8gKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX2FsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX2FwcGVuZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3ZwcmludGYgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfcHJpbnRmICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3JlYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfZnJvbWFycmF5YnVmZmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX2Zyb212YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl90b3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9lc2NhcGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfZXNjYXBlZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfdG9hcnJheWJ1ZmZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl90b2FycmF5YnVmZmVyX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9jbG9uZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9za2lwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3B1dGNoYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBidWZmZXJfbW92ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1ZmZlcl9ncm93ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnVmZmVyX3Jlc2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAArAMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					458,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-ringbuffer.c",
						"symkeys":
						[
							[
								248,
								263
							],
							[
								485,
								511
							],
							[
								536,
								551
							],
							[
								933,
								947
							],
							[
								1100,
								1116
							],
							[
								1309,
								1324
							],
							[
								1514,
								1531
							],
							[
								1776,
								1794
							],
							[
								2036,
								2051
							],
							[
								2285,
								2300
							],
							[
								2406,
								2421
							],
							[
								2542,
								2558
							],
							[
								2671,
								2686
							],
							[
								2799,
								2814
							],
							[
								2917,
								2946
							],
							[
								4256,
								4277
							],
							[
								4614,
								4636
							],
							[
								5013,
								5034
							],
							[
								5996,
								6022
							],
							[
								6150,
								6172
							],
							[
								6778,
								6805
							]
						],
						"symlist":
						[
							"—Ⓕ– ringbuffer_dump ( ) { … } — function",
							"—Ⓕ– ringbuffer_destroy_element ( ) { … } — function",
							"—Ⓕ– ringbuffer_init ( ) { … } — function",
							"—Ⓕ– ringbuffer_new ( ) { … } — function",
							"—Ⓕ– ringbuffer_init2 ( ) { … } — function",
							"—Ⓕ– ringbuffer_new2 ( ) { … } — function",
							"—Ⓕ– ringbuffer_insert ( ) { … } — function",
							"—Ⓕ– ringbuffer_consume ( ) { … } — function",
							"—Ⓕ– ringbuffer_skip ( ) { … } — function",
							"—Ⓕ– ringbuffer_next ( ) { … } — function",
							"—Ⓕ– ringbuffer_size ( ) { … } — function",
							"—Ⓕ– ringbuffer_avail ( ) { … } — function",
							"—Ⓕ– ringbuffer_zero ( ) { … } — function",
							"—Ⓕ– ringbuffer_free ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_new ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_get ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_iterator ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_next ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_finalizer ( ) { … } — function"
						]
					},
					"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IHJpbmdidWZmZXJfYXZhaWwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yaW5nYnVmZmVyX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yaW5nYnVmZmVyX3dyYXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9nZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9pdGVyYXRvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yaW5nYnVmZmVyX25leHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAACsAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					459,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
						"symkeys":
						[
							[
								207,
								227
							],
							[
								298,
								316
							],
							[
								341,
								352
							]
						],
						"symlist":
						[
							"—Ⓕ– http_server_callback ( ) { … } — function",
							"—Ⓕ– lws_hdr_simple_ptr ( ) { … } — function",
							"—Ⓕ– ws_callback ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB+BAAA4oCU4pK74oCTIHJpbmdidWZmZXJfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfZGVzdHJveV9lbGVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2luaXQyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9uZXcyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9pbnNlcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2NvbnN1bWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX3NraXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX25leHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2F2YWlsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl96ZXJvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl93cmFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfaXRlcmF0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAfgAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					460,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
						"symkeys":
						[
							[
								207,
								227
							],
							[
								298,
								316
							],
							[
								341,
								352
							]
						],
						"symlist":
						[
							"—Ⓕ– http_server_callback ( ) { … } — function",
							"—Ⓕ– lws_hdr_simple_ptr ( ) { … } — function",
							"—Ⓕ– ws_callback ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACcAAAA4oCU4pK74oCTIGh0dHBfc2VydmVyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzX2hkcl9zaW1wbGVfcHRyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAB+AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					461,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACcAAAA4oCU4pK74oCTIGh0dHBfc2VydmVyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzX2hkcl9zaW1wbGVfcHRyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					462,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								807,
								820
							],
							[
								1166,
								1172
							],
							[
								1688,
								1703
							],
							[
								2298,
								2312
							],
							[
								2466,
								2478
							],
							[
								2589,
								2600
							],
							[
								2752,
								2763
							],
							[
								3185,
								3193
							],
							[
								3280,
								3290
							],
							[
								3419,
								3426
							],
							[
								3564,
								3570
							],
							[
								3658,
								3668
							],
							[
								3994,
								4004
							],
							[
								4871,
								4885
							],
							[
								5119,
								5136
							],
							[
								5713,
								5727
							],
							[
								6356,
								6373
							],
							[
								8032,
								8046
							],
							[
								8690,
								8704
							],
							[
								9348,
								9363
							],
							[
								10524,
								10537
							],
							[
								13073,
								13086
							],
							[
								13433,
								13454
							],
							[
								14638,
								14657
							]
						],
						"symlist":
						[
							"—Ⓕ– minnet_ws_new ( ) { … } — function",
							"—Ⓕ– ws_new ( ) { … } — function",
							"—Ⓕ– opaque_clear_rt ( ) { … } — function",
							"—Ⓕ– opaque_free_rt ( ) { … } — function",
							"—Ⓕ– opaque_clear ( ) { … } — function",
							"—Ⓕ– opaque_free ( ) { … } — function",
							"—Ⓕ– ws_clear_rt ( ) { … } — function",
							"—Ⓕ– ws_clear ( ) { … } — function",
							"—Ⓕ– ws_free_rt ( ) { … } — function",
							"—Ⓕ– ws_free ( ) { … } — function",
							"—Ⓕ– ws_dup ( ) { … } — function",
							"—Ⓕ– opaque_new ( ) { … } — function",
							"—Ⓕ– lws_opaque ( ) { … } — function",
							"—Ⓕ– minnet_ws_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ws_fromwsi ( ) { … } — function",
							"—Ⓕ– minnet_ws_send ( ) { … } — function",
							"—Ⓕ– minnet_ws_respond ( ) { … } — function",
							"—Ⓕ– minnet_ws_ping ( ) { … } — function",
							"—Ⓕ– minnet_ws_pong ( ) { … } — function",
							"—Ⓕ– minnet_ws_close ( ) { … } — function",
							"—Ⓕ– minnet_ws_get ( ) { … } — function",
							"—Ⓕ– minnet_ws_set ( ) { … } — function",
							"—Ⓕ– minnet_ws_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ws_finalizer ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAnwMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					463,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-response.h",
						"symkeys":
						[
							[
								34,
								51
							],
							[
								462,
								476
							],
							[
								484,
								499
							],
							[
								545,
								558
							],
							[
								588,
								601
							],
							[
								696,
								708
							],
							[
								743,
								760
							],
							[
								830,
								844
							],
							[
								905,
								919
							],
							[
								955,
								972
							],
							[
								1008,
								1021
							],
							[
								1057,
								1073
							],
							[
								1135,
								1153
							],
							[
								1303,
								1315
							],
							[
								1337,
								1356
							],
							[
								1440,
								1460
							],
							[
								1499,
								1526
							],
							[
								1575,
								1600
							],
							[
								1944,
								1964
							],
							[
								2072,
								2093
							]
						],
						"symlist":
						[
							" Ⓜ  MINNET_RESPONSE_H … — macro object",
							" Ⓣ  MinnetResponse ; — typedef",
							"—Ⓕ– response_format ( ) { … } — function",
							"—Ⓕ– response_dump ( ) { … } — function",
							"—Ⓕ– response_init ( ) { … } — function",
							"—Ⓕ– response_dup ( ) { … } — function",
							"—Ⓕ– response_redirect ( ) { … } — function",
							"—Ⓕ– response_write ( ) { … } — function",
							"—Ⓕ– response_clear ( ) { … } — function",
							"—Ⓕ– response_clear_rt ( ) { … } — function",
							"—Ⓕ– response_free ( ) { … } — function",
							"—Ⓕ– response_free_rt ( ) { … } — function",
							"—Ⓕ– response_generator ( ) { … } — function",
							"—Ⓕ– response_new ( ) { … } — function",
							"—Ⓕ– minnet_response_new ( ) { … } — function",
							"—Ⓕ– minnet_response_wrap ( ) { … } — function",
							"—Ⓕ– minnet_response_constructor ( ) { … } — function",
							"—Ⓕ– minnet_response_finalizer ( ) { … } — function",
							"—Ⓕ– minnet_response_data ( ) { … } — function",
							"—Ⓕ– minnet_response_data2 ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACPBAAA4oCU4pK74oCTIG1pbm5ldF93c19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvcGFxdWVfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvcGFxdWVfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG9wYXF1ZV9jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG9wYXF1ZV9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgb3BhcXVlX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGx3c19vcGFxdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3Nfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19mcm9td3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3NlbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19waW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3BvbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xvc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAABPAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					464,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-ringbuffer.c",
						"symkeys":
						[
							[
								248,
								263
							],
							[
								485,
								511
							],
							[
								536,
								551
							],
							[
								933,
								947
							],
							[
								1100,
								1116
							],
							[
								1309,
								1324
							],
							[
								1514,
								1531
							],
							[
								1776,
								1794
							],
							[
								2036,
								2051
							],
							[
								2285,
								2300
							],
							[
								2406,
								2421
							],
							[
								2542,
								2558
							],
							[
								2671,
								2686
							],
							[
								2799,
								2814
							],
							[
								2917,
								2946
							],
							[
								4256,
								4277
							],
							[
								4614,
								4636
							],
							[
								5013,
								5034
							],
							[
								5996,
								6022
							],
							[
								6150,
								6172
							],
							[
								6778,
								6805
							]
						],
						"symlist":
						[
							"—Ⓕ– ringbuffer_dump ( ) { … } — function",
							"—Ⓕ– ringbuffer_destroy_element ( ) { … } — function",
							"—Ⓕ– ringbuffer_init ( ) { … } — function",
							"—Ⓕ– ringbuffer_new ( ) { … } — function",
							"—Ⓕ– ringbuffer_init2 ( ) { … } — function",
							"—Ⓕ– ringbuffer_new2 ( ) { … } — function",
							"—Ⓕ– ringbuffer_insert ( ) { … } — function",
							"—Ⓕ– ringbuffer_consume ( ) { … } — function",
							"—Ⓕ– ringbuffer_skip ( ) { … } — function",
							"—Ⓕ– ringbuffer_next ( ) { … } — function",
							"—Ⓕ– ringbuffer_size ( ) { … } — function",
							"—Ⓕ– ringbuffer_avail ( ) { … } — function",
							"—Ⓕ– ringbuffer_zero ( ) { … } — function",
							"—Ⓕ– ringbuffer_free ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_new ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_get ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_iterator ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_next ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_finalizer ( ) { … } — function"
						]
					},
					"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cl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl93cmFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfaXRlcmF0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAArAMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					465,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-ringbuffer.c",
						"symkeys":
						[
							[
								248,
								263
							],
							[
								485,
								511
							],
							[
								536,
								551
							],
							[
								913,
								927
							],
							[
								1080,
								1096
							],
							[
								1289,
								1304
							],
							[
								1494,
								1511
							],
							[
								1756,
								1774
							],
							[
								2016,
								2031
							],
							[
								2265,
								2280
							],
							[
								2386,
								2401
							],
							[
								2522,
								2538
							],
							[
								2651,
								2666
							],
							[
								2779,
								2794
							],
							[
								2897,
								2926
							],
							[
								4236,
								4257
							],
							[
								4594,
								4616
							],
							[
								4993,
								5014
							],
							[
								5976,
								6002
							],
							[
								6130,
								6152
							],
							[
								6758,
								6785
							]
						],
						"symlist":
						[
							"—Ⓕ– ringbuffer_dump ( ) { … } — function",
							"—Ⓕ– ringbuffer_destroy_element ( ) { … } — function",
							"—Ⓕ– ringbuffer_init ( ) { … } — function",
							"—Ⓕ– ringbuffer_new ( ) { … } — function",
							"—Ⓕ– ringbuffer_init2 ( ) { … } — function",
							"—Ⓕ– ringbuffer_new2 ( ) { … } — function",
							"—Ⓕ– ringbuffer_insert ( ) { … } — function",
							"—Ⓕ– ringbuffer_consume ( ) { … } — function",
							"—Ⓕ– ringbuffer_skip ( ) { … } — function",
							"—Ⓕ– ringbuffer_next ( ) { … } — function",
							"—Ⓕ– ringbuffer_size ( ) { … } — function",
							"—Ⓕ– ringbuffer_avail ( ) { … } — function",
							"—Ⓕ– ringbuffer_zero ( ) { … } — function",
							"—Ⓕ– ringbuffer_free ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_new ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_get ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_iterator ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_next ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_finalizer ( ) { … } — function"
						]
					},
					"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IHJpbmdidWZmZXJfYXZhaWwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yaW5nYnVmZmVyX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yaW5nYnVmZmVyX3dyYXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9nZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9pdGVyYXRvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yaW5nYnVmZmVyX25leHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAACsAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					466,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-generator.c",
						"symkeys":
						[
							[
								244,
								258
							],
							[
								429,
								446
							],
							[
								582,
								596
							],
							[
								860,
								873
							],
							[
								1104,
								1118
							],
							[
								1504,
								1519
							],
							[
								1871,
								1886
							],
							[
								2002,
								2017
							],
							[
								2219,
								2244
							],
							[
								2513,
								2534
							],
							[
								2773,
								2796
							]
						],
						"symlist":
						[
							"—Ⓕ– generator_zero ( ) { … } — function",
							"—Ⓕ– generator_destroy ( ) { … } — function",
							"—Ⓕ– generator_free ( ) { … } — function",
							"—Ⓕ– generator_new ( ) { … } — function",
							"—Ⓕ– generator_next ( ) { … } — function",
							"—Ⓕ– generator_write ( ) { … } — function",
							"—Ⓕ– generator_close ( ) { … } — function",
							"—Ⓕ– generator_queue ( ) { … } — function",
							"—Ⓕ– minnet_generator_iterator ( ) { … } — function",
							"—Ⓕ– minnet_generator_next ( ) { … } — function",
							"—Ⓕ– minnet_generator_create ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB+BAAA4oCU4pK74oCTIHJpbmdidWZmZXJfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfZGVzdHJveV9lbGVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2luaXQyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9uZXcyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9pbnNlcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2NvbnN1bWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX3NraXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX25leHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2F2YWlsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl96ZXJvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl93cmFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfaXRlcmF0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAA1wEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "minnet-hash.c",
			"settings":
			{
				"buffer_size": 11391,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqSUAAAAAAADrJQAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAHYIAAAAAAAAdwgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdggAAAAAAAB2CAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAIIIAAAAAAAAgwgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgggAAAAAAACCCAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAFkbAAAAAAAAWhsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWRsAAAAAAABZGwAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"left_delete",
					null,
					"AQAAAFkbAAAAAAAAWRsAAAAAAAABAAAALw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWhsAAAAAAABaGwAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAIobAAAAAAAAjBsAAAAAAAAAAAAAWRsAAAAAAABbGwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWRsAAAAAAACKGwAAAAAAAP///////+9/"
				],
				[
					35,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAANIcAAAAAAAA1BwAAAAAAAAAAAAAtRwAAAAAAAC3HAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtRwAAAAAAADSHAAAAAAAAP///////+9/"
				],
				[
					40,
					1,
					"left_delete",
					null,
					"AQAAALUcAAAAAAAAtRwAAAAAAAAkAAAALypKU1ZhbHVlIHZhbHVlID0gSlNfVU5ERUZJTkVEOyovCiAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtRwAAAAAAADZHAAAAAAAAAAAAAAAADhA"
				],
				[
					48,
					1,
					"left_delete",
					null,
					"AQAAADwjAAAAAAAAPCMAAAAAAAARAAAAICBpbnQzMl90IGVudHJ5Owo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPCMAAAAAAABNIwAAAAAAAAAAAAAAAAAA"
				],
				[
					56,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqRYAAAAAAACpFgAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/LAAAI2RlZmluZSBfR05VX1NPVVJDRQojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtaGFzaC5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+CgpUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF9oYXNoX2NsYXNzX2lkOwpUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfaGFzaF9wcm90bywgbWlubmV0X2hhc2hfY3RvcjsKCmVudW0gewogIEhBU0hfVVBEQVRFLAogIEhBU0hfRklOQUxJWkUsCiAgSEFTSF9WQUxVRU9GLAogIEhBU0hfVE9TVFJJTkcsCiAgSEFTSF9UWVBFLAogIEhBU0hfSE1BQywKICBIQVNIX0ZJTkFMSVpFRCwKICBIQVNIX0JZVEVMRU5HVEgsCiAgSEFTSF9CSVRMRU5HVEgsCn07CgpzdGF0aWMgY2hhciBoYXNoX2hleGRpZ2l0c1tdID0gIjAxMjM0NTY3ODlhYmNkZWYiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZ2hpamtsbW5vcHFyc3R1dnd4eXoiOwoKc3RhdGljIE1pbm5ldEhhc2gqCmhhc2hfYWxsb2MoSlNDb250ZXh0KiBjdHgsIHVpbnQ4X3QgdHlwZSwgQk9PTCBobWFjKSB7CiAgTWlubmV0SGFzaCogcmV0OwogIHNpemVfdCBieXRlcyA9IGhtYWMgPyBsd3NfZ2VuaG1hY19zaXplKHR5cGUgLSAoTFdTX0dFTkhBU0hfVFlQRV9TSEEyNTYgLSBMV1NfR0VOSE1BQ19UWVBFX1NIQTI1NikpIDogbHdzX2dlbmhhc2hfc2l6ZSh0eXBlKTsKCiAgcmV0ID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihNaW5uZXRIYXNoKSArIGJ5dGVzKTsKICByZXQtPnR5cGUgPSB0eXBlOwogIHJldC0+aG1hYyA9IGhtYWM7CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEJPT0wKaGFzaF9pbml0KE1pbm5ldEhhc2gqIGgsIGNvbnN0IHVpbnQ4X3QqIGtleSwgc2l6ZV90IGtleV9sZW4pIHsKICBhc3NlcnQoIWgtPmluaXRpYWxpemVkKTsKICBpZihoLT5obWFjID8gbHdzX2dlbmhtYWNfaW5pdCgmaC0+bHdzLmhtYWMsIGgtPnR5cGUgLSAoTFdTX0dFTkhBU0hfVFlQRV9TSEEyNTYgLSBMV1NfR0VOSE1BQ19UWVBFX1NIQTI1NiksIGtleSwga2V5X2xlbikgOiBsd3NfZ2VuaGFzaF9pbml0KCZoLT5sd3MuaGFzaCwgaC0+dHlwZSkpCiAgICByZXR1cm4gRkFMU0U7CiAgaC0+aW5pdGlhbGl6ZWQgPSBUUlVFOwogIHJldHVybiBUUlVFOwp9CgpzdGF0aWMgc2l6ZV90Cmhhc2hfc2l6ZShNaW5uZXRIYXNoKiBoKSB7CiAgcmV0dXJuIGgtPmhtYWMgPyBsd3NfZ2VuaG1hY19zaXplKGgtPnR5cGUgLSAoTFdTX0dFTkhBU0hfVFlQRV9TSEEyNTYgLSBMV1NfR0VOSE1BQ19UWVBFX1NIQTI1NikpIDogbHdzX2dlbmhhc2hfc2l6ZShoLT50eXBlKTsKfQoKc3RhdGljIEJPT0wKaGFzaF91cGRhdGUoTWlubmV0SGFzaCogaCwgY29uc3Qgdm9pZCogZGF0YSwgc2l6ZV90IHNpemUpIHsKICBhc3NlcnQoaC0+aW5pdGlhbGl6ZWQpOwogIGFzc2VydCghaC0+ZmluYWxpemVkKTsKICBpZihoLT5obWFjID8gbHdzX2dlbmhtYWNfdXBkYXRlKCZoLT5sd3MuaG1hYywgZGF0YSwgc2l6ZSkgOiBsd3NfZ2VuaGFzaF91cGRhdGUoJmgtPmx3cy5oYXNoLCBkYXRhLCBzaXplKSkKICAgIHJldHVybiBGQUxTRTsKICByZXR1cm4gVFJVRTsKfQoKc3RhdGljIHZvaWQqCnRtcF9yZWFsbG9jKHZvaWQqIG9wYXF1ZSwgdm9pZCogcHRyLCBzaXplX3Qgc2l6ZSkgewogIHJldHVybiByZWFsbG9jKHB0ciwgc2l6ZSk7Cn0KCnN0YXRpYyBjaGFyKgpoYXNoX3Rvc3RyaW5nKE1pbm5ldEhhc2gqIGgsIGludCBiaXRzX3Blcl9jaGFyKSB7CiAgRHluQnVmIGRidWYgPSB7MH07CiAgc2l6ZV90IGJpdHBvcywgYml0c2l6ZSA9IGhhc2hfc2l6ZShoKSAqIDg7CiAgdW5zaWduZWQgYmFzZSA9IHVpbnRfcG93KDIsIGJpdHNfcGVyX2NoYXIpOwogIHVuc2lnbmVkIG1hc2sgPSBiYXNlIC0gMTsKCiAgZGJ1Zl9pbml0MigmZGJ1ZiwgMCwgdG1wX3JlYWxsb2MpOwoKICBmb3IoYml0cG9zID0gMDsgYml0cG9zIDwgYml0c2l6ZTsgYml0cG9zICs9IGJhc2UpIHsKICAgIHVpbnQ4X3QgYnl0ZSA9IGgtPmRpZ2VzdFtiaXRwb3MgPj4gM107CiAgICB1bnNpZ25lZCBzaGlmdF9yaWdodCA9IGJpdHBvcyAmIDB4NzsKICAgIHVuc2lnbmVkIHJlbWFpbiA9IDggLSBzaGlmdF9yaWdodDsKICAgIHVpbnQ4X3QgdmFsdWUgPSBieXRlID4+IHNoaWZ0X3JpZ2h0OwogICAgaWYocmVtYWluIDwgYml0c19wZXJfY2hhcikgewogICAgICB2YWx1ZSB8PSBoLT5kaWdlc3RbKGJpdHBvcyA+PiAzKSArIDFdIDw8IHJlbWFpbjsKICAgIH0KCiAgICBkYnVmX3B1dGMoJmRidWYsIGhhc2hfaGV4ZGlnaXRzW3ZhbHVlICYgbWFza10pOwogIH0KICBkYnVmX3B1dGMoJmRidWYsICdcMCcpOwoKICByZXR1cm4gKGNoYXIqKWRidWYuYnVmOwp9CgpzdGF0aWMgQk9PTApoYXNoX2ZpbmFsaXplKE1pbm5ldEhhc2gqIGgpIHsKICBhc3NlcnQoaC0+aW5pdGlhbGl6ZWQpOwogIGFzc2VydCghaC0+ZmluYWxpemVkKTsKICBpZihoLT5obWFjID8gbHdzX2dlbmhtYWNfZGVzdHJveSgmaC0+bHdzLmhtYWMsIGgtPmRpZ2VzdCkgOiBsd3NfZ2VuaGFzaF9kZXN0cm95KCZoLT5sd3MuaGFzaCwgaC0+ZGlnZXN0KSkKICAgIHJldHVybiBGQUxTRTsKICBoLT5maW5hbGl6ZWQgPSBUUlVFOwogIHJldHVybiBUUlVFOwp9CgpKU1ZhbHVlCm1pbm5ldF9oYXNoX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHByb3RvLCBvYmo7CiAgTWlubmV0SGFzaCogaCA9IE5VTEw7CiAgaW50MzJfdCB0eXBlID0gLTE7CiAgSlNCdWZmZXIgYnVmID0gSlNfQlVGRkVSX0RFRkFVTFQoKTsKCiAgLyogdXNpbmcgbmV3X3RhcmdldCB0byBnZXQgdGhlIHByb3RvdHlwZSBpcyBuZWNlc3Nhcnkgd2hlbiB0aGUgY2xhc3MgaXMgZXh0ZW5kZWQuICovCiAgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICBwcm90byA9IEpTX0R1cFZhbHVlKGN0eCwgbWlubmV0X2hhc2hfcHJvdG8pOwoKICBvYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcHJvdG8sIG1pbm5ldF9oYXNoX2NsYXNzX2lkKTsKICBKU19GcmVlVmFsdWUoY3R4LCBwcm90byk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKCiAgaWYoYXJnYyA+PSAxKQogICAgSlNfVG9JbnQzMihjdHgsICZ0eXBlLCBhcmd2WzBdKTsKCiAgaWYodHlwZSA8IExXU19HRU5IQVNIX1RZUEVfTUQ1IHx8IHR5cGUgPiBMV1NfR0VOSEFTSF9UWVBFX1NIQTUxMikgewogICAgSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgImFyZ3VtZW50IDEgbXVzdCBiZSBvbmUgb2YgSGFzaC5UWVBFXyoiKTsKICAgIGdvdG8gZmFpbDsKICB9CgogIGlmKHR5cGUgPj0gTFdTX0dFTkhBU0hfVFlQRV9TSEEyNTYgJiYgYXJnYyA+IDEpIHsKICAgIGJ1ZiA9IGpzX2lucHV0X2FyZ3MoY3R4LCBhcmdjIC0gMSwgYXJndiArIDEpOwoKICAgIGlmKGJ1Zi5kYXRhID09IDApIHsKICAgICAgSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgImFyZ3VtZW50IDIgbXVzdCBiZSBTdHJpbmcsIEFycmF5QnVmZmVyLCBEYXRhVmlldyBvciBUeXBlZEFycmF5Iik7CiAgICAgIGdvdG8gZmFpbDsKICAgIH0KICB9CgogIGlmKCEoaCA9IGhhc2hfYWxsb2MoY3R4LCB0eXBlLCBidWYuZGF0YSAhPSBOVUxMKSkpIHsKICAgIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKICAgIGdvdG8gZmFpbDsKICB9CgogIGlmKCFoYXNoX2luaXQoaCwgYnVmLmRhdGEsIGJ1Zi5zaXplKSkgewogICAgSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgImZhaWxlZCB0byBpbml0aWFsaXplIE1pbm5ldEhhc2giKTsKICAgIGdvdG8gZmFpbDsKICB9CgogIEpTX1NldE9wYXF1ZShvYmosIGgpOwoKICByZXR1cm4gb2JqOwoKZmFpbDoKICBpZihoKQogICAganNfZnJlZShjdHgsIGgpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKc3RhdGljIEpTVmFsdWUKbWlubmV0X2hhc2hfbWV0aG9kKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpIHsKICBNaW5uZXRIYXNoKiBoOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKGggPSBtaW5uZXRfaGFzaF9kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBpZihtYWdpYyA8PSBIQVNIX0ZJTkFMSVpFKQogICAgaWYoaC0+ZmluYWxpemVkKQogICAgICByZXR1cm4gSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgIkhhc2ggYWxyZWFkeSBmaW5hbGl6ZWQiKTsKCiAgaWYobWFnaWMgPj0gSEFTSF9WQUxVRU9GKQogICAgaWYoIWgtPmZpbmFsaXplZCkKICAgICAgcmV0dXJuIEpTX1Rocm93SW50ZXJuYWxFcnJvcihjdHgsICJIYXNoIG5vdCBmaW5hbGl6ZWQiKTsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIEhBU0hfVVBEQVRFOiB7CiAgICAgIEpTQnVmZmVyIGJ1ZiA9IGpzX2lucHV0X2FyZ3MoY3R4LCBhcmdjLCBhcmd2KTsKCiAgICAgIGlmKGJ1Zi5kYXRhID09IDApIHsKICAgICAgICBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCAiYXJndW1lbnQgMSBtdXN0IGJlIFN0cmluZywgQXJyYXlCdWZmZXIsIERhdGFWaWV3IG9yIFR5cGVkQXJyYXkiKTsKICAgICAgICByZXQgPSBKU19FWENFUFRJT047CiAgICAgIH0gZWxzZSBpZighaGFzaF91cGRhdGUoaCwgYnVmLmRhdGEsIGJ1Zi5zaXplKSkgewogICAgICAgIEpTX1Rocm93SW50ZXJuYWxFcnJvcihjdHgsICJIYXNoIHVwZGF0ZSBmYWlsZWQiKTsKICAgICAgICByZXQgPSBKU19FWENFUFRJT047CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0ID0gSlNfTmV3SW50NjQoY3R4LCBidWYuc2l6ZSk7CiAgICAgIH0KCiAgICAgIGpzX2J1ZmZlcl9mcmVlKCZidWYsIGN0eCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBIQVNIX0ZJTkFMSVpFOiB7CgogICAgICBpZighaGFzaF9maW5hbGl6ZShoKSkKICAgICAgICByZXR1cm4gSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgIkhhc2ggZmluYWxpemUiKTsKCiAgICAgIHJldCA9IEpTX05ld0FycmF5QnVmZmVyQ29weShjdHgsIGgtPmRpZ2VzdCwgaGFzaF9zaXplKGgpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEhBU0hfVkFMVUVPRjogewogICAgICByZXQgPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY3R4LCBoLT5kaWdlc3QsIGhhc2hfc2l6ZShoKSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBIQVNIX1RPU1RSSU5HOiB7CiAgICAgIHVpbnQzMl90IGJpdHNfcGVyX2NoYXIgPSA0OwogICAgICBpZihhcmdjID49IDEpCiAgICAgICAgSlNfVG9VaW50MzIoY3R4LCAmYml0c19wZXJfY2hhciwgYXJndlswXSk7CgogICAgICBpZihiaXRzX3Blcl9jaGFyID09IDQpIHsKICAgICAgICB1bnNpZ25lZCBpOwogICAgICAgIHNpemVfdCBzaXplID0gaGFzaF9zaXplKGgpOwogICAgICAgIGNoYXIgYnVmW3NpemUgKiAyXTsKICAgICAgICBmb3IoaSA9IDA7IGkgPCBzaXplOyBpKyspIHsKICAgICAgICAgIGJ1ZlsoaSA8PCAxKV0gPSBoYXNoX2hleGRpZ2l0c1toLT5kaWdlc3RbaV0gPj4gNF07CiAgICAgICAgICBidWZbKGkgPDwgMSkgKyAxXSA9IGhhc2hfaGV4ZGlnaXRzW2gtPmRpZ2VzdFtpXSAmIDB4MGZdOwogICAgICAgIH0KICAgICAgICByZXQgPSBKU19OZXdTdHJpbmdMZW4oY3R4LCBidWYsIHNpemUgKiAyKTsKICAgICAgfSBlbHNlIGlmKGJpdHNfcGVyX2NoYXIgPiAwICYmIGJpdHNfcGVyX2NoYXIgPD0gNSkgewogICAgICAgIGNoYXIqIHN0cjsKCiAgICAgICAgaWYoKHN0ciA9IGhhc2hfdG9zdHJpbmcoaCwgYml0c19wZXJfY2hhcikpKSB7CiAgICAgICAgICByZXQgPSBKU19OZXdTdHJpbmcoY3R4LCBzdHIpOwogICAgICAgICAgZnJlZShzdHIpOwogICAgICAgIH0KICAgICAgfQogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9oYXNoX2dldChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgbWFnaWMpIHsKICBNaW5uZXRIYXNoKiBoOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKGggPSBtaW5uZXRfaGFzaF9kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgSEFTSF9UWVBFOiB7CiAgICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgaC0+dHlwZSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBIQVNIX0JZVEVMRU5HVEg6IHsKICAgICAgcmV0ID0gSlNfTmV3VWludDMyKGN0eCwgaGFzaF9zaXplKGgpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEhBU0hfQklUTEVOR1RIOiB7CiAgICAgIHJldCA9IEpTX05ld1VpbnQzMihjdHgsIGhhc2hfc2l6ZShoKSAqIDgpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgSEFTSF9ITUFDOiB7CiAgICAgIHJldCA9IEpTX05ld0Jvb2woY3R4LCBoLT5obWFjKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEhBU0hfRklOQUxJWkVEOiB7CiAgICAgIHJldCA9IEpTX05ld1VpbnQzMihjdHgsIGgtPmZpbmFsaXplZCk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgdm9pZAptaW5uZXRfaGFzaF9maW5hbGl6ZXIoSlNSdW50aW1lKiBydCwgSlNWYWx1ZSB2YWwpIHsKICBNaW5uZXRIYXNoKiBoOwoKICBpZigoaCA9IG1pbm5ldF9oYXNoX2RhdGEodmFsKSkpIHsKICAgIGlmKCFoLT5maW5hbGl6ZWQpCiAgICAgIGhhc2hfZmluYWxpemUoaCk7CiAgICBqc19mcmVlX3J0KHJ0LCBoKTsKICB9Cn0KCkpTVmFsdWUKbWlubmV0X2hhc2hfY2FsbChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IGZ1bmNfb2JqLCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgZmxhZ3MpIHsKICAvKk1pbm5ldEhhc2gqIGggPSBtaW5uZXRfaGFzaF9kYXRhMihjdHgsIGZ1bmNfb2JqKTsqLwogIHJldHVybiBtaW5uZXRfaGFzaF9tZXRob2QoY3R4LCBmdW5jX29iaiwgYXJnYywgYXJndiwgKGFyZ2MgPCAxIHx8IGpzX2lzX251bGxpc2goYXJndlswXSkpID8gSEFTSF9GSU5BTElaRSA6IEhBU0hfVVBEQVRFKTsKfQoKc3RhdGljIGludAptaW5uZXRfaGFzaF9nZXRfb3duX3Byb3BlcnR5KEpTQ29udGV4dCogY3R4LCBKU1Byb3BlcnR5RGVzY3JpcHRvciogcGRlc2MsIEpTVmFsdWVDb25zdCBvYmosIEpTQXRvbSBwcm9wKSB7CiAgTWlubmV0SGFzaCogaCA9IG1pbm5ldF9oYXNoX2RhdGEyKGN0eCwgb2JqKTsKICBpbnQ2NF90IGluZGV4OwoKICBpZihqc19hdG9tX2lzX2luZGV4KGN0eCwgJmluZGV4LCBwcm9wKSkgewoKICAgIGlmKGgtPmZpbmFsaXplZCAmJiBpbmRleCA+PSAwICYmIGluZGV4IDwgaGFzaF9zaXplKGgpKSB7CgogICAgICBwZGVzYy0+ZmxhZ3MgPSBKU19QUk9QX0VOVU1FUkFCTEU7CiAgICAgIHBkZXNjLT52YWx1ZSA9IEpTX05ld1VpbnQzMihjdHgsIGgtPmRpZ2VzdFtpbmRleF0pOwogICAgICBwZGVzYy0+Z2V0dGVyID0gSlNfVU5ERUZJTkVEOwogICAgICBwZGVzYy0+c2V0dGVyID0gSlNfVU5ERUZJTkVEOwogICAgICByZXR1cm4gVFJVRTsKICAgIH0KICB9IGVsc2UgaWYoanNfYXRvbV9pc19sZW5ndGgoY3R4LCBwcm9wKSkgewogICAgcGRlc2MtPmZsYWdzID0gSlNfUFJPUF9FTlVNRVJBQkxFOwogICAgcGRlc2MtPnZhbHVlID0gSlNfTmV3VWludDMyKGN0eCwgaGFzaF9zaXplKGgpKTsKICAgIHBkZXNjLT5nZXR0ZXIgPSBKU19VTkRFRklORUQ7CiAgICBwZGVzYy0+c2V0dGVyID0gSlNfVU5ERUZJTkVEOwogICAgcmV0dXJuIFRSVUU7CiAgfQoKICByZXR1cm4gRkFMU0U7Cn0KCnN0YXRpYyBpbnQKbWlubmV0X2hhc2hfZ2V0X293bl9wcm9wZXJ0eV9uYW1lcyhKU0NvbnRleHQqIGN0eCwgSlNQcm9wZXJ0eUVudW0qKiBwdGFiLCB1aW50MzJfdCogcGxlbiwgSlNWYWx1ZUNvbnN0IG9iaikgewogIE1pbm5ldEhhc2gqIGggPSBtaW5uZXRfaGFzaF9kYXRhMihjdHgsIG9iaik7CiAgSlNQcm9wZXJ0eUVudW0qIHByb3BzOwogIHNpemVfdCBpLCBsZW4gPSBoLT5maW5hbGl6ZWQgPyBoYXNoX3NpemUoaCkgOiAwOwoKICBwcm9wcyA9IGpzX21hbGxvYyhjdHgsIHNpemVvZihKU1Byb3BlcnR5RW51bSkgKiAobGVuICsgMSkpOwoKICBmb3IoaSA9IDA7IGkgPCBsZW47IGkrKykgewogICAgcHJvcHNbaV0uaXNfZW51bWVyYWJsZSA9IFRSVUU7CiAgICBwcm9wc1tpXS5hdG9tID0gSlNfTmV3QXRvbVVJbnQzMihjdHgsIGkpOwogIH0KCiAgcHJvcHNbbGVuXS5pc19lbnVtZXJhYmxlID0gVFJVRTsKICBwcm9wc1tsZW5dLmF0b20gPSBKU19OZXdBdG9tKGN0eCwgImxlbmd0aCIpOwoKICAqcHRhYiA9IHByb3BzOwogICpwbGVuID0gbGVuICsgMTsKICByZXR1cm4gMDsKfQoKc3RhdGljIGludAptaW5uZXRfaGFzaF9oYXNfcHJvcGVydHkoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmosIEpTQXRvbSBwcm9wKSB7CiAgTWlubmV0SGFzaCogaCA9IG1pbm5ldF9oYXNoX2RhdGEyKGN0eCwgb2JqKTsKICBpbnQ2NF90IGluZGV4OwoKICBpZihqc19hdG9tX2lzX2luZGV4KGN0eCwgJmluZGV4LCBwcm9wKSkgewoKICAgIHJldHVybiBoLT5maW5hbGl6ZWQgJiYgaW5kZXggPj0gMCAmJiBpbmRleCA8IGhhc2hfc2l6ZShoKTsKICB9IGVsc2UgaWYoanNfYXRvbV9pc19sZW5ndGgoY3R4LCBwcm9wKSkgewogICAgcmV0dXJuIFRSVUU7CiAgfQoKICByZXR1cm4gRkFMU0U7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9oYXNoX2dldF9wcm9wZXJ0eShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaiwgSlNBdG9tIHByb3AsIEpTVmFsdWVDb25zdCByZWNlaXZlcikgewogIE1pbm5ldEhhc2gqIGggPSBtaW5uZXRfaGFzaF9kYXRhMihjdHgsIG9iaik7CiAgSlNWYWx1ZSB2YWx1ZSA9IEpTX1VOREVGSU5FRDsKICBpbnQ2NF90IGluZGV4OwoKICBpZihqc19hdG9tX2lzX2luZGV4KGN0eCwgJmluZGV4LCBwcm9wKSkgewogICAgaWYoaC0+ZmluYWxpemVkICYmIGluZGV4ID49IDAgJiYgaW5kZXggPCBoYXNoX3NpemUoaCkpIHsKCiAgICAgIHZhbHVlID0gSlNfTmV3VWludDMyKGN0eCwgaC0+ZGlnZXN0W2luZGV4XSk7CiAgICB9CiAgfSBlbHNlIGlmKGpzX2F0b21faXNfbGVuZ3RoKGN0eCwgcHJvcCkpIHsKICAgIHZhbHVlID0gSlNfTmV3VWludDMyKGN0eCwgaC0+ZmluYWxpemVkID8gaGFzaF9zaXplKGgpIDogMCk7CiAgfSBlbHNlIHsKICAgIEpTVmFsdWUgcHJvdG8gPSBKU19HZXRQcm90b3R5cGUoY3R4LCBvYmopOwogICAgaWYoSlNfSXNPYmplY3QocHJvdG8pICYmIEpTX0hhc1Byb3BlcnR5KGN0eCwgcHJvdG8sIHByb3ApKQogICAgICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5KGN0eCwgcHJvdG8sIHByb3ApOwogIH0KCiAgcmV0dXJuIHZhbHVlOwp9CgpzdGF0aWMgSlNDbGFzc0V4b3RpY01ldGhvZHMgbWlubmV0X2hhc2hfZXhvdGljX21ldGhvZHMgPSB7CiAgICAuZ2V0X293bl9wcm9wZXJ0eSA9IG1pbm5ldF9oYXNoX2dldF9vd25fcHJvcGVydHksCiAgICAuZ2V0X293bl9wcm9wZXJ0eV9uYW1lcyA9IG1pbm5ldF9oYXNoX2dldF9vd25fcHJvcGVydHlfbmFtZXMsCiAgICAuaGFzX3Byb3BlcnR5ID0gbWlubmV0X2hhc2hfaGFzX3Byb3BlcnR5LAogICAgLmdldF9wcm9wZXJ0eSA9IG1pbm5ldF9oYXNoX2dldF9wcm9wZXJ0eSwKfTsKCkpTQ2xhc3NEZWYgbWlubmV0X2hhc2hfY2xhc3MgPSB7CiAgICAiTWlubmV0SGFzaCIsCiAgICAuZmluYWxpemVyID0gbWlubmV0X2hhc2hfZmluYWxpemVyLAogICAgLmNhbGwgPSAmbWlubmV0X2hhc2hfY2FsbCwKICAgIC5leG90aWMgPSAmbWlubmV0X2hhc2hfZXhvdGljX21ldGhvZHMsCn07Cgpjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfaGFzaF9wcm90b19mdW5jc1tdID0gewogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJ2YWx1ZU9mIiwgMCwgbWlubmV0X2hhc2hfbWV0aG9kLCBIQVNIX1ZBTFVFT0YpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJ0b1N0cmluZyIsIDAsIG1pbm5ldF9oYXNoX21ldGhvZCwgSEFTSF9UT1NUUklORyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInVwZGF0ZSIsIDEsIG1pbm5ldF9oYXNoX21ldGhvZCwgSEFTSF9VUERBVEUpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJmaW5hbGl6ZSIsIDAsIG1pbm5ldF9oYXNoX21ldGhvZCwgSEFTSF9GSU5BTElaRSksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigidHlwZSIsIG1pbm5ldF9oYXNoX2dldCwgMCwgSEFTSF9UWVBFLCAwKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJieXRlTGVuZ3RoIiwgbWlubmV0X2hhc2hfZ2V0LCAwLCBIQVNIX0JZVEVMRU5HVEgsIDApLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImJpdExlbmd0aCIsIG1pbm5ldF9oYXNoX2dldCwgMCwgSEFTSF9CSVRMRU5HVEgsIDApLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImhtYWMiLCBtaW5uZXRfaGFzaF9nZXQsIDAsIEhBU0hfSE1BQywgMCksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigiZmluYWxpemVkIiwgbWlubmV0X2hhc2hfZ2V0LCAwLCBIQVNIX0ZJTkFMSVpFRCwgMCksCiAgICBKU19QUk9QX1NUUklOR19ERUYoIltTeW1ib2wudG9TdHJpbmdUYWddIiwgIk1pbm5ldEhhc2giLCBKU19QUk9QX0NPTkZJR1VSQUJMRSksCn07Cgpjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfaGFzaF9zdGF0aWNfZnVuY3NbXSA9IHsKICAgIEpTX1BST1BfSU5UMzJfREVGKCJUWVBFX01ENSIsIExXU19HRU5IQVNIX1RZUEVfTUQ1LCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIlRZUEVfU0hBMSIsIExXU19HRU5IQVNIX1RZUEVfU0hBMSwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJUWVBFX1NIQTI1NiIsIExXU19HRU5IQVNIX1RZUEVfU0hBMjU2LCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIlRZUEVfU0hBMzg0IiwgTFdTX0dFTkhBU0hfVFlQRV9TSEEzODQsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiVFlQRV9TSEE1MTIiLCBMV1NfR0VOSEFTSF9UWVBFX1NIQTUxMiwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKfTsKCmNvbnN0IHNpemVfdCBtaW5uZXRfaGFzaF9wcm90b19mdW5jc19zaXplID0gY291bnRvZihtaW5uZXRfaGFzaF9wcm90b19mdW5jcyk7CmNvbnN0IHNpemVfdCBtaW5uZXRfaGFzaF9zdGF0aWNfZnVuY3Nfc2l6ZSA9IGNvdW50b2YobWlubmV0X2hhc2hfc3RhdGljX2Z1bmNzKTsKAAAAAAAAAAB/LAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaRcAAAAAAABpFwAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaRcAAAAAAABpFwAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaRcAAAAAAABpFwAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaRcAAAAAAABpFwAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaRcAAAAAAABpFwAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"revert",
					null,
					"BQAAAAAAAAAAAAAAAAAAAAAAAAB/LAAAI2RlZmluZSBfR05VX1NPVVJDRQojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtaGFzaC5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+CgpUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF9oYXNoX2NsYXNzX2lkOwpUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfaGFzaF9wcm90bywgbWlubmV0X2hhc2hfY3RvcjsKCmVudW0gewogIEhBU0hfVVBEQVRFLAogIEhBU0hfRklOQUxJWkUsCiAgSEFTSF9WQUxVRU9GLAogIEhBU0hfVE9TVFJJTkcsCiAgSEFTSF9UWVBFLAogIEhBU0hfSE1BQywKICBIQVNIX0ZJTkFMSVpFRCwKICBIQVNIX0JZVEVMRU5HVEgsCiAgSEFTSF9CSVRMRU5HVEgsCn07CgpzdGF0aWMgY2hhciBoYXNoX2hleGRpZ2l0c1tdID0gIjAxMjM0NTY3ODlhYmNkZWYiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZ2hpamtsbW5vcHFyc3R1dnd4eXoiOwoKc3RhdGljIE1pbm5ldEhhc2gqCmhhc2hfYWxsb2MoSlNDb250ZXh0KiBjdHgsIHVpbnQ4X3QgdHlwZSwgQk9PTCBobWFjKSB7CiAgTWlubmV0SGFzaCogcmV0OwogIHNpemVfdCBieXRlcyA9IGhtYWMgPyBsd3NfZ2VuaG1hY19zaXplKHR5cGUgLSAoTFdTX0dFTkhBU0hfVFlQRV9TSEEyNTYgLSBMV1NfR0VOSE1BQ19UWVBFX1NIQTI1NikpIDogbHdzX2dlbmhhc2hfc2l6ZSh0eXBlKTsKCiAgcmV0ID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihNaW5uZXRIYXNoKSArIGJ5dGVzKTsKICByZXQtPnR5cGUgPSB0eXBlOwogIHJldC0+aG1hYyA9IGhtYWM7CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEJPT0wKaGFzaF9pbml0KE1pbm5ldEhhc2gqIGgsIGNvbnN0IHVpbnQ4X3QqIGtleSwgc2l6ZV90IGtleV9sZW4pIHsKICBhc3NlcnQoIWgtPmluaXRpYWxpemVkKTsKICBpZihoLT5obWFjID8gbHdzX2dlbmhtYWNfaW5pdCgmaC0+bHdzLmhtYWMsIGgtPnR5cGUgLSAoTFdTX0dFTkhBU0hfVFlQRV9TSEEyNTYgLSBMV1NfR0VOSE1BQ19UWVBFX1NIQTI1NiksIGtleSwga2V5X2xlbikgOiBsd3NfZ2VuaGFzaF9pbml0KCZoLT5sd3MuaGFzaCwgaC0+dHlwZSkpCiAgICByZXR1cm4gRkFMU0U7CiAgaC0+aW5pdGlhbGl6ZWQgPSBUUlVFOwogIHJldHVybiBUUlVFOwp9CgpzdGF0aWMgc2l6ZV90Cmhhc2hfc2l6ZShNaW5uZXRIYXNoKiBoKSB7CiAgcmV0dXJuIGgtPmhtYWMgPyBsd3NfZ2VuaG1hY19zaXplKGgtPnR5cGUgLSAoTFdTX0dFTkhBU0hfVFlQRV9TSEEyNTYgLSBMV1NfR0VOSE1BQ19UWVBFX1NIQTI1NikpIDogbHdzX2dlbmhhc2hfc2l6ZShoLT50eXBlKTsKfQoKc3RhdGljIEJPT0wKaGFzaF91cGRhdGUoTWlubmV0SGFzaCogaCwgY29uc3Qgdm9pZCogZGF0YSwgc2l6ZV90IHNpemUpIHsKICBhc3NlcnQoaC0+aW5pdGlhbGl6ZWQpOwogIGFzc2VydCghaC0+ZmluYWxpemVkKTsKICBpZihoLT5obWFjID8gbHdzX2dlbmhtYWNfdXBkYXRlKCZoLT5sd3MuaG1hYywgZGF0YSwgc2l6ZSkgOiBsd3NfZ2VuaGFzaF91cGRhdGUoJmgtPmx3cy5oYXNoLCBkYXRhLCBzaXplKSkKICAgIHJldHVybiBGQUxTRTsKICByZXR1cm4gVFJVRTsKfQoKc3RhdGljIHZvaWQqCnRtcF9yZWFsbG9jKHZvaWQqIG9wYXF1ZSwgdm9pZCogcHRyLCBzaXplX3Qgc2l6ZSkgewogIHJldHVybiByZWFsbG9jKHB0ciwgc2l6ZSk7Cn0KCnN0YXRpYyBjaGFyKgpoYXNoX3Rvc3RyaW5nKE1pbm5ldEhhc2gqIGgsIGludCBiaXRzX3Blcl9jaGFyKSB7CiAgRHluQnVmIGRidWYgPSB7MH07CiAgc2l6ZV90IGJpdHBvcywgYml0c2l6ZSA9IGhhc2hfc2l6ZShoKSAqIDg7CiAgdW5zaWduZWQgYmFzZSA9IHVpbnRfcG93KDIsIGJpdHNfcGVyX2NoYXIpOwogIHVuc2lnbmVkIG1hc2sgPSBiYXNlIC0gMTsKCiAgZGJ1Zl9pbml0MigmZGJ1ZiwgMCwgdG1wX3JlYWxsb2MpOwoKICBmb3IoYml0cG9zID0gMDsgYml0cG9zIDwgYml0c2l6ZTsgYml0cG9zICs9IGJhc2UpIHsKICAgIHVpbnQ4X3QgYnl0ZSA9IGgtPmRpZ2VzdFtiaXRwb3MgPj4gM107CiAgICB1bnNpZ25lZCBzaGlmdF9yaWdodCA9IGJpdHBvcyAmIDB4NzsKICAgIHVuc2lnbmVkIHJlbWFpbiA9IDggLSBzaGlmdF9yaWdodDsKICAgIHVpbnQ4X3QgdmFsdWUgPSBieXRlID4+IHNoaWZ0X3JpZ2h0OwogICAgaWYocmVtYWluIDwgYml0c19wZXJfY2hhcikgewogICAgICB2YWx1ZSB8PSBoLT5kaWdlc3RbKGJpdHBvcyA+PiAzKSArIDFdIDw8IHJlbWFpbjsKICAgIH0KCiAgICBkYnVmX3B1dGMoJmRidWYsIGhhc2hfaGV4ZGlnaXRzW3ZhbHVlICYgbWFza10pOwogIH0KICBkYnVmX3B1dGMoJmRidWYsICdcMCcpOwoKICByZXR1cm4gKGNoYXIqKWRidWYuYnVmOwp9CgpzdGF0aWMgQk9PTApoYXNoX2ZpbmFsaXplKE1pbm5ldEhhc2gqIGgpIHsKICBhc3NlcnQoaC0+aW5pdGlhbGl6ZWQpOwogIGFzc2VydCghaC0+ZmluYWxpemVkKTsKICBpZihoLT5obWFjID8gbHdzX2dlbmhtYWNfZGVzdHJveSgmaC0+bHdzLmhtYWMsIGgtPmRpZ2VzdCkgOiBsd3NfZ2VuaGFzaF9kZXN0cm95KCZoLT5sd3MuaGFzaCwgaC0+ZGlnZXN0KSkKICAgIHJldHVybiBGQUxTRTsKICBoLT5maW5hbGl6ZWQgPSBUUlVFOwogIHJldHVybiBUUlVFOwp9CgpKU1ZhbHVlCm1pbm5ldF9oYXNoX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHByb3RvLCBvYmo7CiAgTWlubmV0SGFzaCogaCA9IE5VTEw7CiAgaW50MzJfdCB0eXBlID0gLTE7CiAgSlNCdWZmZXIgYnVmID0gSlNfQlVGRkVSX0RFRkFVTFQoKTsKCiAgLyogdXNpbmcgbmV3X3RhcmdldCB0byBnZXQgdGhlIHByb3RvdHlwZSBpcyBuZWNlc3Nhcnkgd2hlbiB0aGUgY2xhc3MgaXMgZXh0ZW5kZWQuICovCiAgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICBwcm90byA9IEpTX0R1cFZhbHVlKGN0eCwgbWlubmV0X2hhc2hfcHJvdG8pOwoKICBvYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcHJvdG8sIG1pbm5ldF9oYXNoX2NsYXNzX2lkKTsKICBKU19GcmVlVmFsdWUoY3R4LCBwcm90byk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKCiAgaWYoYXJnYyA+PSAxKQogICAgSlNfVG9JbnQzMihjdHgsICZ0eXBlLCBhcmd2WzBdKTsKCiAgaWYodHlwZSA8IExXU19HRU5IQVNIX1RZUEVfTUQ1IHx8IHR5cGUgPiBMV1NfR0VOSEFTSF9UWVBFX1NIQTUxMikgewogICAgSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgImFyZ3VtZW50IDEgbXVzdCBiZSBvbmUgb2YgSGFzaC5UWVBFXyoiKTsKICAgIGdvdG8gZmFpbDsKICB9CgogIGlmKHR5cGUgPj0gTFdTX0dFTkhBU0hfVFlQRV9TSEEyNTYgJiYgYXJnYyA+IDEpIHsKICAgIGJ1ZiA9IGpzX2lucHV0X2FyZ3MoY3R4LCBhcmdjIC0gMSwgYXJndiArIDEpOwoKICAgIGlmKGJ1Zi5kYXRhID09IDApIHsKICAgICAgSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgImFyZ3VtZW50IDIgbXVzdCBiZSBTdHJpbmcsIEFycmF5QnVmZmVyLCBEYXRhVmlldyBvciBUeXBlZEFycmF5Iik7CiAgICAgIGdvdG8gZmFpbDsKICAgIH0KICB9CgogIGlmKCEoaCA9IGhhc2hfYWxsb2MoY3R4LCB0eXBlLCBidWYuZGF0YSAhPSBOVUxMKSkpIHsKICAgIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKICAgIGdvdG8gZmFpbDsKICB9CgogIGlmKCFoYXNoX2luaXQoaCwgYnVmLmRhdGEsIGJ1Zi5zaXplKSkgewogICAgSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgImZhaWxlZCB0byBpbml0aWFsaXplIE1pbm5ldEhhc2giKTsKICAgIGdvdG8gZmFpbDsKICB9CgogIEpTX1NldE9wYXF1ZShvYmosIGgpOwoKICByZXR1cm4gb2JqOwoKZmFpbDoKICBpZihoKQogICAganNfZnJlZShjdHgsIGgpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKc3RhdGljIEpTVmFsdWUKbWlubmV0X2hhc2hfbWV0aG9kKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpIHsKICBNaW5uZXRIYXNoKiBoOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKGggPSBtaW5uZXRfaGFzaF9kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBpZihtYWdpYyA8PSBIQVNIX0ZJTkFMSVpFKQogICAgaWYoaC0+ZmluYWxpemVkKQogICAgICByZXR1cm4gSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgIkhhc2ggYWxyZWFkeSBmaW5hbGl6ZWQiKTsKCiAgaWYobWFnaWMgPj0gSEFTSF9WQUxVRU9GKQogICAgaWYoIWgtPmZpbmFsaXplZCkKICAgICAgcmV0dXJuIEpTX1Rocm93SW50ZXJuYWxFcnJvcihjdHgsICJIYXNoIG5vdCBmaW5hbGl6ZWQiKTsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIEhBU0hfVVBEQVRFOiB7CiAgICAgIEpTQnVmZmVyIGJ1ZiA9IGpzX2lucHV0X2FyZ3MoY3R4LCBhcmdjLCBhcmd2KTsKCiAgICAgIGlmKGJ1Zi5kYXRhID09IDApIHsKICAgICAgICBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCAiYXJndW1lbnQgMSBtdXN0IGJlIFN0cmluZywgQXJyYXlCdWZmZXIsIERhdGFWaWV3IG9yIFR5cGVkQXJyYXkiKTsKICAgICAgICByZXQgPSBKU19FWENFUFRJT047CiAgICAgIH0gZWxzZSBpZighaGFzaF91cGRhdGUoaCwgYnVmLmRhdGEsIGJ1Zi5zaXplKSkgewogICAgICAgIEpTX1Rocm93SW50ZXJuYWxFcnJvcihjdHgsICJIYXNoIHVwZGF0ZSBmYWlsZWQiKTsKICAgICAgICByZXQgPSBKU19FWENFUFRJT047CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0ID0gSlNfTmV3SW50NjQoY3R4LCBidWYuc2l6ZSk7CiAgICAgIH0KCiAgICAgIGpzX2J1ZmZlcl9mcmVlKCZidWYsIGN0eCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBIQVNIX0ZJTkFMSVpFOiB7CgogICAgICBpZighaGFzaF9maW5hbGl6ZShoKSkKICAgICAgICByZXR1cm4gSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgIkhhc2ggZmluYWxpemUiKTsKCiAgICAgIHJldCA9IEpTX05ld0FycmF5QnVmZmVyQ29weShjdHgsIGgtPmRpZ2VzdCwgaGFzaF9zaXplKGgpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEhBU0hfVkFMVUVPRjogewogICAgICByZXQgPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY3R4LCBoLT5kaWdlc3QsIGhhc2hfc2l6ZShoKSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBIQVNIX1RPU1RSSU5HOiB7CiAgICAgIHVpbnQzMl90IGJpdHNfcGVyX2NoYXIgPSA0OwogICAgICBpZihhcmdjID49IDEpCiAgICAgICAgSlNfVG9VaW50MzIoY3R4LCAmYml0c19wZXJfY2hhciwgYXJndlswXSk7CgogICAgICBpZihiaXRzX3Blcl9jaGFyID09IDQpIHsKICAgICAgICB1bnNpZ25lZCBpOwogICAgICAgIHNpemVfdCBzaXplID0gaGFzaF9zaXplKGgpOwogICAgICAgIGNoYXIgYnVmW3NpemUgKiAyXTsKICAgICAgICBmb3IoaSA9IDA7IGkgPCBzaXplOyBpKyspIHsKICAgICAgICAgIGJ1ZlsoaSA8PCAxKV0gPSBoYXNoX2hleGRpZ2l0c1toLT5kaWdlc3RbaV0gPj4gNF07CiAgICAgICAgICBidWZbKGkgPDwgMSkgKyAxXSA9IGhhc2hfaGV4ZGlnaXRzW2gtPmRpZ2VzdFtpXSAmIDB4MGZdOwogICAgICAgIH0KICAgICAgICByZXQgPSBKU19OZXdTdHJpbmdMZW4oY3R4LCBidWYsIHNpemUgKiAyKTsKICAgICAgfSBlbHNlIGlmKGJpdHNfcGVyX2NoYXIgPiAwICYmIGJpdHNfcGVyX2NoYXIgPD0gNSkgewogICAgICAgIGNoYXIqIHN0cjsKCiAgICAgICAgaWYoKHN0ciA9IGhhc2hfdG9zdHJpbmcoaCwgYml0c19wZXJfY2hhcikpKSB7CiAgICAgICAgICByZXQgPSBKU19OZXdTdHJpbmcoY3R4LCBzdHIpOwogICAgICAgICAgZnJlZShzdHIpOwogICAgICAgIH0KICAgICAgfQogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9oYXNoX2dldChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgbWFnaWMpIHsKICBNaW5uZXRIYXNoKiBoOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKGggPSBtaW5uZXRfaGFzaF9kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgSEFTSF9UWVBFOiB7CiAgICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgaC0+dHlwZSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBIQVNIX0JZVEVMRU5HVEg6IHsKICAgICAgcmV0ID0gSlNfTmV3VWludDMyKGN0eCwgaGFzaF9zaXplKGgpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEhBU0hfQklUTEVOR1RIOiB7CiAgICAgIHJldCA9IEpTX05ld1VpbnQzMihjdHgsIGhhc2hfc2l6ZShoKSAqIDgpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgSEFTSF9ITUFDOiB7CiAgICAgIHJldCA9IEpTX05ld0Jvb2woY3R4LCBoLT5obWFjKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEhBU0hfRklOQUxJWkVEOiB7CiAgICAgIHJldCA9IEpTX05ld1VpbnQzMihjdHgsIGgtPmZpbmFsaXplZCk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgdm9pZAptaW5uZXRfaGFzaF9maW5hbGl6ZXIoSlNSdW50aW1lKiBydCwgSlNWYWx1ZSB2YWwpIHsKICBNaW5uZXRIYXNoKiBoOwoKICBpZigoaCA9IG1pbm5ldF9oYXNoX2RhdGEodmFsKSkpIHsKICAgIGlmKCFoLT5maW5hbGl6ZWQpCiAgICAgIGhhc2hfZmluYWxpemUoaCk7CiAgICBqc19mcmVlX3J0KHJ0LCBoKTsKICB9Cn0KCkpTVmFsdWUKbWlubmV0X2hhc2hfY2FsbChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IGZ1bmNfb2JqLCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgZmxhZ3MpIHsKICAvKk1pbm5ldEhhc2gqIGggPSBtaW5uZXRfaGFzaF9kYXRhMihjdHgsIGZ1bmNfb2JqKTsqLwogIHJldHVybiBtaW5uZXRfaGFzaF9tZXRob2QoY3R4LCBmdW5jX29iaiwgYXJnYywgYXJndiwgKGFyZ2MgPCAxIHx8IGpzX2lzX251bGxpc2goYXJndlswXSkpID8gSEFTSF9GSU5BTElaRSA6IEhBU0hfVVBEQVRFKTsKfQoKc3RhdGljIGludAptaW5uZXRfaGFzaF9nZXRfb3duX3Byb3BlcnR5KEpTQ29udGV4dCogY3R4LCBKU1Byb3BlcnR5RGVzY3JpcHRvciogcGRlc2MsIEpTVmFsdWVDb25zdCBvYmosIEpTQXRvbSBwcm9wKSB7CiAgTWlubmV0SGFzaCogaCA9IG1pbm5ldF9oYXNoX2RhdGEyKGN0eCwgb2JqKTsKICBpbnQ2NF90IGluZGV4OwoKICBpZihqc19hdG9tX2lzX2luZGV4KGN0eCwgJmluZGV4LCBwcm9wKSkgewoKICAgIGlmKGgtPmZpbmFsaXplZCAmJiBpbmRleCA+PSAwICYmIGluZGV4IDwgaGFzaF9zaXplKGgpKSB7CgogICAgICBwZGVzYy0+ZmxhZ3MgPSBKU19QUk9QX0VOVU1FUkFCTEU7CiAgICAgIHBkZXNjLT52YWx1ZSA9IEpTX05ld1VpbnQzMihjdHgsIGgtPmRpZ2VzdFtpbmRleF0pOwogICAgICBwZGVzYy0+Z2V0dGVyID0gSlNfVU5ERUZJTkVEOwogICAgICBwZGVzYy0+c2V0dGVyID0gSlNfVU5ERUZJTkVEOwogICAgICByZXR1cm4gVFJVRTsKICAgIH0KICB9IGVsc2UgaWYoanNfYXRvbV9pc19sZW5ndGgoY3R4LCBwcm9wKSkgewogICAgcGRlc2MtPmZsYWdzID0gSlNfUFJPUF9FTlVNRVJBQkxFOwogICAgcGRlc2MtPnZhbHVlID0gSlNfTmV3VWludDMyKGN0eCwgaGFzaF9zaXplKGgpKTsKICAgIHBkZXNjLT5nZXR0ZXIgPSBKU19VTkRFRklORUQ7CiAgICBwZGVzYy0+c2V0dGVyID0gSlNfVU5ERUZJTkVEOwogICAgcmV0dXJuIFRSVUU7CiAgfQoKICByZXR1cm4gRkFMU0U7Cn0KCnN0YXRpYyBpbnQKbWlubmV0X2hhc2hfZ2V0X293bl9wcm9wZXJ0eV9uYW1lcyhKU0NvbnRleHQqIGN0eCwgSlNQcm9wZXJ0eUVudW0qKiBwdGFiLCB1aW50MzJfdCogcGxlbiwgSlNWYWx1ZUNvbnN0IG9iaikgewogIE1pbm5ldEhhc2gqIGggPSBtaW5uZXRfaGFzaF9kYXRhMihjdHgsIG9iaik7CiAgSlNQcm9wZXJ0eUVudW0qIHByb3BzOwogIHNpemVfdCBpLCBsZW4gPSBoLT5maW5hbGl6ZWQgPyBoYXNoX3NpemUoaCkgOiAwOwoKICBwcm9wcyA9IGpzX21hbGxvYyhjdHgsIHNpemVvZihKU1Byb3BlcnR5RW51bSkgKiAobGVuICsgMSkpOwoKICBmb3IoaSA9IDA7IGkgPCBsZW47IGkrKykgewogICAgcHJvcHNbaV0uaXNfZW51bWVyYWJsZSA9IFRSVUU7CiAgICBwcm9wc1tpXS5hdG9tID0gSlNfTmV3QXRvbVVJbnQzMihjdHgsIGkpOwogIH0KCiAgcHJvcHNbbGVuXS5pc19lbnVtZXJhYmxlID0gVFJVRTsKICBwcm9wc1tsZW5dLmF0b20gPSBKU19OZXdBdG9tKGN0eCwgImxlbmd0aCIpOwoKICAqcHRhYiA9IHByb3BzOwogICpwbGVuID0gbGVuICsgMTsKICByZXR1cm4gMDsKfQoKc3RhdGljIGludAptaW5uZXRfaGFzaF9oYXNfcHJvcGVydHkoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmosIEpTQXRvbSBwcm9wKSB7CiAgTWlubmV0SGFzaCogaCA9IG1pbm5ldF9oYXNoX2RhdGEyKGN0eCwgb2JqKTsKICBpbnQ2NF90IGluZGV4OwoKICBpZihqc19hdG9tX2lzX2luZGV4KGN0eCwgJmluZGV4LCBwcm9wKSkgewoKICAgIHJldHVybiBoLT5maW5hbGl6ZWQgJiYgaW5kZXggPj0gMCAmJiBpbmRleCA8IGhhc2hfc2l6ZShoKTsKICB9IGVsc2UgaWYoanNfYXRvbV9pc19sZW5ndGgoY3R4LCBwcm9wKSkgewogICAgcmV0dXJuIFRSVUU7CiAgfQoKICByZXR1cm4gRkFMU0U7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9oYXNoX2dldF9wcm9wZXJ0eShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaiwgSlNBdG9tIHByb3AsIEpTVmFsdWVDb25zdCByZWNlaXZlcikgewogIE1pbm5ldEhhc2gqIGggPSBtaW5uZXRfaGFzaF9kYXRhMihjdHgsIG9iaik7CiAgSlNWYWx1ZSB2YWx1ZSA9IEpTX1VOREVGSU5FRDsKICBpbnQ2NF90IGluZGV4OwoKICBpZihqc19hdG9tX2lzX2luZGV4KGN0eCwgJmluZGV4LCBwcm9wKSkgewogICAgaWYoaC0+ZmluYWxpemVkICYmIGluZGV4ID49IDAgJiYgaW5kZXggPCBoYXNoX3NpemUoaCkpIHsKCiAgICAgIHZhbHVlID0gSlNfTmV3VWludDMyKGN0eCwgaC0+ZGlnZXN0W2luZGV4XSk7CiAgICB9CiAgfSBlbHNlIGlmKGpzX2F0b21faXNfbGVuZ3RoKGN0eCwgcHJvcCkpIHsKICAgIHZhbHVlID0gSlNfTmV3VWludDMyKGN0eCwgaC0+ZmluYWxpemVkID8gaGFzaF9zaXplKGgpIDogMCk7CiAgfSBlbHNlIHsKICAgIEpTVmFsdWUgcHJvdG8gPSBKU19HZXRQcm90b3R5cGUoY3R4LCBvYmopOwogICAgaWYoSlNfSXNPYmplY3QocHJvdG8pICYmIEpTX0hhc1Byb3BlcnR5KGN0eCwgcHJvdG8sIHByb3ApKQogICAgICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5KGN0eCwgcHJvdG8sIHByb3ApOwogIH0KCiAgcmV0dXJuIHZhbHVlOwp9CgpzdGF0aWMgSlNDbGFzc0V4b3RpY01ldGhvZHMgbWlubmV0X2hhc2hfZXhvdGljX21ldGhvZHMgPSB7CiAgICAuZ2V0X293bl9wcm9wZXJ0eSA9IG1pbm5ldF9oYXNoX2dldF9vd25fcHJvcGVydHksCiAgICAuZ2V0X293bl9wcm9wZXJ0eV9uYW1lcyA9IG1pbm5ldF9oYXNoX2dldF9vd25fcHJvcGVydHlfbmFtZXMsCiAgICAuaGFzX3Byb3BlcnR5ID0gbWlubmV0X2hhc2hfaGFzX3Byb3BlcnR5LAogICAgLmdldF9wcm9wZXJ0eSA9IG1pbm5ldF9oYXNoX2dldF9wcm9wZXJ0eSwKfTsKCkpTQ2xhc3NEZWYgbWlubmV0X2hhc2hfY2xhc3MgPSB7CiAgICAiTWlubmV0SGFzaCIsCiAgICAuZmluYWxpemVyID0gbWlubmV0X2hhc2hfZmluYWxpemVyLAogICAgLmNhbGwgPSAmbWlubmV0X2hhc2hfY2FsbCwKICAgIC5leG90aWMgPSAmbWlubmV0X2hhc2hfZXhvdGljX21ldGhvZHMsCn07Cgpjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfaGFzaF9wcm90b19mdW5jc1tdID0gewogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJ2YWx1ZU9mIiwgMCwgbWlubmV0X2hhc2hfbWV0aG9kLCBIQVNIX1ZBTFVFT0YpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJ0b1N0cmluZyIsIDAsIG1pbm5ldF9oYXNoX21ldGhvZCwgSEFTSF9UT1NUUklORyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInVwZGF0ZSIsIDEsIG1pbm5ldF9oYXNoX21ldGhvZCwgSEFTSF9VUERBVEUpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJmaW5hbGl6ZSIsIDAsIG1pbm5ldF9oYXNoX21ldGhvZCwgSEFTSF9GSU5BTElaRSksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigidHlwZSIsIG1pbm5ldF9oYXNoX2dldCwgMCwgSEFTSF9UWVBFLCAwKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJieXRlTGVuZ3RoIiwgbWlubmV0X2hhc2hfZ2V0LCAwLCBIQVNIX0JZVEVMRU5HVEgsIDApLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImJpdExlbmd0aCIsIG1pbm5ldF9oYXNoX2dldCwgMCwgSEFTSF9CSVRMRU5HVEgsIDApLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImhtYWMiLCBtaW5uZXRfaGFzaF9nZXQsIDAsIEhBU0hfSE1BQywgMCksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigiZmluYWxpemVkIiwgbWlubmV0X2hhc2hfZ2V0LCAwLCBIQVNIX0ZJTkFMSVpFRCwgMCksCiAgICBKU19QUk9QX1NUUklOR19ERUYoIltTeW1ib2wudG9TdHJpbmdUYWddIiwgIk1pbm5ldEhhc2giLCBKU19QUk9QX0NPTkZJR1VSQUJMRSksCn07Cgpjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfaGFzaF9zdGF0aWNfZnVuY3NbXSA9IHsKICAgIEpTX1BST1BfSU5UMzJfREVGKCJUWVBFX01ENSIsIExXU19HRU5IQVNIX1RZUEVfTUQ1LCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIlRZUEVfU0hBMSIsIExXU19HRU5IQVNIX1RZUEVfU0hBMSwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJUWVBFX1NIQTI1NiIsIExXU19HRU5IQVNIX1RZUEVfU0hBMjU2LCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIlRZUEVfU0hBMzg0IiwgTFdTX0dFTkhBU0hfVFlQRV9TSEEzODQsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiVFlQRV9TSEE1MTIiLCBMV1NfR0VOSEFTSF9UWVBFX1NIQTUxMiwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKfTsKCmNvbnN0IHNpemVfdCBtaW5uZXRfaGFzaF9wcm90b19mdW5jc19zaXplID0gY291bnRvZihtaW5uZXRfaGFzaF9wcm90b19mdW5jcyk7CmNvbnN0IHNpemVfdCBtaW5uZXRfaGFzaF9zdGF0aWNfZnVuY3Nfc2l6ZSA9IGNvdW50b2YobWlubmV0X2hhc2hfc3RhdGljX2Z1bmNzKTsKAAAAAAAAAAB/LAAAAAAAAAAAAAAAAAAAAAAAAH8sAAAAAAAAAAAAAAAAAAAAAAAAfywAAAAAAAAAAAAAAAAAAAAAAAB/LAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaRcAAAAAAABpFwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-form-parser.c",
			"settings":
			{
				"buffer_size": 15412,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					42,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1xMAAAAAAADXEwAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1xMAAAAAAADXEwAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPo4AAAAAAAA+zgAAAAAAAAAAAAA+zgAAAAAAAD7OAAAAAAAAAIAAAAvLw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/DgAAAAAAAD6OAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAGAvAAAAAAAAYS8AAAAAAAAAAAAAYS8AAAAAAABhLwAAAAAAABEAAAAKICBpbnQzMl90IGVudHJ5Ow",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcS8AAAAAAABgLwAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYS8AAAAAAABhLwAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYS8AAAAAAABhLwAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					2,
					"left_delete",
					null,
					"AgAAAI8vAAAAAAAAjy8AAAAAAAAWAAAAICAgIGNoYXIqIHBhcmFtX25hbWU7Co4vAAAAAAAAji8AAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjy8AAAAAAAClLwAAAAAAAAAAAAAAAAAA"
				],
				[
					84,
					1,
					"left_delete",
					null,
					"AQAAAP4lAAAAAAAA/iUAAAAAAAAgAAAAICBKU1ZhbHVlIHZhbHVlID0gSlNfVU5ERUZJTkVEOwo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/iUAAAAAAAAeJgAAAAAAAAAAAAAAAAAA"
				],
				[
					87,
					1,
					"left_delete",
					null,
					"AQAAAP0lAAAAAAAA/SUAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/iUAAAAAAAD+JQAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/SUAAAAAAAD9JQAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/SUAAAAAAAD9JQAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"cut",
					null,
					"AQAAAMcXAAAAAAAAxxcAAAAAAABDAAAAICAgIEpTVmFsdWUgY2JfY2xvc2UgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIGFyZ3ZbMl0sICJvbkNsb3NlIik7Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxxcAAAAAAAAKGAAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					2,
					"paste",
					null,
					"AgAAAMcXAAAAAAAAChgAAAAAAAAAAAAAChgAAAAAAABNGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxxcAAAAAAADHFwAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "fiuna"
					},
					"BgAAABkYAAAAAAAAGhgAAAAAAAAAAAAAGhgAAAAAAAAaGAAAAAAAAAUAAABjbG9zZRoYAAAAAAAAGxgAAAAAAAAAAAAAGxgAAAAAAAAcGAAAAAAAAAAAAAAcGAAAAAAAAB0YAAAAAAAAAAAAAB0YAAAAAAAAHhgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGRgAAAAAAAAeGAAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					3,
					"left_delete",
					null,
					"AwAAAB0YAAAAAAAAHRgAAAAAAAABAAAAYRwYAAAAAAAAHBgAAAAAAAABAAAAbhsYAAAAAAAAGxgAAAAAAAABAAAAdQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHhgAAAAAAAAeGAAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "nalize"
					},
					"BgAAABsYAAAAAAAAHBgAAAAAAAAAAAAAHBgAAAAAAAAdGAAAAAAAAAAAAAAdGAAAAAAAAB4YAAAAAAAAAAAAAB4YAAAAAAAAHxgAAAAAAAAAAAAAHxgAAAAAAAAgGAAAAAAAAAAAAAAgGAAAAAAAACEYAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGxgAAAAAAAAbGAAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "Finalize"
					},
					"CQAAAEcYAAAAAAAASBgAAAAAAAAAAAAASBgAAAAAAABIGAAAAAAAAAUAAABDbG9zZUgYAAAAAAAASRgAAAAAAAAAAAAASRgAAAAAAABKGAAAAAAAAAAAAABKGAAAAAAAAEsYAAAAAAAAAAAAAEsYAAAAAAAATBgAAAAAAAAAAAAATBgAAAAAAABNGAAAAAAAAAAAAABNGAAAAAAAAE4YAAAAAAAAAAAAAE4YAAAAAAAATxgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARxgAAAAAAABMGAAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"cut",
					null,
					"AQAAAOIYAAAAAAAA4hgAAAAAAAAiAAAAICAgIEdFVENCKGNiX2Nsb3NlLCBmcC0+Y2IuY2xvc2UpCg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4hgAAAAAAAAEGQAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					2,
					"paste",
					null,
					"AgAAAOIYAAAAAAAABBkAAAAAAAAAAAAABBkAAAAAAAAmGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4hgAAAAAAADiGAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"paste",
					null,
					"AgAAAA4ZAAAAAAAAGRkAAAAAAAAAAAAAGRkAAAAAAAAZGQAAAAAAAAgAAABjYl9jbG9zZQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADhkAAAAAAAAWGQAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "finalize"
					},
					"CQAAACIZAAAAAAAAIxkAAAAAAAAAAAAAIxkAAAAAAAAjGQAAAAAAAAUAAABjbG9zZSMZAAAAAAAAJBkAAAAAAAAAAAAAJBkAAAAAAAAlGQAAAAAAAAAAAAAlGQAAAAAAACYZAAAAAAAAAAAAACYZAAAAAAAAJxkAAAAAAAAAAAAAJxkAAAAAAAAoGQAAAAAAAAAAAAAoGQAAAAAAACkZAAAAAAAAAAAAACkZAAAAAAAAKhkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIhkAAAAAAAAnGQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-form-parser.h",
			"settings":
			{
				"buffer_size": 2467,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAI4BAAAAAAAAjwEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjgEAAAAAAACOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " finalize"
					},
					"CQAAAI8BAAAAAAAAkAEAAAAAAAAAAAAAkAEAAAAAAACRAQAAAAAAAAAAAACRAQAAAAAAAJIBAAAAAAAAAAAAAJIBAAAAAAAAkwEAAAAAAAAAAAAAkwEAAAAAAACUAQAAAAAAAAAAAACUAQAAAAAAAJUBAAAAAAAAAAAAAJUBAAAAAAAAlgEAAAAAAAAAAAAAlgEAAAAAAACXAQAAAAAAAAAAAACXAQAAAAAAAJgBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjwEAAAAAAACPAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-request.c",
			"settings":
			{
				"buffer_size": 11644,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"left_delete",
					null,
					"AQAAANoRAAAAAAAA2hEAAAAAAAAxAAAACiAgICAvKiAgIGlmKG5hbWVsZW4gPj0gbGVuKQogICAgICAgICBjb250aW51ZTsqLw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2hEAAAAAAAALEgAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAPwSAAAAAAAA/hIAAAAAAAAAAAAA1RAAAAAAAADXEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/BIAAAAAAADVEAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/hIAAAAAAADXEAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAAkfAAAAAAAACh8AAAAAAAAAAAAACh8AAAAAAAAOHwAAAAAAAAAAAAAOHwAAAAAAABAfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACR8AAAAAAAAJHwAAAAAAAAAAAAAAwHZA"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "printf"
					},
					"BgAAABAfAAAAAAAAER8AAAAAAAAAAAAAER8AAAAAAAASHwAAAAAAAAAAAAASHwAAAAAAABMfAAAAAAAAAAAAABMfAAAAAAAAFB8AAAAAAAAAAAAAFB8AAAAAAAAVHwAAAAAAAAAAAAAVHwAAAAAAABYfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEB8AAAAAAAAQHwAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABYfAAAAAAAAGB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFh8AAAAAAAAWHwAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAABcfAAAAAAAAGR8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFx8AAAAAAAAXHwAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "REQUEST_HEADERS"
					},
					"DwAAABgfAAAAAAAAGR8AAAAAAAAAAAAAGR8AAAAAAAAaHwAAAAAAAAAAAAAaHwAAAAAAABsfAAAAAAAAAAAAABsfAAAAAAAAHB8AAAAAAAAAAAAAHB8AAAAAAAAdHwAAAAAAAAAAAAAdHwAAAAAAAB4fAAAAAAAAAAAAAB4fAAAAAAAAHx8AAAAAAAAAAAAAHx8AAAAAAAAgHwAAAAAAAAAAAAAgHwAAAAAAACEfAAAAAAAAAAAAACEfAAAAAAAAIh8AAAAAAAAAAAAAIh8AAAAAAAAjHwAAAAAAAAAAAAAjHwAAAAAAACQfAAAAAAAAAAAAACQfAAAAAAAAJR8AAAAAAAAAAAAAJR8AAAAAAAAmHwAAAAAAAAAAAAAmHwAAAAAAACcfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGB8AAAAAAAAYHwAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACcfAAAAAAAAKB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJx8AAAAAAAAnHwAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAACcfAAAAAAAAJx8AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAKB8AAAAAAAAoHwAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " %p"
					},
					"AwAAACcfAAAAAAAAKB8AAAAAAAAAAAAAKB8AAAAAAAApHwAAAAAAAAAAAAApHwAAAAAAACofAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJx8AAAAAAAAnHwAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"left_delete",
					null,
					"AQAAACkfAAAAAAAAKR8AAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAKh8AAAAAAAAqHwAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAACkfAAAAAAAAKh8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKR8AAAAAAAApHwAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACsfAAAAAAAALB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKx8AAAAAAAArHwAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " req->heawders"
					},
					"DgAAACwfAAAAAAAALR8AAAAAAAAAAAAALR8AAAAAAAAuHwAAAAAAAAAAAAAuHwAAAAAAAC8fAAAAAAAAAAAAAC8fAAAAAAAAMB8AAAAAAAAAAAAAMB8AAAAAAAAxHwAAAAAAAAAAAAAxHwAAAAAAADIfAAAAAAAAAAAAADIfAAAAAAAAMx8AAAAAAAAAAAAAMx8AAAAAAAA0HwAAAAAAAAAAAAA0HwAAAAAAADUfAAAAAAAAAAAAADUfAAAAAAAANh8AAAAAAAAAAAAANh8AAAAAAAA3HwAAAAAAAAAAAAA3HwAAAAAAADgfAAAAAAAAAAAAADgfAAAAAAAAOR8AAAAAAAAAAAAAOR8AAAAAAAA6HwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALB8AAAAAAAAsHwAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					5,
					"left_delete",
					null,
					"BQAAADkfAAAAAAAAOR8AAAAAAAABAAAAczgfAAAAAAAAOB8AAAAAAAABAAAAcjcfAAAAAAAANx8AAAAAAAABAAAAZTYfAAAAAAAANh8AAAAAAAABAAAAZDUfAAAAAAAANR8AAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAOh8AAAAAAAA6HwAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "ders.start"
					},
					"CgAAADUfAAAAAAAANh8AAAAAAAAAAAAANh8AAAAAAAA3HwAAAAAAAAAAAAA3HwAAAAAAADgfAAAAAAAAAAAAADgfAAAAAAAAOR8AAAAAAAAAAAAAOR8AAAAAAAA6HwAAAAAAAAAAAAA6HwAAAAAAADsfAAAAAAAAAAAAADsfAAAAAAAAPB8AAAAAAAAAAAAAPB8AAAAAAAA9HwAAAAAAAAAAAAA9HwAAAAAAAD4fAAAAAAAAAAAAAD4fAAAAAAAAPx8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANR8AAAAAAAA1HwAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEAfAAAAAAAAQR8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQB8AAAAAAABAHwAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEEfAAAAAAAAQh8AAAAAAAAAAAAAQh8AAAAAAABIHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQR8AAAAAAABBHwAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "\\n"
					},
					"AwAAACofAAAAAAAAKx8AAAAAAAAAAAAAQx8AAAAAAABDHwAAAAAAAAYAAAAgICAgICArHwAAAAAAACwfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKh8AAAAAAAAqHwAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "start=)"
					},
					"BwAAACgfAAAAAAAAKR8AAAAAAAAAAAAAKR8AAAAAAAAqHwAAAAAAAAAAAAAqHwAAAAAAACsfAAAAAAAAAAAAACsfAAAAAAAALB8AAAAAAAAAAAAALB8AAAAAAAAtHwAAAAAAAAAAAAAtHwAAAAAAAC4fAAAAAAAAAAAAAC4fAAAAAAAALx8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKB8AAAAAAAAoHwAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"left_delete",
					null,
					"AQAAAC4fAAAAAAAALh8AAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAALx8AAAAAAAAvHwAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADAfAAAAAAAAMR8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMB8AAAAAAAAwHwAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " end=%p"
					},
					"BwAAADEfAAAAAAAAMh8AAAAAAAAAAAAAMh8AAAAAAAAzHwAAAAAAAAAAAAAzHwAAAAAAADQfAAAAAAAAAAAAADQfAAAAAAAANR8AAAAAAAAAAAAANR8AAAAAAAA2HwAAAAAAAAAAAAA2HwAAAAAAADcfAAAAAAAAAAAAADcfAAAAAAAAOB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMR8AAAAAAAAxHwAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAE8fAAAAAAAAUB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATx8AAAAAAABPHwAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " req->headers.end"
					},
					"EQAAAFAfAAAAAAAAUR8AAAAAAAAAAAAAUR8AAAAAAABSHwAAAAAAAAAAAABSHwAAAAAAAFMfAAAAAAAAAAAAAFMfAAAAAAAAVB8AAAAAAAAAAAAAVB8AAAAAAABVHwAAAAAAAAAAAABVHwAAAAAAAFYfAAAAAAAAAAAAAFYfAAAAAAAAVx8AAAAAAAAAAAAAVx8AAAAAAABYHwAAAAAAAAAAAABYHwAAAAAAAFkfAAAAAAAAAAAAAFkfAAAAAAAAWh8AAAAAAAAAAAAAWh8AAAAAAABbHwAAAAAAAAAAAABbHwAAAAAAAFwfAAAAAAAAAAAAAFwfAAAAAAAAXR8AAAAAAAAAAAAAXR8AAAAAAABeHwAAAAAAAAAAAABeHwAAAAAAAF8fAAAAAAAAAAAAAF8fAAAAAAAAYB8AAAAAAAAAAAAAYB8AAAAAAABhHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUB8AAAAAAABQHwAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAA8fAAAAAAAAEB8AAAAAAAAAAAAAEB8AAAAAAAARHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADx8AAAAAAAAPHwAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGYfAAAAAAAAZx8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZh8AAAAAAABmHwAAAAAAAAAAAAAAgFNA"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "i8f/"
					},
					"BAAAAGcfAAAAAAAAaB8AAAAAAAAAAAAAaB8AAAAAAABpHwAAAAAAAAAAAABpHwAAAAAAAGofAAAAAAAAAAAAAGofAAAAAAAAax8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZx8AAAAAAABnHwAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGsfAAAAAAAAbR8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAax8AAAAAAABrHwAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAGsfAAAAAAAAax8AAAAAAAABAAAAKGsfAAAAAAAAax8AAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAbB8AAAAAAABsHwAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					3,
					"left_delete",
					null,
					"AwAAAGofAAAAAAAAah8AAAAAAAABAAAAL2kfAAAAAAAAaR8AAAAAAAABAAAAZmgfAAAAAAAAaB8AAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAAax8AAAAAAABrHwAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAGgfAAAAAAAAaR8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaB8AAAAAAABoHwAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGkfAAAAAAAAax8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaR8AAAAAAABpHwAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"paste",
					null,
					"AQAAAGofAAAAAAAAdh8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAah8AAAAAAABqHwAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHYfAAAAAAAAeB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdh8AAAAAAAB2HwAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "&req->headers"
					},
					"DQAAAHcfAAAAAAAAeB8AAAAAAAAAAAAAeB8AAAAAAAB5HwAAAAAAAAAAAAB5HwAAAAAAAHofAAAAAAAAAAAAAHofAAAAAAAAex8AAAAAAAAAAAAAex8AAAAAAAB8HwAAAAAAAAAAAAB8HwAAAAAAAH0fAAAAAAAAAAAAAH0fAAAAAAAAfh8AAAAAAAAAAAAAfh8AAAAAAAB/HwAAAAAAAAAAAAB/HwAAAAAAAIAfAAAAAAAAAAAAAIAfAAAAAAAAgR8AAAAAAAAAAAAAgR8AAAAAAACCHwAAAAAAAAAAAACCHwAAAAAAAIMfAAAAAAAAAAAAAIMfAAAAAAAAhB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdx8AAAAAAAB3HwAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAArB8AAAAAAACzHwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-server.c",
			"settings":
			{
				"buffer_size": 18181,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					27,
					1,
					"insert",
					{
						"characters": "\ninfo->ext"
					},
					"CwAAAL8qAAAAAAAAwCoAAAAAAAAAAAAAwCoAAAAAAADCKgAAAAAAAAAAAADCKgAAAAAAAMMqAAAAAAAAAAAAAMMqAAAAAAAAxCoAAAAAAAAAAAAAxCoAAAAAAADFKgAAAAAAAAAAAADFKgAAAAAAAMYqAAAAAAAAAAAAAMYqAAAAAAAAxyoAAAAAAAAAAAAAxyoAAAAAAADIKgAAAAAAAAAAAADIKgAAAAAAAMkqAAAAAAAAAAAAAMkqAAAAAAAAyioAAAAAAAAAAAAAyioAAAAAAADLKgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvyoAAAAAAAC/KgAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "ends"
					},
					"BAAAAMsqAAAAAAAAzCoAAAAAAAAAAAAAzCoAAAAAAADNKgAAAAAAAAAAAADNKgAAAAAAAM4qAAAAAAAAAAAAAM4qAAAAAAAAzyoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyyoAAAAAAADLKgAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					2,
					"left_delete",
					null,
					"AgAAAM4qAAAAAAAAzioAAAAAAAABAAAAc80qAAAAAAAAzSoAAAAAAAABAAAAZA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzyoAAAAAAADPKgAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "sions"
					},
					"BQAAAM0qAAAAAAAAzioAAAAAAAAAAAAAzioAAAAAAADPKgAAAAAAAAAAAADPKgAAAAAAANAqAAAAAAAAAAAAANAqAAAAAAAA0SoAAAAAAAAAAAAA0SoAAAAAAADSKgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzSoAAAAAAADNKgAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANIqAAAAAAAA0yoAAAAAAAAAAAAA0yoAAAAAAADUKgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0ioAAAAAAADSKgAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANQqAAAAAAAA1SoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1CoAAAAAAADUKgAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "extensions;"
					},
					"CwAAANUqAAAAAAAA1ioAAAAAAAAAAAAA1ioAAAAAAADXKgAAAAAAAAAAAADXKgAAAAAAANgqAAAAAAAAAAAAANgqAAAAAAAA2SoAAAAAAAAAAAAA2SoAAAAAAADaKgAAAAAAAAAAAADaKgAAAAAAANsqAAAAAAAAAAAAANsqAAAAAAAA3CoAAAAAAAAAAAAA3CoAAAAAAADdKgAAAAAAAAAAAADdKgAAAAAAAN4qAAAAAAAAAAAAAN4qAAAAAAAA3yoAAAAAAAAAAAAA3yoAAAAAAADgKgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1SoAAAAAAADVKgAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4CoAAAAAAADgKgAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4CoAAAAAAADgKgAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4CoAAAAAAADgKgAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4CoAAAAAAADgKgAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4CoAAAAAAADgKgAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"cut",
					null,
					"AQAAAFkjAAAAAAAAWSMAAAAAAABDAAAAICBKU1ZhbHVlIG9wdF9vbl9odHRwID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcHRpb25zLCAib25IdHRwIik7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZIwAAAAAAAJwjAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					2,
					"paste",
					null,
					"AgAAAFkjAAAAAAAAnCMAAAAAAAAAAAAAnCMAAAAAAADfIwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZIwAAAAAAAFkjAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "read"
					},
					"BQAAAK0jAAAAAAAAriMAAAAAAAAAAAAAriMAAAAAAACuIwAAAAAAAAQAAABodHRwriMAAAAAAACvIwAAAAAAAAAAAACvIwAAAAAAALAjAAAAAAAAAAAAALAjAAAAAAAAsSMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtIwAAAAAAALEjAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					2,
					"left_delete",
					null,
					"AgAAANgjAAAAAAAA2CMAAAAAAAADAAAAdHRw1yMAAAAAAADXIwAAAAAAAAEAAABI",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYIwAAAAAAANsjAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "Read"
					},
					"BAAAANcjAAAAAAAA2CMAAAAAAAAAAAAA2CMAAAAAAADZIwAAAAAAAAAAAADZIwAAAAAAANojAAAAAAAAAAAAANojAAAAAAAA2yMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXIwAAAAAAANcjAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"cut",
					null,
					"AQAAAAwpAAAAAAAADCkAAAAAAAAmAAAAICBHRVRDQihvcHRfb25faHR0cCwgc2VydmVyLT5jYi5odHRwKQo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMKQAAAAAAADIpAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					2,
					"paste",
					null,
					"AgAAAAwpAAAAAAAAMikAAAAAAAAAAAAAMikAAAAAAABYKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMKQAAAAAAAAwpAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "read"
					},
					"BQAAAEEpAAAAAAAAQikAAAAAAAAAAAAAQikAAAAAAABCKQAAAAAAAAQAAABodHRwQikAAAAAAABDKQAAAAAAAAAAAABDKQAAAAAAAEQpAAAAAAAAAAAAAEQpAAAAAAAARSkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBKQAAAAAAAEUpAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "read"
					},
					"BQAAAFIpAAAAAAAAUykAAAAAAAAAAAAAUykAAAAAAABTKQAAAAAAAAQAAABodHRwUykAAAAAAABUKQAAAAAAAAAAAABUKQAAAAAAAFUpAAAAAAAAAAAAAFUpAAAAAAAAVikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSKQAAAAAAAFYpAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"cut",
					null,
					"AQAAAJwjAAAAAAAAnCMAAAAAAABDAAAAICBKU1ZhbHVlIG9wdF9vbl9yZWFkID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcHRpb25zLCAib25SZWFkIik7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcIwAAAAAAAN8jAAAAAAAAAAAAAAAA8L8"
				],
				[
					75,
					2,
					"paste",
					null,
					"AgAAAJwjAAAAAAAA3yMAAAAAAAAAAAAA3yMAAAAAAAAiJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcIwAAAAAAAJwjAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "post"
					},
					"BQAAAPAjAAAAAAAA8SMAAAAAAAAAAAAA8SMAAAAAAADxIwAAAAAAAAQAAAByZWFk8SMAAAAAAADyIwAAAAAAAAAAAADyIwAAAAAAAPMjAAAAAAAAAAAAAPMjAAAAAAAA9CMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwIwAAAAAAAPQjAAAAAAAAAAAAAAAA8L8"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "Péo"
					},
					"BAAAABokAAAAAAAAGyQAAAAAAAAAAAAAGyQAAAAAAAAbJAAAAAAAAAQAAABSZWFkGyQAAAAAAAAcJAAAAAAAAAAAAAAcJAAAAAAAAB0kAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaJAAAAAAAAB4kAAAAAAAAAAAAAAAA8L8"
				],
				[
					82,
					2,
					"left_delete",
					null,
					"AgAAABwkAAAAAAAAHCQAAAAAAAABAAAAbxskAAAAAAAAGyQAAAAAAAACAAAAw6k",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdJAAAAAAAAB0kAAAAAAAAAAAAAAAA8L8"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "ost"
					},
					"AwAAABskAAAAAAAAHCQAAAAAAAAAAAAAHCQAAAAAAAAdJAAAAAAAAAAAAAAdJAAAAAAAAB4kAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbJAAAAAAAABskAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"cut",
					null,
					"AQAAAHUpAAAAAAAAdSkAAAAAAAAmAAAAICBHRVRDQihvcHRfb25fcmVhZCwgc2VydmVyLT5jYi5yZWFkKQo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1KQAAAAAAAJspAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					2,
					"paste",
					null,
					"AgAAAHUpAAAAAAAAmykAAAAAAAAAAAAAmykAAAAAAADBKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1KQAAAAAAAHUpAAAAAAAAAAAAAAAA8L8"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "post"
					},
					"BQAAAKopAAAAAAAAqykAAAAAAAAAAAAAqykAAAAAAACrKQAAAAAAAAQAAAByZWFkqykAAAAAAACsKQAAAAAAAAAAAACsKQAAAAAAAK0pAAAAAAAAAAAAAK0pAAAAAAAArikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqKQAAAAAAAK4pAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "post"
					},
					"BQAAALspAAAAAAAAvCkAAAAAAAAAAAAAvCkAAAAAAAC8KQAAAAAAAAQAAAByZWFkvCkAAAAAAAC9KQAAAAAAAAAAAAC9KQAAAAAAAL4pAAAAAAAAAAAAAL4pAAAAAAAAvykAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7KQAAAAAAAL8pAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "minnet.h",
			"settings":
			{
				"buffer_size": 11060,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": ",read"
					},
					"BQAAAAwRAAAAAAAADREAAAAAAAAAAAAADREAAAAAAAAOEQAAAAAAAAAAAAAOEQAAAAAAAA8RAAAAAAAAAAAAAA8RAAAAAAAAEBEAAAAAAAAAAAAAEBEAAAAAAAAREQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMEQAAAAAAAAwRAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAREQAAAAAAABERAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABIRAAAAAAAAExEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASEQAAAAAAABIRAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " post"
					},
					"BQAAABMRAAAAAAAAFBEAAAAAAAAAAAAAFBEAAAAAAAAVEQAAAAAAAAAAAAAVEQAAAAAAABYRAAAAAAAAAAAAABYRAAAAAAAAFxEAAAAAAAAAAAAAFxEAAAAAAAAYEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATEQAAAAAAABMRAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "minnet-server.h",
			"settings":
			{
				"buffer_size": 874,
				"line_ending": "Unix"
			}
		},
		{
			"file": "minnet-server-ws.c",
			"settings":
			{
				"buffer_size": 8168,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					69,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAOsZAAAAAAAA7BkAAAAAAAAAAAAA7BkAAAAAAADsGQAAAAAAAIwAAAAKICAgICAgICAvKiAgICAgIGlmKCFibG9ja19mcm9tYXJyYXlidWZmZXIoJmJsb2NrLGl0ZW0tPnZhbHVlLGN0eCkpIHsKCiAgICAgICAgICAgICAgfQogICAgICAgICovCgogICAgICAgIC8vIGpzX2J1ZmZlcl9mcmVlKGN0eCwgJmJ1ZmZlcik7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrGQAAAAAAAHcaAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAHcXAAAAAAAAeBcAAAAAAAAAAAAAeBcAAAAAAAB4FwAAAAAAALcAAAAgICAgIC8qIE1pbm5ldEJ1ZmZlciogYnVmID0gJnNlc3Npb24tPnNlbmRfYnVmOyovCiAgICAgIC8vIGZwcmludGYoc3RkZXJyLCAiXHgxYlsxOzMzbXdyaXRhYmxlXHgxYlswbSAlcyBidWY9JXNcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgYnVmZmVyX2VzY2FwZWQoYnVmLCBjdHgpKTsKICAgICAgLy8",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuGAAAAAAAAHcXAAAAAAAAAAAAAAAA8L8"
				],
				[
					79,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAO8ZAAAAAAAA8RkAAAAAAAAAAAAAfBcAAAAAAAB+FwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8FwAAAAAAAO8ZAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "au"
					},
					"AgAAAHgXAAAAAAAAeRcAAAAAAAAAAAAAeRcAAAAAAAB6FwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4FwAAAAAAAHgXAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					2,
					"left_delete",
					null,
					"AgAAAHkXAAAAAAAAeRcAAAAAAAABAAAAdXgXAAAAAAAAeBcAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6FwAAAAAAAHoXAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "sitze"
					},
					"BQAAAHgXAAAAAAAAeRcAAAAAAAAAAAAAeRcAAAAAAAB6FwAAAAAAAAAAAAB6FwAAAAAAAHsXAAAAAAAAAAAAAHsXAAAAAAAAfBcAAAAAAAAAAAAAfBcAAAAAAAB9FwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4FwAAAAAAAHgXAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					2,
					"left_delete",
					null,
					"AgAAAHwXAAAAAAAAfBcAAAAAAAABAAAAZXsXAAAAAAAAexcAAAAAAAABAAAAeg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9FwAAAAAAAH0XAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "e_t"
					},
					"AwAAAHsXAAAAAAAAfBcAAAAAAAAAAAAAfBcAAAAAAAB9FwAAAAAAAAAAAAB9FwAAAAAAAH4XAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7FwAAAAAAAHsXAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					4,
					"left_delete",
					null,
					"BAAAAH0XAAAAAAAAfRcAAAAAAAABAAAAdHwXAAAAAAAAfBcAAAAAAAABAAAAX3sXAAAAAAAAexcAAAAAAAABAAAAZXoXAAAAAAAAehcAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+FwAAAAAAAH4XAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "ze_t"
					},
					"BAAAAHoXAAAAAAAAexcAAAAAAAAAAAAAexcAAAAAAAB8FwAAAAAAAAAAAAB8FwAAAAAAAH0XAAAAAAAAAAAAAH0XAAAAAAAAfhcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6FwAAAAAAAHoXAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": " avail"
					},
					"BgAAAH4XAAAAAAAAfxcAAAAAAAAAAAAAfxcAAAAAAACAFwAAAAAAAAAAAACAFwAAAAAAAIEXAAAAAAAAAAAAAIEXAAAAAAAAghcAAAAAAAAAAAAAghcAAAAAAACDFwAAAAAAAAAAAACDFwAAAAAAAIQXAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+FwAAAAAAAH4XAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIQXAAAAAAAAhRcAAAAAAAAAAAAAhRcAAAAAAACGFwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEFwAAAAAAAIQXAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIYXAAAAAAAAhxcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGFwAAAAAAAIYXAAAAAAAAAAAAAAAA8L8"
				],
				[
					98,
					1,
					"paste",
					null,
					"AQAAAIcXAAAAAAAAlRcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHFwAAAAAAAIcXAAAAAAAAAAAAAAAA8L8"
				],
				[
					99,
					3,
					"left_delete",
					null,
					"AwAAAJQXAAAAAAAAlBcAAAAAAAABAAAAd5MXAAAAAAAAkxcAAAAAAAABAAAAZZIXAAAAAAAAkhcAAAAAAAABAAAAbg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVFwAAAAAAAJUXAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "avail"
					},
					"BQAAAJIXAAAAAAAAkxcAAAAAAAAAAAAAkxcAAAAAAACUFwAAAAAAAAAAAACUFwAAAAAAAJUXAAAAAAAAAAAAAJUXAAAAAAAAlhcAAAAAAAAAAAAAlhcAAAAAAACXFwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSFwAAAAAAAJIXAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJcXAAAAAAAAmRcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXFwAAAAAAAJcXAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "opaque->ws->s"
					},
					"DQAAAJgXAAAAAAAAmRcAAAAAAAAAAAAAmRcAAAAAAACaFwAAAAAAAAAAAACaFwAAAAAAAJsXAAAAAAAAAAAAAJsXAAAAAAAAnBcAAAAAAAAAAAAAnBcAAAAAAACdFwAAAAAAAAAAAACdFwAAAAAAAJ4XAAAAAAAAAAAAAJ4XAAAAAAAAnxcAAAAAAAAAAAAAnxcAAAAAAACgFwAAAAAAAAAAAACgFwAAAAAAAKEXAAAAAAAAAAAAAKEXAAAAAAAAohcAAAAAAAAAAAAAohcAAAAAAACjFwAAAAAAAAAAAACjFwAAAAAAAKQXAAAAAAAAAAAAAKQXAAAAAAAApRcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYFwAAAAAAAJgXAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "endq"
					},
					"BAAAAKUXAAAAAAAAphcAAAAAAAAAAAAAphcAAAAAAACnFwAAAAAAAAAAAACnFwAAAAAAAKgXAAAAAAAAAAAAAKgXAAAAAAAAqRcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClFwAAAAAAAKUXAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKoXAAAAAAAAqxcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqFwAAAAAAAKoXAAAAAAAAAAAAAAAA8L8"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAHUXAAAAAAAAdhcAAAAAAAAAAAAAdhcAAAAAAAB3FwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1FwAAAAAAAHUXAAAAAAAAAAAAAAAA8L8"
				],
				[
					116,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHcXAAAAAAAAeRcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3FwAAAAAAAHcXAAAAAAAAAAAAAAAA8L8"
				],
				[
					117,
					1,
					"paste",
					null,
					"AQAAAHgXAAAAAAAAiRcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4FwAAAAAAAHgXAAAAAAAAAAAAAAAA8L8"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIoXAAAAAAAAixcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKFwAAAAAAAIoXAAAAAAAAAAAAAAAA8L8"
				],
				[
					120,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIsXAAAAAAAAjRcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLFwAAAAAAAIsXAAAAAAAAAAAAAAAA8L8"
				],
				[
					121,
					1,
					"right_delete",
					null,
					"AQAAAIwXAAAAAAAAjBcAAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMFwAAAAAAAIwXAAAAAAAAAAAAAAAA8L8"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "\n\n}"
					},
					"CAAAAMIXAAAAAAAAwxcAAAAAAAAAAAAAwxcAAAAAAADFFwAAAAAAAAAAAADFFwAAAAAAAMYXAAAAAAAAAAAAAMYXAAAAAAAAyBcAAAAAAAAAAAAAwxcAAAAAAADDFwAAAAAAAAIAAAAgIMYXAAAAAAAAxxcAAAAAAAAAAAAAxBcAAAAAAADEFwAAAAAAAAIAAAAgIMQXAAAAAAAAxBcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCFwAAAAAAAMIXAAAAAAAAAAAAAAAA8L8"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"AwAAAMMXAAAAAAAAxBcAAAAAAAAAAAAAxBcAAAAAAADFFwAAAAAAAAAAAADFFwAAAAAAAMYXAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDFwAAAAAAAMMXAAAAAAAAAAAAAAAAKkA"
				],
				[
					132,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMYXAAAAAAAAyBcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGFwAAAAAAAMYXAAAAAAAAAAAAAAAA8L8"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAMcXAAAAAAAAyBcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHFwAAAAAAAMcXAAAAAAAAAAAAAAAA8L8"
				],
				[
					134,
					1,
					"left_delete",
					null,
					"AQAAAMcXAAAAAAAAxxcAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIFwAAAAAAAMgXAAAAAAAAAAAAAAAA8L8"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "avail"
					},
					"BQAAAMcXAAAAAAAAyBcAAAAAAAAAAAAAyBcAAAAAAADJFwAAAAAAAAAAAADJFwAAAAAAAMoXAAAAAAAAAAAAAMoXAAAAAAAAyxcAAAAAAAAAAAAAyxcAAAAAAADMFwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHFwAAAAAAAMcXAAAAAAAAAAAAAAAA8L8"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM0XAAAAAAAAzhcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNFwAAAAAAAM0XAAAAAAAAAAAAAAAA8L8"
				],
				[
					138,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAM4XAAAAAAAA0BcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOFwAAAAAAAM4XAAAAAAAAAAAAAAAA8L8"
				],
				[
					139,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAM8XAAAAAAAA0BcAAAAAAAAAAAAA0BcAAAAAAADRFwAAAAAAAAAAAADQFwAAAAAAANIXAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPFwAAAAAAAM8XAAAAAAAAAAAAAAAA8L8"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": "char"
					},
					"BAAAANIXAAAAAAAA0xcAAAAAAAAAAAAA0xcAAAAAAADUFwAAAAAAAAAAAADUFwAAAAAAANUXAAAAAAAAAAAAANUXAAAAAAAA1hcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSFwAAAAAAANIXAAAAAAAAAAAAAAAA8L8"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": " avbail"
					},
					"BwAAANYXAAAAAAAA1xcAAAAAAAAAAAAA1xcAAAAAAADYFwAAAAAAAAAAAADYFwAAAAAAANkXAAAAAAAAAAAAANkXAAAAAAAA2hcAAAAAAAAAAAAA2hcAAAAAAADbFwAAAAAAAAAAAADbFwAAAAAAANwXAAAAAAAAAAAAANwXAAAAAAAA3RcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWFwAAAAAAANYXAAAAAAAAAAAAAAAA8L8"
				],
				[
					146,
					6,
					"left_delete",
					null,
					"BgAAANwXAAAAAAAA3BcAAAAAAAABAAAAbNsXAAAAAAAA2xcAAAAAAAABAAAAadoXAAAAAAAA2hcAAAAAAAABAAAAYdkXAAAAAAAA2RcAAAAAAAABAAAAYtgXAAAAAAAA2BcAAAAAAAABAAAAdtcXAAAAAAAA1xcAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdFwAAAAAAAN0XAAAAAAAAAAAAAAAA8L8"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "buf"
					},
					"AwAAANcXAAAAAAAA2BcAAAAAAAAAAAAA2BcAAAAAAADZFwAAAAAAAAAAAADZFwAAAAAAANoXAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXFwAAAAAAANcXAAAAAAAAAAAAAAAA8L8"
				],
				[
					148,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAANoXAAAAAAAA3BcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaFwAAAAAAANoXAAAAAAAAAAAAAAAA8L8"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "avail"
					},
					"BQAAANsXAAAAAAAA3BcAAAAAAAAAAAAA3BcAAAAAAADdFwAAAAAAAAAAAADdFwAAAAAAAN4XAAAAAAAAAAAAAN4XAAAAAAAA3xcAAAAAAAAAAAAA3xcAAAAAAADgFwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbFwAAAAAAANsXAAAAAAAAAAAAAAAA8L8"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOEXAAAAAAAA4hcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhFwAAAAAAAOEXAAAAAAAAAAAAAAAA8L8"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAOIXAAAAAAAA4xcAAAAAAAAAAAAA4xcAAAAAAADlFwAAAAAAAAAAAADlFwAAAAAAAOYXAAAAAAAAAAAAAOYXAAAAAAAA6BcAAAAAAAAAAAAA4xcAAAAAAADjFwAAAAAAAAIAAAAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiFwAAAAAAAOIXAAAAAAAAAAAAAAAA8L8"
				],
				[
					153,
					1,
					"paste",
					null,
					"AQAAAOYXAAAAAAAA+BcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmFwAAAAAAAOYXAAAAAAAAAAAAAAAA8L8"
				],
				[
					154,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPgXAAAAAAAA+hcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4FwAAAAAAAPgXAAAAAAAAAAAAAAAA8L8"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "opaque->ws->s"
					},
					"DQAAAPkXAAAAAAAA+hcAAAAAAAAAAAAA+hcAAAAAAAD7FwAAAAAAAAAAAAD7FwAAAAAAAPwXAAAAAAAAAAAAAPwXAAAAAAAA/RcAAAAAAAAAAAAA/RcAAAAAAAD+FwAAAAAAAAAAAAD+FwAAAAAAAP8XAAAAAAAAAAAAAP8XAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAABGAAAAAAAAAAAAAABGAAAAAAAAAIYAAAAAAAAAAAAAAIYAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAAEGAAAAAAAAAAAAAAEGAAAAAAAAAUYAAAAAAAAAAAAAAUYAAAAAAAABhgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5FwAAAAAAAPkXAAAAAAAAAAAAAAAA8L8"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "endq,"
					},
					"BQAAAAYYAAAAAAAABxgAAAAAAAAAAAAABxgAAAAAAAAIGAAAAAAAAAAAAAAIGAAAAAAAAAkYAAAAAAAAAAAAAAkYAAAAAAAAChgAAAAAAAAAAAAAChgAAAAAAAALGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGGAAAAAAAAAYYAAAAAAAAAAAAAAAA8L8"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": " buf,"
					},
					"BQAAAAsYAAAAAAAADBgAAAAAAAAAAAAADBgAAAAAAAANGAAAAAAAAAAAAAANGAAAAAAAAA4YAAAAAAAAAAAAAA4YAAAAAAAADxgAAAAAAAAAAAAADxgAAAAAAAAQGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALGAAAAAAAAAsYAAAAAAAAAAAAAAAA8L8"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": " afvail"
					},
					"BwAAABAYAAAAAAAAERgAAAAAAAAAAAAAERgAAAAAAAASGAAAAAAAAAAAAAASGAAAAAAAABMYAAAAAAAAAAAAABMYAAAAAAAAFBgAAAAAAAAAAAAAFBgAAAAAAAAVGAAAAAAAAAAAAAAVGAAAAAAAABYYAAAAAAAAAAAAABYYAAAAAAAAFxgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQGAAAAAAAABAYAAAAAAAAAAAAAAAA8L8"
				],
				[
					159,
					5,
					"left_delete",
					null,
					"BQAAABYYAAAAAAAAFhgAAAAAAAABAAAAbBUYAAAAAAAAFRgAAAAAAAABAAAAaRQYAAAAAAAAFBgAAAAAAAABAAAAYRMYAAAAAAAAExgAAAAAAAABAAAAdhIYAAAAAAAAEhgAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXGAAAAAAAABcYAAAAAAAAAAAAAAAA8L8"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "vail"
					},
					"BAAAABIYAAAAAAAAExgAAAAAAAAAAAAAExgAAAAAAAAUGAAAAAAAAAAAAAAUGAAAAAAAABUYAAAAAAAAAAAAABUYAAAAAAAAFhgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASGAAAAAAAABIYAAAAAAAAAAAAAAAA8L8"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABcYAAAAAAAAGBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXGAAAAAAAABcYAAAAAAAAAAAAAAAA8L8"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABgYAAAAAAAAGRgAAAAAAAAAAAAAGRgAAAAAAAAbGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYGAAAAAAAABgYAAAAAAAAAAAAAAAA8L8"
				],
				[
					177,
					1,
					"paste",
					null,
					"AQAAABsYAAAAAAAAlhgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbGAAAAAAAABsYAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "buf,avail"
					},
					"CgAAADwYAAAAAAAAPRgAAAAAAAAAAAAAPRgAAAAAAAA9GAAAAAAAAAsAAABidWZmZXIuZGF0YT0YAAAAAAAAPhgAAAAAAAAAAAAAPhgAAAAAAAA/GAAAAAAAAAAAAAA/GAAAAAAAAEAYAAAAAAAAAAAAAEAYAAAAAAAAQRgAAAAAAAAAAAAAQRgAAAAAAABCGAAAAAAAAAAAAABCGAAAAAAAAEMYAAAAAAAAAAAAAEMYAAAAAAAARBgAAAAAAAAAAAAARBgAAAAAAABFGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8GAAAAAAAAEcYAAAAAAAAAAAAAAAA8L8"
				],
				[
					187,
					1,
					"right_delete",
					null,
					"AQAAAEUYAAAAAAAARRgAAAAAAAANAAAALCBidWZmZXIuc2l6ZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFGAAAAAAAAFIYAAAAAAAAAAAAAAAA8L8"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": "opaque->binary"
					},
					"DgAAAEcYAAAAAAAASBgAAAAAAAAAAAAASBgAAAAAAABJGAAAAAAAAAAAAABJGAAAAAAAAEoYAAAAAAAAAAAAAEoYAAAAAAAASxgAAAAAAAAAAAAASxgAAAAAAABMGAAAAAAAAAAAAABMGAAAAAAAAE0YAAAAAAAAAAAAAE0YAAAAAAAAThgAAAAAAAAAAAAAThgAAAAAAABPGAAAAAAAAAAAAABPGAAAAAAAAFAYAAAAAAAAAAAAAFAYAAAAAAAAURgAAAAAAAAAAAAAURgAAAAAAABSGAAAAAAAAAAAAABSGAAAAAAAAFMYAAAAAAAAAAAAAFMYAAAAAAAAVBgAAAAAAAAAAAAAVBgAAAAAAABVGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHGAAAAAAAAEcYAAAAAAAAAAAAAAAA8L8"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": "  ?"
					},
					"AwAAAFUYAAAAAAAAVhgAAAAAAAAAAAAAVhgAAAAAAABXGAAAAAAAAAAAAABXGAAAAAAAAFgYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVGAAAAAAAAFUYAAAAAAAAAAAAAAAA8L8"
				],
				[
					191,
					25,
					"right_delete",
					null,
					"GQAAAFgYAAAAAAAAWBgAAAAAAAABAAAASlgYAAAAAAAAWBgAAAAAAAABAAAAU1gYAAAAAAAAWBgAAAAAAAABAAAAX1gYAAAAAAAAWBgAAAAAAAABAAAASVgYAAAAAAAAWBgAAAAAAAABAAAAc1gYAAAAAAAAWBgAAAAAAAABAAAAU1gYAAAAAAAAWBgAAAAAAAABAAAAdFgYAAAAAAAAWBgAAAAAAAABAAAAclgYAAAAAAAAWBgAAAAAAAABAAAAaVgYAAAAAAAAWBgAAAAAAAABAAAAblgYAAAAAAAAWBgAAAAAAAABAAAAZ1gYAAAAAAAAWBgAAAAAAAABAAAAKFgYAAAAAAAAWBgAAAAAAAABAAAAYlgYAAAAAAAAWBgAAAAAAAABAAAAdVgYAAAAAAAAWBgAAAAAAAABAAAAZlgYAAAAAAAAWBgAAAAAAAABAAAAZlgYAAAAAAAAWBgAAAAAAAABAAAAZVgYAAAAAAAAWBgAAAAAAAABAAAAclgYAAAAAAAAWBgAAAAAAAABAAAALlgYAAAAAAAAWBgAAAAAAAABAAAAdlgYAAAAAAAAWBgAAAAAAAABAAAAYVgYAAAAAAAAWBgAAAAAAAABAAAAbFgYAAAAAAAAWBgAAAAAAAABAAAAdVgYAAAAAAAAWBgAAAAAAAABAAAAZVgYAAAAAAAAWBgAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYGAAAAAAAAFgYAAAAAAAAAAAAAAAA8L8"
				],
				[
					192,
					2,
					"right_delete",
					null,
					"AgAAAFgYAAAAAAAAWBgAAAAAAAABAAAAIFgYAAAAAAAAWBgAAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYGAAAAAAAAFgYAAAAAAAAAAAAAAAA8L8"
				],
				[
					200,
					4,
					"left_delete",
					null,
					"BAAAAGYYAAAAAAAAZhgAAAAAAAABAAAAVGUYAAAAAAAAZRgAAAAAAAABAAAAWGQYAAAAAAAAZBgAAAAAAAABAAAARWMYAAAAAAAAYxgAAAAAAAABAAAAVA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnGAAAAAAAAGcYAAAAAAAAAAAAAAAA8L8"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": "BINAYRY"
					},
					"BwAAAGMYAAAAAAAAZBgAAAAAAAAAAAAAZBgAAAAAAABlGAAAAAAAAAAAAABlGAAAAAAAAGYYAAAAAAAAAAAAAGYYAAAAAAAAZxgAAAAAAAAAAAAAZxgAAAAAAABoGAAAAAAAAAAAAABoGAAAAAAAAGkYAAAAAAAAAAAAAGkYAAAAAAAAahgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjGAAAAAAAAGMYAAAAAAAAAAAAAAAA8L8"
				],
				[
					202,
					3,
					"left_delete",
					null,
					"AwAAAGkYAAAAAAAAaRgAAAAAAAABAAAAWWgYAAAAAAAAaBgAAAAAAAABAAAAUmcYAAAAAAAAZxgAAAAAAAABAAAAWQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqGAAAAAAAAGoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": "RY"
					},
					"AgAAAGcYAAAAAAAAaBgAAAAAAAAAAAAAaBgAAAAAAABpGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnGAAAAAAAAGcYAAAAAAAAAAAAAAAA8L8"
				],
				[
					205,
					6,
					"left_delete",
					null,
					"BgAAAHsYAAAAAAAAexgAAAAAAAABAAAAWXoYAAAAAAAAehgAAAAAAAABAAAAUnkYAAAAAAAAeRgAAAAAAAABAAAAQXgYAAAAAAAAeBgAAAAAAAABAAAATncYAAAAAAAAdxgAAAAAAAABAAAASXYYAAAAAAAAdhgAAAAAAAABAAAAQg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8GAAAAAAAAHwYAAAAAAAAAAAAAAAA8L8"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": "TEXT"
					},
					"BAAAAHYYAAAAAAAAdxgAAAAAAAAAAAAAdxgAAAAAAAB4GAAAAAAAAAAAAAB4GAAAAAAAAHkYAAAAAAAAAAAAAHkYAAAAAAAAehgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2GAAAAAAAAHYYAAAAAAAAAAAAAAAA8L8"
				],
				[
					213,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZGAAAAAAAABkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					250,
					1,
					"transpose",
					null,
					"AgAAAAoaAAAAAAAACxoAAAAAAAABAAAAZQkaAAAAAAAAChoAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKGgAAAAAAAAoaAAAAAAAAAAAAAAAA8L8"
				],
				[
					259,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAANgJAAAAAAAA2QkAAAAAAAAAAAAA2QkAAAAAAADaCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYCQAAAAAAANgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					264,
					2,
					"left_delete",
					null,
					"AgAAANkJAAAAAAAA2QkAAAAAAAABAAAAL9gJAAAAAAAA2AkAAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaCQAAAAAAANoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAANgJAAAAAAAA2QkAAAAAAAAAAAAA2QkAAAAAAADaCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYCQAAAAAAANgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA2wkAAAAAAADmCQAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAALkYAAAAAAAAuhgAAAAAAAAAAAAAuhgAAAAAAAC6GAAAAAAAAK8CAAAgICAvKiAgIFZhbHVlSXRlbSogaXRlbSA9IDA7CiAgICAgICAgIHN0cnVjdCBsaXN0X2hlYWQqIGVsOwoKICAgICAgICAgbGlzdF9mb3JfZWFjaChlbCwgJm9wYXF1ZS0+d3MtPnNlbmRxKSB7CiAgICAgICAgICAgaXRlbSA9IGxpc3RfZW50cnkoZWwsIFZhbHVlSXRlbSwgbGluayk7CgogICAgICAgICAgIGJyZWFrOwogICAgICAgICB9CgogICAgICAgICBpZihpdGVtKSB7CiAgICAgICAgICAgLy8gICAgICBNaW5uZXRCeXRlcyBibG9jaz17MH07CiAgICAgICAgICAgSlNCdWZmZXIgYnVmZmVyID0ganNfaW5wdXRfY2hhcnMoY3R4LCBpdGVtLT52YWx1ZSk7CiAgICAgICAgICAgaW50IG4gPSBidWZlZnIuc2l6ZTsKCiAgICAgICAgICAgaW50IHJldCA9IGx3c193cml0ZSh3c2ksIGJ1ZmZlci5kYXRhLCBidWZmZXIuc2l6ZSwgSlNfSXNTdHJpbmcoYnVmZmVyLnZhbHVlKSA/IExXU19XUklURV9URVhUIDogTFdTX1dSSVRFX0JJTkFSWSk7CgogICAgICAgICAgIGlmKHJldCA9PSBuKSB7CiAgICAgICAgICAgICBsaXN0X2RlbCgmaXRlbS0+bGluayk7CiAgICAgICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCBpdGVtLT52YWx1ZSk7CiAgICAgICAgICAgICBpdGVtLT52YWx1ZSA9IEpTX1VOREVGSU5FRDsKICAgICAgICAgICAgIGpzX2ZyZWUoY3R4LCBpdGVtKTsKICAgICAgICAgICB9CiAgICAgICAgIH0KICAgKi8",
					"AQAAAAAAAAABAAAAuRgAAAAAAABoGwAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABnHwAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCiNpbmNsdWRlICJtaW5uZXQtcmVzcG9uc2UuaCIKI2luY2x1ZGUgPGFzc2VydC5oPgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgoKaW50IGh0dHBfc2VydmVyX2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zLCB2b2lkKiwgdm9pZCosIHNpemVfdCk7CgpjaGFyKiBsd3NfaGRyX3NpbXBsZV9wdHIoc3RydWN0IGx3cyosIGludCk7CgppbnQKd3NfY2FsbGJhY2soc3RydWN0IGx3cyogd3NpLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pIHsKICBNaW5uZXRTZXNzaW9uKiBzZXNzaW9uID0gdXNlcjsKICBNaW5uZXRTZXJ2ZXIqIHNlcnZlciA9IGx3c19jb250ZXh0X3VzZXIobHdzX2dldF9jb250ZXh0KHdzaSkpOwogIEpTQ29udGV4dCogY3R4ID0gc2VydmVyLT5jb250ZXh0LmpzOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIGlmKCFvcGFxdWUgJiYgY3R4KQogICAgb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CgogIGlmKGx3c19pc19wb2xsX2NhbGxiYWNrKHJlYXNvbikpCiAgICByZXR1cm4gZmRfY2FsbGJhY2sod3NpLCByZWFzb24sICZzZXJ2ZXItPmNiLmZkLCBpbik7CiAgaWYobHdzX2lzX2h0dHBfY2FsbGJhY2socmVhc29uKSkKICAgIHJldHVybiBodHRwX3NlcnZlcl9jYWxsYmFjayh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CgogIExPR0NCKCJXUyIsICJmZD0lZCwgJXMlc2luPSclLipzJyBzZXNzaW9uIyVpIiwgbHdzX2dldF9zb2NrZXRfZmQod3NpKSwgaXNfaDIod3NpKSA/ICJoMiwgIiA6ICIiLCBsd3NfaXNfc3NsKHdzaSkgPyAic3NsLCAiIDogIiIsIChpbnQpbGVuLCAoY2hhciopaW4sIHNlc3Npb24gPyBzZXNzaW9uLT5zZXJpYWwgOiAwKTsKCiAgc3dpdGNoKHJlYXNvbikgewogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfQ09OTkVDVElORzogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX09QRU5TU0xfUEVSRk9STV9TRVJWRVJfQ0VSVF9WRVJJRklDQVRJT046IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19DTElFTlRfQ09OTkVDVElPTl9FUlJPUjoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0NISUxEX0NMT1NJTkc6IHsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19GSUxURVJfTkVUV09SS19DT05ORUNUSU9OOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRklMVEVSX1BST1RPQ09MX0NPTk5FQ1RJT046CiAgICAgIGlmKCFvcGFxdWUtPnJlcSkKICAgICAgICBvcGFxdWUtPnJlcSA9IHJlcXVlc3RfZnJvbXdzaSh3c2ksIGN0eCk7CgogICAgICBicmVhazsKCiAgICBjYXNlIExXU19DQUxMQkFDS19QUk9UT0NPTF9JTklUOiB7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUFJPVE9DT0xfREVTVFJPWTogewogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfU0VSVkVSX1ZFUklGWV9DRVJUUzoKICAgIGNhc2UgTFdTX0NBTExCQUNLX09QRU5TU0xfTE9BRF9FWFRSQV9DTElFTlRfVkVSSUZZX0NFUlRTOiB7CiAgICAgIHJldHVybiBsd3NfY2FsbGJhY2tfaHR0cF9kdW1teSh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19TRVJWRVJfTkVXX0NMSUVOVF9JTlNUQU5USUFURUQ6IHsKICAgICAgbHdzX3BlZXJfY2VydCh3c2kpOwogICAgICBpZighb3BhcXVlLT53cykKICAgICAgICBvcGFxdWUtPndzID0gd3NfbmV3KHdzaSwgY3R4KTsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NJX0NSRUFURTogewogICAgICBpZighb3BhcXVlLT53cykKICAgICAgICBvcGFxdWUtPndzID0gd3NfbmV3KHdzaSwgY3R4KTsKICAgICAgLyogICAgICBpZihzZXNzaW9uKQogICAgICAgICAgICAgIHNlc3Npb24tPndzX29iaiA9IG1pbm5ldF93c193cmFwKGN0eCwgb3BhcXVlLT53cyk7Ki8KICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NJX0RFU1RST1k6IHsKICAgICAgLyogICBpZihvcGFxdWUgJiYgb3BhcXVlLT53cykgewogICAgICAgICAgIHdzX2ZyZWUob3BhcXVlLT53cywgY3R4KTsKICAgICAgICAgICBvcGFxdWUtPndzID0gMDsKICAgICAgICAgfSovCiAgICAgIGlmKChvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSkpIHsKICAgICAgICBpZihvcGFxdWUtPndzKQogICAgICAgICAgb3BhcXVlLT53cy0+bHdzaSA9IDA7CgogICAgICAgIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIDApOwogICAgICAgIC8vIG9wYXF1ZV9mcmVlKG9wYXF1ZSwgY3R4KTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19IVFRQX0NPTkZJUk1fVVBHUkFERTogewogICAgICBpbnQgcmV0ID0gMDsKICAgICAgTWlubmV0VVJMIHVybCA9IHsucHJvdG9jb2wgPSBwcm90b2NvbF9zdHJpbmcoUFJPVE9DT0xfV1MpfTsKICAgICAgdXJsX2Zyb213c2koJnVybCwgd3NpLCBjdHgpOwoKICAgICAgaWYoIWx3c19pc19zc2wod3NpKSAmJiAhc3RyY21wKGluLCAiaDJjIikpIHsKICAgICAgICBjaGFyKiBkZXN0OwogICAgICAgIHNpemVfdCBkZXN0bGVuOwogICAgICAgIE1pbm5ldEJ1ZmZlciBvdXQgPSBCVUZGRVJfMCgpOwogICAgICAgIHVybC5wcm90b2NvbCA9IHByb3RvY29sX3N0cmluZyhQUk9UT0NPTF9IVFRQUyk7CiAgICAgICAgZGVzdCA9IHVybF9mb3JtYXQodXJsLCBjdHgpOwogICAgICAgIGRlc3RsZW4gPSB1cmxfbGVuZ3RoKHVybCk7CgogICAgICAgIGJ1ZmZlcl9hbGxvYygmb3V0LCAxMDI0LCBjdHgpOwoKICAgICAgICBpZihsd3NfaHR0cF9yZWRpcmVjdCh3c2ksIDMwOCwgKGNvbnN0IHVuc2lnbmVkIGNoYXIqKWRlc3QsIGRlc3RsZW4sICZvdXQud3JpdGUsIG91dC5lbmQpIDwgMCkKICAgICAgICAgIHJldCA9IC0xOwogICAgICAgIGVsc2UKICAgICAgICAgIHJldCA9IDE7CgogICAgICAgIHVybF9mcmVlKCZ1cmwsIGN0eCk7CiAgICAgICAganNfZnJlZShjdHgsIGRlc3QpOwogICAgICAgIHJldHVybiByZXQ7CiAgICAgIH0KCiAgICAgIGlmKCFvcGFxdWUpCiAgICAgICAgb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CgogICAgICBpZighb3BhcXVlLT5yZXEpIHsKICAgICAgICBvcGFxdWUtPnJlcSA9IHJlcXVlc3RfbmV3KHVybCwgTUVUSE9EX0dFVCwgY3R4KTsKICAgICAgICBoZWFkZXJzX3Rvc3RyaW5nKGN0eCwgJm9wYXF1ZS0+cmVxLT5oZWFkZXJzLCB3c2kpOwogICAgICB9IGVsc2UgewogICAgICAgIHVybF9mcmVlKCZ1cmwsIGN0eCk7CiAgICAgIH0KICAgICAgcmV0dXJuIHJldDsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19FU1RBQkxJU0hFRDogewogICAgICAvLyBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSA9IGx3c19vcGFxdWUod3NpLCBjdHgpOwogICAgICBpbnQgc3RhdHVzOwogICAgICBzdGF0dXMgPSBsd3NfaHR0cF9jbGllbnRfaHR0cF9yZXNwb25zZSh3c2kpOwogICAgICBNaW5uZXRIdHRwTW91bnQqIG1vdW50ID0gMDsKICAgICAgTWlubmV0VVJMKiB1cmw7CgogICAgICBpZighb3BhcXVlLT5yZXEpCiAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X2Zyb213c2kod3NpLCBjdHgpOwoKICAgICAgaWYob3BhcXVlLT5yZXEpIHsKICAgICAgICB1cmwgPSAmb3BhcXVlLT5yZXEtPnVybDsKCiAgICAgICAgaWYoKG1vdW50ID0gbW91bnRfZmluZF9zKChNaW5uZXRIdHRwTW91bnQqKXNlcnZlci0+Y29udGV4dC5pbmZvLm1vdW50cywgdXJsLT5wYXRoKSkpIHsKICAgICAgICAgIC8vIHByaW50ZigiZm91bmQgbW91bnQgbW50PSVzIG9yZz0lcyBkZWY9JXMgcHJvPSVzXG4iLCBtb3VudC0+bW50LCBtb3VudC0+b3JnLCBtb3VudC0+ZGVmLCBtb3VudC0+cHJvKTsKICAgICAgICB9CgogICAgICAgIGlmKCFKU19Jc09iamVjdChzZXNzaW9uLT5yZXFfb2JqKSkKICAgICAgICAgIHNlc3Npb24tPnJlcV9vYmogPSBtaW5uZXRfcmVxdWVzdF93cmFwKGN0eCwgb3BhcXVlLT5yZXEpOwoKICAgICAgICBzZXNzaW9uLT5yZXNwX29iaiA9IG1pbm5ldF9yZXNwb25zZV9uZXcoY3R4LCBvcGFxdWUtPnJlcS0+dXJsLCBzdGF0dXMsIDAsIFRSVUUsICJ0ZXh0L2h0bWwiKTsKICAgICAgfQoKICAgICAgb3BhcXVlLT5zdGF0dXMgPSBPUEVOOwoKICAgICAgaWYoc2VydmVyLT5jYi5jb25uZWN0LmN0eCkgewoKICAgICAgICBpZighSlNfSXNPYmplY3Qoc2Vzc2lvbi0+d3Nfb2JqKSkKICAgICAgICAgIHNlc3Npb24tPndzX29iaiA9IG1pbm5ldF93c19mcm9td3NpKGN0eCwgd3NpKTsKCiAgICAgICAgaWYoIW9wYXF1ZS0+d3MpIHsKICAgICAgICAgIGlmKChvcGFxdWUtPndzID0gbWlubmV0X3dzX2RhdGEoc2Vzc2lvbi0+d3Nfb2JqKSkpCiAgICAgICAgICAgIG9wYXF1ZS0+d3MtPnJlZl9jb3VudCsrOwogICAgICAgIH0KCiAgICAgICAgTE9HQ0IoIndzIiwgIndzaSMlIiBQUklkNjQgIiByZXE9JXAiLCBvcGFxdWUtPnNlcmlhbCwgb3BhcXVlLT5yZXEpOwogICAgICAgIHNlcnZlcl9leGNlcHRpb24oc2VydmVyLCBtaW5uZXRfZW1pdF90aGlzKCZzZXJ2ZXItPmNiLmNvbm5lY3QsIHNlc3Npb24tPndzX29iaiwgMiwgJnNlc3Npb24tPndzX29iaikpOwogICAgICB9CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTX1BFRVJfSU5JVElBVEVEX0NMT1NFOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfQ0xPU0VEOiB7CiAgICAgIGlmKG9wYXF1ZS0+c3RhdHVzIDwgQ0xPU0lORykgewogICAgICAgIEpTVmFsdWUgd2h5ID0gSlNfVU5ERUZJTkVEOwogICAgICAgIGludCBjb2RlID0gLTE7CgogICAgICAgIGlmKGluKSB7CiAgICAgICAgICB1aW50OF90KiBjb2RlcCA9IGluOwogICAgICAgICAgY29kZSA9IChjb2RlcFswXSA8PCA4KSArIGNvZGVwWzFdOwogICAgICAgICAgaWYobGVuIC0gMiA+IDApCiAgICAgICAgICAgIHdoeSA9IEpTX05ld1N0cmluZ0xlbihzZXJ2ZXItPmNvbnRleHQuanMsIChjaGFyKilpbiArIDIsIGxlbiAtIDIpOwogICAgICAgIH0KCiAgICAgICAgb3BhcXVlLT5zdGF0dXMgPSBDTE9TSU5HOwoKICAgICAgICBMT0dDQigid3MiLCAiZmQ9JWQsIHN0YXR1cz0lZCIsIGx3c19nZXRfc29ja2V0X2ZkKHdzaSksIG9wYXF1ZS0+c3RhdHVzKTsKCiAgICAgICAgaWYoY3R4KSB7CiAgICAgICAgICBKU1ZhbHVlIGNiX2FyZ3ZbM10gPSB7c2Vzc2lvbi0+d3Nfb2JqLCBjb2RlICE9IC0xID8gSlNfTmV3SW50MzIoY3R4LCBjb2RlKSA6IEpTX1VOREVGSU5FRCwgd2h5fTsKICAgICAgICAgIHNlcnZlcl9leGNlcHRpb24oc2VydmVyLCBtaW5uZXRfZW1pdCgmc2VydmVyLT5jYi5jbG9zZSwgY29kZSAhPSAtMSA/IDMgOiAxLCBjYl9hcmd2KSk7CiAgICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCBjYl9hcmd2WzFdKTsKICAgICAgICB9CiAgICAgICAgSlNfRnJlZVZhbHVlKHNlcnZlci0+Y29udGV4dC5qcywgd2h5KTsKICAgICAgICAvKkpTX0ZyZWVWYWx1ZShzZXJ2ZXItPmNvbnRleHQuanMsIHNlc3Npb24tPndzX29iaik7CiAgICAgICAgc2Vzc2lvbi0+d3Nfb2JqID0gSlNfTlVMTDsqLwogICAgICB9CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9XUklURUFCTEU6IHsKICAgICAgLy8gZnByaW50ZihzdGRlcnIsICJceDFiWzE7MzNtd3JpdGFibGVceDFiWzBtICVzIGZkPSVkXG4iLCBsd3NfY2FsbGJhY2tfbmFtZShyZWFzb24pICsgMTMsIGx3c19nZXRfc29ja2V0X2ZkKHdzaSkpOwogICAgICBpZihvcGFxdWUtPndzLT5zZW5kcSkgewogICAgICAgIHNpemVfdCBhdmFpbCA9IHJpbmdidWZmZXJfYXZhaWwob3BhcXVlLT53cy0+c2VuZHEpOwoKICAgICAgICBpZihhdmFpbCkgewogICAgICAgICAgY2hhciBidWZbYXZhaWxdOwoKICAgICAgICAgIHJpbmdidWZmZXJfY29uc3VtZShvcGFxdWUtPndzLT5zZW5kcSwgYnVmLCBhdmFpbCk7CiAgICAgICAgICBpbnQgcmV0ID0gbHdzX3dyaXRlKHdzaSwgYnVmLCBhdmFpbCwgb3BhcXVlLT5iaW5hcnkgPyBMV1NfV1JJVEVfQklOQVJZIDogTFdTX1dSSVRFX1RFWFQpOwogICAgICAgIH0KICAgICAgfQogICAgCiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1JFQ0VJVkU6IHsKICAgICAgaWYoY3R4KSB7CiAgICAgICAgSlNWYWx1ZSBtc2cgPSBvcGFxdWUtPmJpbmFyeSA/IEpTX05ld0FycmF5QnVmZmVyQ29weShjdHgsIGluLCBsZW4pIDogSlNfTmV3U3RyaW5nTGVuKGN0eCwgaW4sIGxlbik7CiAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzJdID0ge0pTX0R1cFZhbHVlKGN0eCwgc2Vzc2lvbi0+d3Nfb2JqKSwgbXNnfTsKICAgICAgICBzZXJ2ZXJfZXhjZXB0aW9uKHNlcnZlciwgbWlubmV0X2VtaXQoJnNlcnZlci0+Y2IubWVzc2FnZSwgMiwgY2JfYXJndikpOwogICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMF0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICB9CiAgICAgIHJldHVybiAwOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRV9QT05HOiB7CiAgICAgIGlmKHNlcnZlci0+Y2IucG9uZy5jdHgpIHsKICAgICAgICAvLyB3c19vYmogPSBtaW5uZXRfd3NfZnJvbXdzaShzZXJ2ZXItPmNiLnBvbmcuY3R4LCB3c2kpOwogICAgICAgIEpTVmFsdWUgbXNnID0gSlNfTmV3QXJyYXlCdWZmZXJDb3B5KHNlcnZlci0+Y2IucG9uZy5jdHgsIGluLCBsZW4pOwogICAgICAgIEpTVmFsdWUgY2JfYXJndlsyXSA9IHtKU19EdXBWYWx1ZShzZXJ2ZXItPmNiLnBvbmcuY3R4LCBzZXNzaW9uLT53c19vYmopLCBtc2d9OwogICAgICAgIHNlcnZlcl9leGNlcHRpb24oc2VydmVyLCBtaW5uZXRfZW1pdCgmc2VydmVyLT5jYi5wb25nLCAyLCBjYl9hcmd2KSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKHNlcnZlci0+Y2IucG9uZy5jdHgsIGNiX2FyZ3ZbMF0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShzZXJ2ZXItPmNiLnBvbmcuY3R4LCBjYl9hcmd2WzFdKTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTX1NFUlZFUl9EUk9QX1BST1RPQ09MOiB7CiAgICAgIHJldHVybiAwOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfVkhPU1RfQ0VSVF9BR0lORzoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0VWRU5UX1dBSVRfQ0FOQ0VMTEVEOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfR0VUX1RIUkVBRF9JRDogewogICAgICByZXR1cm4gMDsKICAgIH0KCiAgICBkZWZhdWx0OiB7CiAgICAgIC8vIHByaW50Zigid3NfY2FsbGJhY2sgJXMgJXAgJXAgJXp1XG4iLCBsd3NfY2FsbGJhY2tfbmFtZShyZWFzb24pLCB1c2VyLCBpbiwgbGVuKTsKICAgICAgbWlubmV0X2x3c191bmhhbmRsZWQoX19mdW5jX18sIHJlYXNvbik7CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgLy8gbHdzbF91c2VyKCJ3cyAgICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIGZkPSVkIHVybD0nJXMnIGluPSclLipzJ1xuIiwgMjIgKyAocmVhc29uICogMiksIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQod3NpKSwgbHdzX2dldF90b2tlbih3c2ksIHNlcnZlci0+Y29udGV4dC5qcywgLy8KICAvLyBXU0lfVE9LRU5fR0VUX1VSSSksIChpbnQpbGVuLCAoY2hhciopaW4pOwoKICBpZihvcGFxdWUgJiYgb3BhcXVlLT5zdGF0dXMgPj0gQ0xPU0lORykKICAgIHJldHVybiAtMTsKCiAgcmV0dXJuIDA7IC8vIGx3c19jYWxsYmFja19odHRwX2R1bW15KHdzaSwgcmVhc29uLCB1c2VyLCBpbiwgbGVuKTsKfQoAAAAAAAAAAGMfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaBoAAAAAAABoGgAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "int"
					},
					"AwAAAA0YAAAAAAAADhgAAAAAAAAAAAAADhgAAAAAAAAPGAAAAAAAAAAAAAAPGAAAAAAAABAYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADRgAAAAAAAANGAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " ret"
					},
					"BAAAABAYAAAAAAAAERgAAAAAAAAAAAAAERgAAAAAAAASGAAAAAAAAAAAAAASGAAAAAAAABMYAAAAAAAAAAAAABMYAAAAAAAAFBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEBgAAAAAAAAQGAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					3,
					"left_delete",
					null,
					"AwAAABMYAAAAAAAAExgAAAAAAAABAAAAdBIYAAAAAAAAEhgAAAAAAAABAAAAZREYAAAAAAAAERgAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAFBgAAAAAAAAUGAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "elem"
					},
					"BAAAABEYAAAAAAAAEhgAAAAAAAAAAAAAEhgAAAAAAAATGAAAAAAAAAAAAAATGAAAAAAAABQYAAAAAAAAAAAAABQYAAAAAAAAFRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAERgAAAAAAAARGAAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					4,
					"left_delete",
					null,
					"BAAAABQYAAAAAAAAFBgAAAAAAAABAAAAbRMYAAAAAAAAExgAAAAAAAABAAAAZRIYAAAAAAAAEhgAAAAAAAABAAAAbBEYAAAAAAAAERgAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAFRgAAAAAAAAVGAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "nelem="
					},
					"BgAAABEYAAAAAAAAEhgAAAAAAAAAAAAAEhgAAAAAAAATGAAAAAAAAAAAAAATGAAAAAAAABQYAAAAAAAAAAAAABQYAAAAAAAAFRgAAAAAAAAAAAAAFRgAAAAAAAAWGAAAAAAAAAAAAAAWGAAAAAAAABcYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAERgAAAAAAAARGAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"paste",
					null,
					"AgAAAHIYAAAAAAAAdxgAAAAAAAAAAAAAdxgAAAAAAAB3GAAAAAAAAAUAAABhdmFpbA",
					"AQAAAAAAAAABAAAAchgAAAAAAAB3GAAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALEYAAAAAAAAshgAAAAAAAAAAAAAshgAAAAAAAC1GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRgAAAAAAACxGAAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "printf"
					},
					"BgAAALEYAAAAAAAAshgAAAAAAAAAAAAAshgAAAAAAACzGAAAAAAAAAAAAACzGAAAAAAAALQYAAAAAAAAAAAAALQYAAAAAAAAtRgAAAAAAAAAAAAAtRgAAAAAAAC2GAAAAAAAAAAAAAC2GAAAAAAAALcYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRgAAAAAAACxGAAAAAAAAAAAAAAAgENA"
				],
				[
					106,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALcYAAAAAAAAuRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtxgAAAAAAAC3GAAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAALgYAAAAAAAAuhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuBgAAAAAAAC4GAAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "writable"
					},
					"CAAAALkYAAAAAAAAuhgAAAAAAAAAAAAAuhgAAAAAAAC7GAAAAAAAAAAAAAC7GAAAAAAAALwYAAAAAAAAAAAAALwYAAAAAAAAvRgAAAAAAAAAAAAAvRgAAAAAAAC+GAAAAAAAAAAAAAC+GAAAAAAAAL8YAAAAAAAAAAAAAL8YAAAAAAAAwBgAAAAAAAAAAAAAwBgAAAAAAADBGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuRgAAAAAAAC5GAAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAMEYAAAAAAAAwhgAAAAAAAAAAAAAwhgAAAAAAADDGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwRgAAAAAAADBGAAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"left_delete",
					null,
					"AQAAAMIYAAAAAAAAwhgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAwxgAAAAAAADDGAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "avail=%"
					},
					"BwAAAMIYAAAAAAAAwxgAAAAAAAAAAAAAwxgAAAAAAADEGAAAAAAAAAAAAADEGAAAAAAAAMUYAAAAAAAAAAAAAMUYAAAAAAAAxhgAAAAAAAAAAAAAxhgAAAAAAADHGAAAAAAAAAAAAADHGAAAAAAAAMgYAAAAAAAAAAAAAMgYAAAAAAAAyRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwhgAAAAAAADCGAAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": "zx,"
					},
					"AwAAAMkYAAAAAAAAyhgAAAAAAAAAAAAAyhgAAAAAAADLGAAAAAAAAAAAAADLGAAAAAAAAMwYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyRgAAAAAAADJGAAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"left_delete",
					null,
					"AQAAAMsYAAAAAAAAyxgAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAzBgAAAAAAADMGAAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": " nelem"
					},
					"BgAAAMsYAAAAAAAAzBgAAAAAAAAAAAAAzBgAAAAAAADNGAAAAAAAAAAAAADNGAAAAAAAAM4YAAAAAAAAAAAAAM4YAAAAAAAAzxgAAAAAAAAAAAAAzxgAAAAAAADQGAAAAAAAAAAAAADQGAAAAAAAANEYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyxgAAAAAAADLGAAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "=%d"
					},
					"AwAAANEYAAAAAAAA0hgAAAAAAAAAAAAA0hgAAAAAAADTGAAAAAAAAAAAAADTGAAAAAAAANQYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0RgAAAAAAADRGAAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " ret=%d\\n"
					},
					"CQAAANQYAAAAAAAA1RgAAAAAAAAAAAAA1RgAAAAAAADWGAAAAAAAAAAAAADWGAAAAAAAANcYAAAAAAAAAAAAANcYAAAAAAAA2BgAAAAAAAAAAAAA2BgAAAAAAADZGAAAAAAAAAAAAADZGAAAAAAAANoYAAAAAAAAAAAAANoYAAAAAAAA2xgAAAAAAAAAAAAA2xgAAAAAAADcGAAAAAAAAAAAAADcGAAAAAAAAN0YAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1BgAAAAAAADUGAAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAN4YAAAAAAAA3xgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3hgAAAAAAADeGAAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " av"
					},
					"AwAAAN8YAAAAAAAA4BgAAAAAAAAAAAAA4BgAAAAAAADhGAAAAAAAAAAAAADhGAAAAAAAAOIYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3xgAAAAAAADfGAAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "ail,nelem,"
					},
					"CgAAAOIYAAAAAAAA4xgAAAAAAAAAAAAA4xgAAAAAAADkGAAAAAAAAAAAAADkGAAAAAAAAOUYAAAAAAAAAAAAAOUYAAAAAAAA5hgAAAAAAAAAAAAA5hgAAAAAAADnGAAAAAAAAAAAAADnGAAAAAAAAOgYAAAAAAAAAAAAAOgYAAAAAAAA6RgAAAAAAAAAAAAA6RgAAAAAAADqGAAAAAAAAAAAAADqGAAAAAAAAOsYAAAAAAAAAAAAAOsYAAAAAAAA7BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4hgAAAAAAADiGAAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAOwYAAAAAAAA7RgAAAAAAAAAAAAA7RgAAAAAAADuGAAAAAAAAAAAAADuGAAAAAAAAO8YAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BgAAAAAAADsGAAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPAYAAAAAAAA8RgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8BgAAAAAAADwGAAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA8RgAAAAAAADxGAAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAPUXAAAAAAAA9hcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9RcAAAAAAAD1FwAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAPYXAAAAAAAA+BcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9hcAAAAAAAD2FwAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAPYXAAAAAAAA9hcAAAAAAAABAAAAIvYXAAAAAAAA9hcAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAA9xcAAAAAAAD3FwAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"left_delete",
					null,
					"AQAAAPUXAAAAAAAA9RcAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAA9hcAAAAAAAD2FwAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAPUXAAAAAAAA9hcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9RcAAAAAAAD1FwAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": " buf;"
					},
					"BQAAAPYXAAAAAAAA9xcAAAAAAAAAAAAA9xcAAAAAAAD4FwAAAAAAAAAAAAD4FwAAAAAAAPkXAAAAAAAAAAAAAPkXAAAAAAAA+hcAAAAAAAAAAAAA+hcAAAAAAAD7FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9hcAAAAAAAD2FwAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert_completion",
					{
						"completion": "nelem",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "nelem"
					},
					"AQAAAPsXAAAAAAAAABgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+xcAAAAAAAD7FwAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAAYAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAALGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					11,
					"left_delete",
					null,
					"CwAAAAkYAAAAAAAACRgAAAAAAAACAAAAICAHGAAAAAAAAAcYAAAAAAAAAgAAACAgBRgAAAAAAAAFGAAAAAAAAAIAAAAgIAMYAAAAAAAAAxgAAAAAAAACAAAAICABGAAAAAAAAAEYAAAAAAAAAgAAACAgABgAAAAAAAAAGAAAAAAAAAEAAAAK/xcAAAAAAAD/FwAAAAAAAAEAAABt/hcAAAAAAAD+FwAAAAAAAAEAAABl/RcAAAAAAAD9FwAAAAAAAAEAAABs/BcAAAAAAAD8FwAAAAAAAAEAAABl+xcAAAAAAAD7FwAAAAAAAAEAAABu",
					"AQAAAAAAAAABAAAACxgAAAAAAAALGAAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAPsXAAAAAAAA/BcAAAAAAAAAAAAA/BcAAAAAAAAGGAAAAAAAAAAAAAAGGAAAAAAAAAcYAAAAAAAAAAAAAAcYAAAAAAAAERgAAAAAAAAAAAAA/BcAAAAAAAD8FwAAAAAAAAoAAAAgICAgICAgICAgBxgAAAAAAAAIGAAAAAAAAAAAAAAIGAAAAAAAAAkYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+xcAAAAAAAD7FwAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAkYAAAAAAAACxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACRgAAAAAAAAJGAAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAsYAAAAAAAADRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACxgAAAAAAAALGAAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAAsYAAAAAAAACxgAAAAAAAABAAAAKAsYAAAAAAAACxgAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAADBgAAAAAAAAMGAAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"left_delete",
					null,
					"AQAAAAoYAAAAAAAAChgAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAACxgAAAAAAAALGAAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAoYAAAAAAAADBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAChgAAAAAAAAKGAAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": "buf"
					},
					"AwAAAAsYAAAAAAAADBgAAAAAAAAAAAAADBgAAAAAAAANGAAAAAAAAAAAAAANGAAAAAAAAA4YAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACxgAAAAAAAALGAAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAA4YAAAAAAAADxgAAAAAAAAAAAAADxgAAAAAAAAQGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADhgAAAAAAAAOGAAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": " malloc"
					},
					"BwAAABAYAAAAAAAAERgAAAAAAAAAAAAAERgAAAAAAAASGAAAAAAAAAAAAAASGAAAAAAAABMYAAAAAAAAAAAAABMYAAAAAAAAFBgAAAAAAAAAAAAAFBgAAAAAAAAVGAAAAAAAAAAAAAAVGAAAAAAAABYYAAAAAAAAAAAAABYYAAAAAAAAFxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEBgAAAAAAAAQGAAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "ava"
					},
					"AwAAABgYAAAAAAAAGRgAAAAAAAAAAAAAGRgAAAAAAAAaGAAAAAAAAAAAAAAaGAAAAAAAABsYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGBgAAAAAAAAYGAAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					4,
					"left_delete",
					null,
					"BAAAABoYAAAAAAAAGhgAAAAAAAABAAAAYRkYAAAAAAAAGRgAAAAAAAABAAAAdhgYAAAAAAAAGBgAAAAAAAABAAAAYRcYAAAAAAAAFxgAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAGxgAAAAAAAAbGAAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABcYAAAAAAAAGRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFxgAAAAAAAAXGAAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": "avail"
					},
					"BQAAABgYAAAAAAAAGRgAAAAAAAAAAAAAGRgAAAAAAAAaGAAAAAAAAAAAAAAaGAAAAAAAABsYAAAAAAAAAAAAABsYAAAAAAAAHBgAAAAAAAAAAAAAHBgAAAAAAAAdGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGBgAAAAAAAAYGAAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "))"
					},
					"AgAAAB4YAAAAAAAAHxgAAAAAAAAAAAAAHxgAAAAAAAAgGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHhgAAAAAAAAeGAAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACAYAAAAAAAAIRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIBgAAAAAAAAgGAAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACEYAAAAAAAAIxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIRgAAAAAAAAhGAAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"right_delete",
					null,
					"AQAAACIYAAAAAAAAIhgAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAIhgAAAAAAAAiGAAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"left_delete",
					null,
					"AQAAACIYAAAAAAAAIhgAAAAAAAANAAAAIGJ1ZlthdmFpbF07Cg",
					"AQAAAAAAAAABAAAAIhgAAAAAAAAvGAAAAAAAAAAAAAAAEH5A"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAABwZAAAAAAAAHRkAAAAAAAAAAAAAHRkAAAAAAAAnGQAAAAAAAAAAAAAnGQAAAAAAACgZAAAAAAAAAAAAAB0ZAAAAAAAAHRkAAAAAAAAKAAAAICAgICAgICAgIB0ZAAAAAAAAJRkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHBkAAAAAAAAcGQAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": "\nfree"
					},
					"BgAAABwZAAAAAAAAHRkAAAAAAAAAAAAAHRkAAAAAAAAnGQAAAAAAAAAAAAAnGQAAAAAAACgZAAAAAAAAAAAAACgZAAAAAAAAKRkAAAAAAAAAAAAAKRkAAAAAAAAqGQAAAAAAAAAAAAAqGQAAAAAAACsZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHBkAAAAAAAAcGQAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACsZAAAAAAAALRkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKxkAAAAAAAArGQAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": "buf"
					},
					"AwAAACwZAAAAAAAALRkAAAAAAAAAAAAALRkAAAAAAAAuGQAAAAAAAAAAAAAuGQAAAAAAAC8ZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALBkAAAAAAAAsGQAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADAZAAAAAAAAMRkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMBkAAAAAAAAwGQAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAMRkAAAAAAAAxGQAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": "js_"
					},
					"AwAAABEYAAAAAAAAEhgAAAAAAAAAAAAAEhgAAAAAAAATGAAAAAAAAAAAAAATGAAAAAAAABQYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAERgAAAAAAAARGAAAAAAAAAAAAAAAQHBA"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "ctx,m"
					},
					"BQAAABsYAAAAAAAAHBgAAAAAAAAAAAAAHBgAAAAAAAAdGAAAAAAAAAAAAAAdGAAAAAAAAB4YAAAAAAAAAAAAAB4YAAAAAAAAHxgAAAAAAAAAAAAAHxgAAAAAAAAgGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGxgAAAAAAAAbGAAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACAYAAAAAAAAIRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIBgAAAAAAAAgGAAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					2,
					"left_delete",
					null,
					"AgAAACAYAAAAAAAAIBgAAAAAAAABAAAAIB8YAAAAAAAAHxgAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAIRgAAAAAAAAhGAAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB8YAAAAAAAAIBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHxgAAAAAAAAfGAAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"insert",
					{
						"characters": "js_"
					},
					"AwAAADcZAAAAAAAAOBkAAAAAAAAAAAAAOBkAAAAAAAA5GQAAAAAAAAAAAAA5GQAAAAAAADoZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxkAAAAAAAA3GQAAAAAAAAAAAAAAAPC/"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAD8ZAAAAAAAAQBkAAAAAAAAAAAAAQBkAAAAAAABBGQAAAAAAAAAAAABBGQAAAAAAAEIZAAAAAAAAAAAAAEIZAAAAAAAAQxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPxkAAAAAAAA/GQAAAAAAAAAAAAAAAPC/"
				],
				[
					242,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEMZAAAAAAAARBkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQxkAAAAAAABDGQAAAAAAAAAAAAAAAPC/"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAACsYAAAAAAAALBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKxgAAAAAAAArGAAAAAAAAAAAAAAAAPC/"
				],
				[
					285,
					1,
					"left_delete",
					null,
					"AQAAACsYAAAAAAAAKxgAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAALBgAAAAAAAAsGAAAAAAAAAAAAAAAAPC/"
				],
				[
					297,
					1,
					"paste",
					null,
					"AgAAAK0XAAAAAAAAvBcAAAAAAAAAAAAAvBcAAAAAAAC8FwAAAAAAABAAAAByaW5nYnVmZmVyX2F2YWls",
					"AQAAAAAAAAABAAAArRcAAAAAAAC9FwAAAAAAAAAAAAAAAPC/"
				],
				[
					313,
					1,
					"insert",
					{
						"characters": "size"
					},
					"BQAAAKUXAAAAAAAAphcAAAAAAAAAAAAAphcAAAAAAACmFwAAAAAAAAUAAABhdmFpbKYXAAAAAAAApxcAAAAAAAAAAAAApxcAAAAAAACoFwAAAAAAAAAAAACoFwAAAAAAAKkXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApRcAAAAAAACqFwAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"paste",
					null,
					"AgAAANwXAAAAAAAA4BcAAAAAAAAAAAAA4BcAAAAAAADgFwAAAAAAAAUAAABhdmFpbA",
					"AQAAAAAAAAABAAAA3BcAAAAAAADhFwAAAAAAAAAAAAAAAPC/"
				],
				[
					336,
					1,
					"paste",
					null,
					"AgAAAB0YAAAAAAAAIRgAAAAAAAAAAAAAIRgAAAAAAAAhGAAAAAAAAAUAAABhdmFpbA",
					"AQAAAAAAAAABAAAAHRgAAAAAAAAiGAAAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					1,
					"paste",
					null,
					"AgAAAGoYAAAAAAAAbhgAAAAAAAAAAAAAbhgAAAAAAABuGAAAAAAAAAUAAABhdmFpbA",
					"AQAAAAAAAAABAAAAahgAAAAAAABvGAAAAAAAAAAAAAAAAPC/"
				],
				[
					356,
					1,
					"insert",
					{
						"characters": "size"
					},
					"BQAAAPQYAAAAAAAA9RgAAAAAAAAAAAAA9RgAAAAAAAD1GAAAAAAAAAUAAABhdmFpbPUYAAAAAAAA9hgAAAAAAAAAAAAA9hgAAAAAAAD3GAAAAAAAAAAAAAD3GAAAAAAAAPgYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9BgAAAAAAAD5GAAAAAAAAAAAAAAAAPC/"
				],
				[
					366,
					1,
					"paste",
					null,
					"AgAAABEZAAAAAAAAFRkAAAAAAAAAAAAAFRkAAAAAAAAVGQAAAAAAAAUAAABhdmFpbA",
					"AQAAAAAAAAABAAAAERkAAAAAAAAWGQAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"insert",
					{
						"characters": "alloca"
					},
					"BwAAAA4YAAAAAAAADxgAAAAAAAAAAAAADxgAAAAAAAAPGAAAAAAAAAkAAABqc19tYWxsb2MPGAAAAAAAABAYAAAAAAAAAAAAABAYAAAAAAAAERgAAAAAAAAAAAAAERgAAAAAAAASGAAAAAAAAAAAAAASGAAAAAAAABMYAAAAAAAAAAAAABMYAAAAAAAAFBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADhgAAAAAAAAXGAAAAAAAAAAAAAAAAPC/"
				],
				[
					391,
					5,
					"right_delete",
					null,
					"BQAAABUYAAAAAAAAFRgAAAAAAAABAAAAYxUYAAAAAAAAFRgAAAAAAAABAAAAdBUYAAAAAAAAFRgAAAAAAAABAAAAeBUYAAAAAAAAFRgAAAAAAAABAAAALBUYAAAAAAAAFRgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAFRgAAAAAAAAVGAAAAAAAAAAAAAAAAPC/"
				],
				[
					395,
					1,
					"right_delete",
					null,
					"AQAAACgZAAAAAAAAKBkAAAAAAAASAAAAanNfZnJlZShjdHgsIGJ1Zik7",
					"AQAAAAAAAAABAAAAKBkAAAAAAAA6GQAAAAAAAP///////+9/"
				],
				[
					405,
					1,
					"cut",
					null,
					"AQAAAIcAAAAAAAAAhwAAAAAAAAAUAAAAI2luY2x1ZGUgPGFzc2VydC5oPgo",
					"AQAAAAAAAAABAAAAhwAAAAAAAACbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					406,
					2,
					"paste",
					null,
					"AgAAAIcAAAAAAAAAmwAAAAAAAAAAAAAAmwAAAAAAAACvAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwAAAAAAAACHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					409,
					1,
					"insert",
					{
						"characters": "aöl"
					},
					"AwAAAJUAAAAAAAAAlgAAAAAAAAAAAAAAlgAAAAAAAACXAAAAAAAAAAAAAACXAAAAAAAAAJgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQAAAAAAAACVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					415,
					1,
					"insert",
					{
						"characters": "aö"
					},
					"AwAAAJEAAAAAAAAAkgAAAAAAAAAAAAAAkgAAAAAAAACSAAAAAAAAAAoAAABhc3NlYcO2bHJ0kgAAAAAAAACTAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQAAAAAAAACaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					416,
					1,
					"left_delete",
					null,
					"AQAAAJIAAAAAAAAAkgAAAAAAAAACAAAAw7Y",
					"AQAAAAAAAAABAAAAkwAAAAAAAACTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					417,
					1,
					"insert",
					{
						"characters": "loloca"
					},
					"BgAAAJIAAAAAAAAAkwAAAAAAAAAAAAAAkwAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJUAAAAAAAAAAAAAAJUAAAAAAAAAlgAAAAAAAAAAAAAAlgAAAAAAAACXAAAAAAAAAAAAAACXAAAAAAAAAJgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgAAAAAAAACSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					418,
					5,
					"left_delete",
					null,
					"BQAAAJcAAAAAAAAAlwAAAAAAAAABAAAAYZYAAAAAAAAAlgAAAAAAAAABAAAAY5UAAAAAAAAAlQAAAAAAAAABAAAAb5QAAAAAAAAAlAAAAAAAAAABAAAAbJMAAAAAAAAAkwAAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					419,
					1,
					"insert",
					{
						"characters": "loca"
					},
					"BAAAAJMAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACVAAAAAAAAAAAAAACVAAAAAAAAAJYAAAAAAAAAAAAAAJYAAAAAAAAAlwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwAAAAAAAACTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					443,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAJUXAAAAAAAAlhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlRcAAAAAAACVFwAAAAAAAAAAAAAAAPC/"
				],
				[
					446,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAANEXAAAAAAAA0hcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0RcAAAAAAADRFwAAAAAAAAAAAAAAAPC/"
				],
				[
					447,
					1,
					"left_delete",
					null,
					"AQAAANEXAAAAAAAA0RcAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAA0hcAAAAAAADSFwAAAAAAAAAAAAAAAPC/"
				],
				[
					448,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAANEXAAAAAAAA0hcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0RcAAAAAAADRFwAAAAAAAAAAAAAAAPC/"
				],
				[
					451,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAGAYAAAAAAAAYRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYBgAAAAAAABgGAAAAAAAAAAAAAAAAPC/"
				],
				[
					521,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAL4XAAAAAAAAvxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvhcAAAAAAAC+FwAAAAAAAAAAAAAAAPC/"
				],
				[
					522,
					1,
					"insert",
					{
						"characters": "\n\nwhile"
					},
					"CgAAAL8XAAAAAAAAwBcAAAAAAAAAAAAAwBcAAAAAAADIFwAAAAAAAAAAAADIFwAAAAAAAMkXAAAAAAAAAAAAAMkXAAAAAAAA0RcAAAAAAAAAAAAAwBcAAAAAAADAFwAAAAAAAAgAAAAgICAgICAgIMkXAAAAAAAAyhcAAAAAAAAAAAAAyhcAAAAAAADLFwAAAAAAAAAAAADLFwAAAAAAAMwXAAAAAAAAAAAAAMwXAAAAAAAAzRcAAAAAAAAAAAAAzRcAAAAAAADOFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvxcAAAAAAAC/FwAAAAAAAAAAAAAAAPC/"
				],
				[
					523,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAM4XAAAAAAAA0BcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzhcAAAAAAADOFwAAAAAAAAAAAAAAAPC/"
				],
				[
					525,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANAXAAAAAAAA0hcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0BcAAAAAAADQFwAAAAAAAAAAAAAAAPC/"
				],
				[
					526,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAANAXAAAAAAAA0BcAAAAAAAABAAAAKNAXAAAAAAAA0BcAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA0RcAAAAAAADRFwAAAAAAAAAAAAAAAPC/"
				],
				[
					527,
					1,
					"left_delete",
					null,
					"AQAAAM8XAAAAAAAAzxcAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA0BcAAAAAAADQFwAAAAAAAAAAAAAAAPC/"
				],
				[
					528,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAM8XAAAAAAAA0RcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzxcAAAAAAADPFwAAAAAAAAAAAAAAAPC/"
				],
				[
					529,
					1,
					"insert",
					{
						"characters": "size"
					},
					"BAAAANAXAAAAAAAA0RcAAAAAAAAAAAAA0RcAAAAAAADSFwAAAAAAAAAAAADSFwAAAAAAANMXAAAAAAAAAAAAANMXAAAAAAAA1BcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0BcAAAAAAADQFwAAAAAAAAAAAAAAAPC/"
				],
				[
					530,
					1,
					"right_delete",
					null,
					"AQAAANQXAAAAAAAA1BcAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA1BcAAAAAAADUFwAAAAAAAAAAAAAAAPC/"
				],
				[
					536,
					1,
					"left_delete",
					null,
					"AQAAAPoXAAAAAAAA+hcAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAA+xcAAAAAAAD7FwAAAAAAAAAAAAAAAPC/"
				],
				[
					537,
					1,
					"insert",
					{
						"characters": "))"
					},
					"AgAAAPoXAAAAAAAA+xcAAAAAAAAAAAAA+xcAAAAAAAD8FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hcAAAAAAAD6FwAAAAAAAAAAAAAAAPC/"
				],
				[
					538,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPwXAAAAAAAA/RcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/BcAAAAAAAD8FwAAAAAAAAAAAAAAAPC/"
				],
				[
					539,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAP0XAAAAAAAA/xcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/RcAAAAAAAD9FwAAAAAAAAAAAAAAAPC/"
				],
				[
					540,
					1,
					"right_delete",
					null,
					"AQAAAP4XAAAAAAAA/hcAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAA/hcAAAAAAAD+FwAAAAAAAAAAAAAAAPC/"
				],
				[
					545,
					1,
					"left_delete",
					null,
					"AQAAAAAYAAAAAAAAABgAAAAAAAATAAAAICAgICAgICBpZihzaXplKSB7Cg",
					"AQAAAAAAAAABAAAAABgAAAAAAAATGAAAAAAAAAAAAAAAAAAA"
				],
				[
					549,
					1,
					"insert",
					{
						"characters": "JSBuffewr"
					},
					"CQAAAP8XAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAABGAAAAAAAAAAAAAABGAAAAAAAAAIYAAAAAAAAAAAAAAIYAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAAEGAAAAAAAAAAAAAAEGAAAAAAAAAUYAAAAAAAAAAAAAAUYAAAAAAAABhgAAAAAAAAAAAAABhgAAAAAAAAHGAAAAAAAAAAAAAAHGAAAAAAAAAgYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/xcAAAAAAAD/FwAAAAAAAAAAAAAAAPC/"
				],
				[
					550,
					2,
					"left_delete",
					null,
					"AgAAAAcYAAAAAAAABxgAAAAAAAABAAAAcgYYAAAAAAAABhgAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAACBgAAAAAAAAIGAAAAAAAAAAAAAAAAPC/"
				],
				[
					551,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAAYYAAAAAAAABxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABhgAAAAAAAAGGAAAAAAAAAAAAAAAAPC/"
				],
				[
					552,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAcYAAAAAAAACBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABxgAAAAAAAAHGAAAAAAAAAAAAAAAAPC/"
				],
				[
					553,
					1,
					"left_delete",
					null,
					"AQAAAAcYAAAAAAAABxgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAACBgAAAAAAAAIGAAAAAAAAAAAAAAAAPC/"
				],
				[
					554,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAAcYAAAAAAAACBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABxgAAAAAAAAHGAAAAAAAAAAAAAAAAPC/"
				],
				[
					555,
					1,
					"insert",
					{
						"characters": " buf"
					},
					"BAAAAAgYAAAAAAAACRgAAAAAAAAAAAAACRgAAAAAAAAKGAAAAAAAAAAAAAAKGAAAAAAAAAsYAAAAAAAAAAAAAAsYAAAAAAAADBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACBgAAAAAAAAIGAAAAAAAAAAAAAAAAPC/"
				],
				[
					556,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAwYAAAAAAAADRgAAAAAAAAAAAAADRgAAAAAAAAOGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADBgAAAAAAAAMGAAAAAAAAAAAAAAAAPC/"
				],
				[
					557,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA4YAAAAAAAADxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADhgAAAAAAAAOGAAAAAAAAAAAAAAAAPC/"
				],
				[
					558,
					8,
					"left_delete",
					null,
					"CAAAAA4YAAAAAAAADhgAAAAAAAABAAAAIA0YAAAAAAAADRgAAAAAAAABAAAAPQwYAAAAAAAADBgAAAAAAAABAAAAIAsYAAAAAAAACxgAAAAAAAABAAAAZgoYAAAAAAAAChgAAAAAAAABAAAAdQkYAAAAAAAACRgAAAAAAAABAAAAYggYAAAAAAAACBgAAAAAAAABAAAAIAcYAAAAAAAABxgAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAADxgAAAAAAAAPGAAAAAAAAAAAAAAAAPC/"
				],
				[
					559,
					1,
					"insert",
					{
						"characters": " buf;"
					},
					"BQAAAAcYAAAAAAAACBgAAAAAAAAAAAAACBgAAAAAAAAJGAAAAAAAAAAAAAAJGAAAAAAAAAoYAAAAAAAAAAAAAAoYAAAAAAAACxgAAAAAAAAAAAAACxgAAAAAAAAMGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABxgAAAAAAAAHGAAAAAAAAAAAAAAAAPC/"
				],
				[
					560,
					1,
					"insert",
					{
						"characters": "\n\nringbuffer_coni"
					},
					"EQAAAAwYAAAAAAAADRgAAAAAAAAAAAAADRgAAAAAAAAOGAAAAAAAAAAAAAAOGAAAAAAAAA8YAAAAAAAAAAAAAA8YAAAAAAAAEBgAAAAAAAAAAAAAEBgAAAAAAAARGAAAAAAAAAAAAAARGAAAAAAAABIYAAAAAAAAAAAAABIYAAAAAAAAExgAAAAAAAAAAAAAExgAAAAAAAAUGAAAAAAAAAAAAAAUGAAAAAAAABUYAAAAAAAAAAAAABUYAAAAAAAAFhgAAAAAAAAAAAAAFhgAAAAAAAAXGAAAAAAAAAAAAAAXGAAAAAAAABgYAAAAAAAAAAAAABgYAAAAAAAAGRgAAAAAAAAAAAAAGRgAAAAAAAAaGAAAAAAAAAAAAAAaGAAAAAAAABsYAAAAAAAAAAAAABsYAAAAAAAAHBgAAAAAAAAAAAAAHBgAAAAAAAAdGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADBgAAAAAAAAMGAAAAAAAAAAAAAAAAPC/"
				],
				[
					561,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAB0YAAAAAAAAHhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHRgAAAAAAAAdGAAAAAAAAAAAAAAAAPC/"
				],
				[
					562,
					2,
					"left_delete",
					null,
					"AgAAAB0YAAAAAAAAHRgAAAAAAAABAAAAcxwYAAAAAAAAHBgAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAHhgAAAAAAAAeGAAAAAAAAAAAAAAAAPC/"
				],
				[
					563,
					1,
					"insert",
					{
						"characters": "sume"
					},
					"BAAAABwYAAAAAAAAHRgAAAAAAAAAAAAAHRgAAAAAAAAeGAAAAAAAAAAAAAAeGAAAAAAAAB8YAAAAAAAAAAAAAB8YAAAAAAAAIBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHBgAAAAAAAAcGAAAAAAAAAAAAAAAAPC/"
				],
				[
					564,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACAYAAAAAAAAIhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIBgAAAAAAAAgGAAAAAAAAAAAAAAAAPC/"
				],
				[
					565,
					1,
					"insert",
					{
						"characters": "&opaque->ws->"
					},
					"DQAAACEYAAAAAAAAIhgAAAAAAAAAAAAAIhgAAAAAAAAjGAAAAAAAAAAAAAAjGAAAAAAAACQYAAAAAAAAAAAAACQYAAAAAAAAJRgAAAAAAAAAAAAAJRgAAAAAAAAmGAAAAAAAAAAAAAAmGAAAAAAAACcYAAAAAAAAAAAAACcYAAAAAAAAKBgAAAAAAAAAAAAAKBgAAAAAAAApGAAAAAAAAAAAAAApGAAAAAAAACoYAAAAAAAAAAAAACoYAAAAAAAAKxgAAAAAAAAAAAAAKxgAAAAAAAAsGAAAAAAAAAAAAAAsGAAAAAAAAC0YAAAAAAAAAAAAAC0YAAAAAAAALhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIRgAAAAAAAAhGAAAAAAAAAAAAAAAAPC/"
				],
				[
					566,
					1,
					"insert",
					{
						"characters": "sendq,"
					},
					"BgAAAC4YAAAAAAAALxgAAAAAAAAAAAAALxgAAAAAAAAwGAAAAAAAAAAAAAAwGAAAAAAAADEYAAAAAAAAAAAAADEYAAAAAAAAMhgAAAAAAAAAAAAAMhgAAAAAAAAzGAAAAAAAAAAAAAAzGAAAAAAAADQYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALhgAAAAAAAAuGAAAAAAAAAAAAAAAAPC/"
				],
				[
					567,
					1,
					"insert",
					{
						"characters": " &buf,"
					},
					"BgAAADQYAAAAAAAANRgAAAAAAAAAAAAANRgAAAAAAAA2GAAAAAAAAAAAAAA2GAAAAAAAADcYAAAAAAAAAAAAADcYAAAAAAAAOBgAAAAAAAAAAAAAOBgAAAAAAAA5GAAAAAAAAAAAAAA5GAAAAAAAADoYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANBgAAAAAAAA0GAAAAAAAAAAAAAAAAPC/"
				],
				[
					568,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAADoYAAAAAAAAOxgAAAAAAAAAAAAAOxgAAAAAAAA8GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOhgAAAAAAAA6GAAAAAAAAAAAAAAAAPC/"
				],
				[
					570,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAD0YAAAAAAAAPhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPRgAAAAAAAA9GAAAAAAAAAAAAAAAAPC/"
				],
				[
					572,
					1,
					"left_delete",
					null,
					"AQAAAAwYAAAAAAAADBgAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAADRgAAAAAAAANGAAAAAAAAAAAAAAAgINA"
				],
				[
					582,
					1,
					"cut",
					null,
					"AQAAAEgYAAAAAAAASBgAAAAAAACGAAAAY2hhciogYnVmOwoKICAgICAgICAgIGlmKChidWYgPSBhbGxvY2Eoc2l6ZSkpKSB7CiAgICAgICAgICAgIGludCBuZWxlbSA9IHJpbmdidWZmZXJfY29uc3VtZSgmb3BhcXVlLT53cy0+c2VuZHEsIGJ1Ziwgc2l6ZSk7CiAgICAgICAgICA",
					"AQAAAAAAAAABAAAASBgAAAAAAADOGAAAAAAAAAAAAAAAQGBA"
				],
				[
					589,
					1,
					"insert",
					{
						"characters": "buf.start"
					},
					"CgAAAGMYAAAAAAAAZBgAAAAAAAAAAAAAZBgAAAAAAABkGAAAAAAAAAMAAABidWZkGAAAAAAAAGUYAAAAAAAAAAAAAGUYAAAAAAAAZhgAAAAAAAAAAAAAZhgAAAAAAABnGAAAAAAAAAAAAABnGAAAAAAAAGgYAAAAAAAAAAAAAGgYAAAAAAAAaRgAAAAAAAAAAAAAaRgAAAAAAABqGAAAAAAAAAAAAABqGAAAAAAAAGsYAAAAAAAAAAAAAGsYAAAAAAAAbBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYxgAAAAAAABmGAAAAAAAAAAAAAAAAPC/"
				],
				[
					591,
					1,
					"insert",
					{
						"characters": "buf.write-"
					},
					"CgAAAG4YAAAAAAAAbxgAAAAAAAAAAAAAbxgAAAAAAABwGAAAAAAAAAAAAABwGAAAAAAAAHEYAAAAAAAAAAAAAHEYAAAAAAAAchgAAAAAAAAAAAAAchgAAAAAAABzGAAAAAAAAAAAAABzGAAAAAAAAHQYAAAAAAAAAAAAAHQYAAAAAAAAdRgAAAAAAAAAAAAAdRgAAAAAAAB2GAAAAAAAAAAAAAB2GAAAAAAAAHcYAAAAAAAAAAAAAHcYAAAAAAAAeBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbhgAAAAAAABuGAAAAAAAAAAAAAAAAPC/"
				],
				[
					592,
					1,
					"insert",
					{
						"characters": "buf.start"
					},
					"CQAAAHgYAAAAAAAAeRgAAAAAAAAAAAAAeRgAAAAAAAB6GAAAAAAAAAAAAAB6GAAAAAAAAHsYAAAAAAAAAAAAAHsYAAAAAAAAfBgAAAAAAAAAAAAAfBgAAAAAAAB9GAAAAAAAAAAAAAB9GAAAAAAAAH4YAAAAAAAAAAAAAH4YAAAAAAAAfxgAAAAAAAAAAAAAfxgAAAAAAACAGAAAAAAAAAAAAACAGAAAAAAAAIEYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeBgAAAAAAAB4GAAAAAAAAAAAAAAAAPC/"
				],
				[
					593,
					5,
					"right_delete",
					null,
					"BQAAAIEYAAAAAAAAgRgAAAAAAAABAAAAboEYAAAAAAAAgRgAAAAAAAABAAAAZYEYAAAAAAAAgRgAAAAAAAABAAAAbIEYAAAAAAAAgRgAAAAAAAABAAAAZYEYAAAAAAAAgRgAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAgRgAAAAAAACBGAAAAAAAAAAAAAAAAPC/"
				],
				[
					611,
					1,
					"insert",
					{
						"characters": "bv"
					},
					"AwAAAPIYAAAAAAAA8xgAAAAAAAAAAAAA8xgAAAAAAADzGAAAAAAAAAQAAABzaXpl8xgAAAAAAAD0GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8hgAAAAAAAD2GAAAAAAAAAAAAAAAAPC/"
				],
				[
					612,
					2,
					"left_delete",
					null,
					"AgAAAPMYAAAAAAAA8xgAAAAAAAABAAAAdvIYAAAAAAAA8hgAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAA9BgAAAAAAAD0GAAAAAAAAAAAAAAAAPC/"
				],
				[
					613,
					1,
					"insert",
					{
						"characters": "buf.size"
					},
					"CAAAAPIYAAAAAAAA8xgAAAAAAAAAAAAA8xgAAAAAAAD0GAAAAAAAAAAAAAD0GAAAAAAAAPUYAAAAAAAAAAAAAPUYAAAAAAAA9hgAAAAAAAAAAAAA9hgAAAAAAAD3GAAAAAAAAAAAAAD3GAAAAAAAAPgYAAAAAAAAAAAAAPgYAAAAAAAA+RgAAAAAAAAAAAAA+RgAAAAAAAD6GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8hgAAAAAAADyGAAAAAAAAAAAAAAAAPC/"
				],
				[
					614,
					9,
					"left_delete",
					null,
					"CQAAAPkYAAAAAAAA+RgAAAAAAAABAAAAZfgYAAAAAAAA+BgAAAAAAAABAAAAevcYAAAAAAAA9xgAAAAAAAABAAAAafYYAAAAAAAA9hgAAAAAAAABAAAAc/UYAAAAAAAA9RgAAAAAAAABAAAALvQYAAAAAAAA9BgAAAAAAAABAAAAZvMYAAAAAAAA8xgAAAAAAAABAAAAdfIYAAAAAAAA8hgAAAAAAAABAAAAYvEYAAAAAAAA8RgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA+hgAAAAAAAD6GAAAAAAAAAAAAAAAAPC/"
				],
				[
					615,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPEYAAAAAAAA8hgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8RgAAAAAAADxGAAAAAAAAAAAAAAAAPC/"
				],
				[
					616,
					1,
					"paste",
					null,
					"AQAAAPIYAAAAAAAA/hgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8hgAAAAAAADyGAAAAAAAAAAAAAAAAPC/"
				],
				[
					617,
					1,
					"insert",
					{
						"characters": "(&%"
					},
					"AwAAAP4YAAAAAAAA/xgAAAAAAAAAAAAA/xgAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAEZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/hgAAAAAAAD+GAAAAAAAAAAAAAAAAPC/"
				],
				[
					618,
					1,
					"left_delete",
					null,
					"AQAAAAAZAAAAAAAAABkAAAAAAAABAAAAJQ",
					"AQAAAAAAAAABAAAAARkAAAAAAAABGQAAAAAAAAAAAAAAAPC/"
				],
				[
					619,
					1,
					"insert",
					{
						"characters": "buf),"
					},
					"BQAAAAAZAAAAAAAAARkAAAAAAAAAAAAAARkAAAAAAAACGQAAAAAAAAAAAAACGQAAAAAAAAMZAAAAAAAAAAAAAAMZAAAAAAAABBkAAAAAAAAAAAAABBkAAAAAAAAFGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAABkAAAAAAAAAGQAAAAAAAAAAAAAAAPC/"
				],
				[
					620,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAUZAAAAAAAABhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABRkAAAAAAAAFGQAAAAAAAAAAAAAAAPC/"
				],
				[
					621,
					4,
					"right_delete",
					null,
					"BAAAAAYZAAAAAAAABhkAAAAAAAABAAAALAYZAAAAAAAABhkAAAAAAAABAAAAIAYZAAAAAAAABhkAAAAAAAABAAAAbgYZAAAAAAAABhkAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAABhkAAAAAAAAGGQAAAAAAAAAAAAAAAPC/"
				],
				[
					626,
					1,
					"insert",
					{
						"characters": "bytes"
					},
					"BgAAANUYAAAAAAAA1hgAAAAAAAAAAAAA1hgAAAAAAADWGAAAAAAAAAQAAABzaXpl1hgAAAAAAADXGAAAAAAAAAAAAADXGAAAAAAAANgYAAAAAAAAAAAAANgYAAAAAAAA2RgAAAAAAAAAAAAA2RgAAAAAAADaGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1RgAAAAAAADZGAAAAAAAAAAAAAAAAPC/"
				],
				[
					631,
					1,
					"insert",
					{
						"characters": "%"
					},
					"AgAAAOYYAAAAAAAA5xgAAAAAAAAAAAAA5xgAAAAAAADnGAAAAAAAAAEAAABk",
					"AQAAAAAAAAABAAAA5hgAAAAAAADnGAAAAAAAAAAAAAAAAPC/"
				],
				[
					632,
					1,
					"left_delete",
					null,
					"AQAAAOYYAAAAAAAA5hgAAAAAAAABAAAAJQ",
					"AQAAAAAAAAABAAAA5xgAAAAAAADnGAAAAAAAAAAAAAAAAPC/"
				],
				[
					633,
					1,
					"insert",
					{
						"characters": "6d"
					},
					"AgAAAOYYAAAAAAAA5xgAAAAAAAAAAAAA5xgAAAAAAADoGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5hgAAAAAAADmGAAAAAAAAAAAAAAAAPC/"
				],
				[
					634,
					1,
					"left_delete",
					null,
					"AQAAAOcYAAAAAAAA5xgAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAA6BgAAAAAAADoGAAAAAAAAAAAAAAAAPC/"
				],
				[
					635,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAOcYAAAAAAAA6BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5xgAAAAAAADnGAAAAAAAAAAAAAAAAPC/"
				],
				[
					636,
					2,
					"left_delete",
					null,
					"AgAAAOcYAAAAAAAA5xgAAAAAAAABAAAAeOYYAAAAAAAA5hgAAAAAAAABAAAANg",
					"AQAAAAAAAAABAAAA6BgAAAAAAADoGAAAAAAAAAAAAAAAAPC/"
				],
				[
					637,
					1,
					"insert",
					{
						"characters": "zx"
					},
					"AgAAAOYYAAAAAAAA5xgAAAAAAAAAAAAA5xgAAAAAAADoGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5hgAAAAAAADmGAAAAAAAAAAAAAAAAPC/"
				],
				[
					639,
					5,
					"left_delete",
					null,
					"BQAAAOMYAAAAAAAA4xgAAAAAAAABAAAAbeIYAAAAAAAA4hgAAAAAAAABAAAAZeEYAAAAAAAA4RgAAAAAAAABAAAAbOAYAAAAAAAA4BgAAAAAAAABAAAAZd8YAAAAAAAA3xgAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAA5BgAAAAAAADkGAAAAAAAAAAAAAAAAPC/"
				],
				[
					640,
					1,
					"insert",
					{
						"characters": "size"
					},
					"BAAAAN8YAAAAAAAA4BgAAAAAAAAAAAAA4BgAAAAAAADhGAAAAAAAAAAAAADhGAAAAAAAAOIYAAAAAAAAAAAAAOIYAAAAAAAA4xgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3xgAAAAAAADfGAAAAAAAAAAAAAAAAPC/"
				],
				[
					643,
					1,
					"insert",
					{
						"characters": "size,ret);"
					},
					"CwAAAAcZAAAAAAAACBkAAAAAAAAAAAAACBkAAAAAAAAIGQAAAAAAAAIAAABsZQgZAAAAAAAACRkAAAAAAAAAAAAACRkAAAAAAAAKGQAAAAAAAAAAAAAKGQAAAAAAAAsZAAAAAAAAAAAAAAsZAAAAAAAADBkAAAAAAAAAAAAADBkAAAAAAAANGQAAAAAAAAAAAAANGQAAAAAAAA4ZAAAAAAAAAAAAAA4ZAAAAAAAADxkAAAAAAAAAAAAADxkAAAAAAAAQGQAAAAAAAAAAAAAQGQAAAAAAABEZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABxkAAAAAAAAJGQAAAAAAAAAAAAAAAPC/"
				],
				[
					648,
					1,
					"left_delete",
					null,
					"AQAAABEZAAAAAAAAERkAAAAAAAAWAAAAbSwgcmV0KTsKICAgICAgICAgICAgCg",
					"AQAAAAAAAAABAAAAERkAAAAAAAAnGQAAAAAAAAAAAAAAAAAA"
				],
				[
					651,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAERkAAAAAAAARGQAAAAAAAAAAAAAAAPC/"
				],
				[
					660,
					1,
					"paste",
					null,
					"AgAAAAkYAAAAAAAAFRgAAAAAAAAAAAAAFRgAAAAAAAAVGAAAAAAAAAgAAABKU0J1ZmZlcg",
					"AQAAAAAAAAABAAAACRgAAAAAAAARGAAAAAAAAAAAAAAAAPC/"
				],
				[
					696,
					3,
					"left_delete",
					null,
					"AwAAAD8ZAAAAAAAAPxkAAAAAAAABAAAAfT0ZAAAAAAAAPRkAAAAAAAACAAAAICA7GQAAAAAAADsZAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAQBkAAAAAAABAGQAAAAAAAAAAAAAAAPC/"
				],
				[
					699,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACVHwAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCiNpbmNsdWRlICJtaW5uZXQtcmVzcG9uc2UuaCIKI2luY2x1ZGUgPGFsbG9jYS5oPgojaW5jbHVkZSA8YXNzZXJ0Lmg+CiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CgppbnQgaHR0cF9zZXJ2ZXJfY2FsbGJhY2soc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMsIHZvaWQqLCB2b2lkKiwgc2l6ZV90KTsKCmNoYXIqIGx3c19oZHJfc2ltcGxlX3B0cihzdHJ1Y3QgbHdzKiwgaW50KTsKCmludAp3c19jYWxsYmFjayhzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIE1pbm5ldFNlc3Npb24qIHNlc3Npb24gPSB1c2VyOwogIE1pbm5ldFNlcnZlciogc2VydmVyID0gbHdzX2NvbnRleHRfdXNlcihsd3NfZ2V0X2NvbnRleHQod3NpKSk7CiAgSlNDb250ZXh0KiBjdHggPSBzZXJ2ZXItPmNvbnRleHQuanM7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKTsKCiAgaWYoIW9wYXF1ZSAmJiBjdHgpCiAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKCiAgaWYobHdzX2lzX3BvbGxfY2FsbGJhY2socmVhc29uKSkKICAgIHJldHVybiBmZF9jYWxsYmFjayh3c2ksIHJlYXNvbiwgJnNlcnZlci0+Y2IuZmQsIGluKTsKICBpZihsd3NfaXNfaHR0cF9jYWxsYmFjayhyZWFzb24pKQogICAgcmV0dXJuIGh0dHBfc2VydmVyX2NhbGxiYWNrKHdzaSwgcmVhc29uLCB1c2VyLCBpbiwgbGVuKTsKCiAgTE9HQ0IoIldTIiwgImZkPSVkLCAlcyVzaW49JyUuKnMnIHNlc3Npb24jJWkiLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBpc19oMih3c2kpID8gImgyLCAiIDogIiIsIGx3c19pc19zc2wod3NpKSA/ICJzc2wsICIgOiAiIiwgKGludClsZW4sIChjaGFyKilpbiwgc2Vzc2lvbiA/IHNlc3Npb24tPnNlcmlhbCA6IDApOwoKICBzd2l0Y2gocmVhc29uKSB7CiAgICBjYXNlIExXU19DQUxMQkFDS19DT05ORUNUSU5HOiB7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9QRVJGT1JNX1NFUlZFUl9DRVJUX1ZFUklGSUNBVElPTjogewogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMSUVOVF9DT05ORUNUSU9OX0VSUk9SOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfQ0hJTERfQ0xPU0lORzogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0ZJTFRFUl9ORVRXT1JLX0NPTk5FQ1RJT046CiAgICBjYXNlIExXU19DQUxMQkFDS19GSUxURVJfUFJPVE9DT0xfQ09OTkVDVElPTjoKICAgICAgaWYoIW9wYXF1ZS0+cmVxKQogICAgICAgIG9wYXF1ZS0+cmVxID0gcmVxdWVzdF9mcm9td3NpKHdzaSwgY3R4KTsKCiAgICAgIGJyZWFrOwoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQ6IHsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19QUk9UT0NPTF9ERVNUUk9ZOiB7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX09QRU5TU0xfTE9BRF9FWFRSQV9TRVJWRVJfVkVSSUZZX0NFUlRTOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX0NMSUVOVF9WRVJJRllfQ0VSVFM6IHsKICAgICAgcmV0dXJuIGx3c19jYWxsYmFja19odHRwX2R1bW15KHdzaSwgcmVhc29uLCB1c2VyLCBpbiwgbGVuKTsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9ORVdfQ0xJRU5UX0lOU1RBTlRJQVRFRDogewogICAgICBsd3NfcGVlcl9jZXJ0KHdzaSk7CiAgICAgIGlmKCFvcGFxdWUtPndzKQogICAgICAgIG9wYXF1ZS0+d3MgPSB3c19uZXcod3NpLCBjdHgpOwogICAgICByZXR1cm4gMDsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19XU0lfQ1JFQVRFOiB7CiAgICAgIGlmKCFvcGFxdWUtPndzKQogICAgICAgIG9wYXF1ZS0+d3MgPSB3c19uZXcod3NpLCBjdHgpOwogICAgICAvKiAgICAgIGlmKHNlc3Npb24pCiAgICAgICAgICAgICAgc2Vzc2lvbi0+d3Nfb2JqID0gbWlubmV0X3dzX3dyYXAoY3R4LCBvcGFxdWUtPndzKTsqLwogICAgICByZXR1cm4gMDsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19XU0lfREVTVFJPWTogewogICAgICAvKiAgIGlmKG9wYXF1ZSAmJiBvcGFxdWUtPndzKSB7CiAgICAgICAgICAgd3NfZnJlZShvcGFxdWUtPndzLCBjdHgpOwogICAgICAgICAgIG9wYXF1ZS0+d3MgPSAwOwogICAgICAgICB9Ki8KICAgICAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkgewogICAgICAgIGlmKG9wYXF1ZS0+d3MpCiAgICAgICAgICBvcGFxdWUtPndzLT5sd3NpID0gMDsKCiAgICAgICAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgMCk7CiAgICAgICAgLy8gb3BhcXVlX2ZyZWUob3BhcXVlLCBjdHgpOwogICAgICB9CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0hUVFBfQ09ORklSTV9VUEdSQURFOiB7CiAgICAgIGludCByZXQgPSAwOwogICAgICBNaW5uZXRVUkwgdXJsID0gey5wcm90b2NvbCA9IHByb3RvY29sX3N0cmluZyhQUk9UT0NPTF9XUyl9OwogICAgICB1cmxfZnJvbXdzaSgmdXJsLCB3c2ksIGN0eCk7CgogICAgICBpZighbHdzX2lzX3NzbCh3c2kpICYmICFzdHJjbXAoaW4sICJoMmMiKSkgewogICAgICAgIGNoYXIqIGRlc3Q7CiAgICAgICAgc2l6ZV90IGRlc3RsZW47CiAgICAgICAgTWlubmV0QnVmZmVyIG91dCA9IEJVRkZFUl8wKCk7CiAgICAgICAgdXJsLnByb3RvY29sID0gcHJvdG9jb2xfc3RyaW5nKFBST1RPQ09MX0hUVFBTKTsKICAgICAgICBkZXN0ID0gdXJsX2Zvcm1hdCh1cmwsIGN0eCk7CiAgICAgICAgZGVzdGxlbiA9IHVybF9sZW5ndGgodXJsKTsKCiAgICAgICAgYnVmZmVyX2FsbG9jKCZvdXQsIDEwMjQsIGN0eCk7CgogICAgICAgIGlmKGx3c19odHRwX3JlZGlyZWN0KHdzaSwgMzA4LCAoY29uc3QgdW5zaWduZWQgY2hhciopZGVzdCwgZGVzdGxlbiwgJm91dC53cml0ZSwgb3V0LmVuZCkgPCAwKQogICAgICAgICAgcmV0ID0gLTE7CiAgICAgICAgZWxzZQogICAgICAgICAgcmV0ID0gMTsKCiAgICAgICAgdXJsX2ZyZWUoJnVybCwgY3R4KTsKICAgICAgICBqc19mcmVlKGN0eCwgZGVzdCk7CiAgICAgICAgcmV0dXJuIHJldDsKICAgICAgfQoKICAgICAgaWYoIW9wYXF1ZSkKICAgICAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKCiAgICAgIGlmKCFvcGFxdWUtPnJlcSkgewogICAgICAgIG9wYXF1ZS0+cmVxID0gcmVxdWVzdF9uZXcodXJsLCBNRVRIT0RfR0VULCBjdHgpOwogICAgICAgIGhlYWRlcnNfdG9zdHJpbmcoY3R4LCAmb3BhcXVlLT5yZXEtPmhlYWRlcnMsIHdzaSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdXJsX2ZyZWUoJnVybCwgY3R4KTsKICAgICAgfQogICAgICByZXR1cm4gcmV0OwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0VTVEFCTElTSEVEOiB7CiAgICAgIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CiAgICAgIGludCBzdGF0dXM7CiAgICAgIHN0YXR1cyA9IGx3c19odHRwX2NsaWVudF9odHRwX3Jlc3BvbnNlKHdzaSk7CiAgICAgIE1pbm5ldEh0dHBNb3VudCogbW91bnQgPSAwOwogICAgICBNaW5uZXRVUkwqIHVybDsKCiAgICAgIGlmKCFvcGFxdWUtPnJlcSkKICAgICAgICBvcGFxdWUtPnJlcSA9IHJlcXVlc3RfZnJvbXdzaSh3c2ksIGN0eCk7CgogICAgICBpZihvcGFxdWUtPnJlcSkgewogICAgICAgIHVybCA9ICZvcGFxdWUtPnJlcS0+dXJsOwoKICAgICAgICBpZigobW91bnQgPSBtb3VudF9maW5kX3MoKE1pbm5ldEh0dHBNb3VudCopc2VydmVyLT5jb250ZXh0LmluZm8ubW91bnRzLCB1cmwtPnBhdGgpKSkgewogICAgICAgICAgLy8gcHJpbnRmKCJmb3VuZCBtb3VudCBtbnQ9JXMgb3JnPSVzIGRlZj0lcyBwcm89JXNcbiIsIG1vdW50LT5tbnQsIG1vdW50LT5vcmcsIG1vdW50LT5kZWYsIG1vdW50LT5wcm8pOwogICAgICAgIH0KCiAgICAgICAgaWYoIUpTX0lzT2JqZWN0KHNlc3Npb24tPnJlcV9vYmopKQogICAgICAgICAgc2Vzc2lvbi0+cmVxX29iaiA9IG1pbm5ldF9yZXF1ZXN0X3dyYXAoY3R4LCBvcGFxdWUtPnJlcSk7CgogICAgICAgIHNlc3Npb24tPnJlc3Bfb2JqID0gbWlubmV0X3Jlc3BvbnNlX25ldyhjdHgsIG9wYXF1ZS0+cmVxLT51cmwsIHN0YXR1cywgMCwgVFJVRSwgInRleHQvaHRtbCIpOwogICAgICB9CgogICAgICBvcGFxdWUtPnN0YXR1cyA9IE9QRU47CgogICAgICBpZihzZXJ2ZXItPmNiLmNvbm5lY3QuY3R4KSB7CgogICAgICAgIGlmKCFKU19Jc09iamVjdChzZXNzaW9uLT53c19vYmopKQogICAgICAgICAgc2Vzc2lvbi0+d3Nfb2JqID0gbWlubmV0X3dzX2Zyb213c2koY3R4LCB3c2kpOwoKICAgICAgICBpZighb3BhcXVlLT53cykgewogICAgICAgICAgaWYoKG9wYXF1ZS0+d3MgPSBtaW5uZXRfd3NfZGF0YShzZXNzaW9uLT53c19vYmopKSkKICAgICAgICAgICAgb3BhcXVlLT53cy0+cmVmX2NvdW50Kys7CiAgICAgICAgfQoKICAgICAgICBMT0dDQigid3MiLCAid3NpIyUiIFBSSWQ2NCAiIHJlcT0lcCIsIG9wYXF1ZS0+c2VyaWFsLCBvcGFxdWUtPnJlcSk7CiAgICAgICAgc2VydmVyX2V4Y2VwdGlvbihzZXJ2ZXIsIG1pbm5ldF9lbWl0X3RoaXMoJnNlcnZlci0+Y2IuY29ubmVjdCwgc2Vzc2lvbi0+d3Nfb2JqLCAyLCAmc2Vzc2lvbi0+d3Nfb2JqKSk7CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfUEVFUl9JTklUSUFURURfQ0xPU0U6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTE9TRUQ6IHsKICAgICAgaWYob3BhcXVlLT5zdGF0dXMgPCBDTE9TSU5HKSB7CiAgICAgICAgSlNWYWx1ZSB3aHkgPSBKU19VTkRFRklORUQ7CiAgICAgICAgaW50IGNvZGUgPSAtMTsKCiAgICAgICAgaWYoaW4pIHsKICAgICAgICAgIHVpbnQ4X3QqIGNvZGVwID0gaW47CiAgICAgICAgICBjb2RlID0gKGNvZGVwWzBdIDw8IDgpICsgY29kZXBbMV07CiAgICAgICAgICBpZihsZW4gLSAyID4gMCkKICAgICAgICAgICAgd2h5ID0gSlNfTmV3U3RyaW5nTGVuKHNlcnZlci0+Y29udGV4dC5qcywgKGNoYXIqKWluICsgMiwgbGVuIC0gMik7CiAgICAgICAgfQoKICAgICAgICBvcGFxdWUtPnN0YXR1cyA9IENMT1NJTkc7CgogICAgICAgIExPR0NCKCJ3cyIsICJmZD0lZCwgc3RhdHVzPSVkIiwgbHdzX2dldF9zb2NrZXRfZmQod3NpKSwgb3BhcXVlLT5zdGF0dXMpOwoKICAgICAgICBpZihjdHgpIHsKICAgICAgICAgIEpTVmFsdWUgY2JfYXJndlszXSA9IHtzZXNzaW9uLT53c19vYmosIGNvZGUgIT0gLTEgPyBKU19OZXdJbnQzMihjdHgsIGNvZGUpIDogSlNfVU5ERUZJTkVELCB3aHl9OwogICAgICAgICAgc2VydmVyX2V4Y2VwdGlvbihzZXJ2ZXIsIG1pbm5ldF9lbWl0KCZzZXJ2ZXItPmNiLmNsb3NlLCBjb2RlICE9IC0xID8gMyA6IDEsIGNiX2FyZ3YpKTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICAgIH0KICAgICAgICBKU19GcmVlVmFsdWUoc2VydmVyLT5jb250ZXh0LmpzLCB3aHkpOwogICAgICAgIC8qSlNfRnJlZVZhbHVlKHNlcnZlci0+Y29udGV4dC5qcywgc2Vzc2lvbi0+d3Nfb2JqKTsKICAgICAgICBzZXNzaW9uLT53c19vYmogPSBKU19OVUxMOyovCiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfU0VSVkVSX1dSSVRFQUJMRTogewogICAgICAvLyBmcHJpbnRmKHN0ZGVyciwgIlx4MWJbMTszM213cml0YWJsZVx4MWJbMG0gJXMgZmQ9JWRcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQod3NpKSk7CiAgICAgIGlmKCZvcGFxdWUtPndzLT5zZW5kcSkgewogICAgICAgIHNpemVfdCBzaXplOwoKICAgICAgICB3aGlsZSgoc2l6ZSA9IHJpbmdidWZmZXJfc2l6ZSgmb3BhcXVlLT53cy0+c2VuZHEpKSkgewogICAgICAgICAgTWlubmV0QnVmZmVyIGJ1ZjsKICAgICAgICAgIHJpbmdidWZmZXJfY29uc3VtZSgmb3BhcXVlLT53cy0+c2VuZHEsICZidWYsIDEpOwogICAgICAgICAgaW50IHJldCA9IGx3c193cml0ZSh3c2ksIGJ1Zi5zdGFydCwgYnVmLndyaXRlIC0gYnVmLnN0YXJ0LCBvcGFxdWUtPmJpbmFyeSA/IExXU19XUklURV9CSU5BUlkgOiBMV1NfV1JJVEVfVEVYVCk7CiAgICAgICAgICBwcmludGYoIndyaXRhYmxlIGJ5dGVzPSV6eCBzaXplPSV6eCByZXQ9JWRcbiIsIGJ1ZmZlcl9CWVRFUygmYnVmKSwgc2l6ZSwgcmV0KTsKICAgICAgICB9CiAgICAgIH0KCgogICAgYnJlYWs7CiAgfQoKICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFOiB7CiAgICBpZihjdHgpIHsKICAgICAgSlNWYWx1ZSBtc2cgPSBvcGFxdWUtPmJpbmFyeSA/IEpTX05ld0FycmF5QnVmZmVyQ29weShjdHgsIGluLCBsZW4pIDogSlNfTmV3U3RyaW5nTGVuKGN0eCwgaW4sIGxlbik7CiAgICAgIEpTVmFsdWUgY2JfYXJndlsyXSA9IHtKU19EdXBWYWx1ZShjdHgsIHNlc3Npb24tPndzX29iaiksIG1zZ307CiAgICAgIHNlcnZlcl9leGNlcHRpb24oc2VydmVyLCBtaW5uZXRfZW1pdCgmc2VydmVyLT5jYi5tZXNzYWdlLCAyLCBjYl9hcmd2KSk7CiAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMF0pOwogICAgICBKU19GcmVlVmFsdWUoY3R4LCBjYl9hcmd2WzFdKTsKICAgIH0KICAgIHJldHVybiAwOwogIH0KICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFX1BPTkc6IHsKICAgIGlmKHNlcnZlci0+Y2IucG9uZy5jdHgpIHsKICAgICAgLy8gd3Nfb2JqID0gbWlubmV0X3dzX2Zyb213c2koc2VydmVyLT5jYi5wb25nLmN0eCwgd3NpKTsKICAgICAgSlNWYWx1ZSBtc2cgPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkoc2VydmVyLT5jYi5wb25nLmN0eCwgaW4sIGxlbik7CiAgICAgIEpTVmFsdWUgY2JfYXJndlsyXSA9IHtKU19EdXBWYWx1ZShzZXJ2ZXItPmNiLnBvbmcuY3R4LCBzZXNzaW9uLT53c19vYmopLCBtc2d9OwogICAgICBzZXJ2ZXJfZXhjZXB0aW9uKHNlcnZlciwgbWlubmV0X2VtaXQoJnNlcnZlci0+Y2IucG9uZywgMiwgY2JfYXJndikpOwogICAgICBKU19GcmVlVmFsdWUoc2VydmVyLT5jYi5wb25nLmN0eCwgY2JfYXJndlswXSk7CiAgICAgIEpTX0ZyZWVWYWx1ZShzZXJ2ZXItPmNiLnBvbmcuY3R4LCBjYl9hcmd2WzFdKTsKICAgIH0KICAgIHJldHVybiAwOwogIH0KICBjYXNlIExXU19DQUxMQkFDS19XU19TRVJWRVJfRFJPUF9QUk9UT0NPTDogewogICAgcmV0dXJuIDA7CiAgfQogIGNhc2UgTFdTX0NBTExCQUNLX1ZIT1NUX0NFUlRfQUdJTkc6CiAgY2FzZSBMV1NfQ0FMTEJBQ0tfRVZFTlRfV0FJVF9DQU5DRUxMRUQ6CiAgY2FzZSBMV1NfQ0FMTEJBQ0tfR0VUX1RIUkVBRF9JRDogewogICAgcmV0dXJuIDA7CiAgfQoKICBkZWZhdWx0OiB7CiAgICAvLyBwcmludGYoIndzX2NhbGxiYWNrICVzICVwICVwICV6dVxuIiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSwgdXNlciwgaW4sIGxlbik7CiAgICBtaW5uZXRfbHdzX3VuaGFuZGxlZChfX2Z1bmNfXywgcmVhc29uKTsKICAgIGJyZWFrOwogIH0KfQoKLy8gbHdzbF91c2VyKCJ3cyAgICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIGZkPSVkIHVybD0nJXMnIGluPSclLipzJ1xuIiwgMjIgKyAocmVhc29uICogMiksIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQod3NpKSwgbHdzX2dldF90b2tlbih3c2ksIHNlcnZlci0+Y29udGV4dC5qcywgLy8KLy8gV1NJX1RPS0VOX0dFVF9VUkkpLCAoaW50KWxlbiwgKGNoYXIqKWluKTsKCmlmKG9wYXF1ZSAmJiBvcGFxdWUtPnN0YXR1cyA+PSBDTE9TSU5HKQogIHJldHVybiAtMTsKCnJldHVybiAwOyAvLyBsd3NfY2FsbGJhY2tfaHR0cF9kdW1teSh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7Cn0KAAAAAAAAAADoHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxkAAAAAAAA7GQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-websocket.c",
			"settings":
			{
				"buffer_size": 21337,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					544,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAKsIAAAAAAAArAgAAAAAAAAAAAAArAgAAAAAAACuCAAAAAAAAAAAAACuCAAAAAAAAK8IAAAAAAAAAAAAAK8IAAAAAAAAsQgAAAAAAAAAAAAArAgAAAAAAACsCAAAAAAAAAIAAAAgIK8IAAAAAAAAsAgAAAAAAAAAAAAAsAgAAAAAAACxCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwgAAAAAAACrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					545,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALEIAAAAAAAAswgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQgAAAAAAACxCAAAAAAAAAAAAAAAAPC/"
				],
				[
					546,
					1,
					"insert",
					{
						"characters": "opaque->sendq"
					},
					"DQAAALIIAAAAAAAAswgAAAAAAAAAAAAAswgAAAAAAAC0CAAAAAAAAAAAAAC0CAAAAAAAALUIAAAAAAAAAAAAALUIAAAAAAAAtggAAAAAAAAAAAAAtggAAAAAAAC3CAAAAAAAAAAAAAC3CAAAAAAAALgIAAAAAAAAAAAAALgIAAAAAAAAuQgAAAAAAAAAAAAAuQgAAAAAAAC6CAAAAAAAAAAAAAC6CAAAAAAAALsIAAAAAAAAAAAAALsIAAAAAAAAvAgAAAAAAAAAAAAAvAgAAAAAAAC9CAAAAAAAAAAAAAC9CAAAAAAAAL4IAAAAAAAAAAAAAL4IAAAAAAAAvwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsggAAAAAAACyCAAAAAAAAAAAAAAAAPC/"
				],
				[
					548,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMAIAAAAAAAAwQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwAgAAAAAAADACAAAAAAAAAAAAAAAAPC/"
				],
				[
					549,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAMEIAAAAAAAAwwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQgAAAAAAADBCAAAAAAAAAAAAAAAAPC/"
				],
				[
					550,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAMEIAAAAAAAAwQgAAAAAAAABAAAAW8EIAAAAAAAAwQgAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAwggAAAAAAADCCAAAAAAAAAAAAAAAAPC/"
				],
				[
					551,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAMEIAAAAAAAAwwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQgAAAAAAADBCAAAAAAAAAAAAAAAAPC/"
				],
				[
					552,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAMIIAAAAAAAAwwgAAAAAAAAAAAAAwwgAAAAAAADFCAAAAAAAAAAAAADFCAAAAAAAAMYIAAAAAAAAAAAAAMYIAAAAAAAAyAgAAAAAAAAAAAAAwwgAAAAAAADDCAAAAAAAAAIAAAAgIMMIAAAAAAAAxwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwggAAAAAAADCCAAAAAAAAAAAAAAAAPC/"
				],
				[
					553,
					1,
					"insert",
					{
						"characters": "struct"
					},
					"BgAAAMcIAAAAAAAAyAgAAAAAAAAAAAAAyAgAAAAAAADJCAAAAAAAAAAAAADJCAAAAAAAAMoIAAAAAAAAAAAAAMoIAAAAAAAAywgAAAAAAAAAAAAAywgAAAAAAADMCAAAAAAAAAAAAADMCAAAAAAAAM0IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwgAAAAAAADHCAAAAAAAAAAAAAAAAPC/"
				],
				[
					554,
					1,
					"insert",
					{
						"characters": " m"
					},
					"AgAAAM0IAAAAAAAAzggAAAAAAAAAAAAAzggAAAAAAADPCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQgAAAAAAADNCAAAAAAAAAAAAAAAAPC/"
				],
				[
					555,
					8,
					"left_delete",
					null,
					"CAAAAM4IAAAAAAAAzggAAAAAAAABAAAAbc0IAAAAAAAAzQgAAAAAAAABAAAAIMwIAAAAAAAAzAgAAAAAAAABAAAAdMsIAAAAAAAAywgAAAAAAAABAAAAY8oIAAAAAAAAyggAAAAAAAABAAAAdckIAAAAAAAAyQgAAAAAAAABAAAAcsgIAAAAAAAAyAgAAAAAAAABAAAAdMcIAAAAAAAAxwgAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAzwgAAAAAAADPCAAAAAAAAAAAAAAAAPC/"
				],
				[
					556,
					1,
					"insert",
					{
						"characters": "Minner"
					},
					"BgAAAMcIAAAAAAAAyAgAAAAAAAAAAAAAyAgAAAAAAADJCAAAAAAAAAAAAADJCAAAAAAAAMoIAAAAAAAAAAAAAMoIAAAAAAAAywgAAAAAAAAAAAAAywgAAAAAAADMCAAAAAAAAAAAAADMCAAAAAAAAM0IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwgAAAAAAADHCAAAAAAAAAAAAAAAAPC/"
				],
				[
					562,
					1,
					"insert_completion",
					{
						"completion": "MinnetRingbuffer",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "MinnetRingbuffer"
					},
					"AgAAAMcIAAAAAAAAxwgAAAAAAAAGAAAATWlubmVyxwgAAAAAAADXCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQgAAAAAAADNCAAAAAAAAAAAAAAAAPC/"
				],
				[
					563,
					1,
					"insert",
					{
						"characters": "*rbuf"
					},
					"BQAAANcIAAAAAAAA2AgAAAAAAAAAAAAA2AgAAAAAAADZCAAAAAAAAAAAAADZCAAAAAAAANoIAAAAAAAAAAAAANoIAAAAAAAA2wgAAAAAAAAAAAAA2wgAAAAAAADcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wgAAAAAAADXCAAAAAAAAAAAAAAAAPC/"
				],
				[
					564,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANwIAAAAAAAA3QgAAAAAAAAAAAAA3QgAAAAAAADeCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AgAAAAAAADcCAAAAAAAAAAAAAAAAPC/"
				],
				[
					565,
					1,
					"insert",
					{
						"characters": " opaque->sendq"
					},
					"DgAAAN4IAAAAAAAA3wgAAAAAAAAAAAAA3wgAAAAAAADgCAAAAAAAAAAAAADgCAAAAAAAAOEIAAAAAAAAAAAAAOEIAAAAAAAA4ggAAAAAAAAAAAAA4ggAAAAAAADjCAAAAAAAAAAAAADjCAAAAAAAAOQIAAAAAAAAAAAAAOQIAAAAAAAA5QgAAAAAAAAAAAAA5QgAAAAAAADmCAAAAAAAAAAAAADmCAAAAAAAAOcIAAAAAAAAAAAAAOcIAAAAAAAA6AgAAAAAAAAAAAAA6AgAAAAAAADpCAAAAAAAAAAAAADpCAAAAAAAAOoIAAAAAAAAAAAAAOoIAAAAAAAA6wgAAAAAAAAAAAAA6wgAAAAAAADsCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3ggAAAAAAADeCAAAAAAAAAAAAAAAAPC/"
				],
				[
					566,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOwIAAAAAAAA7QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AgAAAAAAADsCAAAAAAAAAAAAAAAAPC/"
				],
				[
					567,
					1,
					"insert",
					{
						"characters": "\nopa"
					},
					"BQAAAO0IAAAAAAAA7ggAAAAAAAAAAAAA7ggAAAAAAADyCAAAAAAAAAAAAADyCAAAAAAAAPMIAAAAAAAAAAAAAPMIAAAAAAAA9AgAAAAAAAAAAAAA9AgAAAAAAAD1CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QgAAAAAAADtCAAAAAAAAAAAAAAAAPC/"
				],
				[
					568,
					1,
					"insert",
					{
						"characters": "que->sewnd"
					},
					"CgAAAPUIAAAAAAAA9ggAAAAAAAAAAAAA9ggAAAAAAAD3CAAAAAAAAAAAAAD3CAAAAAAAAPgIAAAAAAAAAAAAAPgIAAAAAAAA+QgAAAAAAAAAAAAA+QgAAAAAAAD6CAAAAAAAAAAAAAD6CAAAAAAAAPsIAAAAAAAAAAAAAPsIAAAAAAAA/AgAAAAAAAAAAAAA/AgAAAAAAAD9CAAAAAAAAAAAAAD9CAAAAAAAAP4IAAAAAAAAAAAAAP4IAAAAAAAA/wgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QgAAAAAAAD1CAAAAAAAAAAAAAAAAPC/"
				],
				[
					569,
					3,
					"left_delete",
					null,
					"AwAAAP4IAAAAAAAA/ggAAAAAAAABAAAAZP0IAAAAAAAA/QgAAAAAAAABAAAAbvwIAAAAAAAA/AgAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAA/wgAAAAAAAD/CAAAAAAAAAAAAAAAAPC/"
				],
				[
					570,
					1,
					"insert",
					{
						"characters": "ndq=0;"
					},
					"BgAAAPwIAAAAAAAA/QgAAAAAAAAAAAAA/QgAAAAAAAD+CAAAAAAAAAAAAAD+CAAAAAAAAP8IAAAAAAAAAAAAAP8IAAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAABCQAAAAAAAAAAAAABCQAAAAAAAAIJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AgAAAAAAAD8CAAAAAAAAAAAAAAAAPC/"
				],
				[
					571,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAIJAAAAAAAAAwkAAAAAAAAAAAAAAwkAAAAAAAAHCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgkAAAAAAAACCQAAAAAAAAAAAAAAAPC/"
				],
				[
					572,
					1,
					"paste",
					null,
					"AQAAAAcJAAAAAAAAFgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwkAAAAAAAAHCQAAAAAAAAAAAAAAAPC/"
				],
				[
					573,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABYJAAAAAAAAGAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgkAAAAAAAAWCQAAAAAAAAAAAAAAAPC/"
				],
				[
					574,
					1,
					"insert",
					{
						"characters": "rbuf,"
					},
					"BQAAABcJAAAAAAAAGAkAAAAAAAAAAAAAGAkAAAAAAAAZCQAAAAAAAAAAAAAZCQAAAAAAABoJAAAAAAAAAAAAABoJAAAAAAAAGwkAAAAAAAAAAAAAGwkAAAAAAAAcCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwkAAAAAAAAXCQAAAAAAAAAAAAAAAPC/"
				],
				[
					575,
					1,
					"insert",
					{
						"characters": " rt"
					},
					"AwAAABwJAAAAAAAAHQkAAAAAAAAAAAAAHQkAAAAAAAAeCQAAAAAAAAAAAAAeCQAAAAAAAB8JAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAkAAAAAAAAcCQAAAAAAAAAAAAAAAPC/"
				],
				[
					577,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACAJAAAAAAAAIQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAkAAAAAAAAgCQAAAAAAAAAAAAAAAPC/"
				],
				[
					594,
					1,
					"cut",
					null,
					"AQAAAKsIAAAAAAAAqwgAAAAAAAB6AAAACgogIGlmKG9wYXF1ZS0+c2VuZHEpIHsKICAgIE1pbm5ldFJpbmdidWZmZXIqcmJ1ZiA9IG9wYXF1ZS0+c2VuZHE7CiAgICBvcGFxdWUtPnNlbmRxPTA7CiAgICByaW5nYnVmZmVyX2ZyZWUocmJ1ZiwgcnQpOwogIH0",
					"AQAAAAAAAAABAAAAqwgAAAAAAAAlCQAAAAAAAAAAAAAAAPC/"
				],
				[
					603,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADsMAAAAAAAAPAwAAAAAAAAAAAAAPAwAAAAAAAA+DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwwAAAAAAAA7DAAAAAAAAAAAAAAAAPC/"
				],
				[
					604,
					1,
					"paste",
					null,
					"AQAAAD4MAAAAAAAAuAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgwAAAAAAAA+DAAAAAAAAAAAAAAAAPC/"
				],
				[
					609,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"BAAAAEUMAAAAAAAARgwAAAAAAAAAAAAARgwAAAAAAABGDAAAAAAAAAYAAABvcGFxdWU8DAAAAAAAADwMAAAAAAAAAgAAACAgRAwAAAAAAABFDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQwAAAAAAABLDAAAAAAAAAAAAAAAAPC/"
				],
				[
					614,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AwAAAGwMAAAAAAAAbQwAAAAAAAAAAAAAbQwAAAAAAABtDAAAAAAAAAYAAABvcGFxdWVtDAAAAAAAAG4MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAwAAAAAAAByDAAAAAAAAAAAAAAAAPC/"
				],
				[
					619,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AwAAAHsMAAAAAAAAfAwAAAAAAAAAAAAAfAwAAAAAAAB8DAAAAAAAAAYAAABvcGFxdWV8DAAAAAAAAH0MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewwAAAAAAACBDAAAAAAAAAAAAAAAAPC/"
				],
				[
					630,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAiAwAAAAAAACnDAAAAAAAAAAAAAAAAPC/"
				],
				[
					647,
					1,
					"paste",
					null,
					"AQAAAGQFAAAAAAAAcwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAUAAAAAAABkBQAAAAAAAAAAAAAAAPC/"
				],
				[
					648,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHMFAAAAAAAAdQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwUAAAAAAABzBQAAAAAAAAAAAAAAAPC/"
				],
				[
					649,
					1,
					"insert",
					{
						"characters": "&ws->send1q"
					},
					"CwAAAHQFAAAAAAAAdQUAAAAAAAAAAAAAdQUAAAAAAAB2BQAAAAAAAAAAAAB2BQAAAAAAAHcFAAAAAAAAAAAAAHcFAAAAAAAAeAUAAAAAAAAAAAAAeAUAAAAAAAB5BQAAAAAAAAAAAAB5BQAAAAAAAHoFAAAAAAAAAAAAAHoFAAAAAAAAewUAAAAAAAAAAAAAewUAAAAAAAB8BQAAAAAAAAAAAAB8BQAAAAAAAH0FAAAAAAAAAAAAAH0FAAAAAAAAfgUAAAAAAAAAAAAAfgUAAAAAAAB/BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAUAAAAAAAB0BQAAAAAAAAAAAAAAAPC/"
				],
				[
					650,
					2,
					"left_delete",
					null,
					"AgAAAH4FAAAAAAAAfgUAAAAAAAABAAAAcX0FAAAAAAAAfQUAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAfwUAAAAAAAB/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					651,
					1,
					"insert",
					{
						"characters": "q,"
					},
					"AgAAAH0FAAAAAAAAfgUAAAAAAAAAAAAAfgUAAAAAAAB/BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQUAAAAAAAB9BQAAAAAAAAAAAAAAAPC/"
				],
				[
					652,
					1,
					"insert",
					{
						"characters": " 1,"
					},
					"AwAAAH8FAAAAAAAAgAUAAAAAAAAAAAAAgAUAAAAAAACBBQAAAAAAAAAAAACBBQAAAAAAAIIFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwUAAAAAAAB/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					653,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIIFAAAAAAAAgwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggUAAAAAAACCBQAAAAAAAAAAAAAAAPC/"
				],
				[
					656,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAHMFAAAAAAAAdAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwUAAAAAAABzBQAAAAAAAAAAAAAAAPC/"
				],
				[
					662,
					1,
					"paste",
					null,
					"AQAAAIQFAAAAAAAAjwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAUAAAAAAACEBQAAAAAAAAAAAAAAAPC/"
				],
				[
					665,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJAFAAAAAAAAkQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAUAAAAAAACQBQAAAAAAAAAAAAAAAPC/"
				],
				[
					667,
					1,
					"left_delete",
					null,
					"AQAAAJEFAAAAAAAAkQUAAAAAAAAzAAAACiAgd3MtPnNlbmRxID0gcmluZ2J1ZmZlcl9uZXcyKDEsIDY1NTM2ICogMiwgY3R4KTsK",
					"AQAAAAAAAAABAAAAkQUAAAAAAADEBQAAAAAAAAAAAAAASIJA"
				],
				[
					668,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJEFAAAAAAAAkgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQUAAAAAAACRBQAAAAAAAAAAAAAAAPC/"
				],
				[
					675,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAIMFAAAAAAAAhAUAAAAAAAAAAAAAhAUAAAAAAACEBQAAAAAAAAIAAAAgLA",
					"AQAAAAAAAAABAAAAgwUAAAAAAACFBQAAAAAAAAAAAAAAAPC/"
				],
				[
					695,
					1,
					"paste",
					null,
					"AgAAAIgMAAAAAAAAlwwAAAAAAAAAAAAAlwwAAAAAAACXDAAAAAAAAA8AAAByaW5nYnVmZmVyX2ZyZWU",
					"AQAAAAAAAAABAAAAiAwAAAAAAACXDAAAAAAAAAAAAAAAAPC/"
				],
				[
					703,
					1,
					"paste",
					null,
					"AgAAAJgMAAAAAAAAoQwAAAAAAAAAAAAAoQwAAAAAAAChDAAAAAAAAAQAAAByYnVm",
					"AQAAAAAAAAABAAAAmAwAAAAAAACcDAAAAAAAAAAAAAAAAPC/"
				],
				[
					706,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAJgMAAAAAAAAmQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAwAAAAAAACYDAAAAAAAAAAAAAAAAPC/"
				],
				[
					709,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAADcMAAAAAAAAOAwAAAAAAAAAAAAAOAwAAAAAAAA4DAAAAAAAAEwAAAAgIGlmKHdzLT5zZW5kcSkgewogICAgTWlubmV0UmluZ2J1ZmZlciogcmJ1ZiA9IHdzLT5zZW5kcTsKICAgIHdzLT5zZW5kcSA9IDA7",
					"AQAAAAAAAAABAAAAgwwAAAAAAAA3DAAAAAAAAAAAAAAAAPC/"
				],
				[
					716,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAF4MAAAAAAAAXwwAAAAAAAAAAAAAXwwAAAAAAABfDAAAAAAAAAQAAAAgIH0K",
					"AQAAAAAAAAABAAAAXgwAAAAAAABiDAAAAAAAAAAAAAAAAPC/"
				],
				[
					725,
					1,
					"insert",
					{
						"characters": "q"
					},
					"AgAAAFYMAAAAAAAAVwwAAAAAAAAAAAAAVwwAAAAAAABXDAAAAAAAAAUAAABxLCBydA",
					"AQAAAAAAAAABAAAAVgwAAAAAAABbDAAAAAAAAAAAAAAAAPC/"
				],
				[
					739,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAADIYAAAAAAAAMxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMhgAAAAAAAAyGAAAAAAAAAAAAAAAAPC/"
				],
				[
					748,
					1,
					"insert",
					{
						"characters": "sizeof(Miub"
					},
					"DAAAAIEFAAAAAAAAggUAAAAAAAAAAAAAggUAAAAAAACCBQAAAAAAAAEAAAAxggUAAAAAAACDBQAAAAAAAAAAAACDBQAAAAAAAIQFAAAAAAAAAAAAAIQFAAAAAAAAhQUAAAAAAAAAAAAAhQUAAAAAAACGBQAAAAAAAAAAAACGBQAAAAAAAIcFAAAAAAAAAAAAAIcFAAAAAAAAiAUAAAAAAAAAAAAAiAUAAAAAAACJBQAAAAAAAAAAAACJBQAAAAAAAIoFAAAAAAAAAAAAAIoFAAAAAAAAiwUAAAAAAAAAAAAAiwUAAAAAAACMBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQUAAAAAAACCBQAAAAAAAAAAAAAAAPC/"
				],
				[
					749,
					2,
					"left_delete",
					null,
					"AgAAAIsFAAAAAAAAiwUAAAAAAAABAAAAYooFAAAAAAAAigUAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAjAUAAAAAAACMBQAAAAAAAAAAAAAAAPC/"
				],
				[
					750,
					1,
					"insert",
					{
						"characters": "nnetBuffewr)"
					},
					"DAAAAIoFAAAAAAAAiwUAAAAAAAAAAAAAiwUAAAAAAACMBQAAAAAAAAAAAACMBQAAAAAAAI0FAAAAAAAAAAAAAI0FAAAAAAAAjgUAAAAAAAAAAAAAjgUAAAAAAACPBQAAAAAAAAAAAACPBQAAAAAAAJAFAAAAAAAAAAAAAJAFAAAAAAAAkQUAAAAAAAAAAAAAkQUAAAAAAACSBQAAAAAAAAAAAACSBQAAAAAAAJMFAAAAAAAAAAAAAJMFAAAAAAAAlAUAAAAAAAAAAAAAlAUAAAAAAACVBQAAAAAAAAAAAACVBQAAAAAAAJYFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigUAAAAAAACKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					751,
					3,
					"left_delete",
					null,
					"AwAAAJUFAAAAAAAAlQUAAAAAAAABAAAAKZQFAAAAAAAAlAUAAAAAAAABAAAAcpMFAAAAAAAAkwUAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAlgUAAAAAAACWBQAAAAAAAAAAAAAAAPC/"
				],
				[
					752,
					1,
					"insert",
					{
						"characters": "r)"
					},
					"AgAAAJMFAAAAAAAAlAUAAAAAAAAAAAAAlAUAAAAAAACVBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwUAAAAAAACTBQAAAAAAAAAAAAAAAPC/"
				],
				[
					779,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAFEYAAAAAAAAUhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAURgAAAAAAABRGAAAAAAAAAAAAAAAAPC/"
				],
				[
					780,
					1,
					"paste",
					null,
					"AQAAAFIYAAAAAAAAWBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUhgAAAAAAABSGAAAAAAAAAAAAAAAAPC/"
				],
				[
					793,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFgYAAAAAAAAWRgAAAAAAAAAAAAAWRgAAAAAAABZGAAAAAAAABgAAABidWZmZXIuZGF0YSwgYnVmZmVyLnNpemU",
					"AQAAAAAAAAABAAAAWBgAAAAAAABwGAAAAAAAAAAAAAAAAPC/"
				],
				[
					794,
					1,
					"left_delete",
					null,
					"AQAAAFgYAAAAAAAAWBgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAWRgAAAAAAABZGAAAAAAAAAAAAAAAAPC/"
				],
				[
					795,
					1,
					"insert",
					{
						"characters": "m,"
					},
					"AgAAAFgYAAAAAAAAWRgAAAAAAAAAAAAAWRgAAAAAAABaGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWBgAAAAAAABYGAAAAAAAAAAAAAAAAPC/"
				],
				[
					796,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFoYAAAAAAAAWxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWhgAAAAAAABaGAAAAAAAAAAAAAAAAPC/"
				],
				[
					797,
					3,
					"left_delete",
					null,
					"AwAAAFoYAAAAAAAAWhgAAAAAAAABAAAAIFkYAAAAAAAAWRgAAAAAAAABAAAALFgYAAAAAAAAWBgAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAWxgAAAAAAABbGAAAAAAAAAAAAAAAAPC/"
				],
				[
					798,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFgYAAAAAAAAWRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWBgAAAAAAABYGAAAAAAAAAAAAAAAAPC/"
				],
				[
					799,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAFkYAAAAAAAAWhgAAAAAAAAAAAAAWhgAAAAAAABbGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWRgAAAAAAABZGAAAAAAAAAAAAAAAAPC/"
				],
				[
					822,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAxUwAAI2luY2x1ZGUgIm1pbm5ldC1idWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXItaHR0cC5oIgojaW5jbHVkZSAibWlubmV0LXJlcXVlc3QuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXNwb25zZS5oIgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlIDxzdHJpbmdzLmg+CiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KCmludDY0X3Qgd3Nfc2VyaWFsID0gMDsKClRIUkVBRF9MT0NBTCBKU1ZhbHVlIG1pbm5ldF93c19wcm90bywgbWlubmV0X3dzX2N0b3I7ClRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3dzX2NsYXNzX2lkOwoKZW51bSB7CiAgV0VCU09DS0VUX1BST1RPQ09MLAogIFdFQlNPQ0tFVF9GRCwKICBXRUJTT0NLRVRfQUREUkVTUywKICBXRUJTT0NLRVRfRkFNSUxZLAogIFdFQlNPQ0tFVF9QT1JULAogIFdFQlNPQ0tFVF9QRUVSLAogIFdFQlNPQ0tFVF9TU0wsCiAgV0VCU09DS0VUX0JJTkFSWSwKICBXRUJTT0NLRVRfUkVBRFlTVEFURSwKICBXRUJTT0NLRVRfQ09OVEVYVCwKICAvKiAgV0VCU09DS0VUX1JFU0VSVkVEX0JJVFMsCiAgICBXRUJTT0NLRVRfRklOQUxfRlJBR01FTlQsCiAgICBXRUJTT0NLRVRfRklSU1RfRlJBR01FTlQsCiAgICBXRUJTT0NLRVRfUEFSVElBTF9CVUZGRVJFRCwqLwp9OwoKZW51bSB7IFJFU1BPTlNFX0JPRFksIFJFU1BPTlNFX0hFQURFUiwgUkVTUE9OU0VfUkVESVJFQ1QgfTsKCkpTVmFsdWUKbWlubmV0X3dzX25ldyhKU0NvbnRleHQqIGN0eCwgc3RydWN0IGx3cyogd3NpKSB7CiAgTWlubmV0V2Vic29ja2V0KiB3czsKICBKU1ZhbHVlIHdzX29iajsKCiAgaWYoISh3cyA9IHdzX25ldyh3c2ksIGN0eCkpKQogICAgcmV0dXJuIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgd3Nfb2JqID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIG1pbm5ldF93c19wcm90bywgbWlubmV0X3dzX2NsYXNzX2lkKTsKCiAgaWYoSlNfSXNFeGNlcHRpb24od3Nfb2JqKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIEpTX1NldE9wYXF1ZSh3c19vYmosIHdzKTsKCiAgcmV0dXJuIHdzX29iajsKfQoKTWlubmV0V2Vic29ja2V0Kgp3c19uZXcoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCkgewogIE1pbm5ldFdlYnNvY2tldCogd3M7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CgogIGlmKCEod3MgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKE1pbm5ldFdlYnNvY2tldCkpKSkKICAgIHJldHVybiAwOwoKICB3cy0+bHdzaSA9IHdzaTsKICB3cy0+cmVmX2NvdW50ID0gMjsKcmluZ2J1ZmZlcl9pbml0Migmd3MtPnNlbmRxLCBzaXplb2YoTWlubmV0QnVmZmVyKSwgIDY1NTM2ICogMik7CgogIGlmKChvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KSkpIHsKICAgIG9wYXF1ZS0+d3MgPSB3czsKICAgIG9wYXF1ZS0+c3RhdHVzID0gMDsKICAgIG9wYXF1ZS0+aGFuZGxlciA9IEpTX05VTEw7CiAgICAvKm9wYXF1ZS0+aGFuZGxlcnNbMF0gPSBKU19OVUxMOwogICAgb3BhcXVlLT5oYW5kbGVyc1sxXSA9IEpTX05VTEw7Ki8KICB9CgogIHJldHVybiB3czsKfQpzdGF0aWMgdm9pZCogcHJldl9wdHIgPSAwOwoKdm9pZApvcGFxdWVfY2xlYXJfcnQoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUsIEpTUnVudGltZSogcnQpIHsKCiAgLy8gcHJpbnRmKCIlcyBvcGFxdWU9JXAgbGluaz1bJXAsICVwXVxuIiwgX19mdW5jX18sIG9wYXF1ZSwgb3BhcXVlLT5saW5rLm5leHQsIG9wYXF1ZS0+bGluay5wcmV2KTsKCiAgcHJldl9wdHIgPSBvcGFxdWU7CgogIGlmKG9wYXF1ZS0+d3MpIHsKICAgIE1pbm5ldFdlYnNvY2tldCogd3MgPSBvcGFxdWUtPndzOwogICAgb3BhcXVlLT53cyA9IDA7CiAgICB3c19mcmVlX3J0KHdzLCBydCk7CiAgfQogIGlmKG9wYXF1ZS0+cmVxKSB7CiAgICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXEgPSBvcGFxdWUtPnJlcTsKICAgIG9wYXF1ZS0+cmVxID0gMDsKICAgIHJlcXVlc3RfZnJlZV9ydChyZXEsIHJ0KTsKICB9CiAgaWYob3BhcXVlLT5yZXNwKSB7CiAgICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcCA9IG9wYXF1ZS0+cmVzcDsKICAgIG9wYXF1ZS0+cmVzcCA9IDA7CiAgICByZXNwb25zZV9mcmVlX3J0KHJlc3AsIHJ0KTsKICB9CgogIGFzc2VydChvcGFxdWUtPmxpbmsubmV4dCk7CiAgbGlzdF9kZWwoJm9wYXF1ZS0+bGluayk7Cn0KCnZvaWQKb3BhcXVlX2ZyZWVfcnQoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUsIEpTUnVudGltZSogcnQpIHsKICBvcGFxdWVfY2xlYXJfcnQob3BhcXVlLCBydCk7CgogIGlmKC0tb3BhcXVlLT5yZWZfY291bnQgPT0gMCkKICAgIGpzX2ZyZWVfcnQocnQsIG9wYXF1ZSk7Cn0KCnZvaWQKb3BhcXVlX2NsZWFyKHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlLCBKU0NvbnRleHQqIGN0eCkgewogIG9wYXF1ZV9jbGVhcl9ydChvcGFxdWUsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnZvaWQKb3BhcXVlX2ZyZWUoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUsIEpTQ29udGV4dCogY3R4KSB7CiAgb3BhcXVlX2NsZWFyKG9wYXF1ZSwgY3R4KTsKCiAgaWYoLS1vcGFxdWUtPnJlZl9jb3VudCA9PSAwKQoKICAgIGpzX2ZyZWUoY3R4LCBvcGFxdWUpOwp9Cgp2b2lkCndzX2NsZWFyX3J0KE1pbm5ldFdlYnNvY2tldCogd3MsIEpTUnVudGltZSogcnQpIHsKICBzdHJ1Y3QgbHdzKiB3c2kgPSB3cy0+bHdzaTsKCiAgd3MtPmx3c2kgPSAwOwoKICBpZih3c2kpIHsKICAgIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICAgIGlmKChvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSkpIHsKICAgICAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgMCk7CiAgICAgIG9wYXF1ZV9mcmVlX3J0KG9wYXF1ZSwgcnQpOwoKICAgICAgLyogIGlmKHN0YXR1cyA8IENMT1NJTkcpCiAgICAgICAgICBsd3NfY2xvc2VfZnJlZV93c2kod3NpLCBMV1NfQ0xPU0VfU1RBVFVTX05PU1RBVFVTLCBfX2Z1bmNfXyk7Ki8KICAgIH0KICB9CgogCiAgICByaW5nYnVmZmVyX3plcm8oJndzLT5zZW5kcSk7CiB9Cgp2b2lkCndzX2NsZWFyKE1pbm5ldFdlYnNvY2tldCogd3MsIEpTQ29udGV4dCogY3R4KSB7CiAgd3NfY2xlYXJfcnQod3MsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnZvaWQKd3NfZnJlZV9ydChNaW5uZXRXZWJzb2NrZXQqIHdzLCBKU1J1bnRpbWUqIHJ0KSB7CiAgaWYoLS13cy0+cmVmX2NvdW50ID09IDApIHsKICAgIHdzX2NsZWFyX3J0KHdzLCBydCk7CiAgICBqc19mcmVlX3J0KHJ0LCB3cyk7CiAgfQp9Cgp2b2lkCndzX2ZyZWUoTWlubmV0V2Vic29ja2V0KiB3cywgSlNDb250ZXh0KiBjdHgpIHsKICBpZigtLXdzLT5yZWZfY291bnQgPT0gMCkgewogICAgd3NfY2xlYXIod3MsIGN0eCk7CiAgICBqc19mcmVlKGN0eCwgd3MpOwogIH0KfQoKTWlubmV0V2Vic29ja2V0Kgp3c19kdXAoTWlubmV0V2Vic29ja2V0KiB3cykgewogICsrd3MtPnJlZl9jb3VudDsKICByZXR1cm4gd3M7Cn0KCnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKb3BhcXVlX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEpKSkpIHsKICAgIG9wYXF1ZS0+c2VyaWFsID0gKyt3c19zZXJpYWw7CiAgICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CiAgICBvcGFxdWUtPnJlZl9jb3VudCA9IDE7CgogICAgbGlzdF9hZGQoJm9wYXF1ZS0+bGluaywgJm1pbm5ldF9zb2NrZXRzKTsKICB9CgogIHJldHVybiBvcGFxdWU7Cn0KCnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKbHdzX29wYXF1ZShzdHJ1Y3QgbHdzKiB3c2ksIEpTQ29udGV4dCogY3R4KSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CgogIGlmKChvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSkpCiAgICByZXR1cm4gb3BhcXVlOwoKICBhc3NlcnQoY3R4KTsKCiAgb3BhcXVlID0gb3BhcXVlX25ldyhjdHgpOwoKICBsd3Nfc2V0X29wYXF1ZV91c2VyX2RhdGEod3NpLCBvcGFxdWUpOwogIHJldHVybiBvcGFxdWU7Cn0KCi8qSlNWYWx1ZQptaW5uZXRfd3Nfb2JqZWN0KEpTQ29udGV4dCogY3R4LCBzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkgewogICAgSlNWYWx1ZSB3c19vYmo7CiAgICBpZigvL29wYXF1ZS0+b2JqCiAgICAgb3BhcXVlLT53cykgewogICAgICB3c19vYmogPSBKU19EdXBWYWx1ZShjdHgsIEpTX01LUFRSKEpTX1RBR19PQkpFQ1QsIG9wYXF1ZS0+b2JqKSk7CiAgICAgICAgLy9pZighKG9wYXF1ZS0+d3MgPSBtaW5uZXRfd3NfZGF0YTIoY3R4LCB3c19vYmopKSkgcmV0dXJuIEpTX0VYQ0VQVElPTjsKICAgICAgb3BhcXVlLT53cy0+cmVmX2NvdW50Kys7CiAgICB9IGVsc2UgewogICAgICB3c19vYmogPSBtaW5uZXRfd3NfZnJvbXdzaShjdHgsIHdzaSk7CiAgICAgIC8vb3BhcXVlLT5vYmogPSBKU19WQUxVRV9HRVRfT0JKKHdzX29iaik7CiAgICAgIG9wYXF1ZS0+d3MgPSBtaW5uZXRfd3NfZGF0YSh3c19vYmopOwogICAgfQogICAgcmV0dXJuIHdzX29iajsKICB9CgogIHJldHVybiBtaW5uZXRfd3NfbmV3KGN0eCwgd3NpKTsKfSovCgpKU1ZhbHVlCm1pbm5ldF93c193cmFwKEpTQ29udGV4dCogY3R4LCBNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgbWlubmV0X3dzX3Byb3RvLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwoKICBpZihKU19Jc0V4Y2VwdGlvbihyZXQpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgSlNfU2V0T3BhcXVlKHJldCwgd3NfZHVwKHdzKSk7CgogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKbWlubmV0X3dzX2Zyb213c2koSlNDb250ZXh0KiBjdHgsIHN0cnVjdCBsd3MqIHdzaSkgewogIE1pbm5ldFdlYnNvY2tldCogd3M7CiAgLy8gc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CiAgSlNWYWx1ZSByZXQ7CgogIGlmKCEod3MgPSB3c19uZXcod3NpLCBjdHgpKSkKICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIHJldCA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jbGFzc19pZCk7CgogIGlmKEpTX0lzRXhjZXB0aW9uKHJldCkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBKU19TZXRPcGFxdWUocmV0LCB3cyk7CgogIC8qICBpZigob3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCkpKSB7CiAgICAgIGFzc2VydChvcGFxdWUtPndzID09IDAgfHwgb3BhcXVlLT53cyA9PSB3cyk7CgogICAgICAvL29wYXF1ZS0+b2JqID0gSlNfVkFMVUVfR0VUX09CSihyZXQpOwogICAgICBvcGFxdWUtPndzID0gd3M7CiAgICAgIG9wYXF1ZS0+aGFuZGxlciA9IEpTX05VTEw7CiAgICB9Ki8KCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKbWlubmV0X3dzX3NlbmQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBNaW5uZXRXZWJzb2NrZXQqIHdzOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKHdzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIC8vIGFzc2VydCh3cy0+bHdzaSk7CiAgaWYod3MtPmx3c2kgPT0gMCB8fCAoKHNpemVfdCl3cy0+bHdzaSkgPj4gNCA9PSAweGZmZmZmZmZmZmZmZmZmZikKICAgIHJldHVybiByZXQ7CgogIGlmKGFyZ2MgPT0gMCkKICAgIHJldHVybiBKU19UaHJvd1R5cGVFcnJvcihjdHgsICJhcmd1bWVudCAxIGV4cGVjdGluZyBTdHJpbmcvQXJyYXlCdWZmZXIiKTsKICB7CiAgICBKU0J1ZmZlciBidWZmZXIgPSBqc19pbnB1dF9hcmdzKGN0eCwgYXJnYywgYXJndik7CgogICAgcmluZ2J1ZmZlcl9pbnNlcnQoJndzLT5zZW5kcSwgJmJ1ZmZlciwgMSk7CgogICAgbHdzX2NhbGxiYWNrX29uX3dyaXRhYmxlKHdzLT5sd3NpKTsKICB9CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF93c19yZXNwb25kKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpIHsKICBNaW5uZXRXZWJzb2NrZXQqIHdzOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKHdzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIE1pbm5ldEJ1ZmZlciBoZWFkZXIgPSBCVUZGRVJfMCgpOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgUkVTUE9OU0VfQk9EWTogewogICAgICBjb25zdCBjaGFyKiBtc2cgPSAwOwogICAgICB1aW50MzJfdCBzdGF0dXMgPSAwOwoKICAgICAgSlNfVG9VaW50MzIoY3R4LCAmc3RhdHVzLCBhcmd2WzBdKTsKICAgICAgaWYoYXJnYyA+PSAyKQogICAgICAgIG1zZyA9IEpTX1RvQ1N0cmluZyhjdHgsIGFyZ3ZbMV0pOwogICAgICBsd3NfcmV0dXJuX2h0dHBfc3RhdHVzKHdzLT5sd3NpLCBzdGF0dXMsIG1zZyk7CiAgICAgIGlmKG1zZykKICAgICAgICBKU19GcmVlQ1N0cmluZyhjdHgsIG1zZyk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVNQT05TRV9SRURJUkVDVDogewogICAgICBjb25zdCBjaGFyKiBtc2cgPSAwOwogICAgICBzaXplX3QgbGVuID0gMDsKICAgICAgdWludDMyX3Qgc3RhdHVzID0gMDsKICAgICAgSlNfVG9VaW50MzIoY3R4LCAmc3RhdHVzLCBhcmd2WzBdKTsKCiAgICAgIGlmKGFyZ2MgPj0gMikKICAgICAgICBtc2cgPSBKU19Ub0NTdHJpbmdMZW4oY3R4LCAmbGVuLCBhcmd2WzFdKTsKICAgICAgaWYobHdzX2h0dHBfcmVkaXJlY3Qod3MtPmx3c2ksIHN0YXR1cywgKHVuc2lnbmVkIGNoYXIqKW1zZywgbGVuLCAmaGVhZGVyLndyaXRlLCBoZWFkZXIuZW5kKSA8IDApCiAgICAgICAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCAtMSk7CiAgICAgIGlmKG1zZykKICAgICAgICBKU19GcmVlQ1N0cmluZyhjdHgsIG1zZyk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVNQT05TRV9IRUFERVI6IHsKICAgICAgc2l6ZV90IG5hbWVsZW47CiAgICAgIGNvbnN0IGNoYXIqIG5hbWVzdHIgPSBKU19Ub0NTdHJpbmdMZW4oY3R4LCAmbmFtZWxlbiwgYXJndlswXSk7CiAgICAgIGNoYXIqIG5hbWUgPSBqc19tYWxsb2MoY3R4LCBuYW1lbGVuICsgMik7CiAgICAgIHNpemVfdCBsZW47CiAgICAgIGNvbnN0IGNoYXIqIHZhbHVlID0gSlNfVG9DU3RyaW5nTGVuKGN0eCwgJmxlbiwgYXJndlsxXSk7CiAgICAgIG1lbWNweShuYW1lLCBuYW1lc3RyLCBuYW1lbGVuKTsKICAgICAgbmFtZVtuYW1lbGVuXSA9ICc6JzsKICAgICAgbmFtZVtuYW1lbGVuICsgMV0gPSAnXDAnOwoKICAgICAgaWYobHdzX2FkZF9odHRwX2hlYWRlcl9ieV9uYW1lKHdzLT5sd3NpLCAoY29uc3QgdWludDhfdCopbmFtZSwgKGNvbnN0IHVpbnQ4X3QqKXZhbHVlLCBsZW4sICZoZWFkZXIud3JpdGUsIGhlYWRlci5lbmQpIDwgMCkKICAgICAgICByZXQgPSBKU19OZXdJbnQzMihjdHgsIC0xKTsKCiAgICAgIGpzX2ZyZWUoY3R4LCBuYW1lKTsKICAgICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBuYW1lc3RyKTsKICAgICAgSlNfRnJlZUNTdHJpbmcoY3R4LCB2YWx1ZSk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKbWlubmV0X3dzX3BpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBNaW5uZXRXZWJzb2NrZXQqIHdzOwogIHVpbnQ4X3QqIGRhdGE7CiAgc2l6ZV90IGxlbjsKCiAgaWYoISh3cyA9IG1pbm5ldF93c19kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBkYXRhID0gSlNfR2V0QXJyYXlCdWZmZXIoY3R4LCAmbGVuLCBhcmd2WzBdKTsKICBpZihkYXRhKSB7CiAgICB1aW50OF90IGJ1ZmZlcltsZW4gKyBMV1NfUFJFXTsKICAgIG1lbWNweSgmYnVmZmVyW0xXU19QUkVdLCBkYXRhLCBsZW4pOwoKICAgIGludCBtID0gbHdzX3dyaXRlKHdzLT5sd3NpLCAmYnVmZmVyW0xXU19QUkVdLCBsZW4sIExXU19XUklURV9QSU5HKTsKICAgIGlmKChzaXplX3QpbSA8IGxlbikgewogICAgICAvLyBTZW5kaW5nIHBpbmcgZmFpbGVkCiAgICAgIHJldHVybiBKU19FWENFUFRJT047CiAgICB9CiAgfSBlbHNlIHsKICAgIHVpbnQ4X3QgYnVmZmVyW0xXU19QUkVdOwogICAgbHdzX3dyaXRlKHdzLT5sd3NpLCAmYnVmZmVyW0xXU19QUkVdLCAwLCBMV1NfV1JJVEVfUElORyk7CiAgfQogIHJldHVybiBKU19VTkRFRklORUQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF93c19wb25nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgTWlubmV0V2Vic29ja2V0KiB3czsKICB1aW50OF90KiBkYXRhOwogIHNpemVfdCBsZW47CgogIGlmKCEod3MgPSBtaW5uZXRfd3NfZGF0YTIoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgZGF0YSA9IEpTX0dldEFycmF5QnVmZmVyKGN0eCwgJmxlbiwgYXJndlswXSk7CiAgaWYoZGF0YSkgewogICAgdWludDhfdCBidWZmZXJbbGVuICsgTFdTX1BSRV07CiAgICBtZW1jcHkoJmJ1ZmZlcltMV1NfUFJFXSwgZGF0YSwgbGVuKTsKCiAgICBpbnQgbSA9IGx3c193cml0ZSh3cy0+bHdzaSwgJmJ1ZmZlcltMV1NfUFJFXSwgbGVuLCBMV1NfV1JJVEVfUE9ORyk7CiAgICBpZigoc2l6ZV90KW0gPCBsZW4pIHsKICAgICAgLy8gU2VuZGluZyBwb25nIGZhaWxlZAogICAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwogICAgfQogIH0gZWxzZSB7CiAgICB1aW50OF90IGJ1ZmZlcltMV1NfUFJFXTsKICAgIGx3c193cml0ZSh3cy0+bHdzaSwgJmJ1ZmZlcltMV1NfUFJFXSwgMCwgTFdTX1dSSVRFX1BPTkcpOwogIH0KICByZXR1cm4gSlNfVU5ERUZJTkVEOwp9CgpzdGF0aWMgSlNWYWx1ZQptaW5uZXRfd3NfY2xvc2UoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBNaW5uZXRXZWJzb2NrZXQqIHdzOwogIGNvbnN0IGNoYXIqIHJlYXNvbiA9IDA7CiAgc2l6ZV90IHJsZW4gPSAwOwoKICBpZighKHdzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIGlmKHdzLT5sd3NpKSB7CiAgICBpbnQgb3B0aW5kID0gMDsKICAgIGludDMyX3Qgc3RhdHVzID0gTFdTX0NMT1NFX1NUQVRVU19OT1JNQUw7CiAgICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgICB3aGlsZShvcHRpbmQgPCBhcmdjKSB7CiAgICAgIGlmKEpTX0lzTnVtYmVyKGFyZ3Zbb3B0aW5kXSkgfHwgb3B0aW5kICsgMSA8IGFyZ2MpIHsKICAgICAgICBKU19Ub0ludDMyKGN0eCwgJnN0YXR1cywgYXJndltvcHRpbmRdKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZWFzb24gPSBKU19Ub0NTdHJpbmdMZW4oY3R4LCAmcmxlbiwgYXJndltvcHRpbmRdKTsKICAgICAgICBpZihybGVuID4gMTI0KQogICAgICAgICAgcmxlbiA9IDEyNDsKICAgICAgfQogICAgICBvcHRpbmQrKzsKICAgIH0KCiAgICBvcGFxdWUgPSB3c19vcGFxdWUod3MpOwogICAgYXNzZXJ0KG9wYXF1ZSk7CgogICAgLy8gcHJpbnRmKCJtaW5uZXRfd3NfY2xvc2UgZmQ9JWQgcmVhc29uPSVzXG4iLCBsd3NfZ2V0X3NvY2tldF9mZCh3cy0+bHdzaSksIHJlYXNvbik7CiAgICBpZihvcGFxdWUtPnN0YXR1cyA8IENMT1NJTkcpIHsKICAgICAgY29uc3Qgc3RydWN0IGx3c19wcm90b2NvbHMqIHByb3RvY29sID0gbHdzX2dldF9wcm90b2NvbCh3cy0+bHdzaSk7CgogICAgICBpZighc3RybmNtcChwcm90b2NvbC0+bmFtZSwgIndzIiwgMikpCiAgICAgICAgbHdzX2Nsb3NlX3JlYXNvbih3cy0+bHdzaSwgc3RhdHVzLCAodWludDhfdCopcmVhc29uLCBybGVuKTsKICAgIH0KCiAgICBvcGFxdWUtPnN0YXR1cyA9IENMT1NFRDsKCiAgICBsd3NfY2xvc2VfZnJlZV93c2kod3MtPmx3c2ksIHN0YXR1cywgIm1pbm5ldF93c19jbG9zZSIpOwogICAgd3MtPmx3c2kgPSAwOwoKICAgIHJldHVybiBKU19UUlVFOwogIH0KCiAgcmV0dXJuIEpTX0ZBTFNFOwp9CgpzdGF0aWMgSlNWYWx1ZQptaW5uZXRfd3NfZ2V0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBtYWdpYykgewogIE1pbm5ldFdlYnNvY2tldCogd3M7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEod3MgPSBtaW5uZXRfd3NfZGF0YSh0aGlzX3ZhbCkpKQogICAgcmV0dXJuIEpTX1VOREVGSU5FRDsKCiAgaWYoIXdzLT5sd3NpKQogICAgcmV0dXJuIEpTX05VTEw7CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBXRUJTT0NLRVRfRkQ6IHsKICAgICAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCBsd3NfZ2V0X3NvY2tldF9mZChsd3NfZ2V0X25ldHdvcmtfd3NpKHdzLT5sd3NpKSkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgV0VCU09DS0VUX0FERFJFU1M6IHsKICAgICAgc3RydWN0IHNvY2thZGRyX2luIGFkZHI7CiAgICAgIHNvY2tsZW5fdCBhZGRybGVuID0gc2l6ZW9mKGFkZHIpOwogICAgICBpbnQgZmQgPSBsd3NfZ2V0X3NvY2tldF9mZChsd3NfZ2V0X25ldHdvcmtfd3NpKHdzLT5sd3NpKSk7CgogICAgICBpZihnZXRwZWVybmFtZShmZCwgKHN0cnVjdCBzb2NrYWRkciopJmFkZHIsICZhZGRybGVuKSAhPSAtMSkgewogICAgICAgIGNoYXIgYWRkcmVzc1sxMDI0XTsKICAgICAgICBsd3NfZ2V0X3BlZXJfc2ltcGxlKHdzLT5sd3NpLCBhZGRyZXNzLCBzaXplb2YoYWRkcmVzcykpOwoKICAgICAgICByZXQgPSBKU19OZXdTdHJpbmcoY3R4LCBhZGRyZXNzKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgV0VCU09DS0VUX0ZBTUlMWToKICAgIGNhc2UgV0VCU09DS0VUX1BPUlQ6IHsKICAgICAgc3RydWN0IHNvY2thZGRyX2luIGFkZHI7CiAgICAgIHNvY2tsZW5fdCBhZGRybGVuID0gc2l6ZW9mKGFkZHIpOwogICAgICBpbnQgZmQgPSBsd3NfZ2V0X3NvY2tldF9mZChsd3NfZ2V0X25ldHdvcmtfd3NpKHdzLT5sd3NpKSk7CgogICAgICBpZihnZXRwZWVybmFtZShmZCwgKHN0cnVjdCBzb2NrYWRkciopJmFkZHIsICZhZGRybGVuKSAhPSAtMSkgewogICAgICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgbWFnaWMgPT0gMiA/IGFkZHIuc2luX2ZhbWlseSA6IG50b2hzKGFkZHIuc2luX3BvcnQpKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgV0VCU09DS0VUX1BFRVI6IHsKICAgICAgc3RydWN0IHNvY2thZGRyX2luIGFkZHI7CiAgICAgIHNvY2tsZW5fdCBhZGRybGVuID0gc2l6ZW9mKGFkZHIpOwogICAgICBpbnQgZmQgPSBsd3NfZ2V0X3NvY2tldF9mZChsd3NfZ2V0X25ldHdvcmtfd3NpKHdzLT5sd3NpKSk7CgogICAgICBpZihnZXRwZWVybmFtZShmZCwgKHN0cnVjdCBzb2NrYWRkciopJmFkZHIsICZhZGRybGVuKSAhPSAtMSkgewogICAgICAgIHJldCA9IEpTX05ld0FycmF5QnVmZmVyQ29weShjdHgsIChjb25zdCB1aW50OF90KikmYWRkciwgYWRkcmxlbik7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFdFQlNPQ0tFVF9TU0w6IHsKICAgICAgcmV0ID0gSlNfTmV3Qm9vbChjdHgsIGx3c19pc19zc2wobHdzX2dldF9uZXR3b3JrX3dzaSh3cy0+bHdzaSkpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFdFQlNPQ0tFVF9CSU5BUlk6IHsKICAgICAgcmV0ID0gSlNfTmV3Qm9vbChjdHgsIHdzX29wYXF1ZSh3cyktPmJpbmFyeSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBXRUJTT0NLRVRfUkVBRFlTVEFURTogewogICAgICByZXQgPSBKU19OZXdVaW50MzIoY3R4LCB3c19vcGFxdWUod3MpLT5zdGF0dXMpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgV0VCU09DS0VUX1BST1RPQ09MOiB7CiAgICAgIGNvbnN0IHN0cnVjdCBsd3NfcHJvdG9jb2xzKiBwcm90b2NvbDsKICAgICAgaWYoKHByb3RvY29sID0gbHdzX2dldF9wcm90b2NvbCh3cy0+bHdzaSkpKQogICAgICAgIHJldCA9IEpTX05ld1N0cmluZyhjdHgsIHByb3RvY29sLT5uYW1lKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgICAvKiBjYXNlIFdFQlNPQ0tFVF9SRVNFUlZFRF9CSVRTOiB7CiAgICAgICAgIHJldCA9IEpTX05ld1VpbnQzMihjdHgsIGx3c19nZXRfcmVzZXJ2ZWRfYml0cyh3cy0+bHdzaSkpOwogICAgICAgICBicmVhazsKICAgICAgIH0KICAgICAgIGNhc2UgV0VCU09DS0VUX0ZJTkFMX0ZSQUdNRU5UOiB7CiAgICAgICAgIHJldCA9IEpTX05ld0Jvb2woY3R4LCBsd3NfaXNfZmluYWxfZnJhZ21lbnQod3MtPmx3c2kpKTsKICAgICAgICAgYnJlYWs7CiAgICAgICB9CiAgICAgICBjYXNlIFdFQlNPQ0tFVF9GSVJTVF9GUkFHTUVOVDogewogICAgICAgICByZXQgPSBKU19OZXdCb29sKGN0eCwgbHdzX2lzX2ZpcnN0X2ZyYWdtZW50KHdzLT5sd3NpKSk7CiAgICAgICAgIGJyZWFrOwogICAgICAgfQogICAgICAgY2FzZSBXRUJTT0NLRVRfUEFSVElBTF9CVUZGRVJFRDogewogICAgICAgICByZXQgPSBKU19OZXdJbnQzMihjdHgsIGx3c19wYXJ0aWFsX2J1ZmZlcmVkKHdzLT5sd3NpKSk7CiAgICAgICAgIGJyZWFrOwogICAgICAgfSovCiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF93c19zZXQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgSlNWYWx1ZUNvbnN0IHZhbHVlLCBpbnQgbWFnaWMpIHsKICBNaW5uZXRXZWJzb2NrZXQqIHdzOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKHdzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIHN3aXRjaChtYWdpYykgewoKICAgIGNhc2UgV0VCU09DS0VUX0JJTkFSWTogewogICAgICB3c19vcGFxdWUod3MpLT5iaW5hcnkgPSBKU19Ub0Jvb2woY3R4LCB2YWx1ZSk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KICByZXR1cm4gcmV0Owp9CgpKU1ZhbHVlCm1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSBwcm90bywgb2JqOwogIE1pbm5ldFdlYnNvY2tldCogd3M7CgogIGlmKCEod3MgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKE1pbm5ldFdlYnNvY2tldCkpKSkKICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgcHJvdG8gPSBKU19EdXBWYWx1ZShjdHgsIG1pbm5ldF93c19wcm90byk7CgogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywgbWlubmV0X3dzX2NsYXNzX2lkKTsKICBKU19GcmVlVmFsdWUoY3R4LCBwcm90byk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKCiAgLyogaWYoYXJnYyA+IDApIHsKICAgICBpZihKU19Jc051bWJlcihhcmd2WzBdKSkgewogICAgICAgdWludDMyX3QgZmQ7CiAgICAgICBKU19Ub1VpbnQzMihjdHgsICZmZCwgYXJndlswXSk7CiAgICAgICB3cy0+bHdzaSA9IGx3c19hZG9wdF9zb2NrZXQoc2VydmVyLT5jb250ZXh0Lmx3cywgZmQpOwogICAgIH0KICAgfSovCgogIEpTX1NldE9wYXF1ZShvYmosIHdzKTsKCiAgaWYod3MtPmx3c2kpIHsKICAgIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gb3BhcXVlX25ldyhjdHgpOwogICAgLy8gb3BhcXVlLT5vYmogPSBKU19WQUxVRV9HRVRfT0JKKEpTX0R1cFZhbHVlKGN0eCwgb2JqKSk7CiAgICBvcGFxdWUtPmhhbmRsZXIgPSBKU19OVUxMOwogICAgLypvcGFxdWUtPmhhbmRsZXJzWzBdID0gSlNfTlVMTDsKICAgIG9wYXF1ZS0+aGFuZGxlcnNbMV0gPSBKU19OVUxMOyovCiAgICBsd3Nfc2V0X29wYXF1ZV91c2VyX2RhdGEod3MtPmx3c2ksIG9wYXF1ZSk7CiAgfQoKICByZXR1cm4gb2JqOwoKZmFpbDoKICBqc19mcmVlKGN0eCwgd3MpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKc3RhdGljIHZvaWQKbWlubmV0X3dzX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCBKU1ZhbHVlIHZhbCkgewogIE1pbm5ldFdlYnNvY2tldCogd3M7CiAgaWYoKHdzID0gbWlubmV0X3dzX2RhdGEodmFsKSkpIHsKICAgIHdzX2ZyZWVfcnQod3MsIHJ0KTsKICB9Cn0KCkpTQ2xhc3NEZWYgbWlubmV0X3dzX2NsYXNzID0gewogICAgIk1pbm5ldFdlYnNvY2tldCIsCiAgICAuZmluYWxpemVyID0gbWlubmV0X3dzX2ZpbmFsaXplciwKfTsKCmNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF93c19wcm90b19mdW5jc1tdID0gewogICAgSlNfQ0ZVTkNfREVGKCJzZW5kIiwgMSwgbWlubmV0X3dzX3NlbmQpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJyZXNwb25kIiwgMSwgbWlubmV0X3dzX3Jlc3BvbmQsIFJFU1BPTlNFX0JPRFkpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJyZWRpcmVjdCIsIDIsIG1pbm5ldF93c19yZXNwb25kLCBSRVNQT05TRV9SRURJUkVDVCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImhlYWRlciIsIDIsIG1pbm5ldF93c19yZXNwb25kLCBSRVNQT05TRV9IRUFERVIpLAogICAgSlNfQ0ZVTkNfREVGKCJwaW5nIiwgMSwgbWlubmV0X3dzX3BpbmcpLAogICAgSlNfQ0ZVTkNfREVGKCJwb25nIiwgMSwgbWlubmV0X3dzX3BvbmcpLAogICAgSlNfQ0ZVTkNfREVGKCJjbG9zZSIsIDEsIG1pbm5ldF93c19jbG9zZSksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigicHJvdG9jb2wiLCBtaW5uZXRfd3NfZ2V0LCAwLCBXRUJTT0NLRVRfUFJPVE9DT0wsIDApLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImZkIiwgbWlubmV0X3dzX2dldCwgMCwgV0VCU09DS0VUX0ZELCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImFkZHJlc3MiLCBtaW5uZXRfd3NfZ2V0LCAwLCBXRUJTT0NLRVRfQUREUkVTUywgMCksCiAgICBKU19BTElBU19ERUYoInJlbW90ZUFkZHJlc3MiLCAiYWRkcmVzcyIpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImZhbWlseSIsIG1pbm5ldF93c19nZXQsIDAsIFdFQlNPQ0tFVF9GQU1JTFksIDApLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoInBvcnQiLCBtaW5uZXRfd3NfZ2V0LCAwLCBXRUJTT0NLRVRfUE9SVCwgMCksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigicGVlciIsIG1pbm5ldF93c19nZXQsIDAsIFdFQlNPQ0tFVF9QRUVSLCAwKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJzc2wiLCBtaW5uZXRfd3NfZ2V0LCAwLCBXRUJTT0NLRVRfU1NMLCAwKSwKICAgIEpTX0FMSUFTX0RFRigidGxzIiwgInNzbCIpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImJpbmFyeSIsIG1pbm5ldF93c19nZXQsIG1pbm5ldF93c19zZXQsIFdFQlNPQ0tFVF9CSU5BUlksIDApLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoInJlYWR5U3RhdGUiLCBtaW5uZXRfd3NfZ2V0LCAwLCBXRUJTT0NLRVRfUkVBRFlTVEFURSwgMCksCiAgICAvKkpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJyZXNlcnZlZEJpdHMiLCBtaW5uZXRfd3NfZ2V0LCAwLCBXRUJTT0NLRVRfUkVTRVJWRURfQklUUywgMCksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigiZmlyc3RGcmFnbWVudCIsIG1pbm5ldF93c19nZXQsIDAsIFdFQlNPQ0tFVF9GSVJTVF9GUkFHTUVOVCwgMCksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigiZmluYWxGcmFnbWVudCIsIG1pbm5ldF93c19nZXQsIDAsIFdFQlNPQ0tFVF9GSU5BTF9GUkFHTUVOVCwgMCksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigicGFydGlhbEJ1ZmZlcmVkIiwgbWlubmV0X3dzX2dldCwgMCwgV0VCU09DS0VUX1BBUlRJQUxfQlVGRkVSRUQsIDApLCovCiAgICBKU19BTElBU19ERUYoInJlbW90ZSIsICJwZWVyIiksCiAgICBKU19QUk9QX1NUUklOR19ERUYoIltTeW1ib2wudG9TdHJpbmdUYWddIiwgIk1pbm5ldFdlYnNvY2tldCIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJDT05ORUNUSU5HIiwgMCwgSlNfUFJPUF9DT05GSUdVUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIk9QRU4iLCAxLCBKU19QUk9QX0NPTkZJR1VSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQ0xPU0lORyIsIDIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJDTE9TRUQiLCAzLCBKU19QUk9QX0NPTkZJR1VSQUJMRSksCn07Cgpjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzW10gPSB7CiAgICBKU19QUk9QX0lOVDMyX0RFRigiQ09OTkVDVElORyIsIDAsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiT1BFTiIsIDEsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQ0xPU0lORyIsIDIsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQ0xPU0VEIiwgMywgSlNfUFJPUF9FTlVNRVJBQkxFKSwKfTsKCmNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF93c19wcm90b19kZWZzW10gPSB7CiAgICBKU19QUk9QX0lOVDMyX0RFRigiQ0xPU0VfU1RBVFVTX05PUk1BTCIsIExXU19DTE9TRV9TVEFUVVNfTk9STUFMLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJDTE9TRV9TVEFUVVNfR09JTkdBV0FZIiwgTFdTX0NMT1NFX1NUQVRVU19HT0lOR0FXQVksIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkNMT1NFX1NUQVRVU19QUk9UT0NPTF9FUlIiLCBMV1NfQ0xPU0VfU1RBVFVTX1BST1RPQ09MX0VSUiwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQ0xPU0VfU1RBVFVTX1VOQUNDRVBUQUJMRV9PUENPREUiLCBMV1NfQ0xPU0VfU1RBVFVTX1VOQUNDRVBUQUJMRV9PUENPREUsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkNMT1NFX1NUQVRVU19SRVNFUlZFRCIsIExXU19DTE9TRV9TVEFUVVNfUkVTRVJWRUQsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkNMT1NFX1NUQVRVU19OT19TVEFUVVMiLCBMV1NfQ0xPU0VfU1RBVFVTX05PX1NUQVRVUywgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQ0xPU0VfU1RBVFVTX0FCTk9STUFMX0NMT1NFIiwgTFdTX0NMT1NFX1NUQVRVU19BQk5PUk1BTF9DTE9TRSwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQ0xPU0VfU1RBVFVTX0lOVkFMSURfUEFZTE9BRCIsIExXU19DTE9TRV9TVEFUVVNfSU5WQUxJRF9QQVlMT0FELCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJDTE9TRV9TVEFUVVNfUE9MSUNZX1ZJT0xBVElPTiIsIExXU19DTE9TRV9TVEFUVVNfUE9MSUNZX1ZJT0xBVElPTiwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQ0xPU0VfU1RBVFVTX01FU1NBR0VfVE9PX0xBUkdFIiwgTFdTX0NMT1NFX1NUQVRVU19NRVNTQUdFX1RPT19MQVJHRSwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQ0xPU0VfU1RBVFVTX0VYVEVOU0lPTl9SRVFVSVJFRCIsIExXU19DTE9TRV9TVEFUVVNfRVhURU5TSU9OX1JFUVVJUkVELCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJDTE9TRV9TVEFUVVNfVU5FWFBFQ1RFRF9DT05ESVRJT04iLCBMV1NfQ0xPU0VfU1RBVFVTX1VORVhQRUNURURfQ09ORElUSU9OLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJDTE9TRV9TVEFUVVNfVExTX0ZBSUxVUkUiLCBMV1NfQ0xPU0VfU1RBVFVTX1RMU19GQUlMVVJFLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19DT05USU5VRSIsIEhUVFBfU1RBVFVTX0NPTlRJTlVFLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19PSyIsIEhUVFBfU1RBVFVTX09LLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19OT19DT05URU5UIiwgSFRUUF9TVEFUVVNfTk9fQ09OVEVOVCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfUEFSVElBTF9DT05URU5UIiwgSFRUUF9TVEFUVVNfUEFSVElBTF9DT05URU5ULCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19NT1ZFRF9QRVJNQU5FTlRMWSIsIEhUVFBfU1RBVFVTX01PVkVEX1BFUk1BTkVOVExZLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19GT1VORCIsIEhUVFBfU1RBVFVTX0ZPVU5ELCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19TRUVfT1RIRVIiLCBIVFRQX1NUQVRVU19TRUVfT1RIRVIsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX05PVF9NT0RJRklFRCIsIEhUVFBfU1RBVFVTX05PVF9NT0RJRklFRCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfQkFEX1JFUVVFU1QiLCBIVFRQX1NUQVRVU19CQURfUkVRVUVTVCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfVU5BVVRIT1JJWkVEIiwgSFRUUF9TVEFUVVNfVU5BVVRIT1JJWkVELCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19QQVlNRU5UX1JFUVVJUkVEIiwgSFRUUF9TVEFUVVNfUEFZTUVOVF9SRVFVSVJFRCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfRk9SQklEREVOIiwgSFRUUF9TVEFUVVNfRk9SQklEREVOLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19OT1RfRk9VTkQiLCBIVFRQX1NUQVRVU19OT1RfRk9VTkQsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX01FVEhPRF9OT1RfQUxMT1dFRCIsIEhUVFBfU1RBVFVTX01FVEhPRF9OT1RfQUxMT1dFRCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfTk9UX0FDQ0VQVEFCTEUiLCBIVFRQX1NUQVRVU19OT1RfQUNDRVBUQUJMRSwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfUFJPWFlfQVVUSF9SRVFVSVJFRCIsIEhUVFBfU1RBVFVTX1BST1hZX0FVVEhfUkVRVUlSRUQsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX1JFUVVFU1RfVElNRU9VVCIsIEhUVFBfU1RBVFVTX1JFUVVFU1RfVElNRU9VVCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfQ09ORkxJQ1QiLCBIVFRQX1NUQVRVU19DT05GTElDVCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfR09ORSIsIEhUVFBfU1RBVFVTX0dPTkUsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX0xFTkdUSF9SRVFVSVJFRCIsIEhUVFBfU1RBVFVTX0xFTkdUSF9SRVFVSVJFRCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfUFJFQ09ORElUSU9OX0ZBSUxFRCIsIEhUVFBfU1RBVFVTX1BSRUNPTkRJVElPTl9GQUlMRUQsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX1JFUV9FTlRJVFlfVE9PX0xBUkdFIiwgSFRUUF9TVEFUVVNfUkVRX0VOVElUWV9UT09fTEFSR0UsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX1JFUV9VUklfVE9PX0xPTkciLCBIVFRQX1NUQVRVU19SRVFfVVJJX1RPT19MT05HLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19VTlNVUFBPUlRFRF9NRURJQV9UWVBFIiwgSFRUUF9TVEFUVVNfVU5TVVBQT1JURURfTUVESUFfVFlQRSwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfUkVRX1JBTkdFX05PVF9TQVRJU0ZJQUJMRSIsIEhUVFBfU1RBVFVTX1JFUV9SQU5HRV9OT1RfU0FUSVNGSUFCTEUsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX0VYUEVDVEFUSU9OX0ZBSUxFRCIsIEhUVFBfU1RBVFVTX0VYUEVDVEFUSU9OX0ZBSUxFRCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfSU5URVJOQUxfU0VSVkVSX0VSUk9SIiwgSFRUUF9TVEFUVVNfSU5URVJOQUxfU0VSVkVSX0VSUk9SLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19OT1RfSU1QTEVNRU5URUQiLCBIVFRQX1NUQVRVU19OT1RfSU1QTEVNRU5URUQsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX0JBRF9HQVRFV0FZIiwgSFRUUF9TVEFUVVNfQkFEX0dBVEVXQVksIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX1NFUlZJQ0VfVU5BVkFJTEFCTEUiLCBIVFRQX1NUQVRVU19TRVJWSUNFX1VOQVZBSUxBQkxFLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19HQVRFV0FZX1RJTUVPVVQiLCBIVFRQX1NUQVRVU19HQVRFV0FZX1RJTUVPVVQsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX0hUVFBfVkVSU0lPTl9OT1RfU1VQUE9SVEVEIiwgSFRUUF9TVEFUVVNfSFRUUF9WRVJTSU9OX05PVF9TVVBQT1JURUQsIDApLAp9OwoKY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplID0gY291bnRvZihtaW5uZXRfd3NfcHJvdG9fZnVuY3MpOwpjb25zdCBzaXplX3QgbWlubmV0X3dzX3N0YXRpY19mdW5jc19zaXplID0gY291bnRvZihtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzKTsKY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19kZWZzX3NpemUgPSBjb3VudG9mKG1pbm5ldF93c19wcm90b19kZWZzKTsKAAAAAAAAAAAtUwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPhgAAAAAAAA+GAAAAAAAAAAAAAAAAPC/"
				],
				[
					831,
					1,
					"paste",
					null,
					"AgAAAPgXAAAAAAAABBgAAAAAAAAAAAAABBgAAAAAAAAEGAAAAAAAAAgAAABKU0J1ZmZlcg",
					"AQAAAAAAAAABAAAA+BcAAAAAAAAAGAAAAAAAAAAAAAAAAPC/"
				],
				[
					880,
					1,
					"cut",
					null,
					"AQAAAPQXAAAAAAAA9BcAAAAAAAA6AAAAICAgIE1pbm5ldEJ1ZmZlciBidWZmZXIgPSBqc19pbnB1dF9hcmdzKGN0eCwgYXJnYywgYXJndik7Cg",
					"AQAAAAAAAAABAAAA9BcAAAAAAAAuGAAAAAAAAAAAAAAAAPC/"
				],
				[
					881,
					2,
					"paste",
					null,
					"AgAAAPQXAAAAAAAALhgAAAAAAAAAAAAALhgAAAAAAABoGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9BcAAAAAAAD0FwAAAAAAAAAAAAAAAPC/"
				],
				[
					914,
					1,
					"insert",
					{
						"characters": "S"
					},
					"AgAAAPgXAAAAAAAA+RcAAAAAAAAAAAAA+RcAAAAAAAD5FwAAAAAAAAwAAABNaW5uZXRCdWZmZXI",
					"AQAAAAAAAAABAAAA+BcAAAAAAAAEGAAAAAAAAAAAAAAAAPC/"
				],
				[
					915,
					1,
					"left_delete",
					null,
					"AQAAAPgXAAAAAAAA+BcAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAA+RcAAAAAAAD5FwAAAAAAAAAAAAAAAPC/"
				],
				[
					916,
					1,
					"insert",
					{
						"characters": "HS"
					},
					"AgAAAPgXAAAAAAAA+RcAAAAAAAAAAAAA+RcAAAAAAAD6FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+BcAAAAAAAD4FwAAAAAAAAAAAAAAAPC/"
				],
				[
					917,
					2,
					"left_delete",
					null,
					"AgAAAPkXAAAAAAAA+RcAAAAAAAABAAAAU/gXAAAAAAAA+BcAAAAAAAABAAAASA",
					"AQAAAAAAAAABAAAA+hcAAAAAAAD6FwAAAAAAAAAAAAAAAPC/"
				],
				[
					918,
					1,
					"insert",
					{
						"characters": "JSBuffer"
					},
					"CAAAAPgXAAAAAAAA+RcAAAAAAAAAAAAA+RcAAAAAAAD6FwAAAAAAAAAAAAD6FwAAAAAAAPsXAAAAAAAAAAAAAPsXAAAAAAAA/BcAAAAAAAAAAAAA/BcAAAAAAAD9FwAAAAAAAAAAAAD9FwAAAAAAAP4XAAAAAAAAAAAAAP4XAAAAAAAA/xcAAAAAAAAAAAAA/xcAAAAAAAAAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+BcAAAAAAAD4FwAAAAAAAAAAAAAAAPC/"
				],
				[
					920,
					1,
					"right_delete",
					null,
					"AQAAACkYAAAAAAAAKRgAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAKRgAAAAAAAApGAAAAAAAAP///////+9/"
				],
				[
					921,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CAAAACkYAAAAAAAAKhgAAAAAAAAAAAAAKhgAAAAAAAAuGAAAAAAAAAAAAAAuGAAAAAAAAC8YAAAAAAAAAAAAAC8YAAAAAAAAMxgAAAAAAAAAAAAAKhgAAAAAAAAqGAAAAAAAAAQAAAAgICAgLxgAAAAAAAAwGAAAAAAAAAAAAAAwGAAAAAAAADQYAAAAAAAAAAAAACsYAAAAAAAAKxgAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAKRgAAAAAAAApGAAAAAAAAAAAAAAAAPC/"
				],
				[
					927,
					1,
					"insert",
					{
						"characters": "hns"
					},
					"BAAAAAEYAAAAAAAAAhgAAAAAAAAAAAAAAhgAAAAAAAACGAAAAAAAAAYAAABidWZmZXICGAAAAAAAAAMYAAAAAAAAAAAAAAMYAAAAAAAABBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARgAAAAAAAAHGAAAAAAAAAAAAAAAAPC/"
				],
				[
					928,
					3,
					"left_delete",
					null,
					"AwAAAAMYAAAAAAAAAxgAAAAAAAABAAAAcwIYAAAAAAAAAhgAAAAAAAABAAAAbgEYAAAAAAAAARgAAAAAAAABAAAAaA",
					"AQAAAAAAAAABAAAABBgAAAAAAAAEGAAAAAAAAAAAAAAAAPC/"
				],
				[
					929,
					1,
					"insert",
					{
						"characters": "jsbuf"
					},
					"BQAAAAEYAAAAAAAAAhgAAAAAAAAAAAAAAhgAAAAAAAADGAAAAAAAAAAAAAADGAAAAAAAAAQYAAAAAAAAAAAAAAQYAAAAAAAABRgAAAAAAAAAAAAABRgAAAAAAAAGGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARgAAAAAAAABGAAAAAAAAAAAAAAAAPC/"
				],
				[
					934,
					1,
					"paste",
					null,
					"AQAAAEgYAAAAAAAAVBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASBgAAAAAAABIGAAAAAAAAAAAAAAAAPC/"
				],
				[
					935,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFQYAAAAAAAAVhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVBgAAAAAAABUGAAAAAAAAAAAAAAAAPC/"
				],
				[
					936,
					1,
					"insert",
					{
						"characters": "jsbuf"
					},
					"BQAAAFUYAAAAAAAAVhgAAAAAAAAAAAAAVhgAAAAAAABXGAAAAAAAAAAAAABXGAAAAAAAAFgYAAAAAAAAAAAAAFgYAAAAAAAAWRgAAAAAAAAAAAAAWRgAAAAAAABaGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVRgAAAAAAABVGAAAAAAAAAAAAAAAAPC/"
				],
				[
					938,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFsYAAAAAAAAXBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWxgAAAAAAABbGAAAAAAAAAAAAAAAAPC/"
				],
				[
					939,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFwYAAAAAAAAXRgAAAAAAAAAAAAAXRgAAAAAAABlGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXBgAAAAAAABcGAAAAAAAAAAAAAAAAPC/"
				],
				[
					941,
					1,
					"left_delete",
					null,
					"AQAAAGUYAAAAAAAAZRgAAAAAAAAhAAAAIGpzX2lucHV0X2FyZ3MoY3R4LCBhcmdjLCBhcmd2KTsK",
					"AQAAAAAAAAABAAAAZRgAAAAAAACGGAAAAAAAAAAAAAAAAFpA"
				],
				[
					953,
					2,
					"left_delete",
					null,
					"AwAAACkYAAAAAAAAKRgAAAAAAAABAAAAClwYAAAAAAAAXBgAAAAAAAAIAAAAICAgICAgICAoGAAAAAAAACgYAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAKhgAAAAAAAAqGAAAAAAAAAAAAAAAAPC/"
				],
				[
					987,
					1,
					"insert",
					{
						"characters": "MinnetBytes"
					},
					"DAAAADEYAAAAAAAAMhgAAAAAAAAAAAAAMhgAAAAAAAAyGAAAAAAAAAwAAABNaW5uZXRCdWZmZXIyGAAAAAAAADMYAAAAAAAAAAAAADMYAAAAAAAANBgAAAAAAAAAAAAANBgAAAAAAAA1GAAAAAAAAAAAAAA1GAAAAAAAADYYAAAAAAAAAAAAADYYAAAAAAAANxgAAAAAAAAAAAAANxgAAAAAAAA4GAAAAAAAAAAAAAA4GAAAAAAAADkYAAAAAAAAAAAAADkYAAAAAAAAOhgAAAAAAAAAAAAAOhgAAAAAAAA7GAAAAAAAAAAAAAA7GAAAAAAAADwYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMRgAAAAAAAA9GAAAAAAAAAAAAAAAAPC/"
				],
				[
					1007,
					1,
					"paste",
					null,
					"AgAAAIoFAAAAAAAAlQUAAAAAAAAAAAAAlQUAAAAAAACVBQAAAAAAAAwAAABNaW5uZXRCdWZmZXI",
					"AQAAAAAAAAABAAAAigUAAAAAAACWBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1018,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAZgUAAAAAAAB2BQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet.c",
			"settings":
			{
				"buffer_size": 36506,
				"line_ending": "Unix"
			}
		},
		{
			"file": "minnet-websocket.h",
			"settings":
			{
				"buffer_size": 3096,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"cut",
					null,
					"AQAAADMBAAAAAAAAMwEAAAAAAAAUAAAAI2luY2x1ZGUgIm1pbm5ldC5oIgo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAQAAAAAAAEcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					2,
					"paste",
					null,
					"AgAAADMBAAAAAAAARwEAAAAAAAAAAAAARwEAAAAAAABbAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAQAAAAAAADMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "-ringbuffer"
					},
					"CwAAAFcBAAAAAAAAWAEAAAAAAAAAAAAAWAEAAAAAAABZAQAAAAAAAAAAAABZAQAAAAAAAFoBAAAAAAAAAAAAAFoBAAAAAAAAWwEAAAAAAAAAAAAAWwEAAAAAAABcAQAAAAAAAAAAAABcAQAAAAAAAF0BAAAAAAAAAAAAAF0BAAAAAAAAXgEAAAAAAAAAAAAAXgEAAAAAAABfAQAAAAAAAAAAAABfAQAAAAAAAGABAAAAAAAAAAAAAGABAAAAAAAAYQEAAAAAAAAAAAAAYQEAAAAAAABiAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXAQAAAAAAAFcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"paste",
					null,
					"AgAAAFACAAAAAAAAYAIAAAAAAAAAAAAAYAIAAAAAAABgAgAAAAAAABEAAAAgc3RydWN0IGxpc3RfaGVhZA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQAgAAAAAAAGECAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAGACAAAAAAAAYQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgAgAAAAAAAGACAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAGECAAAAAAAAYwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhAgAAAAAAAGECAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAGECAAAAAAAAYQIAAAAAAAABAAAAImECAAAAAAAAYQIAAAAAAAABAAAAIg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiAgAAAAAAAGICAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAB/CwAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yaW5nYnVmZmVyLmgiCiNpbmNsdWRlIDxxdWlja2pzLmg+CgpzdHJ1Y3QgbHdzOwpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhOwoKLyogY2xhc3MgV2ViU29ja2V0ICovCgp0eXBlZGVmIHN0cnVjdCBzb2NrZXQgewogIGludCByZWZfY291bnQ7CiAgc3RydWN0IGx3cyogbHdzaTsKICAvLyBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKIE1pbm5ldFJpbmdidWZmZXIqIHNlbmRxOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCnZvaWQgb3BhcXVlX2ZyZWVfcnQoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNSdW50aW1lKik7CnZvaWQgb3BhcXVlX2ZyZWUoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgbWlubmV0X3dzX25ldyhKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogd3NfbmV3KHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKdm9pZCB3c19jbGVhcl9ydChNaW5uZXRXZWJzb2NrZXQqLCBKU1J1bnRpbWUqKTsKdm9pZCB3c19jbGVhcihNaW5uZXRXZWJzb2NrZXQqLCBKU0NvbnRleHQqKTsKdm9pZCB3c19mcmVlX3J0KE1pbm5ldFdlYnNvY2tldCosIEpTUnVudGltZSopOwp2b2lkIHdzX2ZyZWUoTWlubmV0V2Vic29ja2V0KiwgSlNDb250ZXh0Kik7Ck1pbm5ldFdlYnNvY2tldCogd3NfZHVwKE1pbm5ldFdlYnNvY2tldCopOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIGx3c19vcGFxdWUoc3RydWN0IGx3cyosIEpTQ29udGV4dCopOwpKU1ZhbHVlIG1pbm5ldF93c193cmFwKEpTQ29udGV4dCosIE1pbm5ldFdlYnNvY2tldCopOwpKU1ZhbHVlIG1pbm5ldF93c19mcm9td3NpKEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3NfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIHN0cnVjdCBzb2NrZXQqIHdzOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcTsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcDsKICBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiBzZXNzOwogIEpTVmFsdWUgaGFuZGxlcjsKICBpbnQ2NF90IHNlcmlhbDsKICBNaW5uZXRTdGF0dXMgc3RhdHVzOwogIHN0cnVjdCBwb2xsZmQgcG9sbDsKICBpbnQgZXJyb3I7CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IGxpc3RfaGVhZCBsaW5rOwogIHN0cnVjdCBmb3JtX3BhcnNlciogZm9ybV9wYXJzZXI7Cn07CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBzZXNzaW9uX2RhdGEqCmx3c19zZXNzaW9uKHN0cnVjdCBsd3MqIHdzaSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZS0+c2VzczsKCiAgcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoTWlubmV0V2Vic29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSkgOiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBzZXNzaW9uX2RhdGEqCndzX3Nlc3Npb24oTWlubmV0V2Vic29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19zZXNzaW9uKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0Kgp3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKICByZXR1cm4gKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSA/IG9wYXF1ZS0+d3MgOiAwOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKbWlubmV0X3dzX2RhdGEoSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUob2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKbWlubmV0X3dzX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF93c19jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfV0VCU09DS0VUX0ggKi8KAAAAAAAAAACACwAAAAAAAAAAAAAAAAAAAAAAAIALAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhAgAAAAAAAGECAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "\nint"
					},
					"BQAAANQGAAAAAAAA1QYAAAAAAAAAAAAA1QYAAAAAAADXBgAAAAAAAAAAAADXBgAAAAAAANgGAAAAAAAAAAAAANgGAAAAAAAA2QYAAAAAAAAAAAAA2QYAAAAAAADaBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AYAAAAAAADUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": " ref_count;"
					},
					"CwAAANoGAAAAAAAA2wYAAAAAAAAAAAAA2wYAAAAAAADcBgAAAAAAAAAAAADcBgAAAAAAAN0GAAAAAAAAAAAAAN0GAAAAAAAA3gYAAAAAAAAAAAAA3gYAAAAAAADfBgAAAAAAAAAAAADfBgAAAAAAAOAGAAAAAAAAAAAAAOAGAAAAAAAA4QYAAAAAAAAAAAAA4QYAAAAAAADiBgAAAAAAAAAAAADiBgAAAAAAAOMGAAAAAAAAAAAAAOMGAAAAAAAA5AYAAAAAAAAAAAAA5AYAAAAAAADlBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2gYAAAAAAADaBgAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"cut",
					null,
					"AQAAANgCAAAAAAAA2AIAAAAAAAA8AAAAdm9pZCBvcGFxdWVfZnJlZShzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqLCBKU0NvbnRleHQqKTsK",
					"AQAAAAAAAAABAAAA2AIAAAAAAAAUAwAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					2,
					"paste",
					null,
					"AgAAANgCAAAAAAAAFAMAAAAAAAAAAAAAFAMAAAAAAABQAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AIAAAAAAADYAgAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "statioc"
					},
					"CAAAABQDAAAAAAAAFQMAAAAAAAAAAAAAFQMAAAAAAAAVAwAAAAAAAAQAAAB2b2lkFQMAAAAAAAAWAwAAAAAAAAAAAAAWAwAAAAAAABcDAAAAAAAAAAAAABcDAAAAAAAAGAMAAAAAAAAAAAAAGAMAAAAAAAAZAwAAAAAAAAAAAAAZAwAAAAAAABoDAAAAAAAAAAAAABoDAAAAAAAAGwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAMAAAAAAAAYAwAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					2,
					"left_delete",
					null,
					"AgAAABoDAAAAAAAAGgMAAAAAAAABAAAAYxkDAAAAAAAAGQMAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAGwMAAAAAAAAbAwAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAABkDAAAAAAAAGgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQMAAAAAAAAZAwAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " oinm"
					},
					"BQAAABoDAAAAAAAAGwMAAAAAAAAAAAAAGwMAAAAAAAAcAwAAAAAAAAAAAAAcAwAAAAAAAB0DAAAAAAAAAAAAAB0DAAAAAAAAHgMAAAAAAAAAAAAAHgMAAAAAAAAfAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgMAAAAAAAAaAwAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					4,
					"left_delete",
					null,
					"BAAAAB4DAAAAAAAAHgMAAAAAAAABAAAAbR0DAAAAAAAAHQMAAAAAAAABAAAAbhwDAAAAAAAAHAMAAAAAAAABAAAAaRsDAAAAAAAAGwMAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAHwMAAAAAAAAfAwAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "inline"
					},
					"BgAAABsDAAAAAAAAHAMAAAAAAAAAAAAAHAMAAAAAAAAdAwAAAAAAAAAAAAAdAwAAAAAAAB4DAAAAAAAAAAAAAB4DAAAAAAAAHwMAAAAAAAAAAAAAHwMAAAAAAAAgAwAAAAAAAAAAAAAgAwAAAAAAACEDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwMAAAAAAAAbAwAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " stru"
					},
					"BQAAACEDAAAAAAAAIgMAAAAAAAAAAAAAIgMAAAAAAAAjAwAAAAAAAAAAAAAjAwAAAAAAACQDAAAAAAAAAAAAACQDAAAAAAAAJQMAAAAAAAAAAAAAJQMAAAAAAAAmAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQMAAAAAAAAhAwAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "ct"
					},
					"AgAAACYDAAAAAAAAJwMAAAAAAAAAAAAAJwMAAAAAAAAoAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgMAAAAAAAAmAwAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " ws_"
					},
					"BAAAACgDAAAAAAAAKQMAAAAAAAAAAAAAKQMAAAAAAAAqAwAAAAAAAAAAAAAqAwAAAAAAACsDAAAAAAAAAAAAACsDAAAAAAAALAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAMAAAAAAAAoAwAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert_completion",
					{
						"completion": "wsi_opaque_user_data",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "wsi_opaque_user_data"
					},
					"AgAAACkDAAAAAAAAKQMAAAAAAAADAAAAd3NfKQMAAAAAAAA9AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAMAAAAAAAAsAwAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAD0DAAAAAAAAPgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQMAAAAAAAA9AwAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					2,
					"left_delete",
					null,
					"AgAAAEcDAAAAAAAARwMAAAAAAAADAAAAcmVlRgMAAAAAAABGAwAAAAAAAAEAAABm",
					"AQAAAAAAAAABAAAARwMAAAAAAABKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "dup"
					},
					"AwAAAEYDAAAAAAAARwMAAAAAAAAAAAAARwMAAAAAAABIAwAAAAAAAAAAAABIAwAAAAAAAEkDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgMAAAAAAABGAwAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " opaque)"
					},
					"CAAAAGYDAAAAAAAAZwMAAAAAAAAAAAAAZwMAAAAAAABoAwAAAAAAAAAAAABoAwAAAAAAAGkDAAAAAAAAAAAAAGkDAAAAAAAAagMAAAAAAAAAAAAAagMAAAAAAABrAwAAAAAAAAAAAABrAwAAAAAAAGwDAAAAAAAAAAAAAGwDAAAAAAAAbQMAAAAAAAAAAAAAbQMAAAAAAABuAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZgMAAAAAAABmAwAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAAG4DAAAAAAAAbwMAAAAAAAAAAAAAbwMAAAAAAABwAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgMAAAAAAABuAwAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "\nopaque->re"
					},
					"DAAAAHADAAAAAAAAcQMAAAAAAAAAAAAAcQMAAAAAAABzAwAAAAAAAAAAAABzAwAAAAAAAHQDAAAAAAAAAAAAAHQDAAAAAAAAdQMAAAAAAAAAAAAAdQMAAAAAAAB2AwAAAAAAAAAAAAB2AwAAAAAAAHcDAAAAAAAAAAAAAHcDAAAAAAAAeAMAAAAAAAAAAAAAeAMAAAAAAAB5AwAAAAAAAAAAAAB5AwAAAAAAAHoDAAAAAAAAAAAAAHoDAAAAAAAAewMAAAAAAAAAAAAAewMAAAAAAAB8AwAAAAAAAAAAAAB8AwAAAAAAAH0DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAMAAAAAAABwAwAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "f_count++;"
					},
					"CgAAAH0DAAAAAAAAfgMAAAAAAAAAAAAAfgMAAAAAAAB/AwAAAAAAAAAAAAB/AwAAAAAAAIADAAAAAAAAAAAAAIADAAAAAAAAgQMAAAAAAAAAAAAAgQMAAAAAAACCAwAAAAAAAAAAAACCAwAAAAAAAIMDAAAAAAAAAAAAAIMDAAAAAAAAhAMAAAAAAAAAAAAAhAMAAAAAAACFAwAAAAAAAAAAAACFAwAAAAAAAIYDAAAAAAAAAAAAAIYDAAAAAAAAhwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQMAAAAAAAB9AwAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "\nretuzr"
					},
					"CAAAAIcDAAAAAAAAiAMAAAAAAAAAAAAAiAMAAAAAAACKAwAAAAAAAAAAAACKAwAAAAAAAIsDAAAAAAAAAAAAAIsDAAAAAAAAjAMAAAAAAAAAAAAAjAMAAAAAAACNAwAAAAAAAAAAAACNAwAAAAAAAI4DAAAAAAAAAAAAAI4DAAAAAAAAjwMAAAAAAAAAAAAAjwMAAAAAAACQAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwMAAAAAAACHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					2,
					"left_delete",
					null,
					"AgAAAI8DAAAAAAAAjwMAAAAAAAABAAAAco4DAAAAAAAAjgMAAAAAAAABAAAAeg",
					"AQAAAAAAAAABAAAAkAMAAAAAAACQAwAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "rn"
					},
					"AgAAAI4DAAAAAAAAjwMAAAAAAAAAAAAAjwMAAAAAAACQAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgMAAAAAAACOAwAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": " opaque;"
					},
					"CAAAAJADAAAAAAAAkQMAAAAAAAAAAAAAkQMAAAAAAACSAwAAAAAAAAAAAACSAwAAAAAAAJMDAAAAAAAAAAAAAJMDAAAAAAAAlAMAAAAAAAAAAAAAlAMAAAAAAACVAwAAAAAAAAAAAACVAwAAAAAAAJYDAAAAAAAAAAAAAJYDAAAAAAAAlwMAAAAAAAAAAAAAlwMAAAAAAACYAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAMAAAAAAACQAwAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "\n})"
					},
					"BgAAAJgDAAAAAAAAmQMAAAAAAAAAAAAAmQMAAAAAAACbAwAAAAAAAAAAAACbAwAAAAAAAJwDAAAAAAAAAAAAAJkDAAAAAAAAmQMAAAAAAAACAAAAICCZAwAAAAAAAJkDAAAAAAAAAAAAAJoDAAAAAAAAmwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAMAAAAAAACYAwAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"left_delete",
					null,
					"AQAAAJoDAAAAAAAAmgMAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAmwMAAAAAAACbAwAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"cut",
					null,
					"AQAAAJoDAAAAAAAAmgMAAAAAAAAOAAAALCBKU0NvbnRleHQqKTs",
					"AQAAAAAAAAABAAAAmgMAAAAAAACoAwAAAAAAAP///////+9/"
				],
				[
					60,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYDAAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yaW5nYnVmZmVyLmgiCiNpbmNsdWRlIDxxdWlja2pzLmg+CgpzdHJ1Y3QgbHdzOwpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhOwoKLyogY2xhc3MgV2ViU29ja2V0ICovCgp0eXBlZGVmIHN0cnVjdCBzb2NrZXQgewogIGludCByZWZfY291bnQ7CiAgc3RydWN0IGx3cyogbHdzaTsKICAvLyBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKICBNaW5uZXRSaW5nYnVmZmVyKiBzZW5kcTsKfSBNaW5uZXRXZWJzb2NrZXQ7CgpleHRlcm4gaW50NjRfdCB3c19zZXJpYWw7Cgp2b2lkIG9wYXF1ZV9mcmVlX3J0KHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSosIEpTUnVudGltZSopOwp2b2lkIG9wYXF1ZV9mcmVlKHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSosIEpTQ29udGV4dCopOwpzdGF0aWMgaW5saW5lIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlX2R1cChzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSkgewogIG9wYXF1ZS0+cmVmX2NvdW50Kys7CiAgcmV0dXJuIG9wYXF1ZTsKfQpKU1ZhbHVlIG1pbm5ldF93c19uZXcoSlNDb250ZXh0Kiwgc3RydWN0IGx3cyopOwpNaW5uZXRXZWJzb2NrZXQqIHdzX25ldyhzdHJ1Y3QgbHdzKiwgSlNDb250ZXh0Kik7CnZvaWQgd3NfY2xlYXJfcnQoTWlubmV0V2Vic29ja2V0KiwgSlNSdW50aW1lKik7CnZvaWQgd3NfY2xlYXIoTWlubmV0V2Vic29ja2V0KiwgSlNDb250ZXh0Kik7CnZvaWQgd3NfZnJlZV9ydChNaW5uZXRXZWJzb2NrZXQqLCBKU1J1bnRpbWUqKTsKdm9pZCB3c19mcmVlKE1pbm5ldFdlYnNvY2tldCosIEpTQ29udGV4dCopOwpNaW5uZXRXZWJzb2NrZXQqIHdzX2R1cChNaW5uZXRXZWJzb2NrZXQqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBNaW5uZXRXZWJzb2NrZXQqKTsKSlNWYWx1ZSBtaW5uZXRfd3NfZnJvbXdzaShKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CkpTVmFsdWUgbWlubmV0X3dzX2NvbnN0cnVjdG9yKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3dzX2NsYXNzX2lkOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3dzX3Byb3RvLCBtaW5uZXRfd3NfY3RvcjsKZXh0ZXJuIEpTQ2xhc3NEZWYgbWlubmV0X3dzX2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3dzX3Byb3RvX2Z1bmNzW10sIG1pbm5ldF93c19zdGF0aWNfZnVuY3NbXSwgbWlubmV0X3dzX3Byb3RvX2RlZnNbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfd3NfcHJvdG9fZnVuY3Nfc2l6ZSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc19zaXplLCBtaW5uZXRfd3NfcHJvdG9fZGVmc19zaXplOwoKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsKICBpbnQgcmVmX2NvdW50OwogIHN0cnVjdCBzb2NrZXQqIHdzOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcTsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcDsKICBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiBzZXNzOwogIEpTVmFsdWUgaGFuZGxlcjsKICBpbnQ2NF90IHNlcmlhbDsKICBNaW5uZXRTdGF0dXMgc3RhdHVzOwogIHN0cnVjdCBwb2xsZmQgcG9sbDsKICBpbnQgZXJyb3I7CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IGxpc3RfaGVhZCBsaW5rOwogIHN0cnVjdCBmb3JtX3BhcnNlciogZm9ybV9wYXJzZXI7Cn07CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBzZXNzaW9uX2RhdGEqCmx3c19zZXNzaW9uKHN0cnVjdCBsd3MqIHdzaSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZS0+c2VzczsKCiAgcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoTWlubmV0V2Vic29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSkgOiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBzZXNzaW9uX2RhdGEqCndzX3Nlc3Npb24oTWlubmV0V2Vic29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19zZXNzaW9uKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0Kgp3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKICByZXR1cm4gKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSA/IG9wYXF1ZS0+d3MgOiAwOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKbWlubmV0X3dzX2RhdGEoSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUob2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKbWlubmV0X3dzX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF93c19jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfV0VCU09DS0VUX0ggKi8KAAAAAAAAAAAYDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwMAAAAAAACHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"cut",
					null,
					"AQAAABQDAAAAAAAAFAMAAAAAAACGAAAAc3RhdGljIGlubGluZSBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCm9wYXF1ZV9kdXAoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUpIHsKICBvcGFxdWUtPnJlZl9jb3VudCsrOwogIHJldHVybiBvcGFxdWU7Cn0",
					"AQAAAAAAAAABAAAAFAMAAAAAAACaAwAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"left_delete",
					null,
					"AQAAABMDAAAAAAAAEwMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAFAMAAAAAAAAUAwAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAP4HAAAAAAAA/wcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gcAAAAAAAD+BwAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"paste",
					null,
					"AQAAAP8HAAAAAAAAhQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wcAAAAAAAD/BwAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAP4HAAAAAAAA/wcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gcAAAAAAAD+BwAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAGECAAAAAAAAYgIAAAAAAAAAAAAAYgIAAAAAAABiAgAAAAAAAAEAAAAq",
					"AQAAAAAAAAABAAAAYQIAAAAAAABiAgAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAZDAAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yaW5nYnVmZmVyLmgiCiNpbmNsdWRlIDxxdWlja2pzLmg+CgpzdHJ1Y3QgbHdzOwpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhOwoKLyogY2xhc3MgV2ViU29ja2V0ICovCgp0eXBlZGVmIHN0cnVjdCBzb2NrZXQgewogIGludCByZWZfY291bnQ7CiAgc3RydWN0IGx3cyogbHdzaTsKICAvLyBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKICBNaW5uZXRSaW5nYnVmZmVyICBzZW5kcTsKfSBNaW5uZXRXZWJzb2NrZXQ7CgpleHRlcm4gaW50NjRfdCB3c19zZXJpYWw7Cgp2b2lkIG9wYXF1ZV9mcmVlX3J0KHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSosIEpTUnVudGltZSopOwp2b2lkIG9wYXF1ZV9mcmVlKHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSosIEpTQ29udGV4dCopOwpKU1ZhbHVlIG1pbm5ldF93c19uZXcoSlNDb250ZXh0Kiwgc3RydWN0IGx3cyopOwpNaW5uZXRXZWJzb2NrZXQqIHdzX25ldyhzdHJ1Y3QgbHdzKiwgSlNDb250ZXh0Kik7CnZvaWQgd3NfY2xlYXJfcnQoTWlubmV0V2Vic29ja2V0KiwgSlNSdW50aW1lKik7CnZvaWQgd3NfY2xlYXIoTWlubmV0V2Vic29ja2V0KiwgSlNDb250ZXh0Kik7CnZvaWQgd3NfZnJlZV9ydChNaW5uZXRXZWJzb2NrZXQqLCBKU1J1bnRpbWUqKTsKdm9pZCB3c19mcmVlKE1pbm5ldFdlYnNvY2tldCosIEpTQ29udGV4dCopOwpNaW5uZXRXZWJzb2NrZXQqIHdzX2R1cChNaW5uZXRXZWJzb2NrZXQqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBNaW5uZXRXZWJzb2NrZXQqKTsKSlNWYWx1ZSBtaW5uZXRfd3NfZnJvbXdzaShKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CkpTVmFsdWUgbWlubmV0X3dzX2NvbnN0cnVjdG9yKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3dzX2NsYXNzX2lkOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3dzX3Byb3RvLCBtaW5uZXRfd3NfY3RvcjsKZXh0ZXJuIEpTQ2xhc3NEZWYgbWlubmV0X3dzX2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3dzX3Byb3RvX2Z1bmNzW10sIG1pbm5ldF93c19zdGF0aWNfZnVuY3NbXSwgbWlubmV0X3dzX3Byb3RvX2RlZnNbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfd3NfcHJvdG9fZnVuY3Nfc2l6ZSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc19zaXplLCBtaW5uZXRfd3NfcHJvdG9fZGVmc19zaXplOwoKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsKICBpbnQgcmVmX2NvdW50OwogIHN0cnVjdCBzb2NrZXQqIHdzOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcTsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcDsKICBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiBzZXNzOwogIEpTVmFsdWUgaGFuZGxlcjsKICBpbnQ2NF90IHNlcmlhbDsKICBNaW5uZXRTdGF0dXMgc3RhdHVzOwogIHN0cnVjdCBwb2xsZmQgcG9sbDsKICBpbnQgZXJyb3I7CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IGxpc3RfaGVhZCBsaW5rOwogIHN0cnVjdCBmb3JtX3BhcnNlciogZm9ybV9wYXJzZXI7Cn07CgpzdGF0aWMgaW5saW5lIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKb3BhcXVlX2R1cChzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSkgewogIG9wYXF1ZS0+cmVmX2NvdW50Kys7CiAgcmV0dXJuIG9wYXF1ZTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKd3Nfb3BhcXVlKE1pbm5ldFdlYnNvY2tldCogd3MpIHsKICByZXR1cm4gd3MtPmx3c2kgPyBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3MtPmx3c2kpIDogMDsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgp3c19zZXNzaW9uKE1pbm5ldFdlYnNvY2tldCogd3MpIHsKICByZXR1cm4gd3MtPmx3c2kgPyBsd3Nfc2Vzc2lvbih3cy0+bHdzaSkgOiAwOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKd3NfZnJvbV93c2koc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CiAgcmV0dXJuIChvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSkgPyBvcGFxdWUtPndzIDogMDsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAGAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgIAAAAAAABiAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "jsutils.h",
			"settings":
			{
				"buffer_size": 10030,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "minnet-server-http.c",
			"settings":
			{
				"buffer_size": 28558,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					94,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAA5NAAAAAAAAD00AAAAAAAAAAAAAD00AAAAAAAAVTQAAAAAAAAAAAAAVTQAAAAAAABZNAAAAAAAAAAAAABZNAAAAAAAAHE0AAAAAAAAAAAAAD00AAAAAAAAPTQAAAAAAAAYAAAAgICAgICAWTQAAAAAAABdNAAAAAAAAAAAAABdNAAAAAAAAGE0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOTQAAAAAAAA5NAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABhNAAAAAAAAGk0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYTQAAAAAAABhNAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "server->cb"
					},
					"CgAAABlNAAAAAAAAGk0AAAAAAAAAAAAAGk0AAAAAAAAbTQAAAAAAAAAAAAAbTQAAAAAAABxNAAAAAAAAAAAAABxNAAAAAAAAHU0AAAAAAAAAAAAAHU0AAAAAAAAeTQAAAAAAAAAAAAAeTQAAAAAAAB9NAAAAAAAAAAAAAB9NAAAAAAAAIE0AAAAAAAAAAAAAIE0AAAAAAAAhTQAAAAAAAAAAAAAhTQAAAAAAACJNAAAAAAAAAAAAACJNAAAAAAAAI00AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZTQAAAAAAABlNAAAAAAAAAAAAAAAA8L8"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": ".-"
					},
					"AgAAACNNAAAAAAAAJE0AAAAAAAAAAAAAJE0AAAAAAAAlTQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjTQAAAAAAACNNAAAAAAAAAAAAAAAA8L8"
				],
				[
					117,
					1,
					"left_delete",
					null,
					"AQAAACRNAAAAAAAAJE0AAAAAAAABAAAALQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlTQAAAAAAACVNAAAAAAAAAAAAAAAA8L8"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "read.ctx"
					},
					"CAAAACRNAAAAAAAAJU0AAAAAAAAAAAAAJU0AAAAAAAAmTQAAAAAAAAAAAAAmTQAAAAAAACdNAAAAAAAAAAAAACdNAAAAAAAAKE0AAAAAAAAAAAAAKE0AAAAAAAApTQAAAAAAAAAAAAApTQAAAAAAACpNAAAAAAAAAAAAACpNAAAAAAAAK00AAAAAAAAAAAAAK00AAAAAAAAsTQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkTQAAAAAAACRNAAAAAAAAAAAAAAAA8L8"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC1NAAAAAAAALk0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtTQAAAAAAAC1NAAAAAAAAAAAAAAAA8L8"
				],
				[
					121,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAC5NAAAAAAAAME0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuTQAAAAAAAC5NAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAC9NAAAAAAAAME0AAAAAAAAAAAAAME0AAAAAAAA2TQAAAAAAAAAAAAA2TQAAAAAAADdNAAAAAAAAAAAAADdNAAAAAAAAPU0AAAAAAAAAAAAAME0AAAAAAAAwTQAAAAAAAAYAAAAgICAgICAwTQAAAAAAADhNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvTQAAAAAAAC9NAAAAAAAAAAAAAAAA8L8"
				],
				[
					136,
					1,
					"paste",
					null,
					"AQAAADhNAAAAAAAAiU0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4TQAAAAAAADhNAAAAAAAAAAAAAAAA8L8"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "\nJSValue"
					},
					"CgAAAC9NAAAAAAAAME0AAAAAAAAAAAAAME0AAAAAAAA2TQAAAAAAAAAAAAA2TQAAAAAAADhNAAAAAAAAAAAAADhNAAAAAAAAOU0AAAAAAAAAAAAAOU0AAAAAAAA6TQAAAAAAAAAAAAA6TQAAAAAAADtNAAAAAAAAAAAAADtNAAAAAAAAPE0AAAAAAAAAAAAAPE0AAAAAAAA9TQAAAAAAAAAAAAA9TQAAAAAAAD5NAAAAAAAAAAAAAD5NAAAAAAAAP00AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvTQAAAAAAAC9NAAAAAAAAAAAAAAAA8L8"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": " args"
					},
					"BQAAAD9NAAAAAAAAQE0AAAAAAAAAAAAAQE0AAAAAAABBTQAAAAAAAAAAAABBTQAAAAAAAEJNAAAAAAAAAAAAAEJNAAAAAAAAQ00AAAAAAAAAAAAAQ00AAAAAAABETQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/TQAAAAAAAD9NAAAAAAAAAAAAAAAA8L8"
				],
				[
					162,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAERNAAAAAAAARk0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABETQAAAAAAAERNAAAAAAAAAAAAAAAA8L8"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAEVNAAAAAAAARk0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFTQAAAAAAAEVNAAAAAAAAAAAAAAAA8L8"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEdNAAAAAAAASE0AAAAAAAAAAAAASE0AAAAAAABJTQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHTQAAAAAAAEdNAAAAAAAAAAAAAAAA8L8"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAElNAAAAAAAASk0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJTQAAAAAAAElNAAAAAAAAAAAAAAAA8L8"
				],
				[
					167,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEpNAAAAAAAATE0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKTQAAAAAAAEpNAAAAAAAAAAAAAAAA8L8"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": " session->args"
					},
					"DgAAAEtNAAAAAAAATE0AAAAAAAAAAAAATE0AAAAAAABNTQAAAAAAAAAAAABNTQAAAAAAAE5NAAAAAAAAAAAAAE5NAAAAAAAAT00AAAAAAAAAAAAAT00AAAAAAABQTQAAAAAAAAAAAABQTQAAAAAAAFFNAAAAAAAAAAAAAFFNAAAAAAAAUk0AAAAAAAAAAAAAUk0AAAAAAABTTQAAAAAAAAAAAABTTQAAAAAAAFRNAAAAAAAAAAAAAFRNAAAAAAAAVU0AAAAAAAAAAAAAVU0AAAAAAABWTQAAAAAAAAAAAABWTQAAAAAAAFdNAAAAAAAAAAAAAFdNAAAAAAAAWE0AAAAAAAAAAAAAWE0AAAAAAABZTQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLTQAAAAAAAEtNAAAAAAAAAAAAAAAA8L8"
				],
				[
					169,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAFlNAAAAAAAAW00AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZTQAAAAAAAFlNAAAAAAAAAAAAAAAA8L8"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAFpNAAAAAAAAW00AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaTQAAAAAAAFpNAAAAAAAAAAAAAAAA8L8"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFxNAAAAAAAAXU0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcTQAAAAAAAFxNAAAAAAAAAAAAAAAA8L8"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": " session->args"
					},
					"DgAAAF1NAAAAAAAAXk0AAAAAAAAAAAAAXk0AAAAAAABfTQAAAAAAAAAAAABfTQAAAAAAAGBNAAAAAAAAAAAAAGBNAAAAAAAAYU0AAAAAAAAAAAAAYU0AAAAAAABiTQAAAAAAAAAAAABiTQAAAAAAAGNNAAAAAAAAAAAAAGNNAAAAAAAAZE0AAAAAAAAAAAAAZE0AAAAAAABlTQAAAAAAAAAAAABlTQAAAAAAAGZNAAAAAAAAAAAAAGZNAAAAAAAAZ00AAAAAAAAAAAAAZ00AAAAAAABoTQAAAAAAAAAAAABoTQAAAAAAAGlNAAAAAAAAAAAAAGlNAAAAAAAAak0AAAAAAAAAAAAAak0AAAAAAABrTQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdTQAAAAAAAF1NAAAAAAAAAAAAAAAA8L8"
				],
				[
					174,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAGtNAAAAAAAAbU0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrTQAAAAAAAGtNAAAAAAAAAAAAAAAA8L8"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAGxNAAAAAAAAbU0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsTQAAAAAAAGxNAAAAAAAAAAAAAAAA8L8"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAG5NAAAAAAAAb00AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuTQAAAAAAAG5NAAAAAAAAAAAAAAAA8L8"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAG9NAAAAAAAAcE0AAAAAAAAAAAAAcE0AAAAAAABxTQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvTQAAAAAAAG9NAAAAAAAAAAAAAAAA8L8"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "JS_NewStringL"
					},
					"DQAAAHBNAAAAAAAAcU0AAAAAAAAAAAAAcU0AAAAAAAByTQAAAAAAAAAAAAByTQAAAAAAAHNNAAAAAAAAAAAAAHNNAAAAAAAAdE0AAAAAAAAAAAAAdE0AAAAAAAB1TQAAAAAAAAAAAAB1TQAAAAAAAHZNAAAAAAAAAAAAAHZNAAAAAAAAd00AAAAAAAAAAAAAd00AAAAAAAB4TQAAAAAAAAAAAAB4TQAAAAAAAHlNAAAAAAAAAAAAAHlNAAAAAAAAek0AAAAAAAAAAAAAek0AAAAAAAB7TQAAAAAAAAAAAAB7TQAAAAAAAHxNAAAAAAAAAAAAAHxNAAAAAAAAfU0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwTQAAAAAAAHBNAAAAAAAAAAAAAAAA8L8"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": "en"
					},
					"AgAAAH1NAAAAAAAAfk0AAAAAAAAAAAAAfk0AAAAAAAB/TQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9TQAAAAAAAH1NAAAAAAAAAAAAAAAA8L8"
				],
				[
					182,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAH9NAAAAAAAAgU0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/TQAAAAAAAH9NAAAAAAAAAAAAAAAA8L8"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAIBNAAAAAAAAgU0AAAAAAAAAAAAAgU0AAAAAAACCTQAAAAAAAAAAAACCTQAAAAAAAINNAAAAAAAAAAAAAINNAAAAAAAAhE0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACATQAAAAAAAIBNAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAIRNAAAAAAAAhU0AAAAAAAAAAAAAhU0AAAAAAACGTQAAAAAAAAAAAACGTQAAAAAAAIdNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACETQAAAAAAAIRNAAAAAAAAAAAAAAAA8L8"
				],
				[
					185,
					3,
					"left_delete",
					null,
					"AwAAAIZNAAAAAAAAhk0AAAAAAAABAAAAboVNAAAAAAAAhU0AAAAAAAABAAAAaYRNAAAAAAAAhE0AAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHTQAAAAAAAIdNAAAAAAAAAAAAAAAA8L8"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "server"
					},
					"BgAAAIRNAAAAAAAAhU0AAAAAAAAAAAAAhU0AAAAAAACGTQAAAAAAAAAAAACGTQAAAAAAAIdNAAAAAAAAAAAAAIdNAAAAAAAAiE0AAAAAAAAAAAAAiE0AAAAAAACJTQAAAAAAAAAAAACJTQAAAAAAAIpNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACETQAAAAAAAIRNAAAAAAAAAAAAAAAA8L8"
				],
				[
					187,
					10,
					"left_delete",
					null,
					"CgAAAIlNAAAAAAAAiU0AAAAAAAABAAAAcohNAAAAAAAAiE0AAAAAAAABAAAAZYdNAAAAAAAAh00AAAAAAAABAAAAdoZNAAAAAAAAhk0AAAAAAAABAAAAcoVNAAAAAAAAhU0AAAAAAAABAAAAZYRNAAAAAAAAhE0AAAAAAAABAAAAc4NNAAAAAAAAg00AAAAAAAABAAAALIJNAAAAAAAAgk0AAAAAAAABAAAAeIFNAAAAAAAAgU0AAAAAAAABAAAAdIBNAAAAAAAAgE0AAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKTQAAAAAAAIpNAAAAAAAAAAAAAAAA8L8"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": "servewr-"
					},
					"CAAAAIBNAAAAAAAAgU0AAAAAAAAAAAAAgU0AAAAAAACCTQAAAAAAAAAAAACCTQAAAAAAAINNAAAAAAAAAAAAAINNAAAAAAAAhE0AAAAAAAAAAAAAhE0AAAAAAACFTQAAAAAAAAAAAACFTQAAAAAAAIZNAAAAAAAAAAAAAIZNAAAAAAAAh00AAAAAAAAAAAAAh00AAAAAAACITQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACATQAAAAAAAIBNAAAAAAAAAAAAAAAA8L8"
				],
				[
					189,
					3,
					"left_delete",
					null,
					"AwAAAIdNAAAAAAAAh00AAAAAAAABAAAALYZNAAAAAAAAhk0AAAAAAAABAAAAcoVNAAAAAAAAhU0AAAAAAAABAAAAdw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACITQAAAAAAAIhNAAAAAAAAAAAAAAAA8L8"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": "r->cb.reawd."
					},
					"DAAAAIVNAAAAAAAAhk0AAAAAAAAAAAAAhk0AAAAAAACHTQAAAAAAAAAAAACHTQAAAAAAAIhNAAAAAAAAAAAAAIhNAAAAAAAAiU0AAAAAAAAAAAAAiU0AAAAAAACKTQAAAAAAAAAAAACKTQAAAAAAAItNAAAAAAAAAAAAAItNAAAAAAAAjE0AAAAAAAAAAAAAjE0AAAAAAACNTQAAAAAAAAAAAACNTQAAAAAAAI5NAAAAAAAAAAAAAI5NAAAAAAAAj00AAAAAAAAAAAAAj00AAAAAAACQTQAAAAAAAAAAAACQTQAAAAAAAJFNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFTQAAAAAAAIVNAAAAAAAAAAAAAAAA8L8"
				],
				[
					191,
					3,
					"left_delete",
					null,
					"AwAAAJBNAAAAAAAAkE0AAAAAAAABAAAALo9NAAAAAAAAj00AAAAAAAABAAAAZI5NAAAAAAAAjk0AAAAAAAABAAAAdw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRTQAAAAAAAJFNAAAAAAAAAAAAAAAA8L8"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": "d,.c"
					},
					"BAAAAI5NAAAAAAAAj00AAAAAAAAAAAAAj00AAAAAAACQTQAAAAAAAAAAAACQTQAAAAAAAJFNAAAAAAAAAAAAAJFNAAAAAAAAkk0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOTQAAAAAAAI5NAAAAAAAAAAAAAAAA8L8"
				],
				[
					193,
					3,
					"left_delete",
					null,
					"AwAAAJFNAAAAAAAAkU0AAAAAAAABAAAAY5BNAAAAAAAAkE0AAAAAAAABAAAALo9NAAAAAAAAj00AAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSTQAAAAAAAJJNAAAAAAAAAAAAAAAA8L8"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": ".ctx,"
					},
					"BQAAAI9NAAAAAAAAkE0AAAAAAAAAAAAAkE0AAAAAAACRTQAAAAAAAAAAAACRTQAAAAAAAJJNAAAAAAAAAAAAAJJNAAAAAAAAk00AAAAAAAAAAAAAk00AAAAAAACUTQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPTQAAAAAAAI9NAAAAAAAAAAAAAAAA8L8"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": " in,"
					},
					"BAAAAJRNAAAAAAAAlU0AAAAAAAAAAAAAlU0AAAAAAACWTQAAAAAAAAAAAACWTQAAAAAAAJdNAAAAAAAAAAAAAJdNAAAAAAAAmE0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUTQAAAAAAAJRNAAAAAAAAAAAAAAAA8L8"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": " len"
					},
					"BAAAAJhNAAAAAAAAmU0AAAAAAAAAAAAAmU0AAAAAAACaTQAAAAAAAAAAAACaTQAAAAAAAJtNAAAAAAAAAAAAAJtNAAAAAAAAnE0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYTQAAAAAAAJhNAAAAAAAAAAAAAAAA8L8"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": " };"
					},
					"AwAAAJ1NAAAAAAAAnk0AAAAAAAAAAAAAnk0AAAAAAACfTQAAAAAAAAAAAACfTQAAAAAAAKBNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdTQAAAAAAAJ1NAAAAAAAAAAAAAAAA8L8"
				],
				[
					200,
					1,
					"left_delete",
					null,
					"AQAAAKBNAAAAAAAAoE0AAAAAAAACAAAAIH0",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgTQAAAAAAAKJNAAAAAAAAAAAAAAAA8L8"
				],
				[
					206,
					1,
					"right_delete",
					null,
					"AQAAAEVNAAAAAAAARU0AAAAAAAABAAAANA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFTQAAAAAAAEVNAAAAAAAAAAAAAAAA8L8"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": "cio"
					},
					"BAAAAOZNAAAAAAAA500AAAAAAAAAAAAA500AAAAAAADnTQAAAAAAAAEAAAAy500AAAAAAADoTQAAAAAAAAAAAADoTQAAAAAAAOlNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmTQAAAAAAAOdNAAAAAAAAAAAAAAAA8L8"
				],
				[
					212,
					2,
					"left_delete",
					null,
					"AgAAAOhNAAAAAAAA6E0AAAAAAAABAAAAb+dNAAAAAAAA500AAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpTQAAAAAAAOlNAAAAAAAAAAAAAAAA8L8"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": "ountof(args)"
					},
					"DAAAAOdNAAAAAAAA6E0AAAAAAAAAAAAA6E0AAAAAAADpTQAAAAAAAAAAAADpTQAAAAAAAOpNAAAAAAAAAAAAAOpNAAAAAAAA600AAAAAAAAAAAAA600AAAAAAADsTQAAAAAAAAAAAADsTQAAAAAAAO1NAAAAAAAAAAAAAO1NAAAAAAAA7k0AAAAAAAAAAAAA7k0AAAAAAADvTQAAAAAAAAAAAADvTQAAAAAAAPBNAAAAAAAAAAAAAPBNAAAAAAAA8U0AAAAAAAAAAAAA8U0AAAAAAADyTQAAAAAAAAAAAADyTQAAAAAAAPNNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnTQAAAAAAAOdNAAAAAAAAAAAAAAAA8L8"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": "args)÷"
					},
					"BgAAAPVNAAAAAAAA9k0AAAAAAAAAAAAA9k0AAAAAAAD3TQAAAAAAAAAAAAD3TQAAAAAAAPhNAAAAAAAAAAAAAPhNAAAAAAAA+U0AAAAAAAAAAAAA+U0AAAAAAAD6TQAAAAAAAAAAAAD6TQAAAAAAAPtNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1TQAAAAAAAPVNAAAAAAAAAAAAAAAA8L8"
				],
				[
					216,
					1,
					"left_delete",
					null,
					"AQAAAPpNAAAAAAAA+k0AAAAAAAACAAAAw7c",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7TQAAAAAAAPtNAAAAAAAAAAAAAAAA8L8"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPpNAAAAAAAA+00AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6TQAAAAAAAPpNAAAAAAAAAAAAAAAA8L8"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": "\nJS_FreeValue"
					},
					"DwAAAPtNAAAAAAAA/E0AAAAAAAAAAAAA/E0AAAAAAAAOTgAAAAAAAAAAAAAOTgAAAAAAAA5OAAAAAAAAEAAAAHNlc3Npb24tPmFyZ3MpOwoOTgAAAAAAAA9OAAAAAAAAAAAAAA9OAAAAAAAAEE4AAAAAAAAAAAAAEE4AAAAAAAARTgAAAAAAAAAAAAARTgAAAAAAABJOAAAAAAAAAAAAABJOAAAAAAAAE04AAAAAAAAAAAAAE04AAAAAAAAUTgAAAAAAAAAAAAAUTgAAAAAAABVOAAAAAAAAAAAAABVOAAAAAAAAFk4AAAAAAAAAAAAAFk4AAAAAAAAXTgAAAAAAAAAAAAAXTgAAAAAAABhOAAAAAAAAAAAAABhOAAAAAAAAGU4AAAAAAAAAAAAAGU4AAAAAAAAaTgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7TQAAAAAAAAtOAAAAAAAAAAAAAAAQkUA"
				],
				[
					220,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABpOAAAAAAAAHE4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaTgAAAAAAABpOAAAAAAAAAAAAAAAA8L8"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAABtOAAAAAAAAHE4AAAAAAAAAAAAAHE4AAAAAAAAdTgAAAAAAAAAAAAAdTgAAAAAAAB5OAAAAAAAAAAAAAB5OAAAAAAAAH04AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbTgAAAAAAABtOAAAAAAAAAAAAAAAA8L8"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": " ret"
					},
					"BAAAAB9OAAAAAAAAIE4AAAAAAAAAAAAAIE4AAAAAAAAhTgAAAAAAAAAAAAAhTgAAAAAAACJOAAAAAAAAAAAAACJOAAAAAAAAI04AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfTgAAAAAAAB9OAAAAAAAAAAAAAAAA8L8"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACROAAAAAAAAJU4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkTgAAAAAAACROAAAAAAAAAAAAAAAA8L8"
				],
				[
					233,
					1,
					"paste",
					null,
					"AgAAABtOAAAAAAAALk4AAAAAAAAAAAAALk4AAAAAAAAuTgAAAAAAAAMAAABjdHg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbTgAAAAAAAB5OAAAAAAAAAAAAAAAA8L8"
				],
				[
					249,
					1,
					"paste",
					null,
					"AgAAANFNAAAAAAAA4E0AAAAAAAAAAAAA4E0AAAAAAADgTQAAAAAAAAIAAABjYg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRTQAAAAAAANNNAAAAAAAAAAAAAAAA8L8"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAANFNAAAAAAAA0k0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRTQAAAAAAANFNAAAAAAAAAAAAAAAA8L8"
				],
				[
					261,
					1,
					"insert",
					{
						"characters": "req_obj"
					},
					"CAAAAOxNAAAAAAAA7U0AAAAAAAAAAAAA7U0AAAAAAADtTQAAAAAAAAYAAAB3c19vYmrtTQAAAAAAAO5NAAAAAAAAAAAAAO5NAAAAAAAA700AAAAAAAAAAAAA700AAAAAAADwTQAAAAAAAAAAAADwTQAAAAAAAPFNAAAAAAAAAAAAAPFNAAAAAAAA8k0AAAAAAAAAAAAA8k0AAAAAAADzTQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsTQAAAAAAAPJNAAAAAAAAAAAAAAAA8L8"
				],
				[
					273,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAEtNAAAAAAAATE0AAAAAAAAAAAAATE0AAAAAAABMTQAAAAAAACMAAABzZXNzaW9uLT5hcmdzWzBdLCBzZXNzaW9uLT5hcmdzWzFdLA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLTQAAAAAAAG5NAAAAAAAAAAAAAAAA8L8"
				],
				[
					284,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+TQAAAAAAAOlNAAAAAAAAAAAAAAAA8L8"
				],
				[
					292,
					1,
					"cut",
					null,
					"AQAAAA9NAAAAAAAAD00AAAAAAAADAQAACiAgICAgIGlmKHNlcnZlci0+Y2IucmVhZC5jdHgpIHsKICAgICAgICBKU1ZhbHVlIGFyZ3NbXSA9IHtKU19OZXdTdHJpbmdMZW4oc2VydmVyLT5jYi5yZWFkLmN0eCwgaW4sIGxlbil9OwogICAgICAgIEpTVmFsdWUgcmV0ID0gbWlubmV0X2VtaXRfdGhpcygmc2VydmVyLT5jYi5yZWFkLCBzZXNzaW9uLT5yZXFfb2JqLCBjb3VudG9mKGFyZ3MpLCBhcmdzKTsKICAgICAgICBKU19GcmVlVmFsdWUoc2VydmVyLT5jYi5yZWFkLmN0eCwgcmV0KTsKICAgICAgfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPTQAAAAAAABJOAAAAAAAAAAAAAAAA8L8"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAABRJAAAAAAAAFUkAAAAAAAAAAAAAFUkAAAAAAAAbSQAAAAAAAAAAAAAbSQAAAAAAABxJAAAAAAAAAAAAABxJAAAAAAAAIkkAAAAAAAAAAAAAFUkAAAAAAAAVSQAAAAAAAAYAAAAgICAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUSQAAAAAAABRJAAAAAAAAAAAAAAAA8L8"
				],
				[
					298,
					1,
					"paste",
					null,
					"AQAAABxJAAAAAAAAH0oAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcSQAAAAAAABxJAAAAAAAAAAAAAAAA8L8"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAB9KAAAAAAAAIEoAAAAAAAAAAAAAIEoAAAAAAAAmSgAAAAAAAAAAAAAWSQAAAAAAABZJAAAAAAAABgAAACAgICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfSgAAAAAAAB9KAAAAAAAAAAAAAAAA8L8"
				],
				[
					313,
					1,
					"left_delete",
					null,
					"AgAAABRJAAAAAAAAFEkAAAAAAAABAAAAChlKAAAAAAAAGUoAAAAAAAAGAAAAICAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVSQAAAAAAABVJAAAAAAAAAAAAAACAU0A"
				],
				[
					359,
					1,
					"paste",
					null,
					"AQAAABROAAAAAAAAGE8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUTgAAAAAAABROAAAAAAAAAAAAAAAA8L8"
				],
				[
					364,
					1,
					"insert",
					{
						"characters": "post"
					},
					"BQAAACpOAAAAAAAAK04AAAAAAAAAAAAAK04AAAAAAAArTgAAAAAAAAQAAAByZWFkK04AAAAAAAAsTgAAAAAAAAAAAAAsTgAAAAAAAC1OAAAAAAAAAAAAAC1OAAAAAAAALk4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqTgAAAAAAAC5OAAAAAAAAAAAAAAAA8L8"
				],
				[
					374,
					1,
					"paste",
					null,
					"AgAAAGtOAAAAAAAAb04AAAAAAAAAAAAAb04AAAAAAABvTgAAAAAAAAQAAAByZWFk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrTgAAAAAAAG9OAAAAAAAAAAAAAAAA8L8"
				],
				[
					381,
					1,
					"insert",
					{
						"characters": " buffer_to"
					},
					"CwAAAFBOAAAAAAAAUU4AAAAAAAAAAAAAUU4AAAAAAABRTgAAAAAAAC0AAABKU19OZXdTdHJpbmdMZW4oc2VydmVyLT5jYi5wb3N0LmN0eCwgaW4sIGxlbilRTgAAAAAAAFJOAAAAAAAAAAAAAFJOAAAAAAAAU04AAAAAAAAAAAAAU04AAAAAAABUTgAAAAAAAAAAAABUTgAAAAAAAFVOAAAAAAAAAAAAAFVOAAAAAAAAVk4AAAAAAAAAAAAAVk4AAAAAAABXTgAAAAAAAAAAAABXTgAAAAAAAFhOAAAAAAAAAAAAAFhOAAAAAAAAWU4AAAAAAAAAAAAAWU4AAAAAAABaTgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQTgAAAAAAAH1OAAAAAAAAAAAAAAAA8L8"
				],
				[
					382,
					2,
					"left_delete",
					null,
					"AgAAAFlOAAAAAAAAWU4AAAAAAAABAAAAb1hOAAAAAAAAWE4AAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaTgAAAAAAAFpOAAAAAAAAAAAAAAAA8L8"
				],
				[
					387,
					1,
					"paste",
					null,
					"AgAAAFFOAAAAAAAAZU4AAAAAAAAAAAAAZU4AAAAAAABlTgAAAAAAAAcAAABidWZmZXJf",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRTgAAAAAAAFhOAAAAAAAAAAAAAAAA8L8"
				],
				[
					388,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGVOAAAAAAAAZ04AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlTgAAAAAAAGVOAAAAAAAAAAAAAAAA8L8"
				],
				[
					389,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAGZOAAAAAAAAZ04AAAAAAAAAAAAAZ04AAAAAAABoTgAAAAAAAAAAAABoTgAAAAAAAGlOAAAAAAAAAAAAAGlOAAAAAAAAak4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmTgAAAAAAAGZOAAAAAAAAAAAAAAAA8L8"
				],
				[
					390,
					1,
					"insert",
					{
						"characters": " &ser"
					},
					"BQAAAGpOAAAAAAAAa04AAAAAAAAAAAAAa04AAAAAAABsTgAAAAAAAAAAAABsTgAAAAAAAG1OAAAAAAAAAAAAAG1OAAAAAAAAbk4AAAAAAAAAAAAAbk4AAAAAAABvTgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqTgAAAAAAAGpOAAAAAAAAAAAAAAAA8L8"
				],
				[
					391,
					3,
					"left_delete",
					null,
					"AwAAAG5OAAAAAAAAbk4AAAAAAAABAAAAcm1OAAAAAAAAbU4AAAAAAAABAAAAZWxOAAAAAAAAbE4AAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvTgAAAAAAAG9OAAAAAAAAAAAAAAAA8L8"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": "session->"
					},
					"CQAAAGxOAAAAAAAAbU4AAAAAAAAAAAAAbU4AAAAAAABuTgAAAAAAAAAAAABuTgAAAAAAAG9OAAAAAAAAAAAAAG9OAAAAAAAAcE4AAAAAAAAAAAAAcE4AAAAAAABxTgAAAAAAAAAAAABxTgAAAAAAAHJOAAAAAAAAAAAAAHJOAAAAAAAAc04AAAAAAAAAAAAAc04AAAAAAAB0TgAAAAAAAAAAAAB0TgAAAAAAAHVOAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsTgAAAAAAAGxOAAAAAAAAAAAAAAAA8L8"
				],
				[
					393,
					1,
					"insert",
					{
						"characters": "generator"
					},
					"CQAAAHVOAAAAAAAAdk4AAAAAAAAAAAAAdk4AAAAAAAB3TgAAAAAAAAAAAAB3TgAAAAAAAHhOAAAAAAAAAAAAAHhOAAAAAAAAeU4AAAAAAAAAAAAAeU4AAAAAAAB6TgAAAAAAAAAAAAB6TgAAAAAAAHtOAAAAAAAAAAAAAHtOAAAAAAAAfE4AAAAAAAAAAAAAfE4AAAAAAAB9TgAAAAAAAAAAAAB9TgAAAAAAAH5OAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1TgAAAAAAAHVOAAAAAAAAAAAAAAAA8L8"
				],
				[
					402,
					1,
					"insert",
					{
						"characters": "req->bodsy"
					},
					"CwAAAGxOAAAAAAAAbU4AAAAAAAAAAAAAbU4AAAAAAABtTgAAAAAAABIAAABzZXNzaW9uLT5nZW5lcmF0b3JtTgAAAAAAAG5OAAAAAAAAAAAAAG5OAAAAAAAAb04AAAAAAAAAAAAAb04AAAAAAABwTgAAAAAAAAAAAABwTgAAAAAAAHFOAAAAAAAAAAAAAHFOAAAAAAAAck4AAAAAAAAAAAAAck4AAAAAAABzTgAAAAAAAAAAAABzTgAAAAAAAHROAAAAAAAAAAAAAHROAAAAAAAAdU4AAAAAAAAAAAAAdU4AAAAAAAB2TgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsTgAAAAAAAH5OAAAAAAAAAAAAAAAA8L8"
				],
				[
					403,
					2,
					"left_delete",
					null,
					"AgAAAHVOAAAAAAAAdU4AAAAAAAABAAAAeXROAAAAAAAAdE4AAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2TgAAAAAAAHZOAAAAAAAAAAAAAAAA8L8"
				],
				[
					404,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAAHROAAAAAAAAdU4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0TgAAAAAAAHROAAAAAAAAAAAAAAAA8L8"
				],
				[
					407,
					1,
					"insert",
					{
						"characters": "_>"
					},
					"AgAAAHVOAAAAAAAAdk4AAAAAAAAAAAAAdk4AAAAAAAB3TgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1TgAAAAAAAHVOAAAAAAAAAAAAAAAA8L8"
				],
				[
					408,
					2,
					"left_delete",
					null,
					"AgAAAHZOAAAAAAAAdk4AAAAAAAABAAAAPnVOAAAAAAAAdU4AAAAAAAABAAAAXw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3TgAAAAAAAHdOAAAAAAAAAAAAAAAA8L8"
				],
				[
					409,
					1,
					"insert",
					{
						"characters": "->buffer"
					},
					"CAAAAHVOAAAAAAAAdk4AAAAAAAAAAAAAdk4AAAAAAAB3TgAAAAAAAAAAAAB3TgAAAAAAAHhOAAAAAAAAAAAAAHhOAAAAAAAAeU4AAAAAAAAAAAAAeU4AAAAAAAB6TgAAAAAAAAAAAAB6TgAAAAAAAHtOAAAAAAAAAAAAAHtOAAAAAAAAfE4AAAAAAAAAAAAAfE4AAAAAAAB9TgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1TgAAAAAAAHVOAAAAAAAAAAAAAAAA8L8"
				],
				[
					422,
					2,
					"left_delete",
					null,
					"AgAAAGdOAAAAAAAAZ04AAAAAAAAEAAAAdHgsIGZOAAAAAAAAZk4AAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnTgAAAAAAAGtOAAAAAAAAAAAAAAAA8L8"
				],
				[
					424,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAHlOAAAAAAAAek4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5TgAAAAAAAHlOAAAAAAAAAAAAAAAA8L8"
				],
				[
					425,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHpOAAAAAAAAe04AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6TgAAAAAAAHpOAAAAAAAAAAAAAAAA8L8"
				],
				[
					426,
					1,
					"paste",
					null,
					"AQAAAHtOAAAAAAAAjk4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7TgAAAAAAAHtOAAAAAAAAAAAAAAAA8L8"
				],
				[
					451,
					1,
					"paste",
					null,
					"AgAAAMROAAAAAAAAyE4AAAAAAAAAAAAAyE4AAAAAAADITgAAAAAAAAQAAAByZWFk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADETgAAAAAAAMhOAAAAAAAAAAAAAAAA8L8"
				],
				[
					456,
					1,
					"paste",
					null,
					"AgAAABJPAAAAAAAAFk8AAAAAAAAAAAAAFk8AAAAAAAAWTwAAAAAAAAQAAAByZWFk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASTwAAAAAAABZPAAAAAAAAAAAAAAAA8L8"
				],
				[
					479,
					1,
					"right_delete",
					null,
					"AQAAAHhOAAAAAAAAeE4AAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4TgAAAAAAAHhOAAAAAAAAAAAAAAAA8L8"
				],
				[
					482,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAI1OAAAAAAAAjk4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNTgAAAAAAAI1OAAAAAAAAAAAAAAAA8L8"
				],
				[
					489,
					1,
					"insert",
					{
						"characters": "opaque->"
					},
					"CAAAAGdOAAAAAAAAaE4AAAAAAAAAAAAAaE4AAAAAAABpTgAAAAAAAAAAAABpTgAAAAAAAGpOAAAAAAAAAAAAAGpOAAAAAAAAa04AAAAAAAAAAAAAa04AAAAAAABsTgAAAAAAAAAAAABsTgAAAAAAAG1OAAAAAAAAAAAAAG1OAAAAAAAAbk4AAAAAAAAAAAAAbk4AAAAAAABvTgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnTgAAAAAAAGdOAAAAAAAAAAAAAAAA8L8"
				],
				[
					498,
					1,
					"insert",
					{
						"characters": "opaque-"
					},
					"BwAAAFFOAAAAAAAAUk4AAAAAAAAAAAAAUk4AAAAAAABTTgAAAAAAAAAAAABTTgAAAAAAAFROAAAAAAAAAAAAAFROAAAAAAAAVU4AAAAAAAAAAAAAVU4AAAAAAABWTgAAAAAAAAAAAABWTgAAAAAAAFdOAAAAAAAAAAAAAFdOAAAAAAAAWE4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRTgAAAAAAAFFOAAAAAAAAAAAAAAAA8L8"
				],
				[
					499,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAFhOAAAAAAAAWk4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYTgAAAAAAAFhOAAAAAAAAAAAAAAAA8L8"
				],
				[
					500,
					2,
					"left_delete",
					null,
					"AgAAAFlOAAAAAAAAWU4AAAAAAAABAAAAIFhOAAAAAAAAWE4AAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaTgAAAAAAAFpOAAAAAAAAAAAAAAAA8L8"
				],
				[
					501,
					1,
					"insert",
					{
						"characters": ">binary"
					},
					"BwAAAFhOAAAAAAAAWU4AAAAAAAAAAAAAWU4AAAAAAABaTgAAAAAAAAAAAABaTgAAAAAAAFtOAAAAAAAAAAAAAFtOAAAAAAAAXE4AAAAAAAAAAAAAXE4AAAAAAABdTgAAAAAAAAAAAABdTgAAAAAAAF5OAAAAAAAAAAAAAF5OAAAAAAAAX04AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYTgAAAAAAAFhOAAAAAAAAAAAAAAAA8L8"
				],
				[
					502,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAF9OAAAAAAAAYE4AAAAAAAAAAAAAYE4AAAAAAABhTgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfTgAAAAAAAF9OAAAAAAAAAAAAAAAA8L8"
				],
				[
					503,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGFOAAAAAAAAYk4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhTgAAAAAAAGFOAAAAAAAAAAAAAAAA8L8"
				],
				[
					508,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAKdOAAAAAAAAqE4AAAAAAAAAAAAAqE4AAAAAAACpTgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnTgAAAAAAAKdOAAAAAAAAAAAAAAAA8L8"
				],
				[
					509,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKlOAAAAAAAAqk4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpTgAAAAAAAKlOAAAAAAAAAAAAAAAA8L8"
				],
				[
					519,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAHZOAAAAAAAAd04AAAAAAAAAAAAAd04AAAAAAAB4TgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2TgAAAAAAAHZOAAAAAAAAAAAAAAAA8L8"
				],
				[
					520,
					1,
					"insert",
					{
						"characters": " buffger"
					},
					"CAAAAHhOAAAAAAAAeU4AAAAAAAAAAAAAeU4AAAAAAAB6TgAAAAAAAAAAAAB6TgAAAAAAAHtOAAAAAAAAAAAAAHtOAAAAAAAAfE4AAAAAAAAAAAAAfE4AAAAAAAB9TgAAAAAAAAAAAAB9TgAAAAAAAH5OAAAAAAAAAAAAAH5OAAAAAAAAf04AAAAAAAAAAAAAf04AAAAAAACATgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4TgAAAAAAAHhOAAAAAAAAAAAAAAAA8L8"
				],
				[
					521,
					3,
					"left_delete",
					null,
					"AwAAAH9OAAAAAAAAf04AAAAAAAABAAAAcn5OAAAAAAAAfk4AAAAAAAABAAAAZX1OAAAAAAAAfU4AAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACATgAAAAAAAIBOAAAAAAAAAAAAAAAA8L8"
				],
				[
					522,
					1,
					"insert",
					{
						"characters": "er_tostring)"
					},
					"DAAAAH1OAAAAAAAAfk4AAAAAAAAAAAAAfk4AAAAAAAB/TgAAAAAAAAAAAAB/TgAAAAAAAIBOAAAAAAAAAAAAAIBOAAAAAAAAgU4AAAAAAAAAAAAAgU4AAAAAAACCTgAAAAAAAAAAAACCTgAAAAAAAINOAAAAAAAAAAAAAINOAAAAAAAAhE4AAAAAAAAAAAAAhE4AAAAAAACFTgAAAAAAAAAAAACFTgAAAAAAAIZOAAAAAAAAAAAAAIZOAAAAAAAAh04AAAAAAAAAAAAAh04AAAAAAACITgAAAAAAAAAAAACITgAAAAAAAIlOAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9TgAAAAAAAH1OAAAAAAAAAAAAAAAA8L8"
				],
				[
					525,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAFFOAAAAAAAAUk4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRTgAAAAAAAFFOAAAAAAAAAAAAAAAA8L8"
				],
				[
					536,
					1,
					"left_delete",
					null,
					"AQAAAFFOAAAAAAAAUU4AAAAAAAABAAAAKA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSTgAAAAAAAFJOAAAAAAAAAAAAAAAA8L8"
				],
				[
					542,
					1,
					"right_delete",
					null,
					"AQAAAIhOAAAAAAAAiE4AAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACITgAAAAAAAIhOAAAAAAAAAAAAAAAA8L8"
				],
				[
					545,
					1,
					"cut",
					null,
					"AQAAAIhOAAAAAAAAiE4AAAAAAAAxAAAAKCZvcGFxdWUtPnJlcS0+Ym9keS0+YnVmZmVyLCBzZXJ2ZXItPmNiLnBvc3QuY3R4KQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACITgAAAAAAALlOAAAAAAAAAAAAAAAA8L8"
				],
				[
					546,
					1,
					"paste",
					null,
					"AQAAAIhOAAAAAAAAuU4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACITgAAAAAAAIhOAAAAAAAAAAAAAAAA8L8"
				],
				[
					549,
					1,
					"paste",
					null,
					"AQAAAHZOAAAAAAAAp04AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2TgAAAAAAAHZOAAAAAAAAAAAAAAAA8L8"
				],
				[
					555,
					2,
					"left_delete",
					null,
					"AgAAAOtOAAAAAAAA604AAAAAAAABAAAAOupOAAAAAAAA6k4AAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsTgAAAAAAAOxOAAAAAAAAAAAAAAAA8L8"
				],
				[
					560,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1UAAAAAAAADVQAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "minnet-buffer.h",
			"settings":
			{
				"buffer_size": 3868,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					100,
					1,
					"cut",
					null,
					"AQAAAPYCAAAAAAAA9gIAAAAAAAA4AAAASlNWYWx1ZSBibG9ja190b3N0cmluZyhNaW5uZXRCeXRlcyBjb25zdCosIEpTQ29udGV4dCopOwo",
					"AQAAAAAAAAABAAAA9gIAAAAAAAAuAwAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					2,
					"paste",
					null,
					"AgAAAPYCAAAAAAAALgMAAAAAAAAAAAAALgMAAAAAAABmAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gIAAAAAAAD2AgAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": "from"
					},
					"BQAAADwDAAAAAAAAPQMAAAAAAAAAAAAAPQMAAAAAAAA9AwAAAAAAAAgAAAB0b3N0cmluZz0DAAAAAAAAPgMAAAAAAAAAAAAAPgMAAAAAAAA/AwAAAAAAAAAAAAA/AwAAAAAAAEADAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAMAAAAAAABEAwAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "js"
					},
					"AgAAAEADAAAAAAAAQQMAAAAAAAAAAAAAQQMAAAAAAABCAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAMAAAAAAABAAwAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					2,
					"left_delete",
					null,
					"AgAAAE8DAAAAAAAATwMAAAAAAAAFAAAAY29uc3ROAwAAAAAAAE4DAAAAAAAAAQAAACA",
					"AQAAAAAAAAABAAAATwMAAAAAAABUAwAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "int"
					},
					"BAAAAC4DAAAAAAAALwMAAAAAAAAAAAAALwMAAAAAAAAvAwAAAAAAAAcAAABKU1ZhbHVlLwMAAAAAAAAwAwAAAAAAAAAAAAAwAwAAAAAAADEDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgMAAAAAAAA1AwAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					3,
					"right_delete",
					null,
					"AwAAAC4DAAAAAAAALgMAAAAAAAABAAAAaS4DAAAAAAAALgMAAAAAAAABAAAAbi4DAAAAAAAALgMAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAALgMAAAAAAAAuAwAAAAAAAAAAAAAAAAAA"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "MinnetBytes"
					},
					"CwAAAC4DAAAAAAAALwMAAAAAAAAAAAAALwMAAAAAAAAwAwAAAAAAAAAAAAAwAwAAAAAAADEDAAAAAAAAAAAAADEDAAAAAAAAMgMAAAAAAAAAAAAAMgMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADQDAAAAAAAAAAAAADQDAAAAAAAANQMAAAAAAAAAAAAANQMAAAAAAAA2AwAAAAAAAAAAAAA2AwAAAAAAADcDAAAAAAAAAAAAADcDAAAAAAAAOAMAAAAAAAAAAAAAOAMAAAAAAAA5AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgMAAAAAAAAuAwAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": "staitc"
					},
					"BgAAAC4DAAAAAAAALwMAAAAAAAAAAAAALwMAAAAAAAAwAwAAAAAAAAAAAAAwAwAAAAAAADEDAAAAAAAAAAAAADEDAAAAAAAAMgMAAAAAAAAAAAAAMgMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADQDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgMAAAAAAAAuAwAAAAAAAAAAAAAAAAAA"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": " inl"
					},
					"BAAAADQDAAAAAAAANQMAAAAAAAAAAAAANQMAAAAAAAA2AwAAAAAAAAAAAAA2AwAAAAAAADcDAAAAAAAAAAAAADcDAAAAAAAAOAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAMAAAAAAAA0AwAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					7,
					"left_delete",
					null,
					"BwAAADcDAAAAAAAANwMAAAAAAAABAAAAbDYDAAAAAAAANgMAAAAAAAABAAAAbjUDAAAAAAAANQMAAAAAAAABAAAAaTQDAAAAAAAANAMAAAAAAAABAAAAIDMDAAAAAAAAMwMAAAAAAAABAAAAYzIDAAAAAAAAMgMAAAAAAAABAAAAdDEDAAAAAAAAMQMAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAOAMAAAAAAAA4AwAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": "tic"
					},
					"AwAAADEDAAAAAAAAMgMAAAAAAAAAAAAAMgMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADQDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQMAAAAAAAAxAwAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": " inline"
					},
					"BwAAADQDAAAAAAAANQMAAAAAAAAAAAAANQMAAAAAAAA2AwAAAAAAAAAAAAA2AwAAAAAAADcDAAAAAAAAAAAAADcDAAAAAAAAOAMAAAAAAAAAAAAAOAMAAAAAAAA5AwAAAAAAAAAAAAA5AwAAAAAAADoDAAAAAAAAAAAAADoDAAAAAAAAOwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAMAAAAAAAA0AwAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADsDAAAAAAAAPAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwMAAAAAAAA7AwAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": " JSBuffer"
					},
					"CgAAAFUDAAAAAAAAVgMAAAAAAAAAAAAAVgMAAAAAAABWAwAAAAAAABgAAABNaW5uZXRCeXRlcyosIEpTQ29udGV4dCpWAwAAAAAAAFcDAAAAAAAAAAAAAFcDAAAAAAAAWAMAAAAAAAAAAAAAWAMAAAAAAABZAwAAAAAAAAAAAABZAwAAAAAAAFoDAAAAAAAAAAAAAFoDAAAAAAAAWwMAAAAAAAAAAAAAWwMAAAAAAABcAwAAAAAAAAAAAABcAwAAAAAAAF0DAAAAAAAAAAAAAF0DAAAAAAAAXgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQMAAAAAAABtAwAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAF4DAAAAAAAAXwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgMAAAAAAABeAwAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"left_delete",
					null,
					"AQAAAF4DAAAAAAAAXgMAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAXwMAAAAAAABfAwAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": " buf"
					},
					"BAAAAF4DAAAAAAAAXwMAAAAAAAAAAAAAXwMAAAAAAABgAwAAAAAAAAAAAABgAwAAAAAAAGEDAAAAAAAAAAAAAGEDAAAAAAAAYgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgMAAAAAAABeAwAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAAGMDAAAAAAAAZAMAAAAAAAAAAAAAZAMAAAAAAABlAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwMAAAAAAABjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"right_delete",
					null,
					"AQAAAGUDAAAAAAAAZQMAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAZQMAAAAAAABlAwAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "\nMinnet"
					},
					"CAAAAGUDAAAAAAAAZgMAAAAAAAAAAAAAZgMAAAAAAABoAwAAAAAAAAAAAABoAwAAAAAAAGkDAAAAAAAAAAAAAGkDAAAAAAAAagMAAAAAAAAAAAAAagMAAAAAAABrAwAAAAAAAAAAAABrAwAAAAAAAGwDAAAAAAAAAAAAAGwDAAAAAAAAbQMAAAAAAAAAAAAAbQMAAAAAAABuAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQMAAAAAAABlAwAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "Bytes"
					},
					"BQAAAG4DAAAAAAAAbwMAAAAAAAAAAAAAbwMAAAAAAABwAwAAAAAAAAAAAABwAwAAAAAAAHEDAAAAAAAAAAAAAHEDAAAAAAAAcgMAAAAAAAAAAAAAcgMAAAAAAABzAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgMAAAAAAABuAwAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": " ret="
					},
					"BQAAAHMDAAAAAAAAdAMAAAAAAAAAAAAAdAMAAAAAAAB1AwAAAAAAAAAAAAB1AwAAAAAAAHYDAAAAAAAAAAAAAHYDAAAAAAAAdwMAAAAAAAAAAAAAdwMAAAAAAAB4AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwMAAAAAAABzAwAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAHgDAAAAAAAAegMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAMAAAAAAAB4AwAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHkDAAAAAAAAegMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQMAAAAAAAB5AwAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": " buf.data"
					},
					"CQAAAHkDAAAAAAAAegMAAAAAAAAAAAAAegMAAAAAAAB7AwAAAAAAAAAAAAB7AwAAAAAAAHwDAAAAAAAAAAAAAHwDAAAAAAAAfQMAAAAAAAAAAAAAfQMAAAAAAAB+AwAAAAAAAAAAAAB+AwAAAAAAAH8DAAAAAAAAAAAAAH8DAAAAAAAAgAMAAAAAAAAAAAAAgAMAAAAAAACBAwAAAAAAAAAAAACBAwAAAAAAAIIDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQMAAAAAAAB5AwAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIIDAAAAAAAAgwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggMAAAAAAACCAwAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": " buf.data+buf."
					},
					"DgAAAIMDAAAAAAAAhAMAAAAAAAAAAAAAhAMAAAAAAACFAwAAAAAAAAAAAACFAwAAAAAAAIYDAAAAAAAAAAAAAIYDAAAAAAAAhwMAAAAAAAAAAAAAhwMAAAAAAACIAwAAAAAAAAAAAACIAwAAAAAAAIkDAAAAAAAAAAAAAIkDAAAAAAAAigMAAAAAAAAAAAAAigMAAAAAAACLAwAAAAAAAAAAAACLAwAAAAAAAIwDAAAAAAAAAAAAAIwDAAAAAAAAjQMAAAAAAAAAAAAAjQMAAAAAAACOAwAAAAAAAAAAAACOAwAAAAAAAI8DAAAAAAAAAAAAAI8DAAAAAAAAkAMAAAAAAAAAAAAAkAMAAAAAAACRAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwMAAAAAAACDAwAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": "size"
					},
					"BAAAAJEDAAAAAAAAkgMAAAAAAAAAAAAAkgMAAAAAAACTAwAAAAAAAAAAAACTAwAAAAAAAJQDAAAAAAAAAAAAAJQDAAAAAAAAlQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQMAAAAAAACRAwAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": " }M"
					},
					"AwAAAJUDAAAAAAAAlgMAAAAAAAAAAAAAlgMAAAAAAACXAwAAAAAAAAAAAACXAwAAAAAAAJgDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQMAAAAAAACVAwAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"left_delete",
					null,
					"AQAAAJcDAAAAAAAAlwMAAAAAAAABAAAATQ",
					"AQAAAAAAAAABAAAAmAMAAAAAAACYAwAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					2,
					"right_delete",
					null,
					"AgAAAJcDAAAAAAAAlwMAAAAAAAABAAAAIJcDAAAAAAAAlwMAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAlwMAAAAAAACXAwAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJcDAAAAAAAAmAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwMAAAAAAACXAwAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAAJgDAAAAAAAAmQMAAAAAAAAAAAAAmQMAAAAAAACbAwAAAAAAAAAAAACbAwAAAAAAAJwDAAAAAAAAAAAAAJwDAAAAAAAAnQMAAAAAAAAAAAAAnQMAAAAAAACeAwAAAAAAAAAAAACeAwAAAAAAAJ8DAAAAAAAAAAAAAJ8DAAAAAAAAoAMAAAAAAAAAAAAAoAMAAAAAAAChAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAMAAAAAAACYAwAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": " ret;"
					},
					"BQAAAKEDAAAAAAAAogMAAAAAAAAAAAAAogMAAAAAAACjAwAAAAAAAAAAAACjAwAAAAAAAKQDAAAAAAAAAAAAAKQDAAAAAAAApQMAAAAAAAAAAAAApQMAAAAAAACmAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQMAAAAAAAChAwAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAKYDAAAAAAAApwMAAAAAAAAAAAAApwMAAAAAAACpAwAAAAAAAAAAAACpAwAAAAAAAKoDAAAAAAAAAAAAAKcDAAAAAAAApwMAAAAAAAACAAAAICCnAwAAAAAAAKcDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgMAAAAAAACmAwAAAAAAAAAAAAAAAPC/"
				],
				[
					254,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAGDwAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxzdGRpbnQuaD4KI2luY2x1ZGUgPHN0ZGFyZy5oPgojaW5jbHVkZSA8c3lzL3R5cGVzLmg+CiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgewogIHVpbnQ4X3QqIHN0YXJ0OwogIHVpbnQ4X3QqIGVuZDsKfSBNaW5uZXRCeXRlczsKCiNkZWZpbmUgYmxvY2tfU0laRShiKSAoc2l6ZV90KSgoYiktPmVuZCAtIChiKS0+c3RhcnQpCiNkZWZpbmUgYmxvY2tfQkVHSU4oYikgKHZvaWQqKShiKS0+c3RhcnQKI2RlZmluZSBibG9ja19FTkQoYikgKHZvaWQqKShiKS0+ZW5kCiNkZWZpbmUgYmxvY2tfQUxMT0MoYikgKHZvaWQqKSgoYiktPnN0YXJ0ID8gKGIpLT5zdGFydCAtIExXU19QUkUgOiAwKQoKdm9pZCBibG9ja19pbml0KE1pbm5ldEJ5dGVzKiwgdWludDhfdCosIHNpemVfdCk7CnVpbnQ4X3QqIGJsb2NrX2FsbG9jKE1pbm5ldEJ5dGVzKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKdWludDhfdCogYmxvY2tfcmVhbGxvYyhNaW5uZXRCeXRlcyosIHNpemVfdCwgSlNDb250ZXh0Kik7CnZvaWQgYmxvY2tfZnJlZShNaW5uZXRCeXRlcyosIEpTUnVudGltZSopOwppbnQgYmxvY2tfZnJvbWFycmF5YnVmZmVyKE1pbm5ldEJ5dGVzKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYmxvY2tfdG9hcnJheWJ1ZmZlcihNaW5uZXRCeXRlcyosIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3Rvc3RyaW5nKE1pbm5ldEJ5dGVzIGNvbnN0KiwgSlNDb250ZXh0Kik7CnN0YXRpYyBpbmxpbmUgTWlubmV0Qnl0ZXMgYmxvY2tfZnJvbWpzKCBKU0J1ZmZlciBidWYpIHsKICBNaW5uZXRCeXRlcyByZXQ9eyBidWYuZGF0YSwgYnVmLmRhdGErYnVmLnNpemUgfTsKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJsb2NrX2dyb3coTWlubmV0Qnl0ZXMqIGJsaywgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIGJsb2NrX3JlYWxsb2MoYmxrLCBibG9ja19TSVpFKGJsaykgKyBzaXplLCBjdHgpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldEJ5dGVzCmJsb2NrX21vdmUoTWlubmV0Qnl0ZXMqIGJsaykgewogIE1pbm5ldEJ5dGVzIHJldCA9IHtibGstPnN0YXJ0LCBibGstPmVuZH07CiAgYmxrLT5zdGFydCA9IDA7CiAgYmxrLT5lbmQgPSAwOwogIHJldHVybiByZXQ7Cn0KCnR5cGVkZWYgdW5pb24gYnl0ZV9idWZmZXIgewogIHN0cnVjdCB7CiAgICB1aW50OF90ICpzdGFydCwgKmVuZCwgKnJlYWQsICp3cml0ZSwgKmFsbG9jOwogIH07CiAgTWlubmV0Qnl0ZXMgYmxvY2s7Cn0gTWlubmV0QnVmZmVyOwoKI2RlZmluZSBCVUZGRVIoYnVmKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyBcCiAgICB7ICh1aW50OF90KikoYnVmKSArIExXU19QUkUsICh1aW50OF90KikoYnVmKSArIHNpemVvZihidWYpIC0gMSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgMCB9IFwKICB9CgojZGVmaW5lIEJVRkZFUl8wKCkgXAogIChNaW5uZXRCdWZmZXIpIHsgXAogICAgeyAwLCAwLCAwLCAwLCAwIH0gXAogIH0KCiNkZWZpbmUgQlVGRkVSX04oYnVmLCBuKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyBcCiAgICB7ICh1aW50OF90KikoYnVmKSwgKHVpbnQ4X3QqKShidWYpICsgKG4pLCAodWludDhfdCopKGJ1ZiksICh1aW50OF90KikoYnVmKSwgMCB9IFwKICB9CgojZGVmaW5lIGJ1ZmZlcl9BVkFJTChiKSAocHRyZGlmZl90KSgoYiktPmVuZCAtIChiKS0+d3JpdGUpCiNkZWZpbmUgYnVmZmVyX0JZVEVTKGIpIChwdHJkaWZmX3QpKChiKS0+d3JpdGUgLSAoYiktPnN0YXJ0KQojZGVmaW5lIGJ1ZmZlcl9SRU1BSU4oYikgKHB0cmRpZmZfdCkoKGIpLT53cml0ZSAtIChiKS0+cmVhZCkKI2RlZmluZSBidWZmZXJfSEVBRChiKSAoc2l6ZV90KSgoYiktPndyaXRlIC0gKGIpLT5zdGFydCkKI2RlZmluZSBidWZmZXJfVEFJTChiKSAoc2l6ZV90KSgoYiktPnJlYWQgLSAoYiktPnN0YXJ0KQojZGVmaW5lIGJ1ZmZlcl9BTExPQyhiKSAodm9pZCopKChiKS0+YWxsb2MpCgojZGVmaW5lIGJ1ZmZlcl9CRUdJTihiKSBibG9ja19CRUdJTigmKGIpLT5ibG9jaykKI2RlZmluZSBidWZmZXJfRU5EKGIpIGJsb2NrX0VORCgmKGIpLT5ibG9jaykKI2RlZmluZSBidWZmZXJfU0laRShiKSBibG9ja19TSVpFKCYoYiktPmJsb2NrKQoKI2RlZmluZSBidWZmZXJfemVybyhiKSBtZW1zZXQoKGIpLCAwLCBzaXplb2YoTWlubmV0QnVmZmVyKSkKCnZvaWQgYnVmZmVyX2luaXQoTWlubmV0QnVmZmVyKiwgdWludDhfdCosIHNpemVfdCk7CnVpbnQ4X3QqIGJ1ZmZlcl9hbGxvYyhNaW5uZXRCdWZmZXIqLCBzaXplX3QsIEpTQ29udGV4dCopOwpzc2l6ZV90IGJ1ZmZlcl9hcHBlbmQoTWlubmV0QnVmZmVyKiwgY29uc3Qgdm9pZCosIHNpemVfdCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIGJ1ZmZlcl9mcmVlKE1pbm5ldEJ1ZmZlciosIEpTUnVudGltZSopOwpCT09MIGJ1ZmZlcl93cml0ZShNaW5uZXRCdWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90KTsKaW50IGJ1ZmZlcl92cHJpbnRmKE1pbm5ldEJ1ZmZlciosIGNvbnN0IGNoYXIqLCB2YV9saXN0KTsKaW50IGJ1ZmZlcl9wcmludGYoTWlubmV0QnVmZmVyKiwgY29uc3QgY2hhciosIC4uLik7CnVpbnQ4X3QqIGJ1ZmZlcl9yZWFsbG9jKE1pbm5ldEJ1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbWFycmF5YnVmZmVyKE1pbm5ldEJ1ZmZlciosIEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbXZhbHVlKE1pbm5ldEJ1ZmZlciosIEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYnVmZmVyX3Rvc3RyaW5nKE1pbm5ldEJ1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwpzaXplX3QgYnVmZmVyX2VzY2FwZShNaW5uZXRCdWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CmNoYXIqIGJ1ZmZlcl9lc2NhcGVkKE1pbm5ldEJ1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwp2b2lkIGJ1ZmZlcl9maW5hbGl6ZXIoSlNSdW50aW1lKiwgdm9pZCosIHZvaWQqKTsKSlNWYWx1ZSBidWZmZXJfdG9hcnJheWJ1ZmZlcihNaW5uZXRCdWZmZXIqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBidWZmZXJfdG9hcnJheWJ1ZmZlcl9zaXplKE1pbm5ldEJ1ZmZlciogYnVmLCBzaXplX3QqIHN6LCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgYnVmZmVyX2R1bXAoY29uc3QgY2hhciosIE1pbm5ldEJ1ZmZlciBjb25zdCopOwpCT09MIGJ1ZmZlcl9jbG9uZShNaW5uZXRCdWZmZXIqLCBjb25zdCBNaW5uZXRCdWZmZXIqLCBKU0NvbnRleHQqKTsKdWludDhfdCogYnVmZmVyX3NraXAoTWlubmV0QnVmZmVyKiwgc2l6ZV90KTsKQk9PTCBidWZmZXJfcHV0Y2hhcihNaW5uZXRCdWZmZXIqLCBjaGFyKTsKTWlubmV0QnVmZmVyIGJ1ZmZlcl9tb3ZlKE1pbm5ldEJ1ZmZlciopOwp1aW50OF90KiBidWZmZXJfZ3JvdyhNaW5uZXRCdWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KTsKCnN0YXRpYyBpbmxpbmUgdm9pZApidWZmZXJfcmVzZXQoTWlubmV0QnVmZmVyKiBidWYpIHsKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0OwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0Owp9CgovKnN0YXRpYyBpbmxpbmUgdWludDhfdCoKYnVmZmVyX2dyb3coTWlubmV0QnVmZmVyKiBidWYsIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19ncm93KCZidWYtPmJsb2NrLCBzaXplLCBjdHgpOwp9Ki8KCiNlbmRpZiAvKiBNSU5ORVRfQlVGRkVSX0ggKi8KAAAAAAAAAAAHDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZgMAAAAAAACZAwAAAAAAAAAAAAAAAPC/"
				],
				[
					273,
					1,
					"cut",
					null,
					"AQAAAIUAAAAAAAAAhQAAAAAAAAAUAAAAI2luY2x1ZGUgPGN1dGlscy5oPgo",
					"AQAAAAAAAAABAAAAhQAAAAAAAACZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					274,
					2,
					"paste",
					null,
					"AgAAAIUAAAAAAAAAmQAAAAAAAAAAAAAAmQAAAAAAAACtAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQAAAAAAAACFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					281,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACiAAAAAAAAAAsAAAAgPGN1dGlscy5oPg",
					"AQAAAAAAAAABAAAAoQAAAAAAAACsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					282,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAKIAAAAAAAAApAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogAAAAAAAACiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					283,
					1,
					"insert",
					{
						"characters": "jsutils.h"
					},
					"CQAAAKMAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAAClAAAAAAAAAAAAAAClAAAAAAAAAKYAAAAAAAAAAAAAAKYAAAAAAAAApwAAAAAAAAAAAAAApwAAAAAAAACoAAAAAAAAAAAAAACoAAAAAAAAAKkAAAAAAAAAAAAAAKkAAAAAAAAAqgAAAAAAAAAAAAAAqgAAAAAAAACrAAAAAAAAAAAAAACrAAAAAAAAAKwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowAAAAAAAACjAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-buffer.c",
			"settings":
			{
				"buffer_size": 7607,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "minnet-request.h",
			"settings":
			{
				"buffer_size": 2312,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "minnet-generator.h",
			"settings":
			{
				"buffer_size": 1022,
				"line_ending": "Unix"
			}
		},
		{
			"file": "minnet-ringbuffer.c",
			"settings":
			{
				"buffer_size": 7902,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"left_delete",
					null,
					"AQAAAJwWAAAAAAAAnBYAAAAAAAAOAAAAICBzaXplX3QgbGVuOwo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnBYAAAAAAACqFgAAAAAAAAAAAAAAAAAA"
				],
				[
					13,
					1,
					"left_delete",
					null,
					"AQAAAJwWAAAAAAAAnBYAAAAAAAAQAAAAICB1aW50OF90KiBwdHI7Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnBYAAAAAAACsFgAAAAAAAAAAAAAAAAAA"
				],
				[
					16,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnBYAAAAAAACcFgAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnBYAAAAAAACcFgAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"revert",
					null,
					"BQAAAAAAAAAAAAAAAAAAAAAAAADZHAAAI2luY2x1ZGUgIm1pbm5ldC1yaW5nYnVmZmVyLmgiCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KClRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3JpbmdidWZmZXJfY2xhc3NfaWQ7ClRIUkVBRF9MT0NBTCBKU1ZhbHVlIG1pbm5ldF9yaW5nYnVmZmVyX3Byb3RvLCBtaW5uZXRfcmluZ2J1ZmZlcl9jdG9yOwoKdm9pZApyaW5nYnVmZmVyX2R1bXAoc3RydWN0IHJpbmdidWZmZXIgY29uc3QqIHN0cm0pIHsKICAvKiAgZnByaW50ZihzdGRlcnIsICJcbk1pbm5ldFJpbmdidWZmZXIge1xuXHRyZWZfY291bnQgPSAlenUiLCBzdHJtLT5yZWZfY291bnQpOwogICAgYnVmZmVyX2R1bXAoImJ1ZmZlciIsICZzdHJtLT5idWZmZXIpOwogICAgZnB1dHMoIlxufSIsIHN0ZGVycik7CiAgICBmZmx1c2goc3RkZXJyKTsqLwp9CgpzdGF0aWMgdm9pZApyaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCh2b2lkKiBlbGVtZW50KSB7fQoKdm9pZApyaW5nYnVmZmVyX2luaXQoc3RydWN0IHJpbmdidWZmZXIqIHN0cm0sIHNpemVfdCBlbGVtZW50X2xlbiwgc2l6ZV90IGNvdW50LCBjb25zdCBjaGFyKiB0eXBlLCBzaXplX3QgdHlwZWxlbikgewogIC8vICBtZW1zZXQoc3RybSwgMCwgc2l6ZW9mKCpzdHJtKSk7CgogIGlmKHR5cGUpCiAgICBwc3RyY3B5KHN0cm0tPnR5cGUsIE1JTih0eXBlbGVuICsgMSwgc2l6ZW9mKHN0cm0tPnR5cGUpKSwgdHlwZSk7CgogIHN0cm0tPnJpbmcgPSBsd3NfcmluZ19jcmVhdGUoZWxlbWVudF9sZW4sIGNvdW50LCByaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCk7Cn0KCnN0cnVjdCByaW5nYnVmZmVyKgpyaW5nYnVmZmVyX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCByaW5nYnVmZmVyKiBzdHJtOwoKICBpZigoc3RybSA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2YoTWlubmV0UmluZ2J1ZmZlcikpKSkKICAgIHN0cm0tPnJlZl9jb3VudCA9IDE7CiAgcmV0dXJuIHN0cm07Cn0KCnN0cnVjdCByaW5nYnVmZmVyKgpyaW5nYnVmZmVyX25ldzIoc2l6ZV90IGVsZW1lbnRfbGVuLCBzaXplX3QgY291bnQsIEpTQ29udGV4dCogY3R4KSB7CiAgTWlubmV0UmluZ2J1ZmZlciogc3RybTsKCiAgaWYoKHN0cm0gPSByaW5nYnVmZmVyX25ldyhjdHgpKSkgewogICAgY29uc3QgY2hhciogdHlwZSA9ICJhcHBsaWNhdGlvbi9iaW5hcnkiOwogICAgcmluZ2J1ZmZlcl9pbml0KHN0cm0sIGVsZW1lbnRfbGVuLCBjb3VudCwgdHlwZSwgc3RybGVuKHR5cGUpKTsKICB9CiAgcmV0dXJuIHN0cm07Cn0KCnNpemVfdApyaW5nYnVmZmVyX2luc2VydChzdHJ1Y3QgcmluZ2J1ZmZlciogc3RybSwgY29uc3Qgdm9pZCogcHRyLCBzaXplX3QgbikgewogIGFzc2VydChzdHJtLT5yaW5nKTsKCiAgcmV0dXJuIGx3c19yaW5nX2luc2VydChzdHJtLT5yaW5nLCBwdHIsIG4pOwp9CgpzaXplX3QKcmluZ2J1ZmZlcl9jb25zdW1lKHN0cnVjdCByaW5nYnVmZmVyKiBzdHJtLCB2b2lkKiBwdHIsIHNpemVfdCBuKSB7CiAgYXNzZXJ0KHN0cm0tPnJpbmcpOwoKICByZXR1cm4gbHdzX3JpbmdfY29uc3VtZShzdHJtLT5yaW5nLCAwLCBwdHIsIG4pOwp9CgpzaXplX3QKcmluZ2J1ZmZlcl9za2lwKHN0cnVjdCByaW5nYnVmZmVyKiBzdHJtLCBzaXplX3QgbikgewogIGFzc2VydChzdHJtLT5yaW5nKTsKCiAgcmV0dXJuIGx3c19yaW5nX2NvbnN1bWUoc3RybS0+cmluZywgMCwgMCwgbik7Cn0KCmNvbnN0IHZvaWQqCnJpbmdidWZmZXJfbmV4dChzdHJ1Y3QgcmluZ2J1ZmZlciogc3RybSkgewogIGFzc2VydChzdHJtLT5yaW5nKTsKICByZXR1cm4gbHdzX3JpbmdfZ2V0X2VsZW1lbnQoc3RybS0+cmluZywgMCk7Cn0KCnNpemVfdApyaW5nYnVmZmVyX3NpemUoc3RydWN0IHJpbmdidWZmZXIqIHN0cm0pIHsKICBhc3NlcnQoc3RybS0+cmluZyk7CiAgcmV0dXJuIGx3c19yaW5nX2dldF9jb3VudF93YWl0aW5nX2VsZW1lbnRzKHN0cm0tPnJpbmcsIDApOwp9CgpzaXplX3QKcmluZ2J1ZmZlcl9hdmFpbChzdHJ1Y3QgcmluZ2J1ZmZlciogc3RybSkgewogIGFzc2VydChzdHJtLT5yaW5nKTsKICByZXR1cm4gbHdzX3JpbmdfZ2V0X2NvdW50X2ZyZWVfZWxlbWVudHMoc3RybS0+cmluZyk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl96ZXJvKHN0cnVjdCByaW5nYnVmZmVyKiBzdHJtKSB7CiAgbHdzX3JpbmdfZGVzdHJveShzdHJtLT5yaW5nKTsKICBtZW1zZXQoc3RybSwgMCwgc2l6ZW9mKE1pbm5ldFJpbmdidWZmZXIpKTsKfQoKdm9pZApyaW5nYnVmZmVyX2ZyZWUoc3RydWN0IHJpbmdidWZmZXIqIHN0cm0sIEpTUnVudGltZSogcnQpIHsKICBsd3NfcmluZ19kZXN0cm95KHN0cm0tPnJpbmcpOwogIGpzX2ZyZWVfcnQocnQsIHN0cm0pOwp9CgpKU1ZhbHVlCm1pbm5ldF9yaW5nYnVmZmVyX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHByb3RvLCBvYmo7CiAgTWlubmV0UmluZ2J1ZmZlciogc3RybTsKCiAgaWYoIShzdHJtID0gcmluZ2J1ZmZlcl9uZXcoY3R4KSkpCiAgICByZXR1cm4gSlNfVGhyb3dPdXRPZk1lbW9yeShjdHgpOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgcHJvdG8gPSBKU19EdXBWYWx1ZShjdHgsIG1pbm5ldF9yaW5nYnVmZmVyX3Byb3RvKTsKCiAgb2JqID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHByb3RvLCBtaW5uZXRfcmluZ2J1ZmZlcl9jbGFzc19pZCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgcHJvdG8pOwogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICBnb3RvIGZhaWw7CgogIHdoaWxlKGFyZ2MgPiAwKSB7CgogICAgaWYoSlNfSXNTdHJpbmcoYXJndlswXSkpIHsKICAgICAgY29uc3QgY2hhciogdHlwZTsKICAgICAgdHlwZSA9IEpTX1RvQ1N0cmluZyhjdHgsIGFyZ3ZbMF0pOwogICAgICBwc3RyY3B5KHN0cm0tPnR5cGUsIHNpemVvZihzdHJtLT50eXBlKSwgdHlwZSk7CiAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgdHlwZSk7CiAgICAgIGFyZ2MgLT0gMTsKICAgICAgYXJndiArPSAxOwoKICAgIH0gZWxzZSBpZihhcmdjID49IDIgJiYgSlNfSXNOdW1iZXIoYXJndlswXSkgJiYgSlNfSXNOdW1iZXIoYXJndlsxXSkpIHsKICAgICAgdWludDMyX3QgZWxlbWVudF9zaXplID0gMCwgY291bnQgPSAwOwogICAgICBKU19Ub1VpbnQzMihjdHgsICZlbGVtZW50X3NpemUsIGFyZ3ZbMF0pOwogICAgICBKU19Ub1VpbnQzMihjdHgsICZjb3VudCwgYXJndlsxXSk7CgogICAgICBzdHJtLT5yaW5nID0gbHdzX3JpbmdfY3JlYXRlKGVsZW1lbnRfc2l6ZSwgY291bnQsIHJpbmdidWZmZXJfZGVzdHJveV9lbGVtZW50KTsKCiAgICAgIGFyZ2MgLT0gMjsKICAgICAgYXJndiArPSAyOwogICAgfSBlbHNlIHsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICBKU19TZXRPcGFxdWUob2JqLCBzdHJtKTsKCiAgcmV0dXJuIG9iajsKCmZhaWw6CiAganNfZnJlZShjdHgsIHN0cm0pOwogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKSlNWYWx1ZQptaW5uZXRfcmluZ2J1ZmZlcl9uZXcoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIHR5cGUsIHNpemVfdCB0eXBlbGVuLCBjb25zdCB2b2lkKiB4LCBzaXplX3QgbikgewogIHN0cnVjdCByaW5nYnVmZmVyKiBzdHJtOwoKICBpZighKHN0cm0gPSByaW5nYnVmZmVyX25ldyhjdHgpKSkKICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIC8vIGJ1ZmZlcl9hbGxvYygmc3RybS0+YnVmZmVyLCBuID8gbiA6IDEwMjQsIGN0eCk7CiAgLy8gcmluZ2J1ZmZlcl9pbml0KHN0cm0sIHgsbiwgdHlwZSwgdHlwZWxlbik7CgogIHJldHVybiBtaW5uZXRfcmluZ2J1ZmZlcl93cmFwKGN0eCwgc3RybSk7Cn0KCkpTVmFsdWUKbWlubmV0X3JpbmdidWZmZXJfd3JhcChKU0NvbnRleHQqIGN0eCwgc3RydWN0IHJpbmdidWZmZXIqIHN0cm0pIHsKICBKU1ZhbHVlIHJldCA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBtaW5uZXRfcmluZ2J1ZmZlcl9wcm90bywgbWlubmV0X3JpbmdidWZmZXJfY2xhc3NfaWQpOwoKICBpZihKU19Jc0V4Y2VwdGlvbihyZXQpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgSlNfU2V0T3BhcXVlKHJldCwgc3RybSk7CgogICsrc3RybS0+cmVmX2NvdW50OwoKICByZXR1cm4gcmV0Owp9CgplbnVtIHsgUklOR0JVRkZFUl9UWVBFLCBSSU5HQlVGRkVSX0xFTkdUSCwgUklOR0JVRkZFUl9BVkFJTCwgUklOR0JVRkZFUl9CVUZGRVIsIFJJTkdCVUZGRVJfVEVYVCB9OwoKc3RhdGljIEpTVmFsdWUKbWlubmV0X3JpbmdidWZmZXJfZ2V0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBtYWdpYykgewogIE1pbm5ldFJpbmdidWZmZXIqIHN0cm07CiAgaWYoIShzdHJtID0gSlNfR2V0T3BhcXVlMihjdHgsIHRoaXNfdmFsLCBtaW5uZXRfcmluZ2J1ZmZlcl9jbGFzc19pZCkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgc3dpdGNoKG1hZ2ljKSB7CgogICAgY2FzZSBSSU5HQlVGRkVSX1RZUEU6IHsKICAgICAgcmV0ID0gSlNfTmV3U3RyaW5nTGVuKGN0eCwgc3RybS0+dHlwZSwgc3RybGVuKHN0cm0tPnR5cGUpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJJTkdCVUZGRVJfTEVOR1RIOiB7CiAgICAgIHJldCA9IEpTX05ld1VpbnQzMihjdHgsIGx3c19yaW5nX2dldF9jb3VudF93YWl0aW5nX2VsZW1lbnRzKHN0cm0tPnJpbmcsIDApKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJJTkdCVUZGRVJfQVZBSUw6IHsKICAgICAgcmV0ID0gSlNfTmV3VWludDMyKGN0eCwgbHdzX3JpbmdfZ2V0X2NvdW50X2ZyZWVfZWxlbWVudHMoc3RybS0+cmluZykpOwogICAgICBicmVhazsKICAgIH0KICAgICAgLyogICAgY2FzZSBSSU5HQlVGRkVSX0JVRkZFUjogewogICAgICAgICAgICByZXQgPSBidWZmZXJfSEVBRCgmc3RybS0+YnVmZmVyKSA/IGJ1ZmZlcl90b2FycmF5YnVmZmVyKCZzdHJtLT5idWZmZXIsIGN0eCkgOiBKU19OVUxMOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICAgIGNhc2UgUklOR0JVRkZFUl9URVhUOiB7CiAgICAgICAgICAgIHJldCA9IGJ1ZmZlcl9IRUFEKCZzdHJtLT5idWZmZXIpID8gYnVmZmVyX3Rvc3RyaW5nKCZzdHJtLT5idWZmZXIsIGN0eCkgOiBKU19OVUxMOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0qLwogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQptaW5uZXRfcmluZ2J1ZmZlcl9pdGVyYXRvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIHJldHVybiBKU19EdXBWYWx1ZShjdHgsIHRoaXNfdmFsKTsKfQoKc3RhdGljIEpTVmFsdWUKbWlubmV0X3JpbmdidWZmZXJfbmV4dChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgQk9PTCogcGRvbmUsIGludCBtYWdpYykgewogIE1pbm5ldFJpbmdidWZmZXIqIHN0cm07CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoc3RybSA9IG1pbm5ldF9yaW5nYnVmZmVyX2RhdGEoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKICAvKgogICAgbGVuID0gYnVmZmVyX1JFTUFJTigmc3RybS0+YnVmZmVyKTsKICAgIHB0ciA9IHN0cm0tPmJ1ZmZlci5yZWFkOwoKICAgIGlmKGFyZ2MgPj0gMSkgewogICAgICB1aW50MzJfdCBuID0gbGVuOwogICAgICBKU19Ub1VpbnQzMihjdHgsICZuLCBhcmd2WzBdKTsKICAgICAgaWYobiA8IGxlbikKICAgICAgICBsZW4gPSBuOwogICAgfQoKICAgIGlmKGxlbikgewogICAgICByZXQgPSBKU19OZXdTdHJpbmdMZW4oY3R4LCAoY29uc3QgY2hhciopcHRyLCBsZW4pOwogICAgICBzdHJtLT5idWZmZXIucmVhZCArPSBsZW47CiAgICB9IGVsc2UgewogICAgICAqcGRvbmUgPSBUUlVFOwogICAgfSovCgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyB2b2lkCm1pbm5ldF9yaW5nYnVmZmVyX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCBKU1ZhbHVlIHZhbCkgewogIE1pbm5ldFJpbmdidWZmZXIqIHN0cm0gPSBKU19HZXRPcGFxdWUodmFsLCBtaW5uZXRfcmluZ2J1ZmZlcl9jbGFzc19pZCk7CiAgaWYoc3RybSAmJiAtLXN0cm0tPnJlZl9jb3VudCA9PSAwKSB7CgogICAgLy8gYnVmZmVyX2ZyZWUoJnN0cm0tPmJ1ZmZlciwgcnQpOwoKICAgIGpzX2ZyZWVfcnQocnQsIHN0cm0pOwogIH0KfQoKSlNDbGFzc0RlZiBtaW5uZXRfcmluZ2J1ZmZlcl9jbGFzcyA9IHsKICAgICJNaW5uZXRSaW5nYnVmZmVyIiwKICAgIC5maW5hbGl6ZXIgPSBtaW5uZXRfcmluZ2J1ZmZlcl9maW5hbGl6ZXIsCn07Cgpjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfcmluZ2J1ZmZlcl9wcm90b19mdW5jc1tdID0gewogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoInR5cGUiLCBtaW5uZXRfcmluZ2J1ZmZlcl9nZXQsIDAsIFJJTkdCVUZGRVJfVFlQRSwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJsZW5ndGgiLCBtaW5uZXRfcmluZ2J1ZmZlcl9nZXQsIDAsIFJJTkdCVUZGRVJfTEVOR1RILCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImF2YWlsIiwgbWlubmV0X3JpbmdidWZmZXJfZ2V0LCAwLCBSSU5HQlVGRkVSX0FWQUlMLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfSVRFUkFUT1JfTkVYVF9ERUYoIm5leHQiLCAwLCBtaW5uZXRfcmluZ2J1ZmZlcl9uZXh0LCAwKSwKICAgIEpTX0NGVU5DX0RFRigiW1N5bWJvbC5pdGVyYXRvcl0iLCAwLCBtaW5uZXRfcmluZ2J1ZmZlcl9pdGVyYXRvciksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigiYnVmZmVyIiwgbWlubmV0X3JpbmdidWZmZXJfZ2V0LCAwLCBSSU5HQlVGRkVSX0JVRkZFUiwgMCksCiAgICBKU19QUk9QX1NUUklOR19ERUYoIltTeW1ib2wudG9TdHJpbmdUYWddIiwgIk1pbm5ldFJpbmdidWZmZXIiLCBKU19QUk9QX0NPTkZJR1VSQUJMRSksCn07Cgpjb25zdCBzaXplX3QgbWlubmV0X3JpbmdidWZmZXJfcHJvdG9fZnVuY3Nfc2l6ZSA9IGNvdW50b2YobWlubmV0X3JpbmdidWZmZXJfcHJvdG9fZnVuY3MpOwoAAAAAAAAAANkcAAAAAAAAAAAAAAAAAAAAAAAA2RwAAAAAAAAAAAAAAAAAAAAAAADZHAAAAAAAAAAAAAAAAAAAAAAAANkcAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnBYAAAAAAACcFgAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"cut",
					null,
					"AQAAAPADAAAAAAAA8AMAAAAAAAAdAQAACnN0cnVjdCByaW5nYnVmZmVyKgpyaW5nYnVmZmVyX25ldzIoc2l6ZV90IGVsZW1lbnRfbGVuLCBzaXplX3QgY291bnQsIEpTQ29udGV4dCogY3R4KSB7CiAgTWlubmV0UmluZ2J1ZmZlciogc3RybTsKCiAgaWYoKHN0cm0gPSByaW5nYnVmZmVyX25ldyhjdHgpKSkgewogICAgY29uc3QgY2hhciogdHlwZSA9ICJhcHBsaWNhdGlvbi9iaW5hcnkiOwogICAgcmluZ2J1ZmZlcl9pbml0KHN0cm0sIGVsZW1lbnRfbGVuLCBjb3VudCwgdHlwZSwgc3RybGVuKHR5cGUpKTsKICB9CiAgcmV0dXJuIHN0cm07Cn0K",
					"AQAAAAAAAAABAAAA8AMAAAAAAAANBQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					2,
					"paste",
					null,
					"AgAAAPADAAAAAAAADQUAAAAAAAAAAAAADQUAAAAAAAAqBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AMAAAAAAADwAwAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "vboi"
					},
					"BQAAAPEDAAAAAAAA8gMAAAAAAAAAAAAA8gMAAAAAAADyAwAAAAAAABIAAABzdHJ1Y3QgcmluZ2J1ZmZlciryAwAAAAAAAPMDAAAAAAAAAAAAAPMDAAAAAAAA9AMAAAAAAAAAAAAA9AMAAAAAAAD1AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QMAAAAAAAADBAAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					3,
					"left_delete",
					null,
					"AwAAAPQDAAAAAAAA9AMAAAAAAAABAAAAafMDAAAAAAAA8wMAAAAAAAABAAAAb/IDAAAAAAAA8gMAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAA9QMAAAAAAAD1AwAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "oid"
					},
					"AwAAAPIDAAAAAAAA8wMAAAAAAAAAAAAA8wMAAAAAAAD0AwAAAAAAAAAAAAD0AwAAAAAAAPUDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gMAAAAAAADyAwAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					3,
					"left_delete",
					null,
					"AwAAAAMEAAAAAAAAAwQAAAAAAAABAAAAdwIEAAAAAAAAAgQAAAAAAAABAAAAZQEEAAAAAAAAAQQAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAABAQAAAAAAAAEBAAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": "init"
					},
					"BAAAAAEEAAAAAAAAAgQAAAAAAAAAAAAAAgQAAAAAAAADBAAAAAAAAAAAAAADBAAAAAAAAAQEAAAAAAAAAAAAAAQEAAAAAAAABQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"paste",
					null,
					"AQAAAAcEAAAAAAAAHwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwQAAAAAAAAHBAAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAD8EAAAAAAAAQAQAAAAAAAAAAAAAQAQAAAAAAABABAAAAAAAABAAAAAsIEpTQ29udGV4dCogY3R4",
					"AQAAAAAAAAABAAAAPwQAAAAAAABPBAAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAEQEAAAAAAAARQQAAAAAAAAAAAAARQQAAAAAAABFBAAAAAAAAD8AAAAgIE1pbm5ldFJpbmdidWZmZXIqIHN0cm07CgogIGlmKChzdHJtID0gcmluZ2J1ZmZlcl9uZXcoY3R4KSkpIHs",
					"AQAAAAAAAAABAAAAgwQAAAAAAABEBAAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAALcEAAAAAAAAuAQAAAAAAAAAAAAAuAQAAAAAAAC4BAAAAAAAABEAAAAgfQogIHJldHVybiBzdHJtOw",
					"AQAAAAAAAAABAAAAtwQAAAAAAADIBAAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "q"
					},
					"AQAAAJMFAAAAAAAAlAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwUAAAAAAACTBQAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFMFAAAAAAAAVAUAAAAAAAAAAAAAVAUAAAAAAABUBQAAAAAAAC0AAAAgICAgY29uc3QgY2hhciogdHlwZSA9ICJhcHBsaWNhdGlvbi9iaW5hcnkiOwo",
					"AQAAAAAAAAABAAAAUwUAAAAAAACABQAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAIEFAAAAAAAAggUAAAAAAAAAAAAAggUAAAAAAACCBQAAAAAAABQAAAAsIHR5cGUsIHN0cmxlbih0eXBlKQ",
					"AQAAAAAAAAABAAAAgQUAAAAAAACVBQAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAGcFAAAAAAAAaAUAAAAAAAAAAAAAaAUAAAAAAABoBQAAAAAAAAEAAABx",
					"AQAAAAAAAAABAAAAZwUAAAAAAABoBQAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJUJAAAAAAAAlgkAAAAAAAAAAAAAlgkAAAAAAACYCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQkAAAAAAACVCQAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"paste",
					null,
					"AQAAAJgJAAAAAAAApwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAkAAAAAAACYCQAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKcJAAAAAAAAqQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwkAAAAAAACnCQAAAAAAAAAAAAAAAPC/"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAKgJAAAAAAAAqQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAkAAAAAAACoCQAAAAAAAAAAAAAAAPC/"
				],
				[
					268,
					1,
					"left_delete",
					null,
					"AQAAAKgJAAAAAAAAqAkAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAqQkAAAAAAACpCQAAAAAAAAAAAAAAAPC/"
				],
				[
					269,
					1,
					"insert",
					{
						"characters": "strm"
					},
					"BAAAAKgJAAAAAAAAqQkAAAAAAAAAAAAAqQkAAAAAAACqCQAAAAAAAAAAAACqCQAAAAAAAKsJAAAAAAAAAAAAAKsJAAAAAAAArAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAkAAAAAAACoCQAAAAAAAAAAAAAAAPC/"
				],
				[
					271,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAK0JAAAAAAAArgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQkAAAAAAACtCQAAAAAAAAAAAAAAAPC/"
				],
				[
					275,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAK8JAAAAAAAAsAkAAAAAAAAAAAAAsAkAAAAAAACwCQAAAAAAAB8AAAAgIGx3c19yaW5nX2Rlc3Ryb3koc3RybS0+cmluZyk7",
					"AQAAAAAAAAABAAAArwkAAAAAAADOCQAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					2,
					"left_delete",
					null,
					"AgAAAK8JAAAAAAAArwkAAAAAAAABAAAACq4JAAAAAAAArgkAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAsAkAAAAAAACwCQAAAAAAAAAAAAAAAPC/"
				],
				[
					298,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADoDAAAAAAAAOwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgMAAAAAAAA6AwAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"paste",
					null,
					"AQAAADoDAAAAAAAATAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgMAAAAAAAA6AwAAAAAAAAAAAAAAAAAA"
				],
				[
					303,
					1,
					"cut",
					null,
					"AQAAADoDAAAAAAAAOgMAAAAAAAATAAAAcHRocmVhZF9tdXRleF9pbml0Cg",
					"AQAAAAAAAAABAAAATQMAAAAAAAA6AwAAAAAAAAAAAAAAAAAA"
				],
				[
					306,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BwAAAN4DAAAAAAAA3wMAAAAAAAAAAAAA3wMAAAAAAADjAwAAAAAAAAAAAADfAwAAAAAAAN8DAAAAAAAABAAAACAgICDfAwAAAAAAAOEDAAAAAAAAAAAAAOEDAAAAAAAA4gMAAAAAAAAAAAAA4gMAAAAAAADkAwAAAAAAAAAAAADfAwAAAAAAAN8DAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAA3gMAAAAAAADeAwAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					1,
					"paste",
					null,
					"AQAAAOIDAAAAAAAA9QMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gMAAAAAAADiAwAAAAAAAAAAAAAAAPC/"
				],
				[
					309,
					1,
					"cut",
					null,
					"AQAAAN8DAAAAAAAA3wMAAAAAAAAWAAAACiAgcHRocmVhZF9tdXRleF9pbml0Cg",
					"AQAAAAAAAAABAAAA9QMAAAAAAADfAwAAAAAAAAAAAAAAAAAA"
				],
				[
					314,
					1,
					"paste",
					null,
					"AQAAADoDAAAAAAAAUAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgMAAAAAAAA6AwAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAE8DAAAAAAAAUQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwMAAAAAAABPAwAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": "&strm->"
					},
					"BwAAAFADAAAAAAAAUQMAAAAAAAAAAAAAUQMAAAAAAABSAwAAAAAAAAAAAABSAwAAAAAAAFMDAAAAAAAAAAAAAFMDAAAAAAAAVAMAAAAAAAAAAAAAVAMAAAAAAABVAwAAAAAAAAAAAABVAwAAAAAAAFYDAAAAAAAAAAAAAFYDAAAAAAAAVwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAMAAAAAAABQAwAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"paste",
					null,
					"AQAAAFcDAAAAAAAAYAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwMAAAAAAABXAwAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					1,
					"insert",
					{
						"characters": ",."
					},
					"AgAAAGADAAAAAAAAYQMAAAAAAAAAAAAAYQMAAAAAAABiAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAMAAAAAAABgAwAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGIDAAAAAAAAYwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgMAAAAAAABiAwAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					2,
					"left_delete",
					null,
					"AgAAAGIDAAAAAAAAYgMAAAAAAAABAAAAIGEDAAAAAAAAYQMAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAYwMAAAAAAABjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGEDAAAAAAAAYgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQMAAAAAAABhAwAAAAAAAAAAAAAAAPC/"
				],
				[
					325,
					1,
					"paste",
					null,
					"AQAAAGIDAAAAAAAAewMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgMAAAAAAABiAwAAAAAAAAAAAAAAAPC/"
				],
				[
					327,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHwDAAAAAAAAfQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAMAAAAAAAB8AwAAAAAAAAAAAAAAAPC/"
				],
				[
					336,
					1,
					"left_delete",
					null,
					"AQAAAJYFAAAAAAAAlgUAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAAlwUAAAAAAACXBQAAAAAAAAAAAAAAAPC/"
				],
				[
					337,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAJYFAAAAAAAAlwUAAAAAAAAAAAAAlwUAAAAAAACZBQAAAAAAAAAAAACXBQAAAAAAAJcFAAAAAAAAAgAAACAglwUAAAAAAACbBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgUAAAAAAACWBQAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					2,
					"left_delete",
					null,
					"AwAAANAFAAAAAAAA0AUAAAAAAAABAAAAfZcFAAAAAAAAlwUAAAAAAAAEAAAAICAgIMoFAAAAAAAAygUAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAA0QUAAAAAAADRBQAAAAAAAAAAAAAAAEpA"
				],
				[
					346,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BgAAAEEGAAAAAAAAQgYAAAAAAAAAAAAAQgYAAAAAAABEBgAAAAAAAAAAAABEBgAAAAAAAEQGAAAAAAAAAQAAAApEBgAAAAAAAEUGAAAAAAAAAAAAAEUGAAAAAAAARwYAAAAAAAAAAAAAQgYAAAAAAABCBgAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAAQQYAAAAAAABCBgAAAAAAAAAAAAAAAPC/"
				],
				[
					352,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACwGAAAAAAAALQYAAAAAAAAAAAAARAYAAAAAAABEBgAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAALAYAAAAAAAAsBgAAAAAAAAAAAAAAAAAA"
				],
				[
					354,
					1,
					"insert",
					{
						"characters": "size_t"
					},
					"BgAAACwGAAAAAAAALQYAAAAAAAAAAAAALQYAAAAAAAAuBgAAAAAAAAAAAAAuBgAAAAAAAC8GAAAAAAAAAAAAAC8GAAAAAAAAMAYAAAAAAAAAAAAAMAYAAAAAAAAxBgAAAAAAAAAAAAAxBgAAAAAAADIGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAYAAAAAAAAsBgAAAAAAAAAAAAAAAAAA"
				],
				[
					355,
					1,
					"insert",
					{
						"characters": " ret;"
					},
					"BQAAADIGAAAAAAAAMwYAAAAAAAAAAAAAMwYAAAAAAAA0BgAAAAAAAAAAAAA0BgAAAAAAADUGAAAAAAAAAAAAADUGAAAAAAAANgYAAAAAAAAAAAAANgYAAAAAAAA3BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgYAAAAAAAAyBgAAAAAAAAAAAAAAAPC/"
				],
				[
					358,
					3,
					"right_delete",
					null,
					"AwAAAFUGAAAAAAAAVQYAAAAAAAABAAAAdVUGAAAAAAAAVQYAAAAAAAABAAAAclUGAAAAAAAAVQYAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAVQYAAAAAAABVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					359,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAFUGAAAAAAAAVgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQYAAAAAAABVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					362,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAHwGAAAAAAAAfQYAAAAAAAAAAAAAfQYAAAAAAAB+BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAYAAAAAAAB8BgAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAH0GAAAAAAAAfgYAAAAAAAAAAAAAfgYAAAAAAAB/BgAAAAAAAAAAAAB/BgAAAAAAAIAGAAAAAAAAAAAAAIAGAAAAAAAAgQYAAAAAAAAAAAAAgQYAAAAAAACCBgAAAAAAAAAAAACCBgAAAAAAAIMGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQYAAAAAAAB9BgAAAAAAAAAAAAAAAAAA"
				],
				[
					365,
					1,
					"insert",
					{
						"characters": " ret;"
					},
					"BQAAAIMGAAAAAAAAhAYAAAAAAAAAAAAAhAYAAAAAAACFBgAAAAAAAAAAAACFBgAAAAAAAIYGAAAAAAAAAAAAAIYGAAAAAAAAhwYAAAAAAAAAAAAAhwYAAAAAAACIBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwYAAAAAAACDBgAAAAAAAAAAAAAAAPC/"
				],
				[
					367,
					1,
					"insert",
					{
						"characters": "pthread_mutex_lock"
					},
					"EgAAAE8GAAAAAAAAUAYAAAAAAAAAAAAAUAYAAAAAAABRBgAAAAAAAAAAAABRBgAAAAAAAFIGAAAAAAAAAAAAAFIGAAAAAAAAUwYAAAAAAAAAAAAAUwYAAAAAAABUBgAAAAAAAAAAAABUBgAAAAAAAFUGAAAAAAAAAAAAAFUGAAAAAAAAVgYAAAAAAAAAAAAAVgYAAAAAAABXBgAAAAAAAAAAAABXBgAAAAAAAFgGAAAAAAAAAAAAAFgGAAAAAAAAWQYAAAAAAAAAAAAAWQYAAAAAAABaBgAAAAAAAAAAAABaBgAAAAAAAFsGAAAAAAAAAAAAAFsGAAAAAAAAXAYAAAAAAAAAAAAAXAYAAAAAAABdBgAAAAAAAAAAAABdBgAAAAAAAF4GAAAAAAAAAAAAAF4GAAAAAAAAXwYAAAAAAAAAAAAAXwYAAAAAAABgBgAAAAAAAAAAAABgBgAAAAAAAGEGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwYAAAAAAABPBgAAAAAAAAAAAAAA4GFA"
				],
				[
					368,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGEGAAAAAAAAYwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQYAAAAAAABhBgAAAAAAAAAAAAAAAPC/"
				],
				[
					370,
					1,
					"left_delete",
					null,
					"AQAAAGIGAAAAAAAAYgYAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAYwYAAAAAAABjBgAAAAAAAAAAAAAAAPC/"
				],
				[
					371,
					1,
					"insert",
					{
						"characters": "&strm->"
					},
					"BwAAAGIGAAAAAAAAYwYAAAAAAAAAAAAAYwYAAAAAAABkBgAAAAAAAAAAAABkBgAAAAAAAGUGAAAAAAAAAAAAAGUGAAAAAAAAZgYAAAAAAAAAAAAAZgYAAAAAAABnBgAAAAAAAAAAAABnBgAAAAAAAGgGAAAAAAAAAAAAAGgGAAAAAAAAaQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgYAAAAAAABiBgAAAAAAAAAAAAAAAPC/"
				],
				[
					372,
					1,
					"insert_completion",
					{
						"completion": "lock_ring",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "lock_ring"
					},
					"AQAAAGkGAAAAAAAAcgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQYAAAAAAABpBgAAAAAAAAAAAAAAAPC/"
				],
				[
					373,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAHIGAAAAAAAAcwYAAAAAAAAAAAAAcwYAAAAAAAB0BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgYAAAAAAAByBgAAAAAAAAAAAAAAAPC/"
				],
				[
					374,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHQGAAAAAAAAdQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAYAAAAAAAB0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					376,
					1,
					"cut",
					null,
					"AQAAAE8GAAAAAAAATwYAAAAAAAAmAAAAcHRocmVhZF9tdXRleF9sb2NrKCZzdHJtLT5sb2NrX3JpbmcpOwo",
					"AQAAAAAAAAABAAAAdQYAAAAAAABPBgAAAAAAAAAAAAAAAAAA"
				],
				[
					377,
					1,
					"paste",
					null,
					"AQAAAE8GAAAAAAAAdQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwYAAAAAAABPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					380,
					1,
					"paste",
					null,
					"AQAAAKIGAAAAAAAAyAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogYAAAAAAACiBgAAAAAAAAAAAAAAAPC/"
				],
				[
					383,
					1,
					"insert",
					{
						"characters": "uzn"
					},
					"AwAAALAGAAAAAAAAsQYAAAAAAAAAAAAAsQYAAAAAAACyBgAAAAAAAAAAAACyBgAAAAAAALMGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAYAAAAAAACwBgAAAAAAAAAAAAAAAPC/"
				],
				[
					384,
					2,
					"left_delete",
					null,
					"AgAAALIGAAAAAAAAsgYAAAAAAAABAAAAbrEGAAAAAAAAsQYAAAAAAAABAAAAeg",
					"AQAAAAAAAAABAAAAswYAAAAAAACzBgAAAAAAAAAAAAAAAPC/"
				],
				[
					385,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAALEGAAAAAAAAsgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQYAAAAAAACxBgAAAAAAAAAAAAAAAPC/"
				],
				[
					410,
					1,
					"paste",
					null,
					"AQAAADoHAAAAAAAAYAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgcAAAAAAAA6BwAAAAAAAAAAAAAAAPC/"
				],
				[
					422,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACYHAAAAAAAAJwcAAAAAAAAAAAAAJwcAAAAAAAApBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgcAAAAAAAAmBwAAAAAAAAAAAAAAAPC/"
				],
				[
					424,
					1,
					"insert",
					{
						"characters": "size_t"
					},
					"BgAAACYHAAAAAAAAJwcAAAAAAAAAAAAAJwcAAAAAAAAoBwAAAAAAAAAAAAAoBwAAAAAAACkHAAAAAAAAAAAAACkHAAAAAAAAKgcAAAAAAAAAAAAAKgcAAAAAAAArBwAAAAAAAAAAAAArBwAAAAAAACwHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgcAAAAAAAAmBwAAAAAAAAAAAAAAADpA"
				],
				[
					425,
					1,
					"insert",
					{
						"characters": " ret;"
					},
					"BQAAACwHAAAAAAAALQcAAAAAAAAAAAAALQcAAAAAAAAuBwAAAAAAAAAAAAAuBwAAAAAAAC8HAAAAAAAAAAAAAC8HAAAAAAAAMAcAAAAAAAAAAAAAMAcAAAAAAAAxBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAcAAAAAAAAsBwAAAAAAAAAAAAAAAPC/"
				],
				[
					430,
					2,
					"right_delete",
					null,
					"AgAAAHYHAAAAAAAAdgcAAAAAAAABAAAAbnYHAAAAAAAAdgcAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAdgcAAAAAAAB2BwAAAAAAAAAAAAAAAPC/"
				],
				[
					431,
					2,
					"left_delete",
					null,
					"AgAAAHUHAAAAAAAAdQcAAAAAAAABAAAAcnQHAAAAAAAAdAcAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAdgcAAAAAAAB2BwAAAAAAAAAAAAAAAPC/"
				],
				[
					432,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAHQHAAAAAAAAdQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAcAAAAAAAB0BwAAAAAAAAAAAAAAAPC/"
				],
				[
					435,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJ4HAAAAAAAAnwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngcAAAAAAACeBwAAAAAAAAAAAAAAAPC/"
				],
				[
					436,
					1,
					"paste",
					null,
					"AQAAAJ8HAAAAAAAAxwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwcAAAAAAACfBwAAAAAAAAAAAAAAAPC/"
				],
				[
					437,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMcHAAAAAAAAyAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwcAAAAAAADHBwAAAAAAAAAAAAAAAPC/"
				],
				[
					439,
					1,
					"insert",
					{
						"characters": "rewt"
					},
					"BAAAAMcHAAAAAAAAyAcAAAAAAAAAAAAAyAcAAAAAAADJBwAAAAAAAAAAAADJBwAAAAAAAMoHAAAAAAAAAAAAAMoHAAAAAAAAywcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwcAAAAAAADHBwAAAAAAAAAAAAAAAAAA"
				],
				[
					440,
					2,
					"left_delete",
					null,
					"AgAAAMoHAAAAAAAAygcAAAAAAAABAAAAdMkHAAAAAAAAyQcAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAywcAAAAAAADLBwAAAAAAAAAAAAAAAPC/"
				],
				[
					441,
					1,
					"insert",
					{
						"characters": "turn"
					},
					"BAAAAMkHAAAAAAAAygcAAAAAAAAAAAAAygcAAAAAAADLBwAAAAAAAAAAAADLBwAAAAAAAMwHAAAAAAAAAAAAAMwHAAAAAAAAzQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQcAAAAAAADJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					442,
					1,
					"insert",
					{
						"characters": " ret;"
					},
					"BQAAAM0HAAAAAAAAzgcAAAAAAAAAAAAAzgcAAAAAAADPBwAAAAAAAAAAAADPBwAAAAAAANAHAAAAAAAAAAAAANAHAAAAAAAA0QcAAAAAAAAAAAAA0QcAAAAAAADSBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQcAAAAAAADNBwAAAAAAAAAAAAAAAPC/"
				],
				[
					462,
					1,
					"paste",
					null,
					"AQAAABMIAAAAAAAAIQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwgAAAAAAAATCAAAAAAAAAAAAAAAAPC/"
				],
				[
					474,
					1,
					"paste",
					null,
					"AQAAADYIAAAAAAAAXAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANggAAAAAAAA2CAAAAAAAAAAAAAAAAPC/"
				],
				[
					480,
					1,
					"paste",
					null,
					"AgAAAF0IAAAAAAAAYQgAAAAAAAAAAAAAYQgAAAAAAABhCAAAAAAAAAgAAAAgIHJldHVybg",
					"AQAAAAAAAAABAAAAZQgAAAAAAABdCAAAAAAAAAAAAAAAAPC/"
				],
				[
					487,
					1,
					"paste",
					null,
					"AQAAAIkIAAAAAAAAvQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQgAAAAAAACJCAAAAAAAAAAAAAAAAPC/"
				],
				[
					488,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAL0IAAAAAAAAvggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQgAAAAAAAC9CAAAAAAAAAAAAAAAAPC/"
				],
				[
					583,
					1,
					"cut",
					null,
					"AQAAAAkDAAAAAAAACQMAAAAAAAALAAAAZWxlbWVudF9sZW4",
					"AQAAAAAAAAABAAAACQMAAAAAAAAUAwAAAAAAAAAAAAAAAPC/"
				],
				[
					584,
					1,
					"paste",
					null,
					"AQAAAAkDAAAAAAAAFAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQMAAAAAAAAJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					629,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADSHgAAI2luY2x1ZGUgIm1pbm5ldC1yaW5nYnVmZmVyLmgiCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KClRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3JpbmdidWZmZXJfY2xhc3NfaWQ7ClRIUkVBRF9MT0NBTCBKU1ZhbHVlIG1pbm5ldF9yaW5nYnVmZmVyX3Byb3RvLCBtaW5uZXRfcmluZ2J1ZmZlcl9jdG9yOwoKdm9pZApyaW5nYnVmZmVyX2R1bXAoc3RydWN0IHJpbmdidWZmZXIgY29uc3QqIHN0cm0pIHsKICAvKiAgZnByaW50ZihzdGRlcnIsICJcbk1pbm5ldFJpbmdidWZmZXIge1xuXHRyZWZfY291bnQgPSAlenUiLCBzdHJtLT5yZWZfY291bnQpOwogICAgYnVmZmVyX2R1bXAoImJ1ZmZlciIsICZzdHJtLT5idWZmZXIpOwogICAgZnB1dHMoIlxufSIsIHN0ZGVycik7CiAgICBmZmx1c2goc3RkZXJyKTsqLwp9CgpzdGF0aWMgdm9pZApyaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCh2b2lkKiBlbGVtZW50KSB7fQoKdm9pZApyaW5nYnVmZmVyX2luaXQoc3RydWN0IHJpbmdidWZmZXIqIHN0cm0sIHNpemVfdCBlbGVtZW50X2xlbiwgc2l6ZV90IGNvdW50LCBjb25zdCBjaGFyKiB0eXBlLCBzaXplX3QgdHlwZWxlbikgewogIC8vICBtZW1zZXQoc3RybSwgMCwgc2l6ZW9mKCpzdHJtKSk7CgogIGlmKHR5cGUpCiAgICBwc3RyY3B5KHN0cm0tPnR5cGUsIE1JTih0eXBlbGVuICsgMSwgc2l6ZW9mKHN0cm0tPnR5cGUpKSwgdHlwZSk7CgogIHN0cm0tPnJpbmcgPSBsd3NfcmluZ19jcmVhdGUoZWxlbWVudF9sZW4sIGNvdW50LCByaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCk7CgogIHB0aHJlYWRfbXV0ZXhfaW5pdCgmc3RybS0+bG9ja19yaW5nLCBQVEhSRUFEX01VVEVYX0lOSVRJQUxJWkVSKTsKfQoKc3RydWN0IHJpbmdidWZmZXIqCnJpbmdidWZmZXJfbmV3KEpTQ29udGV4dCogY3R4KSB7CiAgc3RydWN0IHJpbmdidWZmZXIqIHN0cm07CgogIGlmKChzdHJtID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihNaW5uZXRSaW5nYnVmZmVyKSkpKQogICAgc3RybS0+cmVmX2NvdW50ID0gMTsKCiAgcmV0dXJuIHN0cm07Cn0KCnZvaWQKcmluZ2J1ZmZlcl9pbml0MihzdHJ1Y3QgcmluZ2J1ZmZlciogc3RybSxzaXplX3QgZWxlbWVudF9sZW4sIHNpemVfdCBjb3VudCApIHsKIAogICAgY29uc3QgY2hhciogdHlwZSA9ICJhcHBsaWNhdGlvbi9iaW5hcnkiOwogICAgcmluZ2J1ZmZlcl9pbml0KHN0cm0sIGVsZW1lbnRfbGVuLCBjb3VudCwgdHlwZSwgc3RybGVuKHR5cGUpKTsKICAKfQoKc3RydWN0IHJpbmdidWZmZXIqCnJpbmdidWZmZXJfbmV3MihzaXplX3QgZWxlbWVudF9sZW4sIHNpemVfdCBjb3VudCwgSlNDb250ZXh0KiBjdHgpIHsKICBNaW5uZXRSaW5nYnVmZmVyKiBzdHJtOwoKICBpZigoc3RybSA9IHJpbmdidWZmZXJfbmV3KGN0eCkpKSAKCiAgICAgcmluZ2J1ZmZlcl9pbml0MihzdHJtLCBlbGVtZW50X2xlbiwgY291bnQgKTsKCiAgcmV0dXJuIHN0cm07Cn0KCnNpemVfdApyaW5nYnVmZmVyX2luc2VydChzdHJ1Y3QgcmluZ2J1ZmZlciogc3RybSwgY29uc3Qgdm9pZCogcHRyLCBzaXplX3QgbikgewpzaXplX3QgcmV0OwogIGFzc2VydChzdHJtLT5yaW5nKTsKCnB0aHJlYWRfbXV0ZXhfbG9jaygmc3RybS0+bG9ja19yaW5nKTsKCiAgcmV0PSBsd3NfcmluZ19pbnNlcnQoc3RybS0+cmluZywgcHRyLCBuKTsKcHRocmVhZF9tdXRleF91bmxvY2soJnN0cm0tPmxvY2tfcmluZyk7CgpyZXR1cm4gcmV0Owp9CgpzaXplX3QKcmluZ2J1ZmZlcl9jb25zdW1lKHN0cnVjdCByaW5nYnVmZmVyKiBzdHJtLCB2b2lkKiBwdHIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQoc3RybS0+cmluZyk7CnB0aHJlYWRfbXV0ZXhfbG9jaygmc3RybS0+bG9ja19yaW5nKTsKCiAgcmV0PWx3c19yaW5nX2NvbnN1bWUoc3RybS0+cmluZywgMCwgcHRyLCBuKTsKCnB0aHJlYWRfbXV0ZXhfdW5sb2NrKCZzdHJtLT5sb2NrX3JpbmcpOwpyZXR1cm4gcmV0Owp9CgpzaXplX3QKcmluZ2J1ZmZlcl9za2lwKHN0cnVjdCByaW5nYnVmZmVyKiBzdHJtLCBzaXplX3QgbikgewogICBzaXplX3QgcmV0OwogYXNzZXJ0KHN0cm0tPnJpbmcpOwpwdGhyZWFkX211dGV4X2xvY2soJnN0cm0tPmxvY2tfcmluZyk7CgpyZXQ9IGx3c19yaW5nX2NvbnN1bWUoc3RybS0+cmluZywgMCwgMCwgbik7CgpwdGhyZWFkX211dGV4X3VubG9jaygmc3RybS0+bG9ja19yaW5nKTsKcmV0dXJuIHJldDsKfQoKY29uc3Qgdm9pZCoKcmluZ2J1ZmZlcl9uZXh0KHN0cnVjdCByaW5nYnVmZmVyKiBzdHJtKSB7CiAgYXNzZXJ0KHN0cm0tPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfZWxlbWVudChzdHJtLT5yaW5nLCAwKTsKfQoKc2l6ZV90CnJpbmdidWZmZXJfc2l6ZShzdHJ1Y3QgcmluZ2J1ZmZlciogc3RybSkgewogIGFzc2VydChzdHJtLT5yaW5nKTsKICByZXR1cm4gbHdzX3JpbmdfZ2V0X2NvdW50X3dhaXRpbmdfZWxlbWVudHMoc3RybS0+cmluZywgMCk7Cn0KCnNpemVfdApyaW5nYnVmZmVyX2F2YWlsKHN0cnVjdCByaW5nYnVmZmVyKiBzdHJtKSB7CiAgYXNzZXJ0KHN0cm0tPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfZnJlZV9lbGVtZW50cyhzdHJtLT5yaW5nKTsKfQoKdm9pZApyaW5nYnVmZmVyX3plcm8oc3RydWN0IHJpbmdidWZmZXIqIHN0cm0pIHsKICBsd3NfcmluZ19kZXN0cm95KHN0cm0tPnJpbmcpOwogIG1lbXNldChzdHJtLCAwLCBzaXplb2YoTWlubmV0UmluZ2J1ZmZlcikpOwp9Cgp2b2lkCnJpbmdidWZmZXJfZnJlZShzdHJ1Y3QgcmluZ2J1ZmZlciogc3RybSwgSlNSdW50aW1lKiBydCkgewogIHJpbmdidWZmZXJfemVybyhzdHJtKTsKICBqc19mcmVlX3J0KHJ0LCBzdHJtKTsKfQoKSlNWYWx1ZQptaW5uZXRfcmluZ2J1ZmZlcl9jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSBwcm90bywgb2JqOwogIE1pbm5ldFJpbmdidWZmZXIqIHN0cm07CgogIGlmKCEoc3RybSA9IHJpbmdidWZmZXJfbmV3KGN0eCkpKQogICAgcmV0dXJuIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgLyogdXNpbmcgbmV3X3RhcmdldCB0byBnZXQgdGhlIHByb3RvdHlwZSBpcyBuZWNlc3Nhcnkgd2hlbiB0aGUKICAgICBjbGFzcyBpcyBleHRlbmRlZC4gKi8KICBwcm90byA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgbmV3X3RhcmdldCwgInByb3RvdHlwZSIpOwogIGlmKEpTX0lzRXhjZXB0aW9uKHByb3RvKSkKICAgIHByb3RvID0gSlNfRHVwVmFsdWUoY3R4LCBtaW5uZXRfcmluZ2J1ZmZlcl9wcm90byk7CgogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywgbWlubmV0X3JpbmdidWZmZXJfY2xhc3NfaWQpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHByb3RvKTsKICBpZihKU19Jc0V4Y2VwdGlvbihvYmopKQogICAgZ290byBmYWlsOwoKICB3aGlsZShhcmdjID4gMCkgewoKICAgIGlmKEpTX0lzU3RyaW5nKGFyZ3ZbMF0pKSB7CiAgICAgIGNvbnN0IGNoYXIqIHR5cGU7CiAgICAgIHR5cGUgPSBKU19Ub0NTdHJpbmcoY3R4LCBhcmd2WzBdKTsKICAgICAgcHN0cmNweShzdHJtLT50eXBlLCBzaXplb2Yoc3RybS0+dHlwZSksIHR5cGUpOwogICAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHR5cGUpOwogICAgICBhcmdjIC09IDE7CiAgICAgIGFyZ3YgKz0gMTsKCiAgICB9IGVsc2UgaWYoYXJnYyA+PSAyICYmIEpTX0lzTnVtYmVyKGFyZ3ZbMF0pICYmIEpTX0lzTnVtYmVyKGFyZ3ZbMV0pKSB7CiAgICAgIHVpbnQzMl90IGVsZW1lbnRfc2l6ZSA9IDAsIGNvdW50ID0gMDsKICAgICAgSlNfVG9VaW50MzIoY3R4LCAmZWxlbWVudF9zaXplLCBhcmd2WzBdKTsKICAgICAgSlNfVG9VaW50MzIoY3R4LCAmY291bnQsIGFyZ3ZbMV0pOwoKICAgICAgc3RybS0+cmluZyA9IGx3c19yaW5nX2NyZWF0ZShlbGVtZW50X3NpemUsIGNvdW50LCByaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCk7CgogICAgICBhcmdjIC09IDI7CiAgICAgIGFyZ3YgKz0gMjsKICAgIH0gZWxzZSB7CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgSlNfU2V0T3BhcXVlKG9iaiwgc3RybSk7CgogIHJldHVybiBvYmo7CgpmYWlsOgogIGpzX2ZyZWUoY3R4LCBzdHJtKTsKICBKU19GcmVlVmFsdWUoY3R4LCBvYmopOwogIHJldHVybiBKU19FWENFUFRJT047Cn0KCkpTVmFsdWUKbWlubmV0X3JpbmdidWZmZXJfbmV3KEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiB0eXBlLCBzaXplX3QgdHlwZWxlbiwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IG4pIHsKICBzdHJ1Y3QgcmluZ2J1ZmZlciogc3RybTsKCiAgaWYoIShzdHJtID0gcmluZ2J1ZmZlcl9uZXcoY3R4KSkpCiAgICByZXR1cm4gSlNfVGhyb3dPdXRPZk1lbW9yeShjdHgpOwoKICAvLyBidWZmZXJfYWxsb2MoJnN0cm0tPmJ1ZmZlciwgbiA/IG4gOiAxMDI0LCBjdHgpOwogIC8vIHJpbmdidWZmZXJfaW5pdChzdHJtLCB4LG4sIHR5cGUsIHR5cGVsZW4pOwoKICByZXR1cm4gbWlubmV0X3JpbmdidWZmZXJfd3JhcChjdHgsIHN0cm0pOwp9CgpKU1ZhbHVlCm1pbm5ldF9yaW5nYnVmZmVyX3dyYXAoSlNDb250ZXh0KiBjdHgsIHN0cnVjdCByaW5nYnVmZmVyKiBzdHJtKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgbWlubmV0X3JpbmdidWZmZXJfcHJvdG8sIG1pbm5ldF9yaW5nYnVmZmVyX2NsYXNzX2lkKTsKCiAgaWYoSlNfSXNFeGNlcHRpb24ocmV0KSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIEpTX1NldE9wYXF1ZShyZXQsIHN0cm0pOwoKICArK3N0cm0tPnJlZl9jb3VudDsKCiAgcmV0dXJuIHJldDsKfQoKZW51bSB7IFJJTkdCVUZGRVJfVFlQRSwgUklOR0JVRkZFUl9MRU5HVEgsIFJJTkdCVUZGRVJfQVZBSUwsIFJJTkdCVUZGRVJfQlVGRkVSLCBSSU5HQlVGRkVSX1RFWFQgfTsKCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9yaW5nYnVmZmVyX2dldChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgbWFnaWMpIHsKICBNaW5uZXRSaW5nYnVmZmVyKiBzdHJtOwogIGlmKCEoc3RybSA9IEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwgbWlubmV0X3JpbmdidWZmZXJfY2xhc3NfaWQpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIHN3aXRjaChtYWdpYykgewoKICAgIGNhc2UgUklOR0JVRkZFUl9UWVBFOiB7CiAgICAgIHJldCA9IEpTX05ld1N0cmluZ0xlbihjdHgsIHN0cm0tPnR5cGUsIHN0cmxlbihzdHJtLT50eXBlKSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSSU5HQlVGRkVSX0xFTkdUSDogewogICAgICByZXQgPSBKU19OZXdVaW50MzIoY3R4LCBsd3NfcmluZ19nZXRfY291bnRfd2FpdGluZ19lbGVtZW50cyhzdHJtLT5yaW5nLCAwKSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSSU5HQlVGRkVSX0FWQUlMOiB7CiAgICAgIHJldCA9IEpTX05ld1VpbnQzMihjdHgsIGx3c19yaW5nX2dldF9jb3VudF9mcmVlX2VsZW1lbnRzKHN0cm0tPnJpbmcpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICAgIC8qICAgIGNhc2UgUklOR0JVRkZFUl9CVUZGRVI6IHsKICAgICAgICAgICAgcmV0ID0gYnVmZmVyX0hFQUQoJnN0cm0tPmJ1ZmZlcikgPyBidWZmZXJfdG9hcnJheWJ1ZmZlcigmc3RybS0+YnVmZmVyLCBjdHgpIDogSlNfTlVMTDsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgICBjYXNlIFJJTkdCVUZGRVJfVEVYVDogewogICAgICAgICAgICByZXQgPSBidWZmZXJfSEVBRCgmc3RybS0+YnVmZmVyKSA/IGJ1ZmZlcl90b3N0cmluZygmc3RybS0+YnVmZmVyLCBjdHgpIDogSlNfTlVMTDsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9Ki8KICB9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKbWlubmV0X3JpbmdidWZmZXJfaXRlcmF0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICByZXR1cm4gSlNfRHVwVmFsdWUoY3R4LCB0aGlzX3ZhbCk7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9yaW5nYnVmZmVyX25leHQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIEJPT0wqIHBkb25lLCBpbnQgbWFnaWMpIHsKICBNaW5uZXRSaW5nYnVmZmVyKiBzdHJtOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKHN0cm0gPSBtaW5uZXRfcmluZ2J1ZmZlcl9kYXRhKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CiAgLyoKICAgIGxlbiA9IGJ1ZmZlcl9SRU1BSU4oJnN0cm0tPmJ1ZmZlcik7CiAgICBwdHIgPSBzdHJtLT5idWZmZXIucmVhZDsKCiAgICBpZihhcmdjID49IDEpIHsKICAgICAgdWludDMyX3QgbiA9IGxlbjsKICAgICAgSlNfVG9VaW50MzIoY3R4LCAmbiwgYXJndlswXSk7CiAgICAgIGlmKG4gPCBsZW4pCiAgICAgICAgbGVuID0gbjsKICAgIH0KCiAgICBpZihsZW4pIHsKICAgICAgcmV0ID0gSlNfTmV3U3RyaW5nTGVuKGN0eCwgKGNvbnN0IGNoYXIqKXB0ciwgbGVuKTsKICAgICAgc3RybS0+YnVmZmVyLnJlYWQgKz0gbGVuOwogICAgfSBlbHNlIHsKICAgICAgKnBkb25lID0gVFJVRTsKICAgIH0qLwoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgdm9pZAptaW5uZXRfcmluZ2J1ZmZlcl9maW5hbGl6ZXIoSlNSdW50aW1lKiBydCwgSlNWYWx1ZSB2YWwpIHsKICBNaW5uZXRSaW5nYnVmZmVyKiBzdHJtID0gSlNfR2V0T3BhcXVlKHZhbCwgbWlubmV0X3JpbmdidWZmZXJfY2xhc3NfaWQpOwogIGlmKHN0cm0gJiYgLS1zdHJtLT5yZWZfY291bnQgPT0gMCkgewoKICAgIC8vIGJ1ZmZlcl9mcmVlKCZzdHJtLT5idWZmZXIsIHJ0KTsKCiAgICBqc19mcmVlX3J0KHJ0LCBzdHJtKTsKICB9Cn0KCkpTQ2xhc3NEZWYgbWlubmV0X3JpbmdidWZmZXJfY2xhc3MgPSB7CiAgICAiTWlubmV0UmluZ2J1ZmZlciIsCiAgICAuZmluYWxpemVyID0gbWlubmV0X3JpbmdidWZmZXJfZmluYWxpemVyLAp9OwoKY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JpbmdidWZmZXJfcHJvdG9fZnVuY3NbXSA9IHsKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJ0eXBlIiwgbWlubmV0X3JpbmdidWZmZXJfZ2V0LCAwLCBSSU5HQlVGRkVSX1RZUEUsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigibGVuZ3RoIiwgbWlubmV0X3JpbmdidWZmZXJfZ2V0LCAwLCBSSU5HQlVGRkVSX0xFTkdUSCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJhdmFpbCIsIG1pbm5ldF9yaW5nYnVmZmVyX2dldCwgMCwgUklOR0JVRkZFUl9BVkFJTCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX0lURVJBVE9SX05FWFRfREVGKCJuZXh0IiwgMCwgbWlubmV0X3JpbmdidWZmZXJfbmV4dCwgMCksCiAgICBKU19DRlVOQ19ERUYoIltTeW1ib2wuaXRlcmF0b3JdIiwgMCwgbWlubmV0X3JpbmdidWZmZXJfaXRlcmF0b3IpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImJ1ZmZlciIsIG1pbm5ldF9yaW5nYnVmZmVyX2dldCwgMCwgUklOR0JVRkZFUl9CVUZGRVIsIDApLAogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJNaW5uZXRSaW5nYnVmZmVyIiwgSlNfUFJPUF9DT05GSUdVUkFCTEUpLAp9OwoKY29uc3Qgc2l6ZV90IG1pbm5ldF9yaW5nYnVmZmVyX3Byb3RvX2Z1bmNzX3NpemUgPSBjb3VudG9mKG1pbm5ldF9yaW5nYnVmZmVyX3Byb3RvX2Z1bmNzKTsKAAAAAAAAAADqHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQYAAAAAAACMBgAAAAAAAAAAAAAAAPC/"
				],
				[
					671,
					1,
					"cut",
					null,
					"AQAAAEgAAAAAAAAASAAAAAAAAAAbAAAAI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4K",
					"AQAAAAAAAAABAAAASAAAAAAAAABjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					672,
					2,
					"paste",
					null,
					"AgAAAEgAAAAAAAAAYwAAAAAAAAAAAAAAYwAAAAAAAAB+AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					677,
					1,
					"insert",
					{
						"characters": "pthread"
					},
					"CAAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABuAAAAAAAAAA0AAABsaWJ3ZWJzb2NrZXRzbgAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAcQAAAAAAAAAAAAAAcQAAAAAAAAByAAAAAAAAAAAAAAByAAAAAAAAAHMAAAAAAAAAAAAAAHMAAAAAAAAAdAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					698,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAABACAAAAAAAAEQIAAAAAAAAAAAAAEQIAAAAAAAASAgAAAAAAAAAAAAARAgAAAAAAABMCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAIAAAAAAAAQAgAAAAAAAAAAAAAAAPC/"
				],
				[
					699,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAABMCAAAAAAAAFAIAAAAAAAAAAAAAFAIAAAAAAAAWAgAAAAAAAAAAAAARAgAAAAAAABECAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAEwIAAAAAAAATAgAAAAAAAAAAAAAAAPC/"
				],
				[
					708,
					1,
					"insert",
					{
						"characters": "ek"
					},
					"BAAAACMDAAAAAAAAJAMAAAAAAAAAAAAAJAMAAAAAAAAkAwAAAAAAABQAAABzaXplb2YoTWlubmV0QnVmZmVyKRICAAAAAAAAEgIAAAAAAAACAAAAICAiAwAAAAAAACMDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwMAAAAAAAA3AwAAAAAAAAAAAAAAAPC/"
				],
				[
					709,
					1,
					"left_delete",
					null,
					"AQAAACIDAAAAAAAAIgMAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAIwMAAAAAAAAjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					710,
					1,
					"insert",
					{
						"characters": "lem"
					},
					"AwAAACIDAAAAAAAAIwMAAAAAAAAAAAAAIwMAAAAAAAAkAwAAAAAAAAAAAAAkAwAAAAAAACUDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgMAAAAAAAAiAwAAAAAAAAAAAAAAAPC/"
				],
				[
					711,
					1,
					"insert_completion",
					{
						"completion": "element_size",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "element_size"
					},
					"AgAAACEDAAAAAAAAIQMAAAAAAAAEAAAAZWxlbSEDAAAAAAAALQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQMAAAAAAAAlAwAAAAAAAAAAAAAAAPC/"
				],
				[
					712,
					4,
					"left_delete",
					null,
					"BAAAACwDAAAAAAAALAMAAAAAAAABAAAAZSsDAAAAAAAAKwMAAAAAAAABAAAAeioDAAAAAAAAKgMAAAAAAAABAAAAaSkDAAAAAAAAKQMAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAALQMAAAAAAAAtAwAAAAAAAAAAAAAAAPC/"
				],
				[
					713,
					1,
					"insert",
					{
						"characters": "len"
					},
					"AwAAACkDAAAAAAAAKgMAAAAAAAAAAAAAKgMAAAAAAAArAwAAAAAAAAAAAAArAwAAAAAAACwDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQMAAAAAAAApAwAAAAAAAAAAAAAAAPC/"
				],
				[
					725,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAATQQAAAAAAABNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					732,
					1,
					"paste",
					null,
					"AgAAAHcDAAAAAAAAjAMAAAAAAAAAAAAAjAMAAAAAAACMAwAAAAAAABkAAABQVEhSRUFEX01VVEVYX0lOSVRJQUxJWkVS",
					"AQAAAAAAAAABAAAAdwMAAAAAAACQAwAAAAAAAAAAAAAAAPC/"
				],
				[
					745,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAAHcDAAAAAAAAeAMAAAAAAAAAAAAAeAMAAAAAAAB4AwAAAAAAABUAAABQVEhSRUFEX01VVEVYX0RFRkFVTFQ",
					"AQAAAAAAAAABAAAAdwMAAAAAAACMAwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-generator.c",
			"settings":
			{
				"buffer_size": 3465,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 729 files for \"lws_ring_consume\\(\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-ringbuffer.c:\n   59    assert(strm->ring);\n   60  \n   61:   return lws_ring_consume(strm->ring, 0, ptr, n);\n   62  }\n   63  \n   ..\n   66    assert(strm->ring);\n   67  \n   68:   return lws_ring_consume(strm->ring, 0, 0, n);\n   69  }\n   70  \n\n/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/test-sshd.c:\n  185  \t}\n  186  \n  187: \tn = lws_ring_consume(r, NULL, buf, len);\n  188  \n  189  \tif (n)\n\n/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-ring.h:\n   47   *\n   48   *  - lws_ring_insert()\n   49:  *  - lws_ring_consume()\n   50   *\n   51   * You can find out how many whole elements are free or waiting using\n   ..\n  148  \n  149  /**\n  150:  * lws_ring_consume():  attempt to copy out and remove up to max_count elements\n  151   *\t\t        to src\n  152   *\n  ...\n  169   */\n  170  LWS_VISIBLE LWS_EXTERN size_t\n  171: lws_ring_consume(struct lws_ring *ring, uint32_t *tail, void *dest,\n  172  \t\t size_t max_count);\n  173  \n  ...\n  182   * having to copy it out somewhere first.\n  183   *\n  184:  * After calling this, you must call lws_ring_consume(ring, &tail, NULL, 1)\n  185   * which will logically consume the element you used up and increment your\n  186   * tail (tail may also be NULL there if you use a single tail).\n  ...\n  272  \t\\\n  273  \t___n = lws_ring_get_oldest_tail(___ring) == *(___ptail); \\\n  274: \tlws_ring_consume(___ring, ___ptail, NULL, ___count); \\\n  275  \tif (___n) { \\\n  276  \t\tuint32_t ___oldest; \\\n  ...\n  301  \t\t___count  /* count of payload objects being consumed */ \\\n  302  \t) { \\\n  303: \tlws_ring_consume(___ring, ___ptail, NULL, ___count); \\\n  304  \tlws_ring_update_oldest_tail(___ring, *(___ptail)); \\\n  305  }\n\n/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/misc/lws-ring.c:\n  197  \n  198  size_t\n  199: lws_ring_consume(struct lws_ring *ring, uint32_t *tail, void *dest,\n  200  \t\t size_t max_count)\n  201  {\n\n/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugins/protocol_lws_mirror.c:\n  378  \t\t\t\t\t \" pss->tail = %d\\n\", __func__,\n  379  \t\t\t\t\t oldest_tail, pss->tail);\n  380: \t\t\t\tif (lws_ring_consume(pss->mi->ring, &pss->tail,\n  381  \t\t\t\t\t\t     NULL, 1))\n  382  \t\t\t\t\tcontinue;\n  ...\n  392  \t\t\t}\n  393  \t\t\tsent_something = 1;\n  394: \t\t\tlws_ring_consume(pss->mi->ring, &pss->tail, NULL, 1);\n  395  \n  396  \t\t} while (!lws_send_pipe_choked(wsi));\n\n/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c:\n  354  \n  355  \t\tconn->ticket_retired = ppkt->ticket;\n  356: \t\tlws_ring_consume(conn->r[ACC], &conn->t[ACC], NULL, 1);\n  357  \t\tlws_ring_update_oldest_tail(conn->r[ACC], conn->t[ACC]);\n  358  \n  ...\n  511  \n  512  \t\tconn->ticket_retired = ppkt->ticket;\n  513: \t\tlws_ring_consume(conn->r[ONW], &conn->t[ONW], NULL, 1);\n  514  \t\tlws_ring_update_oldest_tail(conn->r[ONW], conn->t[ONW]);\n  515  \n\n14 matches across 6 files\n\n\nSearching 729 files for \"REQUEST.HEA\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.c:\n   12  THREAD_LOCAL JSValue minnet_request_proto, minnet_request_ctor;\n   13  \n   14: enum { REQUEST_TYPE, REQUEST_METHOD, REQUEST_URI, REQUEST_PATH, REQUEST_HEADERS, REQUEST_ARRAYBUFFER, REQUEST_TEXT, REQUEST_BODY };\n   15  \n   16  static const char* const method_names[] = {\n   ..\n  347        break;\n  348      }\n  349:     case REQUEST_HEADERS: {\n  350:       printf(\"REQUEST_HEADERS start=%p, end=%p\\n\", req->headers.start, req->headers.end);\n  351  \n  352        ret = headers_object(ctx, req->headers.start, req->headers.write);\n  ...\n  417        break;\n  418      }\n  419:     case REQUEST_HEADERS: {\n  420  \n  421        if(JS_IsObject(value)) {\n  ...\n  453      JS_CGETSET_MAGIC_FLAGS_DEF(\"url\", minnet_request_get, minnet_request_set, REQUEST_URI, JS_PROP_ENUMERABLE),\n  454      JS_CGETSET_MAGIC_FLAGS_DEF(\"path\", minnet_request_get, minnet_request_set, REQUEST_PATH, 0),\n  455:     JS_CGETSET_MAGIC_FLAGS_DEF(\"headers\", minnet_request_get, minnet_request_set, REQUEST_HEADERS, JS_PROP_ENUMERABLE),\n  456      JS_CGETSET_MAGIC_FLAGS_DEF(\"arrayBuffer\", minnet_request_get, 0, REQUEST_ARRAYBUFFER, 0),\n  457      JS_CGETSET_MAGIC_FLAGS_DEF(\"text\", minnet_request_get, 0, REQUEST_TEXT, 0),\n\n/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-http.h:\n  241  \tWSI_TOKEN_HTTP_ACCEPT,\n  242  #if defined(LWS_WITH_HTTP_UNCOMMON_HEADERS) || defined(LWS_HTTP_HEADERS_ALL)\n  243: \tWSI_TOKEN_HTTP_AC_REQUEST_HEADERS,\n  244  #endif\n  245  \tWSI_TOKEN_HTTP_IF_MODIFIED_SINCE,\n\n6 matches across 2 files\n\n\nSearching 729 files for \"ringbuffer_init\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c:\n   63    ws->lwsi = wsi;\n   64    ws->ref_count = 2;\n   65: ringbuffer_init(&ws->sendq, 1, )\n   66    ws->sendq = ringbuffer_new2(1, 65536 * 2, ctx);\n   67  \n\n/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-ringbuffer.c:\n   19  \n   20  void\n   21: ringbuffer_init(struct ringbuffer* strm, size_t element_len, size_t count, const char* type, size_t typelen) {\n   22    //  memset(strm, 0, sizeof(*strm));\n   23  \n   ..\n   43    if((strm = ringbuffer_new(ctx))) {\n   44      const char* type = \"application/binary\";\n   45:     ringbuffer_init(strm, element_len, count, type, strlen(type));\n   46    }\n   47    return strm;\n   ..\n  160  \n  161    // buffer_alloc(&strm->buffer, n ? n : 1024, ctx);\n  162:   // ringbuffer_init(strm, x,n, type, typelen);\n  163  \n  164    return minnet_ringbuffer_wrap(ctx, strm);\n\n/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-ringbuffer.h:\n   17  \n   18  void ringbuffer_dump(struct ringbuffer const*);\n   19: void ringbuffer_init(struct ringbuffer*, size_t, size_t, const char* type, size_t typelen);\n   20  struct ringbuffer* ringbuffer_new(JSContext*);\n   21  struct ringbuffer* ringbuffer_new2(size_t, size_t, JSContext*);\n\n5 matches across 3 files\n",
			"settings":
			{
				"buffer_size": 5999,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c",
			"settings":
			{
				"buffer_size": 14937,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "build/x86_64-linux-debug/libwebsockets/include/libwebsockets/lws-ring.h",
			"settings":
			{
				"buffer_size": 11869,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "libwebsockets/include/libwebsockets/lws-ring.h",
			"settings":
			{
				"buffer_size": 11869,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "minnet-response.h",
			"settings":
			{
				"buffer_size": 2224,
				"line_ending": "Unix"
			}
		},
		{
			"file": "minnet-response.c",
			"settings":
			{
				"buffer_size": 11801,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					17,
					1,
					"cut",
					null,
					"AQAAAOksAAAAAAAA6SwAAAAAAABJAAAAICAgIEpTX0NGVU5DX0RFRigiW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSIsIDAsIG1pbm5ldF9yZXNwb25zZV9pdGVyYXRvciksCg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6SwAAAAAAAAyLQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					2,
					"paste",
					null,
					"AgAAAOksAAAAAAAAMi0AAAAAAAAAAAAAMi0AAAAAAAB7LQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6SwAAAAAAADpLAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "clone"
					},
					"BgAAAPssAAAAAAAA/CwAAAAAAAAAAAAA/CwAAAAAAAD8LAAAAAAAABYAAABbU3ltYm9sLmFzeW5jSXRlcmF0b3Jd/CwAAAAAAAD9LAAAAAAAAAAAAAD9LAAAAAAAAP4sAAAAAAAAAAAAAP4sAAAAAAAA/ywAAAAAAAAAAAAA/ywAAAAAAAAALQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+ywAAAAAAAARLQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "clons"
					},
					"BgAAABYtAAAAAAAAFy0AAAAAAAAAAAAAFy0AAAAAAAAXLQAAAAAAAAgAAABpdGVyYXRvchctAAAAAAAAGC0AAAAAAAAAAAAAGC0AAAAAAAAZLQAAAAAAAAAAAAAZLQAAAAAAABotAAAAAAAAAAAAABotAAAAAAAAGy0AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFi0AAAAAAAAeLQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"left_delete",
					null,
					"AQAAABotAAAAAAAAGi0AAAAAAAABAAAAcw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGy0AAAAAAAAbLQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAABotAAAAAAAAGy0AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGi0AAAAAAAAaLQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"cut",
					null,
					"AQAAAOksAAAAAAAA6SwAAAAAAAA1AAAAICAgIEpTX0NGVU5DX0RFRigiY2xvbmUiLCAwLCBtaW5uZXRfcmVzcG9uc2VfY2xvbmUpLAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHi0AAAAAAADpLAAAAAAAAAAAAAAAAAAA"
				],
				[
					34,
					1,
					"paste",
					null,
					"AQAAAP4oAAAAAAAAMykAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/igAAAAAAAD+KAAAAAAAAAAAAAAAAAAA"
				],
				[
					39,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMykAAAAAAAAzKQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAZLgAAI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXNwb25zZS5oIgojaW5jbHVkZSAibWlubmV0LWJ1ZmZlci5oIgojaW5jbHVkZSAianN1dGlscy5oIgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDxhc3NlcnQuaD4KClRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3Jlc3BvbnNlX2NsYXNzX2lkOwpUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVzcG9uc2VfcHJvdG8sIG1pbm5ldF9yZXNwb25zZV9jdG9yOwoKZW51bSB7IFJFU1BPTlNFX0hFQURFUiB9OwplbnVtIHsgUkVTUE9OU0VfT0ssIFJFU1BPTlNFX1VSTCwgUkVTUE9OU0VfU1RBVFVTLCBSRVNQT05TRV9TVEFUVVNURVhULCBSRVNQT05TRV9SRURJUkVDVEVELCBSRVNQT05TRV9CT0RZVVNFRCwgUkVTUE9OU0VfQk9EWSwgUkVTUE9OU0VfVFlQRSwgUkVTUE9OU0VfT0ZGU0VULCBSRVNQT05TRV9IRUFERVJTIH07Cgp2b2lkCnJlc3BvbnNlX2Zvcm1hdChNaW5uZXRSZXNwb25zZSBjb25zdCogcmVzcCwgY2hhciogYnVmLCBzaXplX3QgbGVuKSB7CiAgc25wcmludGYoYnVmLCBsZW4sIEZHQygyMjYsICJNaW5uZXRSZXNwb25zZSIpICIgeyB1cmwucGF0aDogJyVzJywgc3RhdHVzOiAlZCwgb2s6ICVzLCB0eXBlOiAnJXMnIH0iLCByZXNwLT51cmwucGF0aCwgcmVzcC0+c3RhdHVzLCByZXNwLT5vayA/ICJ0cnVlIiA6ICJmYWxzZSIsIHJlc3AtPnR5cGUpOwp9CgpjaGFyKgpyZXNwb25zZV9kdW1wKE1pbm5ldFJlc3BvbnNlIGNvbnN0KiByZXNwKSB7CiAgc3RhdGljIGNoYXIgYnVmWzEwMjRdOwogIHJlc3BvbnNlX2Zvcm1hdChyZXNwLCBidWYsIHNpemVvZihidWYpKTsKICByZXR1cm4gYnVmOwp9CgovKnZvaWQKcmVzcG9uc2VfemVybyhNaW5uZXRSZXNwb25zZSogcmVzcCkgewogIG1lbXNldChyZXNwLCAwLCBzaXplb2YoTWlubmV0UmVzcG9uc2UpKTsKICByZXNwLT5ib2R5ID0gQlVGRkVSXzAoKTsKfSovCgp2b2lkCnJlc3BvbnNlX2luaXQoTWlubmV0UmVzcG9uc2UqIHJlc3AsIE1pbm5ldFVSTCB1cmwsIGludDMyX3Qgc3RhdHVzLCBjaGFyKiBzdGF0dXNfdGV4dCwgQk9PTCBvaywgY2hhciogdHlwZSkgewogIC8vIG1lbXNldChyZXNwLCAwLCBzaXplb2YoTWlubmV0UmVzcG9uc2UpKTsKCiAgcmVzcC0+c3RhdHVzID0gc3RhdHVzOwogIHJlc3AtPnN0YXR1c190ZXh0ID0gc3RhdHVzX3RleHQ7CiAgcmVzcC0+b2sgPSBvazsKICByZXNwLT51cmwgPSB1cmw7CiAgcmVzcC0+dHlwZSA9IHR5cGU7CiAgcmVzcC0+aGVhZGVycyA9IEJVRkZFUl8wKCk7CiAgcmVzcC0+Ym9keSA9IDA7IC8vIEJVRkZFUl8wKCk7Cn0KCk1pbm5ldFJlc3BvbnNlKgpyZXNwb25zZV9kdXAoTWlubmV0UmVzcG9uc2UqIHJlc3ApIHsKICArK3Jlc3AtPnJlZl9jb3VudDsKICByZXR1cm4gcmVzcDsKfQoKc3NpemVfdApyZXNwb25zZV93cml0ZShNaW5uZXRSZXNwb25zZSogcmVzcCwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IG4sIEpTQ29udGV4dCogY3R4KSB7CiAgYXNzZXJ0KHJlc3AtPmJvZHkpOwogIHJldHVybiBidWZmZXJfYXBwZW5kKHJlc3AtPmJvZHksIHgsIG4sIGN0eCk7Cn0KCnZvaWQKcmVzcG9uc2VfY2xlYXIoTWlubmV0UmVzcG9uc2UqIHJlc3AsIEpTQ29udGV4dCogY3R4KSB7CiAgdXJsX2ZyZWUoJnJlc3AtPnVybCwgY3R4KTsKICBpZihyZXNwLT50eXBlKSB7CiAgICBqc19mcmVlKGN0eCwgKHZvaWQqKXJlc3AtPnR5cGUpOwogICAgcmVzcC0+dHlwZSA9IDA7CiAgfQoKICBidWZmZXJfZnJlZSgmcmVzcC0+aGVhZGVycywgSlNfR2V0UnVudGltZShjdHgpKTsKICBidWZmZXJfZnJlZShyZXNwLT5ib2R5LCBKU19HZXRSdW50aW1lKGN0eCkpOwp9Cgp2b2lkCnJlc3BvbnNlX2NsZWFyX3J0KE1pbm5ldFJlc3BvbnNlKiByZXNwLCBKU1J1bnRpbWUqIHJ0KSB7CiAgdXJsX2ZyZWVfcnQoJnJlc3AtPnVybCwgcnQpOwogIGlmKHJlc3AtPnR5cGUpIHsKICAgIGpzX2ZyZWVfcnQocnQsICh2b2lkKilyZXNwLT50eXBlKTsKICAgIHJlc3AtPnR5cGUgPSAwOwogIH0KCiAgYnVmZmVyX2ZyZWUoJnJlc3AtPmhlYWRlcnMsIHJ0KTsKICBidWZmZXJfZnJlZShyZXNwLT5ib2R5LCBydCk7Cn0KCnZvaWQKcmVzcG9uc2VfZnJlZShNaW5uZXRSZXNwb25zZSogcmVzcCwgSlNDb250ZXh0KiBjdHgpIHsKCiAgaWYoLS1yZXNwLT5yZWZfY291bnQgPT0gMCkgewogICAgcmVzcG9uc2VfY2xlYXIocmVzcCwgY3R4KTsKICAgIGpzX2ZyZWUoY3R4LCByZXNwKTsKICB9Cn0KCnZvaWQKcmVzcG9uc2VfZnJlZV9ydChNaW5uZXRSZXNwb25zZSogcmVzcCwgSlNSdW50aW1lKiBydCkgewogIGlmKC0tcmVzcC0+cmVmX2NvdW50ID09IDApIHsKICAgIHJlc3BvbnNlX2NsZWFyX3J0KHJlc3AsIHJ0KTsKICAgIGpzX2ZyZWVfcnQocnQsIHJlc3ApOwogIH0KfQoKTWlubmV0UmVzcG9uc2UqCnJlc3BvbnNlX25ldyhKU0NvbnRleHQqIGN0eCkgewogIE1pbm5ldFJlc3BvbnNlKiByZXNwOwoKICBpZighKHJlc3AgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKE1pbm5ldFJlc3BvbnNlKSkpKQogICAgSlNfVGhyb3dPdXRPZk1lbW9yeShjdHgpOwoKICByZXNwLT5yZWZfY291bnQgPSAxOwoKICByZXR1cm4gcmVzcDsKfQoKTWlubmV0UmVzcG9uc2UqCnJlc3BvbnNlX3JlZGlyZWN0KE1pbm5ldFJlc3BvbnNlKiByZXNwLCBjb25zdCBjaGFyKiBsb2NhdGlvbiwgSlNDb250ZXh0KiBjdHgpIHsKCiAgcmVzcC0+c3RhdHVzID0gMzAyOwogIC8vIHVybF9wYXJzZSgmcmVzcC0+dXJsLCBsb2NhdGlvbiwgY3R4KTsKICBoZWFkZXJzX3NldChjdHgsICZyZXNwLT5oZWFkZXJzLCAiTG9jYXRpb24iLCBsb2NhdGlvbik7CiAgcmV0dXJuIHJlc3A7Cn0KCkpTVmFsdWUKbWlubmV0X3Jlc3BvbnNlX25ldyhKU0NvbnRleHQqIGN0eCwgTWlubmV0VVJMIHVybCwgaW50IHN0YXR1cywgY2hhciogc3RhdHVzX3RleHQsIEJPT0wgb2ssIGNvbnN0IGNoYXIqIHR5cGUpIHsKICBNaW5uZXRSZXNwb25zZSogcmVzcDsKCiAgaWYoKHJlc3AgPSByZXNwb25zZV9uZXcoY3R4KSkpIHsKICAgIHJlc3BvbnNlX2luaXQocmVzcCwgdXJsLCBzdGF0dXMsIHN0YXR1c190ZXh0LCBvaywgdHlwZSA/IGpzX3N0cmR1cChjdHgsIHR5cGUpIDogMCk7CgogICAgcmV0dXJuIG1pbm5ldF9yZXNwb25zZV93cmFwKGN0eCwgcmVzcCk7CiAgfQoKICByZXR1cm4gSlNfTlVMTDsKfQoKSlNWYWx1ZQptaW5uZXRfcmVzcG9uc2Vfd3JhcChKU0NvbnRleHQqIGN0eCwgTWlubmV0UmVzcG9uc2UqIHJlc3ApIHsKICBKU1ZhbHVlIHJldCA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBtaW5uZXRfcmVzcG9uc2VfcHJvdG8sIG1pbm5ldF9yZXNwb25zZV9jbGFzc19pZCk7CgogIGlmKEpTX0lzRXhjZXB0aW9uKHJldCkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBKU19TZXRPcGFxdWUocmV0LCByZXNwb25zZV9kdXAocmVzcCkpOwogIHJldHVybiByZXQ7Cn0KCmVudW0gewogIFJFU1BPTlNFX0FSUkFZQlVGRkVSID0gMCwKICBSRVNQT05TRV9URVhULAogIFJFU1BPTlNFX0pTT04sCn07CgpzdGF0aWMgSlNWYWx1ZQptaW5uZXRfcmVzcG9uc2VfbWV0aG9kKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpIHsKICBKU1ZhbHVlIHJldCwgcmVzdWx0ID0gSlNfVU5ERUZJTkVEOwogIFJlc29sdmVGdW5jdGlvbnMgZnVuY3M7CiAgTWlubmV0UmVzcG9uc2UqIHJlc3A7CgogIGlmKCEocmVzcCA9IG1pbm5ldF9yZXNwb25zZV9kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgUkVTUE9OU0VfQVJSQVlCVUZGRVI6IHsKICAgICAgcmVzdWx0ID0gSlNfTmV3QXJyYXlCdWZmZXIgLypDb3B5Ki8gKGN0eCwgYmxvY2tfQkVHSU4ocmVzcC0+Ym9keSksIGJsb2NrX1NJWkUocmVzcC0+Ym9keSksIDAsIDAsIDApOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkVTUE9OU0VfVEVYVDogewogICAgICByZXN1bHQgPSBKU19OZXdTdHJpbmdMZW4oY3R4LCAoY2hhciopYmxvY2tfQkVHSU4ocmVzcC0+Ym9keSksIGJ1ZmZlcl9IRUFEKHJlc3AtPmJvZHkpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFU1BPTlNFX0pTT046IHsKICAgICAgcmVzdWx0ID0gSlNfUGFyc2VKU09OKGN0eCwgYmxvY2tfQkVHSU4ocmVzcC0+Ym9keSksIGJ1ZmZlcl9IRUFEKHJlc3AtPmJvZHkpLCByZXNwLT51cmwucGF0aCk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgcmV0ID0ganNfcHJvbWlzZV9jcmVhdGUoY3R4LCAmZnVuY3MpOwoKICBqc19wcm9taXNlX3Jlc29sdmUoY3R4LCAmZnVuY3MsIHJlc3VsdCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgcmVzdWx0KTsKCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKbWlubmV0X3Jlc3BvbnNlX2Nsb25lKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgTWlubmV0UmVzcG9uc2UgKnJlc3AsICpjbG9uZTsKCiAgaWYoIShyZXNwID0gbWlubmV0X3Jlc3BvbnNlX2RhdGEyKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIGlmKCEoY2xvbmUgPSByZXNwb25zZV9uZXcoY3R4KSkpCiAgICByZXR1cm4gSlNfVGhyb3dPdXRPZk1lbW9yeShjdHgpOwoKICBjbG9uZS0+cmVhZF9vbmx5ID0gcmVzcC0+cmVhZF9vbmx5OwogIGNsb25lLT5zdGF0dXMgPSByZXNwLT5zdGF0dXM7CiAgY2xvbmUtPnJlYWRfb25seSA9IHJlc3AtPnJlYWRfb25seTsKICBjbG9uZS0+dXJsID0gdXJsX2Nsb25lKHJlc3AtPnVybCwgY3R4KTsKICBjbG9uZS0+dHlwZSA9IGpzX3N0cmR1cChjdHgsIHJlc3AtPnR5cGUpOwoKICBidWZmZXJfY2xvbmUoJmNsb25lLT5oZWFkZXJzLCAmcmVzcC0+aGVhZGVycywgY3R4KTsKICBidWZmZXJfY2xvbmUoY2xvbmUtPmJvZHksIHJlc3AtPmJvZHksIGN0eCk7CgogIHJldHVybiBtaW5uZXRfcmVzcG9uc2Vfd3JhcChjdHgsIGNsb25lKTsKfQoKc3RhdGljIEpTVmFsdWUKbWlubmV0X3Jlc3BvbnNlX2dldChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgbWFnaWMpIHsKICBNaW5uZXRSZXNwb25zZSogcmVzcDsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoIShyZXNwID0gbWlubmV0X3Jlc3BvbnNlX2RhdGEyKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBSRVNQT05TRV9TVEFUVVM6IHsKICAgICAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCByZXNwLT5zdGF0dXMpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkVTUE9OU0VfU1RBVFVTVEVYVDogewogICAgICByZXQgPSByZXNwLT5zdGF0dXNfdGV4dCA/IEpTX05ld1N0cmluZyhjdHgsIHJlc3AtPnN0YXR1c190ZXh0KSA6IEpTX05VTEw7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVNQT05TRV9PSzogewogICAgICByZXQgPSBKU19OZXdCb29sKGN0eCwgcmVzcC0+b2spOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkVTUE9OU0VfVVJMOiB7CiAgICAgIHJldCA9IG1pbm5ldF91cmxfbmV3KGN0eCwgcmVzcC0+dXJsKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFU1BPTlNFX1RZUEU6IHsKICAgICAgcmV0ID0gcmVzcC0+dHlwZSA/IEpTX05ld1N0cmluZyhjdHgsIHJlc3AtPnR5cGUpIDogSlNfTlVMTDsKICAgICAgYnJlYWs7CiAgICB9CiAgICAgIC8qIGNhc2UgUkVTUE9OU0VfT0ZGU0VUOiB7CiAgICAgICAgIHJldCA9IEpTX05ld0ludDY0KGN0eCwgYnVmZmVyX0hFQUQocmVzcC0+Ym9keSkpOwogICAgICAgICBicmVhazsKICAgICAgIH0qLwogICAgY2FzZSBSRVNQT05TRV9IRUFERVJTOiB7CiAgICAgIHJldCA9IGhlYWRlcnNfb2JqZWN0KGN0eCwgcmVzcC0+aGVhZGVycy5zdGFydCwgcmVzcC0+aGVhZGVycy53cml0ZSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVNQT05TRV9CT0RZVVNFRDogewogICAgICByZXQgPSBKU19OZXdCb29sKGN0eCwgcmVzcC0+Ym9keSA/IGJ1ZmZlcl9TSVpFKHJlc3AtPmJvZHkpID4gMCA6IEZBTFNFKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFU1BPTlNFX0JPRFk6IHsKICAgICAgaWYocmVzcC0+Ym9keSAmJiBidWZmZXJfU0laRShyZXNwLT5ib2R5KSkgewoKICAgICAgICBpZihyZXNwLT50eXBlICYmICFzdHJuY21wKCJ0ZXh0LyIsIHJlc3AtPnR5cGUsIDUpKQogICAgICAgICAgcmV0ID0gSlNfTmV3U3RyaW5nTGVuKGN0eCwgYnVmZmVyX0JFR0lOKHJlc3AtPmJvZHkpLCBidWZmZXJfU0laRShyZXNwLT5ib2R5KSk7CiAgICAgICAgZWxzZQogICAgICAgICAgcmV0ID0gSlNfTmV3QXJyYXlCdWZmZXJDb3B5KGN0eCwgYnVmZmVyX0JFR0lOKHJlc3AtPmJvZHkpLCBidWZmZXJfU0laRShyZXNwLT5ib2R5KSk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQptaW5uZXRfcmVzcG9uc2Vfc2V0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIEpTVmFsdWVDb25zdCB2YWx1ZSwgaW50IG1hZ2ljKSB7CiAgTWlubmV0UmVzcG9uc2UqIHJlc3A7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgY29uc3QgY2hhciogc3RyOwogIHNpemVfdCBsZW47CiAgaWYoIShyZXNwID0gbWlubmV0X3Jlc3BvbnNlX2RhdGEyKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIGlmKHJlc3AtPnJlYWRfb25seSkKICAgIHJldHVybiBKU19UaHJvd1JlZmVyZW5jZUVycm9yKGN0eCwgIlJlc3BvbnNlIG9iamVjdCBpcyByZWFkLW9ubHkiKTsKCiAgc3RyID0gSlNfVG9DU3RyaW5nTGVuKGN0eCwgJmxlbiwgdmFsdWUpOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgUkVTUE9OU0VfU1RBVFVTOiB7CiAgICAgIGludDMyX3QgczsKICAgICAgaWYoIUpTX1RvSW50MzIoY3R4LCAmcywgdmFsdWUpKQogICAgICAgIHJlc3AtPnN0YXR1cyA9IHM7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVNQT05TRV9PSzogewogICAgICByZXNwLT5vayA9IEpTX1RvQm9vbChjdHgsIHZhbHVlKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFU1BPTlNFX1VSTDogewogICAgICB1cmxfZnJlZSgmcmVzcC0+dXJsLCBjdHgpOwogICAgICB1cmxfcGFyc2UoJnJlc3AtPnVybCwgc3RyLCBjdHgpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkVTUE9OU0VfVFlQRTogewogICAgICByZXNwLT50eXBlID0ganNfc3RyZHVwKGN0eCwgc3RyKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFU1BPTlNFX0JPRFlVU0VEOiB7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVNQT05TRV9CT0RZOiB7CiAgICAgIGlmKCFyZXNwLT5ib2R5KQogICAgICAgIHJlc3BvbnNlX2dlbmVyYXRvcihyZXNwLCBjdHgpOwoKICAgICAgcmVzcC0+Ym9keS0+cmVhZCA9IHJlc3AtPmJvZHktPndyaXRlID0gcmVzcC0+Ym9keS0+c3RhcnQ7CgogICAgICBidWZmZXJfZnJvbXZhbHVlKHJlc3AtPmJvZHksIHZhbHVlLCBjdHgpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkVTUE9OU0VfSEVBREVSUzogewogICAgICBpbnQgbiA9IGhlYWRlcnNfZnJvbW9iaigmcmVzcC0+aGVhZGVycywgdmFsdWUsIGN0eCk7CgogICAgICBpZihuIDw9IDApIHsKICAgICAgICByZXQgPSBKU19UaHJvd1R5cGVFcnJvcihjdHgsICJJbnZhbGlkIGhlYWRlcnMgb2JqZWN0Iik7CiAgICAgIH0gZWxzZSB7CiNpZmRlZiBERUJVR19PVVRQVVQKICAgICAgICBwcmludGYoIm1pbm5ldC1yZXNwb25zZTogJWQgaGVhZGVycyBhZGRlZFxuIiwgbik7CiNlbmRpZgogICAgICAgIHJldCA9IEpTX0R1cFZhbHVlKGN0eCwgdmFsdWUpOwogICAgICB9CgogICAgICBicmVhazsKICAgIH0KICB9CgogIEpTX0ZyZWVDU3RyaW5nKGN0eCwgc3RyKTsKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQptaW5uZXRfcmVzcG9uc2VfaXRlcmF0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBNaW5uZXRSZXNwb25zZSogcmVzcDsKCiAgaWYoIShyZXNwID0gbWlubmV0X3Jlc3BvbnNlX2RhdGEyKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIGlmKHJlc3AtPmdlbmVyYXRvcikKICAgIHJldCA9IG1pbm5ldF9nZW5lcmF0b3JfY3JlYXRlKGN0eCwgJnJlc3AtPmdlbmVyYXRvcik7CgogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKbWlubmV0X3Jlc3BvbnNlX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHByb3RvLCBvYmo7CiAgTWlubmV0UmVzcG9uc2UqIHJlc3A7CiAgaW50IGk7CgogIGlmKCEocmVzcCA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2YoTWlubmV0UmVzcG9uc2UpKSkpCiAgICByZXR1cm4gSlNfVGhyb3dPdXRPZk1lbW9yeShjdHgpOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZSBjbGFzcyBpcyBleHRlbmRlZC4gKi8KICBwcm90byA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgbmV3X3RhcmdldCwgInByb3RvdHlwZSIpOwogIGlmKEpTX0lzRXhjZXB0aW9uKHByb3RvKSkKICAgIHByb3RvID0gSlNfRHVwVmFsdWUoY3R4LCBtaW5uZXRfcmVzcG9uc2VfcHJvdG8pOwoKICBvYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcHJvdG8sIG1pbm5ldF9yZXNwb25zZV9jbGFzc19pZCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgcHJvdG8pOwogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICBnb3RvIGZhaWw7CgogIGlmKGFyZ2MgPj0gMSAmJiBhcmdjIDwgMykgewoKICAgIGlmKCFqc19pc19udWxsaXNoKGFyZ3ZbMF0pKSB7CiAgICAgIGJ1ZmZlcl9mcm9tdmFsdWUocmVzcC0+Ym9keSwgYXJndlswXSwgY3R4KTsKICAgIH0KCiAgICBhcmdjLS07CiAgICBhcmd2Kys7CiAgfQoKICBmb3IoaSA9IDA7IGkgPCBhcmdjOyBpKyspIHsKICAgIGlmKEpTX0lzT2JqZWN0KGFyZ3ZbaV0pICYmICFKU19Jc051bGwoYXJndltpXSkpIHsKICAgICAganNfY29weV9wcm9wZXJ0aWVzKGN0eCwgb2JqLCBhcmd2W2ldLCBKU19HUE5fU1RSSU5HX01BU0spOwogICAgICBhcmdjLS07CiAgICAgIGFyZ3YrKzsKICAgIH0gZWxzZSBpZihKU19Jc1N0cmluZyhhcmd2W2ldKSkgewogICAgICBjb25zdCBjaGFyKiBzdHIgPSBKU19Ub0NTdHJpbmcoY3R4LCBhcmd2W2ldKTsKICAgICAgaWYoIXJlc3AtPnVybC5wYXRoKQogICAgICAgIHVybF9wYXJzZSgmcmVzcC0+dXJsLCBzdHIsIGN0eCk7CiAgICAgIGVsc2UgaWYoIXJlc3AtPnR5cGUpCiAgICAgICAgcmVzcC0+dHlwZSA9IGpzX3N0cmR1cChjdHgsIHN0cik7CiAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgc3RyKTsKCiAgICB9IGVsc2UgaWYoSlNfSXNCb29sKGFyZ3ZbaV0pKSB7CiAgICAgIHJlc3AtPm9rID0gSlNfVG9Cb29sKGN0eCwgYXJndltpXSk7CiAgICB9IGVsc2UgaWYoSlNfSXNOdW1iZXIoYXJndltpXSkpIHsKICAgICAgaW50MzJfdCBzOwogICAgICBpZighSlNfVG9JbnQzMihjdHgsICZzLCBhcmd2W2ldKSkKICAgICAgICByZXNwLT5zdGF0dXMgPSBzOwogICAgfQogIH0KCiAgSlNfU2V0T3BhcXVlKG9iaiwgcmVzcCk7CgogIHJldHVybiBvYmo7CgpmYWlsOgogIGpzX2ZyZWUoY3R4LCByZXNwKTsKICBKU19GcmVlVmFsdWUoY3R4LCBvYmopOwogIHJldHVybiBKU19FWENFUFRJT047Cn0KCnZvaWQKbWlubmV0X3Jlc3BvbnNlX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCBKU1ZhbHVlIHZhbCkgewogIE1pbm5ldFJlc3BvbnNlKiByZXM7CgogIGlmKChyZXMgPSBtaW5uZXRfcmVzcG9uc2VfZGF0YSh2YWwpKSkKICAgIHJlc3BvbnNlX2ZyZWVfcnQocmVzLCBydCk7Cn0KCkpTQ2xhc3NEZWYgbWlubmV0X3Jlc3BvbnNlX2NsYXNzID0gewogICAgIk1pbm5ldFJlc3BvbnNlIiwKICAgIC5maW5hbGl6ZXIgPSBtaW5uZXRfcmVzcG9uc2VfZmluYWxpemVyLAp9OwoKY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3Jlc3BvbnNlX3Byb3RvX2Z1bmNzW10gPSB7CiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImFycmF5QnVmZmVyIiwgMCwgbWlubmV0X3Jlc3BvbnNlX21ldGhvZCwgUkVTUE9OU0VfQVJSQVlCVUZGRVIpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJ0ZXh0IiwgMCwgbWlubmV0X3Jlc3BvbnNlX21ldGhvZCwgUkVTUE9OU0VfVEVYVCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImpzb24iLCAwLCBtaW5uZXRfcmVzcG9uc2VfbWV0aG9kLCBSRVNQT05TRV9KU09OKSwKICAgIEpTX0NGVU5DX0RFRigiY2xvbmUiLCAwLCBtaW5uZXRfcmVzcG9uc2VfY2xvbmUpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoInN0YXR1cyIsIG1pbm5ldF9yZXNwb25zZV9nZXQsIG1pbm5ldF9yZXNwb25zZV9zZXQsIFJFU1BPTlNFX1NUQVRVUywgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJzdGF0dXNUZXh0IiwgbWlubmV0X3Jlc3BvbnNlX2dldCwgbWlubmV0X3Jlc3BvbnNlX3NldCwgUkVTUE9OU0VfU1RBVFVTVEVYVCwgMCksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigiYm9keVVzZWQiLCBtaW5uZXRfcmVzcG9uc2VfZ2V0LCAwLCBSRVNQT05TRV9CT0RZVVNFRCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJib2R5IiwgbWlubmV0X3Jlc3BvbnNlX2dldCwgbWlubmV0X3Jlc3BvbnNlX3NldCwgUkVTUE9OU0VfQk9EWSwgMCksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigib2siLCBtaW5uZXRfcmVzcG9uc2VfZ2V0LCBtaW5uZXRfcmVzcG9uc2Vfc2V0LCBSRVNQT05TRV9PSywgMCksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigicmVkaXJlY3RlZCIsIG1pbm5ldF9yZXNwb25zZV9nZXQsIG1pbm5ldF9yZXNwb25zZV9zZXQsIFJFU1BPTlNFX1JFRElSRUNURUQsIDApLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoInVybCIsIG1pbm5ldF9yZXNwb25zZV9nZXQsIG1pbm5ldF9yZXNwb25zZV9zZXQsIFJFU1BPTlNFX1VSTCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJ0eXBlIiwgbWlubmV0X3Jlc3BvbnNlX2dldCwgbWlubmV0X3Jlc3BvbnNlX3NldCwgUkVTUE9OU0VfVFlQRSwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJoZWFkZXJzIiwgbWlubmV0X3Jlc3BvbnNlX2dldCwgbWlubmV0X3Jlc3BvbnNlX3NldCwgUkVTUE9OU0VfSEVBREVSUywgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX0NGVU5DX0RFRigiW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSIsIDAsIG1pbm5ldF9yZXNwb25zZV9pdGVyYXRvciksCiAgICBKU19QUk9QX1NUUklOR19ERUYoIltTeW1ib2wudG9TdHJpbmdUYWddIiwgIk1pbm5ldFJlc3BvbnNlIiwgSlNfUFJPUF9DT05GSUdVUkFCTEUpLAp9OwoKY29uc3Qgc2l6ZV90IG1pbm5ldF9yZXNwb25zZV9wcm90b19mdW5jc19zaXplID0gY291bnRvZihtaW5uZXRfcmVzcG9uc2VfcHJvdG9fZnVuY3MpOwoAAAAAAAAAABkuAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMykAAAAAAAAzKQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMykAAAAAAAAzKQAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"paste",
					null,
					"AgAAAAkIAAAAAAAAFwgAAAAAAAAAAAAAFwgAAAAAAAAXCAAAAAAAAAsAAABidWZmZXJfZnJlZQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACQgAAAAAAAAUCAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "generator"
					},
					"CgAAAB4IAAAAAAAAHwgAAAAAAAAAAAAAHwgAAAAAAAAfCAAAAAAAAAQAAABib2R5HwgAAAAAAAAgCAAAAAAAAAAAAAAgCAAAAAAAACEIAAAAAAAAAAAAACEIAAAAAAAAIggAAAAAAAAAAAAAIggAAAAAAAAjCAAAAAAAAAAAAAAjCAAAAAAAACQIAAAAAAAAAAAAACQIAAAAAAAAJQgAAAAAAAAAAAAAJQgAAAAAAAAmCAAAAAAAAAAAAAAmCAAAAAAAACcIAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHggAAAAAAAAiCAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					4,
					"right_delete",
					null,
					"BAAAACcIAAAAAAAAJwgAAAAAAAABAAAALCcIAAAAAAAAJwgAAAAAAAABAAAAICcIAAAAAAAAJwgAAAAAAAABAAAAcicIAAAAAAAAJwgAAAAAAAABAAAAdA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJwgAAAAAAAAnCAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"paste",
					null,
					"AgAAAAkIAAAAAAAAGggAAAAAAAAAAAAAGggAAAAAAAAaCAAAAAAAAA4AAABnZW5lcmF0b3JfZnJlZQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACQgAAAAAAAAXCAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAABsIAAAAAAAAHAgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGwgAAAAAAAAbCAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"paste",
					null,
					"AgAAAAIHAAAAAAAAKQcAAAAAAAAAAAAAKQcAAAAAAAApBwAAAAAAAC8AAAAgIGJ1ZmZlcl9mcmVlKHJlc3AtPmJvZHksIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAgcAAAAAAAAxBwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "libwebsockets/test-apps/test-client.c",
			"settings":
			{
				"buffer_size": 22816,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"outg",
				"Browse Mode: Outline (Right)"
			],
			[
				"js",
				"Pretty JSON: Format JSON"
			],
			[
				"deb",
				"Preferences: Debugger Settings"
			],
			[
				"pretti",
				"JsPrettier: Format Code"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"fo",
				"Format CSS: Expanded"
			],
			[
				"forma",
				"Format CSS: Expanded"
			],
			[
				"css",
				"Format CSS: Expanded"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"tidy",
				"Tidy CSS"
			],
			[
				"edut ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"build",
				"Build With: prettier ${file_path}"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Bookmarks: Select Previous"
			],
			[
				"schem",
				"Schemr: Random scheme"
			],
			[
				"extra",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"extrac",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Install Package Control"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"schemeed",
				"SchemeEditor: Edit Scheme (file picker)"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"repo",
				"Package Control: Remove Repository"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"upgra",
				"Package Control: Upgrade Package"
			],
			[
				"adv",
				"Package Control: Advanced Install Package"
			],
			[
				"ad",
				"Package Control: Advanced Install Package"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove pac",
				"Package Control: Remove Package"
			],
			[
				"outl",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Debugger: Add or Select Configuration"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 442.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-net"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-hash.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-buffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-buffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-response.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-form-parser.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-form-parser.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/jsutils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/jsutils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-generator.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
		"/home/janos/Sources/plot-cv/quickjs/quickjs.h",
		"/home/janos/Sources/plot-cv/quickjs/cutils.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-server-http.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-buffer.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-url.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/utils.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-server-proxy.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/example.mjs",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-fetch.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-server-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/tls/openssl/lws-genhash.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-client-http.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/jsutils.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-form-parser.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-form-parser.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-hash.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-hash.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/libwebsockets/lib/tls/openssl/lws-genhash.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/libwebsockets/lib/tls/mbedtls/lws-genhash.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-genhash.h",
		"/home/roman/Projects/plot-cv/lib/json/path.js",
		"/home/roman/Projects/plot-cv/lib/pointer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/ref.js",
		"/home/roman/Projects/plot-cv/lib/eagle/node.js",
		"/home/roman/Projects/plot-cv/eagle-query.js",
		"/home/roman/Projects/plot-cv/cli-helpers.js",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/LCCV/include/lccv.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_raspi_cam.cpp",
		"/home/roman/Projects/plot-cv/takephoto.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/lib/xml.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/path.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/path.c",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/lib/eagle/nodeList.js",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/lib/xml/xpath.js",
		"/home/roman/Projects/plot-cv/lib/eagle/document.js",
		"/home/roman/Projects/plot-cv/lib/eagle/element.js",
		"/home/roman/Projects/plot-cv/lib/eagle/svgRenderer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/utils.h",
		"/home/roman/Projects/plot-cv/lib/eagle/common.js",
		"/home/roman/Projects/plot-cv/lib/eagle/schematicRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/boardRenderer.js",
		"/home/roman/Projects/plot-cv/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/usr/local/include/ffi.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-ffi/ffi.c",
		"/home/roman/Projects/plot-cv/upload.html",
		"/home/roman/Projects/plot-cv/index.html",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_libcamera_app.cpp",
		"/usr/include/postgresql/libpq-fe.h",
		"/home/roman/Projects/plot-cv/psql.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/element.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/wire.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/text.js",
		"/home/roman/Projects/plot-cv/test-psql.js",
		"/home/roman/Projects/plot-cv/lib/eagle/renderer.js",
		"/home/roman/Projects/plot-cv/eagle2svg.js",
		"/home/roman/Projects/plot-cv/upload-server.js",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/upload.js",
		"/home/roman/Projects/plot-cv/test-rpc.js",
		"/home/roman/Projects/plot-cv/lib/eagle/nodeMap.js",
		"/home/roman/Projects/plot-cv/lib/eagle/project.js",
		"/home/roman/Projects/plot-cv/lib/preact-render-to-string.js",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/symbol.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/instance.js",
		"/home/roman/Projects/plot-cv/lib/dom/preactComponent.js",
		"/home/roman/Projects/plot-cv/lib/repeater/react-hooks.js",
		"/home/roman/Projects/plot-cv/lib/functional.js",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/list.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/drawing.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useTrkl.js",
		"/home/roman/Projects/plot-cv/lib/json/pathMapper.js",
		"/home/janos/Sources/plot-cv/upload.html",
		"/home/janos/Sources/plot-cv/.cmds",
		"/home/janos/Sources/plot-cv/.cmake-format",
		"/home/janos/Sources/plot-cv/.cproject",
		"/home/janos/Sources/plot-cv/test-rpc.js",
		"/home/janos/Sources/plot-cv/test-video.js",
		"/home/janos/Sources/plot-cv/imagePipeline.js",
		"/home/janos/Sources/plot-cv/test-image.js",
		"/home/janos/Sources/plot-cv/midi-tcp.js",
		"/home/janos/Sources/plot-cv/list-proxies.js",
		"/home/janos/Sources/plot-cv/libraries.js",
		"/home/janos/Sources/plot-cv/grammar-geda-netlist.js",
		"/home/janos/Sources/plot-cv/test-membrane.js",
		"/home/janos/Sources/plot-cv/eagle-server.js",
		"/home/janos/Sources/plot-cv/eagle-query.js",
		"/home/janos/Sources/plot-cv/eagle-commands.js",
		"/home/janos/Sources/plot-cv/check-discogs.js",
		"/home/janos/Sources/plot-cv/debugger-server.js",
		"/home/janos/Sources/plot-cv/adsb-server.js",
		"/home/janos/Sources/plot-cv/adsb-client.js"
	],
	"find":
	{
		"height": 46.0
	},
	"find_in_files":
	{
		"height": 185.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,-*/build/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"argc",
			"ringbuffer_init",
			"REQUEST.HEA",
			"lws_ring_consume\\(",
			"ringbuffer_consume",
			"lws_ring_consume\\(",
			"sendq",
			"->sendq",
			"->opaque =",
			"opaque =",
			"lws_ring_get_count_waiting_elements",
			"on_http",
			"\"onHttp",
			"onHttp",
			"server->cb",
			"REQUEST_BODY",
			"ws_dup",
			"exts",
			"lws_extension",
			"{\n",
			"resp =",
			"http_server_respond",
			"HTTP_BODY:",
			"in_body",
			"lws_callback_on_writable",
			"WSI_CREATE",
			"minnet_emit",
			"js_error",
			"WEBSOCKET_PEER",
			"= js_input_buffer",
			"buffer_fromvalue",
			"DynBufReallocFunc",
			"hexdigits",
			"number",
			"dbuf_",
			"HASH_SIZE",
			"Atom",
			"ATOM",
			"form_parser",
			"Hash not finalized",
			"js_error_print",
			"error",
			"Error",
			"printf",
			"xception",
			"form_parser_process",
			"JS_GetException",
			"form_parser_process",
			"form_parser_callback",
			"js_buffer_from",
			"lws_genhash_[a-z_]*\\(",
			"hash_update",
			"hash_finalize",
			"lws_genhash_[a-z_]*\\(",
			"hash_finalize",
			"_destroy",
			"_destr4oy",
			"hash_update",
			"lws_genhash_[a-z_]*\\(",
			"hash_init",
			"lws_genhash",
			"h->lws",
			"->lws",
			"minnet_url_inspect",
			"hash_free",
			"JS_NewInt64",
			"lws_genhash_update",
			"js_buffer_from",
			"%(.*), in\\)",
			"%.*, in\\)",
			", in\\)",
			"js_is_arraybuffer",
			"js_is_typedarray",
			"JS_NewAtom",
			"property",
			"js_object",
			"HasProperty",
			"is_typed",
			"classname",
			"BOOL",
			"Constructor",
			"%.*, in,",
			", in,",
			", in",
			"%\\.\\*",
			"UTILS_H",
			"MINNET_JSUTILS_H",
			"buffer_free_default",
			"input_buffer_free_default",
			"InputBuffer",
			"_NUM",
			"^offset_",
			"lws_genhash_init",
			"lws_genhash_destroy",
			"MinnetWeb",
			"LWS_GENHASH_TYPE_"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"r",
			"HASH_BYTELENGTH",
			"hash",
			"h->lws.hash",
			"%\\1, (char*)in)",
			"MINNET_UTILS_H",
			"JSUTILS_H",
			"js_buffer_free_default",
			"JSBuffer",
			"",
			"ol_"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 471,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-generator.c",
							"function_name_status_row": 1,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									244,
									258
								],
								[
									429,
									446
								],
								[
									582,
									596
								],
								[
									860,
									873
								],
								[
									1104,
									1118
								],
								[
									1504,
									1519
								],
								[
									1871,
									1886
								],
								[
									2002,
									2017
								],
								[
									2219,
									2244
								],
								[
									2513,
									2534
								],
								[
									2773,
									2796
								]
							],
							"symlist":
							[
								"—Ⓕ– generator_zero ( ) { … } — function",
								"—Ⓕ– generator_destroy ( ) { … } — function",
								"—Ⓕ– generator_free ( ) { … } — function",
								"—Ⓕ– generator_new ( ) { … } — function",
								"—Ⓕ– generator_next ( ) { … } — function",
								"—Ⓕ– generator_write ( ) { … } — function",
								"—Ⓕ– generator_close ( ) { … } — function",
								"—Ⓕ– generator_queue ( ) { … } — function",
								"—Ⓕ– minnet_generator_iterator ( ) { … } — function",
								"—Ⓕ– minnet_generator_next ( ) { … } — function",
								"—Ⓕ– minnet_generator_create ( ) { … } — function"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 3,
							"tabs_extra_last_activated": 1661467479.44,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "minnet-hash.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11391,
						"regions":
						{
						},
						"selection":
						[
							[
								5993,
								5993
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 224,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661113218.12,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5024.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "minnet-form-parser.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15412,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								20
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661465986.2,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "minnet-form-parser.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2467,
						"regions":
						{
						},
						"selection":
						[
							[
								1359,
								1378
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 35,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661111847.88,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 448.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "minnet-request.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11644,
						"regions":
						{
						},
						"selection":
						[
							[
								8108,
								8115
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 352,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661465985.75,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8292.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "minnet-server.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18181,
						"regions":
						{
						},
						"selection":
						[
							[
								9571,
								9571
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 276,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661466757.32,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6415.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "minnet.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11060,
						"regions":
						{
						},
						"selection":
						[
							[
								4102,
								4111
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 157,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661461770.44,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6441.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "minnet-server.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 874,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661461582.19,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "minnet-server-ws.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8168,
						"regions":
						{
						},
						"selection":
						[
							[
								6926,
								6927
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 202,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661467582.15,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5140.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "minnet-websocket.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21337,
						"regions":
						{
						},
						"selection":
						[
							[
								1382,
								1398
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 64,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661467585.56,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1008.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "minnet.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 36506,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661465168.94,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "minnet-websocket.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3096,
						"regions":
						{
						},
						"selection":
						[
							[
								610,
								610
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 30,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661466257.64,
							"tabs_extra_last_activated_sheet_index": 10,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 425.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "jsutils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10030,
						"regions":
						{
						},
						"selection":
						[
							[
								615,
								623
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 28,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661467513.85,
							"tabs_extra_last_activated_sheet_index": 11,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2477.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "minnet-server-http.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28558,
						"regions":
						{
						},
						"selection":
						[
							[
								20057,
								19991
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 709,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661467439.3,
							"tabs_extra_last_activated_sheet_index": 12,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 26.0,
						"translation.y": 17218.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "minnet-buffer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3868,
						"regions":
						{
						},
						"selection":
						[
							[
								173,
								173
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 8,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661467531.8,
							"tabs_extra_last_activated_sheet_index": 13,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 108.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "minnet-buffer.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7607,
						"regions":
						{
						},
						"selection":
						[
							[
								141,
								143
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 6,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661467245.82,
							"tabs_extra_last_activated_sheet_index": 14,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "minnet-request.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2312,
						"regions":
						{
						},
						"selection":
						[
							[
								391,
								403
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 20,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661465985.02,
							"tabs_extra_last_activated_sheet_index": 14,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "minnet-generator.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1022,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "minnet-ringbuffer.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7902,
						"regions":
						{
						},
						"selection":
						[
							[
								448,
								448
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 29,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661467754.39,
							"tabs_extra_last_activated_sheet_index": 17,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "minnet-generator.c",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 3465,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661488841.75,
							"tabs_extra_last_activated_sheet_index": 18,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 20,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5999,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										189,
										206
									],
									[
										306,
										323
									],
									[
										475,
										492
									],
									[
										683,
										700
									],
									[
										824,
										841
									],
									[
										998,
										1015
									],
									[
										1212,
										1229
									],
									[
										1495,
										1512
									],
									[
										1698,
										1715
									],
									[
										1933,
										1950
									],
									[
										2226,
										2243
									],
									[
										2378,
										2395
									],
									[
										2654,
										2671
									],
									[
										2853,
										2870
									],
									[
										3288,
										3299
									],
									[
										3470,
										3481
									],
									[
										3510,
										3521
									],
									[
										3729,
										3740
									],
									[
										4112,
										4123
									],
									[
										4573,
										4584
									],
									[
										4866,
										4881
									],
									[
										5058,
										5073
									],
									[
										5335,
										5350
									],
									[
										5517,
										5532
									],
									[
										5761,
										5776
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								5340,
								5340
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"detect_indentation": false,
							"function_name_status_row": 151,
							"line_numbers": false,
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1661466024.27,
							"tabs_extra_last_activated_sheet_index": 17,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3525.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14937,
						"regions":
						{
						},
						"selection":
						[
							[
								8998,
								9014
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 355,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661465636.17,
							"tabs_extra_last_activated_sheet_index": 18,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8435.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "build/x86_64-linux-debug/libwebsockets/include/libwebsockets/lws-ring.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11869,
						"regions":
						{
						},
						"selection":
						[
							[
								5681,
								5756
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 146,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661466728.87,
							"tabs_extra_last_activated_sheet_index": 19,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3210.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "libwebsockets/include/libwebsockets/lws-ring.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11869,
						"regions":
						{
						},
						"selection":
						[
							[
								6766,
								6766
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 170,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661465637.02,
							"tabs_extra_last_activated_sheet_index": 19,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3333.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "minnet-response.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2224,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661467587.61,
							"tabs_extra_last_activated_sheet_index": 22,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "minnet-response.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11801,
						"regions":
						{
						},
						"selection":
						[
							[
								2049,
								2066
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 77,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1661461483.71,
							"tabs_extra_last_activated_sheet_index": 13,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1456.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "libwebsockets/test-apps/test-client.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22816,
						"regions":
						{
						},
						"selection":
						[
							[
								18269,
								18294
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 726,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 7,
							"tabs_extra_last_activated": 1661466893.51,
							"tabs_extra_last_activated_sheet_index": 24,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 17013.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 55.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.666666666667,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 0.0
	},
	"output.Debugger Console":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 132.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "make",
	"project": "minnet.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"server-ws",
				"minnet-server-ws.c"
			],
			[
				"form-par",
				"minnet-form-parser.c"
			],
			[
				"quickjs.h",
				"~/Sources/plot-cv/quickjs/quickjs.h"
			],
			[
				"lws-genhash",
				"libwebsockets/lib/tls/openssl/lws-genhash.c"
			],
			[
				"node",
				"lib/eagle/node.js"
			],
			[
				"elem",
				"lib/eagle/element.js"
			],
			[
				"quer",
				"eagle-query.js"
			],
			[
				"eleme",
				"lib/eagle/element.js"
			],
			[
				"elemen",
				"lib/eagle/element.js"
			],
			[
				"ref.js",
				"lib/eagle/ref.js"
			],
			[
				"path.js",
				"lib/json/path.js"
			],
			[
				"pointer.js",
				"lib/pointer.js"
			],
			[
				"node.js",
				"lib/eagle/node.js"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"xml.js",
				"lib/xml.js"
			],
			[
				"util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"ast-she",
				"ast-shell.js"
			],
			[
				"js_ras",
				"qjs-opencv/js_raspi_cam.cpp"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/src/qjsm.c"
			],
			[
				"js_libca",
				"qjs-opencv/js_libcamera_app.cpp"
			],
			[
				"takeph",
				"takephoto.js"
			],
			[
				"ffi.c",
				"quickjs/qjs-ffi/ffi.c"
			],
			[
				"psql",
				"psql.js"
			],
			[
				"eagle-shel",
				"eagle-shell.js"
			],
			[
				"schematic",
				"lib/eagle/schematicRenderer.js"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"upload-ser",
				"upload-server.js"
			],
			[
				"path.h",
				"quickjs/qjs-modules/include/path.h"
			],
			[
				"path.c",
				"quickjs/qjs-modules/src/path.c"
			],
			[
				"xml.c",
				"quickjs/qjs-modules/quickjs-xml.c"
			],
			[
				"boardre",
				"lib/eagle/boardRenderer.js"
			],
			[
				"ast-shell",
				"ast-shell.js"
			],
			[
				"extend",
				"quickjs/qjs-modules/lib/extendArray.js"
			],
			[
				"eagle-shell",
				"eagle-shell.js"
			],
			[
				"test-rpc",
				"test-rpc.js"
			],
			[
				"upload.html",
				"upload.html"
			],
			[
				"index.ht",
				"index.html"
			],
			[
				"io-help",
				"io-helpers.js"
			],
			[
				"render-to-s",
				"lib/preact-render-to-string.js"
			],
			[
				"board",
				"lib/eagle/boardRenderer.js"
			],
			[
				"doc",
				"lib/eagle/document.js"
			],
			[
				"boardRe",
				"lib/eagle/boardRenderer.js"
			],
			[
				"docu",
				"lib/eagle/document.js"
			],
			[
				"boardRen",
				"lib/eagle/boardRenderer.js"
			],
			[
				"repl",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"element",
				"lib/eagle/element.js"
			],
			[
				"docum",
				"lib/eagle/document.js"
			],
			[
				"project.js",
				"lib/eagle/project.js"
			],
			[
				"react-hook",
				"lib/repeater/react-hooks.js"
			],
			[
				"element.js",
				"lib/eagle/element.js"
			],
			[
				"instance",
				"lib/eagle/components/instance.js"
			],
			[
				"useTrkl",
				"lib/hooks/useTrkl.js"
			],
			[
				"drawing",
				"lib/eagle/components/drawing.js"
			],
			[
				"preactCom",
				"lib/dom/preactComponent.js"
			],
			[
				"main",
				"main.js"
			],
			[
				"schema",
				"lib/eagle/schematicRenderer.js"
			],
			[
				"documen",
				"lib/eagle/document.js"
			],
			[
				"svgRe",
				"lib/eagle/svgRenderer.js"
			],
			[
				"svgRend",
				"lib/eagle/svgRenderer.js"
			],
			[
				"document",
				"lib/eagle/document.js"
			],
			[
				"pathMapper",
				"lib/json/pathMapper.js"
			],
			[
				"functional",
				"lib/functional.js"
			],
			[
				"svgrend",
				"lib/eagle/svgRenderer.js"
			],
			[
				"schemat",
				"lib/eagle/schematicRenderer.js"
			],
			[
				"upload",
				"upload.html"
			],
			[
				"list.html",
				"list.html"
			],
			[
				"",
				".cmake-format"
			],
			[
				"imagepip",
				"imagePipeline.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"test-image",
				"test-image.js"
			],
			[
				"test-video",
				"test-video.js"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"test-ima",
				"test-image.js"
			],
			[
				"jsutils.h",
				"quickjs/qjs-net/jsutils.h"
			],
			[
				"jsut",
				"quickjs/qjs-net/jsutils.c"
			],
			[
				"cv-she",
				"cv-shell.js"
			],
			[
				"svgre",
				"lib/eagle/svgRenderer.js"
			],
			[
				"eagle",
				"test-eagle.js"
			],
			[
				"termina",
				"terminal.js"
			],
			[
				"cvPipe",
				"qjs-opencv/js/cvPipeline.js"
			],
			[
				"imagePip",
				"imagePipeline.js"
			],
			[
				"gui.js",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"make-bi",
				"make-bitmap.js"
			],
			[
				"commands",
				"commands.js"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"virtfs",
				"virtfs.js"
			],
			[
				"server.js",
				"server.js"
			],
			[
				"quickjs-deep",
				"quickjs/qjs-modules/quickjs-deep.c"
			],
			[
				"eagle-ser",
				"eagle-server.js"
			],
			[
				"debugger-server",
				"debugger-server.js"
			],
			[
				"style.css",
				"style.css"
			],
			[
				"index.html",
				"index.html"
			],
			[
				"css",
				"lib/grammars/css3.g4"
			],
			[
				"xpath",
				"lib/grammars/xpath.g4"
			],
			[
				"console",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"io-he",
				"io-helpers.js"
			],
			[
				"libs.js",
				"libs.js"
			],
			[
				"lscac",
				"lib/lscache.js"
			],
			[
				"lib/util.js",
				"lib/util.js"
			],
			[
				"disco",
				"discogs.js"
			],
			[
				"spawn.",
				"lib/spawn.js"
			],
			[
				"helpers",
				"io-helpers.js.orig"
			],
			[
				"child-",
				"quickjs/qjs-modules/child-process.c"
			],
			[
				"package.j",
				"package.json"
			],
			[
				"config.js",
				"config.js"
			],
			[
				"test-imrea",
				"test-imread.js"
			],
			[
				"cvHi",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"cvpipe",
				"qjs-opencv/js/cvPipeline.js"
			],
			[
				"events.js",
				"quickjs/qjs-modules/lib/events.js"
			],
			[
				"test-vi",
				"test-video.js"
			],
			[
				"test-cv",
				"test-cv.js"
			],
			[
				"point.js",
				"lib/geom/point.js"
			],
			[
				"size.js",
				"lib/geom/size.js"
			],
			[
				"server",
				"server.js"
			],
			[
				"test-wor",
				"test-worker.js"
			],
			[
				"ws-work",
				"ws-worker.js"
			],
			[
				"fs.js",
				"quickjs/qjs-modules/lib/fs.js"
			],
			[
				"cvVi",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"ideoSou",
				"videoSource.js"
			],
			[
				"console.js",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"dia",
				"diagram.js"
			],
			[
				"diagra",
				"diagram.js"
			],
			[
				"diag",
				"diagram.js"
			],
			[
				"opencv-vi",
				"opencv-video.c"
			],
			[
				"opencv-vide",
				"opencv-video.c"
			],
			[
				"simplest",
				"simplest_ffmpeg_audio_decoder.cpp"
			],
			[
				"util.",
				"lib/util.js"
			],
			[
				"js",
				"jack-session-client.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/quickjs/modules/modules.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "N",
		"selected_items":
		[
			[
				"N",
				"nb"
			],
			[
				"",
				"$"
			]
		],
		"width": 592.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 231.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
