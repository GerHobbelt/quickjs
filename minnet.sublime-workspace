{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"exp",
				"expected"
			],
			[
				"getOwn",
				"getOwnPropertyNames(...)"
			],
			[
				"define",
				"defineProperty(...)"
			],
			[
				"PROTOCOL",
				"PROTOCOL_HTTP"
			],
			[
				"Minn",
				"MinnetResponse"
			],
			[
				"min",
				"minnet_url_proto_funcs"
			],
			[
				"LWS_CALL",
				"LWS_CALLBACK_PROTOCOL_INIT"
			],
			[
				"Minnet",
				"MinnetCallback"
			],
			[
				"js_mall",
				"js_mallocz"
			],
			[
				"JS_FreeV",
				"JS_FreeValueRT"
			],
			[
				"LIBWEB",
				"LIBWEBSOCKETS_LIBRARY_DIR"
			],
			[
				"vhost_",
				"vhost_options_create"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"CURL",
				"CURL_LIBRARY"
			],
			[
				"LI",
				"LIBWEBSOCKETS_LIBRARY_DIR"
			],
			[
				"target_link_",
				"target_link_directories"
			],
			[
				"CURL_",
				"CURL_LIBRARY_DEBUG"
			],
			[
				"minnet",
				"minnet_client_lws"
			],
			[
				"JS_To",
				"JS_ToCString"
			],
			[
				"JS_GetP",
				"JS_GetPropertyUint32"
			],
			[
				"OP",
				"OPENSSL_LIBRARY_DIR"
			],
			[
				"Content",
				"Content-Disposition"
			],
			[
				"MBED",
				"MBEDTLS_LIBRARY_DIR"
			],
			[
				"LIBWEBSO",
				"LIBWEBSOCKETS_LIBRARY_DIR"
			],
			[
				"CMAKE_",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"JS_Throw",
				"JS_ThrowOutOfMemory"
			],
			[
				"opt_P",
				"opt_private_key"
			],
			[
				"JS_FRee",
				"JS_FreeValue"
			],
			[
				"LWS_WR",
				"LWS_WRITE_HTTP_FINAL"
			],
			[
				"MBEDTLS_LIB",
				"MBEDTLS_LIBRARY_DIR"
			],
			[
				"curl_mul",
				"curl_multi_cleanup"
			],
			[
				"LWS_CALLBACK_",
				"LWS_CALLBACK_HTTP_WRITEABLE"
			],
			[
				"lws_get",
				"lws_get_opaque_user_data"
			],
			[
				"Event",
				"EventTarget"
			],
			[
				"http_",
				"http_response"
			],
			[
				"STREAM",
				"STREAM_TEXT"
			],
			[
				"moun",
				"mountpoint_len"
			],
			[
				"ori",
				"origin_protocol"
			],
			[
				"mount",
				"mountpoint_len"
			],
			[
				"LWS",
				"LWSMPRO_CALLBACK"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"BUILD_",
				"BUILD_LIBWEBSOCKETS"
			],
			[
				"minnet_request",
				"minnet_request_class_id"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"js_loca",
				"js_location_data"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  main(...args)\n  arg =>\n  onConnect(ws, req)\n  () =>\n  () =>\n  onClose(ws, reason)\n  onError(ws, error)\n  onMessage(ws, msg)\n  onHttp(req, resp)",
			"settings":
			{
				"buffer_size": 145,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					3880,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.h",
						"symkeys":
						[
							[
								328,
								343
							],
							[
								390,
								402
							],
							[
								437,
								453
							],
							[
								488,
								502
							],
							[
								534,
								551
							],
							[
								625,
								646
							],
							[
								1053,
								1073
							],
							[
								1102,
								1108
							],
							[
								1123,
								1135
							],
							[
								1151,
								1163
							],
							[
								1317,
								1327
							],
							[
								1695,
								1706
							],
							[
								1897,
								1906
							],
							[
								2013,
								2023
							],
							[
								2113,
								2124
							],
							[
								2463,
								2477
							],
							[
								2580,
								2595
							]
						],
						"symlist":
						[
							"MinnetWebsocket",
							"ws_from_wsi2",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_constructor",
							"wsi_opaque_user_data",
							"socket",
							"http_request",
							"session_data",
							"lws_opaque",
							"lws_session",
							"ws_opaque",
							"ws_session",
							"ws_from_wsi",
							"minnet_ws_data",
							"minnet_ws_data2"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAEQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3881,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.h",
						"symkeys":
						[
							[
								328,
								343
							],
							[
								390,
								402
							],
							[
								437,
								453
							],
							[
								488,
								502
							],
							[
								534,
								551
							],
							[
								625,
								646
							],
							[
								1053,
								1073
							],
							[
								1102,
								1108
							],
							[
								1123,
								1135
							],
							[
								1151,
								1163
							],
							[
								1313,
								1323
							],
							[
								1691,
								1702
							],
							[
								1893,
								1902
							],
							[
								2009,
								2019
							],
							[
								2109,
								2120
							],
							[
								2459,
								2473
							],
							[
								2576,
								2591
							]
						],
						"symlist":
						[
							"MinnetWebsocket",
							"ws_from_wsi2",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_constructor",
							"wsi_opaque_user_data",
							"socket",
							"http_request",
							"session_data",
							"lws_opaque",
							"lws_session",
							"ws_opaque",
							"ws_session",
							"ws_from_wsi",
							"minnet_ws_data",
							"minnet_ws_data2"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAARAQAATWlubmV0V2Vic29ja2V0CiAgd3NfZnJvbV93c2kyCiAgbWlubmV0X3dzX29iamVjdAogIG1pbm5ldF93c193cmFwCiAgbWlubmV0X3dzX3NzbGNlcnQKICBtaW5uZXRfd3NfY29uc3RydWN0b3IKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIHNvY2tldAogIGh0dHBfcmVxdWVzdAogIHNlc3Npb25fZGF0YQogIGx3c19vcGFxdWUKICBsd3Nfc2Vzc2lvbgogIHdzX29wYXF1ZQogIHdzX3Nlc3Npb24KICB3c19mcm9tX3dzaQogIG1pbm5ldF93c19kYXRhCiAgbWlubmV0X3dzX2RhdGEyAAAAAAAAAAARAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQEAAE1pbm5ldFdlYnNvY2tldAogIHdzX2Zyb21fd3NpMgogIG1pbm5ldF93c19vYmplY3QKICBtaW5uZXRfd3Nfd3JhcAogIG1pbm5ldF93c19zc2xjZXJ0CiAgbWlubmV0X3dzX2NvbnN0cnVjdG9yCiAgd3NpX29wYXF1ZV91c2VyX2RhdGEKICBzb2NrZXQKICBodHRwX3JlcXVlc3QKICBzZXNzaW9uX2RhdGEKICBsd3Nfb3BhcXVlCiAgbHdzX3Nlc3Npb24KICB3c19vcGFxdWUKICB3c19zZXNzaW9uCiAgd3NfZnJvbV93c2kKICBtaW5uZXRfd3NfZGF0YQogIG1pbm5ldF93c19kYXRhMgAAAAAAAAAAEQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3882,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								504,
								517
							],
							[
								1448,
								1460
							],
							[
								1587,
								1603
							],
							[
								2204,
								2218
							],
							[
								2766,
								2783
							],
							[
								3399,
								3413
							],
							[
								4464,
								4481
							],
							[
								6144,
								6158
							],
							[
								6801,
								6815
							],
							[
								7458,
								7473
							],
							[
								8634,
								8647
							],
							[
								10451,
								10464
							],
							[
								10800,
								10821
							],
							[
								11998,
								12017
							]
						],
						"symlist":
						[
							"minnet_ws_new",
							"ws_from_wsi2",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_send",
							"minnet_ws_respond",
							"minnet_ws_ping",
							"minnet_ws_pong",
							"minnet_ws_close",
							"minnet_ws_get",
							"minnet_ws_set",
							"minnet_ws_constructor",
							"minnet_ws_finalizer"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAARAQAATWlubmV0V2Vic29ja2V0CiAgd3NfZnJvbV93c2kyCiAgbWlubmV0X3dzX29iamVjdAogIG1pbm5ldF93c193cmFwCiAgbWlubmV0X3dzX3NzbGNlcnQKICBtaW5uZXRfd3NfY29uc3RydWN0b3IKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIHNvY2tldAogIGh0dHBfcmVxdWVzdAogIHNlc3Npb25fZGF0YQogIGx3c19vcGFxdWUKICBsd3Nfc2Vzc2lvbgogIHdzX29wYXF1ZQogIHdzX3Nlc3Npb24KICB3c19mcm9tX3dzaQogIG1pbm5ldF93c19kYXRhCiAgbWlubmV0X3dzX2RhdGEyAAAAAAAAAAD9AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3883,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10242,
								10258
							],
							[
								10776,
								10787
							],
							[
								12490,
								12500
							],
							[
								12678,
								12692
							],
							[
								15963,
								15977
							],
							[
								16543,
								16560
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD9AAAAICBtaW5uZXRfd3NfbmV3CiAgd3NfZnJvbV93c2kyCiAgbWlubmV0X3dzX29iamVjdAogIG1pbm5ldF93c193cmFwCiAgbWlubmV0X3dzX3NzbGNlcnQKICBtaW5uZXRfd3Nfc2VuZAogIG1pbm5ldF93c19yZXNwb25kCiAgbWlubmV0X3dzX3BpbmcKICBtaW5uZXRfd3NfcG9uZwogIG1pbm5ldF93c19jbG9zZQogIG1pbm5ldF93c19nZXQKICBtaW5uZXRfd3Nfc2V0CiAgbWlubmV0X3dzX2NvbnN0cnVjdG9yCiAgbWlubmV0X3dzX2ZpbmFsaXplcgAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3884,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10306,
								10322
							],
							[
								10840,
								10851
							],
							[
								12554,
								12564
							],
							[
								12742,
								12756
							],
							[
								16027,
								16041
							],
							[
								16607,
								16624
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3885,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10365,
								10381
							],
							[
								10899,
								10910
							],
							[
								12613,
								12623
							],
							[
								12801,
								12815
							],
							[
								16086,
								16100
							],
							[
								16666,
								16683
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3886,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10364,
								10380
							],
							[
								10898,
								10909
							],
							[
								12612,
								12622
							],
							[
								12800,
								12814
							],
							[
								16085,
								16099
							],
							[
								16665,
								16682
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3887,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10364,
								10380
							],
							[
								10898,
								10909
							],
							[
								12612,
								12622
							],
							[
								12800,
								12814
							],
							[
								16085,
								16099
							],
							[
								16665,
								16682
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3888,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10368,
								10384
							],
							[
								10902,
								10913
							],
							[
								12616,
								12626
							],
							[
								12804,
								12818
							],
							[
								16089,
								16103
							],
							[
								16669,
								16686
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3889,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10367,
								10383
							],
							[
								10901,
								10912
							],
							[
								12615,
								12625
							],
							[
								12803,
								12817
							],
							[
								16088,
								16102
							],
							[
								16668,
								16685
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3890,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10399,
								10415
							],
							[
								10933,
								10944
							],
							[
								12647,
								12657
							],
							[
								12835,
								12849
							],
							[
								16120,
								16134
							],
							[
								16700,
								16717
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3891,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10395,
								10411
							],
							[
								10929,
								10940
							],
							[
								12643,
								12653
							],
							[
								12831,
								12845
							],
							[
								16116,
								16130
							],
							[
								16696,
								16713
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3892,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10395,
								10411
							],
							[
								10929,
								10940
							],
							[
								12643,
								12653
							],
							[
								12831,
								12845
							],
							[
								16116,
								16130
							],
							[
								16696,
								16713
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3893,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10426,
								10442
							],
							[
								10960,
								10971
							],
							[
								12674,
								12684
							],
							[
								12862,
								12876
							],
							[
								16147,
								16161
							],
							[
								16727,
								16744
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3894,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10394,
								10410
							],
							[
								10928,
								10939
							],
							[
								12642,
								12652
							],
							[
								12830,
								12844
							],
							[
								16115,
								16129
							],
							[
								16695,
								16712
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3895,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10394,
								10410
							],
							[
								10928,
								10939
							],
							[
								12642,
								12652
							],
							[
								12830,
								12844
							],
							[
								16115,
								16129
							],
							[
								16695,
								16712
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3896,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								504,
								517
							],
							[
								1448,
								1460
							],
							[
								1587,
								1603
							],
							[
								2204,
								2218
							],
							[
								2766,
								2783
							],
							[
								3399,
								3413
							],
							[
								4464,
								4481
							],
							[
								6144,
								6158
							],
							[
								6801,
								6815
							],
							[
								7458,
								7473
							],
							[
								8634,
								8647
							],
							[
								10451,
								10464
							],
							[
								10800,
								10821
							],
							[
								11998,
								12017
							]
						],
						"symlist":
						[
							"minnet_ws_new",
							"ws_from_wsi2",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_send",
							"minnet_ws_respond",
							"minnet_ws_ping",
							"minnet_ws_pong",
							"minnet_ws_close",
							"minnet_ws_get",
							"minnet_ws_set",
							"minnet_ws_constructor",
							"minnet_ws_finalizer"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAA/QAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3897,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD9AAAAICBtaW5uZXRfd3NfbmV3CiAgd3NfZnJvbV93c2kyCiAgbWlubmV0X3dzX29iamVjdAogIG1pbm5ldF93c193cmFwCiAgbWlubmV0X3dzX3NzbGNlcnQKICBtaW5uZXRfd3Nfc2VuZAogIG1pbm5ldF93c19yZXNwb25kCiAgbWlubmV0X3dzX3BpbmcKICBtaW5uZXRfd3NfcG9uZwogIG1pbm5ldF93c19jbG9zZQogIG1pbm5ldF93c19nZXQKICBtaW5uZXRfd3Nfc2V0CiAgbWlubmV0X3dzX2NvbnN0cnVjdG9yCiAgbWlubmV0X3dzX2ZpbmFsaXplcgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3898,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								504,
								517
							],
							[
								1448,
								1460
							],
							[
								1587,
								1603
							],
							[
								2204,
								2218
							],
							[
								2766,
								2783
							],
							[
								3399,
								3413
							],
							[
								4464,
								4481
							],
							[
								6144,
								6158
							],
							[
								6801,
								6815
							],
							[
								7458,
								7473
							],
							[
								8634,
								8647
							],
							[
								10451,
								10464
							],
							[
								10800,
								10821
							],
							[
								11998,
								12017
							]
						],
						"symlist":
						[
							"minnet_ws_new",
							"ws_from_wsi2",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_send",
							"minnet_ws_respond",
							"minnet_ws_ping",
							"minnet_ws_pong",
							"minnet_ws_close",
							"minnet_ws_get",
							"minnet_ws_set",
							"minnet_ws_constructor",
							"minnet_ws_finalizer"
						]
					},
					"AQAAAAAAAAAAAAAA/QAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3899,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								504,
								517
							],
							[
								1483,
								1495
							],
							[
								1622,
								1638
							],
							[
								2239,
								2253
							],
							[
								2801,
								2818
							],
							[
								3434,
								3448
							],
							[
								4499,
								4516
							],
							[
								6179,
								6193
							],
							[
								6836,
								6850
							],
							[
								7493,
								7508
							],
							[
								8669,
								8682
							],
							[
								10486,
								10499
							],
							[
								10835,
								10856
							],
							[
								12033,
								12052
							]
						],
						"symlist":
						[
							"minnet_ws_new",
							"ws_from_wsi2",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_send",
							"minnet_ws_respond",
							"minnet_ws_ping",
							"minnet_ws_pong",
							"minnet_ws_close",
							"minnet_ws_get",
							"minnet_ws_set",
							"minnet_ws_constructor",
							"minnet_ws_finalizer"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD9AAAAICBtaW5uZXRfd3NfbmV3CiAgd3NfZnJvbV93c2kyCiAgbWlubmV0X3dzX29iamVjdAogIG1pbm5ldF93c193cmFwCiAgbWlubmV0X3dzX3NzbGNlcnQKICBtaW5uZXRfd3Nfc2VuZAogIG1pbm5ldF93c19yZXNwb25kCiAgbWlubmV0X3dzX3BpbmcKICBtaW5uZXRfd3NfcG9uZwogIG1pbm5ldF93c19jbG9zZQogIG1pbm5ldF93c19nZXQKICBtaW5uZXRfd3Nfc2V0CiAgbWlubmV0X3dzX2NvbnN0cnVjdG9yCiAgbWlubmV0X3dzX2ZpbmFsaXplcgAAAAAAAAAA/QAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3900,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD9AAAAICBtaW5uZXRfd3NfbmV3CiAgd3NfZnJvbV93c2kyCiAgbWlubmV0X3dzX29iamVjdAogIG1pbm5ldF93c193cmFwCiAgbWlubmV0X3dzX3NzbGNlcnQKICBtaW5uZXRfd3Nfc2VuZAogIG1pbm5ldF93c19yZXNwb25kCiAgbWlubmV0X3dzX3BpbmcKICBtaW5uZXRfd3NfcG9uZwogIG1pbm5ldF93c19jbG9zZQogIG1pbm5ldF93c19nZXQKICBtaW5uZXRfd3Nfc2V0CiAgbWlubmV0X3dzX2NvbnN0cnVjdG9yCiAgbWlubmV0X3dzX2ZpbmFsaXplcgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3901,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								504,
								517
							],
							[
								1483,
								1495
							],
							[
								1622,
								1638
							],
							[
								2239,
								2253
							],
							[
								2801,
								2818
							],
							[
								3434,
								3448
							],
							[
								4499,
								4516
							],
							[
								6179,
								6193
							],
							[
								6836,
								6850
							],
							[
								7493,
								7508
							],
							[
								8669,
								8682
							],
							[
								10486,
								10499
							],
							[
								10835,
								10856
							],
							[
								12033,
								12052
							]
						],
						"symlist":
						[
							"minnet_ws_new",
							"ws_from_wsi2",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_send",
							"minnet_ws_respond",
							"minnet_ws_ping",
							"minnet_ws_pong",
							"minnet_ws_close",
							"minnet_ws_get",
							"minnet_ws_set",
							"minnet_ws_constructor",
							"minnet_ws_finalizer"
						]
					},
					"AQAAAAAAAAAAAAAA/QAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3902,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								504,
								517
							],
							[
								1483,
								1495
							],
							[
								1622,
								1638
							],
							[
								2239,
								2253
							],
							[
								2836,
								2853
							],
							[
								3469,
								3483
							],
							[
								4534,
								4551
							],
							[
								6214,
								6228
							],
							[
								6871,
								6885
							],
							[
								7528,
								7543
							],
							[
								8704,
								8717
							],
							[
								10521,
								10534
							],
							[
								10870,
								10891
							],
							[
								12068,
								12087
							]
						],
						"symlist":
						[
							"minnet_ws_new",
							"ws_from_wsi2",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_send",
							"minnet_ws_respond",
							"minnet_ws_ping",
							"minnet_ws_pong",
							"minnet_ws_close",
							"minnet_ws_get",
							"minnet_ws_set",
							"minnet_ws_constructor",
							"minnet_ws_finalizer"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD9AAAAICBtaW5uZXRfd3NfbmV3CiAgd3NfZnJvbV93c2kyCiAgbWlubmV0X3dzX29iamVjdAogIG1pbm5ldF93c193cmFwCiAgbWlubmV0X3dzX3NzbGNlcnQKICBtaW5uZXRfd3Nfc2VuZAogIG1pbm5ldF93c19yZXNwb25kCiAgbWlubmV0X3dzX3BpbmcKICBtaW5uZXRfd3NfcG9uZwogIG1pbm5ldF93c19jbG9zZQogIG1pbm5ldF93c19nZXQKICBtaW5uZXRfd3Nfc2V0CiAgbWlubmV0X3dzX2NvbnN0cnVjdG9yCiAgbWlubmV0X3dzX2ZpbmFsaXplcgAAAAAAAAAA/QAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3903,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD9AAAAICBtaW5uZXRfd3NfbmV3CiAgd3NfZnJvbV93c2kyCiAgbWlubmV0X3dzX29iamVjdAogIG1pbm5ldF93c193cmFwCiAgbWlubmV0X3dzX3NzbGNlcnQKICBtaW5uZXRfd3Nfc2VuZAogIG1pbm5ldF93c19yZXNwb25kCiAgbWlubmV0X3dzX3BpbmcKICBtaW5uZXRfd3NfcG9uZwogIG1pbm5ldF93c19jbG9zZQogIG1pbm5ldF93c19nZXQKICBtaW5uZXRfd3Nfc2V0CiAgbWlubmV0X3dzX2NvbnN0cnVjdG9yCiAgbWlubmV0X3dzX2ZpbmFsaXplcgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3904,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3905,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								504,
								517
							],
							[
								1483,
								1495
							],
							[
								1622,
								1638
							],
							[
								2239,
								2253
							],
							[
								2836,
								2853
							],
							[
								3469,
								3483
							],
							[
								4534,
								4551
							],
							[
								6214,
								6228
							],
							[
								6871,
								6885
							],
							[
								7528,
								7543
							],
							[
								8704,
								8717
							],
							[
								10521,
								10534
							],
							[
								10870,
								10891
							],
							[
								12068,
								12087
							]
						],
						"symlist":
						[
							"minnet_ws_new",
							"ws_from_wsi2",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_send",
							"minnet_ws_respond",
							"minnet_ws_ping",
							"minnet_ws_pong",
							"minnet_ws_close",
							"minnet_ws_get",
							"minnet_ws_set",
							"minnet_ws_constructor",
							"minnet_ws_finalizer"
						]
					},
					"AQAAAAAAAAAAAAAA/QAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3906,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								504,
								517
							],
							[
								1483,
								1495
							],
							[
								1622,
								1638
							],
							[
								2239,
								2253
							],
							[
								2836,
								2853
							],
							[
								3469,
								3483
							],
							[
								4534,
								4551
							],
							[
								6214,
								6228
							],
							[
								6871,
								6885
							],
							[
								7528,
								7543
							],
							[
								8704,
								8717
							],
							[
								10521,
								10534
							],
							[
								10870,
								10891
							],
							[
								12101,
								12120
							]
						],
						"symlist":
						[
							"minnet_ws_new",
							"ws_from_wsi2",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_send",
							"minnet_ws_respond",
							"minnet_ws_ping",
							"minnet_ws_pong",
							"minnet_ws_close",
							"minnet_ws_get",
							"minnet_ws_set",
							"minnet_ws_constructor",
							"minnet_ws_finalizer"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD9AAAAICBtaW5uZXRfd3NfbmV3CiAgd3NfZnJvbV93c2kyCiAgbWlubmV0X3dzX29iamVjdAogIG1pbm5ldF93c193cmFwCiAgbWlubmV0X3dzX3NzbGNlcnQKICBtaW5uZXRfd3Nfc2VuZAogIG1pbm5ldF93c19yZXNwb25kCiAgbWlubmV0X3dzX3BpbmcKICBtaW5uZXRfd3NfcG9uZwogIG1pbm5ldF93c19jbG9zZQogIG1pbm5ldF93c19nZXQKICBtaW5uZXRfd3Nfc2V0CiAgbWlubmV0X3dzX2NvbnN0cnVjdG9yCiAgbWlubmV0X3dzX2ZpbmFsaXplcgAAAAAAAAAA/QAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3907,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								504,
								517
							],
							[
								1483,
								1495
							],
							[
								1622,
								1638
							],
							[
								2239,
								2253
							],
							[
								2844,
								2861
							],
							[
								3477,
								3491
							],
							[
								4542,
								4559
							],
							[
								6222,
								6236
							],
							[
								6879,
								6893
							],
							[
								7536,
								7551
							],
							[
								8712,
								8725
							],
							[
								10529,
								10542
							],
							[
								10878,
								10899
							],
							[
								12111,
								12130
							]
						],
						"symlist":
						[
							"minnet_ws_new",
							"ws_from_wsi2",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_send",
							"minnet_ws_respond",
							"minnet_ws_ping",
							"minnet_ws_pong",
							"minnet_ws_close",
							"minnet_ws_get",
							"minnet_ws_set",
							"minnet_ws_constructor",
							"minnet_ws_finalizer"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD9AAAAICBtaW5uZXRfd3NfbmV3CiAgd3NfZnJvbV93c2kyCiAgbWlubmV0X3dzX29iamVjdAogIG1pbm5ldF93c193cmFwCiAgbWlubmV0X3dzX3NzbGNlcnQKICBtaW5uZXRfd3Nfc2VuZAogIG1pbm5ldF93c19yZXNwb25kCiAgbWlubmV0X3dzX3BpbmcKICBtaW5uZXRfd3NfcG9uZwogIG1pbm5ldF93c19jbG9zZQogIG1pbm5ldF93c19nZXQKICBtaW5uZXRfd3Nfc2V0CiAgbWlubmV0X3dzX2NvbnN0cnVjdG9yCiAgbWlubmV0X3dzX2ZpbmFsaXplcgAAAAAAAAAA/QAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3908,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10405,
								10421
							],
							[
								10939,
								10950
							],
							[
								12653,
								12663
							],
							[
								12841,
								12855
							],
							[
								16126,
								16140
							],
							[
								16706,
								16723
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD9AAAAICBtaW5uZXRfd3NfbmV3CiAgd3NfZnJvbV93c2kyCiAgbWlubmV0X3dzX29iamVjdAogIG1pbm5ldF93c193cmFwCiAgbWlubmV0X3dzX3NzbGNlcnQKICBtaW5uZXRfd3Nfc2VuZAogIG1pbm5ldF93c19yZXNwb25kCiAgbWlubmV0X3dzX3BpbmcKICBtaW5uZXRfd3NfcG9uZwogIG1pbm5ldF93c19jbG9zZQogIG1pbm5ldF93c19nZXQKICBtaW5uZXRfd3Nfc2V0CiAgbWlubmV0X3dzX2NvbnN0cnVjdG9yCiAgbWlubmV0X3dzX2ZpbmFsaXplcgAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3909,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10405,
								10421
							],
							[
								10939,
								10950
							],
							[
								12653,
								12663
							],
							[
								12841,
								12855
							],
							[
								16126,
								16140
							],
							[
								16706,
								16723
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmQEAACAgaGFuZGxlcl9jbG9zdXJlCiAgbHdzCiAgd3NpX29wYXF1ZV91c2VyX2RhdGEKICBtaW5uZXRfZmV0Y2gKICBsd3NfbG9nX2NhbGxiYWNrCiAgbWlubmV0X2x3c191bmhhbmRsZWQKICBzZXRfbG9nCiAgbWlubmV0X3NldF9sb2cKICBoZWFkZXJzX29iamVjdAogIGhlYWRlcnNfYXRvbQogIGhlYWRlcnNfZnJvbQogIGhlYWRlcnNfc2V0CiAgZmRfY2FsbGJhY2sKICBpb19ldmVudHMKICBpb19wYXJzZV9ldmVudHMKICBtaW5uZXRfaW9faGFuZGxlcgogIGZyZWVfaGFuZGxlcl9jbG9zdXJlCiAgbWFrZV9oYW5kbGVyCiAgbWlubmV0X2hhbmRsZXJzCiAgbWlubmV0X2VtaXRfdGhpcwogIG1pbm5ldF9lbWl0CiAgdmFsdWVfZHVtcAogIGpzX21pbm5ldF9pbml0CkpTX0lOSVRfTU9EVUxFCiAgbHdzX2NhbGxiYWNrX25hbWUAAAAAAAAAAJkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3910,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10405,
								10421
							],
							[
								10939,
								10950
							],
							[
								12653,
								12663
							],
							[
								12841,
								12855
							],
							[
								16126,
								16140
							],
							[
								16706,
								16723
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3911,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10405,
								10421
							],
							[
								10939,
								10950
							],
							[
								12653,
								12663
							],
							[
								12841,
								12855
							],
							[
								16126,
								16140
							],
							[
								16706,
								16723
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3912,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10405,
								10421
							],
							[
								10939,
								10950
							],
							[
								12653,
								12663
							],
							[
								12841,
								12855
							],
							[
								16126,
								16140
							],
							[
								16706,
								16723
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3913,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10409,
								10425
							],
							[
								10943,
								10954
							],
							[
								12657,
								12667
							],
							[
								12845,
								12859
							],
							[
								16130,
								16144
							],
							[
								16710,
								16727
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3914,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10405,
								10421
							],
							[
								10939,
								10950
							],
							[
								12653,
								12663
							],
							[
								12841,
								12855
							],
							[
								16126,
								16140
							],
							[
								16706,
								16723
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3915,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10409,
								10425
							],
							[
								10943,
								10954
							],
							[
								12657,
								12667
							],
							[
								12845,
								12859
							],
							[
								16130,
								16144
							],
							[
								16710,
								16727
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3916,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10405,
								10421
							],
							[
								10939,
								10950
							],
							[
								12653,
								12663
							],
							[
								12841,
								12855
							],
							[
								16126,
								16140
							],
							[
								16706,
								16723
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3917,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.h",
						"symkeys":
						[
							[
								297,
								300
							],
							[
								339,
								342
							],
							[
								382,
								389
							],
							[
								430,
								456
							],
							[
								711,
								731
							],
							[
								950,
								956
							],
							[
								1057,
								1066
							],
							[
								1141,
								1146
							],
							[
								1201,
								1210
							],
							[
								1363,
								1369
							],
							[
								1496,
								1499
							],
							[
								1611,
								1613
							],
							[
								1644,
								1646
							],
							[
								1677,
								1680
							],
							[
								1711,
								1714
							],
							[
								2144,
								2156
							],
							[
								2248,
								2260
							],
							[
								2372,
								2386
							],
							[
								2861,
								2874
							],
							[
								2964,
								2979
							],
							[
								3094,
								3107
							],
							[
								3255,
								3269
							],
							[
								3317,
								3329
							],
							[
								3359,
								3371
							],
							[
								3442,
								3453
							],
							[
								3523,
								3534
							],
							[
								3634,
								3654
							],
							[
								3690,
								3706
							],
							[
								3791,
								3802
							],
							[
								3861,
								3876
							],
							[
								3955,
								3965
							],
							[
								4025,
								4046
							],
							[
								4097,
								4114
							],
							[
								4141,
								4161
							],
							[
								4431,
								4451
							],
							[
								5342,
								5350
							],
							[
								5530,
								5539
							],
							[
								5772,
								5783
							]
						],
						"symlist":
						[
							"MAX",
							"MIN",
							"countof",
							"JS_CGETSET_MAGIC_FLAGS_DEF",
							"JS_CGETSET_FLAGS_DEF",
							"SETLOG",
							"GETCBPROP",
							"GETCB",
							"GETCBTHIS",
							"FREECB",
							"ADD",
							"FG",
							"BG",
							"FGC",
							"BGC",
							"MinnetPollFd",
							"MinnetStatus",
							"MinnetCallback",
							"MinnetSession",
							"MinnetCallbacks",
							"MinnetContext",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"minnet_lws_unhandled",
							"minnet_emit_this",
							"minnet_emit",
							"minnet_handlers",
							"value_dump",
							"js_init_module_minnet",
							"lws_callback_name",
							"lws_is_poll_callback",
							"lws_is_http_callback",
							"byte_chr",
							"byte_chrs",
							"lws_get_uri"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAA8QEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3918,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10405,
								10421
							],
							[
								10939,
								10950
							],
							[
								12653,
								12663
							],
							[
								12841,
								12855
							],
							[
								16126,
								16140
							],
							[
								16706,
								16723
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADxAQAATUFYCk1JTgogIGNvdW50b2YKSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYKSlNfQ0dFVFNFVF9GTEFHU19ERUYKU0VUTE9HCkdFVENCUFJPUApHRVRDQgpHRVRDQlRISVMKRlJFRUNCCkFERApGRwpCRwpGR0MKQkdDCk1pbm5ldFBvbGxGZApNaW5uZXRTdGF0dXMKTWlubmV0Q2FsbGJhY2sKTWlubmV0U2Vzc2lvbgpNaW5uZXRDYWxsYmFja3MKTWlubmV0Q29udGV4dAogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgbWlubmV0X2VtaXRfdGhpcwogIG1pbm5ldF9lbWl0CiAgbWlubmV0X2hhbmRsZXJzCiAgdmFsdWVfZHVtcAogIGpzX2luaXRfbW9kdWxlX21pbm5ldAogIGx3c19jYWxsYmFja19uYW1lCiAgbHdzX2lzX3BvbGxfY2FsbGJhY2sKICBsd3NfaXNfaHR0cF9jYWxsYmFjawogIGJ5dGVfY2hyCiAgYnl0ZV9jaHJzCiAgbHdzX2dldF91cmkAAAAAAAAAAJkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3919,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.h",
						"symkeys":
						[
							[
								297,
								300
							],
							[
								339,
								342
							],
							[
								382,
								389
							],
							[
								430,
								456
							],
							[
								711,
								731
							],
							[
								950,
								956
							],
							[
								1057,
								1066
							],
							[
								1141,
								1146
							],
							[
								1201,
								1210
							],
							[
								1363,
								1369
							],
							[
								1496,
								1499
							],
							[
								1611,
								1613
							],
							[
								1644,
								1646
							],
							[
								1677,
								1680
							],
							[
								1711,
								1714
							],
							[
								2144,
								2156
							],
							[
								2248,
								2260
							],
							[
								2372,
								2386
							],
							[
								2861,
								2874
							],
							[
								2964,
								2979
							],
							[
								3094,
								3107
							],
							[
								3255,
								3269
							],
							[
								3317,
								3329
							],
							[
								3359,
								3371
							],
							[
								3442,
								3453
							],
							[
								3523,
								3534
							],
							[
								3634,
								3654
							],
							[
								3690,
								3706
							],
							[
								3791,
								3802
							],
							[
								3861,
								3876
							],
							[
								3955,
								3965
							],
							[
								4025,
								4046
							],
							[
								4097,
								4114
							],
							[
								4141,
								4161
							],
							[
								4431,
								4451
							],
							[
								5342,
								5350
							],
							[
								5530,
								5539
							],
							[
								5772,
								5783
							]
						],
						"symlist":
						[
							"MAX",
							"MIN",
							"countof",
							"JS_CGETSET_MAGIC_FLAGS_DEF",
							"JS_CGETSET_FLAGS_DEF",
							"SETLOG",
							"GETCBPROP",
							"GETCB",
							"GETCBTHIS",
							"FREECB",
							"ADD",
							"FG",
							"BG",
							"FGC",
							"BGC",
							"MinnetPollFd",
							"MinnetStatus",
							"MinnetCallback",
							"MinnetSession",
							"MinnetCallbacks",
							"MinnetContext",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"minnet_lws_unhandled",
							"minnet_emit_this",
							"minnet_emit",
							"minnet_handlers",
							"value_dump",
							"js_init_module_minnet",
							"lws_callback_name",
							"lws_is_poll_callback",
							"lws_is_http_callback",
							"byte_chr",
							"byte_chrs",
							"lws_get_uri"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAA8QEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3920,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								504,
								517
							],
							[
								1483,
								1495
							],
							[
								1622,
								1638
							],
							[
								2239,
								2253
							],
							[
								2844,
								2861
							],
							[
								3477,
								3491
							],
							[
								4542,
								4559
							],
							[
								6222,
								6236
							],
							[
								6879,
								6893
							],
							[
								7536,
								7551
							],
							[
								8712,
								8725
							],
							[
								10529,
								10542
							],
							[
								10878,
								10899
							],
							[
								12111,
								12130
							]
						],
						"symlist":
						[
							"minnet_ws_new",
							"ws_from_wsi2",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_send",
							"minnet_ws_respond",
							"minnet_ws_ping",
							"minnet_ws_pong",
							"minnet_ws_close",
							"minnet_ws_get",
							"minnet_ws_set",
							"minnet_ws_constructor",
							"minnet_ws_finalizer"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADxAQAATUFYCk1JTgogIGNvdW50b2YKSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYKSlNfQ0dFVFNFVF9GTEFHU19ERUYKU0VUTE9HCkdFVENCUFJPUApHRVRDQgpHRVRDQlRISVMKRlJFRUNCCkFERApGRwpCRwpGR0MKQkdDCk1pbm5ldFBvbGxGZApNaW5uZXRTdGF0dXMKTWlubmV0Q2FsbGJhY2sKTWlubmV0U2Vzc2lvbgpNaW5uZXRDYWxsYmFja3MKTWlubmV0Q29udGV4dAogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgbWlubmV0X2VtaXRfdGhpcwogIG1pbm5ldF9lbWl0CiAgbWlubmV0X2hhbmRsZXJzCiAgdmFsdWVfZHVtcAogIGpzX2luaXRfbW9kdWxlX21pbm5ldAogIGx3c19jYWxsYmFja19uYW1lCiAgbHdzX2lzX3BvbGxfY2FsbGJhY2sKICBsd3NfaXNfaHR0cF9jYWxsYmFjawogIGJ5dGVfY2hyCiAgYnl0ZV9jaHJzCiAgbHdzX2dldF91cmkAAAAAAAAAAP0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3921,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10405,
								10421
							],
							[
								10939,
								10950
							],
							[
								12653,
								12663
							],
							[
								12841,
								12855
							],
							[
								16126,
								16140
							],
							[
								16706,
								16723
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD9AAAAICBtaW5uZXRfd3NfbmV3CiAgd3NfZnJvbV93c2kyCiAgbWlubmV0X3dzX29iamVjdAogIG1pbm5ldF93c193cmFwCiAgbWlubmV0X3dzX3NzbGNlcnQKICBtaW5uZXRfd3Nfc2VuZAogIG1pbm5ldF93c19yZXNwb25kCiAgbWlubmV0X3dzX3BpbmcKICBtaW5uZXRfd3NfcG9uZwogIG1pbm5ldF93c19jbG9zZQogIG1pbm5ldF93c19nZXQKICBtaW5uZXRfd3Nfc2V0CiAgbWlubmV0X3dzX2NvbnN0cnVjdG9yCiAgbWlubmV0X3dzX2ZpbmFsaXplcgAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3922,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3923,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10405,
								10421
							],
							[
								10939,
								10950
							],
							[
								12653,
								12663
							],
							[
								12841,
								12855
							],
							[
								16126,
								16140
							],
							[
								16706,
								16723
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AwAAAAAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3924,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10405,
								10421
							],
							[
								10939,
								10950
							],
							[
								12653,
								12663
							],
							[
								12841,
								12855
							],
							[
								16126,
								16140
							],
							[
								16706,
								16723
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3925,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								845,
								857
							],
							[
								1171,
								1187
							],
							[
								2190,
								2210
							],
							[
								2508,
								2515
							],
							[
								2985,
								2999
							],
							[
								3398,
								3412
							],
							[
								4003,
								4015
							],
							[
								4270,
								4282
							],
							[
								5016,
								5027
							],
							[
								5411,
								5422
							],
							[
								6862,
								6871
							],
							[
								7301,
								7316
							],
							[
								7580,
								7597
							],
							[
								8322,
								8342
							],
							[
								8474,
								8486
							],
							[
								9681,
								9696
							],
							[
								10427,
								10443
							],
							[
								10961,
								10972
							],
							[
								12675,
								12685
							],
							[
								12863,
								12877
							],
							[
								16148,
								16162
							],
							[
								16728,
								16745
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3926,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.h",
						"symkeys":
						[
							[
								328,
								343
							],
							[
								390,
								402
							],
							[
								437,
								453
							],
							[
								488,
								502
							],
							[
								534,
								551
							],
							[
								625,
								646
							],
							[
								1053,
								1073
							],
							[
								1102,
								1108
							],
							[
								1123,
								1135
							],
							[
								1151,
								1163
							],
							[
								1313,
								1323
							],
							[
								1691,
								1702
							],
							[
								1893,
								1902
							],
							[
								2009,
								2019
							],
							[
								2109,
								2120
							],
							[
								2459,
								2473
							],
							[
								2576,
								2591
							]
						],
						"symlist":
						[
							"MinnetWebsocket",
							"ws_from_wsi2",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_constructor",
							"wsi_opaque_user_data",
							"socket",
							"http_request",
							"session_data",
							"lws_opaque",
							"lws_session",
							"ws_opaque",
							"ws_session",
							"ws_from_wsi",
							"minnet_ws_data",
							"minnet_ws_data2"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAEQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3927,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.h",
						"symkeys":
						[
							[
								328,
								343
							],
							[
								390,
								402
							],
							[
								437,
								453
							],
							[
								488,
								502
							],
							[
								534,
								551
							],
							[
								625,
								646
							],
							[
								1053,
								1073
							],
							[
								1102,
								1108
							],
							[
								1123,
								1135
							],
							[
								1151,
								1163
							],
							[
								1317,
								1327
							],
							[
								1695,
								1706
							],
							[
								1897,
								1906
							],
							[
								2013,
								2023
							],
							[
								2113,
								2124
							],
							[
								2463,
								2477
							],
							[
								2580,
								2595
							]
						],
						"symlist":
						[
							"MinnetWebsocket",
							"ws_from_wsi2",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_constructor",
							"wsi_opaque_user_data",
							"socket",
							"http_request",
							"session_data",
							"lws_opaque",
							"lws_session",
							"ws_opaque",
							"ws_session",
							"ws_from_wsi",
							"minnet_ws_data",
							"minnet_ws_data2"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAARAQAATWlubmV0V2Vic29ja2V0CiAgd3NfZnJvbV93c2kyCiAgbWlubmV0X3dzX29iamVjdAogIG1pbm5ldF93c193cmFwCiAgbWlubmV0X3dzX3NzbGNlcnQKICBtaW5uZXRfd3NfY29uc3RydWN0b3IKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIHNvY2tldAogIGh0dHBfcmVxdWVzdAogIHNlc3Npb25fZGF0YQogIGx3c19vcGFxdWUKICBsd3Nfc2Vzc2lvbgogIHdzX29wYXF1ZQogIHdzX3Nlc3Npb24KICB3c19mcm9tX3dzaQogIG1pbm5ldF93c19kYXRhCiAgbWlubmV0X3dzX2RhdGEyAAAAAAAAAAARAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQEAAE1pbm5ldFdlYnNvY2tldAogIHdzX2Zyb21fd3NpMgogIG1pbm5ldF93c19vYmplY3QKICBtaW5uZXRfd3Nfd3JhcAogIG1pbm5ldF93c19zc2xjZXJ0CiAgbWlubmV0X3dzX2NvbnN0cnVjdG9yCiAgd3NpX29wYXF1ZV91c2VyX2RhdGEKICBzb2NrZXQKICBodHRwX3JlcXVlc3QKICBzZXNzaW9uX2RhdGEKICBsd3Nfb3BhcXVlCiAgbHdzX3Nlc3Npb24KICB3c19vcGFxdWUKICB3c19zZXNzaW9uCiAgd3NfZnJvbV93c2kKICBtaW5uZXRfd3NfZGF0YQogIG1pbm5ldF93c19kYXRhMgAAAAAAAAAAEQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3928,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								845,
								857
							],
							[
								1171,
								1187
							],
							[
								2190,
								2210
							],
							[
								2508,
								2515
							],
							[
								2985,
								2999
							],
							[
								3398,
								3412
							],
							[
								4003,
								4015
							],
							[
								4270,
								4282
							],
							[
								5016,
								5027
							],
							[
								5411,
								5422
							],
							[
								6862,
								6871
							],
							[
								7301,
								7316
							],
							[
								7580,
								7597
							],
							[
								8322,
								8342
							],
							[
								8474,
								8486
							],
							[
								9681,
								9696
							],
							[
								10427,
								10443
							],
							[
								10961,
								10972
							],
							[
								12675,
								12685
							],
							[
								12863,
								12877
							],
							[
								16148,
								16162
							],
							[
								16728,
								16745
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAARAQAATWlubmV0V2Vic29ja2V0CiAgd3NfZnJvbV93c2kyCiAgbWlubmV0X3dzX29iamVjdAogIG1pbm5ldF93c193cmFwCiAgbWlubmV0X3dzX3NzbGNlcnQKICBtaW5uZXRfd3NfY29uc3RydWN0b3IKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIHNvY2tldAogIGh0dHBfcmVxdWVzdAogIHNlc3Npb25fZGF0YQogIGx3c19vcGFxdWUKICBsd3Nfc2Vzc2lvbgogIHdzX29wYXF1ZQogIHdzX3Nlc3Npb24KICB3c19mcm9tX3dzaQogIG1pbm5ldF93c19kYXRhCiAgbWlubmV0X3dzX2RhdGEyAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3933,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								845,
								857
							],
							[
								1171,
								1187
							],
							[
								2190,
								2210
							],
							[
								2508,
								2515
							],
							[
								2985,
								2999
							],
							[
								3398,
								3412
							],
							[
								4003,
								4015
							],
							[
								4270,
								4282
							],
							[
								5016,
								5027
							],
							[
								5411,
								5422
							],
							[
								6862,
								6871
							],
							[
								7301,
								7316
							],
							[
								7580,
								7597
							],
							[
								8322,
								8342
							],
							[
								8474,
								8486
							],
							[
								9673,
								9688
							],
							[
								10419,
								10435
							],
							[
								10953,
								10964
							],
							[
								12667,
								12677
							],
							[
								12855,
								12869
							],
							[
								16140,
								16154
							],
							[
								16720,
								16737
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					3934,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								845,
								857
							],
							[
								1171,
								1187
							],
							[
								2190,
								2210
							],
							[
								2508,
								2515
							],
							[
								2985,
								2999
							],
							[
								3398,
								3412
							],
							[
								4003,
								4015
							],
							[
								4270,
								4282
							],
							[
								5016,
								5027
							],
							[
								5411,
								5422
							],
							[
								6862,
								6871
							],
							[
								7301,
								7316
							],
							[
								7580,
								7597
							],
							[
								8322,
								8342
							],
							[
								8474,
								8486
							],
							[
								9673,
								9688
							],
							[
								10419,
								10435
							],
							[
								10953,
								10964
							],
							[
								12667,
								12677
							],
							[
								12855,
								12869
							],
							[
								16140,
								16154
							],
							[
								16720,
								16737
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3935,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								845,
								857
							],
							[
								1171,
								1187
							],
							[
								2190,
								2210
							],
							[
								2508,
								2515
							],
							[
								2985,
								2999
							],
							[
								3398,
								3412
							],
							[
								4003,
								4015
							],
							[
								4270,
								4282
							],
							[
								5016,
								5027
							],
							[
								5411,
								5422
							],
							[
								6862,
								6871
							],
							[
								7301,
								7316
							],
							[
								7580,
								7597
							],
							[
								8322,
								8342
							],
							[
								8474,
								8486
							],
							[
								9673,
								9688
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAANwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADcBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwAAAAAAAAAANwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3936,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								845,
								857
							],
							[
								1171,
								1187
							],
							[
								2190,
								2210
							],
							[
								2508,
								2515
							],
							[
								2985,
								2999
							],
							[
								3398,
								3412
							],
							[
								4003,
								4015
							],
							[
								4270,
								4282
							],
							[
								5016,
								5027
							],
							[
								5411,
								5422
							],
							[
								6862,
								6871
							],
							[
								7301,
								7316
							],
							[
								7580,
								7597
							],
							[
								8322,
								8342
							],
							[
								8474,
								8486
							],
							[
								9673,
								9688
							],
							[
								10522,
								10538
							],
							[
								11056,
								11067
							],
							[
								12770,
								12780
							],
							[
								12958,
								12972
							],
							[
								16243,
								16257
							],
							[
								16823,
								16840
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA3AQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMAAAAAAAAAAJkBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3937,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								845,
								857
							],
							[
								1171,
								1187
							],
							[
								2190,
								2210
							],
							[
								2508,
								2515
							],
							[
								2985,
								2999
							],
							[
								3398,
								3412
							],
							[
								4003,
								4015
							],
							[
								4270,
								4282
							],
							[
								5016,
								5027
							],
							[
								5411,
								5422
							],
							[
								6862,
								6871
							],
							[
								7301,
								7316
							],
							[
								7580,
								7597
							],
							[
								8322,
								8342
							],
							[
								8474,
								8486
							],
							[
								9673,
								9688
							],
							[
								10462,
								10478
							],
							[
								10996,
								11007
							],
							[
								12710,
								12720
							],
							[
								12898,
								12912
							],
							[
								16183,
								16197
							],
							[
								16763,
								16780
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3938,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								845,
								857
							],
							[
								1171,
								1187
							],
							[
								2190,
								2210
							],
							[
								2508,
								2515
							],
							[
								2985,
								2999
							],
							[
								3398,
								3412
							],
							[
								4003,
								4015
							],
							[
								4270,
								4282
							],
							[
								5016,
								5027
							],
							[
								5411,
								5422
							],
							[
								6862,
								6871
							],
							[
								7301,
								7316
							],
							[
								7580,
								7597
							],
							[
								8322,
								8342
							],
							[
								8474,
								8486
							],
							[
								9673,
								9688
							],
							[
								10464,
								10480
							],
							[
								10998,
								11009
							],
							[
								12712,
								12722
							],
							[
								12900,
								12914
							],
							[
								16185,
								16199
							],
							[
								16765,
								16782
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3939,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								845,
								857
							],
							[
								1171,
								1187
							],
							[
								2190,
								2210
							],
							[
								2508,
								2515
							],
							[
								2985,
								2999
							],
							[
								3398,
								3412
							],
							[
								4003,
								4015
							],
							[
								4270,
								4282
							],
							[
								5016,
								5027
							],
							[
								5411,
								5422
							],
							[
								6862,
								6871
							],
							[
								7301,
								7316
							],
							[
								7580,
								7597
							],
							[
								8322,
								8342
							],
							[
								8474,
								8486
							],
							[
								9673,
								9688
							],
							[
								10464,
								10480
							],
							[
								10998,
								11009
							],
							[
								12712,
								12722
							],
							[
								12900,
								12914
							],
							[
								16185,
								16199
							],
							[
								16765,
								16782
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3940,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								845,
								857
							],
							[
								1171,
								1187
							],
							[
								2190,
								2210
							],
							[
								2508,
								2515
							],
							[
								2985,
								2999
							],
							[
								3398,
								3412
							],
							[
								4003,
								4015
							],
							[
								4270,
								4282
							],
							[
								5016,
								5027
							],
							[
								5411,
								5422
							],
							[
								6862,
								6871
							],
							[
								7301,
								7316
							],
							[
								7580,
								7597
							],
							[
								8322,
								8342
							],
							[
								8474,
								8486
							],
							[
								9673,
								9688
							],
							[
								10468,
								10484
							],
							[
								11002,
								11013
							],
							[
								12716,
								12726
							],
							[
								12904,
								12918
							],
							[
								16189,
								16203
							],
							[
								16769,
								16786
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3941,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3942,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								845,
								857
							],
							[
								1171,
								1187
							],
							[
								2190,
								2210
							],
							[
								2508,
								2515
							],
							[
								2985,
								2999
							],
							[
								3398,
								3412
							],
							[
								4003,
								4015
							],
							[
								4270,
								4282
							],
							[
								5016,
								5027
							],
							[
								5411,
								5422
							],
							[
								6862,
								6871
							],
							[
								7301,
								7316
							],
							[
								7580,
								7597
							],
							[
								8322,
								8342
							],
							[
								8474,
								8486
							],
							[
								9673,
								9688
							],
							[
								10468,
								10484
							],
							[
								11002,
								11013
							],
							[
								12716,
								12726
							],
							[
								12904,
								12918
							],
							[
								16189,
								16203
							],
							[
								16769,
								16786
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AwAAAAAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3943,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								845,
								857
							],
							[
								1171,
								1187
							],
							[
								2190,
								2210
							],
							[
								2508,
								2515
							],
							[
								2985,
								2999
							],
							[
								3398,
								3412
							],
							[
								4003,
								4015
							],
							[
								4270,
								4282
							],
							[
								5016,
								5027
							],
							[
								5411,
								5422
							],
							[
								6862,
								6871
							],
							[
								7301,
								7316
							],
							[
								7580,
								7597
							],
							[
								8314,
								8334
							],
							[
								8466,
								8478
							],
							[
								9665,
								9680
							],
							[
								10460,
								10476
							],
							[
								10994,
								11005
							],
							[
								12708,
								12718
							],
							[
								12896,
								12910
							],
							[
								16181,
								16195
							],
							[
								16761,
								16778
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3944,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								845,
								857
							],
							[
								1171,
								1187
							],
							[
								2190,
								2210
							],
							[
								2508,
								2515
							],
							[
								2985,
								2999
							],
							[
								3398,
								3412
							],
							[
								4003,
								4015
							],
							[
								4270,
								4282
							],
							[
								5016,
								5027
							],
							[
								5411,
								5422
							],
							[
								6862,
								6871
							],
							[
								7301,
								7316
							],
							[
								7580,
								7597
							],
							[
								8314,
								8334
							],
							[
								8466,
								8478
							],
							[
								9665,
								9680
							],
							[
								10470,
								10486
							],
							[
								11004,
								11015
							],
							[
								12718,
								12728
							],
							[
								12906,
								12920
							],
							[
								16191,
								16205
							],
							[
								16771,
								16788
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3945,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10211,
								10227
							],
							[
								10745,
								10756
							],
							[
								12459,
								12469
							],
							[
								12647,
								12661
							],
							[
								15932,
								15946
							],
							[
								16512,
								16529
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3946,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10212,
								10228
							],
							[
								10746,
								10757
							],
							[
								12460,
								12470
							],
							[
								12648,
								12662
							],
							[
								15933,
								15947
							],
							[
								16513,
								16530
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3947,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3948,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10214,
								10230
							],
							[
								10748,
								10759
							],
							[
								12462,
								12472
							],
							[
								12650,
								12664
							],
							[
								15935,
								15949
							],
							[
								16515,
								16532
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AQAAAAAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3949,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3950,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10214,
								10230
							],
							[
								10748,
								10759
							],
							[
								12462,
								12472
							],
							[
								12650,
								12664
							],
							[
								15935,
								15949
							],
							[
								16515,
								16532
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AQAAAAAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3951,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8292,
								8312
							],
							[
								8444,
								8456
							],
							[
								9651,
								9666
							],
							[
								10206,
								10222
							],
							[
								10740,
								10751
							],
							[
								12454,
								12464
							],
							[
								12642,
								12656
							],
							[
								15927,
								15941
							],
							[
								16507,
								16524
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3952,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3953,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8292,
								8312
							],
							[
								8444,
								8456
							],
							[
								9651,
								9666
							],
							[
								10206,
								10222
							],
							[
								10740,
								10751
							],
							[
								12454,
								12464
							],
							[
								12642,
								12656
							],
							[
								15927,
								15941
							],
							[
								16507,
								16524
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AQAAAAAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3954,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10214,
								10230
							],
							[
								10748,
								10759
							],
							[
								12462,
								12472
							],
							[
								12650,
								12664
							],
							[
								15935,
								15949
							],
							[
								16515,
								16532
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3955,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								504,
								517
							],
							[
								1483,
								1495
							],
							[
								1622,
								1638
							],
							[
								2239,
								2253
							],
							[
								2844,
								2861
							],
							[
								3477,
								3491
							],
							[
								4542,
								4559
							],
							[
								6222,
								6236
							],
							[
								6879,
								6893
							],
							[
								7536,
								7551
							],
							[
								8712,
								8725
							],
							[
								10529,
								10542
							],
							[
								10878,
								10899
							],
							[
								12111,
								12130
							]
						],
						"symlist":
						[
							"minnet_ws_new",
							"ws_from_wsi2",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_send",
							"minnet_ws_respond",
							"minnet_ws_ping",
							"minnet_ws_pong",
							"minnet_ws_close",
							"minnet_ws_get",
							"minnet_ws_set",
							"minnet_ws_constructor",
							"minnet_ws_finalizer"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAA/QAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3956,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.h",
						"symkeys":
						[
							[
								328,
								343
							],
							[
								390,
								402
							],
							[
								437,
								453
							],
							[
								488,
								502
							],
							[
								534,
								551
							],
							[
								625,
								646
							],
							[
								1053,
								1073
							],
							[
								1102,
								1108
							],
							[
								1123,
								1135
							],
							[
								1151,
								1163
							],
							[
								1318,
								1328
							],
							[
								1696,
								1707
							],
							[
								1898,
								1907
							],
							[
								2014,
								2024
							],
							[
								2114,
								2125
							],
							[
								2464,
								2478
							],
							[
								2581,
								2596
							]
						],
						"symlist":
						[
							"MinnetWebsocket",
							"ws_from_wsi2",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_constructor",
							"wsi_opaque_user_data",
							"socket",
							"http_request",
							"session_data",
							"lws_opaque",
							"lws_session",
							"ws_opaque",
							"ws_session",
							"ws_from_wsi",
							"minnet_ws_data",
							"minnet_ws_data2"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD9AAAAICBtaW5uZXRfd3NfbmV3CiAgd3NfZnJvbV93c2kyCiAgbWlubmV0X3dzX29iamVjdAogIG1pbm5ldF93c193cmFwCiAgbWlubmV0X3dzX3NzbGNlcnQKICBtaW5uZXRfd3Nfc2VuZAogIG1pbm5ldF93c19yZXNwb25kCiAgbWlubmV0X3dzX3BpbmcKICBtaW5uZXRfd3NfcG9uZwogIG1pbm5ldF93c19jbG9zZQogIG1pbm5ldF93c19nZXQKICBtaW5uZXRfd3Nfc2V0CiAgbWlubmV0X3dzX2NvbnN0cnVjdG9yCiAgbWlubmV0X3dzX2ZpbmFsaXplcgAAAAAAAAAAEQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3957,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.h",
						"symkeys":
						[
							[
								328,
								343
							],
							[
								390,
								402
							],
							[
								437,
								453
							],
							[
								488,
								502
							],
							[
								534,
								551
							],
							[
								625,
								646
							],
							[
								1053,
								1073
							],
							[
								1102,
								1108
							],
							[
								1123,
								1135
							],
							[
								1151,
								1163
							],
							[
								1313,
								1323
							],
							[
								1691,
								1702
							],
							[
								1893,
								1902
							],
							[
								2009,
								2019
							],
							[
								2109,
								2120
							],
							[
								2459,
								2473
							],
							[
								2576,
								2591
							]
						],
						"symlist":
						[
							"MinnetWebsocket",
							"ws_from_wsi2",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_constructor",
							"wsi_opaque_user_data",
							"socket",
							"http_request",
							"session_data",
							"lws_opaque",
							"lws_session",
							"ws_opaque",
							"ws_session",
							"ws_from_wsi",
							"minnet_ws_data",
							"minnet_ws_data2"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAARAQAATWlubmV0V2Vic29ja2V0CiAgd3NfZnJvbV93c2kyCiAgbWlubmV0X3dzX29iamVjdAogIG1pbm5ldF93c193cmFwCiAgbWlubmV0X3dzX3NzbGNlcnQKICBtaW5uZXRfd3NfY29uc3RydWN0b3IKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIHNvY2tldAogIGh0dHBfcmVxdWVzdAogIHNlc3Npb25fZGF0YQogIGx3c19vcGFxdWUKICBsd3Nfc2Vzc2lvbgogIHdzX29wYXF1ZQogIHdzX3Nlc3Npb24KICB3c19mcm9tX3dzaQogIG1pbm5ldF93c19kYXRhCiAgbWlubmV0X3dzX2RhdGEyAAAAAAAAAAARAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQEAAE1pbm5ldFdlYnNvY2tldAogIHdzX2Zyb21fd3NpMgogIG1pbm5ldF93c19vYmplY3QKICBtaW5uZXRfd3Nfd3JhcAogIG1pbm5ldF93c19zc2xjZXJ0CiAgbWlubmV0X3dzX2NvbnN0cnVjdG9yCiAgd3NpX29wYXF1ZV91c2VyX2RhdGEKICBzb2NrZXQKICBodHRwX3JlcXVlc3QKICBzZXNzaW9uX2RhdGEKICBsd3Nfb3BhcXVlCiAgbHdzX3Nlc3Npb24KICB3c19vcGFxdWUKICB3c19zZXNzaW9uCiAgd3NfZnJvbV93c2kKICBtaW5uZXRfd3NfZGF0YQogIG1pbm5ldF93c19kYXRhMgAAAAAAAAAAEQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3958,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10214,
								10230
							],
							[
								10748,
								10759
							],
							[
								12462,
								12472
							],
							[
								12650,
								12664
							],
							[
								15935,
								15949
							],
							[
								16515,
								16532
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAARAQAATWlubmV0V2Vic29ja2V0CiAgd3NfZnJvbV93c2kyCiAgbWlubmV0X3dzX29iamVjdAogIG1pbm5ldF93c193cmFwCiAgbWlubmV0X3dzX3NzbGNlcnQKICBtaW5uZXRfd3NfY29uc3RydWN0b3IKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIHNvY2tldAogIGh0dHBfcmVxdWVzdAogIHNlc3Npb25fZGF0YQogIGx3c19vcGFxdWUKICBsd3Nfc2Vzc2lvbgogIHdzX29wYXF1ZQogIHdzX3Nlc3Npb24KICB3c19mcm9tX3dzaQogIG1pbm5ldF93c19kYXRhCiAgbWlubmV0X3dzX2RhdGEyAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3959,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3960,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
						"symkeys":
						[
							[
								716,
								731
							],
							[
								761,
								764
							],
							[
								781,
								801
							],
							[
								823,
								835
							],
							[
								1149,
								1165
							],
							[
								2168,
								2188
							],
							[
								2486,
								2493
							],
							[
								2963,
								2977
							],
							[
								3376,
								3390
							],
							[
								3981,
								3993
							],
							[
								4248,
								4260
							],
							[
								4994,
								5005
							],
							[
								5389,
								5400
							],
							[
								6840,
								6849
							],
							[
								7279,
								7294
							],
							[
								7558,
								7575
							],
							[
								8300,
								8320
							],
							[
								8452,
								8464
							],
							[
								9659,
								9674
							],
							[
								10214,
								10230
							],
							[
								10748,
								10759
							],
							[
								12462,
								12472
							],
							[
								12650,
								12664
							],
							[
								15935,
								15949
							],
							[
								16515,
								16532
							]
						],
						"symlist":
						[
							"handler_closure",
							"lws",
							"wsi_opaque_user_data",
							"minnet_fetch",
							"lws_log_callback",
							"minnet_lws_unhandled",
							"set_log",
							"minnet_set_log",
							"headers_object",
							"headers_atom",
							"headers_from",
							"headers_set",
							"fd_callback",
							"io_events",
							"io_parse_events",
							"minnet_io_handler",
							"free_handler_closure",
							"make_handler",
							"minnet_handlers",
							"minnet_emit_this",
							"minnet_emit",
							"value_dump",
							"js_minnet_init",
							"JS_INIT_MODULE",
							"lws_callback_name"
						]
					},
					"AwAAAAAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAAAgIGhhbmRsZXJfY2xvc3VyZQogIGx3cwogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgbWlubmV0X2ZldGNoCiAgbHdzX2xvZ19jYWxsYmFjawogIG1pbm5ldF9sd3NfdW5oYW5kbGVkCiAgc2V0X2xvZwogIG1pbm5ldF9zZXRfbG9nCiAgaGVhZGVyc19vYmplY3QKICBoZWFkZXJzX2F0b20KICBoZWFkZXJzX2Zyb20KICBoZWFkZXJzX3NldAogIGZkX2NhbGxiYWNrCiAgaW9fZXZlbnRzCiAgaW9fcGFyc2VfZXZlbnRzCiAgbWlubmV0X2lvX2hhbmRsZXIKICBmcmVlX2hhbmRsZXJfY2xvc3VyZQogIG1ha2VfaGFuZGxlcgogIG1pbm5ldF9oYW5kbGVycwogIG1pbm5ldF9lbWl0X3RoaXMKICBtaW5uZXRfZW1pdAogIHZhbHVlX2R1bXAKICBqc19taW5uZXRfaW5pdApKU19JTklUX01PRFVMRQogIGx3c19jYWxsYmFja19uYW1lAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3961,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/common.js",
						"symkeys":
						[
							[
								44,
								87
							],
							[
								532,
								546
							],
							[
								598,
								610
							],
							[
								649,
								662
							],
							[
								740,
								756
							],
							[
								821,
								929
							],
							[
								1049,
								1054
							],
							[
								1109,
								1127
							],
							[
								1167,
								1184
							]
						],
						"symlist":
						[
							" function assert(actual, expected, message)",
							"getpid = () =>",
							"once = fn =>",
							" (...args) =>",
							"exists = path =>",
							"randStr = (n, set = '_0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', rng = Math.random) =>",
							" s =>",
							"(a, [exp, rpl]) =>",
							"abbreviate = s =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAAICBoYW5kbGVyX2Nsb3N1cmUKICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIG1pbm5ldF9mZXRjaAogIGx3c19sb2dfY2FsbGJhY2sKICBtaW5uZXRfbHdzX3VuaGFuZGxlZAogIHNldF9sb2cKICBtaW5uZXRfc2V0X2xvZwogIGhlYWRlcnNfb2JqZWN0CiAgaGVhZGVyc19hdG9tCiAgaGVhZGVyc19mcm9tCiAgaGVhZGVyc19zZXQKICBmZF9jYWxsYmFjawogIGlvX2V2ZW50cwogIGlvX3BhcnNlX2V2ZW50cwogIG1pbm5ldF9pb19oYW5kbGVyCiAgZnJlZV9oYW5kbGVyX2Nsb3N1cmUKICBtYWtlX2hhbmRsZXIKICBtaW5uZXRfaGFuZGxlcnMKICBtaW5uZXRfZW1pdF90aGlzCiAgbWlubmV0X2VtaXQKICB2YWx1ZV9kdW1wCiAganNfbWlubmV0X2luaXQKSlNfSU5JVF9NT0RVTEUKICBsd3NfY2FsbGJhY2tfbmFtZQAAAAAAAAAAAgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3962,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/client.js",
						"symkeys":
						[
							[
								280,
								317
							],
							[
								702,
								720
							],
							[
								835,
								854
							],
							[
								1009,
								1027
							],
							[
								1163,
								1179
							],
							[
								1355,
								1371
							],
							[
								1446,
								1464
							],
							[
								1688,
								1693
							]
						],
						"symlist":
						[
							" function Client(url, options, debug)",
							"onConnect(ws, req)",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onHttp(req, rsp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg)",
							"get()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAACAQAAICBhc3NlcnQoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkKICBnZXRwaWQgPSAoKSA9PgogIG9uY2UgPSBmbiA9PgogICguLi5hcmdzKSA9PgogIGV4aXN0cyA9IHBhdGggPT4KICByYW5kU3RyID0gKG4sIHNldCA9ICdfMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonLCBybmcgPSBNYXRoLnJhbmRvbSkgPT4KICBzID0+CihhLCBbZXhwLCBycGxdKSA9PgogIGFiYnJldmlhdGUgPSBzID0+AAAAAAAAAACeAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3963,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-server-http.js",
						"symkeys":
						[
							[
								207,
								231
							],
							[
								294,
								312
							],
							[
								371,
								390
							],
							[
								465,
								483
							],
							[
								557,
								574
							],
							[
								822,
								844
							]
						],
						"symlist":
						[
							"function TestClient(url)",
							"onConnect(ws, req)",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onHttp(req, resp)",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACeAAAAQ2xpZW50KHVybCwgb3B0aW9ucywgZGVidWcpCiAgb25Db25uZWN0KHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uRXJyb3Iod3MsIGVycm9yKQogIG9uSHR0cChyZXEsIHJzcCkKICBvbkZkKGZkLCByZCwgd3IpCiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgZ2V0KCkAAAAAAAAAAHMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3964,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								329,
								351
							],
							[
								417,
								423
							],
							[
								582,
								600
							],
							[
								867,
								873
							],
							[
								1214,
								1220
							],
							[
								1555,
								1574
							],
							[
								1665,
								1683
							],
							[
								1773,
								1791
							],
							[
								1983,
								2000
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"onHttp(req, resp)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABzAAAAVGVzdENsaWVudCh1cmwpCiAgb25Db25uZWN0KHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uRXJyb3Iod3MsIGVycm9yKQogIG9uSHR0cChyZXEsIHJlc3ApCiAgbWFpbiguLi5hcmdzKQAAAAAAAAAAkQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3965,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								329,
								351
							],
							[
								417,
								423
							],
							[
								582,
								600
							],
							[
								867,
								873
							],
							[
								1213,
								1219
							],
							[
								1554,
								1573
							],
							[
								1664,
								1682
							],
							[
								1772,
								1790
							],
							[
								1982,
								1999
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"onHttp(req, resp)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACRAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkh0dHAocmVxLCByZXNwKQAAAAAAAAAAkQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3966,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								329,
								351
							],
							[
								417,
								423
							],
							[
								582,
								600
							],
							[
								867,
								873
							],
							[
								1213,
								1219
							],
							[
								1554,
								1573
							],
							[
								1664,
								1682
							],
							[
								1772,
								1790
							],
							[
								1981,
								1998
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"onHttp(req, resp)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACRAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkh0dHAocmVxLCByZXNwKQAAAAAAAAAAkQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJEAAAAgIG1haW4oLi4uYXJncykKICBhcmcgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICAoKSA9PgogICgpID0+CiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uRXJyb3Iod3MsIGVycm9yKQogIG9uTWVzc2FnZSh3cywgbXNnKQogIG9uSHR0cChyZXEsIHJlc3ApAAAAAAAAAACRAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3967,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								329,
								351
							],
							[
								417,
								423
							],
							[
								582,
								600
							],
							[
								867,
								873
							],
							[
								1213,
								1219
							],
							[
								1554,
								1573
							],
							[
								1664,
								1682
							],
							[
								1772,
								1790
							],
							[
								1981,
								1998
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"onHttp(req, resp)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACRAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkh0dHAocmVxLCByZXNwKQAAAAAAAAAAkQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJEAAAAgIG1haW4oLi4uYXJncykKICBhcmcgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICAoKSA9PgogICgpID0+CiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uRXJyb3Iod3MsIGVycm9yKQogIG9uTWVzc2FnZSh3cywgbXNnKQogIG9uSHR0cChyZXEsIHJlc3ApAAAAAAAAAACRAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3968,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								329,
								351
							],
							[
								417,
								423
							],
							[
								582,
								600
							],
							[
								867,
								873
							],
							[
								1213,
								1219
							],
							[
								1554,
								1573
							],
							[
								1664,
								1682
							],
							[
								1772,
								1790
							],
							[
								1981,
								1998
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"onHttp(req, resp)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACRAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkh0dHAocmVxLCByZXNwKQAAAAAAAAAAkQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJEAAAAgIG1haW4oLi4uYXJncykKICBhcmcgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICAoKSA9PgogICgpID0+CiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uRXJyb3Iod3MsIGVycm9yKQogIG9uTWVzc2FnZSh3cywgbXNnKQogIG9uSHR0cChyZXEsIHJlc3ApAAAAAAAAAACRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkQAAACAgbWFpbiguLi5hcmdzKQogIGFyZyA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogICgpID0+CiAgKCkgPT4KICBvbkNsb3NlKHdzLCByZWFzb24pCiAgb25FcnJvcih3cywgZXJyb3IpCiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25IdHRwKHJlcSwgcmVzcCkAAAAAAAAAAJEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3969,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								329,
								351
							],
							[
								417,
								423
							],
							[
								582,
								600
							],
							[
								867,
								873
							],
							[
								1213,
								1219
							],
							[
								1554,
								1573
							],
							[
								1664,
								1682
							],
							[
								1772,
								1790
							],
							[
								1981,
								1998
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"onHttp(req, resp)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACRAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkh0dHAocmVxLCByZXNwKQAAAAAAAAAAkQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3970,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								329,
								351
							],
							[
								417,
								423
							],
							[
								582,
								600
							],
							[
								867,
								873
							],
							[
								1213,
								1219
							],
							[
								1554,
								1573
							],
							[
								1664,
								1682
							],
							[
								1772,
								1790
							],
							[
								1981,
								1998
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"onHttp(req, resp)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACRAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkh0dHAocmVxLCByZXNwKQAAAAAAAAAAkQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJEAAAAgIG1haW4oLi4uYXJncykKICBhcmcgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICAoKSA9PgogICgpID0+CiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uRXJyb3Iod3MsIGVycm9yKQogIG9uTWVzc2FnZSh3cywgbXNnKQogIG9uSHR0cChyZXEsIHJlc3ApAAAAAAAAAACRAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3971,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								329,
								351
							],
							[
								417,
								423
							],
							[
								582,
								600
							],
							[
								867,
								873
							],
							[
								1213,
								1219
							],
							[
								1554,
								1573
							],
							[
								1664,
								1682
							],
							[
								1772,
								1790
							],
							[
								1981,
								1998
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"onHttp(req, resp)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACRAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkh0dHAocmVxLCByZXNwKQAAAAAAAAAAkQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3972,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								329,
								351
							],
							[
								417,
								423
							],
							[
								582,
								600
							],
							[
								867,
								873
							],
							[
								1211,
								1217
							],
							[
								1552,
								1571
							],
							[
								1662,
								1680
							],
							[
								1770,
								1788
							],
							[
								1977,
								1994
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"onHttp(req, resp)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACRAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkh0dHAocmVxLCByZXNwKQAAAAAAAAAAkQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJEAAAAgIG1haW4oLi4uYXJncykKICBhcmcgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICAoKSA9PgogICgpID0+CiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uRXJyb3Iod3MsIGVycm9yKQogIG9uTWVzc2FnZSh3cywgbXNnKQogIG9uSHR0cChyZXEsIHJlc3ApAAAAAAAAAACRAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3973,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								329,
								351
							],
							[
								417,
								423
							],
							[
								582,
								600
							],
							[
								867,
								873
							],
							[
								1211,
								1217
							],
							[
								1552,
								1571
							],
							[
								1662,
								1680
							],
							[
								1770,
								1788
							],
							[
								1977,
								1994
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"onHttp(req, resp)"
						]
					},
					"CAAAAAAAAAAAAAAAAAAAAAAAAACRAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkh0dHAocmVxLCByZXNwKQAAAAAAAAAAkQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJEAAAAgIG1haW4oLi4uYXJncykKICBhcmcgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICAoKSA9PgogICgpID0+CiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uRXJyb3Iod3MsIGVycm9yKQogIG9uTWVzc2FnZSh3cywgbXNnKQogIG9uSHR0cChyZXEsIHJlc3ApAAAAAAAAAACRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkQAAACAgbWFpbiguLi5hcmdzKQogIGFyZyA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogICgpID0+CiAgKCkgPT4KICBvbkNsb3NlKHdzLCByZWFzb24pCiAgb25FcnJvcih3cywgZXJyb3IpCiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25IdHRwKHJlcSwgcmVzcCkAAAAAAAAAAJEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACRAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkh0dHAocmVxLCByZXNwKQAAAAAAAAAAkQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3974,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								329,
								351
							],
							[
								417,
								423
							],
							[
								582,
								600
							],
							[
								867,
								873
							],
							[
								1211,
								1217
							],
							[
								1552,
								1571
							],
							[
								1662,
								1680
							],
							[
								1770,
								1788
							],
							[
								1977,
								1994
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"onHttp(req, resp)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACRAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkh0dHAocmVxLCByZXNwKQAAAAAAAAAAkQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJEAAAAgIG1haW4oLi4uYXJncykKICBhcmcgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICAoKSA9PgogICgpID0+CiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uRXJyb3Iod3MsIGVycm9yKQogIG9uTWVzc2FnZSh3cywgbXNnKQogIG9uSHR0cChyZXEsIHJlc3ApAAAAAAAAAACRAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3975,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								329,
								351
							],
							[
								417,
								423
							],
							[
								582,
								600
							],
							[
								867,
								873
							],
							[
								1211,
								1217
							],
							[
								1552,
								1571
							],
							[
								1662,
								1680
							],
							[
								1770,
								1788
							],
							[
								1977,
								1994
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"onHttp(req, resp)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACRAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkh0dHAocmVxLCByZXNwKQAAAAAAAAAAkQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3976,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								329,
								351
							],
							[
								417,
								423
							],
							[
								580,
								598
							],
							[
								865,
								871
							],
							[
								1209,
								1215
							],
							[
								1550,
								1569
							],
							[
								1660,
								1678
							],
							[
								1768,
								1786
							],
							[
								1975,
								1992
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"onHttp(req, resp)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACRAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkh0dHAocmVxLCByZXNwKQAAAAAAAAAAkQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3977,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								329,
								351
							],
							[
								417,
								423
							],
							[
								580,
								598
							],
							[
								865,
								871
							],
							[
								1290,
								1296
							],
							[
								1631,
								1650
							],
							[
								1741,
								1759
							],
							[
								1849,
								1867
							],
							[
								2056,
								2073
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"onHttp(req, resp)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACRAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkh0dHAocmVxLCByZXNwKQAAAAAAAAAAkQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJEAAAAgIG1haW4oLi4uYXJncykKICBhcmcgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICAoKSA9PgogICgpID0+CiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uRXJyb3Iod3MsIGVycm9yKQogIG9uTWVzc2FnZSh3cywgbXNnKQogIG9uSHR0cChyZXEsIHJlc3ApAAAAAAAAAACRAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3978,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								329,
								351
							],
							[
								417,
								423
							],
							[
								580,
								598
							],
							[
								865,
								871
							],
							[
								1261,
								1267
							],
							[
								1602,
								1621
							],
							[
								1712,
								1730
							],
							[
								1820,
								1838
							],
							[
								2027,
								2044
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"onHttp(req, resp)"
						]
					},
					"CAAAAAAAAAAAAAAAAAAAAAAAAACRAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkh0dHAocmVxLCByZXNwKQAAAAAAAAAAkQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJEAAAAgIG1haW4oLi4uYXJncykKICBhcmcgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICAoKSA9PgogICgpID0+CiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uRXJyb3Iod3MsIGVycm9yKQogIG9uTWVzc2FnZSh3cywgbXNnKQogIG9uSHR0cChyZXEsIHJlc3ApAAAAAAAAAACRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkQAAACAgbWFpbiguLi5hcmdzKQogIGFyZyA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogICgpID0+CiAgKCkgPT4KICBvbkNsb3NlKHdzLCByZWFzb24pCiAgb25FcnJvcih3cywgZXJyb3IpCiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25IdHRwKHJlcSwgcmVzcCkAAAAAAAAAAJEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACRAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkh0dHAocmVxLCByZXNwKQAAAAAAAAAAkQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3979,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								329,
								351
							],
							[
								417,
								423
							],
							[
								580,
								598
							],
							[
								865,
								871
							],
							[
								1261,
								1267
							],
							[
								1602,
								1621
							],
							[
								1712,
								1730
							],
							[
								1820,
								1838
							],
							[
								2027,
								2044
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"onHttp(req, resp)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACRAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkh0dHAocmVxLCByZXNwKQAAAAAAAAAAkQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3980,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								329,
								351
							],
							[
								417,
								423
							],
							[
								580,
								598
							],
							[
								865,
								871
							],
							[
								1261,
								1267
							],
							[
								1602,
								1621
							],
							[
								1712,
								1730
							],
							[
								1820,
								1838
							],
							[
								2027,
								2044
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"onHttp(req, resp)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACRAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkh0dHAocmVxLCByZXNwKQAAAAAAAAAAkQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "minnet-server.c",
			"settings":
			{
				"buffer_size": 11986,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					142,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA7iUAAAAAAADuJQAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA7iUAAAAAAADuJQAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA7iUAAAAAAADuJQAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA7iUAAAAAAADuJQAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA7iUAAAAAAADuJQAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA7iUAAAAAAADuJQAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA7iUAAAAAAADuJQAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA7iUAAAAAAADuJQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-stream.h",
			"settings":
			{
				"buffer_size": 1149,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					50,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB8BAAAI2lmbmRlZiBNSU5ORVRfU1RSRUFNX0gKI2RlZmluZSBNSU5ORVRfU1RSRUFNX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgIm1pbm5ldC5oIgojaW5jbHVkZSAiYnVmZmVyLmgiCgp0eXBlZGVmIHN0cnVjdCBzdHJlYW0gewogIHNpemVfdCByZWZfY291bnQ7CiAgY2hhciB0eXBlWzI1Nl07CiAgc3RydWN0IGJ5dGVfYnVmZmVyIGJ1ZmZlcjsKfSBNaW5uZXRTdHJlYW07Cgp2b2lkIHN0cmVhbV9kdW1wKHN0cnVjdCBzdHJlYW0gY29uc3QqKTsKdm9pZCBzdHJlYW1faW5pdChzdHJ1Y3Qgc3RyZWFtKiwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4sIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBsZW4pOwpzdHJ1Y3Qgc3RyZWFtKiBzdHJlYW1fbmV3KEpTQ29udGV4dCopOwp2b2lkIHN0cmVhbV96ZXJvKHN0cnVjdCBzdHJlYW0qKTsKSlNWYWx1ZSBtaW5uZXRfc3RyZWFtX2NvbnN0cnVjdG9yKEpTQ29udGV4dCosIEpTVmFsdWUgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWUgYXJndltdKTsKSlNWYWx1ZSBtaW5uZXRfc3RyZWFtX25ldyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKiB0eXBlLCBzaXplX3QgdHlwZWxlbiwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IGxlbik7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV93cmFwKEpTQ29udGV4dCosIHN0cnVjdCBzdHJlYW0qKTsKCmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9zdHJlYW1fY2xhc3M7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfc3RyZWFtX3Byb3RvLCBtaW5uZXRfc3RyZWFtX2N0b3I7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF9zdHJlYW1fY2xhc3NfaWQ7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfc3RyZWFtX3Byb3RvX2Z1bmNzW107CmV4dGVybiBjb25zdCBzaXplX3QgbWlubmV0X3N0cmVhbV9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBNaW5uZXRTdHJlYW0qCm1pbm5ldF9zdHJlYW1fZGF0YShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfc3RyZWFtX2NsYXNzX2lkKTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9TVFJFQU1fSCAqLwoAAAAAAAAAAIMEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACDBAAAI2lmbmRlZiBNSU5ORVRfU1RSRUFNX0gKI2RlZmluZSBNSU5ORVRfU1RSRUFNX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgIm1pbm5ldC5oIgojaW5jbHVkZSAibWlubmV0LWJ1ZmZlci5oIgoKdHlwZWRlZiBzdHJ1Y3Qgc3RyZWFtIHsKICBzaXplX3QgcmVmX2NvdW50OwogIGNoYXIgdHlwZVsyNTZdOwogIHN0cnVjdCBieXRlX2J1ZmZlciBidWZmZXI7Cn0gTWlubmV0U3RyZWFtOwoKdm9pZCBzdHJlYW1fZHVtcChzdHJ1Y3Qgc3RyZWFtIGNvbnN0Kik7CnZvaWQgc3RyZWFtX2luaXQoc3RydWN0IHN0cmVhbSosIGNvbnN0IGNoYXIqIHR5cGUsIHNpemVfdCB0eXBlbGVuLCBjb25zdCB2b2lkKiB4LCBzaXplX3QgbGVuKTsKc3RydWN0IHN0cmVhbSogc3RyZWFtX25ldyhKU0NvbnRleHQqKTsKdm9pZCBzdHJlYW1femVybyhzdHJ1Y3Qgc3RyZWFtKik7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlIG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlIGFyZ3ZbXSk7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4sIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBsZW4pOwpKU1ZhbHVlIG1pbm5ldF9zdHJlYW1fd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3Qgc3RyZWFtKik7CgpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfc3RyZWFtX2NsYXNzOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3N0cmVhbV9wcm90bywgbWlubmV0X3N0cmVhbV9jdG9yOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfc3RyZWFtX2NsYXNzX2lkOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3N0cmVhbV9wcm90b19mdW5jc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF9zdHJlYW1fcHJvdG9fZnVuY3Nfc2l6ZTsKCnN0YXRpYyBpbmxpbmUgTWlubmV0U3RyZWFtKgptaW5uZXRfc3RyZWFtX2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3N0cmVhbV9jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfU1RSRUFNX0ggKi8KAAAAAAAAAACDBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACDBAAAI2lmbmRlZiBNSU5ORVRfU1RSRUFNX0gKI2RlZmluZSBNSU5ORVRfU1RSRUFNX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgIm1pbm5ldC5oIgojaW5jbHVkZSAibWlubmV0LWJ1ZmZlci5oIgoKdHlwZWRlZiBzdHJ1Y3Qgc3RyZWFtIHsKICBzaXplX3QgcmVmX2NvdW50OwogIGNoYXIgdHlwZVsyNTZdOwogIHN0cnVjdCBieXRlX2J1ZmZlciBidWZmZXI7Cn0gTWlubmV0U3RyZWFtOwoKdm9pZCBzdHJlYW1fZHVtcChzdHJ1Y3Qgc3RyZWFtIGNvbnN0Kik7CnZvaWQgc3RyZWFtX2luaXQoc3RydWN0IHN0cmVhbSosIGNvbnN0IGNoYXIqIHR5cGUsIHNpemVfdCB0eXBlbGVuLCBjb25zdCB2b2lkKiB4LCBzaXplX3QgbGVuKTsKc3RydWN0IHN0cmVhbSogc3RyZWFtX25ldyhKU0NvbnRleHQqKTsKdm9pZCBzdHJlYW1femVybyhzdHJ1Y3Qgc3RyZWFtKik7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlIG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlIGFyZ3ZbXSk7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4sIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBsZW4pOwpKU1ZhbHVlIG1pbm5ldF9zdHJlYW1fd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3Qgc3RyZWFtKik7CgpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfc3RyZWFtX2NsYXNzOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3N0cmVhbV9wcm90bywgbWlubmV0X3N0cmVhbV9jdG9yOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfc3RyZWFtX2NsYXNzX2lkOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3N0cmVhbV9wcm90b19mdW5jc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF9zdHJlYW1fcHJvdG9fZnVuY3Nfc2l6ZTsKCnN0YXRpYyBpbmxpbmUgTWlubmV0U3RyZWFtKgptaW5uZXRfc3RyZWFtX2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3N0cmVhbV9jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfU1RSRUFNX0ggKi8KAAAAAAAAAACDBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACDBAAAI2lmbmRlZiBNSU5ORVRfU1RSRUFNX0gKI2RlZmluZSBNSU5ORVRfU1RSRUFNX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgIm1pbm5ldC5oIgojaW5jbHVkZSAibWlubmV0LWJ1ZmZlci5oIgoKdHlwZWRlZiBzdHJ1Y3Qgc3RyZWFtIHsKICBzaXplX3QgcmVmX2NvdW50OwogIGNoYXIgdHlwZVsyNTZdOwogIHN0cnVjdCBieXRlX2J1ZmZlciBidWZmZXI7Cn0gTWlubmV0U3RyZWFtOwoKdm9pZCBzdHJlYW1fZHVtcChzdHJ1Y3Qgc3RyZWFtIGNvbnN0Kik7CnZvaWQgc3RyZWFtX2luaXQoc3RydWN0IHN0cmVhbSosIGNvbnN0IGNoYXIqIHR5cGUsIHNpemVfdCB0eXBlbGVuLCBjb25zdCB2b2lkKiB4LCBzaXplX3QgbGVuKTsKc3RydWN0IHN0cmVhbSogc3RyZWFtX25ldyhKU0NvbnRleHQqKTsKdm9pZCBzdHJlYW1femVybyhzdHJ1Y3Qgc3RyZWFtKik7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlIG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlIGFyZ3ZbXSk7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4sIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBsZW4pOwpKU1ZhbHVlIG1pbm5ldF9zdHJlYW1fd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3Qgc3RyZWFtKik7CgpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfc3RyZWFtX2NsYXNzOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3N0cmVhbV9wcm90bywgbWlubmV0X3N0cmVhbV9jdG9yOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfc3RyZWFtX2NsYXNzX2lkOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3N0cmVhbV9wcm90b19mdW5jc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF9zdHJlYW1fcHJvdG9fZnVuY3Nfc2l6ZTsKCnN0YXRpYyBpbmxpbmUgTWlubmV0U3RyZWFtKgptaW5uZXRfc3RyZWFtX2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3N0cmVhbV9jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfU1RSRUFNX0ggKi8KAAAAAAAAAACDBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACDBAAAI2lmbmRlZiBNSU5ORVRfU1RSRUFNX0gKI2RlZmluZSBNSU5ORVRfU1RSRUFNX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgIm1pbm5ldC5oIgojaW5jbHVkZSAibWlubmV0LWJ1ZmZlci5oIgoKdHlwZWRlZiBzdHJ1Y3Qgc3RyZWFtIHsKICBzaXplX3QgcmVmX2NvdW50OwogIGNoYXIgdHlwZVsyNTZdOwogIHN0cnVjdCBieXRlX2J1ZmZlciBidWZmZXI7Cn0gTWlubmV0U3RyZWFtOwoKdm9pZCBzdHJlYW1fZHVtcChzdHJ1Y3Qgc3RyZWFtIGNvbnN0Kik7CnZvaWQgc3RyZWFtX2luaXQoc3RydWN0IHN0cmVhbSosIGNvbnN0IGNoYXIqIHR5cGUsIHNpemVfdCB0eXBlbGVuLCBjb25zdCB2b2lkKiB4LCBzaXplX3QgbGVuKTsKc3RydWN0IHN0cmVhbSogc3RyZWFtX25ldyhKU0NvbnRleHQqKTsKdm9pZCBzdHJlYW1femVybyhzdHJ1Y3Qgc3RyZWFtKik7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlIG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlIGFyZ3ZbXSk7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4sIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBsZW4pOwpKU1ZhbHVlIG1pbm5ldF9zdHJlYW1fd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3Qgc3RyZWFtKik7CgpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfc3RyZWFtX2NsYXNzOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3N0cmVhbV9wcm90bywgbWlubmV0X3N0cmVhbV9jdG9yOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfc3RyZWFtX2NsYXNzX2lkOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3N0cmVhbV9wcm90b19mdW5jc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF9zdHJlYW1fcHJvdG9fZnVuY3Nfc2l6ZTsKCnN0YXRpYyBpbmxpbmUgTWlubmV0U3RyZWFtKgptaW5uZXRfc3RyZWFtX2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3N0cmVhbV9jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfU1RSRUFNX0ggKi8KAAAAAAAAAACDBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACDBAAAI2lmbmRlZiBNSU5ORVRfU1RSRUFNX0gKI2RlZmluZSBNSU5ORVRfU1RSRUFNX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgIm1pbm5ldC5oIgojaW5jbHVkZSAibWlubmV0LWJ1ZmZlci5oIgoKdHlwZWRlZiBzdHJ1Y3Qgc3RyZWFtIHsKICBzaXplX3QgcmVmX2NvdW50OwogIGNoYXIgdHlwZVsyNTZdOwogIHN0cnVjdCBieXRlX2J1ZmZlciBidWZmZXI7Cn0gTWlubmV0U3RyZWFtOwoKdm9pZCBzdHJlYW1fZHVtcChzdHJ1Y3Qgc3RyZWFtIGNvbnN0Kik7CnZvaWQgc3RyZWFtX2luaXQoc3RydWN0IHN0cmVhbSosIGNvbnN0IGNoYXIqIHR5cGUsIHNpemVfdCB0eXBlbGVuLCBjb25zdCB2b2lkKiB4LCBzaXplX3QgbGVuKTsKc3RydWN0IHN0cmVhbSogc3RyZWFtX25ldyhKU0NvbnRleHQqKTsKdm9pZCBzdHJlYW1femVybyhzdHJ1Y3Qgc3RyZWFtKik7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlIG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlIGFyZ3ZbXSk7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4sIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBsZW4pOwpKU1ZhbHVlIG1pbm5ldF9zdHJlYW1fd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3Qgc3RyZWFtKik7CgpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfc3RyZWFtX2NsYXNzOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3N0cmVhbV9wcm90bywgbWlubmV0X3N0cmVhbV9jdG9yOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfc3RyZWFtX2NsYXNzX2lkOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3N0cmVhbV9wcm90b19mdW5jc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF9zdHJlYW1fcHJvdG9fZnVuY3Nfc2l6ZTsKCnN0YXRpYyBpbmxpbmUgTWlubmV0U3RyZWFtKgptaW5uZXRfc3RyZWFtX2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3N0cmVhbV9jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfU1RSRUFNX0ggKi8KAAAAAAAAAACDBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACDBAAAI2lmbmRlZiBNSU5ORVRfU1RSRUFNX0gKI2RlZmluZSBNSU5ORVRfU1RSRUFNX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgIm1pbm5ldC5oIgojaW5jbHVkZSAibWlubmV0LWJ1ZmZlci5oIgoKdHlwZWRlZiBzdHJ1Y3Qgc3RyZWFtIHsKICBzaXplX3QgcmVmX2NvdW50OwogIGNoYXIgdHlwZVsyNTZdOwogIHN0cnVjdCBieXRlX2J1ZmZlciBidWZmZXI7Cn0gTWlubmV0U3RyZWFtOwoKdm9pZCBzdHJlYW1fZHVtcChzdHJ1Y3Qgc3RyZWFtIGNvbnN0Kik7CnZvaWQgc3RyZWFtX2luaXQoc3RydWN0IHN0cmVhbSosIGNvbnN0IGNoYXIqIHR5cGUsIHNpemVfdCB0eXBlbGVuLCBjb25zdCB2b2lkKiB4LCBzaXplX3QgbGVuKTsKc3RydWN0IHN0cmVhbSogc3RyZWFtX25ldyhKU0NvbnRleHQqKTsKdm9pZCBzdHJlYW1femVybyhzdHJ1Y3Qgc3RyZWFtKik7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlIG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlIGFyZ3ZbXSk7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4sIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBsZW4pOwpKU1ZhbHVlIG1pbm5ldF9zdHJlYW1fd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3Qgc3RyZWFtKik7CgpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfc3RyZWFtX2NsYXNzOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3N0cmVhbV9wcm90bywgbWlubmV0X3N0cmVhbV9jdG9yOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfc3RyZWFtX2NsYXNzX2lkOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3N0cmVhbV9wcm90b19mdW5jc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF9zdHJlYW1fcHJvdG9fZnVuY3Nfc2l6ZTsKCnN0YXRpYyBpbmxpbmUgTWlubmV0U3RyZWFtKgptaW5uZXRfc3RyZWFtX2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3N0cmVhbV9jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfU1RSRUFNX0ggKi8KAAAAAAAAAACDBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACDBAAAI2lmbmRlZiBNSU5ORVRfU1RSRUFNX0gKI2RlZmluZSBNSU5ORVRfU1RSRUFNX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgIm1pbm5ldC5oIgojaW5jbHVkZSAibWlubmV0LWJ1ZmZlci5oIgoKdHlwZWRlZiBzdHJ1Y3Qgc3RyZWFtIHsKICBzaXplX3QgcmVmX2NvdW50OwogIGNoYXIgdHlwZVsyNTZdOwogIHN0cnVjdCBieXRlX2J1ZmZlciBidWZmZXI7Cn0gTWlubmV0U3RyZWFtOwoKdm9pZCBzdHJlYW1fZHVtcChzdHJ1Y3Qgc3RyZWFtIGNvbnN0Kik7CnZvaWQgc3RyZWFtX2luaXQoc3RydWN0IHN0cmVhbSosIGNvbnN0IGNoYXIqIHR5cGUsIHNpemVfdCB0eXBlbGVuLCBjb25zdCB2b2lkKiB4LCBzaXplX3QgbGVuKTsKc3RydWN0IHN0cmVhbSogc3RyZWFtX25ldyhKU0NvbnRleHQqKTsKdm9pZCBzdHJlYW1femVybyhzdHJ1Y3Qgc3RyZWFtKik7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlIG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlIGFyZ3ZbXSk7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4sIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBsZW4pOwpKU1ZhbHVlIG1pbm5ldF9zdHJlYW1fd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3Qgc3RyZWFtKik7CgpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfc3RyZWFtX2NsYXNzOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3N0cmVhbV9wcm90bywgbWlubmV0X3N0cmVhbV9jdG9yOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfc3RyZWFtX2NsYXNzX2lkOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3N0cmVhbV9wcm90b19mdW5jc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF9zdHJlYW1fcHJvdG9fZnVuY3Nfc2l6ZTsKCnN0YXRpYyBpbmxpbmUgTWlubmV0U3RyZWFtKgptaW5uZXRfc3RyZWFtX2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3N0cmVhbV9jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfU1RSRUFNX0ggKi8KAAAAAAAAAAB9BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9BAAAI2lmbmRlZiBNSU5ORVRfU1RSRUFNX0gKI2RlZmluZSBNSU5ORVRfU1RSRUFNX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgIm1pbm5ldC5oIgojaW5jbHVkZSAibWlubmV0LWJ1ZmZlci5oIgoKdHlwZWRlZiBzdHJ1Y3Qgc3RyZWFtIHsKICBzaXplX3QgcmVmX2NvdW50OwogIGNoYXIgdHlwZVsyNTZdOwogIE1pbm5ldEJ1ZmZlciBidWZmZXI7Cn0gTWlubmV0U3RyZWFtOwoKdm9pZCBzdHJlYW1fZHVtcChzdHJ1Y3Qgc3RyZWFtIGNvbnN0Kik7CnZvaWQgc3RyZWFtX2luaXQoc3RydWN0IHN0cmVhbSosIGNvbnN0IGNoYXIqIHR5cGUsIHNpemVfdCB0eXBlbGVuLCBjb25zdCB2b2lkKiB4LCBzaXplX3QgbGVuKTsKc3RydWN0IHN0cmVhbSogc3RyZWFtX25ldyhKU0NvbnRleHQqKTsKdm9pZCBzdHJlYW1femVybyhzdHJ1Y3Qgc3RyZWFtKik7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlIG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlIGFyZ3ZbXSk7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4sIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBsZW4pOwpKU1ZhbHVlIG1pbm5ldF9zdHJlYW1fd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3Qgc3RyZWFtKik7CgpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfc3RyZWFtX2NsYXNzOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3N0cmVhbV9wcm90bywgbWlubmV0X3N0cmVhbV9jdG9yOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfc3RyZWFtX2NsYXNzX2lkOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3N0cmVhbV9wcm90b19mdW5jc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF9zdHJlYW1fcHJvdG9fZnVuY3Nfc2l6ZTsKCnN0YXRpYyBpbmxpbmUgTWlubmV0U3RyZWFtKgptaW5uZXRfc3RyZWFtX2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3N0cmVhbV9jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfU1RSRUFNX0ggKi8KAAAAAAAAAAB9BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9BAAAI2lmbmRlZiBNSU5ORVRfU1RSRUFNX0gKI2RlZmluZSBNSU5ORVRfU1RSRUFNX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgIm1pbm5ldC5oIgojaW5jbHVkZSAibWlubmV0LWJ1ZmZlci5oIgoKdHlwZWRlZiBzdHJ1Y3Qgc3RyZWFtIHsKICBzaXplX3QgcmVmX2NvdW50OwogIGNoYXIgdHlwZVsyNTZdOwogIE1pbm5ldEJ1ZmZlciBidWZmZXI7Cn0gTWlubmV0U3RyZWFtOwoKdm9pZCBzdHJlYW1fZHVtcChzdHJ1Y3Qgc3RyZWFtIGNvbnN0Kik7CnZvaWQgc3RyZWFtX2luaXQoc3RydWN0IHN0cmVhbSosIGNvbnN0IGNoYXIqIHR5cGUsIHNpemVfdCB0eXBlbGVuLCBjb25zdCB2b2lkKiB4LCBzaXplX3QgbGVuKTsKc3RydWN0IHN0cmVhbSogc3RyZWFtX25ldyhKU0NvbnRleHQqKTsKdm9pZCBzdHJlYW1femVybyhzdHJ1Y3Qgc3RyZWFtKik7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlIG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlIGFyZ3ZbXSk7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4sIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBsZW4pOwpKU1ZhbHVlIG1pbm5ldF9zdHJlYW1fd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3Qgc3RyZWFtKik7CgpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfc3RyZWFtX2NsYXNzOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3N0cmVhbV9wcm90bywgbWlubmV0X3N0cmVhbV9jdG9yOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfc3RyZWFtX2NsYXNzX2lkOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3N0cmVhbV9wcm90b19mdW5jc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF9zdHJlYW1fcHJvdG9fZnVuY3Nfc2l6ZTsKCnN0YXRpYyBpbmxpbmUgTWlubmV0U3RyZWFtKgptaW5uZXRfc3RyZWFtX2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3N0cmVhbV9jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfU1RSRUFNX0ggKi8KAAAAAAAAAAB9BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9BAAAI2lmbmRlZiBNSU5ORVRfU1RSRUFNX0gKI2RlZmluZSBNSU5ORVRfU1RSRUFNX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgIm1pbm5ldC5oIgojaW5jbHVkZSAibWlubmV0LWJ1ZmZlci5oIgoKdHlwZWRlZiBzdHJ1Y3Qgc3RyZWFtIHsKICBzaXplX3QgcmVmX2NvdW50OwogIGNoYXIgdHlwZVsyNTZdOwogIE1pbm5ldEJ1ZmZlciBidWZmZXI7Cn0gTWlubmV0U3RyZWFtOwoKdm9pZCBzdHJlYW1fZHVtcChzdHJ1Y3Qgc3RyZWFtIGNvbnN0Kik7CnZvaWQgc3RyZWFtX2luaXQoc3RydWN0IHN0cmVhbSosIGNvbnN0IGNoYXIqIHR5cGUsIHNpemVfdCB0eXBlbGVuLCBjb25zdCB2b2lkKiB4LCBzaXplX3QgbGVuKTsKc3RydWN0IHN0cmVhbSogc3RyZWFtX25ldyhKU0NvbnRleHQqKTsKdm9pZCBzdHJlYW1femVybyhzdHJ1Y3Qgc3RyZWFtKik7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlIG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlIGFyZ3ZbXSk7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4sIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBsZW4pOwpKU1ZhbHVlIG1pbm5ldF9zdHJlYW1fd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3Qgc3RyZWFtKik7CgpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfc3RyZWFtX2NsYXNzOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3N0cmVhbV9wcm90bywgbWlubmV0X3N0cmVhbV9jdG9yOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfc3RyZWFtX2NsYXNzX2lkOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3N0cmVhbV9wcm90b19mdW5jc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF9zdHJlYW1fcHJvdG9fZnVuY3Nfc2l6ZTsKCnN0YXRpYyBpbmxpbmUgTWlubmV0U3RyZWFtKgptaW5uZXRfc3RyZWFtX2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3N0cmVhbV9jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfU1RSRUFNX0ggKi8KAAAAAAAAAAB9BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9BAAAI2lmbmRlZiBNSU5ORVRfU1RSRUFNX0gKI2RlZmluZSBNSU5ORVRfU1RSRUFNX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgIm1pbm5ldC5oIgojaW5jbHVkZSAibWlubmV0LWJ1ZmZlci5oIgoKdHlwZWRlZiBzdHJ1Y3Qgc3RyZWFtIHsKICBzaXplX3QgcmVmX2NvdW50OwogIGNoYXIgdHlwZVsyNTZdOwogIE1pbm5ldEJ1ZmZlciBidWZmZXI7Cn0gTWlubmV0U3RyZWFtOwoKdm9pZCBzdHJlYW1fZHVtcChzdHJ1Y3Qgc3RyZWFtIGNvbnN0Kik7CnZvaWQgc3RyZWFtX2luaXQoc3RydWN0IHN0cmVhbSosIGNvbnN0IGNoYXIqIHR5cGUsIHNpemVfdCB0eXBlbGVuLCBjb25zdCB2b2lkKiB4LCBzaXplX3QgbGVuKTsKc3RydWN0IHN0cmVhbSogc3RyZWFtX25ldyhKU0NvbnRleHQqKTsKdm9pZCBzdHJlYW1femVybyhzdHJ1Y3Qgc3RyZWFtKik7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlIG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlIGFyZ3ZbXSk7CkpTVmFsdWUgbWlubmV0X3N0cmVhbV9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4sIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBsZW4pOwpKU1ZhbHVlIG1pbm5ldF9zdHJlYW1fd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3Qgc3RyZWFtKik7CgpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfc3RyZWFtX2NsYXNzOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3N0cmVhbV9wcm90bywgbWlubmV0X3N0cmVhbV9jdG9yOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfc3RyZWFtX2NsYXNzX2lkOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3N0cmVhbV9wcm90b19mdW5jc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF9zdHJlYW1fcHJvdG9fZnVuY3Nfc2l6ZTsKCnN0YXRpYyBpbmxpbmUgTWlubmV0U3RyZWFtKgptaW5uZXRfc3RyZWFtX2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3N0cmVhbV9jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfU1RSRUFNX0ggKi8KAAAAAAAAAAB9BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-client-http.h",
			"settings":
			{
				"buffer_size": 229,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlAAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9DTElFTlRfSFRUUF9ICgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgoKaW50IGh0dHBfY2xpZW50X2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pOwoKI2VuZGlmIC8qIE1JTk5FVF9DTElFTlRfSFRUUF9IICovCgAAAAAAAAAA5QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlAAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9DTElFTlRfSFRUUF9ICgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgoKaW50IGh0dHBfY2xpZW50X2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pOwoKI2VuZGlmIC8qIE1JTk5FVF9DTElFTlRfSFRUUF9IICovCgAAAAAAAAAA5QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlAAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9DTElFTlRfSFRUUF9ICgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgoKaW50IGh0dHBfY2xpZW50X2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pOwoKI2VuZGlmIC8qIE1JTk5FVF9DTElFTlRfSFRUUF9IICovCgAAAAAAAAAA5QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlAAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9DTElFTlRfSFRUUF9ICgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgoKaW50IGh0dHBfY2xpZW50X2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pOwoKI2VuZGlmIC8qIE1JTk5FVF9DTElFTlRfSFRUUF9IICovCgAAAAAAAAAA5QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlAAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9DTElFTlRfSFRUUF9ICgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgoKaW50IGh0dHBfY2xpZW50X2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pOwoKI2VuZGlmIC8qIE1JTk5FVF9DTElFTlRfSFRUUF9IICovCgAAAAAAAAAA5QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlAAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9DTElFTlRfSFRUUF9ICgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgoKaW50IGh0dHBfY2xpZW50X2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pOwoKI2VuZGlmIC8qIE1JTk5FVF9DTElFTlRfSFRUUF9IICovCgAAAAAAAAAA5QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlAAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9DTElFTlRfSFRUUF9ICgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgoKaW50IGh0dHBfY2xpZW50X2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pOwoKI2VuZGlmIC8qIE1JTk5FVF9DTElFTlRfSFRUUF9IICovCgAAAAAAAAAA5QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlAAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9DTElFTlRfSFRUUF9ICgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgoKaW50IGh0dHBfY2xpZW50X2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pOwoKI2VuZGlmIC8qIE1JTk5FVF9DTElFTlRfSFRUUF9IICovCgAAAAAAAAAA5QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlAAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9DTElFTlRfSFRUUF9ICgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgoKaW50IGh0dHBfY2xpZW50X2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pOwoKI2VuZGlmIC8qIE1JTk5FVF9DTElFTlRfSFRUUF9IICovCgAAAAAAAAAA5QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlAAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9DTElFTlRfSFRUUF9ICgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgoKaW50IGh0dHBfY2xpZW50X2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pOwoKI2VuZGlmIC8qIE1JTk5FVF9DTElFTlRfSFRUUF9IICovCgAAAAAAAAAA5QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlAAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9DTElFTlRfSFRUUF9ICgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgoKaW50IGh0dHBfY2xpZW50X2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pOwoKI2VuZGlmIC8qIE1JTk5FVF9DTElFTlRfSFRUUF9IICovCgAAAAAAAAAA5QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-client.c",
			"settings":
			{
				"buffer_size": 10055,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					505,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAATiMAAAAAAABOIwAAAAAAAAAAAAAAAPC/"
				],
				[
					506,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAATiMAAAAAAABOIwAAAAAAAAAAAAAAAPC/"
				],
				[
					507,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAATiMAAAAAAABOIwAAAAAAAAAAAAAAAPC/"
				],
				[
					508,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAATiMAAAAAAABOIwAAAAAAAAAAAAAAAPC/"
				],
				[
					509,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAATiMAAAAAAABOIwAAAAAAAAAAAAAAAPC/"
				],
				[
					510,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAATiMAAAAAAABOIwAAAAAAAAAAAAAAAPC/"
				],
				[
					511,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAATiMAAAAAAABOIwAAAAAAAAAAAAAAAPC/"
				],
				[
					512,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAATiMAAAAAAABOIwAAAAAAAAAAAAAAAPC/"
				],
				[
					519,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAATiMAAAAAAABOIwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "libwebsockets/minimal-examples/ws-client/minimal-ws-client-spam-tx-rx/minimal-ws-client.c",
			"settings":
			{
				"buffer_size": 5332,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "minnet-websocket.c",
			"settings":
			{
				"buffer_size": 18383,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					832,
					1,
					"insert",
					{
						"characters": "opaque"
					},
					"BwAAAGwDAAAAAAAAbQMAAAAAAAAAAAAAbQMAAAAAAABtAwAAAAAAAAIAAAB3c20DAAAAAAAAbgMAAAAAAAAAAAAAbgMAAAAAAABvAwAAAAAAAAAAAABvAwAAAAAAAHADAAAAAAAAAAAAAHADAAAAAAAAcQMAAAAAAAAAAAAAcQMAAAAAAAByAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAMAAAAAAABuAwAAAAAAAAAAAAAAAPC/"
				],
				[
					846,
					1,
					"paste",
					null,
					"AgAAAI0DAAAAAAAAkwMAAAAAAAAAAAAAkwMAAAAAAACTAwAAAAAAAAIAAAB3cw",
					"AQAAAAAAAAABAAAAjQMAAAAAAACPAwAAAAAAAAAAAAAAAPC/"
				],
				[
					849,
					1,
					"cut",
					null,
					"AQAAAGwDAAAAAAAAbAMAAAAAAABAAAAAb3BhcXVlLT5oYW5kbGVyc1swXSA9IEpTX05VTEw7CiAgb3BhcXVlLT5oYW5kbGVyc1sxXSA9IEpTX05VTEw7Cg",
					"AQAAAAAAAAABAAAAbAMAAAAAAACsAwAAAAAAAAAAAAAAAPC/"
				],
				[
					852,
					1,
					"paste",
					null,
					"AQAAAC4EAAAAAAAAbgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgQAAAAAAAAuBAAAAAAAAAAAAAAAAPC/"
				],
				[
					866,
					1,
					"cut",
					null,
					"AQAAAKcJAAAAAAAApwkAAAAAAAA5AAAAIHdzLT5oYW5kbGVyc1swXSA9IEpTX05VTEw7CiAgd3MtPmhhbmRsZXJzWzFdID0gSlNfTlVMTDsK",
					"AQAAAAAAAAABAAAApwkAAAAAAADgCQAAAAAAAAAAAAAAAPC/"
				],
				[
					869,
					1,
					"paste",
					null,
					"AQAAAHIKAAAAAAAAqwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgoAAAAAAAByCgAAAAAAAAAAAAAAAPC/"
				],
				[
					877,
					1,
					"paste",
					null,
					"AQAAAHcKAAAAAAAAfwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwoAAAAAAAB3CgAAAAAAAAAAAAAAAPC/"
				],
				[
					880,
					1,
					"paste",
					null,
					"AQAAAJwKAAAAAAAApAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAoAAAAAAACcCgAAAAAAAAAAAAAAAPC/"
				],
				[
					887,
					1,
					"cut",
					null,
					"AQAAACAsAAAAAAAAICwAAAAAAAA6AAAAICB3cy0+aGFuZGxlcnNbMF0gPSBKU19OVUxMOwogIHdzLT5oYW5kbGVyc1sxXSA9IEpTX05VTEw7Cg",
					"AQAAAAAAAAABAAAAICwAAAAAAABaLAAAAAAAAAAAAAAAAAAA"
				],
				[
					891,
					1,
					"paste",
					null,
					"AQAAAJ0tAAAAAAAA1y0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnS0AAAAAAACdLQAAAAAAAAAAAAAAAPC/"
				],
				[
					901,
					1,
					"paste",
					null,
					"AgAAAJ8tAAAAAAAApS0AAAAAAAAAAAAApS0AAAAAAAClLQAAAAAAAAIAAAB3cw",
					"AQAAAAAAAAABAAAAny0AAAAAAAChLQAAAAAAAAAAAAAAAPC/"
				],
				[
					910,
					1,
					"paste",
					null,
					"AgAAAMAtAAAAAAAAxi0AAAAAAAAAAAAAxi0AAAAAAADGLQAAAAAAAAIAAAB3cw",
					"AQAAAAAAAAABAAAAwC0AAAAAAADCLQAAAAAAAAAAAAAAAPC/"
				],
				[
					913,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAxi0AAAAAAADGLQAAAAAAAAAAAAAAAPC/"
				],
				[
					924,
					1,
					"insert",
					{
						"characters": "struct"
					},
					"BwAAANgJAAAAAAAA2QkAAAAAAAAAAAAA2QkAAAAAAADZCQAAAAAAAAQAAAB3cy0+2QkAAAAAAADaCQAAAAAAAAAAAADaCQAAAAAAANsJAAAAAAAAAAAAANsJAAAAAAAA3AkAAAAAAAAAAAAA3AkAAAAAAADdCQAAAAAAAAAAAADdCQAAAAAAAN4JAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AkAAAAAAADYCQAAAAAAAAAAAAAAADRA"
				],
				[
					925,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN4JAAAAAAAA3wkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gkAAAAAAADeCQAAAAAAAAAAAAAAAPC/"
				],
				[
					927,
					1,
					"insert",
					{
						"characters": "  wsi"
					},
					"BQAAAN4JAAAAAAAA3wkAAAAAAAAAAAAA3wkAAAAAAADgCQAAAAAAAAAAAADgCQAAAAAAAOEJAAAAAAAAAAAAAOEJAAAAAAAA4gkAAAAAAAAAAAAA4gkAAAAAAADjCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gkAAAAAAADeCQAAAAAAAAAAAAAAAPC/"
				],
				[
					928,
					1,
					"insert_completion",
					{
						"completion": "wsi_opaque_user_data",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "wsi_opaque_user_data"
					},
					"AgAAAOAJAAAAAAAA4AkAAAAAAAADAAAAd3Np4AkAAAAAAAD0CQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wkAAAAAAADjCQAAAAAAAAAAAAAAAPC/"
				],
				[
					929,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAPQJAAAAAAAA9QkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AkAAAAAAAD0CQAAAAAAAAAAAAAAAPC/"
				],
				[
					941,
					1,
					"cut",
					null,
					"AQAAAEsKAAAAAAAASwoAAAAAAAAEAAAAd3MtPg",
					"AQAAAAAAAAABAAAATwoAAAAAAABLCgAAAAAAAAAAAAAAADRA"
				],
				[
					944,
					1,
					"left_delete",
					null,
					"AQAAAHIKAAAAAAAAcgoAAAAAAAAEAAAAd3MtPg",
					"AQAAAAAAAAABAAAAcgoAAAAAAAB2CgAAAAAAAAAAAAAAAPC/"
				],
				[
					947,
					1,
					"left_delete",
					null,
					"AQAAAIUKAAAAAAAAhQoAAAAAAAAEAAAAd3MtPg",
					"AQAAAAAAAAABAAAAhQoAAAAAAACJCgAAAAAAAAAAAAAAAPC/"
				],
				[
					950,
					1,
					"left_delete",
					null,
					"AQAAAKYKAAAAAAAApgoAAAAAAAAEAAAAd3MtPg",
					"AQAAAAAAAAABAAAApgoAAAAAAACqCgAAAAAAAAAAAAAAAPC/"
				],
				[
					960,
					1,
					"paste",
					null,
					"AQAAAN0IAAAAAAAABAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QgAAAAAAADdCAAAAAAAAAAAAAAAAPC/"
				],
				[
					961,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAQJAAAAAAAABQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAkAAAAAAAAECQAAAAAAAAAAAAAAAPC/"
				],
				[
					962,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAUJAAAAAAAABgkAAAAAAAAAAAAABgkAAAAAAAAKCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQkAAAAAAAAFCQAAAAAAAAAAAAAAAPC/"
				],
				[
					969,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAAMKAAAAAAAABAoAAAAAAAAAAAAABAoAAAAAAAAECgAAAAAAACEAAAAgIHN0cnVjdCAgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG8",
					"AQAAAAAAAAABAAAAJAoAAAAAAAADCgAAAAAAAAAAAAAAAPC/"
				],
				[
					972,
					1,
					"insert",
					{
						"characters": "if(("
					},
					"BAAAAAQKAAAAAAAABQoAAAAAAAAAAAAABQoAAAAAAAAGCgAAAAAAAAAAAAAGCgAAAAAAAAcKAAAAAAAAAAAAAAcKAAAAAAAACAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAoAAAAAAAAECgAAAAAAAAAAAAAAAPC/"
				],
				[
					974,
					1,
					"left_delete",
					null,
					"AQAAACQKAAAAAAAAJAoAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAJQoAAAAAAAAlCgAAAAAAAP///////+9/"
				],
				[
					975,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAACQKAAAAAAAAJQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAoAAAAAAAAkCgAAAAAAAAAAAAAAAPC/"
				],
				[
					978,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAAAgKAAAAAAAACQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAoAAAAAAAAICgAAAAAAAAAAAAAAAPC/"
				],
				[
					980,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACYKAAAAAAAAJwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgoAAAAAAAAmCgAAAAAAAP///////+9/"
				],
				[
					981,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACcKAAAAAAAAKQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwoAAAAAAAAnCgAAAAAAAAAAAAAAAPC/"
				],
				[
					982,
					1,
					"right_delete",
					null,
					"AQAAACgKAAAAAAAAKAoAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAKAoAAAAAAAAoCgAAAAAAAAAAAAAAAPC/"
				],
				[
					987,
					2,
					"left_delete",
					null,
					"AgAAACoKAAAAAAAAKgoAAAAAAAAzAAAAICAvLyBKU1ZhbHVlQ29uc3Qgd3Nfb2JqID0gSlNfRHVwVmFsdWUoY3R4LCByZXQpOwoKKQoAAAAAAAApCgAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAKgoAAAAAAABdCgAAAAAAAAAAAAAAAAAA"
				],
				[
					989,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAKUKAAAAAAAApgoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQoAAAAAAAClCgAAAAAAAAAAAAAAAAAA"
				],
				[
					990,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKYKAAAAAAAApwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgoAAAAAAACmCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1009,
					1,
					"left_delete",
					null,
					"AQAAAG4EAAAAAAAAbgQAAAAAAAAYAAAACiAgd3MtPm9wYXF1ZSA9IG9wYXF1ZTsK",
					"AQAAAAAAAAABAAAAbgQAAAAAAACGBAAAAAAAAAAAAAAAAAAA"
				],
				[
					1017,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAD8CAAAAAAAAQAIAAAAAAAAAAAAAQAIAAAAAAABCAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwIAAAAAAAA/AgAAAAAAAAAAAAAAAPC/"
				],
				[
					1018,
					1,
					"paste",
					null,
					"AQAAAEICAAAAAAAAZQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1019,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGUCAAAAAAAAZgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQIAAAAAAABlAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1027,
					1,
					"insert",
					{
						"characters": "if(("
					},
					"BQAAALEDAAAAAAAAsgMAAAAAAAAAAAAAsgMAAAAAAACyAwAAAAAAAB0AAABzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqILIDAAAAAAAAswMAAAAAAAAAAAAAswMAAAAAAAC0AwAAAAAAAAAAAAC0AwAAAAAAALUDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgMAAAAAAACxAwAAAAAAAAAAAAAAADRA"
				],
				[
					1029,
					1,
					"left_delete",
					null,
					"AQAAANIDAAAAAAAA0gMAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAA0wMAAAAAAADTAwAAAAAAAP///////+9/"
				],
				[
					1030,
					1,
					"insert",
					{
						"characters": "))"
					},
					"AgAAANIDAAAAAAAA0wMAAAAAAAAAAAAA0wMAAAAAAADUAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gMAAAAAAADSAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1031,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANQDAAAAAAAA1QMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AMAAAAAAADUAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1032,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANUDAAAAAAAA1wMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QMAAAAAAADVAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1033,
					1,
					"right_delete",
					null,
					"AQAAANYDAAAAAAAA1gMAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAA1gMAAAAAAADWAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1035,
					1,
					"left_delete",
					null,
					"AQAAANYDAAAAAAAA1gMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA1wMAAAAAAADXAwAAAAAAAAAAAAAAYHhA"
				],
				[
					1038,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAH4EAAAAAAAAfwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgQAAAAAAAB+BAAAAAAAAAAAAAAAYHhA"
				],
				[
					1039,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAH8EAAAAAAAAgAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwQAAAAAAAB/BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1043,
					1,
					"indent",
					null,
					"BgAAANcDAAAAAAAA2QMAAAAAAAAAAAAAFQQAAAAAAAAXBAAAAAAAAAAAAAAqBAAAAAAAACwEAAAAAAAAAAAAAEIEAAAAAAAARAQAAAAAAAAAAAAAZQQAAAAAAABnBAAAAAAAAAAAAACIBAAAAAAAAIoEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAQAAAAAAADXAwAAAAAAAAAAAAAAAAAA"
				],
				[
					1241,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAJEFAAAAAAAAkwUAAAAAAAAAAAAAoQQAAAAAAACjBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQQAAAAAAACRBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1252,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAADAKAAAAAAAAMQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAoAAAAAAAAwCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1274,
					1,
					"cut",
					null,
					"AQAAAPYNAAAAAAAA9g0AAAAAAAAjAAAAICBNaW5uZXRCdWZmZXIgYnVmZmVyID0gQlVGRkVSKDApOwo",
					"AQAAAAAAAAABAAAA9g0AAAAAAAAZDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1275,
					1,
					"paste",
					null,
					"AQAAAPYNAAAAAAAAGQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9g0AAAAAAAD2DQAAAAAAAAAAAAAAAPC/"
				],
				[
					1280,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPYNAAAAAAAA9w0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9g0AAAAAAAD2DQAAAAAAAAAAAAAAAAAA"
				],
				[
					1282,
					1,
					"insert",
					{
						"characters": "struct"
					},
					"BgAAAPYNAAAAAAAA9w0AAAAAAAAAAAAA9w0AAAAAAAD4DQAAAAAAAAAAAAD4DQAAAAAAAPkNAAAAAAAAAAAAAPkNAAAAAAAA+g0AAAAAAAAAAAAA+g0AAAAAAAD7DQAAAAAAAAAAAAD7DQAAAAAAAPwNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9g0AAAAAAAD2DQAAAAAAAAAAAAAAAAAA"
				],
				[
					1283,
					1,
					"insert",
					{
						"characters": " wsi_op"
					},
					"BwAAAPwNAAAAAAAA/Q0AAAAAAAAAAAAA/Q0AAAAAAAD+DQAAAAAAAAAAAAD+DQAAAAAAAP8NAAAAAAAAAAAAAP8NAAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAABDgAAAAAAAAAAAAABDgAAAAAAAAIOAAAAAAAAAAAAAAIOAAAAAAAAAw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/A0AAAAAAAD8DQAAAAAAAAAAAAAAAPC/"
				],
				[
					1284,
					1,
					"left_delete",
					null,
					"AQAAAAIOAAAAAAAAAg4AAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAAw4AAAAAAAADDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1289,
					1,
					"paste",
					null,
					"AgAAAP0NAAAAAAAAEQ4AAAAAAAAAAAAAEQ4AAAAAAAARDgAAAAAAAAUAAAB3c2lfbw",
					"AQAAAAAAAAABAAAA/Q0AAAAAAAACDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1290,
					1,
					"insert",
					{
						"characters": "*opaque;"
					},
					"CAAAABEOAAAAAAAAEg4AAAAAAAAAAAAAEg4AAAAAAAATDgAAAAAAAAAAAAATDgAAAAAAABQOAAAAAAAAAAAAABQOAAAAAAAAFQ4AAAAAAAAAAAAAFQ4AAAAAAAAWDgAAAAAAAAAAAAAWDgAAAAAAABcOAAAAAAAAAAAAABcOAAAAAAAAGA4AAAAAAAAAAAAAGA4AAAAAAAAZDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQ4AAAAAAAARDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1316,
					1,
					"paste",
					null,
					"AQAAAHwPAAAAAAAAhg8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfA8AAAAAAAB8DwAAAAAAAAAAAAAAAPC/"
				],
				[
					1317,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAIYPAAAAAAAAhw8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhg8AAAAAAACGDwAAAAAAAAAAAAAAAPC/"
				],
				[
					1319,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAIkPAAAAAAAAig8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQ8AAAAAAACJDwAAAAAAAAAAAAAAAPC/"
				],
				[
					1322,
					1,
					"left_delete",
					null,
					"AQAAAIoPAAAAAAAAig8AAAAAAAAOAAAALT5vcGFxdWUtPnNlc3M",
					"AQAAAAAAAAABAAAAig8AAAAAAACYDwAAAAAAAAAAAAAAAPC/"
				],
				[
					1359,
					1,
					"insert",
					{
						"characters": "\nstruct"
					},
					"CAAAAE8eAAAAAAAAUB4AAAAAAAAAAAAAUB4AAAAAAABUHgAAAAAAAAAAAABUHgAAAAAAAFUeAAAAAAAAAAAAAFUeAAAAAAAAVh4AAAAAAAAAAAAAVh4AAAAAAABXHgAAAAAAAAAAAABXHgAAAAAAAFgeAAAAAAAAAAAAAFgeAAAAAAAAWR4AAAAAAAAAAAAAWR4AAAAAAABaHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATx4AAAAAAABPHgAAAAAAAAAAAAAAAPC/"
				],
				[
					1360,
					1,
					"insert",
					{
						"characters": " wsi"
					},
					"BAAAAFoeAAAAAAAAWx4AAAAAAAAAAAAAWx4AAAAAAABcHgAAAAAAAAAAAABcHgAAAAAAAF0eAAAAAAAAAAAAAF0eAAAAAAAAXh4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWh4AAAAAAABaHgAAAAAAAAAAAAAAAPC/"
				],
				[
					1361,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAF4eAAAAAAAAXx4AAAAAAAAAAAAAXx4AAAAAAABjHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXh4AAAAAAABeHgAAAAAAAAAAAAAAAPC/"
				],
				[
					1366,
					1,
					"paste",
					null,
					"AgAAAFseAAAAAAAAbx4AAAAAAAAAAAAAbx4AAAAAAABvHgAAAAAAAAMAAAB3c2k",
					"AQAAAAAAAAABAAAAWx4AAAAAAABeHgAAAAAAAAAAAAAAAPC/"
				],
				[
					1367,
					1,
					"insert",
					{
						"characters": "*opaque"
					},
					"CAAAAG8eAAAAAAAAcB4AAAAAAAAAAAAAcR4AAAAAAABxHgAAAAAAAAQAAAAgICAgcB4AAAAAAABxHgAAAAAAAAAAAABxHgAAAAAAAHIeAAAAAAAAAAAAAHIeAAAAAAAAcx4AAAAAAAAAAAAAcx4AAAAAAAB0HgAAAAAAAAAAAAB0HgAAAAAAAHUeAAAAAAAAAAAAAHUeAAAAAAAAdh4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbx4AAAAAAABvHgAAAAAAAAAAAAAAAPC/"
				],
				[
					1368,
					1,
					"insert",
					{
						"characters": "=lws"
					},
					"BAAAAHYeAAAAAAAAdx4AAAAAAAAAAAAAdx4AAAAAAAB4HgAAAAAAAAAAAAB4HgAAAAAAAHkeAAAAAAAAAAAAAHkeAAAAAAAAeh4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdh4AAAAAAAB2HgAAAAAAAAAAAAAAAPC/"
				],
				[
					1369,
					3,
					"left_delete",
					null,
					"AwAAAHkeAAAAAAAAeR4AAAAAAAABAAAAc3geAAAAAAAAeB4AAAAAAAABAAAAd3ceAAAAAAAAdx4AAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAeh4AAAAAAAB6HgAAAAAAAAAAAAAAAPC/"
				],
				[
					1370,
					1,
					"left_delete",
					null,
					"AQAAAHYeAAAAAAAAdh4AAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAdx4AAAAAAAB3HgAAAAAAAAAAAAAAAPC/"
				],
				[
					1371,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHYeAAAAAAAAdx4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdh4AAAAAAAB2HgAAAAAAAAAAAAAAAPC/"
				],
				[
					1390,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAJUfAAAAAAAAlh8AAAAAAAAAAAAAlh8AAAAAAACaHwAAAAAAAAAAAACaHwAAAAAAAJsfAAAAAAAAAAAAAJsfAAAAAAAAnx8AAAAAAAAAAAAAlh8AAAAAAACWHwAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAAlR8AAAAAAACVHwAAAAAAAAAAAAAAAPC/"
				],
				[
					1391,
					1,
					"insert",
					{
						"characters": "opau"
					},
					"BAAAAJsfAAAAAAAAnB8AAAAAAAAAAAAAnB8AAAAAAACdHwAAAAAAAAAAAACdHwAAAAAAAJ4fAAAAAAAAAAAAAJ4fAAAAAAAAnx8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmx8AAAAAAACbHwAAAAAAAAAAAAAAAPC/"
				],
				[
					1392,
					1,
					"left_delete",
					null,
					"AQAAAJ4fAAAAAAAAnh8AAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAnx8AAAAAAACfHwAAAAAAAAAAAAAAAPC/"
				],
				[
					1393,
					1,
					"insert",
					{
						"characters": "que="
					},
					"BAAAAJ4fAAAAAAAAnx8AAAAAAAAAAAAAnx8AAAAAAACgHwAAAAAAAAAAAACgHwAAAAAAAKEfAAAAAAAAAAAAAKEfAAAAAAAAoh8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnh8AAAAAAACeHwAAAAAAAAAAAAAAAPC/"
				],
				[
					1394,
					1,
					"paste",
					null,
					"AQAAAKIfAAAAAAAAqx8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoh8AAAAAAACiHwAAAAAAAAAAAAAAAPC/"
				],
				[
					1395,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKsfAAAAAAAArR8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqx8AAAAAAACrHwAAAAAAAAAAAAAAAPC/"
				],
				[
					1396,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AgAAAKwfAAAAAAAArR8AAAAAAAAAAAAArR8AAAAAAACuHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArB8AAAAAAACsHwAAAAAAAAAAAAAAAPC/"
				],
				[
					1398,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAK8fAAAAAAAAsB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArx8AAAAAAACvHwAAAAAAAAAAAAAAAPC/"
				],
				[
					1401,
					1,
					"insert",
					{
						"characters": "\nassret"
					},
					"CAAAALAfAAAAAAAAsR8AAAAAAAAAAAAAsR8AAAAAAAC1HwAAAAAAAAAAAAC1HwAAAAAAALYfAAAAAAAAAAAAALYfAAAAAAAAtx8AAAAAAAAAAAAAtx8AAAAAAAC4HwAAAAAAAAAAAAC4HwAAAAAAALkfAAAAAAAAAAAAALkfAAAAAAAAuh8AAAAAAAAAAAAAuh8AAAAAAAC7HwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsB8AAAAAAACwHwAAAAAAAAAAAAAAAPC/"
				],
				[
					1402,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALsfAAAAAAAAvR8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAux8AAAAAAAC7HwAAAAAAAAAAAAAAAPC/"
				],
				[
					1403,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAALsfAAAAAAAAux8AAAAAAAABAAAAKLsfAAAAAAAAux8AAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAvB8AAAAAAAC8HwAAAAAAAAAAAAAAAPC/"
				],
				[
					1404,
					3,
					"left_delete",
					null,
					"AwAAALofAAAAAAAAuh8AAAAAAAABAAAAdLkfAAAAAAAAuR8AAAAAAAABAAAAZbgfAAAAAAAAuB8AAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAux8AAAAAAAC7HwAAAAAAAAAAAAAAAPC/"
				],
				[
					1405,
					1,
					"insert",
					{
						"characters": "ert"
					},
					"AwAAALgfAAAAAAAAuR8AAAAAAAAAAAAAuR8AAAAAAAC6HwAAAAAAAAAAAAC6HwAAAAAAALsfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuB8AAAAAAAC4HwAAAAAAAAAAAAAAAPC/"
				],
				[
					1406,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALsfAAAAAAAAvR8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAux8AAAAAAAC7HwAAAAAAAAAAAAAAAPC/"
				],
				[
					1407,
					1,
					"insert",
					{
						"characters": "opaque"
					},
					"BgAAALwfAAAAAAAAvR8AAAAAAAAAAAAAvR8AAAAAAAC+HwAAAAAAAAAAAAC+HwAAAAAAAL8fAAAAAAAAAAAAAL8fAAAAAAAAwB8AAAAAAAAAAAAAwB8AAAAAAADBHwAAAAAAAAAAAADBHwAAAAAAAMIfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvB8AAAAAAAC8HwAAAAAAAAAAAAAAAPC/"
				],
				[
					1409,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMMfAAAAAAAAxB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwx8AAAAAAADDHwAAAAAAAAAAAAAAAPC/"
				],
				[
					1415,
					1,
					"",
					null,
					"AQAAACYgAAAAAAAALCAAAAAAAAAKAAAAd3MtPm9wYXF1ZQ",
					"AQAAAAAAAAABAAAAJiAAAAAAAAAwIAAAAAAAAAAAAAAAAPC/"
				],
				[
					1416,
					1,
					"",
					null,
					"AQAAAAEhAAAAAAAAByEAAAAAAAAKAAAAd3MtPm9wYXF1ZQ",
					"AQAAAAAAAAABAAAAASEAAAAAAAALIQAAAAAAAAAAAAAAAPC/"
				],
				[
					1427,
					1,
					"paste",
					null,
					"AQAAAJEoAAAAAAAAmigAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkSgAAAAAAACRKAAAAAAAAAAAAAAAAPC/"
				],
				[
					1428,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAJooAAAAAAAAmygAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmigAAAAAAACaKAAAAAAAAAAAAAAAAPC/"
				],
				[
					1431,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AgAAAJ0oAAAAAAAAnigAAAAAAAAAAAAAnigAAAAAAACeKAAAAAAAAAgAAAAtPm9wYXF1ZQ",
					"AQAAAAAAAAABAAAAnSgAAAAAAAClKAAAAAAAAAAAAAAAAPC/"
				],
				[
					1435,
					1,
					"left_delete",
					null,
					"AQAAAFwoAAAAAAAAXCgAAAAAAAAVAAAAICAgICAgaWYod3MtPm9wYXF1ZSkK",
					"AQAAAAAAAAABAAAAXCgAAAAAAABxKAAAAAAAAAAAAAAAAAAA"
				],
				[
					1443,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABWRwAAI2luY2x1ZGUgIm1pbm5ldC1idWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXItaHR0cC5oIgojaW5jbHVkZSA8c3RyaW5ncy5oPgoKaW50NjRfdCB3c19zZXJpYWwgPSAwOwoKVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3dzX3Byb3RvLCBtaW5uZXRfd3NfY3RvcjsKVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CgplbnVtIHsgV0VCU09DS0VUX0ZELCBXRUJTT0NLRVRfQUREUkVTUywgV0VCU09DS0VUX0ZBTUlMWSwgV0VCU09DS0VUX1BPUlQsIFdFQlNPQ0tFVF9QRUVSLCBXRUJTT0NLRVRfU1NMLCBXRUJTT0NLRVRfQklOQVJZLCBXRUJTT0NLRVRfUkVBRFlTVEFURSB9OwplbnVtIHsgUkVTUE9OU0VfQk9EWSwgUkVTUE9OU0VfSEVBREVSLCBSRVNQT05TRV9SRURJUkVDVCB9OwoKc3RhdGljIEpTVmFsdWUKbWlubmV0X3dzX25ldyhKU0NvbnRleHQqIGN0eCwgc3RydWN0IGx3cyogd3NpKSB7CiAgTWlubmV0V2Vic29ja2V0KiB3czsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKICBKU1ZhbHVlIHdzX29iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jbGFzc19pZCk7CgogIGlmKEpTX0lzRXhjZXB0aW9uKHdzX29iaikpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBpZighKHdzID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihNaW5uZXRXZWJzb2NrZXQpKSkpIHsKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHdzX29iaik7CiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwogIH0KCiAgd3MtPmx3c2kgPSB3c2k7CiAgd3MtPnJlZl9jb3VudCA9IDE7CgogIEpTX1NldE9wYXF1ZSh3c19vYmosIHdzKTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19vcGFxdWUod3NpLCBjdHgpKSkgewogICAgb3BhcXVlLT5vYmogPSBKU19WQUxVRV9HRVRfT0JKKEpTX0R1cFZhbHVlKGN0eCwgd3Nfb2JqKSk7CiAgICBvcGFxdWUtPndzID0gd3M7CiAgICBvcGFxdWUtPnN0YXR1cyA9IDA7CiAgICBvcGFxdWUtPmhhbmRsZXJzWzBdID0gSlNfTlVMTDsKICAgIG9wYXF1ZS0+aGFuZGxlcnNbMV0gPSBKU19OVUxMOwogIH0KCiAgcmV0dXJuIHdzX29iajsKfQoKLypNaW5uZXRXZWJzb2NrZXQqCndzX2Zyb21fd3NpKHN0cnVjdCBsd3MqIHdzaSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZS0+d3MgPyBvcGFxdWUtPndzIDogbWlubmV0X3dzX2RhdGEoSlNfTUtQVFIoSlNfVEFHX09CSkVDVCwgb3BhcXVlLT5vYmopKTsKCiAgcmV0dXJuIDA7Cn0qLwoKTWlubmV0V2Vic29ja2V0Kgp3c19mcm9tX3dzaTIoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCkgewogIEpTVmFsdWUgd3Nfb2JqID0gbWlubmV0X3dzX29iamVjdChjdHgsIHdzaSk7CiAgcmV0dXJuIG1pbm5ldF93c19kYXRhKHdzX29iaik7Cn0KCkpTVmFsdWUKbWlubmV0X3dzX29iamVjdChKU0NvbnRleHQqIGN0eCwgc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CgogIGlmKChvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSkpIHsKICAgIEpTVmFsdWUgd3Nfb2JqOwogICAgaWYob3BhcXVlLT5vYmogJiYgb3BhcXVlLT53cykgewogICAgICB3c19vYmogPSBKU19EdXBWYWx1ZShjdHgsIEpTX01LUFRSKEpTX1RBR19PQkpFQ1QsIG9wYXF1ZS0+b2JqKSk7CiAgICAgIC8qICAgICAgaWYoIShvcGFxdWUtPndzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgd3Nfb2JqKSkpCiAgICAgICAgICAgICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsqLwogICAgICBvcGFxdWUtPndzLT5yZWZfY291bnQrKzsKICAgIH0gZWxzZSB7CiAgICAgIHdzX29iaiA9IG1pbm5ldF93c193cmFwKGN0eCwgd3NpKTsKICAgICAgb3BhcXVlLT5vYmogPSBKU19WQUxVRV9HRVRfT0JKKHdzX29iaik7CiAgICAgIG9wYXF1ZS0+d3MgPSBtaW5uZXRfd3NfZGF0YSh3c19vYmopOwogICAgfQogICAgcmV0dXJuIHdzX29iajsKICB9CgogIHJldHVybiBtaW5uZXRfd3NfbmV3KGN0eCwgd3NpKTsKfQoKSlNWYWx1ZQptaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqIGN0eCwgc3RydWN0IGx3cyogd3NpKSB7CiAgTWlubmV0V2Vic29ja2V0KiB3czsKICAgIHN0cnVjdCAgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSA7CiAgICBKU1ZhbHVlIHJldCA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jbGFzc19pZCk7CgogIGlmKEpTX0lzRXhjZXB0aW9uKHJldCkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICB3cyA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2YoTWlubmV0V2Vic29ja2V0KSk7CgogIHdzLT5sd3NpID0gd3NpOwogIHdzLT5yZWZfY291bnQgPSAxOwoKICBKU19TZXRPcGFxdWUocmV0LCB3cyk7CgogaWYoKG9wYXF1ZSA9IGx3c19vcGFxdWUod3NpLCBjdHgpKSkgewogIG9wYXF1ZS0+b2JqID0gSlNfVkFMVUVfR0VUX09CSihyZXQpOwogIG9wYXF1ZS0+d3MgPSB3czsKICBvcGFxdWUtPmhhbmRsZXJzWzBdID0gSlNfTlVMTDsKICBvcGFxdWUtPmhhbmRsZXJzWzFdID0gSlNfTlVMTDsKfQoKICByZXR1cm4gcmV0Owp9Cgp2b2lkCm1pbm5ldF93c19zc2xjZXJ0KEpTQ29udGV4dCogY3R4LCBzdHJ1Y3QgbHdzX2NvbnRleHRfY3JlYXRpb25faW5mbyogaW5mbywgSlNWYWx1ZUNvbnN0IG9wdGlvbnMpIHsKICBKU1ZhbHVlIG9wdF9zc2xfY2VydCA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb3B0aW9ucywgInNzbENlcnQiKTsKICBKU1ZhbHVlIG9wdF9zc2xfcHJpdmF0ZV9rZXkgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9wdGlvbnMsICJzc2xQcml2YXRlS2V5Iik7CiAgSlNWYWx1ZSBvcHRfc3NsX2NhID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcHRpb25zLCAic3NsQ0EiKTsKCiAgaWYoSlNfSXNTdHJpbmcob3B0X3NzbF9jZXJ0KSkKICAgIGluZm8tPnNzbF9jZXJ0X2ZpbGVwYXRoID0gSlNfVG9DU3RyaW5nKGN0eCwgb3B0X3NzbF9jZXJ0KTsKICBpZihKU19Jc1N0cmluZyhvcHRfc3NsX3ByaXZhdGVfa2V5KSkKICAgIGluZm8tPnNzbF9wcml2YXRlX2tleV9maWxlcGF0aCA9IEpTX1RvQ1N0cmluZyhjdHgsIG9wdF9zc2xfcHJpdmF0ZV9rZXkpOwogIGlmKEpTX0lzU3RyaW5nKG9wdF9zc2xfY2EpKQogICAgaW5mby0+c3NsX2NhX2ZpbGVwYXRoID0gSlNfVG9DU3RyaW5nKGN0eCwgb3B0X3NzbF9jYSk7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF93c19zZW5kKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QqIGFyZ3YpIHsKICBNaW5uZXRXZWJzb2NrZXQqIHdzOwogIGludDY0X3QgbSwgbGVuOwogIE1pbm5ldFNlc3Npb24qIHNlc3M7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSpvcGFxdWU7CiAgTWlubmV0QnVmZmVyIGJ1ZmZlciA9IEJVRkZFUigwKTsKCiAgaWYoISh3cyA9IG1pbm5ldF93c19kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBpZighKG0gPSBidWZmZXJfZnJvbXZhbHVlKCZidWZmZXIsIGFyZ3ZbMF0sIGN0eCkpKQogICAgcmV0dXJuIEpTX1Rocm93VHlwZUVycm9yKGN0eCwgImFyZ3VtZW50IDEgZXhwZWN0aW5nIFN0cmluZy9BcnJheUJ1ZmZlciIpOwoKICBpZihtIDwgMCkgewogICAgcmV0ID0gSlNfVGhyb3dPdXRPZk1lbW9yeShjdHgpOwogICAgZ290byBmYWlsOwogIH0KCiAgbGVuID0gYnVmZmVyX0JZVEVTKCZidWZmZXIpOwoKICBpZigoc2VzcyA9IHdzX3Nlc3Npb24od3MpKSkgewoKICAgIGJ1ZmZlcl9hcHBlbmQoJnNlc3MtPnNlbmRfYnVmLCBidWZmZXIucmVhZCwgbGVuLCBjdHgpOwogICAgbHdzX2NhbGxiYWNrX29uX3dyaXRhYmxlKHdzLT5sd3NpKTsKCiAgfSBlbHNlIHsKCiAgICBtID0gbHdzX3dyaXRlKHdzLT5sd3NpLCBidWZmZXIucmVhZCwgYnVmZmVyX0JZVEVTKCZidWZmZXIpLCBKU19Jc1N0cmluZyhhcmd2WzBdKSA/IExXU19XUklURV9URVhUIDogTFdTX1dSSVRFX0JJTkFSWSk7CgogICAgaWYobSA8IGxlbikKICAgICAgcmV0ID0gSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgImx3cyB3cml0ZSBmYWlsZWQ6ICUiIFBSSWk2NCAiLyUiIFBSSWk2NCwgbSwgbGVuKTsKICAgIGVsc2UKICAgICAgcmV0ID0gSlNfTmV3SW50NjQoY3R4LCBtKTsKICB9CgpmYWlsOgogIGJ1ZmZlcl9mcmVlKCZidWZmZXIsIEpTX0dldFJ1bnRpbWUoY3R4KSk7CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF93c19yZXNwb25kKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QqIGFyZ3YsIGludCBtYWdpYykgewogIE1pbm5ldFdlYnNvY2tldCogd3M7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEod3MgPSBtaW5uZXRfd3NfZGF0YTIoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgTWlubmV0QnVmZmVyIGhlYWRlciA9IHswLCAwLCAwLCAwLCAwfTsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIFJFU1BPTlNFX0JPRFk6IHsKICAgICAgY29uc3QgY2hhciogbXNnID0gMDsKICAgICAgdWludDMyX3Qgc3RhdHVzID0gMDsKCiAgICAgIEpTX1RvVWludDMyKGN0eCwgJnN0YXR1cywgYXJndlswXSk7CiAgICAgIGlmKGFyZ2MgPj0gMikKICAgICAgICBtc2cgPSBKU19Ub0NTdHJpbmcoY3R4LCBhcmd2WzFdKTsKICAgICAgbHdzX3JldHVybl9odHRwX3N0YXR1cyh3cy0+bHdzaSwgc3RhdHVzLCBtc2cpOwogICAgICBpZihtc2cpCiAgICAgICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBtc2cpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkVTUE9OU0VfUkVESVJFQ1Q6IHsKICAgICAgY29uc3QgY2hhciogbXNnID0gMDsKICAgICAgc2l6ZV90IGxlbiA9IDA7CiAgICAgIHVpbnQzMl90IHN0YXR1cyA9IDA7CiAgICAgIEpTX1RvVWludDMyKGN0eCwgJnN0YXR1cywgYXJndlswXSk7CgogICAgICBpZihhcmdjID49IDIpCiAgICAgICAgbXNnID0gSlNfVG9DU3RyaW5nTGVuKGN0eCwgJmxlbiwgYXJndlsxXSk7CiAgICAgIGlmKGx3c19odHRwX3JlZGlyZWN0KHdzLT5sd3NpLCBzdGF0dXMsICh1bnNpZ25lZCBjaGFyKiltc2csIGxlbiwgJmhlYWRlci53cml0ZSwgaGVhZGVyLmVuZCkgPCAwKQogICAgICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgLTEpOwogICAgICBpZihtc2cpCiAgICAgICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBtc2cpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkVTUE9OU0VfSEVBREVSOiB7CiAgICAgIHNpemVfdCBuYW1lbGVuOwogICAgICBjb25zdCBjaGFyKiBuYW1lc3RyID0gSlNfVG9DU3RyaW5nTGVuKGN0eCwgJm5hbWVsZW4sIGFyZ3ZbMF0pOwogICAgICBjaGFyKiBuYW1lID0ganNfbWFsbG9jKGN0eCwgbmFtZWxlbiArIDIpOwogICAgICBzaXplX3QgbGVuOwogICAgICBjb25zdCBjaGFyKiB2YWx1ZSA9IEpTX1RvQ1N0cmluZ0xlbihjdHgsICZsZW4sIGFyZ3ZbMV0pOwogICAgICBtZW1jcHkobmFtZSwgbmFtZXN0ciwgbmFtZWxlbik7CiAgICAgIG5hbWVbbmFtZWxlbl0gPSAnOic7CiAgICAgIG5hbWVbbmFtZWxlbiArIDFdID0gJ1wwJzsKCiAgICAgIGlmKGx3c19hZGRfaHR0cF9oZWFkZXJfYnlfbmFtZSh3cy0+bHdzaSwgKGNvbnN0IHVpbnQ4X3QqKW5hbWUsIChjb25zdCB1aW50OF90Kil2YWx1ZSwgbGVuLCAmaGVhZGVyLndyaXRlLCBoZWFkZXIuZW5kKSA8IDApCiAgICAgICAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCAtMSk7CgogICAgICBqc19mcmVlKGN0eCwgbmFtZSk7CiAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgbmFtZXN0cik7CiAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgdmFsdWUpOwogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF93c19waW5nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QqIGFyZ3YpIHsKICBNaW5uZXRXZWJzb2NrZXQqIHdzOwogIHVpbnQ4X3QqIGRhdGE7CiAgc2l6ZV90IGxlbjsKCiAgaWYoISh3cyA9IG1pbm5ldF93c19kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBkYXRhID0gSlNfR2V0QXJyYXlCdWZmZXIoY3R4LCAmbGVuLCBhcmd2WzBdKTsKICBpZihkYXRhKSB7CiAgICB1aW50OF90IGJ1ZmZlcltsZW4gKyBMV1NfUFJFXTsKICAgIG1lbWNweSgmYnVmZmVyW0xXU19QUkVdLCBkYXRhLCBsZW4pOwoKICAgIGludCBtID0gbHdzX3dyaXRlKHdzLT5sd3NpLCAmYnVmZmVyW0xXU19QUkVdLCBsZW4sIExXU19XUklURV9QSU5HKTsKICAgIGlmKChzaXplX3QpbSA8IGxlbikgewogICAgICAvLyBTZW5kaW5nIHBpbmcgZmFpbGVkCiAgICAgIHJldHVybiBKU19FWENFUFRJT047CiAgICB9CiAgfSBlbHNlIHsKICAgIHVpbnQ4X3QgYnVmZmVyW0xXU19QUkVdOwogICAgbHdzX3dyaXRlKHdzLT5sd3NpLCAmYnVmZmVyW0xXU19QUkVdLCAwLCBMV1NfV1JJVEVfUElORyk7CiAgfQogIHJldHVybiBKU19VTkRFRklORUQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF93c19wb25nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QqIGFyZ3YpIHsKICBNaW5uZXRXZWJzb2NrZXQqIHdzOwogIHVpbnQ4X3QqIGRhdGE7CiAgc2l6ZV90IGxlbjsKCiAgaWYoISh3cyA9IG1pbm5ldF93c19kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBkYXRhID0gSlNfR2V0QXJyYXlCdWZmZXIoY3R4LCAmbGVuLCBhcmd2WzBdKTsKICBpZihkYXRhKSB7CiAgICB1aW50OF90IGJ1ZmZlcltsZW4gKyBMV1NfUFJFXTsKICAgIG1lbWNweSgmYnVmZmVyW0xXU19QUkVdLCBkYXRhLCBsZW4pOwoKICAgIGludCBtID0gbHdzX3dyaXRlKHdzLT5sd3NpLCAmYnVmZmVyW0xXU19QUkVdLCBsZW4sIExXU19XUklURV9QT05HKTsKICAgIGlmKChzaXplX3QpbSA8IGxlbikgewogICAgICAvLyBTZW5kaW5nIHBvbmcgZmFpbGVkCiAgICAgIHJldHVybiBKU19FWENFUFRJT047CiAgICB9CiAgfSBlbHNlIHsKICAgIHVpbnQ4X3QgYnVmZmVyW0xXU19QUkVdOwogICAgbHdzX3dyaXRlKHdzLT5sd3NpLCAmYnVmZmVyW0xXU19QUkVdLCAwLCBMV1NfV1JJVEVfUE9ORyk7CiAgfQogIHJldHVybiBKU19VTkRFRklORUQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF93c19jbG9zZShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2KSB7CiAgTWlubmV0V2Vic29ja2V0KiB3czsKICBjb25zdCBjaGFyKiByZWFzb24gPSAwOwogIHNpemVfdCBybGVuID0gMDsKCiAgaWYoISh3cyA9IG1pbm5ldF93c19kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBpZih3cy0+bHdzaSkgewogICAgaW50IG9wdGluZCA9IDA7CiAgICBpbnQzMl90IHN0YXR1cyA9IExXU19DTE9TRV9TVEFUVVNfTk9STUFMOwogICAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKm9wYXF1ZTsKCgogICAgd2hpbGUob3B0aW5kIDwgYXJnYykgewogICAgICBpZihKU19Jc051bWJlcihhcmd2W29wdGluZF0pIHx8IG9wdGluZCArIDEgPCBhcmdjKSB7CiAgICAgICAgSlNfVG9JbnQzMihjdHgsICZzdGF0dXMsIGFyZ3Zbb3B0aW5kXSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmVhc29uID0gSlNfVG9DU3RyaW5nTGVuKGN0eCwgJnJsZW4sIGFyZ3Zbb3B0aW5kXSk7CiAgICAgICAgaWYocmxlbiA+IDEyNCkKICAgICAgICAgIHJsZW4gPSAxMjQ7CiAgICAgIH0KICAgICAgb3B0aW5kKys7CiAgICB9CgogICAgb3BhcXVlPXdzX29wYXF1ZSh3cyk7CiAgICBhc3NlcnQob3BhcXVlKTsKCiAgICAvLyBwcmludGYoIm1pbm5ldF93c19jbG9zZSBmZD0lZCByZWFzb249JXNcbiIsIGx3c19nZXRfc29ja2V0X2ZkKHdzLT5sd3NpKSwgcmVhc29uKTsKICAgIGlmKG9wYXF1ZS0+c3RhdHVzIDwgQ0xPU0lORykgewogICAgICBzdHJ1Y3QgbHdzX3Byb3RvY29scyogcHJvdG9jb2wgPSBsd3NfZ2V0X3Byb3RvY29sKHdzLT5sd3NpKTsKCiAgICAgIGlmKCFzdHJuY21wKHByb3RvY29sLT5uYW1lLCAid3MiLCAyKSkKICAgICAgICBsd3NfY2xvc2VfcmVhc29uKHdzLT5sd3NpLCBzdGF0dXMsICh1aW50OF90KilyZWFzb24sIHJsZW4pOwogICAgfQoKICAgIG9wYXF1ZS0+c3RhdHVzID0gQ0xPU0VEOwoKICAgIC8qIGx3c19jbG9zZV9mcmVlX3dzaSh3cy0+bHdzaSwgc3RhdHVzLCAibWlubmV0X3dzX2Nsb3NlIik7CiAgICAgIHdzLT5sd3NpID0gMDsqLwoKICAgIHJldHVybiBKU19UUlVFOwogIH0KCiAgcmV0dXJuIEpTX0ZBTFNFOwp9CgpzdGF0aWMgSlNWYWx1ZQptaW5uZXRfd3NfZ2V0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBtYWdpYykgewogIE1pbm5ldFdlYnNvY2tldCogd3M7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEod3MgPSBtaW5uZXRfd3NfZGF0YSh0aGlzX3ZhbCkpKQogICAgcmV0dXJuIEpTX1VOREVGSU5FRDsKCiAgaWYoIXdzLT5sd3NpKQogICAgcmV0dXJuIEpTX05VTEw7CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBXRUJTT0NLRVRfRkQ6IHsKICAgICAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCBsd3NfZ2V0X3NvY2tldF9mZChsd3NfZ2V0X25ldHdvcmtfd3NpKHdzLT5sd3NpKSkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgV0VCU09DS0VUX0FERFJFU1M6IHsKICAgICAgc3RydWN0IHNvY2thZGRyX2luIGFkZHI7CiAgICAgIHNvY2tsZW5fdCBhZGRybGVuID0gc2l6ZW9mKGFkZHIpOwogICAgICBpbnQgZmQgPSBsd3NfZ2V0X3NvY2tldF9mZChsd3NfZ2V0X25ldHdvcmtfd3NpKHdzLT5sd3NpKSk7CgogICAgICBpZihnZXRwZWVybmFtZShmZCwgKHN0cnVjdCBzb2NrYWRkciopJmFkZHIsICZhZGRybGVuKSAhPSAtMSkgewogICAgICAgIGNoYXIgYWRkcmVzc1sxMDI0XTsKICAgICAgICBsd3NfZ2V0X3BlZXJfc2ltcGxlKHdzLT5sd3NpLCBhZGRyZXNzLCBzaXplb2YoYWRkcmVzcykpOwoKICAgICAgICByZXQgPSBKU19OZXdTdHJpbmcoY3R4LCBhZGRyZXNzKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgV0VCU09DS0VUX0ZBTUlMWToKICAgIGNhc2UgV0VCU09DS0VUX1BPUlQ6IHsKICAgICAgc3RydWN0IHNvY2thZGRyX2luIGFkZHI7CiAgICAgIHNvY2tsZW5fdCBhZGRybGVuID0gc2l6ZW9mKGFkZHIpOwogICAgICBpbnQgZmQgPSBsd3NfZ2V0X3NvY2tldF9mZChsd3NfZ2V0X25ldHdvcmtfd3NpKHdzLT5sd3NpKSk7CgogICAgICBpZihnZXRwZWVybmFtZShmZCwgKHN0cnVjdCBzb2NrYWRkciopJmFkZHIsICZhZGRybGVuKSAhPSAtMSkgewogICAgICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgbWFnaWMgPT0gMiA/IGFkZHIuc2luX2ZhbWlseSA6IG50b2hzKGFkZHIuc2luX3BvcnQpKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgV0VCU09DS0VUX1BFRVI6IHsKICAgICAgc3RydWN0IHNvY2thZGRyX2luIGFkZHI7CiAgICAgIHNvY2tsZW5fdCBhZGRybGVuID0gc2l6ZW9mKGFkZHIpOwogICAgICBpbnQgZmQgPSBsd3NfZ2V0X3NvY2tldF9mZChsd3NfZ2V0X25ldHdvcmtfd3NpKHdzLT5sd3NpKSk7CgogICAgICBpZihnZXRwZWVybmFtZShmZCwgKHN0cnVjdCBzb2NrYWRkciopJmFkZHIsICZhZGRybGVuKSAhPSAtMSkgewogICAgICAgIHJldCA9IEpTX05ld0FycmF5QnVmZmVyQ29weShjdHgsIChjb25zdCB1aW50OF90KikmYWRkciwgYWRkcmxlbik7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFdFQlNPQ0tFVF9TU0w6IHsKICAgICAgcmV0ID0gSlNfTmV3Qm9vbChjdHgsIGx3c19pc19zc2wobHdzX2dldF9uZXR3b3JrX3dzaSh3cy0+bHdzaSkpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFdFQlNPQ0tFVF9CSU5BUlk6IHsKICAgICAgcmV0ID0gSlNfTmV3Qm9vbChjdHgsIHdzLT5iaW5hcnkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgV0VCU09DS0VUX1JFQURZU1RBVEU6IHsKICAgICAgICByZXQgPSBKU19OZXdVaW50MzIoY3R4LCB3c19vcGFxdWUod3MpLT5zdGF0dXMpOwogICAgICBicmVhazsKICAgIH0KICB9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKbWlubmV0X3dzX3NldChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGludCBtYWdpYykgewogIE1pbm5ldFdlYnNvY2tldCogd3M7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEod3MgPSBtaW5uZXRfd3NfZGF0YTIoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgc3dpdGNoKG1hZ2ljKSB7CgogICAgY2FzZSBXRUJTT0NLRVRfQklOQVJZOiB7CiAgICAgIHdzLT5iaW5hcnkgPSBKU19Ub0Jvb2woY3R4LCB2YWx1ZSk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KICByZXR1cm4gcmV0Owp9CgpKU1ZhbHVlCm1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSBwcm90bywgb2JqOwogIE1pbm5ldFdlYnNvY2tldCogd3M7CgogIGlmKCEod3MgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKE1pbm5ldFdlYnNvY2tldCkpKSkKICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgcHJvdG8gPSBKU19EdXBWYWx1ZShjdHgsIG1pbm5ldF93c19wcm90byk7CgogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywgbWlubmV0X3dzX2NsYXNzX2lkKTsKICBKU19GcmVlVmFsdWUoY3R4LCBwcm90byk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKCiAgaWYoYXJnYyA+IDApIHsKICAgIGlmKEpTX0lzTnVtYmVyKGFyZ3ZbMF0pKSB7CiAgICAgIHVpbnQzMl90IGZkOwogICAgICBKU19Ub1VpbnQzMihjdHgsICZmZCwgYXJndlswXSk7CiAgICAgIHdzLT5sd3NpID0gbHdzX2Fkb3B0X3NvY2tldChtaW5uZXRfc2VydmVyLmNvbnRleHQubHdzLCBmZCk7CiAgICB9CiAgfQoKICBKU19TZXRPcGFxdWUob2JqLCB3cyk7CgogIGlmKHdzLT5sd3NpKSB7CiAgICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSA9IGpzX21hbGxvYyhjdHgsIHNpemVvZihzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEpKTsKICAgIG9wYXF1ZS0+b2JqID0gSlNfVkFMVUVfR0VUX09CSihKU19EdXBWYWx1ZShjdHgsIG9iaikpOwogICAgb3BhcXVlLT5oYW5kbGVyc1swXSA9IEpTX05VTEw7CiAgICBvcGFxdWUtPmhhbmRsZXJzWzFdID0gSlNfTlVMTDsKICAgIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSwgb3BhcXVlKTsKICB9CgogIHJldHVybiBvYmo7CgpmYWlsOgogIGpzX2ZyZWUoY3R4LCB3cyk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpzdGF0aWMgdm9pZAptaW5uZXRfd3NfZmluYWxpemVyKEpTUnVudGltZSogcnQsIEpTVmFsdWUgdmFsKSB7CiAgTWlubmV0V2Vic29ja2V0KiB3czsKICBpZigod3MgPSBtaW5uZXRfd3NfZGF0YSh2YWwpKSkgewogICAgaWYoLS13cy0+cmVmX2NvdW50ID09IDApCiAgICAgIGpzX2ZyZWVfcnQocnQsIHdzKTsKICB9Cn0KCkpTQ2xhc3NEZWYgbWlubmV0X3dzX2NsYXNzID0gewogICAgIk1pbm5ldFdlYlNvY2tldCIsCiAgICAuZmluYWxpemVyID0gbWlubmV0X3dzX2ZpbmFsaXplciwKfTsKCmNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF93c19wcm90b19mdW5jc1tdID0gewogICAgSlNfQ0ZVTkNfREVGKCJzZW5kIiwgMSwgbWlubmV0X3dzX3NlbmQpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJyZXNwb25kIiwgMSwgbWlubmV0X3dzX3Jlc3BvbmQsIFJFU1BPTlNFX0JPRFkpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJyZWRpcmVjdCIsIDIsIG1pbm5ldF93c19yZXNwb25kLCBSRVNQT05TRV9SRURJUkVDVCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImhlYWRlciIsIDIsIG1pbm5ldF93c19yZXNwb25kLCBSRVNQT05TRV9IRUFERVIpLAogICAgSlNfQ0ZVTkNfREVGKCJwaW5nIiwgMSwgbWlubmV0X3dzX3BpbmcpLAogICAgSlNfQ0ZVTkNfREVGKCJwb25nIiwgMSwgbWlubmV0X3dzX3BvbmcpLAogICAgSlNfQ0ZVTkNfREVGKCJjbG9zZSIsIDEsIG1pbm5ldF93c19jbG9zZSksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigiZmQiLCBtaW5uZXRfd3NfZ2V0LCAwLCBXRUJTT0NLRVRfRkQsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigiYWRkcmVzcyIsIG1pbm5ldF93c19nZXQsIDAsIFdFQlNPQ0tFVF9BRERSRVNTLCAwKSwKICAgIEpTX0FMSUFTX0RFRigicmVtb3RlQWRkcmVzcyIsICJhZGRyZXNzIiksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigiZmFtaWx5IiwgbWlubmV0X3dzX2dldCwgMCwgV0VCU09DS0VUX0ZBTUlMWSwgMCksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigicG9ydCIsIG1pbm5ldF93c19nZXQsIDAsIFdFQlNPQ0tFVF9QT1JULCAwKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJwZWVyIiwgbWlubmV0X3dzX2dldCwgMCwgV0VCU09DS0VUX1BFRVIsIDApLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoInNzbCIsIG1pbm5ldF93c19nZXQsIDAsIFdFQlNPQ0tFVF9TU0wsIDApLAogICAgSlNfQUxJQVNfREVGKCJ0bHMiLCAic3NsIiksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigiYmluYXJ5IiwgbWlubmV0X3dzX2dldCwgbWlubmV0X3dzX3NldCwgV0VCU09DS0VUX0JJTkFSWSwgMCksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigicmVhZHlTdGF0ZSIsIG1pbm5ldF93c19nZXQsIDAsIFdFQlNPQ0tFVF9SRUFEWVNUQVRFLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfQUxJQVNfREVGKCJyZW1vdGUiLCAicGVlciIpLAogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJNaW5uZXRXZWJTb2NrZXQiLCBKU19QUk9QX0NPTkZJR1VSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQ09OTkVDVElORyIsIDAsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJPUEVOIiwgMSwgSlNfUFJPUF9DT05GSUdVUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkNMT1NJTkciLCAyLCBKU19QUk9QX0NPTkZJR1VSQUJMRSksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQ0xPU0VEIiwgMywgSlNfUFJPUF9DT05GSUdVUkFCTEUpLAp9OwoKY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdID0gewogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkNPTk5FQ1RJTkciLCAwLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIk9QRU4iLCAxLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkNMT1NJTkciLCAyLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkNMT1NFRCIsIDMsIEpTX1BST1BfRU5VTUVSQUJMRSksCn07Cgpjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdID0gewogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkNMT1NFX1NUQVRVU19OT1JNQUwiLCBMV1NfQ0xPU0VfU1RBVFVTX05PUk1BTCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQ0xPU0VfU1RBVFVTX0dPSU5HQVdBWSIsIExXU19DTE9TRV9TVEFUVVNfR09JTkdBV0FZLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJDTE9TRV9TVEFUVVNfUFJPVE9DT0xfRVJSIiwgTFdTX0NMT1NFX1NUQVRVU19QUk9UT0NPTF9FUlIsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkNMT1NFX1NUQVRVU19VTkFDQ0VQVEFCTEVfT1BDT0RFIiwgTFdTX0NMT1NFX1NUQVRVU19VTkFDQ0VQVEFCTEVfT1BDT0RFLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJDTE9TRV9TVEFUVVNfUkVTRVJWRUQiLCBMV1NfQ0xPU0VfU1RBVFVTX1JFU0VSVkVELCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJDTE9TRV9TVEFUVVNfTk9fU1RBVFVTIiwgTFdTX0NMT1NFX1NUQVRVU19OT19TVEFUVVMsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkNMT1NFX1NUQVRVU19BQk5PUk1BTF9DTE9TRSIsIExXU19DTE9TRV9TVEFUVVNfQUJOT1JNQUxfQ0xPU0UsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkNMT1NFX1NUQVRVU19JTlZBTElEX1BBWUxPQUQiLCBMV1NfQ0xPU0VfU1RBVFVTX0lOVkFMSURfUEFZTE9BRCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQ0xPU0VfU1RBVFVTX1BPTElDWV9WSU9MQVRJT04iLCBMV1NfQ0xPU0VfU1RBVFVTX1BPTElDWV9WSU9MQVRJT04sIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkNMT1NFX1NUQVRVU19NRVNTQUdFX1RPT19MQVJHRSIsIExXU19DTE9TRV9TVEFUVVNfTUVTU0FHRV9UT09fTEFSR0UsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkNMT1NFX1NUQVRVU19FWFRFTlNJT05fUkVRVUlSRUQiLCBMV1NfQ0xPU0VfU1RBVFVTX0VYVEVOU0lPTl9SRVFVSVJFRCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQ0xPU0VfU1RBVFVTX1VORVhQRUNURURfQ09ORElUSU9OIiwgTFdTX0NMT1NFX1NUQVRVU19VTkVYUEVDVEVEX0NPTkRJVElPTiwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiQ0xPU0VfU1RBVFVTX1RMU19GQUlMVVJFIiwgTFdTX0NMT1NFX1NUQVRVU19UTFNfRkFJTFVSRSwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfQ09OVElOVUUiLCBIVFRQX1NUQVRVU19DT05USU5VRSwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfT0siLCBIVFRQX1NUQVRVU19PSywgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfTk9fQ09OVEVOVCIsIEhUVFBfU1RBVFVTX05PX0NPTlRFTlQsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX1BBUlRJQUxfQ09OVEVOVCIsIEhUVFBfU1RBVFVTX1BBUlRJQUxfQ09OVEVOVCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfTU9WRURfUEVSTUFORU5UTFkiLCBIVFRQX1NUQVRVU19NT1ZFRF9QRVJNQU5FTlRMWSwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfRk9VTkQiLCBIVFRQX1NUQVRVU19GT1VORCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfU0VFX09USEVSIiwgSFRUUF9TVEFUVVNfU0VFX09USEVSLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19OT1RfTU9ESUZJRUQiLCBIVFRQX1NUQVRVU19OT1RfTU9ESUZJRUQsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX0JBRF9SRVFVRVNUIiwgSFRUUF9TVEFUVVNfQkFEX1JFUVVFU1QsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX1VOQVVUSE9SSVpFRCIsIEhUVFBfU1RBVFVTX1VOQVVUSE9SSVpFRCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfUEFZTUVOVF9SRVFVSVJFRCIsIEhUVFBfU1RBVFVTX1BBWU1FTlRfUkVRVUlSRUQsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX0ZPUkJJRERFTiIsIEhUVFBfU1RBVFVTX0ZPUkJJRERFTiwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfTk9UX0ZPVU5EIiwgSFRUUF9TVEFUVVNfTk9UX0ZPVU5ELCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19NRVRIT0RfTk9UX0FMTE9XRUQiLCBIVFRQX1NUQVRVU19NRVRIT0RfTk9UX0FMTE9XRUQsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX05PVF9BQ0NFUFRBQkxFIiwgSFRUUF9TVEFUVVNfTk9UX0FDQ0VQVEFCTEUsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX1BST1hZX0FVVEhfUkVRVUlSRUQiLCBIVFRQX1NUQVRVU19QUk9YWV9BVVRIX1JFUVVJUkVELCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19SRVFVRVNUX1RJTUVPVVQiLCBIVFRQX1NUQVRVU19SRVFVRVNUX1RJTUVPVVQsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX0NPTkZMSUNUIiwgSFRUUF9TVEFUVVNfQ09ORkxJQ1QsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX0dPTkUiLCBIVFRQX1NUQVRVU19HT05FLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19MRU5HVEhfUkVRVUlSRUQiLCBIVFRQX1NUQVRVU19MRU5HVEhfUkVRVUlSRUQsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX1BSRUNPTkRJVElPTl9GQUlMRUQiLCBIVFRQX1NUQVRVU19QUkVDT05ESVRJT05fRkFJTEVELCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19SRVFfRU5USVRZX1RPT19MQVJHRSIsIEhUVFBfU1RBVFVTX1JFUV9FTlRJVFlfVE9PX0xBUkdFLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19SRVFfVVJJX1RPT19MT05HIiwgSFRUUF9TVEFUVVNfUkVRX1VSSV9UT09fTE9ORywgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfVU5TVVBQT1JURURfTUVESUFfVFlQRSIsIEhUVFBfU1RBVFVTX1VOU1VQUE9SVEVEX01FRElBX1RZUEUsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX1JFUV9SQU5HRV9OT1RfU0FUSVNGSUFCTEUiLCBIVFRQX1NUQVRVU19SRVFfUkFOR0VfTk9UX1NBVElTRklBQkxFLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19FWFBFQ1RBVElPTl9GQUlMRUQiLCBIVFRQX1NUQVRVU19FWFBFQ1RBVElPTl9GQUlMRUQsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkhUVFBfU1RBVFVTX0lOVEVSTkFMX1NFUlZFUl9FUlJPUiIsIEhUVFBfU1RBVFVTX0lOVEVSTkFMX1NFUlZFUl9FUlJPUiwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfTk9UX0lNUExFTUVOVEVEIiwgSFRUUF9TVEFUVVNfTk9UX0lNUExFTUVOVEVELCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19CQURfR0FURVdBWSIsIEhUVFBfU1RBVFVTX0JBRF9HQVRFV0FZLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19TRVJWSUNFX1VOQVZBSUxBQkxFIiwgSFRUUF9TVEFUVVNfU0VSVklDRV9VTkFWQUlMQUJMRSwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiSFRUUF9TVEFUVVNfR0FURVdBWV9USU1FT1VUIiwgSFRUUF9TVEFUVVNfR0FURVdBWV9USU1FT1VULCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJIVFRQX1NUQVRVU19IVFRQX1ZFUlNJT05fTk9UX1NVUFBPUlRFRCIsIEhUVFBfU1RBVFVTX0hUVFBfVkVSU0lPTl9OT1RfU1VQUE9SVEVELCAwKSwKfTsKCmNvbnN0IHNpemVfdCBtaW5uZXRfd3NfcHJvdG9fZnVuY3Nfc2l6ZSA9IGNvdW50b2YobWlubmV0X3dzX3Byb3RvX2Z1bmNzKTsKY29uc3Qgc2l6ZV90IG1pbm5ldF93c19zdGF0aWNfZnVuY3Nfc2l6ZSA9IGNvdW50b2YobWlubmV0X3dzX3N0YXRpY19mdW5jcyk7CmNvbnN0IHNpemVfdCBtaW5uZXRfd3NfcHJvdG9fZGVmc19zaXplID0gY291bnRvZihtaW5uZXRfd3NfcHJvdG9fZGVmcyk7CgAAAAAAAAAAXkcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGyEAAAAAAAAbIQAAAAAAAAAAAAAAAPC/"
				],
				[
					1451,
					1,
					"cut",
					null,
					"AQAAAEIEAAAAAAAAQgQAAAAAAAAjAAAAICAgIG9wYXF1ZS0+aGFuZGxlcnNbMF0gPSBKU19OVUxMOwo",
					"AQAAAAAAAAABAAAAQgQAAAAAAABlBAAAAAAAAAAAAAAAAAAA"
				],
				[
					1452,
					2,
					"paste",
					null,
					"AgAAAEIEAAAAAAAAZQQAAAAAAAAAAAAAZQQAAAAAAACIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgQAAAAAAABCBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1456,
					1,
					"right_delete",
					null,
					"AQAAAFUEAAAAAAAAVQQAAAAAAAAEAAAAc1swXQ",
					"AQAAAAAAAAABAAAAVQQAAAAAAABZBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1461,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAKYEAAAAAAAAqAQAAAAAAAAAAAAAZQQAAAAAAABnBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQQAAAAAAACmBAAAAAAAAP///////+9/"
				],
				[
					1470,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAANUKAAAAAAAA1woAAAAAAAAAAAAAkAoAAAAAAACSCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAoAAAAAAADVCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1475,
					1,
					"cut",
					null,
					"AQAAAH0KAAAAAAAAfQoAAAAAAAASAAAAICBvcGFxdWUtPndzID0gd3M7",
					"AQAAAAAAAAABAAAAfQoAAAAAAACPCgAAAAAAAP///////+9/"
				],
				[
					1476,
					1,
					"paste",
					null,
					"AQAAAH0KAAAAAAAAjwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQoAAAAAAAB9CgAAAAAAAAAAAAAAAPC/"
				],
				[
					1477,
					1,
					"insert",
					{
						"characters": "\nopauq"
					},
					"BwAAAI8KAAAAAAAAkAoAAAAAAAAAAAAAkAoAAAAAAACUCgAAAAAAAAAAAACUCgAAAAAAAJUKAAAAAAAAAAAAAJUKAAAAAAAAlgoAAAAAAAAAAAAAlgoAAAAAAACXCgAAAAAAAAAAAACXCgAAAAAAAJgKAAAAAAAAAAAAAJgKAAAAAAAAmQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwoAAAAAAACPCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1478,
					2,
					"left_delete",
					null,
					"AgAAAJgKAAAAAAAAmAoAAAAAAAABAAAAcZcKAAAAAAAAlwoAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAmQoAAAAAAACZCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1479,
					1,
					"insert",
					{
						"characters": "que->handler"
					},
					"DAAAAJcKAAAAAAAAmAoAAAAAAAAAAAAAmAoAAAAAAACZCgAAAAAAAAAAAACZCgAAAAAAAJoKAAAAAAAAAAAAAJoKAAAAAAAAmwoAAAAAAAAAAAAAmwoAAAAAAACcCgAAAAAAAAAAAACcCgAAAAAAAJ0KAAAAAAAAAAAAAJ0KAAAAAAAAngoAAAAAAAAAAAAAngoAAAAAAACfCgAAAAAAAAAAAACfCgAAAAAAAKAKAAAAAAAAAAAAAKAKAAAAAAAAoQoAAAAAAAAAAAAAoQoAAAAAAACiCgAAAAAAAAAAAACiCgAAAAAAAKMKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwoAAAAAAACXCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1480,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAKMKAAAAAAAApAoAAAAAAAAAAAAApAoAAAAAAAClCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowoAAAAAAACjCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1481,
					1,
					"insert",
					{
						"characters": " JS_NULL;"
					},
					"CQAAAKUKAAAAAAAApgoAAAAAAAAAAAAApgoAAAAAAACnCgAAAAAAAAAAAACnCgAAAAAAAKgKAAAAAAAAAAAAAKgKAAAAAAAAqQoAAAAAAAAAAAAAqQoAAAAAAACqCgAAAAAAAAAAAACqCgAAAAAAAKsKAAAAAAAAAAAAAKsKAAAAAAAArAoAAAAAAAAAAAAArAoAAAAAAACtCgAAAAAAAAAAAACtCgAAAAAAAK4KAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQoAAAAAAAClCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1488,
					1,
					"insert",
					{
						"characters": "?="
					},
					"AgAAAFMuAAAAAAAAVC4AAAAAAAAAAAAAVC4AAAAAAABVLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUy4AAAAAAABTLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1489,
					2,
					"left_delete",
					null,
					"AgAAAFQuAAAAAAAAVC4AAAAAAAABAAAAPVMuAAAAAAAAUy4AAAAAAAABAAAAPw",
					"AQAAAAAAAAABAAAAVS4AAAAAAABVLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1490,
					1,
					"insert",
					{
						"characters": "=JS_NULL"
					},
					"CAAAAFMuAAAAAAAAVC4AAAAAAAAAAAAAVC4AAAAAAABVLgAAAAAAAAAAAABVLgAAAAAAAFYuAAAAAAAAAAAAAFYuAAAAAAAAVy4AAAAAAAAAAAAAVy4AAAAAAABYLgAAAAAAAAAAAABYLgAAAAAAAFkuAAAAAAAAAAAAAFkuAAAAAAAAWi4AAAAAAAAAAAAAWi4AAAAAAABbLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUy4AAAAAAABTLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1491,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFsuAAAAAAAAXC4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWy4AAAAAAABbLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1492,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFwuAAAAAAAAXS4AAAAAAAAAAAAAXS4AAAAAAABhLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXC4AAAAAAABcLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1499,
					1,
					"paste",
					null,
					"AQAAAGEuAAAAAAAAcC4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYS4AAAAAAABhLgAAAAAAAAAAAAAAAERA"
				],
				[
					1503,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAKIuAAAAAAAApC4AAAAAAAAAAAAAYS4AAAAAAABjLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYS4AAAAAAACiLgAAAAAAAP///////+9/"
				],
				[
					1506,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAYy4AAAAAAACkLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1511,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAABioAAAAAAAAGKgAAAAAAAAAAAAAAAG5A"
				]
			]
		},
		{
			"file": "libwebsockets/include/libwebsockets/lws-write.h",
			"settings":
			{
				"buffer_size": 10215,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "tests/test-client.js",
			"settings":
			{
				"buffer_size": 2337,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					32,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAAOQCAAAAAAAA5QIAAAAAAAAAAAAA5QIAAAAAAADlAgAAAAAAAAEAAAA4",
					"AQAAAAAAAAABAAAA5AIAAAAAAADlAgAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "\n\nconsole.log"
					},
					"EAAAAIUBAAAAAAAAhgEAAAAAAAAAAAAAhgEAAAAAAACQAQAAAAAAAAAAAACQAQAAAAAAAJEBAAAAAAAAAAAAAJEBAAAAAAAAmwEAAAAAAAAAAAAAhgEAAAAAAACGAQAAAAAAAAoAAAAgICAgICAgICAgkQEAAAAAAACSAQAAAAAAAAAAAACSAQAAAAAAAJMBAAAAAAAAAAAAAJMBAAAAAAAAlAEAAAAAAAAAAAAAlAEAAAAAAACVAQAAAAAAAAAAAACVAQAAAAAAAJYBAAAAAAAAAAAAAJYBAAAAAAAAlwEAAAAAAAAAAAAAlwEAAAAAAACYAQAAAAAAAAAAAACYAQAAAAAAAJkBAAAAAAAAAAAAAJkBAAAAAAAAmgEAAAAAAAAAAAAAmgEAAAAAAACbAQAAAAAAAAAAAACbAQAAAAAAAJwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQEAAAAAAACFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJwBAAAAAAAAngEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAEAAAAAAACcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAJ0BAAAAAAAAnwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQEAAAAAAACdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "req"
					},
					"AwAAAJ4BAAAAAAAAnwEAAAAAAAAAAAAAnwEAAAAAAACgAQAAAAAAAAAAAACgAQAAAAAAAKEBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngEAAAAAAACeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"left_delete",
					null,
					"AQAAAKEBAAAAAAAAoQEAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAogEAAAAAAACiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": ".proto',"
					},
					"CAAAAKEBAAAAAAAAogEAAAAAAAAAAAAAogEAAAAAAACjAQAAAAAAAAAAAACjAQAAAAAAAKQBAAAAAAAAAAAAAKQBAAAAAAAApQEAAAAAAAAAAAAApQEAAAAAAACmAQAAAAAAAAAAAACmAQAAAAAAAKcBAAAAAAAAAAAAAKcBAAAAAAAAqAEAAAAAAAAAAAAAqAEAAAAAAACpAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQEAAAAAAAChAQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " req.proto"
					},
					"CgAAAKkBAAAAAAAAqgEAAAAAAAAAAAAAqgEAAAAAAACrAQAAAAAAAAAAAACrAQAAAAAAAKwBAAAAAAAAAAAAAKwBAAAAAAAArQEAAAAAAAAAAAAArQEAAAAAAACuAQAAAAAAAAAAAACuAQAAAAAAAK8BAAAAAAAAAAAAAK8BAAAAAAAAsAEAAAAAAAAAAAAAsAEAAAAAAACxAQAAAAAAAAAAAACxAQAAAAAAALIBAAAAAAAAAAAAALIBAAAAAAAAswEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQEAAAAAAACpAQAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALQBAAAAAAAAtQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAEAAAAAAAC0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "col"
					},
					"AwAAALMBAAAAAAAAtAEAAAAAAAAAAAAAtAEAAAAAAAC1AQAAAAAAAAAAAAC1AQAAAAAAALYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAswEAAAAAAACzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"paste",
					null,
					"AgAAAKIBAAAAAAAAqgEAAAAAAAAAAAAAqgEAAAAAAACqAQAAAAAAAAUAAABwcm90bw",
					"AQAAAAAAAAABAAAAogEAAAAAAACnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "url"
					},
					"BAAAAKIBAAAAAAAAowEAAAAAAAAAAAAAowEAAAAAAACjAQAAAAAAAAgAAABwcm90b2NvbKMBAAAAAAAApAEAAAAAAAAAAAAApAEAAAAAAAClAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgEAAAAAAACiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"paste",
					null,
					"AgAAAKwBAAAAAAAArwEAAAAAAAAAAAAArwEAAAAAAACvAQAAAAAAAAgAAABwcm90b2NvbA",
					"AQAAAAAAAAABAAAArAEAAAAAAAC0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAIYBAAAAAAAAhwEAAAAAAAAAAAAAhwEAAAAAAACIAQAAAAAAAAAAAACIAQAAAAAAAIkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgEAAAAAAACGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " url"
					},
					"BAAAAIkBAAAAAAAAigEAAAAAAAAAAAAAigEAAAAAAACLAQAAAAAAAAAAAACLAQAAAAAAAIwBAAAAAAAAAAAAAIwBAAAAAAAAjQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQEAAAAAAACJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAI0BAAAAAAAAjgEAAAAAAAAAAAAAjgEAAAAAAACPAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQEAAAAAAACNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAAI8BAAAAAAAAkAEAAAAAAAAAAAAAkAEAAAAAAACRAQAAAAAAAAAAAACRAQAAAAAAAJIBAAAAAAAAAAAAAJIBAAAAAAAAkwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwEAAAAAAACPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " URL"
					},
					"BAAAAJMBAAAAAAAAlAEAAAAAAAAAAAAAlAEAAAAAAACVAQAAAAAAAAAAAACVAQAAAAAAAJYBAAAAAAAAAAAAAJYBAAAAAAAAlwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwEAAAAAAACTAQAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJcBAAAAAAAAmAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwEAAAAAAACXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"cut",
					null,
					"AQAAACIAAAAAAAAAIgAAAAAAAAAiAAAAaW1wb3J0IENsaWVudCBmcm9tICcuL2NsaWVudC5qcyc7Cg",
					"AQAAAAAAAAABAAAAIgAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					2,
					"paste",
					null,
					"AgAAACIAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABmAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgAAAAAAAAAiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert_snippet",
					{
						"contents": "{${0:$SELECTION}}"
					},
					"AgAAACkAAAAAAAAAKQAAAAAAAAAGAAAAQ2xpZW50KQAAAAAAAAAxAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQAAAAAAAAAvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "URL"
					},
					"BAAAACoAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAArAAAAAAAAAAYAAABDbGllbnQrAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAALQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgAAAAAAAAAwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"left_delete",
					null,
					"AQAAADYAAAAAAAAANgAAAAAAAAAKAAAAL2NsaWVudC5qcw",
					"AQAAAAAAAAABAAAANgAAAAAAAABAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAADYAAAAAAAAANwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgAAAAAAAAA2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					2,
					"left_delete",
					null,
					"AgAAADYAAAAAAAAANgAAAAAAAAABAAAAbjUAAAAAAAAANQAAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAANwAAAAAAAAA3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": "net"
					},
					"AwAAADUAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA3AAAAAAAAAAAAAAA3AAAAAAAAADgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQAAAAAAAAA1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALEBAAAAAAAAswEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQEAAAAAAACxAQAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": "req.r"
					},
					"BQAAALIBAAAAAAAAswEAAAAAAAAAAAAAswEAAAAAAAC0AQAAAAAAAAAAAAC0AQAAAAAAALUBAAAAAAAAAAAAALUBAAAAAAAAtgEAAAAAAAAAAAAAtgEAAAAAAAC3AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgEAAAAAAACyAQAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"left_delete",
					null,
					"AQAAALYBAAAAAAAAtgEAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAtwEAAAAAAAC3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": "url"
					},
					"AwAAALYBAAAAAAAAtwEAAAAAAAAAAAAAtwEAAAAAAAC4AQAAAAAAAAAAAAC4AQAAAAAAALkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgEAAAAAAAC2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALoBAAAAAAAAuwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugEAAAAAAAC6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					4,
					"left_delete",
					null,
					"BAAAANYBAAAAAAAA1gEAAAAAAAABAAAALtUBAAAAAAAA1QEAAAAAAAABAAAAcdQBAAAAAAAA1AEAAAAAAAABAAAAZdMBAAAAAAAA0wEAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAA1wEAAAAAAADXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					4,
					"right_delete",
					null,
					"BAAAANkBAAAAAAAA2QEAAAAAAAABAAAActkBAAAAAAAA2QEAAAAAAAABAAAAZdkBAAAAAAAA2QEAAAAAAAABAAAAcdkBAAAAAAAA2QEAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAA2QEAAAAAAADZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALsBAAAAAAAAvAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwEAAAAAAAC7AQAAAAAAAP///////+9/"
				],
				[
					173,
					1,
					"left_delete",
					null,
					"AQAAALABAAAAAAAAsAEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAsQEAAAAAAACxAQAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAALoBAAAAAAAAuwEAAAAAAAAAAAAAuwEAAAAAAAC8AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugEAAAAAAAC6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					2,
					"left_delete",
					null,
					"AgAAALsBAAAAAAAAuwEAAAAAAAABAAAACroBAAAAAAAAugEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAvAEAAAAAAAC8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAALoBAAAAAAAAuwEAAAAAAAAAAAAAuwEAAAAAAAC8AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugEAAAAAAAC6AQAAAAAAAAAAAAAA4HBA"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAALwBAAAAAAAAvQEAAAAAAAAAAAAAvQEAAAAAAAC+AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAEAAAAAAAC8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAL4BAAAAAAAAwAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgEAAAAAAAC+AQAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": "url.proto."
					},
					"CgAAAL8BAAAAAAAAwAEAAAAAAAAAAAAAwAEAAAAAAADBAQAAAAAAAAAAAADBAQAAAAAAAMIBAAAAAAAAAAAAAMIBAAAAAAAAwwEAAAAAAAAAAAAAwwEAAAAAAADEAQAAAAAAAAAAAADEAQAAAAAAAMUBAAAAAAAAAAAAAMUBAAAAAAAAxgEAAAAAAAAAAAAAxgEAAAAAAADHAQAAAAAAAAAAAADHAQAAAAAAAMgBAAAAAAAAAAAAAMgBAAAAAAAAyQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwEAAAAAAAC/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": "startsi"
					},
					"BwAAAMkBAAAAAAAAygEAAAAAAAAAAAAAygEAAAAAAADLAQAAAAAAAAAAAADLAQAAAAAAAMwBAAAAAAAAAAAAAMwBAAAAAAAAzQEAAAAAAAAAAAAAzQEAAAAAAADOAQAAAAAAAAAAAADOAQAAAAAAAM8BAAAAAAAAAAAAAM8BAAAAAAAA0AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQEAAAAAAADJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"left_delete",
					null,
					"AQAAAM8BAAAAAAAAzwEAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAA0AEAAAAAAADQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "With"
					},
					"BAAAAM8BAAAAAAAA0AEAAAAAAAAAAAAA0AEAAAAAAADRAQAAAAAAAAAAAADRAQAAAAAAANIBAAAAAAAAAAAAANIBAAAAAAAA0wEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwEAAAAAAADPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANMBAAAAAAAA1QEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wEAAAAAAADTAQAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAANQBAAAAAAAA1gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AEAAAAAAADUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": "http"
					},
					"BAAAANUBAAAAAAAA1gEAAAAAAAAAAAAA1gEAAAAAAADXAQAAAAAAAAAAAADXAQAAAAAAANgBAAAAAAAAAAAAANgBAAAAAAAA2QEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QEAAAAAAADVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"left_delete",
					null,
					"AQAAAL4BAAAAAAAAvgEAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAvwEAAAAAAAC/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": "(!"
					},
					"AgAAAL4BAAAAAAAAvwEAAAAAAAAAAAAAvwEAAAAAAADAAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgEAAAAAAAC+AQAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN0BAAAAAAAA3gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QEAAAAAAADdAQAAAAAAAP///////+9/"
				],
				[
					230,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAN4BAAAAAAAA4AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gEAAAAAAADeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAN8BAAAAAAAA4AEAAAAAAAAAAAAA4AEAAAAAAADhAQAAAAAAAAAAAADgAQAAAAAAAOIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wEAAAAAAADfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"paste",
					null,
					"AQAAAF0AAAAAAAAAtgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQAAAAAAAABdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"paste",
					null,
					"AQAAADsCAAAAAAAASQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwIAAAAAAAA7AgAAAAAAAAAAAAAAAPC/"
				],
				[
					249,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAEkCAAAAAAAASgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQIAAAAAAABJAgAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEoCAAAAAAAATAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgIAAAAAAABKAgAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAEoCAAAAAAAASgIAAAAAAAABAAAAKEoCAAAAAAAASgIAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAASwIAAAAAAABLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					252,
					1,
					"left_delete",
					null,
					"AQAAAEkCAAAAAAAASQIAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAASgIAAAAAAABKAgAAAAAAAAAAAAAAAPC/"
				],
				[
					253,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEkCAAAAAAAASwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQIAAAAAAABJAgAAAAAAAAAAAAAAAPC/"
				],
				[
					254,
					1,
					"insert",
					{
						"characters": "0,"
					},
					"AgAAAEoCAAAAAAAASwIAAAAAAAAAAAAASwIAAAAAAABMAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgIAAAAAAABKAgAAAAAAAAAAAAAAAPC/"
				],
				[
					255,
					1,
					"insert",
					{
						"characters": " /"
					},
					"AgAAAEwCAAAAAAAATQIAAAAAAAAAAAAATQIAAAAAAABOAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAIAAAAAAABMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					256,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAE4CAAAAAAAAUAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgIAAAAAAABOAgAAAAAAAAAAAAAAAPC/"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFACAAAAAAAAUQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAIAAAAAAABQAgAAAAAAAAAAAAAAAPC/"
				],
				[
					259,
					2,
					"left_delete",
					null,
					"AgAAAFACAAAAAAAAUAIAAAAAAAABAAAAIE8CAAAAAAAATwIAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAUQIAAAAAAABRAgAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAE4CAAAAAAAATgIAAAAAAAABAAAAKE4CAAAAAAAATgIAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAATwIAAAAAAABPAgAAAAAAAAAAAAAAAPC/"
				],
				[
					261,
					1,
					"left_delete",
					null,
					"AQAAAE0CAAAAAAAATQIAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAATgIAAAAAAABOAgAAAAAAAAAAAAAAAPC/"
				],
				[
					262,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAE0CAAAAAAAATwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQIAAAAAAABNAgAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAE8CAAAAAAAAUAIAAAAAAAAAAAAAUAIAAAAAAABRAgAAAAAAAAAAAABRAgAAAAAAAFICAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwIAAAAAAABPAgAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFICAAAAAAAAUwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgIAAAAAAABSAgAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAFMCAAAAAAAAVQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwIAAAAAAABTAgAAAAAAAAAAAAAAAPC/"
				],
				[
					267,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAFQCAAAAAAAAVQIAAAAAAAAAAAAAVQIAAAAAAABXAgAAAAAAAAAAAABXAgAAAAAAAFgCAAAAAAAAAAAAAFgCAAAAAAAAWgIAAAAAAAAAAAAAVQIAAAAAAABVAgAAAAAAAAIAAAAgIFUCAAAAAAAAWQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAIAAAAAAABUAgAAAAAAAAAAAAAAAPC/"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AwAAAF0CAAAAAAAAXgIAAAAAAAAAAAAAVQIAAAAAAABVAgAAAAAAAAQAAAAgICAgWgIAAAAAAABbAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQIAAAAAAABdAgAAAAAAAAAAAAAAAERA"
				],
				[
					291,
					1,
					"cut",
					null,
					"AQAAAF0AAAAAAAAAXQAAAAAAAABZAAAAaW1wb3J0IHsgY2xvc2UsIGV4ZWMsIG9wZW4sIE9fUkRXUiwgc2V0UmVhZEhhbmRsZXIsIHNldFdyaXRlSGFuZGxlciwgV29ya2VyIH0gZnJvbSAnb3MnOwo",
					"AQAAAAAAAAABAAAAXQAAAAAAAAC2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					2,
					"paste",
					null,
					"AgAAAF0AAAAAAAAAtgAAAAAAAAAAAAAAtgAAAAAAAAAPAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQAAAAAAAABdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": "9ni"
					},
					"BAAAAL8AAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADAAAAAAAAAAEIAAABjbG9zZSwgZXhlYywgb3BlbiwgT19SRFdSLCBzZXRSZWFkSGFuZGxlciwgc2V0V3JpdGVIYW5kbGVyLCBXb3JrZXLAAAAAAAAAAMEAAAAAAAAAAAAAAMEAAAAAAAAAwgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwAAAAAAAAABAQAAAAAAAAAAAAAAAPC/"
				],
				[
					296,
					3,
					"left_delete",
					null,
					"AwAAAMEAAAAAAAAAwQAAAAAAAAABAAAAacAAAAAAAAAAwAAAAAAAAAABAAAAbr8AAAAAAAAAvwAAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAAwgAAAAAAAADCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": "in"
					},
					"AgAAAL8AAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADBAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwAAAAAAAAC/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					298,
					1,
					"right_delete",
					null,
					"AQAAAMEAAAAAAAAAwQAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAwQAAAAAAAADBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					302,
					2,
					"left_delete",
					null,
					"AgAAAMoAAAAAAAAAygAAAAAAAAABAAAAc8kAAAAAAAAAyQAAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAywAAAAAAAADLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": "std"
					},
					"AwAAAMkAAAAAAAAAygAAAAAAAAAAAAAAygAAAAAAAADLAAAAAAAAAAAAAADLAAAAAAAAAMwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQAAAAAAAADJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"left_delete",
					null,
					"AQAAAMAAAAAAAAAAwAAAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAwQAAAAAAAADBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					310,
					1,
					"left_delete",
					null,
					"AQAAAL8AAAAAAAAAvwAAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAvwAAAAAAAADAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					311,
					1,
					"insert",
					{
						"characters": "in"
					},
					"AgAAAL8AAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADBAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwAAAAAAAAC/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					312,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMEAAAAAAAAAwgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQAAAAAAAADBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					313,
					1,
					"left_delete",
					null,
					"AQAAAMEAAAAAAAAAwQAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAwgAAAAAAAADCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					314,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAAMEAAAAAAAAAwgAAAAAAAAAAAAAAwgAAAAAAAADDAAAAAAAAAAAAAADDAAAAAAAAAMQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQAAAAAAAADBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					315,
					1,
					"insert",
					{
						"characters": " stdin"
					},
					"BgAAAMQAAAAAAAAAxQAAAAAAAAAAAAAAxQAAAAAAAADGAAAAAAAAAAAAAADGAAAAAAAAAMcAAAAAAAAAAAAAAMcAAAAAAAAAyAAAAAAAAAAAAAAAyAAAAAAAAADJAAAAAAAAAAAAAADJAAAAAAAAAMoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAAAAAAAAADEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					316,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMoAAAAAAAAAywAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygAAAAAAAADKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"paste",
					null,
					"AQAAAHgCAAAAAAAAfQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAIAAAAAAAB4AgAAAAAAAAAAAAAAAPC/"
				],
				[
					333,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAH0CAAAAAAAAfgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQIAAAAAAAB9AgAAAAAAAAAAAAAAAPC/"
				],
				[
					334,
					1,
					"paste",
					null,
					"AQAAAH4CAAAAAAAAkwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgIAAAAAAAB+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					335,
					8,
					"left_delete",
					null,
					"CAAAAJICAAAAAAAAkgIAAAAAAAABAAAAZZECAAAAAAAAkQIAAAAAAAABAAAAepACAAAAAAAAkAIAAAAAAAABAAAAaY8CAAAAAAAAjwIAAAAAAAABAAAAc44CAAAAAAAAjgIAAAAAAAABAAAAX40CAAAAAAAAjQIAAAAAAAABAAAAeIwCAAAAAAAAjAIAAAAAAAABAAAAYYsCAAAAAAAAiwIAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAkwIAAAAAAACTAgAAAAAAAAAAAAAAAPC/"
				],
				[
					336,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAIsCAAAAAAAAjAIAAAAAAAAAAAAAjAIAAAAAAACNAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwIAAAAAAACLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					338,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAHgCAAAAAAAAeQIAAAAAAAAAAAAAeQIAAAAAAAB6AgAAAAAAAAAAAAB6AgAAAAAAAHsCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAIAAAAAAAB4AgAAAAAAAAAAAAAAAAAA"
				],
				[
					339,
					1,
					"insert",
					{
						"characters": " std"
					},
					"BAAAAHsCAAAAAAAAfAIAAAAAAAAAAAAAfAIAAAAAAAB9AgAAAAAAAAAAAAB9AgAAAAAAAH4CAAAAAAAAAAAAAH4CAAAAAAAAfwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewIAAAAAAAB7AgAAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAH8CAAAAAAAAgAIAAAAAAAAAAAAAgAIAAAAAAACBAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwIAAAAAAAB/AgAAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					3,
					"left_delete",
					null,
					"AwAAAIACAAAAAAAAgAIAAAAAAAABAAAAPX8CAAAAAAAAfwIAAAAAAAABAAAAIH4CAAAAAAAAfgIAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAgQIAAAAAAACBAgAAAAAAAAAAAAAAAPC/"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAH4CAAAAAAAAfwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgIAAAAAAAB+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAH8CAAAAAAAAgAIAAAAAAAAAAAAAgAIAAAAAAACBAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwIAAAAAAAB/AgAAAAAAAAAAAAAAAPC/"
				],
				[
					344,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIECAAAAAAAAggIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQIAAAAAAACBAgAAAAAAAAAAAAAAAPC/"
				],
				[
					346,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAJcCAAAAAAAAmAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwIAAAAAAACXAgAAAAAAAP///////+9/"
				],
				[
					347,
					1,
					"left_delete",
					null,
					"AQAAAJcCAAAAAAAAlwIAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAmAIAAAAAAACYAgAAAAAAAAAAAAAAAPC/"
				],
				[
					348,
					1,
					"insert",
					{
						"characters": "\nconsole.log"
					},
					"DAAAAJcCAAAAAAAAmAIAAAAAAAAAAAAAmAIAAAAAAACZAgAAAAAAAAAAAACZAgAAAAAAAJoCAAAAAAAAAAAAAJoCAAAAAAAAmwIAAAAAAAAAAAAAmwIAAAAAAACcAgAAAAAAAAAAAACcAgAAAAAAAJ0CAAAAAAAAAAAAAJ0CAAAAAAAAngIAAAAAAAAAAAAAngIAAAAAAACfAgAAAAAAAAAAAACfAgAAAAAAAKACAAAAAAAAAAAAAKACAAAAAAAAoQIAAAAAAAAAAAAAoQIAAAAAAACiAgAAAAAAAAAAAACiAgAAAAAAAKMCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwIAAAAAAACXAgAAAAAAAAAAAAAAAPC/"
				],
				[
					349,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKMCAAAAAAAApQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowIAAAAAAACjAgAAAAAAAAAAAAAAAPC/"
				],
				[
					350,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAKQCAAAAAAAApgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAIAAAAAAACkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					351,
					1,
					"insert",
					{
						"characters": "str"
					},
					"AwAAAKUCAAAAAAAApgIAAAAAAAAAAAAApgIAAAAAAACnAgAAAAAAAAAAAACnAgAAAAAAAKgCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQIAAAAAAAClAgAAAAAAAAAAAAAAAPC/"
				],
				[
					353,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKkCAAAAAAAAqgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQIAAAAAAACpAgAAAAAAAAAAAAAAAPC/"
				],
				[
					354,
					1,
					"insert",
					{
						"characters": " str"
					},
					"BAAAAKoCAAAAAAAAqwIAAAAAAAAAAAAAqwIAAAAAAACsAgAAAAAAAAAAAACsAgAAAAAAAK0CAAAAAAAAAAAAAK0CAAAAAAAArgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgIAAAAAAACqAgAAAAAAAAAAAAAAAPC/"
				],
				[
					356,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAK8CAAAAAAAAsAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwIAAAAAAACvAgAAAAAAAAAAAAAAAPC/"
				],
				[
					387,
					1,
					"cut",
					null,
					"AQAAALoCAAAAAAAAugIAAAAAAAAjAAAAICAgICAgICAgIGNvbnNvbGUubG9nKCd1cmwnLCB1cmwpOwo",
					"AQAAAAAAAAABAAAAugIAAAAAAADdAgAAAAAAAAAAAAAAAPC/"
				],
				[
					390,
					1,
					"paste",
					null,
					"AQAAADcCAAAAAAAAWgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwIAAAAAAAA3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": "cols"
					},
					"BAAAAGgCAAAAAAAAaQIAAAAAAAAAAAAAaQIAAAAAAABqAgAAAAAAAAAAAABqAgAAAAAAAGsCAAAAAAAAAAAAAGsCAAAAAAAAbAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAIAAAAAAABoAgAAAAAAAAAAAAAAAPC/"
				],
				[
					396,
					1,
					"left_delete",
					null,
					"AQAAAGsCAAAAAAAAawIAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAbAIAAAAAAABsAgAAAAAAAAAAAAAAAPC/"
				],
				[
					406,
					1,
					"paste",
					null,
					"AQAAAIQCAAAAAAAAkQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAIAAAAAAACEAgAAAAAAAAAAAAAAAPC/"
				],
				[
					407,
					3,
					"left_delete",
					null,
					"AwAAAJACAAAAAAAAkAIAAAAAAAABAAAAKY8CAAAAAAAAjwIAAAAAAAABAAAAZI4CAAAAAAAAjgIAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAkQIAAAAAAACRAgAAAAAAAAAAAAAAAPC/"
				],
				[
					408,
					1,
					"insert",
					{
						"characters": "0);"
					},
					"AwAAAI4CAAAAAAAAjwIAAAAAAAAAAAAAjwIAAAAAAACQAgAAAAAAAAAAAACQAgAAAAAAAJECAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgIAAAAAAACOAgAAAAAAAAAAAAAAAPC/"
				],
				[
					409,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJECAAAAAAAAkgIAAAAAAAAAAAAAkgIAAAAAAACUAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQIAAAAAAACRAgAAAAAAAAAAAAAAAPC/"
				],
				[
					427,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKgAAAAAAAAAqQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAAAAAAAAACoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					428,
					1,
					"paste",
					null,
					"AQAAAKkAAAAAAAAAsgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQAAAAAAAACpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					448,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANQAAAAAAAAA1QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AAAAAAAAADUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					449,
					1,
					"insert",
					{
						"characters": " out"
					},
					"BAAAANUAAAAAAAAA1gAAAAAAAAAAAAAA1gAAAAAAAADXAAAAAAAAAAAAAADXAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA2QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					450,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAANkAAAAAAAAA2gAAAAAAAAAAAAAA2gAAAAAAAADbAAAAAAAAAAAAAADbAAAAAAAAANwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QAAAAAAAADZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					451,
					1,
					"insert",
					{
						"characters": " stdout"
					},
					"BwAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAADeAAAAAAAAAN8AAAAAAAAAAAAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADhAAAAAAAAAAAAAADhAAAAAAAAAOIAAAAAAAAAAAAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AAAAAAAAADcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					465,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOYCAAAAAAAA5wIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gIAAAAAAADmAgAAAAAAAAAAAAAAAPC/"
				],
				[
					466,
					1,
					"paste",
					null,
					"AQAAAOcCAAAAAAAA7QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wIAAAAAAADnAgAAAAAAAAAAAAAAAPC/"
				],
				[
					473,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAO0CAAAAAAAA7gIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QIAAAAAAADtAgAAAAAAAAAAAAAAAPC/"
				],
				[
					474,
					1,
					"paste",
					null,
					"AQAAAO4CAAAAAAAA9wIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gIAAAAAAADuAgAAAAAAAAAAAAAAAPC/"
				],
				[
					475,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPcCAAAAAAAA+AIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wIAAAAAAAD3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					477,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAOcCAAAAAAAA6AIAAAAAAAAAAAAA6AIAAAAAAADpAgAAAAAAAAAAAADpAgAAAAAAAOoCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wIAAAAAAADnAgAAAAAAAAAAAAAAAAAA"
				],
				[
					478,
					1,
					"insert",
					{
						"characters": " b"
					},
					"AgAAAOoCAAAAAAAA6wIAAAAAAAAAAAAA6wIAAAAAAADsAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gIAAAAAAADqAgAAAAAAAAAAAAAAAPC/"
				],
				[
					479,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAOwCAAAAAAAA7QIAAAAAAAAAAAAA7QIAAAAAAADuAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AIAAAAAAADsAgAAAAAAAAAAAAAAAPC/"
				],
				[
					480,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO4CAAAAAAAA7wIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gIAAAAAAADuAgAAAAAAAAAAAAAAAPC/"
				],
				[
					484,
					1,
					"left_delete",
					null,
					"AQAAAMcCAAAAAAAAxwIAAAAAAAAgAAAAbGV0IHN0ciA9IHN0ZGluLnJlYWRBc1N0cmluZygpOwo",
					"AQAAAAAAAAABAAAAxwIAAAAAAADnAgAAAAAAAAAAAAAAAAAA"
				],
				[
					489,
					1,
					"insert",
					{
						"characters": "stdin"
					},
					"BgAAAM8CAAAAAAAA0AIAAAAAAAAAAAAA0AIAAAAAAADQAgAAAAAAAAYAAABzdGRvdXTQAgAAAAAAANECAAAAAAAAAAAAANECAAAAAAAA0gIAAAAAAAAAAAAA0gIAAAAAAADTAgAAAAAAAAAAAADTAgAAAAAAANQCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwIAAAAAAADVAgAAAAAAAAAAAAAAAPC/"
				],
				[
					493,
					1,
					"insert",
					{
						"characters": "\nstdout.puts"
					},
					"DAAAAN8CAAAAAAAA4AIAAAAAAAAAAAAA4AIAAAAAAADhAgAAAAAAAAAAAADhAgAAAAAAAOICAAAAAAAAAAAAAOICAAAAAAAA4wIAAAAAAAAAAAAA4wIAAAAAAADkAgAAAAAAAAAAAADkAgAAAAAAAOUCAAAAAAAAAAAAAOUCAAAAAAAA5gIAAAAAAAAAAAAA5gIAAAAAAADnAgAAAAAAAAAAAADnAgAAAAAAAOgCAAAAAAAAAAAAAOgCAAAAAAAA6QIAAAAAAAAAAAAA6QIAAAAAAADqAgAAAAAAAAAAAADqAgAAAAAAAOsCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wIAAAAAAADfAgAAAAAAAP///////+9/"
				],
				[
					494,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOsCAAAAAAAA7QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wIAAAAAAADrAgAAAAAAAAAAAAAAAPC/"
				],
				[
					495,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAOwCAAAAAAAA7QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AIAAAAAAADsAgAAAAAAAAAAAAAAAPC/"
				],
				[
					496,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAO0CAAAAAAAA7wIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QIAAAAAAADtAgAAAAAAAAAAAAAAAPC/"
				],
				[
					498,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAO8CAAAAAAAA8AIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wIAAAAAAADvAgAAAAAAAAAAAAAAAPC/"
				],
				[
					499,
					2,
					"left_delete",
					null,
					"AgAAAO8CAAAAAAAA7wIAAAAAAAABAAAAO+4CAAAAAAAA7gIAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA8AIAAAAAAADwAgAAAAAAAAAAAAAAAPC/"
				],
				[
					500,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAO0CAAAAAAAA7QIAAAAAAAABAAAAKO0CAAAAAAAA7QIAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA7gIAAAAAAADuAgAAAAAAAAAAAAAAAPC/"
				],
				[
					501,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAO0CAAAAAAAA7gIAAAAAAAAAAAAA7gIAAAAAAADvAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QIAAAAAAADtAgAAAAAAAAAAAAAAAPC/"
				],
				[
					505,
					1,
					"left_delete",
					null,
					"AQAAAPACAAAAAAAA8AIAAAAAAAAZAAAAY29uc29sZS5sb2coJ3N0cicsIHN0cik7Cg",
					"AQAAAAAAAAABAAAA8AIAAAAAAAAJAwAAAAAAAAAAAAAAAAAA"
				],
				[
					514,
					1,
					"insert",
					{
						"characters": "putByte"
					},
					"CAAAAOcCAAAAAAAA6AIAAAAAAAAAAAAA6AIAAAAAAADoAgAAAAAAAAQAAABwdXRz6AIAAAAAAADpAgAAAAAAAAAAAADpAgAAAAAAAOoCAAAAAAAAAAAAAOoCAAAAAAAA6wIAAAAAAAAAAAAA6wIAAAAAAADsAgAAAAAAAAAAAADsAgAAAAAAAO0CAAAAAAAAAAAAAO0CAAAAAAAA7gIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wIAAAAAAADrAgAAAAAAAAAAAAAAAPC/"
				],
				[
					577,
					1,
					"insert",
					{
						"characters": "\nstdout.flush"
					},
					"DQAAAPICAAAAAAAA8wIAAAAAAAAAAAAA8wIAAAAAAAD0AgAAAAAAAAAAAAD0AgAAAAAAAPUCAAAAAAAAAAAAAPUCAAAAAAAA9gIAAAAAAAAAAAAA9gIAAAAAAAD3AgAAAAAAAAAAAAD3AgAAAAAAAPgCAAAAAAAAAAAAAPgCAAAAAAAA+QIAAAAAAAAAAAAA+QIAAAAAAAD6AgAAAAAAAAAAAAD6AgAAAAAAAPsCAAAAAAAAAAAAAPsCAAAAAAAA/AIAAAAAAAAAAAAA/AIAAAAAAAD9AgAAAAAAAAAAAAD9AgAAAAAAAP4CAAAAAAAAAAAAAP4CAAAAAAAA/wIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gIAAAAAAADyAgAAAAAAAAAAAAAAAPC/"
				],
				[
					578,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAP8CAAAAAAAAAQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wIAAAAAAAD/AgAAAAAAAAAAAAAAAPC/"
				],
				[
					580,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAEDAAAAAAAAAgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQMAAAAAAAABAwAAAAAAAAAAAAAAAPC/"
				],
				[
					592,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"AwAAAPICAAAAAAAA8wIAAAAAAAAAAAAA8wIAAAAAAAD0AgAAAAAAAAAAAAD0AgAAAAAAAPUCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gIAAAAAAADyAgAAAAAAAAAAAAAAAPC/"
				],
				[
					593,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPUCAAAAAAAA9wIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QIAAAAAAAD1AgAAAAAAAAAAAAAAAPC/"
				],
				[
					594,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAPYCAAAAAAAA9wIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gIAAAAAAAD2AgAAAAAAAAAAAAAAAPC/"
				],
				[
					595,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAPcCAAAAAAAA+AIAAAAAAAAAAAAA+AIAAAAAAAD5AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wIAAAAAAAD3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					596,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPkCAAAAAAAA+gIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QIAAAAAAAD5AgAAAAAAAAAAAAAAAPC/"
				],
				[
					597,
					1,
					"left_delete",
					null,
					"AQAAAPkCAAAAAAAA+QIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA+gIAAAAAAAD6AgAAAAAAAAAAAAAAAPC/"
				],
				[
					598,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAPkCAAAAAAAA+gIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QIAAAAAAAD5AgAAAAAAAAAAAAAAAPC/"
				],
				[
					599,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAPoCAAAAAAAA+wIAAAAAAAAAAAAA+wIAAAAAAAD8AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gIAAAAAAAD6AgAAAAAAAAAAAAAAAPC/"
				],
				[
					600,
					1,
					"left_delete",
					null,
					"AQAAAPsCAAAAAAAA+wIAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAA/AIAAAAAAAD8AgAAAAAAAAAAAAAAAPC/"
				],
				[
					601,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAAPsCAAAAAAAA/AIAAAAAAAAAAAAA/AIAAAAAAAD9AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wIAAAAAAAD7AgAAAAAAAAAAAAAAAPC/"
				],
				[
					602,
					1,
					"insert",
					{
						"characters": " ||"
					},
					"AwAAAP0CAAAAAAAA/gIAAAAAAAAAAAAA/gIAAAAAAAD/AgAAAAAAAAAAAAD/AgAAAAAAAAADAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QIAAAAAAAD9AgAAAAAAAAAAAAAAAPC/"
				],
				[
					603,
					1,
					"insert",
					{
						"characters": " b"
					},
					"AgAAAAADAAAAAAAAAQMAAAAAAAAAAAAAAQMAAAAAAAACAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAPC/"
				],
				[
					604,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAIDAAAAAAAAAwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgMAAAAAAAACAwAAAAAAAAAAAAAAAPC/"
				],
				[
					605,
					2,
					"left_delete",
					null,
					"AgAAAAIDAAAAAAAAAgMAAAAAAAABAAAAIAEDAAAAAAAAAQMAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAAAwMAAAAAAAADAwAAAAAAAAAAAAAAAPC/"
				],
				[
					606,
					5,
					"left_delete",
					null,
					"BQAAAAADAAAAAAAAAAMAAAAAAAABAAAAIP8CAAAAAAAA/wIAAAAAAAABAAAAfP4CAAAAAAAA/gIAAAAAAAABAAAAfP0CAAAAAAAA/QIAAAAAAAABAAAAIPwCAAAAAAAA/AIAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAAQMAAAAAAAABAwAAAAAAAAAAAAAAAPC/"
				],
				[
					607,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAPwCAAAAAAAA/QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AIAAAAAAAD8AgAAAAAAAAAAAAAAAPC/"
				],
				[
					608,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP0CAAAAAAAA/gIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QIAAAAAAAD9AgAAAAAAAAAAAAAAAPC/"
				],
				[
					609,
					1,
					"left_delete",
					null,
					"AQAAAP0CAAAAAAAA/QIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA/gIAAAAAAAD+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					611,
					1,
					"insert",
					{
						"characters": "\nstdout."
					},
					"CAAAAP4CAAAAAAAA/wIAAAAAAAAAAAAA/wIAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAEDAAAAAAAAAAAAAAEDAAAAAAAAAgMAAAAAAAAAAAAAAgMAAAAAAAADAwAAAAAAAAAAAAADAwAAAAAAAAQDAAAAAAAAAAAAAAQDAAAAAAAABQMAAAAAAAAAAAAABQMAAAAAAAAGAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gIAAAAAAAD+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					612,
					1,
					"insert",
					{
						"characters": "putByte"
					},
					"BwAAAAYDAAAAAAAABwMAAAAAAAAAAAAABwMAAAAAAAAIAwAAAAAAAAAAAAAIAwAAAAAAAAkDAAAAAAAAAAAAAAkDAAAAAAAACgMAAAAAAAAAAAAACgMAAAAAAAALAwAAAAAAAAAAAAALAwAAAAAAAAwDAAAAAAAAAAAAAAwDAAAAAAAADQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgMAAAAAAAAGAwAAAAAAAAAAAAAAAPC/"
				],
				[
					613,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAA0DAAAAAAAADwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQMAAAAAAAANAwAAAAAAAAAAAAAAAPC/"
				],
				[
					614,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAAA4DAAAAAAAADwMAAAAAAAAAAAAADwMAAAAAAAAQAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgMAAAAAAAAOAwAAAAAAAAAAAAAAAPC/"
				],
				[
					616,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABEDAAAAAAAAEgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQMAAAAAAAARAwAAAAAAAAAAAAAAAPC/"
				],
				[
					617,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABIDAAAAAAAAEwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgMAAAAAAAASAwAAAAAAAAAAAAAAAPC/"
				],
				[
					630,
					1,
					"left_delete",
					null,
					"AQAAAP4CAAAAAAAA/gIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA/wIAAAAAAAD/AgAAAAAAAAAAAAAAAAAA"
				],
				[
					634,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADaBQAAaW1wb3J0IHsgZXhpdCwgcHV0cyB9IGZyb20gJ3N0ZCc7CmltcG9ydCB7VVJMfSBmcm9tICduZXQnOwppbXBvcnQgQ2xpZW50IGZyb20gJy4vY2xpZW50LmpzJzsKaW1wb3J0IHsgY2xvc2UsIGV4ZWMsIG9wZW4sIE9fUkRXUiwgc2V0UmVhZEhhbmRsZXIsIHNldFdyaXRlSGFuZGxlciwgV29ya2VyLHR0eVNldFJhdyB9IGZyb20gJ29zJzsKaW1wb3J0IHsgaW4gYXMgc3RkaW4sIG91dCBhcyBzdGRvdXQgfSBmcm9tICdzdGQnOwoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgY29uc3QgZGVidWcgPSBhcmdzLmluZGV4T2YoJy14JykgIT0gLTE7CiAgYXJncyA9IGFyZ3MuZmlsdGVyKGFyZyA9PiAhL14tW3hdLy50ZXN0KGFyZykpOwoKICBpZihhcmdzLmxlbmd0aCA9PSAwKSBhcmdzLnB1c2goJ2h0dHBzOi8vbG9jYWxob3N0L2RlYnVnZ2VyLmh0bWwnKTsKCiAgZm9yKGxldCBhcmcgb2YgYXJncykgewogICAgQ2xpZW50KAogICAgICBhcmcsCiAgICAgIHsKICAgICAgICBvbkNvbm5lY3Qod3MsIHJlcSkgewogICAgICAgICAgY29uc29sZS5sb2coJ29uQ29ubmVjdCcsIHsgd3MsIHJlcSB9KTsKbGV0IHVybCA9IG5ldyBVUkwocmVxLnVybCk7CiAgICAgICAgICBjb25zb2xlLmxvZygndXJsJywgdXJsKTsKCmlmKCF1cmwucHJvdG9jb2wuc3RhcnRzV2l0aCgnaHR0cCcpKSB7CiAgdHR5U2V0UmF3KDApOwogIHNldFJlYWRIYW5kbGVyKDAsICgpID0+IHsKbGV0IGIgPSBzdGRpbi5nZXRCeXRlKCk7CnN0ZG91dC5wdXRCeXRlKGIpOwppZihiID09IDEzKXN0ZG91dC5wdXRCeXRlKDEwKTsKCnN0ZG91dC5mbHVzaCgpOwogIH0pOwp9CgogICAgICAgIH0sCiAgICAgICAgb25DbG9zZSh3cywgcmVhc29uKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnb25DbG9zZScsIHsgd3MsIHJlYXNvbiB9KTsKICAgICAgICAgIGV4aXQoMCk7CiAgICAgICAgfSwKICAgICAgICBvbkVycm9yKHdzLCBlcnJvcikgewogICAgICAgICAgY29uc29sZS5sb2coJ29uRXJyb3InLCB7IHdzLCBlcnJvciB9KTsKICAgICAgICAgIGV4aXQoMSk7CiAgICAgICAgfSwKICAgICAgICBvbk1lc3NhZ2Uod3MsIG1zZykgewogICAgICAgICAgY29uc29sZS5sb2coJ29uTWVzc2FnZScsIHsgd3MsIG1zZyB9KTsKICAgICAgICAgIHB1dHMobXNnKTsKICAgICAgICAgIHdzLmNsb3NlKDEwMDApOwogICAgICAgIH0sCiAgICAgICAgb25IdHRwKHJlcSwgcmVzcCkgewogICAgICAgICAgY29uc29sZS5sb2coJ29uSHR0cCcsIHsgcmVxLCByZXNwIH0pOwogICAgICAgICAgbGV0IGJvZHkgPSByZXNwLnRleHQoKTsKCiAgICAgICAgICBwdXRzKGJvZHkpOwogICAgICAgIH0KICAgICAgfSwKICAgICAgZGVidWcKICAgICk7CiAgfQp9Cgp0cnkgewogIG1haW4oLi4uc2NyaXB0QXJncy5zbGljZSgxKSk7Cn0gY2F0Y2goZXJyb3IpIHsKICBjb25zb2xlLmxvZyhgRkFJTDogJHtlcnJvciAmJiBlcnJvci5tZXNzYWdlfVxuJHtlcnJvciAmJiBlcnJvci5zdGFja31gKTsKICBleGl0KDEpOwp9CgAAAAAAAAAAUQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgMAAAAAAAASAwAAAAAAAAAAAAAAgFtA"
				],
				[
					637,
					1,
					"left_delete",
					null,
					"AQAAAGcDAAAAAAAAZwMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAaAMAAAAAAABoAwAAAAAAAAAAAAAAYHNA"
				],
				[
					651,
					1,
					"insert",
					{
						"characters": "b=10;"
					},
					"BQAAAFQDAAAAAAAAVQMAAAAAAAAAAAAAVQMAAAAAAABWAwAAAAAAAAAAAABWAwAAAAAAAFcDAAAAAAAAAAAAAFcDAAAAAAAAWAMAAAAAAAAAAAAAWAMAAAAAAABZAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAMAAAAAAABUAwAAAAAAAAAAAAAAAPC/"
				],
				[
					652,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFkDAAAAAAAAWgMAAAAAAAAAAAAAWgMAAAAAAABoAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQMAAAAAAABZAwAAAAAAAAAAAAAAAPC/"
				],
				[
					654,
					1,
					"cut",
					null,
					"AQAAAEgDAAAAAAAASAMAAAAAAAAgAAAAaWYoYiA9PSAxMykgYj0xMDsKICAgICAgICAgICAgICA",
					"AQAAAAAAAAABAAAAaAMAAAAAAABIAwAAAAAAAAAAAAAAgGFA"
				],
				[
					656,
					1,
					"paste",
					null,
					"AQAAACcDAAAAAAAARwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwMAAAAAAAAnAwAAAAAAAAAAAAAAgGFA"
				],
				[
					659,
					1,
					"left_delete",
					null,
					"AQAAAGgDAAAAAAAAaAMAAAAAAAAiAAAAc3Rkb3V0LnB1dEJ5dGUoMTApOwogICAgICAgICAgICAgIA",
					"AQAAAAAAAAABAAAAaAMAAAAAAACKAwAAAAAAAAAAAAAAgGFA"
				],
				[
					664,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABCBgAAaW1wb3J0IHsgZXhpdCwgcHV0cyB9IGZyb20gJ3N0ZCc7CmltcG9ydCB7IFVSTCB9IGZyb20gJ25ldCc7CmltcG9ydCBDbGllbnQgZnJvbSAnLi9jbGllbnQuanMnOwppbXBvcnQgeyBjbG9zZSwgZXhlYywgb3BlbiwgT19SRFdSLCBzZXRSZWFkSGFuZGxlciwgc2V0V3JpdGVIYW5kbGVyLCBXb3JrZXIsIHR0eVNldFJhdyB9IGZyb20gJ29zJzsKaW1wb3J0IHsgaW4gYXMgc3RkaW4sIG91dCBhcyBzdGRvdXQgfSBmcm9tICdzdGQnOwoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgY29uc3QgZGVidWcgPSBhcmdzLmluZGV4T2YoJy14JykgIT0gLTE7CiAgYXJncyA9IGFyZ3MuZmlsdGVyKGFyZyA9PiAhL14tW3hdLy50ZXN0KGFyZykpOwoKICBpZihhcmdzLmxlbmd0aCA9PSAwKSBhcmdzLnB1c2goJ2h0dHBzOi8vbG9jYWxob3N0L2RlYnVnZ2VyLmh0bWwnKTsKCiAgZm9yKGxldCBhcmcgb2YgYXJncykgewogICAgQ2xpZW50KAogICAgICBhcmcsCiAgICAgIHsKICAgICAgICBvbkNvbm5lY3Qod3MsIHJlcSkgewogICAgICAgICAgY29uc29sZS5sb2coJ29uQ29ubmVjdCcsIHsgd3MsIHJlcSB9KTsKICAgICAgICAgIGxldCB1cmwgPSBuZXcgVVJMKHJlcS51cmwpOwogICAgICAgICAgY29uc29sZS5sb2coJ3VybCcsIHVybCk7CgogICAgICAgICAgaWYoIXVybC5wcm90b2NvbC5zdGFydHNXaXRoKCdodHRwJykpIHsKICAgICAgICAgICAgdHR5U2V0UmF3KDApOwogICAgICAgICAgICBzZXRSZWFkSGFuZGxlcigwLCAoKSA9PiB7CiAgICAgICAgICAgICAgbGV0IGIgPSBzdGRpbi5nZXRCeXRlKCk7CiAgICAgICAgICAgICAgaWYoYiA9PSAxMykgYj0xMDsKICAgICAgICAgICAgICBzdGRvdXQucHV0Qnl0ZShiKTsKICAgICAgICAgICAgICBzdGRvdXQuZmx1c2goKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBvbkNsb3NlKHdzLCByZWFzb24pIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdvbkNsb3NlJywgeyB3cywgcmVhc29uIH0pOwogICAgICAgICAgZXhpdCgwKTsKICAgICAgICB9LAogICAgICAgIG9uRXJyb3Iod3MsIGVycm9yKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnb25FcnJvcicsIHsgd3MsIGVycm9yIH0pOwogICAgICAgICAgZXhpdCgxKTsKICAgICAgICB9LAogICAgICAgIG9uTWVzc2FnZSh3cywgbXNnKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnb25NZXNzYWdlJywgeyB3cywgbXNnIH0pOwogICAgICAgICAgcHV0cyhtc2cpOwogICAgICAgICAgd3MuY2xvc2UoMTAwMCk7CiAgICAgICAgfSwKICAgICAgICBvbkh0dHAocmVxLCByZXNwKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnb25IdHRwJywgeyByZXEsIHJlc3AgfSk7CiAgICAgICAgICBsZXQgYm9keSA9IHJlc3AudGV4dCgpOwoKICAgICAgICAgIHB1dHMoYm9keSk7CiAgICAgICAgfQogICAgICB9LAogICAgICBkZWJ1ZwogICAgKTsKICB9Cn0KCnRyeSB7CiAgbWFpbiguLi5zY3JpcHRBcmdzLnNsaWNlKDEpKTsKfSBjYXRjaChlcnJvcikgewogIGNvbnNvbGUubG9nKGBGQUlMOiAke2Vycm9yICYmIGVycm9yLm1lc3NhZ2V9XG4ke2Vycm9yICYmIGVycm9yLnN0YWNrfWApOwogIGV4aXQoMSk7Cn0KAAAAAAAAAABEBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAMAAAAAAABoAwAAAAAAAAAAAAAAAPC/"
				],
				[
					669,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABgDAAAAAAAAGQMAAAAAAAAAAAAAGQMAAAAAAAAnAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAMAAAAAAAAYAwAAAAAAAP///////+9/"
				],
				[
					672,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAACcDAAAAAAAAKAMAAAAAAAAAAAAAKAMAAAAAAAApAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwMAAAAAAAAnAwAAAAAAAAAAAAAAAPC/"
				],
				[
					673,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACkDAAAAAAAAKgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQMAAAAAAAApAwAAAAAAAAAAAAAAAPC/"
				],
				[
					674,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACoDAAAAAAAALAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgMAAAAAAAAqAwAAAAAAAAAAAAAAAPC/"
				],
				[
					675,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAACsDAAAAAAAALAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwMAAAAAAAArAwAAAAAAAAAAAAAAAPC/"
				],
				[
					676,
					1,
					"insert",
					{
						"characters": " <"
					},
					"AgAAACwDAAAAAAAALQMAAAAAAAAAAAAALQMAAAAAAAAuAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAMAAAAAAAAsAwAAAAAAAAAAAAAAAPC/"
				],
				[
					677,
					1,
					"insert",
					{
						"characters": " 32"
					},
					"AwAAAC4DAAAAAAAALwMAAAAAAAAAAAAALwMAAAAAAAAwAwAAAAAAAAAAAAAwAwAAAAAAADEDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgMAAAAAAAAuAwAAAAAAAAAAAAAAAPC/"
				],
				[
					679,
					1,
					"insert",
					{
						"characters": " conso"
					},
					"BgAAADIDAAAAAAAAMwMAAAAAAAAAAAAAMwMAAAAAAAA0AwAAAAAAAAAAAAA0AwAAAAAAADUDAAAAAAAAAAAAADUDAAAAAAAANgMAAAAAAAAAAAAANgMAAAAAAAA3AwAAAAAAAAAAAAA3AwAAAAAAADgDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgMAAAAAAAAyAwAAAAAAAAAAAAAAAPC/"
				],
				[
					680,
					5,
					"left_delete",
					null,
					"BQAAADcDAAAAAAAANwMAAAAAAAABAAAAbzYDAAAAAAAANgMAAAAAAAABAAAAczUDAAAAAAAANQMAAAAAAAABAAAAbjQDAAAAAAAANAMAAAAAAAABAAAAbzMDAAAAAAAAMwMAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAOAMAAAAAAAA4AwAAAAAAAAAAAAAAAPC/"
				],
				[
					681,
					1,
					"insert",
					{
						"characters": "stdout."
					},
					"BwAAADMDAAAAAAAANAMAAAAAAAAAAAAANAMAAAAAAAA1AwAAAAAAAAAAAAA1AwAAAAAAADYDAAAAAAAAAAAAADYDAAAAAAAANwMAAAAAAAAAAAAANwMAAAAAAAA4AwAAAAAAAAAAAAA4AwAAAAAAADkDAAAAAAAAAAAAADkDAAAAAAAAOgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwMAAAAAAAAzAwAAAAAAAAAAAAAAAPC/"
				],
				[
					682,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAADoDAAAAAAAAOwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgMAAAAAAAA6AwAAAAAAAAAAAAAAAPC/"
				],
				[
					683,
					1,
					"left_delete",
					null,
					"AQAAADoDAAAAAAAAOgMAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAOwMAAAAAAAA7AwAAAAAAAAAAAAAAAPC/"
				],
				[
					684,
					1,
					"insert",
					{
						"characters": "puts"
					},
					"BAAAADoDAAAAAAAAOwMAAAAAAAAAAAAAOwMAAAAAAAA8AwAAAAAAAAAAAAA8AwAAAAAAAD0DAAAAAAAAAAAAAD0DAAAAAAAAPgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgMAAAAAAAA6AwAAAAAAAAAAAAAAAPC/"
				],
				[
					685,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAD4DAAAAAAAAQAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgMAAAAAAAA+AwAAAAAAAAAAAAAAAPC/"
				],
				[
					686,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAD8DAAAAAAAAQQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwMAAAAAAAA/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					687,
					1,
					"insert",
					{
						"characters": "char:"
					},
					"BQAAAEADAAAAAAAAQQMAAAAAAAAAAAAAQQMAAAAAAABCAwAAAAAAAAAAAABCAwAAAAAAAEMDAAAAAAAAAAAAAEMDAAAAAAAARAMAAAAAAAAAAAAARAMAAAAAAABFAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAMAAAAAAABAAwAAAAAAAAAAAAAAAPC/"
				],
				[
					688,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEUDAAAAAAAARgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQMAAAAAAABFAwAAAAAAAAAAAAAAAPC/"
				],
				[
					690,
					1,
					"insert",
					{
						"characters": "+b"
					},
					"AgAAAEcDAAAAAAAASAMAAAAAAAAAAAAASAMAAAAAAABJAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwMAAAAAAABHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					692,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEoDAAAAAAAASwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgMAAAAAAABKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					704,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAEkDAAAAAAAASgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQMAAAAAAABJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					705,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAEoDAAAAAAAATAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgMAAAAAAABKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					706,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAEoDAAAAAAAASgMAAAAAAAABAAAAJ0oDAAAAAAAASgMAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAASwMAAAAAAABLAwAAAAAAAAAAAAAAAPC/"
				],
				[
					707,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAEoDAAAAAAAATAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgMAAAAAAABKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					708,
					1,
					"insert",
					{
						"characters": "\\n"
					},
					"AgAAAEsDAAAAAAAATAMAAAAAAAAAAAAATAMAAAAAAABNAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwMAAAAAAABLAwAAAAAAAAAAAAAAAPC/"
				],
				[
					712,
					5,
					"left_delete",
					null,
					"BQAAAE0DAAAAAAAATQMAAAAAAAABAAAAIkwDAAAAAAAATAMAAAAAAAABAAAAbksDAAAAAAAASwMAAAAAAAABAAAAXEoDAAAAAAAASgMAAAAAAAABAAAAIkkDAAAAAAAASQMAAAAAAAABAAAAKw",
					"AQAAAAAAAAABAAAATgMAAAAAAABOAwAAAAAAAAAAAAAAAPC/"
				],
				[
					714,
					1,
					"insert",
					{
						"characters": " ¬¨|"
					},
					"AwAAADEDAAAAAAAAMgMAAAAAAAAAAAAAMgMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADQDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQMAAAAAAAAxAwAAAAAAAAAAAAAAAPC/"
				],
				[
					715,
					2,
					"left_delete",
					null,
					"AgAAADMDAAAAAAAAMwMAAAAAAAABAAAAfDIDAAAAAAAAMgMAAAAAAAACAAAAwqw",
					"AQAAAAAAAAABAAAANAMAAAAAAAA0AwAAAAAAAAAAAAAAAPC/"
				],
				[
					716,
					1,
					"insert",
					{
						"characters": "||"
					},
					"AgAAADIDAAAAAAAAMwMAAAAAAAAAAAAAMwMAAAAAAAA0AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgMAAAAAAAAyAwAAAAAAAAAAAAAAAPC/"
				],
				[
					717,
					1,
					"insert",
					{
						"characters": " b"
					},
					"AgAAADQDAAAAAAAANQMAAAAAAAAAAAAANQMAAAAAAAA2AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAMAAAAAAAA0AwAAAAAAAAAAAAAAAPC/"
				],
				[
					718,
					1,
					"insert",
					{
						"characters": " >"
					},
					"AgAAADYDAAAAAAAANwMAAAAAAAAAAAAANwMAAAAAAAA4AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgMAAAAAAAA2AwAAAAAAAAAAAAAAAPC/"
				],
				[
					719,
					1,
					"insert",
					{
						"characters": " S"
					},
					"AgAAADgDAAAAAAAAOQMAAAAAAAAAAAAAOQMAAAAAAAA6AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAMAAAAAAAA4AwAAAAAAAAAAAAAAAPC/"
				],
				[
					720,
					1,
					"left_delete",
					null,
					"AQAAADkDAAAAAAAAOQMAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAAOgMAAAAAAAA6AwAAAAAAAAAAAAAAAPC/"
				],
				[
					721,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAADkDAAAAAAAAOwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQMAAAAAAAA5AwAAAAAAAAAAAAAAAPC/"
				],
				[
					722,
					1,
					"insert",
					{
						"characters": "z"
					},
					"AQAAADoDAAAAAAAAOwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgMAAAAAAAA6AwAAAAAAAAAAAAAAAPC/"
				],
				[
					724,
					1,
					"insert",
					{
						"characters": ".charCodeAt"
					},
					"CwAAADwDAAAAAAAAPQMAAAAAAAAAAAAAPQMAAAAAAAA+AwAAAAAAAAAAAAA+AwAAAAAAAD8DAAAAAAAAAAAAAD8DAAAAAAAAQAMAAAAAAAAAAAAAQAMAAAAAAABBAwAAAAAAAAAAAABBAwAAAAAAAEIDAAAAAAAAAAAAAEIDAAAAAAAAQwMAAAAAAAAAAAAAQwMAAAAAAABEAwAAAAAAAAAAAABEAwAAAAAAAEUDAAAAAAAAAAAAAEUDAAAAAAAARgMAAAAAAAAAAAAARgMAAAAAAABHAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAMAAAAAAAA8AwAAAAAAAAAAAAAAAPC/"
				],
				[
					725,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEcDAAAAAAAASQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwMAAAAAAABHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					726,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAEgDAAAAAAAASQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAMAAAAAAABIAwAAAAAAAAAAAAAAAPC/"
				],
				[
					743,
					1,
					"cut",
					null,
					"AQAAAGUDAAAAAAAAZQMAAAAAAAAiAAAAICAgICAgICAgICAgICBpZihiID09IDEzKSBiID0gMTA7Cg",
					"AQAAAAAAAAABAAAAhwMAAAAAAABlAwAAAAAAAAAAAAAAAAAA"
				],
				[
					744,
					2,
					"paste",
					null,
					"AgAAAGUDAAAAAAAAhwMAAAAAAAAAAAAAhwMAAAAAAACpAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQMAAAAAAABlAwAAAAAAAAAAAAAAAPC/"
				],
				[
					747,
					1,
					"insert",
					{
						"characters": "else"
					},
					"BAAAAJQDAAAAAAAAlQMAAAAAAAAAAAAAlQMAAAAAAACWAwAAAAAAAAAAAACWAwAAAAAAAJcDAAAAAAAAAAAAAJcDAAAAAAAAmAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAMAAAAAAACUAwAAAAAAAAAAAAAAAPC/"
				],
				[
					749,
					1,
					"right_delete",
					null,
					"AQAAAKIDAAAAAAAAogMAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAogMAAAAAAACiAwAAAAAAAAAAAAAAAPC/"
				],
				[
					750,
					1,
					"insert",
					{
						"characters": "27"
					},
					"AgAAAKIDAAAAAAAAowMAAAAAAAAAAAAAowMAAAAAAACkAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogMAAAAAAACiAwAAAAAAAAAAAAAAAPC/"
				],
				[
					753,
					2,
					"left_delete",
					null,
					"AgAAAKsDAAAAAAAAqwMAAAAAAAABAAAAMKoDAAAAAAAAqgMAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAArAMAAAAAAACsAwAAAAAAAAAAAAAAAPC/"
				],
				[
					756,
					1,
					"left_delete",
					null,
					"AQAAAKkDAAAAAAAAqQMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAqgMAAAAAAACqAwAAAAAAAAAAAAAAAPC/"
				],
				[
					757,
					1,
					"insert",
					{
						"characters": " 8s"
					},
					"AwAAAKkDAAAAAAAAqgMAAAAAAAAAAAAAqgMAAAAAAACrAwAAAAAAAAAAAACrAwAAAAAAAKwDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQMAAAAAAACpAwAAAAAAAAAAAAAAAPC/"
				],
				[
					758,
					1,
					"left_delete",
					null,
					"AQAAAKsDAAAAAAAAqwMAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAArAMAAAAAAACsAwAAAAAAAAAAAAAAAPC/"
				],
				[
					767,
					1,
					"cut",
					null,
					"AQAAABkDAAAAAAAAGQMAAAAAAABMAAAAICAgICAgICAgICAgICBpZiAoYiA8IDMyIHx8IGIgPiAneicuY2hhckNvZGVBdCgwKSkgc3Rkb3V0LnB1dHMoImNoYXI6ICIrYik7Cg",
					"AQAAAAAAAAABAAAAGQMAAAAAAABlAwAAAAAAAAAAAAAAAAAA"
				],
				[
					769,
					1,
					"paste",
					null,
					"AQAAAGEDAAAAAAAArQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQMAAAAAAABhAwAAAAAAAAAAAAAAAAAA"
				],
				[
					771,
					1,
					"insert",
					{
						"characters": "else"
					},
					"BAAAAGEDAAAAAAAAYgMAAAAAAAAAAAAAYgMAAAAAAABjAwAAAAAAAAAAAABjAwAAAAAAAGQDAAAAAAAAAAAAAGQDAAAAAAAAZQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQMAAAAAAABhAwAAAAAAAAAAAAAAAAAA"
				],
				[
					776,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC6BgAAaW1wb3J0IHsgZXhpdCwgcHV0cyB9IGZyb20gJ3N0ZCc7CmltcG9ydCB7IFVSTCB9IGZyb20gJ25ldCc7CmltcG9ydCBDbGllbnQgZnJvbSAnLi9jbGllbnQuanMnOwppbXBvcnQgeyBjbG9zZSwgZXhlYywgb3BlbiwgT19SRFdSLCBzZXRSZWFkSGFuZGxlciwgc2V0V3JpdGVIYW5kbGVyLCBXb3JrZXIsIHR0eVNldFJhdyB9IGZyb20gJ29zJzsKaW1wb3J0IHsgaW4gYXMgc3RkaW4sIG91dCBhcyBzdGRvdXQgfSBmcm9tICdzdGQnOwoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgY29uc3QgZGVidWcgPSBhcmdzLmluZGV4T2YoJy14JykgIT0gLTE7CiAgYXJncyA9IGFyZ3MuZmlsdGVyKGFyZyA9PiAhL14tW3hdLy50ZXN0KGFyZykpOwoKICBpZihhcmdzLmxlbmd0aCA9PSAwKSBhcmdzLnB1c2goJ2h0dHBzOi8vbG9jYWxob3N0L2RlYnVnZ2VyLmh0bWwnKTsKCiAgZm9yKGxldCBhcmcgb2YgYXJncykgewogICAgQ2xpZW50KAogICAgICBhcmcsCiAgICAgIHsKICAgICAgICBvbkNvbm5lY3Qod3MsIHJlcSkgewogICAgICAgICAgY29uc29sZS5sb2coJ29uQ29ubmVjdCcsIHsgd3MsIHJlcSB9KTsKICAgICAgICAgIGxldCB1cmwgPSBuZXcgVVJMKHJlcS51cmwpOwogICAgICAgICAgY29uc29sZS5sb2coJ3VybCcsIHVybCk7CgogICAgICAgICAgaWYoIXVybC5wcm90b2NvbC5zdGFydHNXaXRoKCdodHRwJykpIHsKICAgICAgICAgICAgdHR5U2V0UmF3KDApOwogICAgICAgICAgICBzZXRSZWFkSGFuZGxlcigwLCAoKSA9PiB7CiAgICAgICAgICAgICAgbGV0IGIgPSBzdGRpbi5nZXRCeXRlKCk7CiAgICAgICAgICAgICAgaWYoYiA9PSAxMykgYiA9IDEwOwogICAgICAgICAgICAgZWxzZSBpZihiID09IDEyNykgYiA9IDg7CmVsc2UgICAgICAgICAgICAgIGlmIChiIDwgMzIgfHwgYiA+ICd6Jy5jaGFyQ29kZUF0KDApKSBzdGRvdXQucHV0cygiY2hhcjogIitiKTsKICAgICAgICAgICAgICBzdGRvdXQucHV0Qnl0ZShiKTsKICAgICAgICAgICAgICBzdGRvdXQuZmx1c2goKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBvbkNsb3NlKHdzLCByZWFzb24pIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdvbkNsb3NlJywgeyB3cywgcmVhc29uIH0pOwogICAgICAgICAgZXhpdCgwKTsKICAgICAgICB9LAogICAgICAgIG9uRXJyb3Iod3MsIGVycm9yKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnb25FcnJvcicsIHsgd3MsIGVycm9yIH0pOwogICAgICAgICAgZXhpdCgxKTsKICAgICAgICB9LAogICAgICAgIG9uTWVzc2FnZSh3cywgbXNnKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnb25NZXNzYWdlJywgeyB3cywgbXNnIH0pOwogICAgICAgICAgcHV0cyhtc2cpOwogICAgICAgICAgd3MuY2xvc2UoMTAwMCk7CiAgICAgICAgfSwKICAgICAgICBvbkh0dHAocmVxLCByZXNwKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnb25IdHRwJywgeyByZXEsIHJlc3AgfSk7CiAgICAgICAgICBsZXQgYm9keSA9IHJlc3AudGV4dCgpOwoKICAgICAgICAgIHB1dHMoYm9keSk7CiAgICAgICAgfQogICAgICB9LAogICAgICBkZWJ1ZwogICAgKTsKICB9Cn0KCnRyeSB7CiAgbWFpbiguLi5zY3JpcHRBcmdzLnNsaWNlKDEpKTsKfSBjYXRjaChlcnJvcikgewogIGNvbnNvbGUubG9nKGBGQUlMOiAke2Vycm9yICYmIGVycm9yLm1lc3NhZ2V9XG4ke2Vycm9yICYmIGVycm9yLnN0YWNrfWApOwogIGV4aXQoMSk7Cn0KAAAAAAAAAAC9BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQMAAAAAAABlAwAAAAAAAAAAAAAAAPC/"
				],
				[
					813,
					1,
					"insert",
					{
						"characters": "\n\nconst"
					},
					"CgAAAH8CAAAAAAAAgAIAAAAAAAAAAAAAgAIAAAAAAACKAgAAAAAAAAAAAACKAgAAAAAAAIsCAAAAAAAAAAAAAIsCAAAAAAAAlQIAAAAAAAAAAAAAgAIAAAAAAACAAgAAAAAAAAoAAAAgICAgICAgICAgiwIAAAAAAACMAgAAAAAAAAAAAACMAgAAAAAAAI0CAAAAAAAAAAAAAI0CAAAAAAAAjgIAAAAAAAAAAAAAjgIAAAAAAACPAgAAAAAAAAAAAACPAgAAAAAAAJACAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwIAAAAAAAB/AgAAAAAAAP///////+9/"
				],
				[
					814,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJACAAAAAAAAkQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAIAAAAAAACQAgAAAAAAAAAAAAAAAPC/"
				],
				[
					815,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJECAAAAAAAAkwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQIAAAAAAACRAgAAAAAAAAAAAAAAAPC/"
				],
				[
					816,
					1,
					"insert",
					{
						"characters": "protocol"
					},
					"CAAAAJICAAAAAAAAkwIAAAAAAAAAAAAAkwIAAAAAAACUAgAAAAAAAAAAAACUAgAAAAAAAJUCAAAAAAAAAAAAAJUCAAAAAAAAlgIAAAAAAAAAAAAAlgIAAAAAAACXAgAAAAAAAAAAAACXAgAAAAAAAJgCAAAAAAAAAAAAAJgCAAAAAAAAmQIAAAAAAAAAAAAAmQIAAAAAAACaAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgIAAAAAAACSAgAAAAAAAAAAAAAAAPC/"
				],
				[
					818,
					1,
					"insert",
					{
						"characters": "=url"
					},
					"BAAAAJsCAAAAAAAAnAIAAAAAAAAAAAAAnAIAAAAAAACdAgAAAAAAAAAAAACdAgAAAAAAAJ4CAAAAAAAAAAAAAJ4CAAAAAAAAnwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwIAAAAAAACbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					819,
					3,
					"left_delete",
					null,
					"AwAAAJ4CAAAAAAAAngIAAAAAAAABAAAAbJ0CAAAAAAAAnQIAAAAAAAABAAAAcpwCAAAAAAAAnAIAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAnwIAAAAAAACfAgAAAAAAAAAAAAAAAPC/"
				],
				[
					821,
					1,
					"cut",
					null,
					"AQAAAIsCAAAAAAAAiwIAAAAAAAARAAAAY29uc3Qge3Byb3RvY29sfT0",
					"AQAAAAAAAAABAAAAnAIAAAAAAACLAgAAAAAAAAAAAAAAAFlA"
				],
				[
					823,
					1,
					"paste",
					null,
					"AQAAAEECAAAAAAAAUgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQIAAAAAAABBAgAAAAAAAAAAAAAAAFlA"
				],
				[
					825,
					1,
					"cut",
					null,
					"AQAAAFICAAAAAAAAUgIAAAAAAAAJAAAAbGV0IHVybCA9",
					"AQAAAAAAAAABAAAAUgIAAAAAAABbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					828,
					3,
					"right_delete",
					null,
					"BAAAAIICAAAAAAAAggIAAAAAAAABAAAAdYgCAAAAAAAAiAIAAAAAAAAKAAAAICAgICAgICAgIIICAAAAAAAAggIAAAAAAAABAAAAcoICAAAAAAAAggIAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAggIAAAAAAACCAgAAAAAAAAAAAAAAAPC/"
				],
				[
					829,
					1,
					"insert",
					{
						"characters": "protocol"
					},
					"CAAAAIICAAAAAAAAgwIAAAAAAAAAAAAAgwIAAAAAAACEAgAAAAAAAAAAAACEAgAAAAAAAIUCAAAAAAAAAAAAAIUCAAAAAAAAhgIAAAAAAAAAAAAAhgIAAAAAAACHAgAAAAAAAAAAAACHAgAAAAAAAIgCAAAAAAAAAAAAAIgCAAAAAAAAiQIAAAAAAAAAAAAAiQIAAAAAAACKAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggIAAAAAAACCAgAAAAAAAAAAAAAAAPC/"
				],
				[
					841,
					1,
					"paste",
					null,
					"AgAAAHwCAAAAAAAAhAIAAAAAAAAAAAAAhAIAAAAAAACEAgAAAAAAAAMAAAB1cmw",
					"AQAAAAAAAAABAAAAfAIAAAAAAAB/AgAAAAAAAAAAAAAAAPC/"
				],
				[
					846,
					2,
					"right_delete",
					null,
					"AgAAAKMCAAAAAAAAowIAAAAAAAADAAAAdXJsowIAAAAAAACjAgAAAAAAAAEAAAAu",
					"AQAAAAAAAAABAAAAowIAAAAAAACmAgAAAAAAAAAAAAAAAPC/"
				],
				[
					858,
					1,
					"left_delete",
					null,
					"AQAAAJMCAAAAAAAAkwIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAlAIAAAAAAACUAgAAAAAAAAAAAAAAAAAA"
				],
				[
					861,
					1,
					"left_delete",
					null,
					"AQAAAJICAAAAAAAAkgIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAkwIAAAAAAACTAgAAAAAAAAAAAAAAAPC/"
				],
				[
					881,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"CAAAAL8CAAAAAAAAwAIAAAAAAAAAAAAAwAIAAAAAAADKAgAAAAAAAAAAAADKAgAAAAAAAMwCAAAAAAAAAAAAAMwCAAAAAAAAzQIAAAAAAAAAAAAAzQIAAAAAAADZAgAAAAAAAAAAAADAAgAAAAAAAMACAAAAAAAADAAAACAgICAgICAgICAgIM0CAAAAAAAAzgIAAAAAAAAAAAAAzgIAAAAAAADPAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwIAAAAAAAC/AgAAAAAAAP///////+9/"
				],
				[
					882,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAM8CAAAAAAAA0QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwIAAAAAAADPAgAAAAAAAAAAAAAAAPC/"
				],
				[
					883,
					1,
					"insert",
					{
						"characters": "protocol.starts"
					},
					"DwAAANACAAAAAAAA0QIAAAAAAAAAAAAA0QIAAAAAAADSAgAAAAAAAAAAAADSAgAAAAAAANMCAAAAAAAAAAAAANMCAAAAAAAA1AIAAAAAAAAAAAAA1AIAAAAAAADVAgAAAAAAAAAAAADVAgAAAAAAANYCAAAAAAAAAAAAANYCAAAAAAAA1wIAAAAAAAAAAAAA1wIAAAAAAADYAgAAAAAAAAAAAADYAgAAAAAAANkCAAAAAAAAAAAAANkCAAAAAAAA2gIAAAAAAAAAAAAA2gIAAAAAAADbAgAAAAAAAAAAAADbAgAAAAAAANwCAAAAAAAAAAAAANwCAAAAAAAA3QIAAAAAAAAAAAAA3QIAAAAAAADeAgAAAAAAAAAAAADeAgAAAAAAAN8CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AIAAAAAAADQAgAAAAAAAAAAAAAAAPC/"
				],
				[
					884,
					1,
					"insert",
					{
						"characters": "With"
					},
					"BAAAAN8CAAAAAAAA4AIAAAAAAAAAAAAA4AIAAAAAAADhAgAAAAAAAAAAAADhAgAAAAAAAOICAAAAAAAAAAAAAOICAAAAAAAA4wIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wIAAAAAAADfAgAAAAAAAAAAAAAAAPC/"
				],
				[
					885,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOMCAAAAAAAA5QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wIAAAAAAADjAgAAAAAAAAAAAAAAAPC/"
				],
				[
					886,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAOQCAAAAAAAA5gIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AIAAAAAAADkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					887,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AgAAAOUCAAAAAAAA5gIAAAAAAAAAAAAA5gIAAAAAAADnAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QIAAAAAAADlAgAAAAAAAAAAAAAAAPC/"
				],
				[
					889,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOoCAAAAAAAA6wIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gIAAAAAAADqAgAAAAAAAAAAAAAAAPC/"
				],
				[
					890,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOsCAAAAAAAA7QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wIAAAAAAADrAgAAAAAAAAAAAAAAAPC/"
				],
				[
					891,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAOwCAAAAAAAA7QIAAAAAAAAAAAAA7QIAAAAAAAD5AgAAAAAAAAAAAAD5AgAAAAAAAPoCAAAAAAAAAAAAAPoCAAAAAAAABgMAAAAAAAAAAAAA7QIAAAAAAADtAgAAAAAAAAwAAAAgICAgICAgICAgICDtAgAAAAAAAPsCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AIAAAAAAADsAgAAAAAAAAAAAAAAAPC/"
				],
				[
					893,
					1,
					"insert",
					{
						"characters": " else"
					},
					"BgAAAAkDAAAAAAAACgMAAAAAAAAAAAAA7QIAAAAAAADtAgAAAAAAAA4AAAAgICAgICAgICAgICAgIPwCAAAAAAAA/QIAAAAAAAAAAAAA/QIAAAAAAAD+AgAAAAAAAAAAAAD+AgAAAAAAAP8CAAAAAAAAAAAAAP8CAAAAAAAAAAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQMAAAAAAAAJAwAAAAAAAAAAAAAAgGFA"
				],
				[
					894,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAADAAAAAAAAAQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAPC/"
				],
				[
					895,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAEDAAAAAAAAAwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQMAAAAAAAABAwAAAAAAAAAAAAAAAPC/"
				],
				[
					896,
					1,
					"right_delete",
					null,
					"AQAAAAIDAAAAAAAAAgMAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAAgMAAAAAAAACAwAAAAAAAAAAAAAAAPC/"
				],
				[
					899,
					1,
					"insert",
					{
						"characters": "\n]}"
					},
					"BAAAAFMEAAAAAAAAVAQAAAAAAAAAAAAAVAQAAAAAAABgBAAAAAAAAAAAAABgBAAAAAAAAGEEAAAAAAAAAAAAAGEEAAAAAAAAYgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwQAAAAAAABTBAAAAAAAAAAAAAAAAGlA"
				],
				[
					900,
					2,
					"left_delete",
					null,
					"AgAAAGEEAAAAAAAAYQQAAAAAAAABAAAAfWAEAAAAAAAAYAQAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAYgQAAAAAAABiBAAAAAAAAAAAAAAAAPC/"
				],
				[
					901,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AwAAAGAEAAAAAAAAYQQAAAAAAAAAAAAAVAQAAAAAAABUBAAAAAAAAAwAAAAgICAgICAgICAgICBUBAAAAAAAAF4EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAQAAAAAAABgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					906,
					1,
					"cut",
					null,
					"AQAAACkDAAAAAAAAKQMAAAAAAAAqAQAAc2V0UmVhZEhhbmRsZXIoMCwgKCkgPT4gewogICAgICAgICAgICAgIGxldCBiID0gc3RkaW4uZ2V0Qnl0ZSgpOwogICAgICAgICAgICAgIGlmKGIgPT0gMTMpIGIgPSAxMDsKICAgICAgICAgICAgICBlbHNlIGlmKGIgPT0gMTI3KSBiID0gODsKICAgICAgICAgICAgICBlbHNlIGlmKGIgPCAzMiB8fCBiID4gJ3onLmNoYXJDb2RlQXQoMCkpIHN0ZG91dC5wdXRzKCdjaGFyOiAnICsgYik7CiAgICAgICAgICAgICAgc3Rkb3V0LnB1dEJ5dGUoYik7CiAgICAgICAgICAgICAgc3Rkb3V0LmZsdXNoKCk7CiAgICAgICAgICAgIH0pOw",
					"AQAAAAAAAAABAAAAUwQAAAAAAAApAwAAAAAAAAAAAAAAAF5A"
				],
				[
					907,
					1,
					"paste",
					null,
					"AQAAACkDAAAAAAAAUwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQMAAAAAAAApAwAAAAAAAAAAAAAAAPC/"
				],
				[
					909,
					1,
					"paste",
					null,
					"AQAAAO0CAAAAAAAAFwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QIAAAAAAADtAgAAAAAAAAAAAAAAwGJA"
				],
				[
					912,
					1,
					"left_delete",
					null,
					"AQAAABkDAAAAAAAAGQMAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAAGgMAAAAAAAAaAwAAAAAAAAAAAAAAAPC/"
				],
				[
					913,
					1,
					"insert",
					{
						"characters": "line"
					},
					"BAAAABkDAAAAAAAAGgMAAAAAAAAAAAAAGgMAAAAAAAAbAwAAAAAAAAAAAAAbAwAAAAAAABwDAAAAAAAAAAAAABwDAAAAAAAAHQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQMAAAAAAAAZAwAAAAAAAAAAAAAAAPC/"
				],
				[
					915,
					3,
					"right_delete",
					null,
					"AwAAACoDAAAAAAAAKgMAAAAAAAABAAAAeSoDAAAAAAAAKgMAAAAAAAABAAAAdCoDAAAAAAAAKgMAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAKgMAAAAAAAAqAwAAAAAAAAAAAAAAAPC/"
				],
				[
					916,
					1,
					"left_delete",
					null,
					"AQAAACkDAAAAAAAAKQMAAAAAAAABAAAAQg",
					"AQAAAAAAAAABAAAAKgMAAAAAAAAqAwAAAAAAAAAAAAAAAPC/"
				],
				[
					917,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAACkDAAAAAAAAKgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQMAAAAAAAApAwAAAAAAAAAAAAAAAPC/"
				],
				[
					920,
					1,
					"left_delete",
					null,
					"AQAAADIDAAAAAAAAMgMAAAAAAACbAAAAICAgICAgICAgIGlmKGIgPT0gMTMpIGIgPSAxMDsKICAgICAgICAgICAgICBlbHNlIGlmKGIgPT0gMTI3KSBiID0gODsKICAgICAgICAgICAgICBlbHNlIGlmKGIgPCAzMiB8fCBiID4gJ3onLmNoYXJDb2RlQXQoMCkpIHN0ZG91dC5wdXRzKCdjaGFyOiAnICsgYik7CiAgICA",
					"AQAAAAAAAAABAAAAMgMAAAAAAADNAwAAAAAAAAAAAAAAAERA"
				],
				[
					923,
					7,
					"left_delete",
					null,
					"BwAAAEkDAAAAAAAASQMAAAAAAAABAAAAZUgDAAAAAAAASAMAAAAAAAABAAAAdEcDAAAAAAAARwMAAAAAAAABAAAAeUYDAAAAAAAARgMAAAAAAAABAAAAQkUDAAAAAAAARQMAAAAAAAABAAAAdEQDAAAAAAAARAMAAAAAAAABAAAAdUMDAAAAAAAAQwMAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAASgMAAAAAAABKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					924,
					1,
					"insert",
					{
						"characters": "puts"
					},
					"BAAAAEMDAAAAAAAARAMAAAAAAAAAAAAARAMAAAAAAABFAwAAAAAAAAAAAABFAwAAAAAAAEYDAAAAAAAAAAAAAEYDAAAAAAAARwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwMAAAAAAABDAwAAAAAAAAAAAAAAAPC/"
				],
				[
					926,
					1,
					"right_delete",
					null,
					"AQAAAEgDAAAAAAAASAMAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAASAMAAAAAAABIAwAAAAAAAAAAAAAAAPC/"
				],
				[
					927,
					1,
					"insert",
					{
						"characters": "luibe"
					},
					"BQAAAEgDAAAAAAAASQMAAAAAAAAAAAAASQMAAAAAAABKAwAAAAAAAAAAAABKAwAAAAAAAEsDAAAAAAAAAAAAAEsDAAAAAAAATAMAAAAAAAAAAAAATAMAAAAAAABNAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAMAAAAAAABIAwAAAAAAAAAAAAAAAPC/"
				],
				[
					928,
					4,
					"left_delete",
					null,
					"BAAAAEwDAAAAAAAATAMAAAAAAAABAAAAZUsDAAAAAAAASwMAAAAAAAABAAAAYkoDAAAAAAAASgMAAAAAAAABAAAAaUkDAAAAAAAASQMAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAATQMAAAAAAABNAwAAAAAAAAAAAAAAAPC/"
				],
				[
					929,
					1,
					"insert",
					{
						"characters": "ine"
					},
					"AwAAAEkDAAAAAAAASgMAAAAAAAAAAAAASgMAAAAAAABLAwAAAAAAAAAAAABLAwAAAAAAAEwDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQMAAAAAAABJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					953,
					1,
					"left_delete",
					null,
					"AQAAACkDAAAAAAAAKQMAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAKgMAAAAAAAAqAwAAAAAAAAAAAAAAAPC/"
				],
				[
					954,
					1,
					"insert",
					{
						"characters": "line"
					},
					"BAAAACkDAAAAAAAAKgMAAAAAAAAAAAAAKgMAAAAAAAArAwAAAAAAAAAAAAArAwAAAAAAACwDAAAAAAAAAAAAACwDAAAAAAAALQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQMAAAAAAAApAwAAAAAAAAAAAAAAAPC/"
				],
				[
					961,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAD8DAAAAAAAAQAMAAAAAAAAAAAAAQAMAAAAAAABBAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwMAAAAAAAA/AwAAAAAAAAAAAAAAgGFA"
				],
				[
					964,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAGIDAAAAAAAAYwMAAAAAAAAAAAAAYwMAAAAAAABkAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgMAAAAAAABiAwAAAAAAAAAAAAAAAPC/"
				],
				[
					975,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADADAAAAAAAAMQMAAAAAAAAAAAAAMQMAAAAAAAA/AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAMAAAAAAAAwAwAAAAAAAP///////+9/"
				],
				[
					978,
					1,
					"insert",
					{
						"characters": "\nws.aew"
					},
					"CQAAAD8DAAAAAAAAQAMAAAAAAAAAAAAAQAMAAAAAAABOAwAAAAAAAAAAAAAxAwAAAAAAADEDAAAAAAAADgAAACAgICAgICAgICAgICAgQAMAAAAAAABBAwAAAAAAAAAAAABBAwAAAAAAAEIDAAAAAAAAAAAAAEIDAAAAAAAAQwMAAAAAAAAAAAAAQwMAAAAAAABEAwAAAAAAAAAAAABEAwAAAAAAAEUDAAAAAAAAAAAAAEUDAAAAAAAARgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwMAAAAAAAA/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					979,
					3,
					"left_delete",
					null,
					"AwAAAEUDAAAAAAAARQMAAAAAAAABAAAAd0QDAAAAAAAARAMAAAAAAAABAAAAZUMDAAAAAAAAQwMAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAARgMAAAAAAABGAwAAAAAAAAAAAAAAAPC/"
				],
				[
					980,
					1,
					"insert",
					{
						"characters": "send/"
					},
					"BQAAAEMDAAAAAAAARAMAAAAAAAAAAAAARAMAAAAAAABFAwAAAAAAAAAAAABFAwAAAAAAAEYDAAAAAAAAAAAAAEYDAAAAAAAARwMAAAAAAAAAAAAARwMAAAAAAABIAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwMAAAAAAABDAwAAAAAAAAAAAAAAAPC/"
				],
				[
					981,
					1,
					"left_delete",
					null,
					"AQAAAEcDAAAAAAAARwMAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAASAMAAAAAAABIAwAAAAAAAAAAAAAAAPC/"
				],
				[
					982,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEcDAAAAAAAASQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwMAAAAAAABHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					983,
					1,
					"insert",
					{
						"characters": "line"
					},
					"BAAAAEgDAAAAAAAASQMAAAAAAAAAAAAASQMAAAAAAABKAwAAAAAAAAAAAABKAwAAAAAAAEsDAAAAAAAAAAAAAEsDAAAAAAAATAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAMAAAAAAABIAwAAAAAAAAAAAAAAAPC/"
				],
				[
					985,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAE0DAAAAAAAATgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQMAAAAAAABNAwAAAAAAAAAAAAAAAPC/"
				],
				[
					994,
					1,
					"left_delete",
					null,
					"AQAAAE8DAAAAAAAATwMAAAAAAABDAAAAICAgICAgICAgICAgICAvL3N0ZG91dC5wdXRzKGxpbmUpOwogICAgICAgICAgICAgIC8vc3Rkb3V0LmZsdXNoKCk7Cg",
					"AQAAAAAAAAABAAAATwMAAAAAAACSAwAAAAAAAAAAAAAAAAAA"
				],
				[
					997,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACLBwAAaW1wb3J0IHsgZXhpdCwgcHV0cyB9IGZyb20gJ3N0ZCc7CmltcG9ydCB7IFVSTCB9IGZyb20gJ25ldCc7CmltcG9ydCBDbGllbnQgZnJvbSAnLi9jbGllbnQuanMnOwppbXBvcnQgeyBjbG9zZSwgZXhlYywgb3BlbiwgT19SRFdSLCBzZXRSZWFkSGFuZGxlciwgc2V0V3JpdGVIYW5kbGVyLCBXb3JrZXIsIHR0eVNldFJhdyB9IGZyb20gJ29zJzsKaW1wb3J0IHsgaW4gYXMgc3RkaW4sIG91dCBhcyBzdGRvdXQgfSBmcm9tICdzdGQnOwoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgY29uc3QgZGVidWcgPSBhcmdzLmluZGV4T2YoJy14JykgIT0gLTE7CiAgYXJncyA9IGFyZ3MuZmlsdGVyKGFyZyA9PiAhL14tW3hdLy50ZXN0KGFyZykpOwoKICBpZihhcmdzLmxlbmd0aCA9PSAwKSBhcmdzLnB1c2goJ2h0dHBzOi8vbG9jYWxob3N0L2RlYnVnZ2VyLmh0bWwnKTsKCiAgZm9yKGxldCBhcmcgb2YgYXJncykgewogICAgQ2xpZW50KAogICAgICBhcmcsCiAgICAgIHsKICAgICAgICBvbkNvbm5lY3Qod3MsIHJlcSkgewogICAgICAgICAgY29uc29sZS5sb2coJ29uQ29ubmVjdCcsIHsgd3MsIHJlcSB9KTsKICAgICAgICAgIGNvbnN0IHtwcm90b2NvbH09IG5ldyBVUkwocmVxLnVybCk7CiAgICAgICAgICBjb25zb2xlLmxvZygncHJvdG9jb2wnLCBwcm90b2NvbCk7CgogICAgICAgICAgaWYoIXByb3RvY29sLnN0YXJ0c1dpdGgoJ2h0dHAnKSkgewoKICAgICAgICAgICAgaWYocHJvdG9jb2wuc3RhcnRzV2l0aCgnd3MnKSkgewpzZXRSZWFkSGFuZGxlcigwLCAoKSA9PiB7CiAgICAgICAgICAgICAgbGV0IGxpbmUgPSBzdGRpbi5nZXRsaW5lKCk7CgogICAgICAgICAgICAgIHdzLnNlbmQobGluZSk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0dHlTZXRSYXcoMCk7CiAgICAgICAgICAgIHNldFJlYWRIYW5kbGVyKDAsICgpID0+IHsKICAgICAgICAgICAgICBsZXQgYiA9IHN0ZGluLmdldEJ5dGUoKTsKICAgICAgICAgICAgICBpZihiID09IDEzKSBiID0gMTA7CiAgICAgICAgICAgICAgZWxzZSBpZihiID09IDEyNykgYiA9IDg7CiAgICAgICAgICAgICAgZWxzZSBpZihiIDwgMzIgfHwgYiA+ICd6Jy5jaGFyQ29kZUF0KDApKSBzdGRvdXQucHV0cygnY2hhcjogJyArIGIpOwogICAgICAgICAgICAgIHN0ZG91dC5wdXRCeXRlKGIpOwogICAgICAgICAgICAgIHN0ZG91dC5mbHVzaCgpOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG9uQ2xvc2Uod3MsIHJlYXNvbikgewogICAgICAgICAgY29uc29sZS5sb2coJ29uQ2xvc2UnLCB7IHdzLCByZWFzb24gfSk7CiAgICAgICAgICBleGl0KDApOwogICAgICAgIH0sCiAgICAgICAgb25FcnJvcih3cywgZXJyb3IpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdvbkVycm9yJywgeyB3cywgZXJyb3IgfSk7CiAgICAgICAgICBleGl0KDEpOwogICAgICAgIH0sCiAgICAgICAgb25NZXNzYWdlKHdzLCBtc2cpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdvbk1lc3NhZ2UnLCB7IHdzLCBtc2cgfSk7CiAgICAgICAgICBwdXRzKG1zZyk7CiAgICAgICAgICB3cy5jbG9zZSgxMDAwKTsKICAgICAgICB9LAogICAgICAgIG9uSHR0cChyZXEsIHJlc3ApIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdvbkh0dHAnLCB7IHJlcSwgcmVzcCB9KTsKICAgICAgICAgIGxldCBib2R5ID0gcmVzcC50ZXh0KCk7CgogICAgICAgICAgcHV0cyhib2R5KTsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGRlYnVnCiAgICApOwogIH0KfQoKdHJ5IHsKICBtYWluKC4uLnNjcmlwdEFyZ3Muc2xpY2UoMSkpOwp9IGNhdGNoKGVycm9yKSB7CiAgY29uc29sZS5sb2coYEZBSUw6ICR7ZXJyb3IgJiYgZXJyb3IubWVzc2FnZX1cbiR7ZXJyb3IgJiYgZXJyb3Iuc3RhY2t9YCk7CiAgZXhpdCgxKTsKfQoAAAAAAAAAALUHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwMAAAAAAABPAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1000,
					1,
					"left_delete",
					null,
					"AQAAAEIDAAAAAAAAQgMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAQwMAAAAAAABDAwAAAAAAAAAAAAAAgFtA"
				],
				[
					1015,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAEIDAAAAAAAAQwMAAAAAAAAAAAAAQwMAAAAAAABTAwAAAAAAAAAAAABTAwAAAAAAAFQDAAAAAAAAAAAAAFQDAAAAAAAAZAMAAAAAAAAAAAAAQwMAAAAAAABDAwAAAAAAABAAAAAgICAgICAgICAgICAgICAgVAMAAAAAAABVAwAAAAAAAAAAAABVAwAAAAAAAFYDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgMAAAAAAABCAwAAAAAAAAAAAAAA4HpA"
				],
				[
					1016,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFYDAAAAAAAAWAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgMAAAAAAABWAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1017,
					1,
					"insert",
					{
						"characters": "line.length"
					},
					"CwAAAFcDAAAAAAAAWAMAAAAAAAAAAAAAWAMAAAAAAABZAwAAAAAAAAAAAABZAwAAAAAAAFoDAAAAAAAAAAAAAFoDAAAAAAAAWwMAAAAAAAAAAAAAWwMAAAAAAABcAwAAAAAAAAAAAABcAwAAAAAAAF0DAAAAAAAAAAAAAF0DAAAAAAAAXgMAAAAAAAAAAAAAXgMAAAAAAABfAwAAAAAAAAAAAABfAwAAAAAAAGADAAAAAAAAAAAAAGADAAAAAAAAYQMAAAAAAAAAAAAAYQMAAAAAAABiAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwMAAAAAAABXAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1022,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAGQDAAAAAAAAZgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAMAAAAAAABkAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1032,
					1,
					"right_delete",
					null,
					"AQAAAEYDAAAAAAAARgMAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAARgMAAAAAAABGAwAAAAAAAAAAAAAAADRA"
				],
				[
					1033,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEYDAAAAAAAARwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgMAAAAAAABGAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1035,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGIDAAAAAAAAYwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgMAAAAAAABiAwAAAAAAAP///////+9/"
				],
				[
					1036,
					1,
					"wrap_block",
					{
						"begin": "{",
						"end": "}"
					},
					"AgAAAGMDAAAAAAAAZAMAAAAAAAAAAAAAhgMAAAAAAACXAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwMAAAAAAABjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1037,
					1,
					"insert",
					{
						"characters": "\ncon"
					},
					"BgAAAGQDAAAAAAAAZQMAAAAAAAAAAAAAZQMAAAAAAAB0AwAAAAAAAAAAAAB0AwAAAAAAAHUDAAAAAAAAAAAAAHUDAAAAAAAAdgMAAAAAAAAAAAAAdgMAAAAAAAB3AwAAAAAAAAAAAAB3AwAAAAAAAHgDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAMAAAAAAABkAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1038,
					3,
					"left_delete",
					null,
					"AwAAAHcDAAAAAAAAdwMAAAAAAAABAAAAbnYDAAAAAAAAdgMAAAAAAAABAAAAb3UDAAAAAAAAdQMAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAeAMAAAAAAAB4AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1039,
					1,
					"insert",
					{
						"characters": "st"
					},
					"AgAAAHUDAAAAAAAAdgMAAAAAAAAAAAAAdgMAAAAAAAB3AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQMAAAAAAAB1AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1040,
					2,
					"left_delete",
					null,
					"AgAAAHYDAAAAAAAAdgMAAAAAAAABAAAAdHUDAAAAAAAAdQMAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAdwMAAAAAAAB3AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1041,
					1,
					"insert",
					{
						"characters": "stdout.puts"
					},
					"CwAAAHUDAAAAAAAAdgMAAAAAAAAAAAAAdgMAAAAAAAB3AwAAAAAAAAAAAAB3AwAAAAAAAHgDAAAAAAAAAAAAAHgDAAAAAAAAeQMAAAAAAAAAAAAAeQMAAAAAAAB6AwAAAAAAAAAAAAB6AwAAAAAAAHsDAAAAAAAAAAAAAHsDAAAAAAAAfAMAAAAAAAAAAAAAfAMAAAAAAAB9AwAAAAAAAAAAAAB9AwAAAAAAAH4DAAAAAAAAAAAAAH4DAAAAAAAAfwMAAAAAAAAAAAAAfwMAAAAAAACAAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQMAAAAAAAB1AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1042,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIADAAAAAAAAggMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAMAAAAAAACAAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1043,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAIEDAAAAAAAAgwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQMAAAAAAACBAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1044,
					1,
					"insert",
					{
						"characters": "Sending:"
					},
					"CAAAAIIDAAAAAAAAgwMAAAAAAAAAAAAAgwMAAAAAAACEAwAAAAAAAAAAAACEAwAAAAAAAIUDAAAAAAAAAAAAAIUDAAAAAAAAhgMAAAAAAAAAAAAAhgMAAAAAAACHAwAAAAAAAAAAAACHAwAAAAAAAIgDAAAAAAAAAAAAAIgDAAAAAAAAiQMAAAAAAAAAAAAAiQMAAAAAAACKAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggMAAAAAAACCAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1045,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIoDAAAAAAAAiwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigMAAAAAAACKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1047,
					1,
					"insert",
					{
						"characters": "+luin"
					},
					"BQAAAIwDAAAAAAAAjQMAAAAAAAAAAAAAjQMAAAAAAACOAwAAAAAAAAAAAACOAwAAAAAAAI8DAAAAAAAAAAAAAI8DAAAAAAAAkAMAAAAAAAAAAAAAkAMAAAAAAACRAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAMAAAAAAACMAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1048,
					3,
					"left_delete",
					null,
					"AwAAAJADAAAAAAAAkAMAAAAAAAABAAAAbo8DAAAAAAAAjwMAAAAAAAABAAAAaY4DAAAAAAAAjgMAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAkQMAAAAAAACRAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1049,
					1,
					"insert",
					{
						"characters": "ine"
					},
					"AwAAAI4DAAAAAAAAjwMAAAAAAAAAAAAAjwMAAAAAAACQAwAAAAAAAAAAAACQAwAAAAAAAJEDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgMAAAAAAACOAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1051,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJIDAAAAAAAAkwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgMAAAAAAACSAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1057,
					1,
					"left_delete",
					null,
					"AQAAAIsDAAAAAAAAiwMAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAjAMAAAAAAACMAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1058,
					1,
					"insert",
					{
						"characters": "${"
					},
					"AgAAAIsDAAAAAAAAjAMAAAAAAAAAAAAAjAMAAAAAAACNAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwMAAAAAAACLAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1059,
					1,
					"right_delete",
					null,
					"AQAAAI0DAAAAAAAAjQMAAAAAAAABAAAAKw",
					"AQAAAAAAAAABAAAAjQMAAAAAAACNAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1062,
					1,
					"insert",
					{
						"characters": "}\\n`"
					},
					"BAAAAJEDAAAAAAAAkgMAAAAAAAAAAAAAkgMAAAAAAACTAwAAAAAAAAAAAACTAwAAAAAAAJQDAAAAAAAAAAAAAJQDAAAAAAAAlQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQMAAAAAAACRAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1067,
					1,
					"left_delete",
					null,
					"AQAAAIEDAAAAAAAAgQMAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAggMAAAAAAACCAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1068,
					1,
					"insert",
					{
						"characters": "`"
					},
					"AQAAAIEDAAAAAAAAggMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQMAAAAAAACBAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1072,
					1,
					"insert",
					{
						"characters": "\nstdout.flush"
					},
					"DgAAAJcDAAAAAAAAmAMAAAAAAAAAAAAAmAMAAAAAAACoAwAAAAAAAAAAAACoAwAAAAAAAKkDAAAAAAAAAAAAAKkDAAAAAAAAqgMAAAAAAAAAAAAAqgMAAAAAAACrAwAAAAAAAAAAAACrAwAAAAAAAKwDAAAAAAAAAAAAAKwDAAAAAAAArQMAAAAAAAAAAAAArQMAAAAAAACuAwAAAAAAAAAAAACuAwAAAAAAAK8DAAAAAAAAAAAAAK8DAAAAAAAAsAMAAAAAAAAAAAAAsAMAAAAAAACxAwAAAAAAAAAAAACxAwAAAAAAALIDAAAAAAAAAAAAALIDAAAAAAAAswMAAAAAAAAAAAAAswMAAAAAAAC0AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwMAAAAAAACXAwAAAAAAAP///////+9/"
				],
				[
					1073,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALQDAAAAAAAAtgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAMAAAAAAAC0AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1075,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALYDAAAAAAAAtwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgMAAAAAAAC2AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1081,
					1,
					"insert",
					{
						"characters": "->"
					},
					"AwAAAIIDAAAAAAAAgwMAAAAAAAAAAAAAgwMAAAAAAACDAwAAAAAAAAgAAABTZW5kaW5nOoMDAAAAAAAAhAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggMAAAAAAACKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1083,
					1,
					"insert",
					{
						"characters": "'0"
					},
					"AgAAAIUDAAAAAAAAhgMAAAAAAAAAAAAAhgMAAAAAAACHAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQMAAAAAAACFAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1084,
					1,
					"left_delete",
					null,
					"AQAAAIYDAAAAAAAAhgMAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAhwMAAAAAAACHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1087,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAI0DAAAAAAAAjgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQMAAAAAAACNAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1090,
					1,
					"left_delete",
					null,
					"AQAAAI0DAAAAAAAAjQMAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAjgMAAAAAAACOAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1091,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAI0DAAAAAAAAjgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQMAAAAAAACNAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1101,
					1,
					"insert",
					{
						"characters": "\\x1b["
					},
					"BQAAAIIDAAAAAAAAgwMAAAAAAAAAAAAAgwMAAAAAAACEAwAAAAAAAAAAAACEAwAAAAAAAIUDAAAAAAAAAAAAAIUDAAAAAAAAhgMAAAAAAAAAAAAAhgMAAAAAAACHAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggMAAAAAAACCAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1102,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAIcDAAAAAAAAiAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwMAAAAAAACHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1103,
					1,
					"left_delete",
					null,
					"AQAAAIcDAAAAAAAAhwMAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAiAMAAAAAAACIAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1104,
					1,
					"insert",
					{
						"characters": "1;1"
					},
					"AwAAAIcDAAAAAAAAiAMAAAAAAAAAAAAAiAMAAAAAAACJAwAAAAAAAAAAAACJAwAAAAAAAIoDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwMAAAAAAACHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1105,
					1,
					"left_delete",
					null,
					"AQAAAIkDAAAAAAAAiQMAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAigMAAAAAAACKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1106,
					1,
					"insert",
					{
						"characters": "36m"
					},
					"AwAAAIkDAAAAAAAAigMAAAAAAAAAAAAAigMAAAAAAACLAwAAAAAAAAAAAACLAwAAAAAAAIwDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQMAAAAAAACJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1108,
					1,
					"insert",
					{
						"characters": "\\x1b"
					},
					"BAAAAJADAAAAAAAAkQMAAAAAAAAAAAAAkQMAAAAAAACSAwAAAAAAAAAAAACSAwAAAAAAAJMDAAAAAAAAAAAAAJMDAAAAAAAAlAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAMAAAAAAACQAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1109,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAJQDAAAAAAAAlQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAMAAAAAAACUAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1110,
					1,
					"left_delete",
					null,
					"AQAAAJQDAAAAAAAAlAMAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAlQMAAAAAAACVAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1111,
					1,
					"insert",
					{
						"characters": "[90m"
					},
					"BAAAAJQDAAAAAAAAlQMAAAAAAAAAAAAAlQMAAAAAAACWAwAAAAAAAAAAAACWAwAAAAAAAJcDAAAAAAAAAAAAAJcDAAAAAAAAmAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAMAAAAAAACUAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1112,
					3,
					"left_delete",
					null,
					"AwAAAJcDAAAAAAAAlwMAAAAAAAABAAAAbZYDAAAAAAAAlgMAAAAAAAABAAAAMJUDAAAAAAAAlQMAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAAmAMAAAAAAACYAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1113,
					1,
					"insert",
					{
						"characters": "0m"
					},
					"AgAAAJUDAAAAAAAAlgMAAAAAAAAAAAAAlgMAAAAAAACXAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQMAAAAAAACVAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1117,
					1,
					"cut",
					null,
					"AQAAAJADAAAAAAAAkAMAAAAAAAAHAAAAXHgxYlswbQ",
					"AQAAAAAAAAABAAAAlwMAAAAAAACQAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1119,
					1,
					"paste",
					null,
					"AQAAAI4DAAAAAAAAlQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgMAAAAAAACOAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1129,
					1,
					"insert",
					{
						"characters": " \\"
					},
					"AgAAAIIDAAAAAAAAgwMAAAAAAAAAAAAAgwMAAAAAAACEAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggMAAAAAAACCAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1130,
					2,
					"left_delete",
					null,
					"AgAAAIMDAAAAAAAAgwMAAAAAAAABAAAAXIIDAAAAAAAAggMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAhAMAAAAAAACEAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1131,
					1,
					"insert",
					{
						"characters": "\\r"
					},
					"AgAAAIIDAAAAAAAAgwMAAAAAAAAAAAAAgwMAAAAAAACEAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggMAAAAAAACCAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1146,
					1,
					"insert",
					{
						"characters": "stdout."
					},
					"BwAAANoGAAAAAAAA2wYAAAAAAAAAAAAA2wYAAAAAAADcBgAAAAAAAAAAAADcBgAAAAAAAN0GAAAAAAAAAAAAAN0GAAAAAAAA3gYAAAAAAAAAAAAA3gYAAAAAAADfBgAAAAAAAAAAAADfBgAAAAAAAOAGAAAAAAAAAAAAAOAGAAAAAAAA4QYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2gYAAAAAAADaBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1154,
					1,
					"paste",
					null,
					"AQAAAPUAAAAAAAAAaAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QAAAAAAAAD1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					1165,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAACoBAAAAAAAAKwEAAAAAAAAAAAAAKwEAAAAAAAArAQAAAAAAABMAAAAgZGVmYXVsdCBhcyBjb21tb24g",
					"AQAAAAAAAAABAAAAKgEAAAAAAAA9AQAAAAAAAAAAAAAAAPC/"
				],
				[
					1166,
					1,
					"paste",
					null,
					"AQAAACsBAAAAAAAAMQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwEAAAAAAAArAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1167,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADEBAAAAAAAAMgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQEAAAAAAAAxAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1180,
					1,
					"insert",
					{
						"characters": "`\\r\\x1b"
					},
					"BwAAAE4HAAAAAAAATwcAAAAAAAAAAAAATwcAAAAAAABQBwAAAAAAAAAAAABQBwAAAAAAAFEHAAAAAAAAAAAAAFEHAAAAAAAAUgcAAAAAAAAAAAAAUgcAAAAAAABTBwAAAAAAAAAAAABTBwAAAAAAAFQHAAAAAAAAAAAAAFQHAAAAAAAAVQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgcAAAAAAABOBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1181,
					1,
					"insert",
					{
						"characters": "[1M"
					},
					"AwAAAFUHAAAAAAAAVgcAAAAAAAAAAAAAVgcAAAAAAABXBwAAAAAAAAAAAABXBwAAAAAAAFgHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQcAAAAAAABVBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1182,
					1,
					"left_delete",
					null,
					"AQAAAFcHAAAAAAAAVwcAAAAAAAABAAAATQ",
					"AQAAAAAAAAABAAAAWAcAAAAAAABYBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1183,
					1,
					"insert",
					{
						"characters": ";36"
					},
					"AwAAAFcHAAAAAAAAWAcAAAAAAAAAAAAAWAcAAAAAAABZBwAAAAAAAAAAAABZBwAAAAAAAFoHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwcAAAAAAABXBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1184,
					1,
					"left_delete",
					null,
					"AQAAAFkHAAAAAAAAWQcAAAAAAAABAAAANg",
					"AQAAAAAAAAABAAAAWgcAAAAAAABaBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1185,
					1,
					"insert",
					{
						"characters": "¬ß1"
					},
					"AgAAAFkHAAAAAAAAWgcAAAAAAAAAAAAAWgcAAAAAAABbBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQcAAAAAAABZBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1186,
					2,
					"left_delete",
					null,
					"AgAAAFoHAAAAAAAAWgcAAAAAAAABAAAAMVkHAAAAAAAAWQcAAAAAAAACAAAAwqc",
					"AQAAAAAAAAABAAAAWwcAAAAAAABbBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1187,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAFkHAAAAAAAAWgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQcAAAAAAABZBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1188,
					1,
					"left_delete",
					null,
					"AQAAAFkHAAAAAAAAWQcAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAWgcAAAAAAABaBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1189,
					1,
					"insert",
					{
						"characters": "1m"
					},
					"AgAAAFkHAAAAAAAAWgcAAAAAAAAAAAAAWgcAAAAAAABbBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQcAAAAAAABZBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1190,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFsHAAAAAAAAXAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwcAAAAAAABbBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1191,
					1,
					"left_delete",
					null,
					"AQAAAFsHAAAAAAAAWwcAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAXAcAAAAAAABcBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1192,
					1,
					"insert",
					{
						"characters": "<-"
					},
					"AgAAAFsHAAAAAAAAXAcAAAAAAAAAAAAAXAcAAAAAAABdBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwcAAAAAAABbBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1193,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF0HAAAAAAAAXgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQcAAAAAAABdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1194,
					1,
					"left_delete",
					null,
					"AQAAAF0HAAAAAAAAXQcAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAXgcAAAAAAABeBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1195,
					1,
					"insert",
					{
						"characters": "\\1x"
					},
					"AwAAAF0HAAAAAAAAXgcAAAAAAAAAAAAAXgcAAAAAAABfBwAAAAAAAAAAAABfBwAAAAAAAGAHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQcAAAAAAABdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1196,
					2,
					"left_delete",
					null,
					"AgAAAF8HAAAAAAAAXwcAAAAAAAABAAAAeF4HAAAAAAAAXgcAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAYAcAAAAAAABgBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1197,
					1,
					"insert",
					{
						"characters": "x1b[90"
					},
					"BgAAAF4HAAAAAAAAXwcAAAAAAAAAAAAAXwcAAAAAAABgBwAAAAAAAAAAAABgBwAAAAAAAGEHAAAAAAAAAAAAAGEHAAAAAAAAYgcAAAAAAAAAAAAAYgcAAAAAAABjBwAAAAAAAAAAAABjBwAAAAAAAGQHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgcAAAAAAABeBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1198,
					2,
					"left_delete",
					null,
					"AgAAAGMHAAAAAAAAYwcAAAAAAAABAAAAMGIHAAAAAAAAYgcAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAAZAcAAAAAAABkBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1199,
					1,
					"insert",
					{
						"characters": "0m"
					},
					"AgAAAGIHAAAAAAAAYwcAAAAAAAAAAAAAYwcAAAAAAABkBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgcAAAAAAABiBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1200,
					1,
					"insert",
					{
						"characters": " '${"
					},
					"BAAAAGQHAAAAAAAAZQcAAAAAAAAAAAAAZQcAAAAAAABmBwAAAAAAAAAAAABmBwAAAAAAAGcHAAAAAAAAAAAAAGcHAAAAAAAAaAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAcAAAAAAABkBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1202,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAGsHAAAAAAAAbAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawcAAAAAAABrBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1203,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAGwHAAAAAAAAbgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAcAAAAAAABsBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1204,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAGwHAAAAAAAAbAcAAAAAAAABAAAAJ2wHAAAAAAAAbAcAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAbQcAAAAAAABtBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1205,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAGwHAAAAAAAAbgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAcAAAAAAABsBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1206,
					1,
					"insert",
					{
						"characters": "`"
					},
					"AQAAAG0HAAAAAAAAbgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQcAAAAAAABtBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1207,
					1,
					"right_delete",
					null,
					"AQAAAG4HAAAAAAAAbgcAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAbgcAAAAAAABuBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1213,
					1,
					"paste",
					null,
					"AQAAAGgHAAAAAAAAbgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAcAAAAAAABoBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1214,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAG4HAAAAAAAAbwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgcAAAAAAABuBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1216,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAHIHAAAAAAAAcwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgcAAAAAAAByBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1224,
					1,
					"paste",
					null,
					"AgAAAAMEAAAAAAAADgQAAAAAAAAAAAAADgQAAAAAAAAOBAAAAAAAAAQAAABsaW5l",
					"AQAAAAAAAAABAAAAAwQAAAAAAAAHBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1229,
					1,
					"insert",
					{
						"characters": "line"
					},
					"BQAAAAoEAAAAAAAACwQAAAAAAAAAAAAACwQAAAAAAAALBAAAAAAAAAMAAABtc2cLBAAAAAAAAAwEAAAAAAAAAAAAAAwEAAAAAAAADQQAAAAAAAAAAAAADQQAAAAAAAAOBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgQAAAAAAAANBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1237,
					1,
					"left_delete",
					null,
					"AQAAADwBAAAAAAAAPAEAAAAAAAAWAAAAcXVpY2tqcy9xanMtbmV0L3Rlc3RzLw",
					"AQAAAAAAAAABAAAAPAEAAAAAAABSAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1246,
					1,
					"insert",
					{
						"characters": "\\n"
					},
					"AgAAAGcHAAAAAAAAaAcAAAAAAAAAAAAAaAcAAAAAAABpBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwcAAAAAAABnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1248,
					1,
					"insert",
					{
						"characters": "\nstdout.flush"
					},
					"DgAAAGwHAAAAAAAAbQcAAAAAAAAAAAAAbQcAAAAAAAB3BwAAAAAAAAAAAAB3BwAAAAAAAHgHAAAAAAAAAAAAAHgHAAAAAAAAeQcAAAAAAAAAAAAAeQcAAAAAAAB6BwAAAAAAAAAAAAB6BwAAAAAAAHsHAAAAAAAAAAAAAHsHAAAAAAAAfAcAAAAAAAAAAAAAfAcAAAAAAAB9BwAAAAAAAAAAAAB9BwAAAAAAAH4HAAAAAAAAAAAAAH4HAAAAAAAAfwcAAAAAAAAAAAAAfwcAAAAAAACABwAAAAAAAAAAAACABwAAAAAAAIEHAAAAAAAAAAAAAIEHAAAAAAAAggcAAAAAAAAAAAAAggcAAAAAAACDBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAcAAAAAAABsBwAAAAAAAP///////+9/"
				],
				[
					1249,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIMHAAAAAAAAhQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwcAAAAAAACDBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1251,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIUHAAAAAAAAhgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQcAAAAAAACFBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1260,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAAMHAAAAAAAABAcAAAAAAAAAAAAABAcAAAAAAAAFBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwcAAAAAAAADBwAAAAAAAAAAAAAAAFlA"
				],
				[
					1263,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADvCAAAaW1wb3J0IHsgZXhpdCwgcHV0cyB9IGZyb20gJ3N0ZCc7CmltcG9ydCB7IFVSTCB9IGZyb20gJ25ldCc7CmltcG9ydCBDbGllbnQgZnJvbSAnLi9jbGllbnQuanMnOwppbXBvcnQgeyBjbG9zZSwgZXhlYywgb3BlbiwgT19SRFdSLCBzZXRSZWFkSGFuZGxlciwgc2V0V3JpdGVIYW5kbGVyLCBXb3JrZXIsIHR0eVNldFJhdyB9IGZyb20gJ29zJzsKaW1wb3J0IHsgaW4gYXMgc3RkaW4sIG91dCBhcyBzdGRvdXQgfSBmcm9tICdzdGQnOwppbXBvcnQgeyBhc3NlcnQsIGdldHBpZCwgZXhpc3RzLCByYW5kU3RyLCBhYmJyZXZpYXRlLCBlc2NhcGUgfSBmcm9tICcuL2NvbW1vbi5qcycKCmZ1bmN0aW9uIG1haW4oLi4uYXJncykgewogIGNvbnN0IGRlYnVnID0gYXJncy5pbmRleE9mKCcteCcpICE9IC0xOwogIGFyZ3MgPSBhcmdzLmZpbHRlcihhcmcgPT4gIS9eLVt4XS8udGVzdChhcmcpKTsKCiAgaWYoYXJncy5sZW5ndGggPT0gMCkgYXJncy5wdXNoKCdodHRwczovL2xvY2FsaG9zdC9kZWJ1Z2dlci5odG1sJyk7CgogIGZvcihsZXQgYXJnIG9mIGFyZ3MpIHsKICAgIENsaWVudCgKICAgICAgYXJnLAogICAgICB7CiAgICAgICAgb25Db25uZWN0KHdzLCByZXEpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdvbkNvbm5lY3QnLCB7IHdzLCByZXEgfSk7CiAgICAgICAgICBjb25zdCB7IHByb3RvY29sIH0gPSBuZXcgVVJMKHJlcS51cmwpOwogICAgICAgICAgY29uc29sZS5sb2coJ3Byb3RvY29sJywgcHJvdG9jb2wpOwoKICAgICAgICAgIGlmKCFwcm90b2NvbC5zdGFydHNXaXRoKCdodHRwJykpIHsKICAgICAgICAgICAgaWYocHJvdG9jb2wuc3RhcnRzV2l0aCgnd3MnKSkgewogICAgICAgICAgICAgIHNldFJlYWRIYW5kbGVyKDAsICgpID0+IHsKICAgICAgICAgICAgICAgIGxldCBsaW5lID0gc3RkaW4uZ2V0bGluZSgpOwoKICAgICAgICAgICAgICAgaWYobGluZS5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIHN0ZG91dC5wdXRzKGBcclx4MWJbMTszNm0tPlx4MWJbMG0gJyR7ZXNjYXBlKGxpbmUpfSdcbmApOwogICAgICAgICAgICAgICAgc3Rkb3V0LmZsdXNoKCk7CiAgICAgICAgICAgICAgICAgIHdzLnNlbmQobGluZSk7CiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB0dHlTZXRSYXcoMCk7CiAgICAgICAgICAgICAgc2V0UmVhZEhhbmRsZXIoMCwgKCkgPT4gewogICAgICAgICAgICAgICAgbGV0IGIgPSBzdGRpbi5nZXRCeXRlKCk7CiAgICAgICAgICAgICAgICBpZihiID09IDEzKSBiID0gMTA7CiAgICAgICAgICAgICAgICBlbHNlIGlmKGIgPT0gMTI3KSBiID0gODsKICAgICAgICAgICAgICAgIGVsc2UgaWYoYiA8IDMyIHx8IGIgPiAneicuY2hhckNvZGVBdCgwKSkgc3Rkb3V0LnB1dHMoJ2NoYXI6ICcgKyBiKTsKICAgICAgICAgICAgICAgIHN0ZG91dC5wdXRCeXRlKGIpOwogICAgICAgICAgICAgICAgc3Rkb3V0LmZsdXNoKCk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG9uQ2xvc2Uod3MsIHJlYXNvbikgewogICAgICAgICAgY29uc29sZS5sb2coJ29uQ2xvc2UnLCB7IHdzLCByZWFzb24gfSk7CiAgICAgICAgICBleGl0KDApOwogICAgICAgIH0sCiAgICAgICAgb25FcnJvcih3cywgZXJyb3IpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdvbkVycm9yJywgeyB3cywgZXJyb3IgfSk7CiAgICAgICAgICBleGl0KDEpOwogICAgICAgIH0sCiAgICAgICAgb25NZXNzYWdlKHdzLCBtc2cpIHsKICAgICAgICAgIC8vY29uc29sZS5sb2coJ29uTWVzc2FnZScsIHsgd3MsIG1zZyB9KTsKICAgICAgICAgIHN0ZG91dC5wdXRzKGBcclx4MWJbMTszMW08LVx4MWJbMG0gJyR7ZXNjYXBlKG1zZyl9J1xuYCk7CiAgICAgICAgICBzdGRvdXQuZmx1c2goKTsKICAgICAgICAgIHdzLmNsb3NlKDEwMDApOwogICAgICAgIH0sCiAgICAgICAgb25IdHRwKHJlcSwgcmVzcCkgewogICAgICAgICAgY29uc29sZS5sb2coJ29uSHR0cCcsIHsgcmVxLCByZXNwIH0pOwogICAgICAgICAgbGV0IGJvZHkgPSByZXNwLnRleHQoKTsKCiAgICAgICAgICBwdXRzKGJvZHkpOwogICAgICAgIH0KICAgICAgfSwKICAgICAgZGVidWcKICAgICk7CiAgfQp9Cgp0cnkgewogIG1haW4oLi4uc2NyaXB0QXJncy5zbGljZSgxKSk7Cn0gY2F0Y2goZXJyb3IpIHsKICBjb25zb2xlLmxvZyhgRkFJTDogJHtlcnJvciAmJiBlcnJvci5tZXNzYWdlfVxuJHtlcnJvciAmJiBlcnJvci5zdGFja31gKTsKICBleGl0KDEpOwp9CgAAAAAAAAAA9ggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQcAAAAAAAAFBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1282,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAB0CAAAAAAAAHwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQIAAAAAAAAdAgAAAAAAAAAAAAAAAAAA"
				],
				[
					1288,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD4CAAAaW1wb3J0IHsgZXhpdCwgcHV0cyB9IGZyb20gJ3N0ZCc7CmltcG9ydCB7IFVSTCB9IGZyb20gJ25ldCc7CmltcG9ydCBDbGllbnQgZnJvbSAnLi9jbGllbnQuanMnOwppbXBvcnQgeyBjbG9zZSwgZXhlYywgb3BlbiwgT19SRFdSLCBzZXRSZWFkSGFuZGxlciwgc2V0V3JpdGVIYW5kbGVyLCBXb3JrZXIsIHR0eVNldFJhdyB9IGZyb20gJ29zJzsKaW1wb3J0IHsgaW4gYXMgc3RkaW4sIG91dCBhcyBzdGRvdXQgfSBmcm9tICdzdGQnOwppbXBvcnQgeyBhc3NlcnQsIGdldHBpZCwgZXhpc3RzLCByYW5kU3RyLCBhYmJyZXZpYXRlLCBlc2NhcGUgfSBmcm9tICcuL2NvbW1vbi5qcyc7CgpmdW5jdGlvbiBtYWluKC4uLmFyZ3MpIHsKICBjb25zdCBkZWJ1ZyA9IGFyZ3MuaW5kZXhPZignLXgnKSAhPSAtMTsKICBhcmdzID0gYXJncy5maWx0ZXIoYXJnID0+ICEvXi1beF0vLnRlc3QoYXJnKSk7CgogIGlmKGFyZ3MubGVuZ3RoID09IDApIGFyZ3MucHVzaCgnaHR0cHM6Ly9sb2NhbGhvc3QvZGVidWdnZXIuaHRtbCcpOwoKICBmb3IobGV0IGFyZyBvZiBhcmdzKSB7CiAgICAgIENsaWVudCgKICAgICAgYXJnLAogICAgICB7CiAgICAgICAgb25Db25uZWN0KHdzLCByZXEpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdvbkNvbm5lY3QnLCB7IHdzLCByZXEgfSk7CiAgICAgICAgICBjb25zdCB7IHByb3RvY29sIH0gPSBuZXcgVVJMKHJlcS51cmwpOwogICAgICAgICAgY29uc29sZS5sb2coJ3Byb3RvY29sJywgcHJvdG9jb2wpOwoKICAgICAgICAgIGlmKCFwcm90b2NvbC5zdGFydHNXaXRoKCdodHRwJykpIHsKICAgICAgICAgICAgaWYocHJvdG9jb2wuc3RhcnRzV2l0aCgnd3MnKSkgewogICAgICAgICAgICAgIHNldFJlYWRIYW5kbGVyKDAsICgpID0+IHsKICAgICAgICAgICAgICAgIGxldCBsaW5lID0gc3RkaW4uZ2V0bGluZSgpOwoKICAgICAgICAgICAgICAgIGlmKGxpbmUubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICAgIHN0ZG91dC5wdXRzKGBcclx4MWJbMTszNm0tPlx4MWJbMG0gJyR7ZXNjYXBlKGxpbmUpfSdcbmApOwogICAgICAgICAgICAgICAgICBzdGRvdXQuZmx1c2goKTsKICAgICAgICAgICAgICAgICAgd3Muc2VuZChsaW5lKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB0dHlTZXRSYXcoMCk7CiAgICAgICAgICAgICAgc2V0UmVhZEhhbmRsZXIoMCwgKCkgPT4gewogICAgICAgICAgICAgICAgbGV0IGIgPSBzdGRpbi5nZXRCeXRlKCk7CiAgICAgICAgICAgICAgICBpZihiID09IDEzKSBiID0gMTA7CiAgICAgICAgICAgICAgICBlbHNlIGlmKGIgPT0gMTI3KSBiID0gODsKICAgICAgICAgICAgICAgIGVsc2UgaWYoYiA8IDMyIHx8IGIgPiAneicuY2hhckNvZGVBdCgwKSkgc3Rkb3V0LnB1dHMoJ2NoYXI6ICcgKyBiKTsKICAgICAgICAgICAgICAgIHN0ZG91dC5wdXRCeXRlKGIpOwogICAgICAgICAgICAgICAgc3Rkb3V0LmZsdXNoKCk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG9uQ2xvc2Uod3MsIHJlYXNvbikgewogICAgICAgICAgY29uc29sZS5sb2coJ29uQ2xvc2UnLCB7IHdzLCByZWFzb24gfSk7CiAgICAgICAgICBleGl0KDApOwogICAgICAgIH0sCiAgICAgICAgb25FcnJvcih3cywgZXJyb3IpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdvbkVycm9yJywgeyB3cywgZXJyb3IgfSk7CiAgICAgICAgICBleGl0KDEpOwogICAgICAgIH0sCiAgICAgICAgb25NZXNzYWdlKHdzLCBtc2cpIHsKICAgICAgICAgIC8vY29uc29sZS5sb2coJ29uTWVzc2FnZScsIHsgd3MsIG1zZyB9KTsKICAgICAgICAgIHN0ZG91dC5wdXRzKGBcclx4MWJbMTszMW08LVx4MWJbMG0gJyR7ZXNjYXBlKG1zZyl9J1xuYCk7CiAgICAgICAgICBzdGRvdXQuZmx1c2goKTsKICAgICAgICAgIHdzLmNsb3NlKDEwMDApOwogICAgICAgIH0sCiAgICAgICAgb25IdHRwKHJlcSwgcmVzcCkgewogICAgICAgICAgY29uc29sZS5sb2coJ29uSHR0cCcsIHsgcmVxLCByZXNwIH0pOwogICAgICAgICAgbGV0IGJvZHkgPSByZXNwLnRleHQoKTsKCiAgICAgICAgICBwdXRzKGJvZHkpOwogICAgICAgIH0KICAgICAgfSwKICAgICAgZGVidWcKICAgICk7CiAgfQp9Cgp0cnkgewogIG1haW4oLi4uc2NyaXB0QXJncy5zbGljZSgxKSk7Cn0gY2F0Y2goZXJyb3IpIHsKICBjb25zb2xlLmxvZyhgRkFJTDogJHtlcnJvciAmJiBlcnJvci5tZXNzYWdlfVxuJHtlcnJvciAmJiBlcnJvci5zdGFja31gKTsKICBleGl0KDEpOwp9CgAAAAAAAAAA+AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwgAAAAAAABvCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1317,
					1,
					"left_delete",
					null,
					"AQAAAOYDAAAAAAAA5gMAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAA5wMAAAAAAADnAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1323,
					1,
					"left_delete",
					null,
					"AQAAAFgHAAAAAAAAWAcAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAWQcAAAAAAABZBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1334,
					1,
					"cut",
					null,
					"AQAAAFgHAAAAAAAAWAcAAAAAAAAHAAAAXHgxYlswbQ",
					"AQAAAAAAAAABAAAAWAcAAAAAAABfBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1337,
					1,
					"paste",
					null,
					"AQAAAGkHAAAAAAAAcAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQcAAAAAAABpBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1346,
					1,
					"insert",
					{
						"characters": "7"
					},
					"AgAAAOQDAAAAAAAA5QMAAAAAAAAAAAAA5QMAAAAAAADlAwAAAAAAAAEAAAA2",
					"AQAAAAAAAAABAAAA5AMAAAAAAADlAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1351,
					1,
					"cut",
					null,
					"AQAAAOcDAAAAAAAA5wMAAAAAAAAHAAAAXHgxYlswbQ",
					"AQAAAAAAAAABAAAA5wMAAAAAAADuAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1354,
					1,
					"paste",
					null,
					"AQAAAPkDAAAAAAAAAAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QMAAAAAAAD5AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1363,
					1,
					"right_delete",
					null,
					"AQAAAFkHAAAAAAAAWQcAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAWQcAAAAAAABZBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1366,
					1,
					"left_delete",
					null,
					"AQAAAGcHAAAAAAAAZwcAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAaAcAAAAAAABoBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1369,
					1,
					"left_delete",
					null,
					"AQAAAOgDAAAAAAAA6AMAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAA6QMAAAAAAADpAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1372,
					1,
					"left_delete",
					null,
					"AQAAAPcDAAAAAAAA9wMAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAA+AMAAAAAAAD4AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1378,
					1,
					"left_delete",
					null,
					"AQAAAOEDAAAAAAAA4QMAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAA4gMAAAAAAADiAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1379,
					1,
					"insert",
					{
						"characters": "90"
					},
					"AgAAAOEDAAAAAAAA4gMAAAAAAAAAAAAA4gMAAAAAAADjAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QMAAAAAAADhAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1380,
					2,
					"left_delete",
					null,
					"AgAAAOIDAAAAAAAA4gMAAAAAAAABAAAAMOEDAAAAAAAA4QMAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAA4wMAAAAAAADjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1381,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAOEDAAAAAAAA4gMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QMAAAAAAADhAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1395,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAFMHAAAAAAAAVAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwcAAAAAAABTBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1396,
					1,
					"left_delete",
					null,
					"AQAAAFMHAAAAAAAAUwcAAAAAAAABAAAANg",
					"AQAAAAAAAAABAAAAVAcAAAAAAABUBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1397,
					1,
					"right_delete",
					null,
					"AQAAAFMHAAAAAAAAUwcAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAUwcAAAAAAABTBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1398,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAFMHAAAAAAAAVAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwcAAAAAAABTBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1399,
					1,
					"left_delete",
					null,
					"AQAAAFMHAAAAAAAAUwcAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAVAcAAAAAAABUBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1400,
					1,
					"insert",
					{
						"characters": "21"
					},
					"AgAAAFMHAAAAAAAAVAcAAAAAAAAAAAAAVAcAAAAAAABVBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwcAAAAAAABTBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1401,
					2,
					"left_delete",
					null,
					"AgAAAFQHAAAAAAAAVAcAAAAAAAABAAAAMVMHAAAAAAAAUwcAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAVQcAAAAAAABVBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1402,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAAFMHAAAAAAAAVAcAAAAAAAAAAAAAVAcAAAAAAABVBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwcAAAAAAABTBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1403,
					2,
					"left_delete",
					null,
					"AgAAAFQHAAAAAAAAVAcAAAAAAAABAAAAMFMHAAAAAAAAUwcAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAVQcAAAAAAABVBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1404,
					1,
					"insert",
					{
						"characters": "54"
					},
					"AgAAAFMHAAAAAAAAVAcAAAAAAAAAAAAAVAcAAAAAAABVBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwcAAAAAAABTBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1405,
					2,
					"left_delete",
					null,
					"AgAAAFQHAAAAAAAAVAcAAAAAAAABAAAANFMHAAAAAAAAUwcAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAVQcAAAAAAABVBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1406,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAFMHAAAAAAAAVAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwcAAAAAAABTBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1414,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyCAAAaW1wb3J0IHsgZXhpdCwgcHV0cyB9IGZyb20gJ3N0ZCc7CmltcG9ydCB7IFVSTCB9IGZyb20gJ25ldCc7CmltcG9ydCBDbGllbnQgZnJvbSAnLi9jbGllbnQuanMnOwppbXBvcnQgeyBjbG9zZSwgZXhlYywgb3BlbiwgT19SRFdSLCBzZXRSZWFkSGFuZGxlciwgc2V0V3JpdGVIYW5kbGVyLCBXb3JrZXIsIHR0eVNldFJhdyB9IGZyb20gJ29zJzsKaW1wb3J0IHsgaW4gYXMgc3RkaW4sIG91dCBhcyBzdGRvdXQgfSBmcm9tICdzdGQnOwppbXBvcnQgeyBhc3NlcnQsIGdldHBpZCwgZXhpc3RzLCByYW5kU3RyLCBhYmJyZXZpYXRlLCBlc2NhcGUgfSBmcm9tICcuL2NvbW1vbi5qcyc7CgpmdW5jdGlvbiBtYWluKC4uLmFyZ3MpIHsKICBjb25zdCBkZWJ1ZyA9IGFyZ3MuaW5kZXhPZignLXgnKSAhPSAtMTsKICBhcmdzID0gYXJncy5maWx0ZXIoYXJnID0+ICEvXi1beF0vLnRlc3QoYXJnKSk7CgogIGlmKGFyZ3MubGVuZ3RoID09IDApIGFyZ3MucHVzaCgnaHR0cHM6Ly9sb2NhbGhvc3QvZGVidWdnZXIuaHRtbCcpOwoKICBmb3IobGV0IGFyZyBvZiBhcmdzKSB7CiAgICAgIENsaWVudCgKICAgICAgYXJnLAogICAgICB7CiAgICAgICAgb25Db25uZWN0KHdzLCByZXEpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdvbkNvbm5lY3QnLCB7IHdzLCByZXEgfSk7CiAgICAgICAgICBjb25zdCB7IHByb3RvY29sIH0gPSBuZXcgVVJMKHJlcS51cmwpOwogICAgICAgICAgY29uc29sZS5sb2coJ3Byb3RvY29sJywgcHJvdG9jb2wpOwoKICAgICAgICAgIGlmKCFwcm90b2NvbC5zdGFydHNXaXRoKCdodHRwJykpIHsKICAgICAgICAgICAgaWYocHJvdG9jb2wuc3RhcnRzV2l0aCgnd3MnKSkgewogICAgICAgICAgICAgIHNldFJlYWRIYW5kbGVyKDAsICgpID0+IHsKICAgICAgICAgICAgICAgIGxldCBsaW5lID0gc3RkaW4uZ2V0bGluZSgpOwoKICAgICAgICAgICAgICAgIGlmKGxpbmUubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICAgIHN0ZG91dC5wdXRzKGBcclx4MWJbMDszN20+ICR7ZXNjYXBlKGxpbmUpfVx4MWJbMG1cbmApOwogICAgICAgICAgICAgICAgICBzdGRvdXQuZmx1c2goKTsKICAgICAgICAgICAgICAgICAgd3Muc2VuZChsaW5lKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB0dHlTZXRSYXcoMCk7CiAgICAgICAgICAgICAgc2V0UmVhZEhhbmRsZXIoMCwgKCkgPT4gewogICAgICAgICAgICAgICAgbGV0IGIgPSBzdGRpbi5nZXRCeXRlKCk7CiAgICAgICAgICAgICAgICBpZihiID09IDEzKSBiID0gMTA7CiAgICAgICAgICAgICAgICBlbHNlIGlmKGIgPT0gMTI3KSBiID0gODsKICAgICAgICAgICAgICAgIGVsc2UgaWYoYiA8IDMyIHx8IGIgPiAneicuY2hhckNvZGVBdCgwKSkgc3Rkb3V0LnB1dHMoJ2NoYXI6ICcgKyBiKTsKICAgICAgICAgICAgICAgIHN0ZG91dC5wdXRCeXRlKGIpOwogICAgICAgICAgICAgICAgc3Rkb3V0LmZsdXNoKCk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG9uQ2xvc2Uod3MsIHJlYXNvbikgewogICAgICAgICAgY29uc29sZS5sb2coJ29uQ2xvc2UnLCB7IHdzLCByZWFzb24gfSk7CiAgICAgICAgICBleGl0KDApOwogICAgICAgIH0sCiAgICAgICAgb25FcnJvcih3cywgZXJyb3IpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdvbkVycm9yJywgeyB3cywgZXJyb3IgfSk7CiAgICAgICAgICBleGl0KDEpOwogICAgICAgIH0sCiAgICAgICAgb25NZXNzYWdlKHdzLCBtc2cpIHsKICAgICAgICAgIC8vY29uc29sZS5sb2coJ29uTWVzc2FnZScsIHsgd3MsIG1zZyB9KTsKICAgICAgICAgIHN0ZG91dC5wdXRzKGBcclx4MWJbMTszNG08ICR7ZXNjYXBlKG1zZyl9XHgxYlswbVxuYCk7CiAgICAgICAgICBzdGRvdXQuZmx1c2goKTsKICAgICAgICAgIHdzLmNsb3NlKDEwMDApOwogICAgICAgIH0sCiAgICAgICAgb25IdHRwKHJlcSwgcmVzcCkgewogICAgICAgICAgY29uc29sZS5sb2coJ29uSHR0cCcsIHsgcmVxLCByZXNwIH0pOwogICAgICAgICAgbGV0IGJvZHkgPSByZXNwLnRleHQoKTsKCiAgICAgICAgICBwdXRzKGJvZHkpOwogICAgICAgIH0KICAgICAgfSwKICAgICAgZGVidWcKICAgICk7CiAgfQp9Cgp0cnkgewogIG1haW4oLi4uc2NyaXB0QXJncy5zbGljZSgxKSk7Cn0gY2F0Y2goZXJyb3IpIHsKICBjb25zb2xlLmxvZyhgRkFJTDogJHtlcnJvciAmJiBlcnJvci5tZXNzYWdlfVxuJHtlcnJvciAmJiBlcnJvci5zdGFja31gKTsKICBleGl0KDEpOwp9CgAAAAAAAAAA8AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQcAAAAAAAAhBwAAAAAAAAAAAAAAQHVA"
				],
				[
					1433,
					1,
					"cut",
					null,
					"AQAAALkDAAAAAAAAuQMAAAAAAABqAAAAICAgICAgICAgICAgICAgICAgc3Rkb3V0LnB1dHMoYFxyXHgxYlswOzM3bT4gJHtlc2NhcGUobGluZSl9XHgxYlswbVxuYCk7CiAgICAgICAgICAgICAgICAgIHN0ZG91dC5mbHVzaCgpOw",
					"AQAAAAAAAAABAAAAuQMAAAAAAAAjBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1434,
					1,
					"paste",
					null,
					"AQAAALkDAAAAAAAAIwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQMAAAAAAAC5AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1439,
					1,
					"paste",
					null,
					"AQAAAHkDAAAAAAAA4wMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQMAAAAAAAB5AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1443,
					1,
					"insert_snippet",
					{
						"contents": "`$0`"
					},
					"AQAAAKUDAAAAAAAApwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQMAAAAAAAClAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1444,
					1,
					"insert",
					{
						"characters": "();"
					},
					"AwAAAKYDAAAAAAAApwMAAAAAAAAAAAAApwMAAAAAAACoAwAAAAAAAAAAAACoAwAAAAAAAKkDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgMAAAAAAACmAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1445,
					3,
					"left_delete",
					null,
					"AwAAAKgDAAAAAAAAqAMAAAAAAAABAAAAO6cDAAAAAAAApwMAAAAAAAABAAAAKaYDAAAAAAAApgMAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAqQMAAAAAAACpAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1446,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAKYDAAAAAAAApwMAAAAAAAAAAAAApwMAAAAAAACoAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgMAAAAAAACmAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1448,
					1,
					"cut",
					null,
					"AQAAAKgDAAAAAAAAqAMAAAAAAAAdAAAAYCAke2VzY2FwZShsaW5lKX1ceDFiWzBtXG5gKTs",
					"AQAAAAAAAAABAAAAqAMAAAAAAADFAwAAAAAAAP///////+9/"
				],
				[
					1463,
					1,
					"left_delete",
					null,
					"AQAAACkEAAAAAAAAKQQAAAAAAAAdAAAAXHJceDFiWzA7MzdtPiAke2VzY2FwZShsaW5lKX0",
					"AQAAAAAAAAABAAAAKQQAAAAAAABGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1476,
					1,
					"cut",
					null,
					"AQAAAAoEAAAAAAAACgQAAAAAAABOAAAAICAgICAgICAgICAgICAgICAgc3Rkb3V0LnB1dHMoYFx4MWJbMG1cbmApOwogICAgICAgICAgICAgICAgICBzdGRvdXQuZmx1c2goKTsK",
					"AQAAAAAAAAABAAAACgQAAAAAAABYBAAAAAAAAAAAAAAAAAAA"
				],
				[
					1478,
					1,
					"paste",
					null,
					"AQAAACsEAAAAAAAAeQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwQAAAAAAAArBAAAAAAAAAAAAAAAAAAA"
				],
				[
					1487,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAkCQAAaW1wb3J0IHsgZXhpdCwgcHV0cyB9IGZyb20gJ3N0ZCc7CmltcG9ydCB7IFVSTCB9IGZyb20gJ25ldCc7CmltcG9ydCBDbGllbnQgZnJvbSAnLi9jbGllbnQuanMnOwppbXBvcnQgeyBjbG9zZSwgZXhlYywgb3BlbiwgT19SRFdSLCBzZXRSZWFkSGFuZGxlciwgc2V0V3JpdGVIYW5kbGVyLCBXb3JrZXIsIHR0eVNldFJhdyB9IGZyb20gJ29zJzsKaW1wb3J0IHsgaW4gYXMgc3RkaW4sIG91dCBhcyBzdGRvdXQgfSBmcm9tICdzdGQnOwppbXBvcnQgeyBhc3NlcnQsIGdldHBpZCwgZXhpc3RzLCByYW5kU3RyLCBhYmJyZXZpYXRlLCBlc2NhcGUgfSBmcm9tICcuL2NvbW1vbi5qcyc7CgpmdW5jdGlvbiBtYWluKC4uLmFyZ3MpIHsKICBjb25zdCBkZWJ1ZyA9IGFyZ3MuaW5kZXhPZignLXgnKSAhPSAtMTsKICBhcmdzID0gYXJncy5maWx0ZXIoYXJnID0+ICEvXi1beF0vLnRlc3QoYXJnKSk7CgogIGlmKGFyZ3MubGVuZ3RoID09IDApIGFyZ3MucHVzaCgnaHR0cHM6Ly9sb2NhbGhvc3QvZGVidWdnZXIuaHRtbCcpOwoKICBmb3IobGV0IGFyZyBvZiBhcmdzKSB7CiAgICBDbGllbnQoCiAgICAgIGFyZywKICAgICAgewogICAgICAgIG9uQ29ubmVjdCh3cywgcmVxKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnb25Db25uZWN0JywgeyB3cywgcmVxIH0pOwogICAgICAgICAgY29uc3QgeyBwcm90b2NvbCB9ID0gbmV3IFVSTChyZXEudXJsKTsKICAgICAgICAgIGNvbnNvbGUubG9nKCdwcm90b2NvbCcsIHByb3RvY29sKTsKCiAgICAgICAgICBpZighcHJvdG9jb2wuc3RhcnRzV2l0aCgnaHR0cCcpKSB7CiAgICAgICAgICAgIGlmKHByb3RvY29sLnN0YXJ0c1dpdGgoJ3dzJykpIHsKICAgICAgICAgICAgICBzZXRSZWFkSGFuZGxlcigwLCAoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ZG91dC5wdXRzKGBcclx4MWJbMDszN20+YCk7CiAgICAgICAgICAgICAgICAgIHN0ZG91dC5mbHVzaCgpOyBsZXQgbGluZSA9IHN0ZGluLmdldGxpbmUoKTsKCiAgICAgICAgICAgICAgICBpZihsaW5lLmxlbmd0aCkgewogICAgICAgICAgICAgICAgICB3cy5zZW5kKGxpbmUpOwogICAgICAgICAgICAgICAgICBzdGRvdXQucHV0cyhgXHgxYlswbVxuYCk7CiAgICAgICAgICAgICAgICAgIHN0ZG91dC5mbHVzaCgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHR0eVNldFJhdygwKTsKICAgICAgICAgICAgICBzZXRSZWFkSGFuZGxlcigwLCAoKSA9PiB7CiAgICAgICAgICAgICAgICBsZXQgYiA9IHN0ZGluLmdldEJ5dGUoKTsKICAgICAgICAgICAgICAgIGlmKGIgPT0gMTMpIGIgPSAxMDsKICAgICAgICAgICAgICAgIGVsc2UgaWYoYiA9PSAxMjcpIGIgPSA4OwogICAgICAgICAgICAgICAgZWxzZSBpZihiIDwgMzIgfHwgYiA+ICd6Jy5jaGFyQ29kZUF0KDApKSBzdGRvdXQucHV0cygnY2hhcjogJyArIGIpOwogICAgICAgICAgICAgICAgc3Rkb3V0LnB1dEJ5dGUoYik7CiAgICAgICAgICAgICAgICBzdGRvdXQuZmx1c2goKTsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgb25DbG9zZSh3cywgcmVhc29uKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnb25DbG9zZScsIHsgd3MsIHJlYXNvbiB9KTsKICAgICAgICAgIGV4aXQoMCk7CiAgICAgICAgfSwKICAgICAgICBvbkVycm9yKHdzLCBlcnJvcikgewogICAgICAgICAgY29uc29sZS5sb2coJ29uRXJyb3InLCB7IHdzLCBlcnJvciB9KTsKICAgICAgICAgIGV4aXQoMSk7CiAgICAgICAgfSwKICAgICAgICBvbk1lc3NhZ2Uod3MsIG1zZykgewogICAgICAgICAgLy9jb25zb2xlLmxvZygnb25NZXNzYWdlJywgeyB3cywgbXNnIH0pOwogICAgICAgICAgc3Rkb3V0LnB1dHMoYFxyXHgxYlsxOzM0bTwgJHtlc2NhcGUobXNnKX1ceDFiWzBtXG5gKTsKICAgICAgICAgIHN0ZG91dC5mbHVzaCgpOwogICAgICAgICAgd3MuY2xvc2UoMTAwMCk7CiAgICAgICAgfSwKICAgICAgICBvbkh0dHAocmVxLCByZXNwKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnb25IdHRwJywgeyByZXEsIHJlc3AgfSk7CiAgICAgICAgICBsZXQgYm9keSA9IHJlc3AudGV4dCgpOwoKICAgICAgICAgIHB1dHMoYm9keSk7CiAgICAgICAgfQogICAgICB9LAogICAgICBkZWJ1ZwogICAgKTsKICB9Cn0KCnRyeSB7CiAgbWFpbiguLi5zY3JpcHRBcmdzLnNsaWNlKDEpKTsKfSBjYXRjaChlcnJvcikgewogIGNvbnNvbGUubG9nKGBGQUlMOiAke2Vycm9yICYmIGVycm9yLm1lc3NhZ2V9XG4ke2Vycm9yICYmIGVycm9yLnN0YWNrfWApOwogIGV4aXQoMSk7Cn0KAAAAAAAAAAAhCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAkAAAAAAAA0CAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-client-http.c",
			"settings":
			{
				"buffer_size": 6072,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-buffer.c",
			"settings":
			{
				"buffer_size": 6135,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2503,
					2,
					"left_delete",
					null,
					"AgAAAJ8OAAAAAAAAnw4AAAAAAAABAAAAL54OAAAAAAAAng4AAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAoA4AAAAAAACgDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2546,
					1,
					"paste",
					null,
					"AQAAANQFAAAAAAAAigYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AUAAAAAAADUBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2549,
					1,
					"cut",
					null,
					"AQAAANQFAAAAAAAA1AUAAAAAAAC2AAAACkpTVmFsdWUKYnVmZmVyX3Rvc3RyaW5nKHN0cnVjdCBieXRlX2J1ZmZlciBjb25zdCogYnVmLCBKU0NvbnRleHQqIGN0eCkgewogIHZvaWQqIHB0ciA9IGJ1Zi0+c3RhcnQ7CiAgc2l6ZV90IGxlbiA9IGJ1Zi0+d3JpdGUgLSBidWYtPnN0YXJ0OwogIHJldHVybiBKU19OZXdTdHJpbmdMZW4oY3R4LCBwdHIsIGxlbik7Cn0",
					"AQAAAAAAAAABAAAAigYAAAAAAADUBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2550,
					1,
					"paste",
					null,
					"AQAAANQFAAAAAAAAiAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AUAAAAAAADUBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2551,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIgGAAAAAAAAiQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAYAAAAAAACIBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2567,
					1,
					"insert",
					{
						"characters": "block_BEGIN(blk"
					},
					"DwAAAHwGAAAAAAAAfQYAAAAAAAAAAAAAfQYAAAAAAAB+BgAAAAAAAAAAAAB+BgAAAAAAAH8GAAAAAAAAAAAAAH8GAAAAAAAAgAYAAAAAAAAAAAAAgAYAAAAAAACBBgAAAAAAAAAAAACBBgAAAAAAAIIGAAAAAAAAAAAAAIIGAAAAAAAAgwYAAAAAAAAAAAAAgwYAAAAAAACEBgAAAAAAAAAAAACEBgAAAAAAAIUGAAAAAAAAAAAAAIUGAAAAAAAAhgYAAAAAAAAAAAAAhgYAAAAAAACHBgAAAAAAAAAAAACHBgAAAAAAAIgGAAAAAAAAAAAAAIgGAAAAAAAAiQYAAAAAAAAAAAAAiQYAAAAAAACKBgAAAAAAAAAAAACKBgAAAAAAAIsGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAYAAAAAAAB8BgAAAAAAAAAAAAAAAPC/"
				],
				[
					2568,
					1,
					"insert",
					{
						"characters": "),"
					},
					"AgAAAIsGAAAAAAAAjAYAAAAAAAAAAAAAjAYAAAAAAACNBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwYAAAAAAACLBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2569,
					1,
					"insert",
					{
						"characters": " BLOCK"
					},
					"BgAAAI0GAAAAAAAAjgYAAAAAAAAAAAAAjgYAAAAAAACPBgAAAAAAAAAAAACPBgAAAAAAAJAGAAAAAAAAAAAAAJAGAAAAAAAAkQYAAAAAAAAAAAAAkQYAAAAAAACSBgAAAAAAAAAAAACSBgAAAAAAAJMGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQYAAAAAAACNBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2570,
					5,
					"left_delete",
					null,
					"BQAAAJIGAAAAAAAAkgYAAAAAAAABAAAAS5EGAAAAAAAAkQYAAAAAAAABAAAAQ5AGAAAAAAAAkAYAAAAAAAABAAAAT48GAAAAAAAAjwYAAAAAAAABAAAATI4GAAAAAAAAjgYAAAAAAAABAAAAQg",
					"AQAAAAAAAAABAAAAkwYAAAAAAACTBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2571,
					1,
					"insert",
					{
						"characters": "block_SIZE("
					},
					"CwAAAI4GAAAAAAAAjwYAAAAAAAAAAAAAjwYAAAAAAACQBgAAAAAAAAAAAACQBgAAAAAAAJEGAAAAAAAAAAAAAJEGAAAAAAAAkgYAAAAAAAAAAAAAkgYAAAAAAACTBgAAAAAAAAAAAACTBgAAAAAAAJQGAAAAAAAAAAAAAJQGAAAAAAAAlQYAAAAAAAAAAAAAlQYAAAAAAACWBgAAAAAAAAAAAACWBgAAAAAAAJcGAAAAAAAAAAAAAJcGAAAAAAAAmAYAAAAAAAAAAAAAmAYAAAAAAACZBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgYAAAAAAACOBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2572,
					1,
					"insert",
					{
						"characters": "h<r"
					},
					"AwAAAJkGAAAAAAAAmgYAAAAAAAAAAAAAmgYAAAAAAACbBgAAAAAAAAAAAACbBgAAAAAAAJwGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQYAAAAAAACZBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2573,
					3,
					"left_delete",
					null,
					"AwAAAJsGAAAAAAAAmwYAAAAAAAABAAAAcpoGAAAAAAAAmgYAAAAAAAABAAAAPJkGAAAAAAAAmQYAAAAAAAABAAAAaA",
					"AQAAAAAAAAABAAAAnAYAAAAAAACcBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2574,
					1,
					"insert",
					{
						"characters": "blk));"
					},
					"BgAAAJkGAAAAAAAAmgYAAAAAAAAAAAAAmgYAAAAAAACbBgAAAAAAAAAAAACbBgAAAAAAAJwGAAAAAAAAAAAAAJwGAAAAAAAAnQYAAAAAAAAAAAAAnQYAAAAAAACeBgAAAAAAAAAAAACeBgAAAAAAAJ8GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQYAAAAAAACZBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2576,
					1,
					"cut",
					null,
					"AQAAAJ8GAAAAAAAAnwYAAAAAAAAKAAAAcHRyLCBsZW4pOw",
					"AQAAAAAAAAABAAAAnwYAAAAAAACpBgAAAAAAAP///////+9/"
				],
				[
					2580,
					1,
					"left_delete",
					null,
					"AQAAABwGAAAAAAAAHAYAAAAAAABCAAAAICB2b2lkKiBwdHIgPSBibGstPnN0YXJ0OwogIHNpemVfdCBsZW4gPSBibGstPndyaXRlIC0gYmxrLT5zdGFydDsK",
					"AQAAAAAAAAABAAAAXgYAAAAAAAAcBgAAAAAAAAAAAAAAAAAA"
				],
				[
					2600,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAANQQAAAAAAAA1RAAAAAAAAAAAAAA1RAAAAAAAADXEAAAAAAAAAAAAADXEAAAAAAAANgQAAAAAAAAAAAAANgQAAAAAAAA2RAAAAAAAAAAAAAA2RAAAAAAAADaEAAAAAAAAAAAAADaEAAAAAAAANsQAAAAAAAAAAAAANsQAAAAAAAA3BAAAAAAAAAAAAAA3BAAAAAAAADdEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1BAAAAAAAADUEAAAAAAAAAAAAAAAAPC/"
				],
				[
					2601,
					1,
					"insert",
					{
						"characters": " block_tostring"
					},
					"DwAAAN0QAAAAAAAA3hAAAAAAAAAAAAAA3hAAAAAAAADfEAAAAAAAAAAAAADfEAAAAAAAAOAQAAAAAAAAAAAAAOAQAAAAAAAA4RAAAAAAAAAAAAAA4RAAAAAAAADiEAAAAAAAAAAAAADiEAAAAAAAAOMQAAAAAAAAAAAAAOMQAAAAAAAA5BAAAAAAAAAAAAAA5BAAAAAAAADlEAAAAAAAAAAAAADlEAAAAAAAAOYQAAAAAAAAAAAAAOYQAAAAAAAA5xAAAAAAAAAAAAAA5xAAAAAAAADoEAAAAAAAAAAAAADoEAAAAAAAAOkQAAAAAAAAAAAAAOkQAAAAAAAA6hAAAAAAAAAAAAAA6hAAAAAAAADrEAAAAAAAAAAAAADrEAAAAAAAAOwQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3RAAAAAAAADdEAAAAAAAAAAAAAAAAPC/"
				],
				[
					2602,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOwQAAAAAAAA7hAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BAAAAAAAADsEAAAAAAAAAAAAAAAAPC/"
				],
				[
					2603,
					1,
					"insert",
					{
						"characters": "&buf->block,"
					},
					"DAAAAO0QAAAAAAAA7hAAAAAAAAAAAAAA7hAAAAAAAADvEAAAAAAAAAAAAADvEAAAAAAAAPAQAAAAAAAAAAAAAPAQAAAAAAAA8RAAAAAAAAAAAAAA8RAAAAAAAADyEAAAAAAAAAAAAADyEAAAAAAAAPMQAAAAAAAAAAAAAPMQAAAAAAAA9BAAAAAAAAAAAAAA9BAAAAAAAAD1EAAAAAAAAAAAAAD1EAAAAAAAAPYQAAAAAAAAAAAAAPYQAAAAAAAA9xAAAAAAAAAAAAAA9xAAAAAAAAD4EAAAAAAAAAAAAAD4EAAAAAAAAPkQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7RAAAAAAAADtEAAAAAAAAAAAAAAAAPC/"
				],
				[
					2604,
					1,
					"insert",
					{
						"characters": " ctxg"
					},
					"BQAAAPkQAAAAAAAA+hAAAAAAAAAAAAAA+hAAAAAAAAD7EAAAAAAAAAAAAAD7EAAAAAAAAPwQAAAAAAAAAAAAAPwQAAAAAAAA/RAAAAAAAAAAAAAA/RAAAAAAAAD+EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+RAAAAAAAAD5EAAAAAAAAAAAAAAAAPC/"
				],
				[
					2605,
					1,
					"left_delete",
					null,
					"AQAAAP0QAAAAAAAA/RAAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAA/hAAAAAAAAD+EAAAAAAAAAAAAAAAAPC/"
				],
				[
					2607,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAP4QAAAAAAAA/xAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/hAAAAAAAAD+EAAAAAAAAAAAAAAAAPC/"
				],
				[
					2610,
					1,
					"left_delete",
					null,
					"AQAAAAARAAAAAAAAABEAAAAAAABrAAAAICB2b2lkKiBwdHIgPSBidWYtPnN0YXJ0OwogIHNpemVfdCBsZW4gPSBidWYtPndyaXRlIC0gYnVmLT5zdGFydDsKICByZXR1cm4gSlNfTmV3U3RyaW5nTGVuKGN0eCwgcHRyLCBsZW4pOwo",
					"AQAAAAAAAAABAAAAABEAAAAAAABrEQAAAAAAAAAAAAAAAAAA"
				],
				[
					2648,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAALA4AAAAAAABCDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2657,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAB8BAAAAAAAAIAEAAAAAAAAAAAAAIAEAAAAAAAAiAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwEAAAAAAAAfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2661,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAKQBAAAAAAAApQEAAAAAAAAAAAAApQEAAAAAAACnAQAAAAAAAAAAAAAgAQAAAAAAACABAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAApAEAAAAAAACkAQAAAAAAAP///////+9/"
				],
				[
					2665,
					1,
					"insert",
					{
						"characters": "tr"
					},
					"AwAAAB4BAAAAAAAAHwEAAAAAAAAAAAAApAEAAAAAAACkAQAAAAAAAAIAAAAgIB8BAAAAAAAAIAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgEAAAAAAAAeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2670,
					1,
					"insert",
					{
						"characters": "tr"
					},
					"AgAAAGIBAAAAAAAAYwEAAAAAAAAAAAAAYwEAAAAAAABkAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgEAAAAAAABiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2673,
					1,
					"insert",
					{
						"characters": "tr"
					},
					"AgAAACoBAAAAAAAAKwEAAAAAAAAAAAAAKwEAAAAAAAAsAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgEAAAAAAAAqAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2682,
					1,
					"insert",
					{
						"characters": "ptr"
					},
					"BAAAABYCAAAAAAAAFwIAAAAAAAAAAAAAFwIAAAAAAAAXAgAAAAAAAAEAAAB4FwIAAAAAAAAYAgAAAAAAAAAAAAAYAgAAAAAAABkCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgIAAAAAAAAXAgAAAAAAAAAAAAAAAPC/"
				],
				[
					2696,
					1,
					"paste",
					null,
					"AgAAAGwCAAAAAAAAbwIAAAAAAAAAAAAAbwIAAAAAAABvAgAAAAAAAAEAAAB4",
					"AQAAAAAAAAABAAAAbAIAAAAAAABtAgAAAAAAAAAAAAAAAPC/"
				],
				[
					2701,
					1,
					"paste",
					null,
					"AgAAALkCAAAAAAAAvAIAAAAAAAAAAAAAvAIAAAAAAAC8AgAAAAAAAAEAAAB4",
					"AQAAAAAAAAABAAAAuQIAAAAAAAC6AgAAAAAAAAAAAAAAAPC/"
				],
				[
					2708,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAJsDAAAAAAAAnAMAAAAAAAAAAAAAnAMAAAAAAACgAwAAAAAAAAAAAACcAwAAAAAAAJwDAAAAAAAABAAAACAgICCcAwAAAAAAAJ4DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwMAAAAAAACbAwAAAAAAAAAAAAAAAPC/"
				],
				[
					2715,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAALQMAAAAAAAA3AwAAAAAAAAAAAAAAAPC/"
				],
				[
					2716,
					1,
					"insert",
					{
						"characters": "w"
					},
					"AgAAAC0DAAAAAAAALgMAAAAAAAAAAAAALgMAAAAAAAAuAwAAAAAAAAoAAABibG9ja19mcmVl",
					"AQAAAAAAAAABAAAALQMAAAAAAAA3AwAAAAAAAAAAAAAAAPC/"
				],
				[
					2723,
					1,
					"insert",
					{
						"characters": "ptr"
					},
					"BAAAACIDAAAAAAAAIwMAAAAAAAAAAAAAIwMAAAAAAAAjAwAAAAAAAAEAAAB4IwMAAAAAAAAkAwAAAAAAAAAAAAAkAwAAAAAAACUDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgMAAAAAAAAjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					2732,
					1,
					"insert",
					{
						"characters": "block_free"
					},
					"CwAAAC8DAAAAAAAAMAMAAAAAAAAAAAAAMAMAAAAAAAAwAwAAAAAAAAEAAAB3MAMAAAAAAAAxAwAAAAAAAAAAAAAxAwAAAAAAADIDAAAAAAAAAAAAADIDAAAAAAAAMwMAAAAAAAAAAAAAMwMAAAAAAAA0AwAAAAAAAAAAAAA0AwAAAAAAADUDAAAAAAAAAAAAADUDAAAAAAAANgMAAAAAAAAAAAAANgMAAAAAAAA3AwAAAAAAAAAAAAA3AwAAAAAAADgDAAAAAAAAAAAAADgDAAAAAAAAOQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwMAAAAAAAAwAwAAAAAAAAAAAAAAAPC/"
				],
				[
					2748,
					1,
					"cut",
					null,
					"AQAAAN4HAAAAAAAA3gcAAAAAAAAOAAAAIGJ1Zi0+d3JpdGUgPSA",
					"AQAAAAAAAAABAAAA3gcAAAAAAADsBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2750,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOAHAAAAAAAA4QcAAAAAAAAAAAAA4QcAAAAAAADlBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AcAAAAAAADgBwAAAAAAAP///////+9/"
				],
				[
					2751,
					1,
					"paste",
					null,
					"AQAAAOUHAAAAAAAA8wcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QcAAAAAAADlBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2752,
					1,
					"insert",
					{
						"characters": "=0"
					},
					"AgAAAPMHAAAAAAAA9AcAAAAAAAAAAAAA9AcAAAAAAAD1BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wcAAAAAAADzBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2753,
					2,
					"left_delete",
					null,
					"AgAAAPQHAAAAAAAA9AcAAAAAAAABAAAAMPMHAAAAAAAA8wcAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAA9QcAAAAAAAD1BwAAAAAAAAAAAAAAAPC/"
				],
				[
					2754,
					1,
					"insert",
					{
						"characters": "0;"
					},
					"AgAAAPMHAAAAAAAA9AcAAAAAAAAAAAAA9AcAAAAAAAD1BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wcAAAAAAADzBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2767,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAM8HAAAAAAAA0QcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwcAAAAAAADPBwAAAAAAAAAAAAAAAAAA"
				],
				[
					2768,
					1,
					"unindent",
					null,
					"AQAAAM8HAAAAAAAAzwcAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAA0QcAAAAAAADRBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2770,
					1,
					"unindent",
					null,
					"AQAAAOEHAAAAAAAA4QcAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAA4QcAAAAAAADhBwAAAAAAAAAAAAAAAAAA"
				],
				[
					2771,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOEHAAAAAAAA4gcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QcAAAAAAADhBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2801,
					1,
					"cut",
					null,
					"AQAAABIBAAAAAAAAEgEAAAAAAAALAAAAICB1aW50OF90KiA",
					"AQAAAAAAAAABAAAAHQEAAAAAAAASAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2802,
					1,
					"paste",
					null,
					"AQAAABIBAAAAAAAAHQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgEAAAAAAAASAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2805,
					1,
					"paste",
					null,
					"AgAAAMoAAAAAAAAA1QAAAAAAAAAAAAAA1QAAAAAAAADVAAAAAAAAAAQAAABCT09M",
					"AQAAAAAAAAABAAAAzgAAAAAAAADKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2816,
					1,
					"insert",
					{
						"characters": "ptr"
					},
					"BAAAALoBAAAAAAAAuwEAAAAAAAAAAAAAuwEAAAAAAAC7AQAAAAAAAAUAAABGQUxTRbsBAAAAAAAAvAEAAAAAAAAAAAAAvAEAAAAAAAC9AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugEAAAAAAAC/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					2821,
					1,
					"left_delete",
					null,
					"AQAAAJ8BAAAAAAAAnwEAAAAAAAAOAAAAcmV0dXJuIFRSVUU7CiA",
					"AQAAAAAAAAABAAAAnwEAAAAAAACtAQAAAAAAAAAAAAAAACRA"
				],
				[
					2852,
					1,
					"insert",
					{
						"characters": "uint8_t"
					},
					"BwAAAGEHAAAAAAAAYgcAAAAAAAAAAAAAYgcAAAAAAABjBwAAAAAAAAAAAABjBwAAAAAAAGQHAAAAAAAAAAAAAGQHAAAAAAAAZQcAAAAAAAAAAAAAZQcAAAAAAABmBwAAAAAAAAAAAABmBwAAAAAAAGcHAAAAAAAAAAAAAGcHAAAAAAAAaAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQcAAAAAAABhBwAAAAAAAAAAAAAAADRA"
				],
				[
					2853,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAAGgHAAAAAAAAaQcAAAAAAAAAAAAAaQcAAAAAAABqBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAcAAAAAAABoBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2854,
					2,
					"left_delete",
					null,
					"AgAAAGkHAAAAAAAAaQcAAAAAAAABAAAAKmgHAAAAAAAAaAcAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAagcAAAAAAABqBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2855,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAGgHAAAAAAAAaQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAcAAAAAAABoBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2856,
					1,
					"insert",
					{
						"characters": " ptr"
					},
					"BAAAAGkHAAAAAAAAagcAAAAAAAAAAAAAagcAAAAAAABrBwAAAAAAAAAAAABrBwAAAAAAAGwHAAAAAAAAAAAAAGwHAAAAAAAAbQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQcAAAAAAABpBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2859,
					1,
					"left_delete",
					null,
					"AQAAAG0HAAAAAAAAbQcAAAAAAAAIAAAAQk9PTCByZXQ",
					"AQAAAAAAAAABAAAAbQcAAAAAAAB1BwAAAAAAAAAAAAAAAPC/"
				],
				[
					2864,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"BAAAAGoHAAAAAAAAawcAAAAAAAAAAAAAawcAAAAAAABrBwAAAAAAAAMAAABwdHJrBwAAAAAAAGwHAAAAAAAAAAAAAGwHAAAAAAAAbQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagcAAAAAAABtBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2877,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"BAAAALQHAAAAAAAAtQcAAAAAAAAAAAAAtQcAAAAAAAC1BwAAAAAAAAoAAABidWYtPnN0YXJ0tQcAAAAAAAC2BwAAAAAAAAAAAAC2BwAAAAAAALcHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAcAAAAAAAC+BwAAAAAAAAAAAAAAAPC/"
				],
				[
					2880,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AgAAALcHAAAAAAAAuAcAAAAAAAAAAAAAuAcAAAAAAAC4BwAAAAAAAAsAAAAgLSBMV1NfUFJFOw",
					"AQAAAAAAAAABAAAAtwcAAAAAAADCBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2892,
					1,
					"left_delete",
					null,
					"AQAAAMgHAAAAAAAAyAcAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAyQcAAAAAAADJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2893,
					1,
					"insert",
					{
						"characters": " buf->"
					},
					"BgAAAMgHAAAAAAAAyQcAAAAAAAAAAAAAyQcAAAAAAADKBwAAAAAAAAAAAADKBwAAAAAAAMsHAAAAAAAAAAAAAMsHAAAAAAAAzAcAAAAAAAAAAAAAzAcAAAAAAADNBwAAAAAAAAAAAADNBwAAAAAAAM4HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAcAAAAAAADIBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2894,
					1,
					"insert",
					{
						"characters": "start"
					},
					"BQAAAM4HAAAAAAAAzwcAAAAAAAAAAAAAzwcAAAAAAADQBwAAAAAAAAAAAADQBwAAAAAAANEHAAAAAAAAAAAAANEHAAAAAAAA0gcAAAAAAAAAAAAA0gcAAAAAAADTBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgcAAAAAAADOBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2897,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAANMHAAAAAAAA1AcAAAAAAAAAAAAA1AcAAAAAAADVBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wcAAAAAAADTBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2898,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANUHAAAAAAAA1gcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QcAAAAAAADVBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2899,
					3,
					"left_delete",
					null,
					"AwAAANUHAAAAAAAA1QcAAAAAAAABAAAAINQHAAAAAAAA1AcAAAAAAAABAAAAK9MHAAAAAAAA0wcAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA1gcAAAAAAADWBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2905,
					1,
					"left_delete",
					null,
					"AQAAAOYHAAAAAAAA5gcAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAA5wcAAAAAAADnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2906,
					1,
					"insert",
					{
						"characters": "bf"
					},
					"AgAAAOYHAAAAAAAA5wcAAAAAAAAAAAAA5wcAAAAAAADoBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gcAAAAAAADmBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2907,
					1,
					"left_delete",
					null,
					"AQAAAOcHAAAAAAAA5wcAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAA6AcAAAAAAADoBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2908,
					1,
					"insert",
					{
						"characters": "uf->start"
					},
					"CQAAAOcHAAAAAAAA6AcAAAAAAAAAAAAA6AcAAAAAAADpBwAAAAAAAAAAAADpBwAAAAAAAOoHAAAAAAAAAAAAAOoHAAAAAAAA6wcAAAAAAAAAAAAA6wcAAAAAAADsBwAAAAAAAAAAAADsBwAAAAAAAO0HAAAAAAAAAAAAAO0HAAAAAAAA7gcAAAAAAAAAAAAA7gcAAAAAAADvBwAAAAAAAAAAAADvBwAAAAAAAPAHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wcAAAAAAADnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2945,
					1,
					"paste",
					null,
					"AgAAABUHAAAAAAAAHQcAAAAAAAAAAAAAHQcAAAAAAAAdBwAAAAAAAAQAAABCT09M",
					"AQAAAAAAAAABAAAAFQcAAAAAAAAZBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2950,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9GAAAI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgIm1pbm5ldC1idWZmZXIuaCIKI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KCnZvaWQKYmxvY2tfaW5pdChzdHJ1Y3QgYnl0ZV9ibG9jayogYmxrLCB1aW50OF90KiBzdGFydCwgc2l6ZV90IGxlbikgewogIGJsay0+c3RhcnQgPSBzdGFydDsKICBibGstPmVuZCA9IGJsay0+c3RhcnQgKyBsZW47Cn0KCiAgdWludDhfdCogCmJsb2NrX2FsbG9jKHN0cnVjdCBieXRlX2Jsb2NrKiBibGssIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHVpbnQ4X3QqIHB0cjsKCiAgaWYoKHB0ciA9IGpzX21hbGxvYyhjdHgsIHNpemUgKyBMV1NfUFJFKSkpIHsKICAgIGJsay0+c3RhcnQgPSBwdHIgKyBMV1NfUFJFOwogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ICsgc2l6ZTsKICAgICB9CgogIHJldHVybiBwdHI7Cn0KCnVpbnQ4X3QqCmJsb2NrX3JlYWxsb2Moc3RydWN0IGJ5dGVfYmxvY2sqIGJsaywgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KSB7CiAgdWludDhfdCogcHRyOwoKICBpZighc2l6ZSkgewogICAgYmxvY2tfZnJlZShibGssIEpTX0dldFJ1bnRpbWUoY3R4KSk7CiAgICByZXR1cm4gMDsKICB9CgogIGlmKChwdHIgPSBqc19yZWFsbG9jKGN0eCwgYmxvY2tfQUxMT0MoYmxrKSwgc2l6ZSArIExXU19QUkUpKSkgewogICAgYmxrLT5zdGFydCA9IHB0ciArIExXU19QUkU7CiAgICBibGstPmVuZCA9IGJsay0+c3RhcnQgKyBzaXplOwogIH0gZWxzZSB7CiAgICBibGstPmVuZCA9IGJsay0+c3RhcnQgPSAwOwogIH0KCiAgcmV0dXJuIHB0cjsKfQoKdm9pZApibG9ja19mcmVlKHN0cnVjdCBieXRlX2Jsb2NrKiBibGssIEpTUnVudGltZSogcnQpIHsKICBpZihibGstPnN0YXJ0KQogICAganNfZnJlZV9ydChydCwgYmxrLT5zdGFydCAtIExXU19QUkUpOwoKICBibGstPnN0YXJ0ID0gYmxrLT5lbmQgPSAwOwp9CgpzdGF0aWMgdm9pZApibG9ja19maW5hbGl6ZXIoSlNSdW50aW1lKiBydCwgdm9pZCogYWxsb2MsIHZvaWQqIHN0YXJ0KSB7CiAganNfZnJlZV9ydChydCwgYWxsb2MpOwp9CgppbnQKYmxvY2tfZnJvbWFycmF5YnVmZmVyKHN0cnVjdCBieXRlX2Jsb2NrKiBibGssIEpTVmFsdWVDb25zdCB2YWx1ZSwgSlNDb250ZXh0KiBjdHgpIHsKICBzaXplX3QgbGVuOwoKICBpZighKGJsay0+c3RhcnQgPSBKU19HZXRBcnJheUJ1ZmZlcihjdHgsICZsZW4sIHZhbHVlKSkpCiAgICByZXR1cm4gLTE7CgogIGJsay0+ZW5kID0gYmxrLT5zdGFydCArIGxlbjsKICByZXR1cm4gMDsKfQoKSlNWYWx1ZQpibG9ja190b2FycmF5YnVmZmVyKHN0cnVjdCBieXRlX2Jsb2NrKiBibGssIEpTQ29udGV4dCogY3R4KSB7CiAgc3RydWN0IGJ5dGVfYmxvY2sgbWVtID0gYmxvY2tfbW92ZShibGspOwogIHJldHVybiBKU19OZXdBcnJheUJ1ZmZlcihjdHgsIGJsb2NrX0JFR0lOKCZtZW0pLCBibG9ja19TSVpFKCZtZW0pLCBibG9ja19maW5hbGl6ZXIsIGJsb2NrX0FMTE9DKCZtZW0pLCBGQUxTRSk7Cn0KCkpTVmFsdWUKYmxvY2tfdG9zdHJpbmcoc3RydWN0IGJ5dGVfYmxvY2sgY29uc3QqIGJsaywgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gSlNfTmV3U3RyaW5nTGVuKGN0eCwgYmxvY2tfQkVHSU4oYmxrKSwgYmxvY2tfU0laRShibGspKTsKfQoKdm9pZApidWZmZXJfaW5pdChzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1ZiwgdWludDhfdCogc3RhcnQsIHNpemVfdCBsZW4pIHsKICBibG9ja19pbml0KCZidWYtPmJsb2NrLCBzdGFydCwgbGVuKTsKCiAgYnVmLT5yZWFkID0gYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQ7CiAgYnVmLT5hbGxvYyA9IDA7Cn0KCnVpbnQ4X3QqCmJ1ZmZlcl9hbGxvYyhzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KSB7CiAgdWludDhfdCogcmV0OwogIGlmKChyZXQgPSBibG9ja19hbGxvYygmYnVmLT5ibG9jaywgc2l6ZSwgY3R4KSkpIHsKICAgIGJ1Zi0+YWxsb2MgPSByZXQ7CiAgICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0OwogICAgYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQ7CiAgfQogIHJldHVybiByZXQ7Cn0KCnNzaXplX3QKYnVmZmVyX2FwcGVuZChzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1ZiwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IG4sIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoKHNpemVfdClidWZmZXJfQVZBSUwoYnVmKSA8IG4pIHsKICAgIGlmKCFidWZmZXJfcmVhbGxvYyhidWYsIGJ1ZmZlcl9XUklURShidWYpICsgbiArIDEsIGN0eCkpCiAgICAgIHJldHVybiAtMTsKICB9CiAgbWVtY3B5KGJ1Zi0+d3JpdGUsIHgsIG4pOwogIGJ1Zi0+d3JpdGVbbl0gPSAnXDAnOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gbjsKfQoKdm9pZApidWZmZXJfZnJlZShzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1ZiwgSlNSdW50aW1lKiBydCkgewogIGlmKGJ1Zi0+YWxsb2MpCiAgICBibG9ja19mcmVlKCZidWYtPmJsb2NrLCBydCk7CiAgYnVmLT5yZWFkID0gYnVmLT53cml0ZSA9IGJ1Zi0+YWxsb2MgPSAwOwp9CgpCT09MCmJ1ZmZlcl93cml0ZShzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1ZiwgY29uc3QgY2hhciogeCwgc2l6ZV90IG4pIHsKICBhc3NlcnQoKHNpemVfdClidWZmZXJfQVZBSUwoYnVmKSA+PSBuKTsKICBtZW1jcHkoYnVmLT53cml0ZSwgeCwgbik7CiAgYnVmLT53cml0ZSArPSBuOwogIHJldHVybiBUUlVFOwp9CgppbnQKYnVmZmVyX3ZwcmludGYoc3RydWN0IGJ5dGVfYnVmZmVyKiBidWYsIGNvbnN0IGNoYXIqIGZvcm1hdCwgdmFfbGlzdCBhcCkgewogIHNzaXplX3Qgbiwgc2l6ZSA9IGJ1ZmZlcl9BVkFJTChidWYpOwogIG4gPSB2c25wcmludGYoKGNoYXIqKWJ1Zi0+d3JpdGUsIHNpemUsIGZvcm1hdCwgYXApOwogIGlmKG4gPiBzaXplKQogICAgcmV0dXJuIDA7CiAgaWYobiA+PSAoaW50KXNpemUpCiAgICBuID0gc2l6ZTsKICBidWYtPndyaXRlICs9IG47CiAgcmV0dXJuIG47Cn0KCmludApidWZmZXJfcHJpbnRmKHN0cnVjdCBieXRlX2J1ZmZlciogYnVmLCBjb25zdCBjaGFyKiBmb3JtYXQsIC4uLikgewogIGludCBuOwogIHZhX2xpc3QgYXA7CiAgdmFfc3RhcnQoYXAsIGZvcm1hdCk7CiAgbiA9IGJ1ZmZlcl92cHJpbnRmKGJ1ZiwgZm9ybWF0LCBhcCk7CiAgdmFfZW5kKGFwKTsKICByZXR1cm4gbjsKfQoKdWludDhfdCoKYnVmZmVyX3JlYWxsb2Moc3RydWN0IGJ5dGVfYnVmZmVyKiBidWYsIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHNpemVfdCByZCwgd3I7CiAgdWludDhfdCogeDsKCiAgaWYoIXNpemUpIHsKICAgIGJ1ZmZlcl9mcmVlKGJ1ZiwgSlNfR2V0UnVudGltZShjdHgpKTsKICAgIHJldHVybiAwOwogIH0KCiAgcmQgPSBidWZmZXJfUkVBRChidWYpOwogIHdyID0gYnVmZmVyX1dSSVRFKGJ1Zik7CiAgYXNzZXJ0KHNpemUgPj0gd3IpOwoKICBpZigoeCA9IGJsb2NrX3JlYWxsb2MoJmJ1Zi0+YmxvY2ssIHNpemUsIGN0eCkpKSB7CiAgICBpZihidWYtPmFsbG9jID09IDAgJiYgYnVmLT5zdGFydCAmJiB3cikKICAgICAgbWVtY3B5KHggKyBMV1NfUFJFLCBidWYtPnN0YXJ0LCB3cik7CgogICAgYnVmLT5hbGxvYyA9IHg7CiAgICBidWYtPndyaXRlID0gYnVmLT5zdGFydCArIHdyOwogICAgYnVmLT5yZWFkID0gYnVmLT5zdGFydCArIHJkOwogIH0KICByZXR1cm4geDsKfQoKaW50CmJ1ZmZlcl9mcm9tYXJyYXlidWZmZXIoc3RydWN0IGJ5dGVfYnVmZmVyKiBidWYsIEpTVmFsdWVDb25zdCB2YWx1ZSwgSlNDb250ZXh0KiBjdHgpIHsKICBpbnQgcmV0OwoKICBpZighKHJldCA9IGJsb2NrX2Zyb21hcnJheWJ1ZmZlcigmYnVmLT5ibG9jaywgdmFsdWUsIGN0eCkpKSB7CiAgICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0OwogICAgYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQ7CiAgICBidWYtPmFsbG9jID0gMDsKICB9CiAgcmV0dXJuIHJldDsKfQoKaW50CmJ1ZmZlcl9mcm9tdmFsdWUoc3RydWN0IGJ5dGVfYnVmZmVyKiBidWYsIEpTVmFsdWVDb25zdCB2YWx1ZSwgSlNDb250ZXh0KiBjdHgpIHsKICBpbnQgcmV0ID0gLTE7CiAgSlNCdWZmZXIgaW5wdXQgPSBqc19idWZmZXJfZnJvbShjdHgsIHZhbHVlKTsKCiAgaWYoaW5wdXQuZGF0YSA9PSAwKSB7CiAgICByZXQgPSAwOwogIH0gZWxzZSBpZihidWZmZXJfYWxsb2MoYnVmLCBpbnB1dC5zaXplLCBjdHgpKSB7CiAgICBidWZmZXJfd3JpdGUoYnVmLCBpbnB1dC5kYXRhLCBpbnB1dC5zaXplKTsKICAgIHJldCA9IDE7CiAgfQplbmQ6CiAganNfYnVmZmVyX2ZyZWUoJmlucHV0LCBjdHgpOwogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKYnVmZmVyX3Rvc3RyaW5nKHN0cnVjdCBieXRlX2J1ZmZlciBjb25zdCogYnVmLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja190b3N0cmluZygmYnVmLT5ibG9jaywgY3R4KTsKfQoKY2hhcioKYnVmZmVyX2VzY2FwZWQoc3RydWN0IGJ5dGVfYnVmZmVyIGNvbnN0KiBidWYsIEpTQ29udGV4dCogY3R4KSB7CiAgc3RydWN0IGJ5dGVfYnVmZmVyIG91dCA9IEJVRkZFUl8wKCk7CiAgdWludDhfdCogcHRyOwoKICBidWZmZXJfYWxsb2MoJm91dCwgKGJ1ZmZlcl9XUklURShidWYpICogNCkgKyAxLCBjdHgpOwoKICBvdXQuc3RhcnQgLT0gTFdTX1BSRTsKICBvdXQucmVhZCA9IG91dC53cml0ZSA9IG91dC5zdGFydDsKCiAgZm9yKHB0ciA9IGJ1Zi0+c3RhcnQ7IHB0ciA8IGJ1Zi0+d3JpdGU7IHB0cisrKSB7CiAgICBjaGFyIGMgPSAqcHRyOwogICAgc3dpdGNoKGMpIHsKICAgICAgY2FzZSAnXG4nOgogICAgICAgIGJ1ZmZlcl9wdXRjaGFyKCZvdXQsICdcXCcpOwogICAgICAgIGJ1ZmZlcl9wdXRjaGFyKCZvdXQsICduJyk7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgJ1xyJzoKICAgICAgICBidWZmZXJfcHV0Y2hhcigmb3V0LCAnXFwnKTsKICAgICAgICBidWZmZXJfcHV0Y2hhcigmb3V0LCAncicpOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlICdcdCc6CiAgICAgICAgYnVmZmVyX3B1dGNoYXIoJm91dCwgJ1xcJyk7CiAgICAgICAgYnVmZmVyX3B1dGNoYXIoJm91dCwgJ3QnKTsKICAgICAgICBicmVhazsKICAgICAgY2FzZSAnXHYnOgogICAgICAgIGJ1ZmZlcl9wdXRjaGFyKCZvdXQsICdcXCcpOwogICAgICAgIGJ1ZmZlcl9wdXRjaGFyKCZvdXQsICd2Jyk7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgJ1xiJzoKICAgICAgICBidWZmZXJfcHV0Y2hhcigmb3V0LCAnXFwnKTsKICAgICAgICBidWZmZXJfcHV0Y2hhcigmb3V0LCAnYicpOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlIDA6CiAgICAgIGNhc2UgMToKICAgICAgY2FzZSAyOgogICAgICBjYXNlIDM6CiAgICAgIGNhc2UgNDoKICAgICAgY2FzZSA1OgogICAgICBjYXNlIDY6CiAgICAgIGNhc2UgNzoKICAgICAgY2FzZSAxMjoKICAgICAgY2FzZSAxNDoKICAgICAgY2FzZSAxNToKICAgICAgY2FzZSAxNjoKICAgICAgY2FzZSAxNzoKICAgICAgY2FzZSAxODoKICAgICAgY2FzZSAxOToKICAgICAgY2FzZSAyMDoKICAgICAgY2FzZSAyMToKICAgICAgY2FzZSAyMjoKICAgICAgY2FzZSAyMzoKICAgICAgY2FzZSAyNDoKICAgICAgY2FzZSAyNToKICAgICAgY2FzZSAyNjoKICAgICAgY2FzZSAyNzoKICAgICAgY2FzZSAyODoKICAgICAgY2FzZSAyOToKICAgICAgY2FzZSAzMDoKICAgICAgY2FzZSAzMTogYnVmZmVyX3ByaW50Zigmb3V0LCAiXFx4JTAyIiwgYyk7IGJyZWFrOwogICAgICBkZWZhdWx0OiBidWZmZXJfcHV0Y2hhcigmb3V0LCBjKTsgYnJlYWs7CiAgICB9CiAgfQogICpvdXQud3JpdGUgPSAnXDAnOwogIHJldHVybiAoY2hhciopb3V0LnN0YXJ0Owp9Cgp2b2lkCmJ1ZmZlcl9maW5hbGl6ZXIoSlNSdW50aW1lKiBydCwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpIHsKICAvLyBzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1ZiA9IG9wYXF1ZTsKfQoKSlNWYWx1ZQpidWZmZXJfdG9hcnJheWJ1ZmZlcihzdHJ1Y3QgYnl0ZV9idWZmZXIgY29uc3QqIGJ1ZiwgSlNDb250ZXh0KiBjdHgpIHsKICB2b2lkKiBwdHIgPSBidWYtPnN0YXJ0OwogIHNpemVfdCBsZW4gPSBidWYtPmVuZCAtIGJ1Zi0+c3RhcnQ7CiAgcmV0dXJuIEpTX05ld0FycmF5QnVmZmVyKGN0eCwgcHRyLCBsZW4sIGJ1ZmZlcl9maW5hbGl6ZXIsICh2b2lkKilidWYsIEZBTFNFKTsKfQoKdm9pZApidWZmZXJfZHVtcChjb25zdCBjaGFyKiBuLCBzdHJ1Y3QgYnl0ZV9idWZmZXIgY29uc3QqIGJ1ZikgewogIGZwcmludGYoc3RkZXJyLCAiJXNcdHsgd3JpdGUgPSAldGQsIHJlYWQgPSAldGQsIHNpemUgPSAldGQgfVxuIiwgbiwgYnVmLT53cml0ZSAtIGJ1Zi0+c3RhcnQsIGJ1Zi0+cmVhZCAtIGJ1Zi0+c3RhcnQsIGJ1Zi0+ZW5kIC0gYnVmLT5zdGFydCk7CiAgZmZsdXNoKHN0ZGVycik7Cn0KAAAAAAAAAAC3GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQcAAAAAAAAdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2951,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAHQcAAAAAAAAdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2952,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAHQcAAAAAAAAdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2953,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAHQcAAAAAAAAdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2954,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAHQcAAAAAAAAdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2955,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAHQcAAAAAAAAdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2961,
					1,
					"",
					null,
					"AQAAAFwAAAAAAAAAZwAAAAAAAAARAAAAc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAAXAAAAAAAAABtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2962,
					1,
					"",
					null,
					"AQAAANkAAAAAAAAA5AAAAAAAAAARAAAAc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAA2QAAAAAAAADqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2963,
					1,
					"",
					null,
					"AQAAALkBAAAAAAAAxAEAAAAAAAARAAAAc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAAuQEAAAAAAADKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2964,
					1,
					"",
					null,
					"AQAAABkDAAAAAAAAJAMAAAAAAAARAAAAc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAAGQMAAAAAAAAqAwAAAAAAAAAAAAAAAPC/"
				],
				[
					2965,
					1,
					"",
					null,
					"AQAAABUEAAAAAAAAIAQAAAAAAAARAAAAc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAAFQQAAAAAAAAmBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2966,
					1,
					"",
					null,
					"AQAAAPAEAAAAAAAA+wQAAAAAAAARAAAAc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAA8AQAAAAAAAABBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2967,
					1,
					"",
					null,
					"AQAAABYFAAAAAAAAIQUAAAAAAAARAAAAc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAAFgUAAAAAAAAnBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2968,
					1,
					"",
					null,
					"AQAAAMQFAAAAAAAAzwUAAAAAAAARAAAAc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAAxAUAAAAAAADVBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2973,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA2AYAAAAAAADYBgAAAAAAAAAAAAAAAPC/"
				],
				[
					3031,
					1,
					"insert",
					{
						"characters": "\nHJS"
					},
					"BQAAALIWAAAAAAAAsxYAAAAAAAAAAAAAsxYAAAAAAAC1FgAAAAAAAAAAAAC1FgAAAAAAALYWAAAAAAAAAAAAALYWAAAAAAAAtxYAAAAAAAAAAAAAtxYAAAAAAAC4FgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAshYAAAAAAACyFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3032,
					3,
					"left_delete",
					null,
					"AwAAALcWAAAAAAAAtxYAAAAAAAABAAAAU7YWAAAAAAAAthYAAAAAAAABAAAASrUWAAAAAAAAtRYAAAAAAAABAAAASA",
					"AQAAAAAAAAABAAAAuBYAAAAAAAC4FgAAAAAAAAAAAAAAAPC/"
				],
				[
					3033,
					1,
					"insert",
					{
						"characters": "HS"
					},
					"AgAAALUWAAAAAAAAthYAAAAAAAAAAAAAthYAAAAAAAC3FgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtRYAAAAAAAC1FgAAAAAAAAAAAAAAAPC/"
				],
				[
					3034,
					2,
					"left_delete",
					null,
					"AgAAALYWAAAAAAAAthYAAAAAAAABAAAAU7UWAAAAAAAAtRYAAAAAAAABAAAASA",
					"AQAAAAAAAAABAAAAtxYAAAAAAAC3FgAAAAAAAAAAAAAAAPC/"
				],
				[
					3035,
					1,
					"insert",
					{
						"characters": "JSValue"
					},
					"BwAAALUWAAAAAAAAthYAAAAAAAAAAAAAthYAAAAAAAC3FgAAAAAAAAAAAAC3FgAAAAAAALgWAAAAAAAAAAAAALgWAAAAAAAAuRYAAAAAAAAAAAAAuRYAAAAAAAC6FgAAAAAAAAAAAAC6FgAAAAAAALsWAAAAAAAAAAAAALsWAAAAAAAAvBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtRYAAAAAAAC1FgAAAAAAAAAAAAAAAPC/"
				],
				[
					3036,
					1,
					"insert",
					{
						"characters": " ret;"
					},
					"BQAAALwWAAAAAAAAvRYAAAAAAAAAAAAAvRYAAAAAAAC+FgAAAAAAAAAAAAC+FgAAAAAAAL8WAAAAAAAAAAAAAL8WAAAAAAAAwBYAAAAAAAAAAAAAwBYAAAAAAADBFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvBYAAAAAAAC8FgAAAAAAAAAAAAAAAPC/"
				],
				[
					3037,
					1,
					"insert",
					{
						"characters": "\n\nret"
					},
					"CAAAAMEWAAAAAAAAwhYAAAAAAAAAAAAAwhYAAAAAAADEFgAAAAAAAAAAAADEFgAAAAAAAMUWAAAAAAAAAAAAAMUWAAAAAAAAxxYAAAAAAAAAAAAAwhYAAAAAAADCFgAAAAAAAAIAAAAgIMUWAAAAAAAAxhYAAAAAAAAAAAAAxhYAAAAAAADHFgAAAAAAAAAAAADHFgAAAAAAAMgWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwRYAAAAAAADBFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3038,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMgWAAAAAAAAyRYAAAAAAAAAAAAAyRYAAAAAAADKFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyBYAAAAAAADIFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3039,
					1,
					"insert",
					{
						"characters": " block_"
					},
					"BwAAAMoWAAAAAAAAyxYAAAAAAAAAAAAAyxYAAAAAAADMFgAAAAAAAAAAAADMFgAAAAAAAM0WAAAAAAAAAAAAAM0WAAAAAAAAzhYAAAAAAAAAAAAAzhYAAAAAAADPFgAAAAAAAAAAAADPFgAAAAAAANAWAAAAAAAAAAAAANAWAAAAAAAA0RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyhYAAAAAAADKFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3040,
					1,
					"insert",
					{
						"characters": "toarray"
					},
					"BwAAANEWAAAAAAAA0hYAAAAAAAAAAAAA0hYAAAAAAADTFgAAAAAAAAAAAADTFgAAAAAAANQWAAAAAAAAAAAAANQWAAAAAAAA1RYAAAAAAAAAAAAA1RYAAAAAAADWFgAAAAAAAAAAAADWFgAAAAAAANcWAAAAAAAAAAAAANcWAAAAAAAA2BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0RYAAAAAAADRFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3041,
					1,
					"insert_completion",
					{
						"completion": "block_toarraybuffer",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "block_toarraybuffer"
					},
					"AgAAAMsWAAAAAAAAyxYAAAAAAAANAAAAYmxvY2tfdG9hcnJhecsWAAAAAAAA3hYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2BYAAAAAAADYFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3042,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAN4WAAAAAAAA4BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3hYAAAAAAADeFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3043,
					1,
					"insert",
					{
						"characters": "&buf->block"
					},
					"CwAAAN8WAAAAAAAA4BYAAAAAAAAAAAAA4BYAAAAAAADhFgAAAAAAAAAAAADhFgAAAAAAAOIWAAAAAAAAAAAAAOIWAAAAAAAA4xYAAAAAAAAAAAAA4xYAAAAAAADkFgAAAAAAAAAAAADkFgAAAAAAAOUWAAAAAAAAAAAAAOUWAAAAAAAA5hYAAAAAAAAAAAAA5hYAAAAAAADnFgAAAAAAAAAAAADnFgAAAAAAAOgWAAAAAAAAAAAAAOgWAAAAAAAA6RYAAAAAAAAAAAAA6RYAAAAAAADqFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3xYAAAAAAADfFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3044,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOoWAAAAAAAA6xYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6hYAAAAAAADqFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3045,
					1,
					"insert",
					{
						"characters": " ctx"
					},
					"BAAAAOsWAAAAAAAA7BYAAAAAAAAAAAAA7BYAAAAAAADtFgAAAAAAAAAAAADtFgAAAAAAAO4WAAAAAAAAAAAAAO4WAAAAAAAA7xYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6xYAAAAAAADrFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3047,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPAWAAAAAAAA8RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8BYAAAAAAADwFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3048,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPEWAAAAAAAA8hYAAAAAAAAAAAAA8hYAAAAAAAD0FgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8RYAAAAAAADxFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3051,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAPQWAAAAAAAA9RYAAAAAAAAAAAAA9RYAAAAAAAD3FgAAAAAAAAAAAADyFgAAAAAAAPIWAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAA9BYAAAAAAAD0FgAAAAAAAAAAAAAAAPC/"
				],
				[
					3054,
					2,
					"left_delete",
					null,
					"AgAAAPMWAAAAAAAA8xYAAAAAAAACAAAAICDyFgAAAAAAAPIWAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAA9RYAAAAAAAD1FgAAAAAAAAAAAAAAAPC/"
				],
				[
					3057,
					1,
					"insert",
					{
						"characters": "buf->"
					},
					"BQAAAPIWAAAAAAAA8xYAAAAAAAAAAAAA8xYAAAAAAAD0FgAAAAAAAAAAAAD0FgAAAAAAAPUWAAAAAAAAAAAAAPUWAAAAAAAA9hYAAAAAAAAAAAAA9hYAAAAAAAD3FgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8hYAAAAAAADyFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3058,
					1,
					"insert",
					{
						"characters": "w"
					},
					"AQAAAPcWAAAAAAAA+BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9xYAAAAAAAD3FgAAAAAAAAAAAAAAAPC/"
				],
				[
					3059,
					1,
					"left_delete",
					null,
					"AQAAAPcWAAAAAAAA9xYAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAA+BYAAAAAAAD4FgAAAAAAAAAAAAAAAPC/"
				],
				[
					3060,
					1,
					"insert",
					{
						"characters": "read"
					},
					"BAAAAPcWAAAAAAAA+BYAAAAAAAAAAAAA+BYAAAAAAAD5FgAAAAAAAAAAAAD5FgAAAAAAAPoWAAAAAAAAAAAAAPoWAAAAAAAA+xYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9xYAAAAAAAD3FgAAAAAAAAAAAAAAAPC/"
				],
				[
					3061,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAPsWAAAAAAAA/BYAAAAAAAAAAAAA/BYAAAAAAAD9FgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+xYAAAAAAAD7FgAAAAAAAAAAAAAAAPC/"
				],
				[
					3062,
					1,
					"insert",
					{
						"characters": " 0;"
					},
					"AwAAAP0WAAAAAAAA/hYAAAAAAAAAAAAA/hYAAAAAAAD/FgAAAAAAAAAAAAD/FgAAAAAAAAAXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/RYAAAAAAAD9FgAAAAAAAAAAAAAAAPC/"
				],
				[
					3063,
					1,
					"insert",
					{
						"characters": "\nbuf->write=0;"
					},
					"DgAAAAAXAAAAAAAAARcAAAAAAAAAAAAAARcAAAAAAAACFwAAAAAAAAAAAAACFwAAAAAAAAMXAAAAAAAAAAAAAAMXAAAAAAAABBcAAAAAAAAAAAAABBcAAAAAAAAFFwAAAAAAAAAAAAAFFwAAAAAAAAYXAAAAAAAAAAAAAAYXAAAAAAAABxcAAAAAAAAAAAAABxcAAAAAAAAIFwAAAAAAAAAAAAAIFwAAAAAAAAkXAAAAAAAAAAAAAAkXAAAAAAAAChcAAAAAAAAAAAAAChcAAAAAAAALFwAAAAAAAAAAAAALFwAAAAAAAAwXAAAAAAAAAAAAAAwXAAAAAAAADRcAAAAAAAAAAAAADRcAAAAAAAAOFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAABcAAAAAAAAAFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3065,
					1,
					"left_delete",
					null,
					"AQAAAP4WAAAAAAAA/hYAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAA/xYAAAAAAAD/FgAAAAAAAAAAAAAAQGBA"
				],
				[
					3066,
					1,
					"insert",
					{
						"characters": "buf>"
					},
					"BAAAAP4WAAAAAAAA/xYAAAAAAAAAAAAA/xYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAEXAAAAAAAAAAAAAAEXAAAAAAAAAhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/hYAAAAAAAD+FgAAAAAAAAAAAAAAAPC/"
				],
				[
					3067,
					1,
					"left_delete",
					null,
					"AQAAAAEXAAAAAAAAARcAAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAAAhcAAAAAAAACFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3068,
					1,
					"insert",
					{
						"characters": "->"
					},
					"AgAAAAEXAAAAAAAAAhcAAAAAAAAAAAAAAhcAAAAAAAADFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARcAAAAAAAABFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3071,
					1,
					"insert",
					{
						"characters": "\nbuffer_"
					},
					"CQAAAPEWAAAAAAAA8hYAAAAAAAAAAAAA8hYAAAAAAAD0FgAAAAAAAAAAAAD0FgAAAAAAAPUWAAAAAAAAAAAAAPUWAAAAAAAA9hYAAAAAAAAAAAAA9hYAAAAAAAD3FgAAAAAAAAAAAAD3FgAAAAAAAPgWAAAAAAAAAAAAAPgWAAAAAAAA+RYAAAAAAAAAAAAA+RYAAAAAAAD6FgAAAAAAAAAAAAD6FgAAAAAAAPsWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8RYAAAAAAADxFgAAAAAAAP///////+9/"
				],
				[
					3072,
					1,
					"insert",
					{
						"characters": "reset"
					},
					"BQAAAPsWAAAAAAAA/BYAAAAAAAAAAAAA/BYAAAAAAAD9FgAAAAAAAAAAAAD9FgAAAAAAAP4WAAAAAAAAAAAAAP4WAAAAAAAA/xYAAAAAAAAAAAAA/xYAAAAAAAAAFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+xYAAAAAAAD7FgAAAAAAAAAAAAAAAPC/"
				],
				[
					3073,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAAXAAAAAAAAAhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAABcAAAAAAAAAFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3074,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAAEXAAAAAAAAAhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARcAAAAAAAABFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3075,
					1,
					"left_delete",
					null,
					"AQAAAAEXAAAAAAAAARcAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAAhcAAAAAAAACFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3076,
					1,
					"insert",
					{
						"characters": "buf"
					},
					"AwAAAAEXAAAAAAAAAhcAAAAAAAAAAAAAAhcAAAAAAAADFwAAAAAAAAAAAAADFwAAAAAAAAQXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARcAAAAAAAABFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3078,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAUXAAAAAAAABhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABRcAAAAAAAAFFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3079,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAYXAAAAAAAABxcAAAAAAAAAAAAABxcAAAAAAAAJFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABhcAAAAAAAAGFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3086,
					6,
					"left_delete",
					null,
					"BwAAAJkWAAAAAAAAmRYAAAAAAAABAAAAdAYXAAAAAAAABhcAAAAAAAACAAAAICCYFgAAAAAAAJgWAAAAAAAAAQAAAHOXFgAAAAAAAJcWAAAAAAAAAQAAAG6WFgAAAAAAAJYWAAAAAAAAAQAAAG+VFgAAAAAAAJUWAAAAAAAAAQAAAGOUFgAAAAAAAJQWAAAAAAAAAQAAACA",
					"AQAAAAAAAAABAAAAmhYAAAAAAACaFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3092,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"BwAAAAEXAAAAAAAAAhcAAAAAAAAAAAAAAhcAAAAAAAADFwAAAAAAAAAAAAADFwAAAAAAAAQXAAAAAAAAAAAAAAQXAAAAAAAABRcAAAAAAAAAAAAABRcAAAAAAAAGFwAAAAAAAAAAAAAGFwAAAAAAAAcXAAAAAAAAAAAAAAcXAAAAAAAACBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARcAAAAAAAABFwAAAAAAAAAAAAAAwHxA"
				],
				[
					3093,
					1,
					"insert",
					{
						"characters": " ret;"
					},
					"BQAAAAgXAAAAAAAACRcAAAAAAAAAAAAACRcAAAAAAAAKFwAAAAAAAAAAAAAKFwAAAAAAAAsXAAAAAAAAAAAAAAsXAAAAAAAADBcAAAAAAAAAAAAADBcAAAAAAAANFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACBcAAAAAAAAIFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3096,
					1,
					"left_delete",
					null,
					"AQAAAA4XAAAAAAAADhcAAAAAAACxAAAAYnVmLT5yZWFkID0gYnVmLT47CmJ1Zi0+d3JpdGU9MDsKICB2b2lkKiBwdHIgPSBidWYtPnN0YXJ0OwogIHNpemVfdCBsZW4gPSBidWYtPmVuZCAtIGJ1Zi0+c3RhcnQ7CiAgcmV0dXJuIEpTX05ld0FycmF5QnVmZmVyKGN0eCwgcHRyLCBsZW4sIGJ1ZmZlcl9maW5hbGl6ZXIsICh2b2lkKilidWYsIEZBTFNFKTsK",
					"AQAAAAAAAAABAAAADhcAAAAAAAC/FwAAAAAAAAAAAAAAAAAA"
				],
				[
					3098,
					1,
					"left_delete",
					null,
					"AQAAAAAXAAAAAAAAABcAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAARcAAAAAAAABFwAAAAAAAAAAAAAAAAAA"
				],
				[
					3223,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAAXAAAAAAAAARcAAAAAAAAAAAAAARcAAAAAAAADFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAABcAAAAAAAAAFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3224,
					2,
					"left_delete",
					null,
					"AgAAAAEXAAAAAAAAARcAAAAAAAACAAAAICAAFwAAAAAAAAAXAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAAxcAAAAAAAADFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3227,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAAXAAAAAAAAARcAAAAAAAAAAAAAARcAAAAAAAADFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAABcAAAAAAAAAFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3237,
					1,
					"insert",
					{
						"characters": "bu"
					},
					"AgAAAAMXAAAAAAAABBcAAAAAAAAAAAAABBcAAAAAAAAFFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAxcAAAAAAAADFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3238,
					3,
					"left_delete",
					null,
					"AwAAAAQXAAAAAAAABBcAAAAAAAABAAAAdQMXAAAAAAAAAxcAAAAAAAABAAAAYgEXAAAAAAAAARcAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAABRcAAAAAAAAFFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3277,
					1,
					"paste",
					null,
					"AQAAAAEXAAAAAAAABBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARcAAAAAAAABFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3278,
					1,
					"insert",
					{
						"characters": "->alloc"
					},
					"BwAAAAQXAAAAAAAABRcAAAAAAAAAAAAABRcAAAAAAAAGFwAAAAAAAAAAAAAGFwAAAAAAAAcXAAAAAAAAAAAAAAcXAAAAAAAACBcAAAAAAAAAAAAACBcAAAAAAAAJFwAAAAAAAAAAAAAJFwAAAAAAAAoXAAAAAAAAAAAAAAoXAAAAAAAACxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABBcAAAAAAAAEFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3279,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAsXAAAAAAAADBcAAAAAAAAAAAAADBcAAAAAAAANFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACxcAAAAAAAALFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3280,
					1,
					"insert",
					{
						"characters": " 0;"
					},
					"AwAAAA0XAAAAAAAADhcAAAAAAAAAAAAADhcAAAAAAAAPFwAAAAAAAAAAAAAPFwAAAAAAABAXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADRcAAAAAAAANFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3281,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABAXAAAAAAAAERcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEBcAAAAAAAAQFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3292,
					1,
					"cut",
					null,
					"AQAAAOwWAAAAAAAA7BYAAAAAAAAlAAAAICBidWZmZXJfcmVzZXQoYnVmKTsKYnVmLT5hbGxvYyA9IDA7Cg",
					"AQAAAAAAAAABAAAA7BYAAAAAAAARFwAAAAAAAAAAAAAAAAAA"
				],
				[
					3293,
					1,
					"paste",
					null,
					"AQAAAOwWAAAAAAAAERcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BYAAAAAAADsFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3330,
					1,
					"insert",
					{
						"characters": "\nMinnetBuffer"
					},
					"DgAAALsWAAAAAAAAvBYAAAAAAAAAAAAAvBYAAAAAAAC+FgAAAAAAAAAAAAC+FgAAAAAAAL8WAAAAAAAAAAAAAL8WAAAAAAAAwBYAAAAAAAAAAAAAwBYAAAAAAADBFgAAAAAAAAAAAADBFgAAAAAAAMIWAAAAAAAAAAAAAMIWAAAAAAAAwxYAAAAAAAAAAAAAwxYAAAAAAADEFgAAAAAAAAAAAADEFgAAAAAAAMUWAAAAAAAAAAAAAMUWAAAAAAAAxhYAAAAAAAAAAAAAxhYAAAAAAADHFgAAAAAAAAAAAADHFgAAAAAAAMgWAAAAAAAAAAAAAMgWAAAAAAAAyRYAAAAAAAAAAAAAyRYAAAAAAADKFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuxYAAAAAAAC7FgAAAAAAAAAAAAAAAPC/"
				],
				[
					3331,
					1,
					"insert",
					{
						"characters": " ret"
					},
					"BAAAAMoWAAAAAAAAyxYAAAAAAAAAAAAAyxYAAAAAAADMFgAAAAAAAAAAAADMFgAAAAAAAM0WAAAAAAAAAAAAAM0WAAAAAAAAzhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyhYAAAAAAADKFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3332,
					3,
					"left_delete",
					null,
					"AwAAAM0WAAAAAAAAzRYAAAAAAAABAAAAdMwWAAAAAAAAzBYAAAAAAAABAAAAZcsWAAAAAAAAyxYAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAzhYAAAAAAADOFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3333,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAMsWAAAAAAAAzBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyxYAAAAAAADLFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3334,
					1,
					"left_delete",
					null,
					"AQAAAMsWAAAAAAAAyxYAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAAzBYAAAAAAADMFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3335,
					1,
					"insert",
					{
						"characters": "moved"
					},
					"BQAAAMsWAAAAAAAAzBYAAAAAAAAAAAAAzBYAAAAAAADNFgAAAAAAAAAAAADNFgAAAAAAAM4WAAAAAAAAAAAAAM4WAAAAAAAAzxYAAAAAAAAAAAAAzxYAAAAAAADQFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyxYAAAAAAADLFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3336,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANAWAAAAAAAA0RYAAAAAAAAAAAAA0RYAAAAAAADSFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0BYAAAAAAADQFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3337,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANIWAAAAAAAA0xYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0hYAAAAAAADSFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3338,
					1,
					"paste",
					null,
					"AQAAANMWAAAAAAAA3hYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0xYAAAAAAADTFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3339,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAN4WAAAAAAAA4BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3hYAAAAAAADeFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3340,
					1,
					"insert",
					{
						"characters": "buf"
					},
					"AwAAAN8WAAAAAAAA4BYAAAAAAAAAAAAA4BYAAAAAAADhFgAAAAAAAAAAAADhFgAAAAAAAOIWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3xYAAAAAAADfFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3342,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOMWAAAAAAAA5BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4xYAAAAAAADjFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3348,
					3,
					"left_delete",
					null,
					"AwAAAAUXAAAAAAAABRcAAAAAAAABAAAAZgQXAAAAAAAABBcAAAAAAAABAAAAdQMXAAAAAAAAAxcAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAABhcAAAAAAAAGFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3349,
					1,
					"insert",
					{
						"characters": "moved"
					},
					"BQAAAAMXAAAAAAAABBcAAAAAAAAAAAAABBcAAAAAAAAFFwAAAAAAAAAAAAAFFwAAAAAAAAYXAAAAAAAAAAAAAAYXAAAAAAAABxcAAAAAAAAAAAAABxcAAAAAAAAIFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAxcAAAAAAAADFwAAAAAAAAAAAAAAAPC/"
				],
				[
					3362,
					2,
					"left_delete",
					null,
					"AgAAABcXAAAAAAAAFxcAAAAAAAAlAAAAICBidWZmZXJfcmVzZXQoYnVmKTsKYnVmLT5hbGxvYyA9IDA7ChYXAAAAAAAAFhcAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAFxcAAAAAAAA8FwAAAAAAAAAAAAAAAAAA"
				],
				[
					3367,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BwAAAOcWAAAAAAAA6BYAAAAAAAAAAAAA6BYAAAAAAADoFgAAAAAAAAYAAAAgcmV0ID3oFgAAAAAAAOkWAAAAAAAAAAAAAOkWAAAAAAAA6hYAAAAAAAAAAAAA6hYAAAAAAADrFgAAAAAAAAAAAADrFgAAAAAAAOwWAAAAAAAAAAAAAOwWAAAAAAAA7RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5xYAAAAAAADtFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3373,
					1,
					"left_delete",
					null,
					"AQAAAK8WAAAAAAAArxYAAAAAAAAPAAAASlNWYWx1ZSByZXQ7CiAg",
					"AQAAAAAAAAABAAAArxYAAAAAAAC+FgAAAAAAAAAAAAAAADRA"
				],
				[
					3378,
					1,
					"left_delete",
					null,
					"AQAAAAgXAAAAAAAACBcAAAAAAAAMAAAAcmV0dXJuIHJldDsK",
					"AQAAAAAAAAABAAAACBcAAAAAAAAUFwAAAAAAAAAAAAAAAAAA"
				],
				[
					3380,
					1,
					"left_delete",
					null,
					"AQAAANYWAAAAAAAA1hYAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA1xYAAAAAAADXFgAAAAAAAAAAAAAAAAAA"
				],
				[
					3400,
					2,
					"right_delete",
					null,
					"AgAAAPgWAAAAAAAA+BYAAAAAAAABAAAALfgWAAAAAAAA+BYAAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAA+BYAAAAAAAD4FgAAAAAAAAAAAAAAAPC/"
				],
				[
					3401,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAPgWAAAAAAAA+RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+BYAAAAAAAD4FgAAAAAAAAAAAAAAAPC/"
				],
				[
					3411,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAlhYAAAAAAACWFgAAAAAAAAAAAAAA4HVA"
				],
				[
					3418,
					1,
					"cut",
					null,
					"AQAAALYGAAAAAAAAtgYAAAAAAAANAAAAPSBidWYtPnN0YXJ0Ow",
					"AQAAAAAAAAABAAAAtgYAAAAAAADDBgAAAAAAAAAAAAAAAPC/"
				],
				[
					3419,
					1,
					"paste",
					null,
					"AQAAALYGAAAAAAAAwwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgYAAAAAAAC2BgAAAAAAAAAAAAAAAPC/"
				],
				[
					3422,
					1,
					"paste",
					null,
					"AQAAAKoGAAAAAAAAtwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgYAAAAAAACqBgAAAAAAAAAAAAAAAPC/"
				],
				[
					3425,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALcGAAAAAAAAuAYAAAAAAAAAAAAAuAYAAAAAAAC6BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwYAAAAAAAC3BgAAAAAAAAAAAAAAAPC/"
				],
				[
					3431,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAArAYAAAAAAAC2BgAAAAAAAAAAAAAAAPC/"
				],
				[
					3432,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAArAYAAAAAAAC2BgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/home/roman/Projects/plot-cv/quickjs/quickjs.h",
			"settings":
			{
				"buffer_size": 40236,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "minnet-buffer.h",
			"settings":
			{
				"buffer_size": 4091,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					646,
					1,
					"insert",
					{
						"characters": "typedef"
					},
					"BwAAAOgAAAAAAAAA6QAAAAAAAAAAAAAA6QAAAAAAAADqAAAAAAAAAAAAAADqAAAAAAAAAOsAAAAAAAAAAAAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADtAAAAAAAAAAAAAADtAAAAAAAAAO4AAAAAAAAAAAAAAO4AAAAAAAAA7wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AAAAAAAAADoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					647,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wAAAAAAAADvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					650,
					1,
					"insert",
					{
						"characters": " Min"
					},
					"BAAAAB0BAAAAAAAAHgEAAAAAAAAAAAAAHgEAAAAAAAAfAQAAAAAAAAAAAAAfAQAAAAAAACABAAAAAAAAAAAAACABAAAAAAAAIQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQEAAAAAAAAdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					651,
					4,
					"left_delete",
					null,
					"BAAAACABAAAAAAAAIAEAAAAAAAABAAAAbh8BAAAAAAAAHwEAAAAAAAABAAAAaR4BAAAAAAAAHgEAAAAAAAABAAAATR0BAAAAAAAAHQEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAIQEAAAAAAAAhAQAAAAAAAAAAAAAAAPC/"
				],
				[
					655,
					1,
					"cut",
					null,
					"AQAAAOgAAAAAAAAA6AAAAAAAAAAIAAAAdHlwZWRlZiA",
					"AQAAAAAAAAABAAAA6AAAAAAAAADwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					657,
					1,
					"paste",
					null,
					"AQAAABcBAAAAAAAAHwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwEAAAAAAAAXAQAAAAAAAAAAAAAAAAAA"
				],
				[
					658,
					1,
					"insert",
					{
						"characters": "struct"
					},
					"BgAAAB8BAAAAAAAAIAEAAAAAAAAAAAAAIAEAAAAAAAAhAQAAAAAAAAAAAAAhAQAAAAAAACIBAAAAAAAAAAAAACIBAAAAAAAAIwEAAAAAAAAAAAAAIwEAAAAAAAAkAQAAAAAAAAAAAAAkAQAAAAAAACUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwEAAAAAAAAfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					659,
					1,
					"insert",
					{
						"characters": " byte"
					},
					"BQAAACUBAAAAAAAAJgEAAAAAAAAAAAAAJgEAAAAAAAAnAQAAAAAAAAAAAAAnAQAAAAAAACgBAAAAAAAAAAAAACgBAAAAAAAAKQEAAAAAAAAAAAAAKQEAAAAAAAAqAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQEAAAAAAAAlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					660,
					1,
					"insert_completion",
					{
						"completion": "byte_block",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "byte_block"
					},
					"AgAAACYBAAAAAAAAJgEAAAAAAAAEAAAAYnl0ZSYBAAAAAAAAMAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgEAAAAAAAAqAQAAAAAAAAAAAAAAAPC/"
				],
				[
					661,
					1,
					"insert",
					{
						"characters": " MinnetBo"
					},
					"CQAAADABAAAAAAAAMQEAAAAAAAAAAAAAMQEAAAAAAAAyAQAAAAAAAAAAAAAyAQAAAAAAADMBAAAAAAAAAAAAADMBAAAAAAAANAEAAAAAAAAAAAAANAEAAAAAAAA1AQAAAAAAAAAAAAA1AQAAAAAAADYBAAAAAAAAAAAAADYBAAAAAAAANwEAAAAAAAAAAAAANwEAAAAAAAA4AQAAAAAAAAAAAAA4AQAAAAAAADkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAEAAAAAAAAwAQAAAAAAAAAAAAAAAPC/"
				],
				[
					662,
					1,
					"left_delete",
					null,
					"AQAAADgBAAAAAAAAOAEAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAOQEAAAAAAAA5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					663,
					1,
					"insert",
					{
						"characters": "lock;"
					},
					"BQAAADgBAAAAAAAAOQEAAAAAAAAAAAAAOQEAAAAAAAA6AQAAAAAAAAAAAAA6AQAAAAAAADsBAAAAAAAAAAAAADsBAAAAAAAAPAEAAAAAAAAAAAAAPAEAAAAAAAA9AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAEAAAAAAAA4AQAAAAAAAAAAAAAAAPC/"
				],
				[
					664,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAD0BAAAAAAAAPgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQEAAAAAAAA9AQAAAAAAAAAAAAAAAPC/"
				],
				[
					670,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABcBAAAAAAAAGAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwEAAAAAAAAXAQAAAAAAAAAAAAAAAAAA"
				],
				[
					688,
					1,
					"paste",
					null,
					"AgAAAIgEAAAAAAAAkwQAAAAAAAAAAAAAkwQAAAAAAACTBAAAAAAAABIAAAAgc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAAiAQAAAAAAACaBAAAAAAAAAAAAAAAAPC/"
				],
				[
					695,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC4DgAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGludHR5cGVzLmg+CiNpbmNsdWRlIDxzdGRpby5oPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxzdGRhcmcuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4KCnN0cnVjdCBieXRlX2Jsb2NrIHsKICB1aW50OF90ICpzdGFydCwgKmVuZDsKfTsKCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgTWlubmV0QmxvY2s7CgojZGVmaW5lIGJsb2NrX1NJWkUoYikgKChiKS0+ZW5kIC0gKGIpLT5zdGFydCkKI2RlZmluZSBibG9ja19CRUdJTihiKSAodm9pZCopKGIpLT5zdGFydAojZGVmaW5lIGJsb2NrX0VORChiKSAodm9pZCopKGIpLT5lbmQKI2RlZmluZSBibG9ja19BTExPQyhiKSAoKGIpLT5zdGFydCA/IChiKS0+c3RhcnQgLSBMV1NfUFJFIDogMCkKCnZvaWQgYmxvY2tfaW5pdChzdHJ1Y3QgYnl0ZV9ibG9jayosIHVpbnQ4X3QqLCBzaXplX3QpOwpCT09MIGJsb2NrX2FsbG9jKHN0cnVjdCBieXRlX2Jsb2NrKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKdWludDhfdCogYmxvY2tfcmVhbGxvYyhzdHJ1Y3QgYnl0ZV9ibG9jayosIHNpemVfdCwgSlNDb250ZXh0Kik7CnZvaWQgYmxvY2tfZnJlZShzdHJ1Y3QgYnl0ZV9ibG9jayosIEpTUnVudGltZSopOwppbnQgYmxvY2tfZnJvbWFycmF5YnVmZmVyKHN0cnVjdCBieXRlX2Jsb2NrKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYmxvY2tfdG9hcnJheWJ1ZmZlcihzdHJ1Y3QgYnl0ZV9ibG9jayosIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3Rvc3RyaW5nKHN0cnVjdCBieXRlX2Jsb2NrIGNvbnN0KiwgSlNDb250ZXh0Kik7CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBieXRlX2Jsb2NrCmJsb2NrX21vdmUoc3RydWN0IGJ5dGVfYmxvY2sqIGJsaykgewogIHN0cnVjdCBieXRlX2Jsb2NrIHJldCA9IHtibGstPnN0YXJ0LCBibGstPmVuZH07CiAgYmxrLT5zdGFydCA9IDA7CiAgYmxrLT5lbmQgPSAwOwogIHJldHVybiByZXQ7Cn0KCnR5cGVkZWYgc3RydWN0IGJ5dGVfYnVmZmVyIHsKICB1bmlvbiB7CiAgIHN0cnVjdCBieXRlX2Jsb2NrOwogICBNaW5uZXRCbG9jayBibG9jazsKICAgIHN0cnVjdCB7CiAgICAgIHVpbnQ4X3QgKnN0YXJ0LCAqZW5kOwogICAgfTsKICB9OwogIHVpbnQ4X3QgKmFsbG9jLCAqcmVhZCwgKndyaXRlOwp9IE1pbm5ldEJ1ZmZlcjsKCiNkZWZpbmUgQlVGRkVSKGJ1ZikgXAogIChNaW5uZXRCdWZmZXIpIHsgKCh1aW50OF90KikoYnVmKSkgKyBMV1NfUFJFLCAoKHVpbnQ4X3QqKShidWYpKSArIExXU19QUkUsICgodWludDhfdCopKGJ1ZikpICsgTFdTX1BSRSwgKCh1aW50OF90KikoYnVmKSkgKyBzaXplb2YoKGJ1ZikpIC0gMSwgMCB9CgojZGVmaW5lIEJVRkZFUl8wKCkgXAogIChNaW5uZXRCdWZmZXIpIHsgMCwgMCwgMCwgMCwgMCB9CgojZGVmaW5lIEJVRkZFUl9OKGJ1ZiwgbikgXAogIChNaW5uZXRCdWZmZXIpIHsgKCh1aW50OF90KikoYnVmKSksICgodWludDhfdCopKGJ1ZikpLCAoKHVpbnQ4X3QqKShidWYpKSwgKCh1aW50OF90KikoYnVmKSkgKyBuLCAwIH0KCiNkZWZpbmUgYnVmZmVyX0FWQUlMKGIpICgoYiktPmVuZCAtIChiKS0+d3JpdGUpCiNkZWZpbmUgYnVmZmVyX1dSSVRFKGIpICgoYiktPndyaXRlIC0gKGIpLT5zdGFydCkKI2RlZmluZSBidWZmZXJfUkVNQUlOKGIpICgoYiktPndyaXRlIC0gKGIpLT5yZWFkKQojZGVmaW5lIGJ1ZmZlcl9SRUFEKGIpICgoYiktPnJlYWQgLSAoYiktPnN0YXJ0KQoKI2RlZmluZSBidWZmZXJfemVybyhiKSBtZW1zZXQoKGIpLCAwLCBzaXplb2YoTWlubmV0QnVmZmVyKSkKCnZvaWQgYnVmZmVyX2luaXQoc3RydWN0IGJ5dGVfYnVmZmVyKiwgdWludDhfdCosIHNpemVfdCk7CkJPT0wgYnVmZmVyX2FsbG9jKHN0cnVjdCBieXRlX2J1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CnNzaXplX3QgYnVmZmVyX2FwcGVuZChzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgYnVmZmVyX2ZyZWUoc3RydWN0IGJ5dGVfYnVmZmVyKiwgSlNSdW50aW1lKik7CkJPT0wgYnVmZmVyX3dyaXRlKHN0cnVjdCBieXRlX2J1ZmZlciosIGNvbnN0IGNoYXIqLCBzaXplX3QpOwppbnQgYnVmZmVyX3ZwcmludGYoc3RydWN0IGJ5dGVfYnVmZmVyKiwgY29uc3QgY2hhciosIHZhX2xpc3QpOwppbnQgYnVmZmVyX3ByaW50ZihzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBjb25zdCBjaGFyKiwgLi4uKTsKdWludDhfdCogYnVmZmVyX3JlYWxsb2Moc3RydWN0IGJ5dGVfYnVmZmVyKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKaW50IGJ1ZmZlcl9mcm9tdmFsdWUoc3RydWN0IGJ5dGVfYnVmZmVyKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYnVmZmVyX3Rvc3RyaW5nKHN0cnVjdCBieXRlX2J1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwpjaGFyKiBidWZmZXJfZXNjYXBlZChzdHJ1Y3QgYnl0ZV9idWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKdm9pZCBidWZmZXJfZmluYWxpemVyKEpTUnVudGltZSosIHZvaWQqLCB2b2lkKik7CkpTVmFsdWUgYnVmZmVyX3RvYXJyYXlidWZmZXIoc3RydWN0IGJ5dGVfYnVmZmVyIGNvbnN0KiwgSlNDb250ZXh0Kik7CnZvaWQgYnVmZmVyX2R1bXAoY29uc3QgY2hhciosIHN0cnVjdCBieXRlX2J1ZmZlciBjb25zdCopOwoKc3RhdGljIGlubGluZSB2b2lkCmJ1ZmZlcl9yZXNldChzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1ZikgewogIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQ7CiAgYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQ7Cn0KCnN0YXRpYyBpbmxpbmUgdWludDhfdCoKYnVmZmVyX2dyb3coc3RydWN0IGJ5dGVfYnVmZmVyKiBidWYsIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBidWZmZXJfcmVhbGxvYyhidWYsIChidWYtPmVuZCAtIGJ1Zi0+c3RhcnQpICsgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBCT09MCmJ1ZmZlcl9jbG9uZShzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1ZiwgY29uc3Qgc3RydWN0IGJ5dGVfYnVmZmVyKiBvdGhlciwgSlNDb250ZXh0KiBjdHgpIHsKICBpZighYnVmZmVyX2FsbG9jKGJ1ZiwgYmxvY2tfU0laRShvdGhlciksIGN0eCkpCiAgICByZXR1cm4gRkFMU0U7CiAgbWVtY3B5KGJ1Zi0+c3RhcnQsIG90aGVyLT5zdGFydCwgYnVmZmVyX1dSSVRFKG90aGVyKSk7CgogIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQgKyBidWZmZXJfUkVBRChvdGhlcik7CiAgYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQgKyBidWZmZXJfV1JJVEUob3RoZXIpOwogIHJldHVybiBUUlVFOwp9CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJ1ZmZlcl9za2lwKHN0cnVjdCBieXRlX2J1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIGFzc2VydChidWYtPnJlYWQgKyBzaXplIDw9IGJ1Zi0+d3JpdGUpOwogIGJ1Zi0+cmVhZCArPSBzaXplOwogIHJldHVybiBidWYtPnJlYWQ7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTApidWZmZXJfcHV0Y2hhcihzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1ZiwgY2hhciBjKSB7CiAgaWYoYnVmLT53cml0ZSArIDEgPD0gYnVmLT5lbmQpIHsKICAgICpidWYtPndyaXRlID0gKHVpbnQ4X3QpYzsKICAgIGJ1Zi0+d3JpdGUrKzsKICAgIHJldHVybiBUUlVFOwogIH0KICByZXR1cm4gRkFMU0U7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfQlVGRkVSX0ggKi8KAAAAAAAAAAC6DgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwQAAAAAAACTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					728,
					1,
					"cut",
					null,
					"AQAAAD8LAAAAAAAAPwsAAAAAAACgAAAACnN0YXRpYyBpbmxpbmUgdWludDhfdCoKYnVmZmVyX2dyb3coc3RydWN0IGJ5dGVfYnVmZmVyKiBidWYsIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBidWZmZXJfcmVhbGxvYyhidWYsIChidWYtPmVuZCAtIGJ1Zi0+c3RhcnQpICsgc2l6ZSwgY3R4KTsKfQ",
					"AQAAAAAAAAABAAAAPwsAAAAAAADfCwAAAAAAAAAAAAAAAPC/"
				],
				[
					729,
					1,
					"paste",
					null,
					"AQAAAD8LAAAAAAAA3wsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwsAAAAAAAA/CwAAAAAAAAAAAAAAAPC/"
				],
				[
					734,
					1,
					"paste",
					null,
					"AQAAAJ0DAAAAAAAAOgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQMAAAAAAACdAwAAAAAAAAAAAAAAAPC/"
				],
				[
					735,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADoEAAAAAAAAOwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgQAAAAAAAA6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					747,
					1,
					"insert",
					{
						"characters": "block_SIZ"
					},
					"CQAAABMEAAAAAAAAFAQAAAAAAAAAAAAAFAQAAAAAAAAVBAAAAAAAAAAAAAAVBAAAAAAAABYEAAAAAAAAAAAAABYEAAAAAAAAFwQAAAAAAAAAAAAAFwQAAAAAAAAYBAAAAAAAAAAAAAAYBAAAAAAAABkEAAAAAAAAAAAAABkEAAAAAAAAGgQAAAAAAAAAAAAAGgQAAAAAAAAbBAAAAAAAAAAAAAAbBAAAAAAAABwEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwQAAAAAAAATBAAAAAAAAAAAAAAAAPC/"
				],
				[
					749,
					1,
					"insert",
					{
						"characters": "lk"
					},
					"AgAAABwEAAAAAAAAHQQAAAAAAAAAAAAAHQQAAAAAAAAeBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAQAAAAAAAAcBAAAAAAAAAAAAAAAAPC/"
				],
				[
					750,
					1,
					"left_delete",
					null,
					"AQAAAB0EAAAAAAAAHQQAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAHgQAAAAAAAAeBAAAAAAAAAAAAAAAAPC/"
				],
				[
					751,
					1,
					"insert",
					{
						"characters": "E"
					},
					"AQAAAB0EAAAAAAAAHgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQQAAAAAAAAdBAAAAAAAAAAAAAAAAPC/"
				],
				[
					752,
					2,
					"left_delete",
					null,
					"AgAAAB0EAAAAAAAAHQQAAAAAAAABAAAARRwEAAAAAAAAHAQAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAHgQAAAAAAAAeBAAAAAAAAAAAAAAAAPC/"
				],
				[
					753,
					1,
					"insert",
					{
						"characters": "E(blk)"
					},
					"BgAAABwEAAAAAAAAHQQAAAAAAAAAAAAAHQQAAAAAAAAeBAAAAAAAAAAAAAAeBAAAAAAAAB8EAAAAAAAAAAAAAB8EAAAAAAAAIAQAAAAAAAAAAAAAIAQAAAAAAAAhBAAAAAAAAAAAAAAhBAAAAAAAACIEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAQAAAAAAAAcBAAAAAAAAAAAAAAAAPC/"
				],
				[
					755,
					1,
					"right_delete",
					null,
					"AQAAACIEAAAAAAAAIgQAAAAAAAAXAAAAKGJsay0+ZW5kIC0gYmxrLT5zdGFydCk",
					"AQAAAAAAAAABAAAAIgQAAAAAAAA5BAAAAAAAAAAAAAAAAPC/"
				],
				[
					780,
					1,
					"insert",
					{
						"characters": "block_grow(&"
					},
					"DAAAADoMAAAAAAAAOwwAAAAAAAAAAAAAOwwAAAAAAAA8DAAAAAAAAAAAAAA8DAAAAAAAAD0MAAAAAAAAAAAAAD0MAAAAAAAAPgwAAAAAAAAAAAAAPgwAAAAAAAA/DAAAAAAAAAAAAAA/DAAAAAAAAEAMAAAAAAAAAAAAAEAMAAAAAAAAQQwAAAAAAAAAAAAAQQwAAAAAAABCDAAAAAAAAAAAAABCDAAAAAAAAEMMAAAAAAAAAAAAAEMMAAAAAAAARAwAAAAAAAAAAAAARAwAAAAAAABFDAAAAAAAAAAAAABFDAAAAAAAAEYMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgwAAAAAAAA6DAAAAAAAAAAAAAAAAPC/"
				],
				[
					781,
					1,
					"insert",
					{
						"characters": "bf"
					},
					"AgAAAEYMAAAAAAAARwwAAAAAAAAAAAAARwwAAAAAAABIDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgwAAAAAAABGDAAAAAAAAAAAAAAAAPC/"
				],
				[
					782,
					1,
					"left_delete",
					null,
					"AQAAAEcMAAAAAAAARwwAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAASAwAAAAAAABIDAAAAAAAAAAAAAAAAPC/"
				],
				[
					783,
					1,
					"insert",
					{
						"characters": "uf->block,"
					},
					"CgAAAEcMAAAAAAAASAwAAAAAAAAAAAAASAwAAAAAAABJDAAAAAAAAAAAAABJDAAAAAAAAEoMAAAAAAAAAAAAAEoMAAAAAAAASwwAAAAAAAAAAAAASwwAAAAAAABMDAAAAAAAAAAAAABMDAAAAAAAAE0MAAAAAAAAAAAAAE0MAAAAAAAATgwAAAAAAAAAAAAATgwAAAAAAABPDAAAAAAAAAAAAABPDAAAAAAAAFAMAAAAAAAAAAAAAFAMAAAAAAAAUQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwwAAAAAAABHDAAAAAAAAAAAAAAAAPC/"
				],
				[
					784,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFEMAAAAAAAAUgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQwAAAAAAABRDAAAAAAAAAAAAAAAAPC/"
				],
				[
					785,
					1,
					"insert",
					{
						"characters": "size,"
					},
					"BQAAAFIMAAAAAAAAUwwAAAAAAAAAAAAAUwwAAAAAAABUDAAAAAAAAAAAAABUDAAAAAAAAFUMAAAAAAAAAAAAAFUMAAAAAAAAVgwAAAAAAAAAAAAAVgwAAAAAAABXDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgwAAAAAAABSDAAAAAAAAAAAAAAAAPC/"
				],
				[
					786,
					1,
					"insert",
					{
						"characters": " ctx);"
					},
					"BgAAAFcMAAAAAAAAWAwAAAAAAAAAAAAAWAwAAAAAAABZDAAAAAAAAAAAAABZDAAAAAAAAFoMAAAAAAAAAAAAAFoMAAAAAAAAWwwAAAAAAAAAAAAAWwwAAAAAAABcDAAAAAAAAAAAAABcDAAAAAAAAF0MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwwAAAAAAABXDAAAAAAAAAAAAAAAAPC/"
				],
				[
					788,
					1,
					"left_delete",
					null,
					"AQAAAF0MAAAAAAAAXQwAAAAAAAA5AAAAYnVmZmVyX3JlYWxsb2MoYnVmLCAoYnVmLT5lbmQgLSBidWYtPnN0YXJ0KSArIHNpemUsIGN0eCk7",
					"AQAAAAAAAAABAAAAXQwAAAAAAACWDAAAAAAAAP///////+9/"
				],
				[
					859,
					1,
					"paste",
					null,
					"AgAAADMCAAAAAAAAOwIAAAAAAAAAAAAAOwIAAAAAAAA7AgAAAAAAAAQAAABCT09M",
					"AQAAAAAAAAABAAAAMwIAAAAAAAA3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					866,
					1,
					"paste",
					null,
					"AgAAAEEIAAAAAAAASQgAAAAAAAAAAAAASQgAAAAAAABJCAAAAAAAAAQAAABCT09M",
					"AQAAAAAAAAABAAAAQQgAAAAAAABFCAAAAAAAAAAAAAAAAPC/"
				],
				[
					877,
					1,
					"paste",
					null,
					"AgAAAPwBAAAAAAAAsAMAAAAAAAAAAAAAsAMAAAAAAACwAwAAAAAAAKQBAAB2b2lkIGJsb2NrX2luaXQoc3RydWN0IGJ5dGVfYmxvY2sqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYmxvY2tfYWxsb2Moc3RydWN0IGJ5dGVfYmxvY2sqLCBzaXplX3QsIEpTQ29udGV4dCopOwp1aW50OF90KiBibG9ja19yZWFsbG9jKHN0cnVjdCBieXRlX2Jsb2NrKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKdm9pZCBibG9ja19mcmVlKHN0cnVjdCBieXRlX2Jsb2NrKiwgSlNSdW50aW1lKik7CmludCBibG9ja19mcm9tYXJyYXlidWZmZXIoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b2FycmF5YnVmZmVyKHN0cnVjdCBieXRlX2Jsb2NrKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYmxvY2tfdG9zdHJpbmcoc3RydWN0IGJ5dGVfYmxvY2sgY29uc3QqLCBKU0NvbnRleHQqKTs",
					"AQAAAAAAAAABAAAAoAMAAAAAAAD8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					882,
					1,
					"left_delete",
					null,
					"AQAAAK8DAAAAAAAArwMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAsAMAAAAAAACwAwAAAAAAAAAAAAAAAPC/"
				],
				[
					887,
					1,
					"paste",
					null,
					"AgAAABcIAAAAAAAA7QsAAAAAAAAAAAAA7QsAAAAAAADtCwAAAAAAAGEDAAB2b2lkIGJ1ZmZlcl9pbml0KHN0cnVjdCBieXRlX2J1ZmZlciosIHVpbnQ4X3QqLCBzaXplX3QpOwp1aW50OF90KiBidWZmZXJfYWxsb2Moc3RydWN0IGJ5dGVfYnVmZmVyKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKc3NpemVfdCBidWZmZXJfYXBwZW5kKHN0cnVjdCBieXRlX2J1ZmZlciosIGNvbnN0IHZvaWQqLCBzaXplX3QsIEpTQ29udGV4dCogY3R4KTsKdm9pZCBidWZmZXJfZnJlZShzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBKU1J1bnRpbWUqKTsKQk9PTCBidWZmZXJfd3JpdGUoc3RydWN0IGJ5dGVfYnVmZmVyKiwgY29uc3QgY2hhciosIHNpemVfdCk7CmludCBidWZmZXJfdnByaW50ZihzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBjb25zdCBjaGFyKiwgdmFfbGlzdCk7CmludCBidWZmZXJfcHJpbnRmKHN0cnVjdCBieXRlX2J1ZmZlciosIGNvbnN0IGNoYXIqLCAuLi4pOwp1aW50OF90KiBidWZmZXJfcmVhbGxvYyhzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBzaXplX3QsIEpTQ29udGV4dCopOwppbnQgYnVmZmVyX2Zyb212YWx1ZShzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBidWZmZXJfdG9zdHJpbmcoc3RydWN0IGJ5dGVfYnVmZmVyIGNvbnN0KiwgSlNDb250ZXh0Kik7CmNoYXIqIGJ1ZmZlcl9lc2NhcGVkKHN0cnVjdCBieXRlX2J1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwp2b2lkIGJ1ZmZlcl9maW5hbGl6ZXIoSlNSdW50aW1lKiwgdm9pZCosIHZvaWQqKTsKSlNWYWx1ZSBidWZmZXJfdG9hcnJheWJ1ZmZlcihzdHJ1Y3QgYnl0ZV9idWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKdm9pZCBidWZmZXJfZHVtcChjb25zdCBjaGFyKiwgc3RydWN0IGJ5dGVfYnVmZmVyIGNvbnN0Kik7",
					"AQAAAAAAAAABAAAAeAsAAAAAAAAXCAAAAAAAAAAAAAAAAPC/"
				],
				[
					890,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADGDwAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGludHR5cGVzLmg+CiNpbmNsdWRlIDxzdGRpby5oPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxzdGRhcmcuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4KCnN0cnVjdCBieXRlX2Jsb2NrIHsKICB1aW50OF90ICpzdGFydCwgKmVuZDsKfTsKCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgTWlubmV0QmxvY2s7CgojZGVmaW5lIGJsb2NrX1NJWkUoYikgKChiKS0+ZW5kIC0gKGIpLT5zdGFydCkKI2RlZmluZSBibG9ja19CRUdJTihiKSAodm9pZCopKGIpLT5zdGFydAojZGVmaW5lIGJsb2NrX0VORChiKSAodm9pZCopKGIpLT5lbmQKI2RlZmluZSBibG9ja19BTExPQyhiKSAoKGIpLT5zdGFydCA/IChiKS0+c3RhcnQgLSBMV1NfUFJFIDogMCkKCnZvaWQgICAgIGJsb2NrX2luaXQoc3RydWN0IGJ5dGVfYmxvY2sqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYmxvY2tfYWxsb2Moc3RydWN0IGJ5dGVfYmxvY2sqLCBzaXplX3QsIEpTQ29udGV4dCopOwp1aW50OF90KiBibG9ja19yZWFsbG9jKHN0cnVjdCBieXRlX2Jsb2NrKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKdm9pZCAgICAgYmxvY2tfZnJlZShzdHJ1Y3QgYnl0ZV9ibG9jayosIEpTUnVudGltZSopOwppbnQgICAgICBibG9ja19mcm9tYXJyYXlidWZmZXIoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSAgYmxvY2tfdG9hcnJheWJ1ZmZlcihzdHJ1Y3QgYnl0ZV9ibG9jayosIEpTQ29udGV4dCopOwpKU1ZhbHVlICBibG9ja190b3N0cmluZyhzdHJ1Y3QgYnl0ZV9ibG9jayBjb25zdCosIEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSB1aW50OF90KgpibG9ja19ncm93KHN0cnVjdCBieXRlX2Jsb2NrKiBibGssIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19yZWFsbG9jKGJsaywgYmxvY2tfU0laRShibGspICsgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3QgYnl0ZV9ibG9jawpibG9ja19tb3ZlKHN0cnVjdCBieXRlX2Jsb2NrKiBibGspIHsKICBzdHJ1Y3QgYnl0ZV9ibG9jayByZXQgPSB7YmxrLT5zdGFydCwgYmxrLT5lbmR9OwogIGJsay0+c3RhcnQgPSAwOwogIGJsay0+ZW5kID0gMDsKICByZXR1cm4gcmV0Owp9Cgp0eXBlZGVmIHN0cnVjdCBieXRlX2J1ZmZlciB7CiAgdW5pb24gewogICAgc3RydWN0IGJ5dGVfYmxvY2s7CiAgICBNaW5uZXRCbG9jayBibG9jazsKICAgIHN0cnVjdCB7CiAgICAgIHVpbnQ4X3QgKnN0YXJ0LCAqZW5kOwogICAgfTsKICB9OwogIHVpbnQ4X3QgKmFsbG9jLCAqcmVhZCwgKndyaXRlOwp9IE1pbm5ldEJ1ZmZlcjsKCiNkZWZpbmUgQlVGRkVSKGJ1ZikgXAogIChNaW5uZXRCdWZmZXIpIHsgKCh1aW50OF90KikoYnVmKSkgKyBMV1NfUFJFLCAoKHVpbnQ4X3QqKShidWYpKSArIExXU19QUkUsICgodWludDhfdCopKGJ1ZikpICsgTFdTX1BSRSwgKCh1aW50OF90KikoYnVmKSkgKyBzaXplb2YoKGJ1ZikpIC0gMSwgMCB9CgojZGVmaW5lIEJVRkZFUl8wKCkgXAogIChNaW5uZXRCdWZmZXIpIHsgMCwgMCwgMCwgMCwgMCB9CgojZGVmaW5lIEJVRkZFUl9OKGJ1ZiwgbikgXAogIChNaW5uZXRCdWZmZXIpIHsgKCh1aW50OF90KikoYnVmKSksICgodWludDhfdCopKGJ1ZikpLCAoKHVpbnQ4X3QqKShidWYpKSwgKCh1aW50OF90KikoYnVmKSkgKyBuLCAwIH0KCiNkZWZpbmUgYnVmZmVyX0FWQUlMKGIpICgoYiktPmVuZCAtIChiKS0+d3JpdGUpCiNkZWZpbmUgYnVmZmVyX1dSSVRFKGIpICgoYiktPndyaXRlIC0gKGIpLT5zdGFydCkKI2RlZmluZSBidWZmZXJfUkVNQUlOKGIpICgoYiktPndyaXRlIC0gKGIpLT5yZWFkKQojZGVmaW5lIGJ1ZmZlcl9SRUFEKGIpICgoYiktPnJlYWQgLSAoYiktPnN0YXJ0KQoKI2RlZmluZSBidWZmZXJfemVybyhiKSBtZW1zZXQoKGIpLCAwLCBzaXplb2YoTWlubmV0QnVmZmVyKSkKCnZvaWQgICAgIGJ1ZmZlcl9pbml0KHN0cnVjdCBieXRlX2J1ZmZlciosIHVpbnQ4X3QqLCBzaXplX3QpOwp1aW50OF90KiBidWZmZXJfYWxsb2Moc3RydWN0IGJ5dGVfYnVmZmVyKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKc3NpemVfdCAgYnVmZmVyX2FwcGVuZChzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgICAgIGJ1ZmZlcl9mcmVlKHN0cnVjdCBieXRlX2J1ZmZlciosIEpTUnVudGltZSopOwpCT09MICAgICBidWZmZXJfd3JpdGUoc3RydWN0IGJ5dGVfYnVmZmVyKiwgY29uc3QgY2hhciosIHNpemVfdCk7CmludCAgICAgIGJ1ZmZlcl92cHJpbnRmKHN0cnVjdCBieXRlX2J1ZmZlciosIGNvbnN0IGNoYXIqLCB2YV9saXN0KTsKaW50ICAgICAgYnVmZmVyX3ByaW50ZihzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBjb25zdCBjaGFyKiwgLi4uKTsKdWludDhfdCogYnVmZmVyX3JlYWxsb2Moc3RydWN0IGJ5dGVfYnVmZmVyKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKaW50ICAgICAgYnVmZmVyX2Zyb21hcnJheWJ1ZmZlcihzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKaW50ICAgICAgYnVmZmVyX2Zyb212YWx1ZShzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSAgYnVmZmVyX3Rvc3RyaW5nKHN0cnVjdCBieXRlX2J1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwpjaGFyKiAgICBidWZmZXJfZXNjYXBlZChzdHJ1Y3QgYnl0ZV9idWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKdm9pZCAgICAgYnVmZmVyX2ZpbmFsaXplcihKU1J1bnRpbWUqLCB2b2lkKiwgdm9pZCopOwpKU1ZhbHVlICBidWZmZXJfdG9hcnJheWJ1ZmZlcihzdHJ1Y3QgYnl0ZV9idWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKdm9pZCAgICAgYnVmZmVyX2R1bXAoY29uc3QgY2hhciosIHN0cnVjdCBieXRlX2J1ZmZlciBjb25zdCopOwoKCnN0YXRpYyBpbmxpbmUgdm9pZApidWZmZXJfcmVzZXQoc3RydWN0IGJ5dGVfYnVmZmVyKiBidWYpIHsKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0OwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0Owp9CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJ1ZmZlcl9ncm93KHN0cnVjdCBieXRlX2J1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gYmxvY2tfZ3JvdygmYnVmLT5ibG9jaywgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBCT09MCmJ1ZmZlcl9jbG9uZShzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1ZiwgY29uc3Qgc3RydWN0IGJ5dGVfYnVmZmVyKiBvdGhlciwgSlNDb250ZXh0KiBjdHgpIHsKICBpZighYnVmZmVyX2FsbG9jKGJ1ZiwgYmxvY2tfU0laRShvdGhlciksIGN0eCkpCiAgICByZXR1cm4gRkFMU0U7CiAgbWVtY3B5KGJ1Zi0+c3RhcnQsIG90aGVyLT5zdGFydCwgYnVmZmVyX1dSSVRFKG90aGVyKSk7CgogIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQgKyBidWZmZXJfUkVBRChvdGhlcik7CiAgYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQgKyBidWZmZXJfV1JJVEUob3RoZXIpOwogIHJldHVybiBUUlVFOwp9CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJ1ZmZlcl9za2lwKHN0cnVjdCBieXRlX2J1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIGFzc2VydChidWYtPnJlYWQgKyBzaXplIDw9IGJ1Zi0+d3JpdGUpOwogIGJ1Zi0+cmVhZCArPSBzaXplOwogIHJldHVybiBidWYtPnJlYWQ7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTApidWZmZXJfcHV0Y2hhcihzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1ZiwgY2hhciBjKSB7CiAgaWYoYnVmLT53cml0ZSArIDEgPD0gYnVmLT5lbmQpIHsKICAgICpidWYtPndyaXRlID0gKHVpbnQ4X3QpYzsKICAgIGJ1Zi0+d3JpdGUrKzsKICAgIHJldHVybiBUUlVFOwogIH0KICByZXR1cm4gRkFMU0U7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfQlVGRkVSX0ggKi8KAAAAAAAAAACIDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QsAAAAAAADtCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1024,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACIDwAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGludHR5cGVzLmg+CiNpbmNsdWRlIDxzdGRpby5oPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxzdGRhcmcuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4KCnN0cnVjdCBieXRlX2Jsb2NrIHsKICB1aW50OF90ICpzdGFydCwgKmVuZDsKfTsKCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgTWlubmV0QmxvY2s7CgojZGVmaW5lIGJsb2NrX1NJWkUoYikgKChiKS0+ZW5kIC0gKGIpLT5zdGFydCkKI2RlZmluZSBibG9ja19CRUdJTihiKSAodm9pZCopKGIpLT5zdGFydAojZGVmaW5lIGJsb2NrX0VORChiKSAodm9pZCopKGIpLT5lbmQKI2RlZmluZSBibG9ja19BTExPQyhiKSAoKGIpLT5zdGFydCA/IChiKS0+c3RhcnQgLSBMV1NfUFJFIDogMCkKCnZvaWQgYmxvY2tfaW5pdChzdHJ1Y3QgYnl0ZV9ibG9jayosIHVpbnQ4X3QqLCBzaXplX3QpOwp1aW50OF90KiBibG9ja19hbGxvYyhzdHJ1Y3QgYnl0ZV9ibG9jayosIHNpemVfdCwgSlNDb250ZXh0Kik7CnVpbnQ4X3QqIGJsb2NrX3JlYWxsb2Moc3RydWN0IGJ5dGVfYmxvY2sqLCBzaXplX3QsIEpTQ29udGV4dCopOwp2b2lkIGJsb2NrX2ZyZWUoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU1J1bnRpbWUqKTsKaW50IGJsb2NrX2Zyb21hcnJheWJ1ZmZlcihzdHJ1Y3QgYnl0ZV9ibG9jayosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3RvYXJyYXlidWZmZXIoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b3N0cmluZyhzdHJ1Y3QgYnl0ZV9ibG9jayBjb25zdCosIEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSB1aW50OF90KgpibG9ja19ncm93KHN0cnVjdCBieXRlX2Jsb2NrKiBibGssIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19yZWFsbG9jKGJsaywgYmxvY2tfU0laRShibGspICsgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3QgYnl0ZV9ibG9jawpibG9ja19tb3ZlKHN0cnVjdCBieXRlX2Jsb2NrKiBibGspIHsKICBzdHJ1Y3QgYnl0ZV9ibG9jayByZXQgPSB7YmxrLT5zdGFydCwgYmxrLT5lbmR9OwogIGJsay0+c3RhcnQgPSAwOwogIGJsay0+ZW5kID0gMDsKICByZXR1cm4gcmV0Owp9Cgp0eXBlZGVmIHN0cnVjdCBieXRlX2J1ZmZlciB7CiAgdW5pb24gewogICAgc3RydWN0IGJ5dGVfYmxvY2s7CiAgICBNaW5uZXRCbG9jayBibG9jazsKICAgIHN0cnVjdCB7CiAgICAgIHVpbnQ4X3QgKnN0YXJ0LCAqZW5kOwogICAgfTsKICB9OwogIHVpbnQ4X3QgKmFsbG9jLCAqcmVhZCwgKndyaXRlOwp9IE1pbm5ldEJ1ZmZlcjsKCiNkZWZpbmUgQlVGRkVSKGJ1ZikgXAogIChNaW5uZXRCdWZmZXIpIHsgKCh1aW50OF90KikoYnVmKSkgKyBMV1NfUFJFLCAoKHVpbnQ4X3QqKShidWYpKSArIExXU19QUkUsICgodWludDhfdCopKGJ1ZikpICsgTFdTX1BSRSwgKCh1aW50OF90KikoYnVmKSkgKyBzaXplb2YoKGJ1ZikpIC0gMSwgMCB9CgojZGVmaW5lIEJVRkZFUl8wKCkgXAogIChNaW5uZXRCdWZmZXIpIHsgMCwgMCwgMCwgMCwgMCB9CgojZGVmaW5lIEJVRkZFUl9OKGJ1ZiwgbikgXAogIChNaW5uZXRCdWZmZXIpIHsgKCh1aW50OF90KikoYnVmKSksICgodWludDhfdCopKGJ1ZikpLCAoKHVpbnQ4X3QqKShidWYpKSwgKCh1aW50OF90KikoYnVmKSkgKyBuLCAwIH0KCiNkZWZpbmUgYnVmZmVyX0FWQUlMKGIpICgoYiktPmVuZCAtIChiKS0+d3JpdGUpCiNkZWZpbmUgYnVmZmVyX1dSSVRFKGIpICgoYiktPndyaXRlIC0gKGIpLT5zdGFydCkKI2RlZmluZSBidWZmZXJfUkVNQUlOKGIpICgoYiktPndyaXRlIC0gKGIpLT5yZWFkKQojZGVmaW5lIGJ1ZmZlcl9SRUFEKGIpICgoYiktPnJlYWQgLSAoYiktPnN0YXJ0KQoKI2RlZmluZSBidWZmZXJfemVybyhiKSBtZW1zZXQoKGIpLCAwLCBzaXplb2YoTWlubmV0QnVmZmVyKSkKCnZvaWQgYnVmZmVyX2luaXQoc3RydWN0IGJ5dGVfYnVmZmVyKiwgdWludDhfdCosIHNpemVfdCk7CnVpbnQ4X3QqIGJ1ZmZlcl9hbGxvYyhzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBzaXplX3QsIEpTQ29udGV4dCopOwpzc2l6ZV90IGJ1ZmZlcl9hcHBlbmQoc3RydWN0IGJ5dGVfYnVmZmVyKiwgY29uc3Qgdm9pZCosIHNpemVfdCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIGJ1ZmZlcl9mcmVlKHN0cnVjdCBieXRlX2J1ZmZlciosIEpTUnVudGltZSopOwpCT09MIGJ1ZmZlcl93cml0ZShzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBjb25zdCBjaGFyKiwgc2l6ZV90KTsKaW50IGJ1ZmZlcl92cHJpbnRmKHN0cnVjdCBieXRlX2J1ZmZlciosIGNvbnN0IGNoYXIqLCB2YV9saXN0KTsKaW50IGJ1ZmZlcl9wcmludGYoc3RydWN0IGJ5dGVfYnVmZmVyKiwgY29uc3QgY2hhciosIC4uLik7CnVpbnQ4X3QqIGJ1ZmZlcl9yZWFsbG9jKHN0cnVjdCBieXRlX2J1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbWFycmF5YnVmZmVyKHN0cnVjdCBieXRlX2J1ZmZlciosIEpTVmFsdWUsIEpTQ29udGV4dCopOwppbnQgYnVmZmVyX2Zyb212YWx1ZShzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBidWZmZXJfdG9zdHJpbmcoc3RydWN0IGJ5dGVfYnVmZmVyIGNvbnN0KiwgSlNDb250ZXh0Kik7CmNoYXIqIGJ1ZmZlcl9lc2NhcGVkKHN0cnVjdCBieXRlX2J1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwp2b2lkIGJ1ZmZlcl9maW5hbGl6ZXIoSlNSdW50aW1lKiwgdm9pZCosIHZvaWQqKTsKSlNWYWx1ZSBidWZmZXJfdG9hcnJheWJ1ZmZlcihzdHJ1Y3QgYnl0ZV9idWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKdm9pZCBidWZmZXJfZHVtcChjb25zdCBjaGFyKiwgc3RydWN0IGJ5dGVfYnVmZmVyIGNvbnN0Kik7CgpzdGF0aWMgaW5saW5lIHZvaWQKYnVmZmVyX3Jlc2V0KHN0cnVjdCBieXRlX2J1ZmZlciogYnVmKSB7CiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydDsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydDsKfQoKc3RhdGljIGlubGluZSB1aW50OF90KgpidWZmZXJfZ3JvdyhzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIGJsb2NrX2dyb3coJmJ1Zi0+YmxvY2ssIHNpemUsIGN0eCk7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTApidWZmZXJfY2xvbmUoc3RydWN0IGJ5dGVfYnVmZmVyKiBidWYsIGNvbnN0IHN0cnVjdCBieXRlX2J1ZmZlciogb3RoZXIsIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoIWJ1ZmZlcl9hbGxvYyhidWYsIGJsb2NrX1NJWkUob3RoZXIpLCBjdHgpKQogICAgcmV0dXJuIEZBTFNFOwogIG1lbWNweShidWYtPnN0YXJ0LCBvdGhlci0+c3RhcnQsIGJ1ZmZlcl9XUklURShvdGhlcikpOwoKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0ICsgYnVmZmVyX1JFQUQob3RoZXIpOwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0ICsgYnVmZmVyX1dSSVRFKG90aGVyKTsKICByZXR1cm4gVFJVRTsKfQoKc3RhdGljIGlubGluZSB1aW50OF90KgpidWZmZXJfc2tpcChzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUpIHsKICBhc3NlcnQoYnVmLT5yZWFkICsgc2l6ZSA8PSBidWYtPndyaXRlKTsKICBidWYtPnJlYWQgKz0gc2l6ZTsKICByZXR1cm4gYnVmLT5yZWFkOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKYnVmZmVyX3B1dGNoYXIoc3RydWN0IGJ5dGVfYnVmZmVyKiBidWYsIGNoYXIgYykgewogIGlmKGJ1Zi0+d3JpdGUgKyAxIDw9IGJ1Zi0+ZW5kKSB7CiAgICAqYnVmLT53cml0ZSA9ICh1aW50OF90KWM7CiAgICBidWYtPndyaXRlKys7CiAgICByZXR1cm4gVFJVRTsKICB9CiAgcmV0dXJuIEZBTFNFOwp9CgojZW5kaWYgLyogTUlOTkVUX0JVRkZFUl9IICovCgAAAAAAAAAAiA8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgcAAAAAAABKBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1025,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACIDwAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGludHR5cGVzLmg+CiNpbmNsdWRlIDxzdGRpby5oPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxzdGRhcmcuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4KCnN0cnVjdCBieXRlX2Jsb2NrIHsKICB1aW50OF90ICpzdGFydCwgKmVuZDsKfTsKCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgTWlubmV0QmxvY2s7CgojZGVmaW5lIGJsb2NrX1NJWkUoYikgKChiKS0+ZW5kIC0gKGIpLT5zdGFydCkKI2RlZmluZSBibG9ja19CRUdJTihiKSAodm9pZCopKGIpLT5zdGFydAojZGVmaW5lIGJsb2NrX0VORChiKSAodm9pZCopKGIpLT5lbmQKI2RlZmluZSBibG9ja19BTExPQyhiKSAoKGIpLT5zdGFydCA/IChiKS0+c3RhcnQgLSBMV1NfUFJFIDogMCkKCnZvaWQgYmxvY2tfaW5pdChzdHJ1Y3QgYnl0ZV9ibG9jayosIHVpbnQ4X3QqLCBzaXplX3QpOwp1aW50OF90KiBibG9ja19hbGxvYyhzdHJ1Y3QgYnl0ZV9ibG9jayosIHNpemVfdCwgSlNDb250ZXh0Kik7CnVpbnQ4X3QqIGJsb2NrX3JlYWxsb2Moc3RydWN0IGJ5dGVfYmxvY2sqLCBzaXplX3QsIEpTQ29udGV4dCopOwp2b2lkIGJsb2NrX2ZyZWUoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU1J1bnRpbWUqKTsKaW50IGJsb2NrX2Zyb21hcnJheWJ1ZmZlcihzdHJ1Y3QgYnl0ZV9ibG9jayosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3RvYXJyYXlidWZmZXIoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b3N0cmluZyhzdHJ1Y3QgYnl0ZV9ibG9jayBjb25zdCosIEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSB1aW50OF90KgpibG9ja19ncm93KHN0cnVjdCBieXRlX2Jsb2NrKiBibGssIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19yZWFsbG9jKGJsaywgYmxvY2tfU0laRShibGspICsgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3QgYnl0ZV9ibG9jawpibG9ja19tb3ZlKHN0cnVjdCBieXRlX2Jsb2NrKiBibGspIHsKICBzdHJ1Y3QgYnl0ZV9ibG9jayByZXQgPSB7YmxrLT5zdGFydCwgYmxrLT5lbmR9OwogIGJsay0+c3RhcnQgPSAwOwogIGJsay0+ZW5kID0gMDsKICByZXR1cm4gcmV0Owp9Cgp0eXBlZGVmIHN0cnVjdCBieXRlX2J1ZmZlciB7CiAgdW5pb24gewogICAgc3RydWN0IGJ5dGVfYmxvY2s7CiAgICBNaW5uZXRCbG9jayBibG9jazsKICAgIHN0cnVjdCB7CiAgICAgIHVpbnQ4X3QgKnN0YXJ0LCAqZW5kOwogICAgfTsKICB9OwogIHVpbnQ4X3QgKmFsbG9jLCAqcmVhZCwgKndyaXRlOwp9IE1pbm5ldEJ1ZmZlcjsKCiNkZWZpbmUgQlVGRkVSKGJ1ZikgXAogIChNaW5uZXRCdWZmZXIpIHsgKCh1aW50OF90KikoYnVmKSkgKyBMV1NfUFJFLCAoKHVpbnQ4X3QqKShidWYpKSArIExXU19QUkUsICgodWludDhfdCopKGJ1ZikpICsgTFdTX1BSRSwgKCh1aW50OF90KikoYnVmKSkgKyBzaXplb2YoKGJ1ZikpIC0gMSwgMCB9CgojZGVmaW5lIEJVRkZFUl8wKCkgXAogIChNaW5uZXRCdWZmZXIpIHsgMCwgMCwgMCwgMCwgMCB9CgojZGVmaW5lIEJVRkZFUl9OKGJ1ZiwgbikgXAogIChNaW5uZXRCdWZmZXIpIHsgKCh1aW50OF90KikoYnVmKSksICgodWludDhfdCopKGJ1ZikpLCAoKHVpbnQ4X3QqKShidWYpKSwgKCh1aW50OF90KikoYnVmKSkgKyBuLCAwIH0KCiNkZWZpbmUgYnVmZmVyX0FWQUlMKGIpICgoYiktPmVuZCAtIChiKS0+d3JpdGUpCiNkZWZpbmUgYnVmZmVyX1dSUE9TKGIpICgoYiktPndyaXRlIC0gKGIpLT5zdGFydCkKI2RlZmluZSBidWZmZXJfUkVNQUlOKGIpICgoYiktPndyaXRlIC0gKGIpLT5yZWFkKQojZGVmaW5lIGJ1ZmZlcl9SRUFEKGIpICgoYiktPnJlYWQgLSAoYiktPnN0YXJ0KQoKI2RlZmluZSBidWZmZXJfemVybyhiKSBtZW1zZXQoKGIpLCAwLCBzaXplb2YoTWlubmV0QnVmZmVyKSkKCnZvaWQgYnVmZmVyX2luaXQoc3RydWN0IGJ5dGVfYnVmZmVyKiwgdWludDhfdCosIHNpemVfdCk7CnVpbnQ4X3QqIGJ1ZmZlcl9hbGxvYyhzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBzaXplX3QsIEpTQ29udGV4dCopOwpzc2l6ZV90IGJ1ZmZlcl9hcHBlbmQoc3RydWN0IGJ5dGVfYnVmZmVyKiwgY29uc3Qgdm9pZCosIHNpemVfdCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIGJ1ZmZlcl9mcmVlKHN0cnVjdCBieXRlX2J1ZmZlciosIEpTUnVudGltZSopOwpCT09MIGJ1ZmZlcl93cml0ZShzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBjb25zdCBjaGFyKiwgc2l6ZV90KTsKaW50IGJ1ZmZlcl92cHJpbnRmKHN0cnVjdCBieXRlX2J1ZmZlciosIGNvbnN0IGNoYXIqLCB2YV9saXN0KTsKaW50IGJ1ZmZlcl9wcmludGYoc3RydWN0IGJ5dGVfYnVmZmVyKiwgY29uc3QgY2hhciosIC4uLik7CnVpbnQ4X3QqIGJ1ZmZlcl9yZWFsbG9jKHN0cnVjdCBieXRlX2J1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbWFycmF5YnVmZmVyKHN0cnVjdCBieXRlX2J1ZmZlciosIEpTVmFsdWUsIEpTQ29udGV4dCopOwppbnQgYnVmZmVyX2Zyb212YWx1ZShzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBidWZmZXJfdG9zdHJpbmcoc3RydWN0IGJ5dGVfYnVmZmVyIGNvbnN0KiwgSlNDb250ZXh0Kik7CmNoYXIqIGJ1ZmZlcl9lc2NhcGVkKHN0cnVjdCBieXRlX2J1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwp2b2lkIGJ1ZmZlcl9maW5hbGl6ZXIoSlNSdW50aW1lKiwgdm9pZCosIHZvaWQqKTsKSlNWYWx1ZSBidWZmZXJfdG9hcnJheWJ1ZmZlcihzdHJ1Y3QgYnl0ZV9idWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKdm9pZCBidWZmZXJfZHVtcChjb25zdCBjaGFyKiwgc3RydWN0IGJ5dGVfYnVmZmVyIGNvbnN0Kik7CgpzdGF0aWMgaW5saW5lIHZvaWQKYnVmZmVyX3Jlc2V0KHN0cnVjdCBieXRlX2J1ZmZlciogYnVmKSB7CiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydDsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydDsKfQoKc3RhdGljIGlubGluZSB1aW50OF90KgpidWZmZXJfZ3JvdyhzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIGJsb2NrX2dyb3coJmJ1Zi0+YmxvY2ssIHNpemUsIGN0eCk7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTApidWZmZXJfY2xvbmUoc3RydWN0IGJ5dGVfYnVmZmVyKiBidWYsIGNvbnN0IHN0cnVjdCBieXRlX2J1ZmZlciogb3RoZXIsIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoIWJ1ZmZlcl9hbGxvYyhidWYsIGJsb2NrX1NJWkUob3RoZXIpLCBjdHgpKQogICAgcmV0dXJuIEZBTFNFOwogIG1lbWNweShidWYtPnN0YXJ0LCBvdGhlci0+c3RhcnQsIGJ1ZmZlcl9XUlBPUyhvdGhlcikpOwoKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0ICsgYnVmZmVyX1JFQUQob3RoZXIpOwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0ICsgYnVmZmVyX1dSUE9TKG90aGVyKTsKICByZXR1cm4gVFJVRTsKfQoKc3RhdGljIGlubGluZSB1aW50OF90KgpidWZmZXJfc2tpcChzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUpIHsKICBhc3NlcnQoYnVmLT5yZWFkICsgc2l6ZSA8PSBidWYtPndyaXRlKTsKICBidWYtPnJlYWQgKz0gc2l6ZTsKICByZXR1cm4gYnVmLT5yZWFkOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKYnVmZmVyX3B1dGNoYXIoc3RydWN0IGJ5dGVfYnVmZmVyKiBidWYsIGNoYXIgYykgewogIGlmKGJ1Zi0+d3JpdGUgKyAxIDw9IGJ1Zi0+ZW5kKSB7CiAgICAqYnVmLT53cml0ZSA9ICh1aW50OF90KWM7CiAgICBidWYtPndyaXRlKys7CiAgICByZXR1cm4gVFJVRTsKICB9CiAgcmV0dXJuIEZBTFNFOwp9CgojZW5kaWYgLyogTUlOTkVUX0JVRkZFUl9IICovCgAAAAAAAAAAhQ8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgcAAAAAAABKBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1026,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACFDwAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGludHR5cGVzLmg+CiNpbmNsdWRlIDxzdGRpby5oPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxzdGRhcmcuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4KCnN0cnVjdCBieXRlX2Jsb2NrIHsKICB1aW50OF90ICpzdGFydCwgKmVuZDsKfTsKCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgTWlubmV0QmxvY2s7CgojZGVmaW5lIGJsb2NrX1NJWkUoYikgKChiKS0+ZW5kIC0gKGIpLT5zdGFydCkKI2RlZmluZSBibG9ja19CRUdJTihiKSAodm9pZCopKGIpLT5zdGFydAojZGVmaW5lIGJsb2NrX0VORChiKSAodm9pZCopKGIpLT5lbmQKI2RlZmluZSBibG9ja19BTExPQyhiKSAoKGIpLT5zdGFydCA/IChiKS0+c3RhcnQgLSBMV1NfUFJFIDogMCkKCnZvaWQgYmxvY2tfaW5pdChzdHJ1Y3QgYnl0ZV9ibG9jayosIHVpbnQ4X3QqLCBzaXplX3QpOwp1aW50OF90KiBibG9ja19hbGxvYyhzdHJ1Y3QgYnl0ZV9ibG9jayosIHNpemVfdCwgSlNDb250ZXh0Kik7CnVpbnQ4X3QqIGJsb2NrX3JlYWxsb2Moc3RydWN0IGJ5dGVfYmxvY2sqLCBzaXplX3QsIEpTQ29udGV4dCopOwp2b2lkIGJsb2NrX2ZyZWUoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU1J1bnRpbWUqKTsKaW50IGJsb2NrX2Zyb21hcnJheWJ1ZmZlcihzdHJ1Y3QgYnl0ZV9ibG9jayosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3RvYXJyYXlidWZmZXIoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b3N0cmluZyhzdHJ1Y3QgYnl0ZV9ibG9jayBjb25zdCosIEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSB1aW50OF90KgpibG9ja19ncm93KHN0cnVjdCBieXRlX2Jsb2NrKiBibGssIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19yZWFsbG9jKGJsaywgYmxvY2tfU0laRShibGspICsgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3QgYnl0ZV9ibG9jawpibG9ja19tb3ZlKHN0cnVjdCBieXRlX2Jsb2NrKiBibGspIHsKICBzdHJ1Y3QgYnl0ZV9ibG9jayByZXQgPSB7YmxrLT5zdGFydCwgYmxrLT5lbmR9OwogIGJsay0+c3RhcnQgPSAwOwogIGJsay0+ZW5kID0gMDsKICByZXR1cm4gcmV0Owp9Cgp0eXBlZGVmIHN0cnVjdCBieXRlX2J1ZmZlciB7CiAgdW5pb24gewogICAgc3RydWN0IGJ5dGVfYmxvY2s7CiAgICBNaW5uZXRCbG9jayBibG9jazsKICAgIHN0cnVjdCB7CiAgICAgIHVpbnQ4X3QgKnN0YXJ0LCAqZW5kOwogICAgfTsKICB9OwogIHVpbnQ4X3QgKmFsbG9jLCAqcmVhZCwgKndyaXRlOwp9IE1pbm5ldEJ1ZmZlcjsKCiNkZWZpbmUgQlVGRkVSKGJ1ZikgXAogIChNaW5uZXRCdWZmZXIpIHsgKCh1aW50OF90KikoYnVmKSkgKyBMV1NfUFJFLCAoKHVpbnQ4X3QqKShidWYpKSArIExXU19QUkUsICgodWludDhfdCopKGJ1ZikpICsgTFdTX1BSRSwgKCh1aW50OF90KikoYnVmKSkgKyBzaXplb2YoKGJ1ZikpIC0gMSwgMCB9CgojZGVmaW5lIEJVRkZFUl8wKCkgXAogIChNaW5uZXRCdWZmZXIpIHsgMCwgMCwgMCwgMCwgMCB9CgojZGVmaW5lIEJVRkZFUl9OKGJ1ZiwgbikgXAogIChNaW5uZXRCdWZmZXIpIHsgKCh1aW50OF90KikoYnVmKSksICgodWludDhfdCopKGJ1ZikpLCAoKHVpbnQ4X3QqKShidWYpKSwgKCh1aW50OF90KikoYnVmKSkgKyBuLCAwIH0KCiNkZWZpbmUgYnVmZmVyX0FWQUlMKGIpICgoYiktPmVuZCAtIChiKS0+d3JpdGUpCiNkZWZpbmUgYnVmZmVyX0hFQUQoYikgKChiKS0+d3JpdGUgLSAoYiktPnN0YXJ0KQojZGVmaW5lIGJ1ZmZlcl9SRU1BSU4oYikgKChiKS0+d3JpdGUgLSAoYiktPnJlYWQpCiNkZWZpbmUgYnVmZmVyX1JFQUQoYikgKChiKS0+cmVhZCAtIChiKS0+c3RhcnQpCgojZGVmaW5lIGJ1ZmZlcl96ZXJvKGIpIG1lbXNldCgoYiksIDAsIHNpemVvZihNaW5uZXRCdWZmZXIpKQoKdm9pZCBidWZmZXJfaW5pdChzdHJ1Y3QgYnl0ZV9idWZmZXIqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYnVmZmVyX2FsbG9jKHN0cnVjdCBieXRlX2J1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CnNzaXplX3QgYnVmZmVyX2FwcGVuZChzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgYnVmZmVyX2ZyZWUoc3RydWN0IGJ5dGVfYnVmZmVyKiwgSlNSdW50aW1lKik7CkJPT0wgYnVmZmVyX3dyaXRlKHN0cnVjdCBieXRlX2J1ZmZlciosIGNvbnN0IGNoYXIqLCBzaXplX3QpOwppbnQgYnVmZmVyX3ZwcmludGYoc3RydWN0IGJ5dGVfYnVmZmVyKiwgY29uc3QgY2hhciosIHZhX2xpc3QpOwppbnQgYnVmZmVyX3ByaW50ZihzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBjb25zdCBjaGFyKiwgLi4uKTsKdWludDhfdCogYnVmZmVyX3JlYWxsb2Moc3RydWN0IGJ5dGVfYnVmZmVyKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKaW50IGJ1ZmZlcl9mcm9tYXJyYXlidWZmZXIoc3RydWN0IGJ5dGVfYnVmZmVyKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbXZhbHVlKHN0cnVjdCBieXRlX2J1ZmZlciosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJ1ZmZlcl90b3N0cmluZyhzdHJ1Y3QgYnl0ZV9idWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKY2hhciogYnVmZmVyX2VzY2FwZWQoc3RydWN0IGJ5dGVfYnVmZmVyIGNvbnN0KiwgSlNDb250ZXh0Kik7CnZvaWQgYnVmZmVyX2ZpbmFsaXplcihKU1J1bnRpbWUqLCB2b2lkKiwgdm9pZCopOwpKU1ZhbHVlIGJ1ZmZlcl90b2FycmF5YnVmZmVyKHN0cnVjdCBieXRlX2J1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwp2b2lkIGJ1ZmZlcl9kdW1wKGNvbnN0IGNoYXIqLCBzdHJ1Y3QgYnl0ZV9idWZmZXIgY29uc3QqKTsKCnN0YXRpYyBpbmxpbmUgdm9pZApidWZmZXJfcmVzZXQoc3RydWN0IGJ5dGVfYnVmZmVyKiBidWYpIHsKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0OwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0Owp9CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJ1ZmZlcl9ncm93KHN0cnVjdCBieXRlX2J1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gYmxvY2tfZ3JvdygmYnVmLT5ibG9jaywgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBCT09MCmJ1ZmZlcl9jbG9uZShzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1ZiwgY29uc3Qgc3RydWN0IGJ5dGVfYnVmZmVyKiBvdGhlciwgSlNDb250ZXh0KiBjdHgpIHsKICBpZighYnVmZmVyX2FsbG9jKGJ1ZiwgYmxvY2tfU0laRShvdGhlciksIGN0eCkpCiAgICByZXR1cm4gRkFMU0U7CiAgbWVtY3B5KGJ1Zi0+c3RhcnQsIG90aGVyLT5zdGFydCwgYnVmZmVyX0hFQUQob3RoZXIpKTsKCiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9SRUFEKG90aGVyKTsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9IRUFEKG90aGVyKTsKICByZXR1cm4gVFJVRTsKfQoKc3RhdGljIGlubGluZSB1aW50OF90KgpidWZmZXJfc2tpcChzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUpIHsKICBhc3NlcnQoYnVmLT5yZWFkICsgc2l6ZSA8PSBidWYtPndyaXRlKTsKICBidWYtPnJlYWQgKz0gc2l6ZTsKICByZXR1cm4gYnVmLT5yZWFkOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKYnVmZmVyX3B1dGNoYXIoc3RydWN0IGJ5dGVfYnVmZmVyKiBidWYsIGNoYXIgYykgewogIGlmKGJ1Zi0+d3JpdGUgKyAxIDw9IGJ1Zi0+ZW5kKSB7CiAgICAqYnVmLT53cml0ZSA9ICh1aW50OF90KWM7CiAgICBidWYtPndyaXRlKys7CiAgICByZXR1cm4gVFJVRTsKICB9CiAgcmV0dXJuIEZBTFNFOwp9CgojZW5kaWYgLyogTUlOTkVUX0JVRkZFUl9IICovCgAAAAAAAAAAhQ8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgcAAAAAAABKBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1040,
					1,
					"cut",
					null,
					"AQAAADYHAAAAAAAANgcAAAAAAAAxAAAAI2RlZmluZSBidWZmZXJfSEVBRChiKSAoKGIpLT53cml0ZSAtIChiKS0+c3RhcnQpCg",
					"AQAAAAAAAAABAAAANgcAAAAAAABnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1044,
					1,
					"paste",
					null,
					"AQAAAGgHAAAAAAAAmQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAcAAAAAAABoBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1071,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACFDwAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGludHR5cGVzLmg+CiNpbmNsdWRlIDxzdGRpby5oPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxzdGRhcmcuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4KCnN0cnVjdCBieXRlX2Jsb2NrIHsKICB1aW50OF90ICpzdGFydCwgKmVuZDsKfTsKCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgTWlubmV0QmxvY2s7CgojZGVmaW5lIGJsb2NrX1NJWkUoYikgKChiKS0+ZW5kIC0gKGIpLT5zdGFydCkKI2RlZmluZSBibG9ja19CRUdJTihiKSAodm9pZCopKGIpLT5zdGFydAojZGVmaW5lIGJsb2NrX0VORChiKSAodm9pZCopKGIpLT5lbmQKI2RlZmluZSBibG9ja19BTExPQyhiKSAoKGIpLT5zdGFydCA/IChiKS0+c3RhcnQgLSBMV1NfUFJFIDogMCkKCnZvaWQgYmxvY2tfaW5pdChzdHJ1Y3QgYnl0ZV9ibG9jayosIHVpbnQ4X3QqLCBzaXplX3QpOwp1aW50OF90KiBibG9ja19hbGxvYyhzdHJ1Y3QgYnl0ZV9ibG9jayosIHNpemVfdCwgSlNDb250ZXh0Kik7CnVpbnQ4X3QqIGJsb2NrX3JlYWxsb2Moc3RydWN0IGJ5dGVfYmxvY2sqLCBzaXplX3QsIEpTQ29udGV4dCopOwp2b2lkIGJsb2NrX2ZyZWUoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU1J1bnRpbWUqKTsKaW50IGJsb2NrX2Zyb21hcnJheWJ1ZmZlcihzdHJ1Y3QgYnl0ZV9ibG9jayosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3RvYXJyYXlidWZmZXIoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b3N0cmluZyhzdHJ1Y3QgYnl0ZV9ibG9jayBjb25zdCosIEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSB1aW50OF90KgpibG9ja19ncm93KHN0cnVjdCBieXRlX2Jsb2NrKiBibGssIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19yZWFsbG9jKGJsaywgYmxvY2tfU0laRShibGspICsgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3QgYnl0ZV9ibG9jawpibG9ja19tb3ZlKHN0cnVjdCBieXRlX2Jsb2NrKiBibGspIHsKICBzdHJ1Y3QgYnl0ZV9ibG9jayByZXQgPSB7YmxrLT5zdGFydCwgYmxrLT5lbmR9OwogIGJsay0+c3RhcnQgPSAwOwogIGJsay0+ZW5kID0gMDsKICByZXR1cm4gcmV0Owp9Cgp0eXBlZGVmIHN0cnVjdCBieXRlX2J1ZmZlciB7CiAgdW5pb24gewogICAgc3RydWN0IGJ5dGVfYmxvY2s7CiAgICBNaW5uZXRCbG9jayBibG9jazsKICAgIHN0cnVjdCB7CiAgICAgIHVpbnQ4X3QgKnN0YXJ0LCAqZW5kOwogICAgfTsKICB9OwogIHVpbnQ4X3QgKmFsbG9jLCAqcmVhZCwgKndyaXRlOwp9IE1pbm5ldEJ1ZmZlcjsKCiNkZWZpbmUgQlVGRkVSKGJ1ZikgXAogIChNaW5uZXRCdWZmZXIpIHsgKCh1aW50OF90KikoYnVmKSkgKyBMV1NfUFJFLCAoKHVpbnQ4X3QqKShidWYpKSArIExXU19QUkUsICgodWludDhfdCopKGJ1ZikpICsgTFdTX1BSRSwgKCh1aW50OF90KikoYnVmKSkgKyBzaXplb2YoKGJ1ZikpIC0gMSwgMCB9CgojZGVmaW5lIEJVRkZFUl8wKCkgXAogIChNaW5uZXRCdWZmZXIpIHsgMCwgMCwgMCwgMCwgMCB9CgojZGVmaW5lIEJVRkZFUl9OKGJ1ZiwgbikgXAogIChNaW5uZXRCdWZmZXIpIHsgKCh1aW50OF90KikoYnVmKSksICgodWludDhfdCopKGJ1ZikpLCAoKHVpbnQ4X3QqKShidWYpKSwgKCh1aW50OF90KikoYnVmKSkgKyBuLCAwIH0KCiNkZWZpbmUgYnVmZmVyX0FWQUlMKGIpICgoYiktPmVuZCAtIChiKS0+d3JpdGUpCiNkZWZpbmUgYnVmZmVyX1JFTUFJTihiKSAoKGIpLT53cml0ZSAtIChiKS0+cmVhZCkKI2RlZmluZSBidWZmZXJfSEVBRChiKSAoKGIpLT53cml0ZSAtIChiKS0+c3RhcnQpCiNkZWZpbmUgYnVmZmVyX1RBSUwoYikgKChiKS0+cmVhZCAtIChiKS0+c3RhcnQpCgojZGVmaW5lIGJ1ZmZlcl96ZXJvKGIpIG1lbXNldCgoYiksIDAsIHNpemVvZihNaW5uZXRCdWZmZXIpKQoKdm9pZCBidWZmZXJfaW5pdChzdHJ1Y3QgYnl0ZV9idWZmZXIqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYnVmZmVyX2FsbG9jKHN0cnVjdCBieXRlX2J1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CnNzaXplX3QgYnVmZmVyX2FwcGVuZChzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgYnVmZmVyX2ZyZWUoc3RydWN0IGJ5dGVfYnVmZmVyKiwgSlNSdW50aW1lKik7CkJPT0wgYnVmZmVyX3dyaXRlKHN0cnVjdCBieXRlX2J1ZmZlciosIGNvbnN0IGNoYXIqLCBzaXplX3QpOwppbnQgYnVmZmVyX3ZwcmludGYoc3RydWN0IGJ5dGVfYnVmZmVyKiwgY29uc3QgY2hhciosIHZhX2xpc3QpOwppbnQgYnVmZmVyX3ByaW50ZihzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBjb25zdCBjaGFyKiwgLi4uKTsKdWludDhfdCogYnVmZmVyX3JlYWxsb2Moc3RydWN0IGJ5dGVfYnVmZmVyKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKaW50IGJ1ZmZlcl9mcm9tYXJyYXlidWZmZXIoc3RydWN0IGJ5dGVfYnVmZmVyKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbXZhbHVlKHN0cnVjdCBieXRlX2J1ZmZlciosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJ1ZmZlcl90b3N0cmluZyhzdHJ1Y3QgYnl0ZV9idWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKY2hhciogYnVmZmVyX2VzY2FwZWQoc3RydWN0IGJ5dGVfYnVmZmVyIGNvbnN0KiwgSlNDb250ZXh0Kik7CnZvaWQgYnVmZmVyX2ZpbmFsaXplcihKU1J1bnRpbWUqLCB2b2lkKiwgdm9pZCopOwpKU1ZhbHVlIGJ1ZmZlcl90b2FycmF5YnVmZmVyKHN0cnVjdCBieXRlX2J1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwp2b2lkIGJ1ZmZlcl9kdW1wKGNvbnN0IGNoYXIqLCBzdHJ1Y3QgYnl0ZV9idWZmZXIgY29uc3QqKTsKCnN0YXRpYyBpbmxpbmUgdm9pZApidWZmZXJfcmVzZXQoc3RydWN0IGJ5dGVfYnVmZmVyKiBidWYpIHsKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0OwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0Owp9CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJ1ZmZlcl9ncm93KHN0cnVjdCBieXRlX2J1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gYmxvY2tfZ3JvdygmYnVmLT5ibG9jaywgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBCT09MCmJ1ZmZlcl9jbG9uZShzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1ZiwgY29uc3Qgc3RydWN0IGJ5dGVfYnVmZmVyKiBvdGhlciwgSlNDb250ZXh0KiBjdHgpIHsKICBpZighYnVmZmVyX2FsbG9jKGJ1ZiwgYmxvY2tfU0laRShvdGhlciksIGN0eCkpCiAgICByZXR1cm4gRkFMU0U7CiAgbWVtY3B5KGJ1Zi0+c3RhcnQsIG90aGVyLT5zdGFydCwgYnVmZmVyX0hFQUQob3RoZXIpKTsKCiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9UQUlMKG90aGVyKTsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9IRUFEKG90aGVyKTsKICByZXR1cm4gVFJVRTsKfQoKc3RhdGljIGlubGluZSB1aW50OF90KgpidWZmZXJfc2tpcChzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUpIHsKICBhc3NlcnQoYnVmLT5yZWFkICsgc2l6ZSA8PSBidWYtPndyaXRlKTsKICBidWYtPnJlYWQgKz0gc2l6ZTsKICByZXR1cm4gYnVmLT5yZWFkOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKYnVmZmVyX3B1dGNoYXIoc3RydWN0IGJ5dGVfYnVmZmVyKiBidWYsIGNoYXIgYykgewogIGlmKGJ1Zi0+d3JpdGUgKyAxIDw9IGJ1Zi0+ZW5kKSB7CiAgICAqYnVmLT53cml0ZSA9ICh1aW50OF90KWM7CiAgICBidWYtPndyaXRlKys7CiAgICByZXR1cm4gVFJVRTsKICB9CiAgcmV0dXJuIEZBTFNFOwp9CgojZW5kaWYgLyogTUlOTkVUX0JVRkZFUl9IICovCgAAAAAAAAAAhA8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgcAAAAAAABGBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1130,
					6,
					"right_delete",
					null,
					"BgAAAEMFAAAAAAAAQwUAAAAAAAABAAAACkMFAAAAAAAAQwUAAAAAAAABAAAAIEMFAAAAAAAAQwUAAAAAAAABAAAAIEMFAAAAAAAAQwUAAAAAAAABAAAAIEMFAAAAAAAAQwUAAAAAAAABAAAAIEMFAAAAAAAAQwUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAQwUAAAAAAABDBQAAAAAAAP///////+9/"
				],
				[
					1132,
					4,
					"right_delete",
					null,
					"BAAAAFkFAAAAAAAAWQUAAAAAAAABAAAAClkFAAAAAAAAWQUAAAAAAAABAAAAIFkFAAAAAAAAWQUAAAAAAAABAAAAIFkFAAAAAAAAWQUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAWQUAAAAAAABZBQAAAAAAAP///////+9/"
				],
				[
					1169,
					1,
					"cut",
					null,
					"AQAAAGQFAAAAAAAAZAUAAAAAAAAQAAAAdWludDhfdCAqYWxsb2MsIA",
					"AQAAAAAAAAABAAAAZAUAAAAAAAB0BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1170,
					1,
					"paste",
					null,
					"AQAAAGQFAAAAAAAAdAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAUAAAAAAABkBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1177,
					1,
					"cut",
					null,
					"AQAAAGIFAAAAAAAAYgUAAAAAAAAhAAAAICB1aW50OF90ICphbGxvYywgKnJlYWQsICp3cml0ZTsK",
					"AQAAAAAAAAABAAAAYgUAAAAAAACDBQAAAAAAAAAAAAAAAAAA"
				],
				[
					1179,
					1,
					"paste",
					null,
					"AQAAAP8EAAAAAAAAIAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wQAAAAAAAD/BAAAAAAAAAAAAAAAAAAA"
				],
				[
					1196,
					1,
					"cut",
					null,
					"AQAAAP8EAAAAAAAA/wQAAAAAAAAhAAAAICB1aW50OF90ICphbGxvYywgKnJlYWQsICp3cml0ZTsK",
					"AQAAAAAAAAABAAAA/wQAAAAAAAAgBQAAAAAAAAAAAAAAAAAA"
				],
				[
					1197,
					1,
					"paste",
					null,
					"AQAAAP8EAAAAAAAAIAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wQAAAAAAAD/BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1226,
					1,
					"cut",
					null,
					"AQAAACAFAAAAAAAAIAUAAAAAAABjAAAAICB1bmlvbiB7CiAgICBzdHJ1Y3QgYnl0ZV9ibG9jazsKICAgIE1pbm5ldEJsb2NrIGJsb2NrOwogICAgc3RydWN0IHsgdWludDhfdCAqc3RhcnQsICplbmQ7IH07CiAgfTsK",
					"AQAAAAAAAAABAAAAIAUAAAAAAACDBQAAAAAAAAAAAAAAAAAA"
				],
				[
					1227,
					1,
					"paste",
					null,
					"AQAAACAFAAAAAAAAgwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAUAAAAAAAAgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1240,
					1,
					"cut",
					null,
					"AQAAAP8EAAAAAAAA/wQAAAAAAAAhAAAAICB1aW50OF90ICphbGxvYywgKnJlYWQsICp3cml0ZTsK",
					"AQAAAAAAAAABAAAA/wQAAAAAAAAgBQAAAAAAAAAAAAAAAAAA"
				],
				[
					1242,
					1,
					"paste",
					null,
					"AQAAAGIFAAAAAAAAgwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgUAAAAAAABiBQAAAAAAAAAAAAAAAAAA"
				],
				[
					1251,
					1,
					"cut",
					null,
					"AQAAAOEEAAAAAAAA4QQAAAAAAACyAAAACnR5cGVkZWYgc3RydWN0IGJ5dGVfYnVmZmVyIHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgYnl0ZV9ibG9jazsKICAgIE1pbm5ldEJsb2NrIGJsb2NrOwogICAgc3RydWN0IHsgdWludDhfdCAqc3RhcnQsICplbmQ7IH07CiAgfTsKICB1aW50OF90ICphbGxvYywgKnJlYWQsICp3cml0ZTsKfSBNaW5uZXRCdWZmZXI7Cg",
					"AQAAAAAAAAABAAAA4QQAAAAAAACTBQAAAAAAAAAAAAAAAAAA"
				],
				[
					1252,
					2,
					"paste",
					null,
					"AgAAAOEEAAAAAAAAkwUAAAAAAAAAAAAAkwUAAAAAAABFBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QQAAAAAAADhBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1257,
					1,
					"insert",
					{
						"characters": "union0"
					},
					"BwAAAJwFAAAAAAAAnQUAAAAAAAAAAAAAnQUAAAAAAACdBQAAAAAAAAYAAABzdHJ1Y3SdBQAAAAAAAJ4FAAAAAAAAAAAAAJ4FAAAAAAAAnwUAAAAAAAAAAAAAnwUAAAAAAACgBQAAAAAAAAAAAACgBQAAAAAAAKEFAAAAAAAAAAAAAKEFAAAAAAAAogUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAUAAAAAAACiBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1258,
					1,
					"left_delete",
					null,
					"AQAAAKEFAAAAAAAAoQUAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAogUAAAAAAACiBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1263,
					1,
					"cut",
					null,
					"AQAAALwFAAAAAAAAvAUAAAAAAAAXAAAAICBzdHJ1Y3QgYnl0ZV9ibG9jazsKICA",
					"AQAAAAAAAAABAAAA0wUAAAAAAAC8BQAAAAAAAAAAAAAAADRA"
				],
				[
					1264,
					1,
					"paste",
					null,
					"AQAAALwFAAAAAAAA0wUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAUAAAAAAAC8BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1268,
					1,
					"paste",
					null,
					"AQAAALIFAAAAAAAAyQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgUAAAAAAACyBQAAAAAAAAAAAAAAADRA"
				],
				[
					1271,
					1,
					"cut",
					null,
					"AQAAAOoFAAAAAAAA6gUAAAAAAAAXAAAAICBNaW5uZXRCbG9jayBibG9jazsKICA",
					"AQAAAAAAAAABAAAA6gUAAAAAAAABBgAAAAAAAAAAAAAAADRA"
				],
				[
					1272,
					1,
					"paste",
					null,
					"AQAAAOoFAAAAAAAAAQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gUAAAAAAADqBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1275,
					1,
					"paste",
					null,
					"AQAAAMkFAAAAAAAA4AUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQUAAAAAAADJBQAAAAAAAAAAAAAAADRA"
				],
				[
					1287,
					2,
					"left_delete",
					null,
					"AgAAADoGAAAAAAAAOgYAAAAAAAABAAAAOzkGAAAAAAAAOQYAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAOwYAAAAAAAA7BgAAAAAAAP///////+9/"
				],
				[
					1289,
					3,
					"left_delete",
					null,
					"AwAAAD0GAAAAAAAAPQYAAAAAAAABAAAAOzwGAAAAAAAAPAYAAAAAAAABAAAAfToGAAAAAAAAOgYAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAPgYAAAAAAAA+BgAAAAAAAAAAAAAA4HVA"
				],
				[
					1297,
					1,
					"cut",
					null,
					"AQAAAEUGAAAAAAAARQYAAAAAAAAHAAAAKmFsbG9jLA",
					"AQAAAAAAAAABAAAARQYAAAAAAABMBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1300,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFMGAAAAAAAAVAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwYAAAAAAABTBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1301,
					1,
					"paste",
					null,
					"AQAAAFQGAAAAAAAAWwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAYAAAAAAABUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1304,
					1,
					"left_delete",
					null,
					"AQAAAFoGAAAAAAAAWgYAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAWwYAAAAAAABbBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1311,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAFsGAAAAAAAAXAYAAAAAAAAAAAAAXAYAAAAAAABdBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwYAAAAAAABbBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1315,
					1,
					"left_delete",
					null,
					"AQAAALAFAAAAAAAAsAUAAAAAAAA4AAAAICAgIHN0cnVjdCBieXRlX2Jsb2NrOwogICAgTWlubmV0QmxvY2sgYmxvY2s7CiAgdW5pb24gewo",
					"AQAAAAAAAAABAAAA6AUAAAAAAACwBQAAAAAAAAAAAAAAAAAA"
				],
				[
					1323,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAJMFAAAAAAAAlQUAAAAAAAAAAAAA4gQAAAAAAADkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwUAAAAAAADiBAAAAAAAAAAAAAAAAAAA"
				],
				[
					1326,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAhEAAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGludHR5cGVzLmg+CiNpbmNsdWRlIDxzdGRpby5oPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxzdGRhcmcuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4KCnN0cnVjdCBieXRlX2Jsb2NrIHsKICB1aW50OF90ICpzdGFydCwgKmVuZDsKfTsKCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgTWlubmV0QmxvY2s7CgojZGVmaW5lIGJsb2NrX1NJWkUoYikgKChiKS0+ZW5kIC0gKGIpLT5zdGFydCkKI2RlZmluZSBibG9ja19CRUdJTihiKSAodm9pZCopKGIpLT5zdGFydAojZGVmaW5lIGJsb2NrX0VORChiKSAodm9pZCopKGIpLT5lbmQKI2RlZmluZSBibG9ja19BTExPQyhiKSAoKGIpLT5zdGFydCA/IChiKS0+c3RhcnQgLSBMV1NfUFJFIDogMCkKCnZvaWQgYmxvY2tfaW5pdChzdHJ1Y3QgYnl0ZV9ibG9jayosIHVpbnQ4X3QqLCBzaXplX3QpOwp1aW50OF90KiBibG9ja19hbGxvYyhzdHJ1Y3QgYnl0ZV9ibG9jayosIHNpemVfdCwgSlNDb250ZXh0Kik7CnVpbnQ4X3QqIGJsb2NrX3JlYWxsb2Moc3RydWN0IGJ5dGVfYmxvY2sqLCBzaXplX3QsIEpTQ29udGV4dCopOwp2b2lkIGJsb2NrX2ZyZWUoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU1J1bnRpbWUqKTsKaW50IGJsb2NrX2Zyb21hcnJheWJ1ZmZlcihzdHJ1Y3QgYnl0ZV9ibG9jayosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3RvYXJyYXlidWZmZXIoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b3N0cmluZyhzdHJ1Y3QgYnl0ZV9ibG9jayBjb25zdCosIEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSB1aW50OF90KgpibG9ja19ncm93KHN0cnVjdCBieXRlX2Jsb2NrKiBibGssIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19yZWFsbG9jKGJsaywgYmxvY2tfU0laRShibGspICsgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3QgYnl0ZV9ibG9jawpibG9ja19tb3ZlKHN0cnVjdCBieXRlX2Jsb2NrKiBibGspIHsKICBzdHJ1Y3QgYnl0ZV9ibG9jayByZXQgPSB7YmxrLT5zdGFydCwgYmxrLT5lbmR9OwogIGJsay0+c3RhcnQgPSAwOwogIGJsay0+ZW5kID0gMDsKICByZXR1cm4gcmV0Owp9CgovKnR5cGVkZWYgc3RydWN0IGJ5dGVfYnVmZmVyIHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgYnl0ZV9ibG9jazsKICAgIE1pbm5ldEJsb2NrIGJsb2NrOwogICAgc3RydWN0IHsgdWludDhfdCAqc3RhcnQsICplbmQ7IH07CiAgfTsKICB1aW50OF90ICphbGxvYywgKnJlYWQsICp3cml0ZTsKfSBNaW5uZXRCdWZmZXI7CiovCnR5cGVkZWYgdW5pb24gYnl0ZV9idWZmZXIgewogICAgc3RydWN0IGJ5dGVfYmxvY2s7CiAgICBNaW5uZXRCbG9jayBibG9jazsKICAgIHN0cnVjdCB7IHVpbnQ4X3QgKnN0YXJ0LCAqZW5kOyAKCiAgdWludDhfdCAgKnJlYWQsICp3cml0ZSwqYWxsb2M7IH0KfSBNaW5uZXRCdWZmZXI7CgojZGVmaW5lIEJVRkZFUihidWYpIFwKICAoTWlubmV0QnVmZmVyKSB7ICgodWludDhfdCopKGJ1ZikpICsgTFdTX1BSRSwgKCh1aW50OF90KikoYnVmKSkgKyBMV1NfUFJFLCAoKHVpbnQ4X3QqKShidWYpKSArIExXU19QUkUsICgodWludDhfdCopKGJ1ZikpICsgc2l6ZW9mKChidWYpKSAtIDEsIDAgfQoKI2RlZmluZSBCVUZGRVJfMCgpIFwKICAoTWlubmV0QnVmZmVyKSB7IDAsIDAsIDAsIDAsIDAgfQoKI2RlZmluZSBCVUZGRVJfTihidWYsIG4pIFwKICAoTWlubmV0QnVmZmVyKSB7ICgodWludDhfdCopKGJ1ZikpLCAoKHVpbnQ4X3QqKShidWYpKSwgKCh1aW50OF90KikoYnVmKSksICgodWludDhfdCopKGJ1ZikpICsgbiwgMCB9CgojZGVmaW5lIGJ1ZmZlcl9BVkFJTChiKSAoKGIpLT5lbmQgLSAoYiktPndyaXRlKQojZGVmaW5lIGJ1ZmZlcl9CWVRFUyhiKSAoKGIpLT53cml0ZSAtIChiKS0+cmVhZCkKI2RlZmluZSBidWZmZXJfSEVBRChiKSAoKGIpLT53cml0ZSAtIChiKS0+c3RhcnQpCiNkZWZpbmUgYnVmZmVyX1RBSUwoYikgKChiKS0+cmVhZCAtIChiKS0+c3RhcnQpCgojZGVmaW5lIGJ1ZmZlcl96ZXJvKGIpIG1lbXNldCgoYiksIDAsIHNpemVvZihNaW5uZXRCdWZmZXIpKQoKdm9pZCBidWZmZXJfaW5pdChzdHJ1Y3QgYnl0ZV9idWZmZXIqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYnVmZmVyX2FsbG9jKHN0cnVjdCBieXRlX2J1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CnNzaXplX3QgYnVmZmVyX2FwcGVuZChzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgYnVmZmVyX2ZyZWUoc3RydWN0IGJ5dGVfYnVmZmVyKiwgSlNSdW50aW1lKik7CkJPT0wgYnVmZmVyX3dyaXRlKHN0cnVjdCBieXRlX2J1ZmZlciosIGNvbnN0IGNoYXIqLCBzaXplX3QpOwppbnQgYnVmZmVyX3ZwcmludGYoc3RydWN0IGJ5dGVfYnVmZmVyKiwgY29uc3QgY2hhciosIHZhX2xpc3QpOwppbnQgYnVmZmVyX3ByaW50ZihzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBjb25zdCBjaGFyKiwgLi4uKTsKdWludDhfdCogYnVmZmVyX3JlYWxsb2Moc3RydWN0IGJ5dGVfYnVmZmVyKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKaW50IGJ1ZmZlcl9mcm9tYXJyYXlidWZmZXIoc3RydWN0IGJ5dGVfYnVmZmVyKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbXZhbHVlKHN0cnVjdCBieXRlX2J1ZmZlciosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJ1ZmZlcl90b3N0cmluZyhzdHJ1Y3QgYnl0ZV9idWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKY2hhciogYnVmZmVyX2VzY2FwZWQoc3RydWN0IGJ5dGVfYnVmZmVyIGNvbnN0KiwgSlNDb250ZXh0Kik7CnZvaWQgYnVmZmVyX2ZpbmFsaXplcihKU1J1bnRpbWUqLCB2b2lkKiwgdm9pZCopOwpKU1ZhbHVlIGJ1ZmZlcl90b2FycmF5YnVmZmVyKHN0cnVjdCBieXRlX2J1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwp2b2lkIGJ1ZmZlcl9kdW1wKGNvbnN0IGNoYXIqLCBzdHJ1Y3QgYnl0ZV9idWZmZXIgY29uc3QqKTsKCnN0YXRpYyBpbmxpbmUgdm9pZApidWZmZXJfcmVzZXQoc3RydWN0IGJ5dGVfYnVmZmVyKiBidWYpIHsKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0OwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0Owp9CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJ1ZmZlcl9ncm93KHN0cnVjdCBieXRlX2J1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gYmxvY2tfZ3JvdygmYnVmLT5ibG9jaywgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBCT09MCmJ1ZmZlcl9jbG9uZShzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1ZiwgY29uc3Qgc3RydWN0IGJ5dGVfYnVmZmVyKiBvdGhlciwgSlNDb250ZXh0KiBjdHgpIHsKICBpZighYnVmZmVyX2FsbG9jKGJ1ZiwgYmxvY2tfU0laRShvdGhlciksIGN0eCkpCiAgICByZXR1cm4gRkFMU0U7CiAgbWVtY3B5KGJ1Zi0+c3RhcnQsIG90aGVyLT5zdGFydCwgYnVmZmVyX0hFQUQob3RoZXIpKTsKCiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9UQUlMKG90aGVyKTsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9IRUFEKG90aGVyKTsKICByZXR1cm4gVFJVRTsKfQoKc3RhdGljIGlubGluZSB1aW50OF90KgpidWZmZXJfc2tpcChzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUpIHsKICBhc3NlcnQoYnVmLT5yZWFkICsgc2l6ZSA8PSBidWYtPndyaXRlKTsKICBidWYtPnJlYWQgKz0gc2l6ZTsKICByZXR1cm4gYnVmLT5yZWFkOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKYnVmZmVyX3B1dGNoYXIoc3RydWN0IGJ5dGVfYnVmZmVyKiBidWYsIGNoYXIgYykgewogIGlmKGJ1Zi0+d3JpdGUgKyAxIDw9IGJ1Zi0+ZW5kKSB7CiAgICAqYnVmLT53cml0ZSA9ICh1aW50OF90KWM7CiAgICBidWYtPndyaXRlKys7CiAgICByZXR1cm4gVFJVRTsKICB9CiAgcmV0dXJuIEZBTFNFOwp9CgojZW5kaWYgLyogTUlOTkVUX0JVRkZFUl9IICovCgAAAAAAAAAAIhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQUAAAAAAADkBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1363,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAiEAAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGludHR5cGVzLmg+CiNpbmNsdWRlIDxzdGRpby5oPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxzdGRhcmcuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4KCnN0cnVjdCBieXRlX2Jsb2NrIHsKICB1aW50OF90ICpzdGFydCwgKmVuZDsKfTsKCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgTWlubmV0QmxvY2s7CgojZGVmaW5lIGJsb2NrX1NJWkUoYikgKChiKS0+ZW5kIC0gKGIpLT5zdGFydCkKI2RlZmluZSBibG9ja19CRUdJTihiKSAodm9pZCopKGIpLT5zdGFydAojZGVmaW5lIGJsb2NrX0VORChiKSAodm9pZCopKGIpLT5lbmQKI2RlZmluZSBibG9ja19BTExPQyhiKSAoKGIpLT5zdGFydCA/IChiKS0+c3RhcnQgLSBMV1NfUFJFIDogMCkKCnZvaWQgYmxvY2tfaW5pdChzdHJ1Y3QgYnl0ZV9ibG9jayosIHVpbnQ4X3QqLCBzaXplX3QpOwp1aW50OF90KiBibG9ja19hbGxvYyhzdHJ1Y3QgYnl0ZV9ibG9jayosIHNpemVfdCwgSlNDb250ZXh0Kik7CnVpbnQ4X3QqIGJsb2NrX3JlYWxsb2Moc3RydWN0IGJ5dGVfYmxvY2sqLCBzaXplX3QsIEpTQ29udGV4dCopOwp2b2lkIGJsb2NrX2ZyZWUoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU1J1bnRpbWUqKTsKaW50IGJsb2NrX2Zyb21hcnJheWJ1ZmZlcihzdHJ1Y3QgYnl0ZV9ibG9jayosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3RvYXJyYXlidWZmZXIoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b3N0cmluZyhzdHJ1Y3QgYnl0ZV9ibG9jayBjb25zdCosIEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSB1aW50OF90KgpibG9ja19ncm93KHN0cnVjdCBieXRlX2Jsb2NrKiBibGssIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19yZWFsbG9jKGJsaywgYmxvY2tfU0laRShibGspICsgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3QgYnl0ZV9ibG9jawpibG9ja19tb3ZlKHN0cnVjdCBieXRlX2Jsb2NrKiBibGspIHsKICBzdHJ1Y3QgYnl0ZV9ibG9jayByZXQgPSB7YmxrLT5zdGFydCwgYmxrLT5lbmR9OwogIGJsay0+c3RhcnQgPSAwOwogIGJsay0+ZW5kID0gMDsKICByZXR1cm4gcmV0Owp9CgovKnR5cGVkZWYgc3RydWN0IGJ5dGVfYnVmZmVyIHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgYnl0ZV9ibG9jazsKICAgIE1pbm5ldEJsb2NrIGJsb2NrOwogICAgc3RydWN0IHsgdWludDhfdCAqc3RhcnQsICplbmQ7IH07CiAgfTsKICB1aW50OF90ICphbGxvYywgKnJlYWQsICp3cml0ZTsKfSBNaW5uZXRCdWZmZXI7CiovCnR5cGVkZWYgdW5pb24gYnl0ZV9idWZmZXIgewogIHN0cnVjdCBieXRlX2Jsb2NrOwogIE1pbm5ldEJsb2NrIGJsb2NrOwogIHN0cnVjdCB7CiAgICB1aW50OF90ICpzdGFydCwgKmVuZDsKCiAgICB1aW50OF90ICpyZWFkLCAqd3JpdGUsICphbGxvYzsKICB9Cn0gTWlubmV0QnVmZmVyOwoKI2RlZmluZSBCVUZGRVIoYnVmKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyAoKHVpbnQ4X3QqKShidWYpKSArIExXU19QUkUsICgodWludDhfdCopKGJ1ZikpICsgTFdTX1BSRSwgKCh1aW50OF90KikoYnVmKSkgKyBMV1NfUFJFLCAoKHVpbnQ4X3QqKShidWYpKSArIHNpemVvZigoYnVmKSkgLSAxLCAwIH0KCiNkZWZpbmUgQlVGRkVSXzAoKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyAwLCAwLCAwLCAwLCAwIH0KCiNkZWZpbmUgQlVGRkVSX04oYnVmLCBuKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyAoKHVpbnQ4X3QqKShidWYpKSwgKCh1aW50OF90KikoYnVmKSksICgodWludDhfdCopKGJ1ZikpLCAoKHVpbnQ4X3QqKShidWYpKSArIG4sIDAgfQoKI2RlZmluZSBidWZmZXJfQVZBSUwoYikgKChiKS0+ZW5kIC0gKGIpLT53cml0ZSkKI2RlZmluZSBidWZmZXJfQllURVMoYikgKChiKS0+d3JpdGUgLSAoYiktPnJlYWQpCiNkZWZpbmUgYnVmZmVyX0hFQUQoYikgKChiKS0+d3JpdGUgLSAoYiktPnN0YXJ0KQojZGVmaW5lIGJ1ZmZlcl9UQUlMKGIpICgoYiktPnJlYWQgLSAoYiktPnN0YXJ0KQoKI2RlZmluZSBidWZmZXJfemVybyhiKSBtZW1zZXQoKGIpLCAwLCBzaXplb2YoTWlubmV0QnVmZmVyKSkKCnZvaWQgYnVmZmVyX2luaXQoc3RydWN0IGJ5dGVfYnVmZmVyKiwgdWludDhfdCosIHNpemVfdCk7CnVpbnQ4X3QqIGJ1ZmZlcl9hbGxvYyhzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBzaXplX3QsIEpTQ29udGV4dCopOwpzc2l6ZV90IGJ1ZmZlcl9hcHBlbmQoc3RydWN0IGJ5dGVfYnVmZmVyKiwgY29uc3Qgdm9pZCosIHNpemVfdCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIGJ1ZmZlcl9mcmVlKHN0cnVjdCBieXRlX2J1ZmZlciosIEpTUnVudGltZSopOwpCT09MIGJ1ZmZlcl93cml0ZShzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBjb25zdCBjaGFyKiwgc2l6ZV90KTsKaW50IGJ1ZmZlcl92cHJpbnRmKHN0cnVjdCBieXRlX2J1ZmZlciosIGNvbnN0IGNoYXIqLCB2YV9saXN0KTsKaW50IGJ1ZmZlcl9wcmludGYoc3RydWN0IGJ5dGVfYnVmZmVyKiwgY29uc3QgY2hhciosIC4uLik7CnVpbnQ4X3QqIGJ1ZmZlcl9yZWFsbG9jKHN0cnVjdCBieXRlX2J1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbWFycmF5YnVmZmVyKHN0cnVjdCBieXRlX2J1ZmZlciosIEpTVmFsdWUsIEpTQ29udGV4dCopOwppbnQgYnVmZmVyX2Zyb212YWx1ZShzdHJ1Y3QgYnl0ZV9idWZmZXIqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBidWZmZXJfdG9zdHJpbmcoc3RydWN0IGJ5dGVfYnVmZmVyIGNvbnN0KiwgSlNDb250ZXh0Kik7CmNoYXIqIGJ1ZmZlcl9lc2NhcGVkKHN0cnVjdCBieXRlX2J1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwp2b2lkIGJ1ZmZlcl9maW5hbGl6ZXIoSlNSdW50aW1lKiwgdm9pZCosIHZvaWQqKTsKSlNWYWx1ZSBidWZmZXJfdG9hcnJheWJ1ZmZlcihzdHJ1Y3QgYnl0ZV9idWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKdm9pZCBidWZmZXJfZHVtcChjb25zdCBjaGFyKiwgc3RydWN0IGJ5dGVfYnVmZmVyIGNvbnN0Kik7CgpzdGF0aWMgaW5saW5lIHZvaWQKYnVmZmVyX3Jlc2V0KHN0cnVjdCBieXRlX2J1ZmZlciogYnVmKSB7CiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydDsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydDsKfQoKc3RhdGljIGlubGluZSB1aW50OF90KgpidWZmZXJfZ3JvdyhzdHJ1Y3QgYnl0ZV9idWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIGJsb2NrX2dyb3coJmJ1Zi0+YmxvY2ssIHNpemUsIGN0eCk7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTApidWZmZXJfY2xvbmUoc3RydWN0IGJ5dGVfYnVmZmVyKiBidWYsIGNvbnN0IHN0cnVjdCBieXRlX2J1ZmZlciogb3RoZXIsIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoIWJ1ZmZlcl9hbGxvYyhidWYsIGJsb2NrX1NJWkUob3RoZXIpLCBjdHgpKQogICAgcmV0dXJuIEZBTFNFOwogIG1lbWNweShidWYtPnN0YXJ0LCBvdGhlci0+c3RhcnQsIGJ1ZmZlcl9IRUFEKG90aGVyKSk7CgogIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQgKyBidWZmZXJfVEFJTChvdGhlcik7CiAgYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQgKyBidWZmZXJfSEVBRChvdGhlcik7CiAgcmV0dXJuIFRSVUU7Cn0KCnN0YXRpYyBpbmxpbmUgdWludDhfdCoKYnVmZmVyX3NraXAoc3RydWN0IGJ5dGVfYnVmZmVyKiBidWYsIHNpemVfdCBzaXplKSB7CiAgYXNzZXJ0KGJ1Zi0+cmVhZCArIHNpemUgPD0gYnVmLT53cml0ZSk7CiAgYnVmLT5yZWFkICs9IHNpemU7CiAgcmV0dXJuIGJ1Zi0+cmVhZDsKfQoKc3RhdGljIGlubGluZSBCT09MCmJ1ZmZlcl9wdXRjaGFyKHN0cnVjdCBieXRlX2J1ZmZlciogYnVmLCBjaGFyIGMpIHsKICBpZihidWYtPndyaXRlICsgMSA8PSBidWYtPmVuZCkgewogICAgKmJ1Zi0+d3JpdGUgPSAodWludDhfdCljOwogICAgYnVmLT53cml0ZSsrOwogICAgcmV0dXJuIFRSVUU7CiAgfQogIHJldHVybiBGQUxTRTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9CVUZGRVJfSCAqLwoAAAAAAAAAAKQPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowgAAAAAAACjCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1385,
					1,
					"left_delete",
					null,
					"AQAAAPwFAAAAAAAA/AUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA/QUAAAAAAAD9BQAAAAAAAAAAAAAAwHJA"
				],
				[
					1444,
					1,
					"left_delete",
					null,
					"AQAAAOIEAAAAAAAA4gQAAAAAAACwAAAALyp0eXBlZGVmIE1pbm5ldEJ1ZmZlciB7CiAgdW5pb24gewogICAgc3RydWN0IGJ5dGVfYmxvY2s7CiAgICBNaW5uZXRCbG9jayBibG9jazsKICAgIHN0cnVjdCB7IHVpbnQ4X3QgKnN0YXJ0LCAqZW5kOyB9OwogIH07CiAgdWludDhfdCAqYWxsb2MsICpyZWFkLCAqd3JpdGU7Cn0gTWlubmV0QnVmZmVyOwoqLwo",
					"AQAAAAAAAAABAAAAkgUAAAAAAADiBAAAAAAAAAAAAAAAAAAA"
				],
				[
					1452,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAADQFAAAAAAAANQUAAAAAAAAAAAAANQUAAAAAAAA2BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAUAAAAAAAA0BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1455,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD1DgAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGludHR5cGVzLmg+CiNpbmNsdWRlIDxzdGRpby5oPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxzdGRhcmcuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4KCnN0cnVjdCBieXRlX2Jsb2NrIHsKICB1aW50OF90ICpzdGFydCwgKmVuZDsKfTsKCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgTWlubmV0QmxvY2s7CgojZGVmaW5lIGJsb2NrX1NJWkUoYikgKChiKS0+ZW5kIC0gKGIpLT5zdGFydCkKI2RlZmluZSBibG9ja19CRUdJTihiKSAodm9pZCopKGIpLT5zdGFydAojZGVmaW5lIGJsb2NrX0VORChiKSAodm9pZCopKGIpLT5lbmQKI2RlZmluZSBibG9ja19BTExPQyhiKSAoKGIpLT5zdGFydCA/IChiKS0+c3RhcnQgLSBMV1NfUFJFIDogMCkKCnZvaWQgYmxvY2tfaW5pdChzdHJ1Y3QgYnl0ZV9ibG9jayosIHVpbnQ4X3QqLCBzaXplX3QpOwp1aW50OF90KiBibG9ja19hbGxvYyhzdHJ1Y3QgYnl0ZV9ibG9jayosIHNpemVfdCwgSlNDb250ZXh0Kik7CnVpbnQ4X3QqIGJsb2NrX3JlYWxsb2Moc3RydWN0IGJ5dGVfYmxvY2sqLCBzaXplX3QsIEpTQ29udGV4dCopOwp2b2lkIGJsb2NrX2ZyZWUoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU1J1bnRpbWUqKTsKaW50IGJsb2NrX2Zyb21hcnJheWJ1ZmZlcihzdHJ1Y3QgYnl0ZV9ibG9jayosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3RvYXJyYXlidWZmZXIoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b3N0cmluZyhzdHJ1Y3QgYnl0ZV9ibG9jayBjb25zdCosIEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSB1aW50OF90KgpibG9ja19ncm93KHN0cnVjdCBieXRlX2Jsb2NrKiBibGssIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19yZWFsbG9jKGJsaywgYmxvY2tfU0laRShibGspICsgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3QgYnl0ZV9ibG9jawpibG9ja19tb3ZlKHN0cnVjdCBieXRlX2Jsb2NrKiBibGspIHsKICBzdHJ1Y3QgYnl0ZV9ibG9jayByZXQgPSB7YmxrLT5zdGFydCwgYmxrLT5lbmR9OwogIGJsay0+c3RhcnQgPSAwOwogIGJsay0+ZW5kID0gMDsKICByZXR1cm4gcmV0Owp9Cgp0eXBlZGVmIHVuaW9uIGJ5dGVfYnVmZmVyIHsKICBzdHJ1Y3QgYnl0ZV9ibG9jazsKICBNaW5uZXRCbG9jayBibG9jazsKICBzdHJ1Y3QgewogLy8gICB1aW50OF90ICpzdGFydCwgKmVuZDsKICAgIHVpbnQ4X3QgKnJlYWQsICp3cml0ZSwgKmFsbG9jOwogIH0KfSBNaW5uZXRCdWZmZXI7CgojZGVmaW5lIEJVRkZFUihidWYpIFwKICAoTWlubmV0QnVmZmVyKSB7ICgodWludDhfdCopKGJ1ZikpICsgTFdTX1BSRSwgKCh1aW50OF90KikoYnVmKSkgKyBMV1NfUFJFLCAoKHVpbnQ4X3QqKShidWYpKSArIExXU19QUkUsICgodWludDhfdCopKGJ1ZikpICsgc2l6ZW9mKChidWYpKSAtIDEsIDAgfQoKI2RlZmluZSBCVUZGRVJfMCgpIFwKICAoTWlubmV0QnVmZmVyKSB7IDAsIDAsIDAsIDAsIDAgfQoKI2RlZmluZSBCVUZGRVJfTihidWYsIG4pIFwKICAoTWlubmV0QnVmZmVyKSB7ICgodWludDhfdCopKGJ1ZikpLCAoKHVpbnQ4X3QqKShidWYpKSwgKCh1aW50OF90KikoYnVmKSksICgodWludDhfdCopKGJ1ZikpICsgbiwgMCB9CgojZGVmaW5lIGJ1ZmZlcl9BVkFJTChiKSAoKGIpLT5lbmQgLSAoYiktPndyaXRlKQojZGVmaW5lIGJ1ZmZlcl9CWVRFUyhiKSAoKGIpLT53cml0ZSAtIChiKS0+cmVhZCkKI2RlZmluZSBidWZmZXJfSEVBRChiKSAoKGIpLT53cml0ZSAtIChiKS0+c3RhcnQpCiNkZWZpbmUgYnVmZmVyX1RBSUwoYikgKChiKS0+cmVhZCAtIChiKS0+c3RhcnQpCgojZGVmaW5lIGJ1ZmZlcl96ZXJvKGIpIG1lbXNldCgoYiksIDAsIHNpemVvZihNaW5uZXRCdWZmZXIpKQoKdm9pZCBidWZmZXJfaW5pdChNaW5uZXRCdWZmZXIqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYnVmZmVyX2FsbG9jKE1pbm5ldEJ1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CnNzaXplX3QgYnVmZmVyX2FwcGVuZChNaW5uZXRCdWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgYnVmZmVyX2ZyZWUoTWlubmV0QnVmZmVyKiwgSlNSdW50aW1lKik7CkJPT0wgYnVmZmVyX3dyaXRlKE1pbm5ldEJ1ZmZlciosIGNvbnN0IGNoYXIqLCBzaXplX3QpOwppbnQgYnVmZmVyX3ZwcmludGYoTWlubmV0QnVmZmVyKiwgY29uc3QgY2hhciosIHZhX2xpc3QpOwppbnQgYnVmZmVyX3ByaW50ZihNaW5uZXRCdWZmZXIqLCBjb25zdCBjaGFyKiwgLi4uKTsKdWludDhfdCogYnVmZmVyX3JlYWxsb2MoTWlubmV0QnVmZmVyKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKaW50IGJ1ZmZlcl9mcm9tYXJyYXlidWZmZXIoTWlubmV0QnVmZmVyKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbXZhbHVlKE1pbm5ldEJ1ZmZlciosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJ1ZmZlcl90b3N0cmluZyhNaW5uZXRCdWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKY2hhciogYnVmZmVyX2VzY2FwZWQoTWlubmV0QnVmZmVyIGNvbnN0KiwgSlNDb250ZXh0Kik7CnZvaWQgYnVmZmVyX2ZpbmFsaXplcihKU1J1bnRpbWUqLCB2b2lkKiwgdm9pZCopOwpKU1ZhbHVlIGJ1ZmZlcl90b2FycmF5YnVmZmVyKE1pbm5ldEJ1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwp2b2lkIGJ1ZmZlcl9kdW1wKGNvbnN0IGNoYXIqLCBNaW5uZXRCdWZmZXIgY29uc3QqKTsKCnN0YXRpYyBpbmxpbmUgdm9pZApidWZmZXJfcmVzZXQoTWlubmV0QnVmZmVyKiBidWYpIHsKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0OwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0Owp9CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJ1ZmZlcl9ncm93KE1pbm5ldEJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gYmxvY2tfZ3JvdygmYnVmLT5ibG9jaywgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBCT09MCmJ1ZmZlcl9jbG9uZShNaW5uZXRCdWZmZXIqIGJ1ZiwgY29uc3QgTWlubmV0QnVmZmVyKiBvdGhlciwgSlNDb250ZXh0KiBjdHgpIHsKICBpZighYnVmZmVyX2FsbG9jKGJ1ZiwgYmxvY2tfU0laRShvdGhlciksIGN0eCkpCiAgICByZXR1cm4gRkFMU0U7CiAgbWVtY3B5KGJ1Zi0+c3RhcnQsIG90aGVyLT5zdGFydCwgYnVmZmVyX0hFQUQob3RoZXIpKTsKCiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9UQUlMKG90aGVyKTsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9IRUFEKG90aGVyKTsKICByZXR1cm4gVFJVRTsKfQoKc3RhdGljIGlubGluZSB1aW50OF90KgpidWZmZXJfc2tpcChNaW5uZXRCdWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUpIHsKICBhc3NlcnQoYnVmLT5yZWFkICsgc2l6ZSA8PSBidWYtPndyaXRlKTsKICBidWYtPnJlYWQgKz0gc2l6ZTsKICByZXR1cm4gYnVmLT5yZWFkOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKYnVmZmVyX3B1dGNoYXIoTWlubmV0QnVmZmVyKiBidWYsIGNoYXIgYykgewogIGlmKGJ1Zi0+d3JpdGUgKyAxIDw9IGJ1Zi0+ZW5kKSB7CiAgICAqYnVmLT53cml0ZSA9ICh1aW50OF90KWM7CiAgICBidWYtPndyaXRlKys7CiAgICByZXR1cm4gVFJVRTsKICB9CiAgcmV0dXJuIEZBTFNFOwp9CgojZW5kaWYgLyogTUlOTkVUX0JVRkZFUl9IICovCgAAAAAAAAAA+A4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgUAAAAAAAA2BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1457,
					4,
					"right_delete",
					null,
					"BAAAADcFAAAAAAAANwUAAAAAAAABAAAALzcFAAAAAAAANwUAAAAAAAABAAAALzcFAAAAAAAANwUAAAAAAAACAAAAICA3BQAAAAAAADcFAAAAAAAAAQAAACA",
					"AQAAAAAAAAABAAAANwUAAAAAAAA3BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1481,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHMFAAAAAAAAdAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwUAAAAAAABzBQAAAAAAAP///////+9/"
				],
				[
					1496,
					1,
					"cut",
					null,
					"AQAAACkFAAAAAAAAKQUAAAAAAAALAAAAIHN0cnVjdCB7CiA",
					"AQAAAAAAAAABAAAAKQUAAAAAAAA0BQAAAAAAAAAAAAAAACRA"
				],
				[
					1497,
					1,
					"paste",
					null,
					"AQAAACkFAAAAAAAANAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQUAAAAAAAApBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1499,
					1,
					"paste",
					null,
					"AQAAABQFAAAAAAAAHwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAUAAAAAAAAUBQAAAAAAAAAAAAAAACRA"
				],
				[
					1504,
					1,
					"cut",
					null,
					"AQAAAFkFAAAAAAAAWQUAAAAAAAAjAAAAICAgdWludDhfdCAqcmVhZCwgKndyaXRlLCAqYWxsb2M7CiA",
					"AQAAAAAAAAABAAAAWQUAAAAAAAB8BQAAAAAAAAAAAAAAACRA"
				],
				[
					1506,
					1,
					"paste",
					null,
					"AQAAADQFAAAAAAAAVwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAUAAAAAAAA0BQAAAAAAAAAAAAAAACRA"
				],
				[
					1509,
					1,
					"insert",
					{
						"characters": "\n$"
					},
					"AwAAAFUFAAAAAAAAVgUAAAAAAAAAAAAAVgUAAAAAAABaBQAAAAAAAAAAAABaBQAAAAAAAFsFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQUAAAAAAABVBQAAAAAAAP///////+9/"
				],
				[
					1510,
					1,
					"left_delete",
					null,
					"AQAAAFoFAAAAAAAAWgUAAAAAAAABAAAAJA",
					"AQAAAAAAAAABAAAAWwUAAAAAAABbBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1511,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AwAAAFoFAAAAAAAAWwUAAAAAAAAAAAAAVgUAAAAAAABWBQAAAAAAAAQAAAAgICAgVgUAAAAAAABYBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgUAAAAAAABaBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1516,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFkFAAAAAAAAWgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQUAAAAAAABZBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1519,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAEDwAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGludHR5cGVzLmg+CiNpbmNsdWRlIDxzdGRpby5oPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxzdGRhcmcuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4KCnN0cnVjdCBieXRlX2Jsb2NrIHsKICB1aW50OF90ICpzdGFydCwgKmVuZDsKfTsKCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgTWlubmV0QmxvY2s7CgojZGVmaW5lIGJsb2NrX1NJWkUoYikgKChiKS0+ZW5kIC0gKGIpLT5zdGFydCkKI2RlZmluZSBibG9ja19CRUdJTihiKSAodm9pZCopKGIpLT5zdGFydAojZGVmaW5lIGJsb2NrX0VORChiKSAodm9pZCopKGIpLT5lbmQKI2RlZmluZSBibG9ja19BTExPQyhiKSAoKGIpLT5zdGFydCA/IChiKS0+c3RhcnQgLSBMV1NfUFJFIDogMCkKCnZvaWQgYmxvY2tfaW5pdChzdHJ1Y3QgYnl0ZV9ibG9jayosIHVpbnQ4X3QqLCBzaXplX3QpOwp1aW50OF90KiBibG9ja19hbGxvYyhzdHJ1Y3QgYnl0ZV9ibG9jayosIHNpemVfdCwgSlNDb250ZXh0Kik7CnVpbnQ4X3QqIGJsb2NrX3JlYWxsb2Moc3RydWN0IGJ5dGVfYmxvY2sqLCBzaXplX3QsIEpTQ29udGV4dCopOwp2b2lkIGJsb2NrX2ZyZWUoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU1J1bnRpbWUqKTsKaW50IGJsb2NrX2Zyb21hcnJheWJ1ZmZlcihzdHJ1Y3QgYnl0ZV9ibG9jayosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3RvYXJyYXlidWZmZXIoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b3N0cmluZyhzdHJ1Y3QgYnl0ZV9ibG9jayBjb25zdCosIEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSB1aW50OF90KgpibG9ja19ncm93KHN0cnVjdCBieXRlX2Jsb2NrKiBibGssIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19yZWFsbG9jKGJsaywgYmxvY2tfU0laRShibGspICsgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3QgYnl0ZV9ibG9jawpibG9ja19tb3ZlKHN0cnVjdCBieXRlX2Jsb2NrKiBibGspIHsKICBzdHJ1Y3QgYnl0ZV9ibG9jayByZXQgPSB7YmxrLT5zdGFydCwgYmxrLT5lbmR9OwogIGJsay0+c3RhcnQgPSAwOwogIGJsay0+ZW5kID0gMDsKICByZXR1cm4gcmV0Owp9Cgp0eXBlZGVmIHVuaW9uIGJ5dGVfYnVmZmVyIHsKICBzdHJ1Y3QgYnl0ZV9ibG9jazsKICBzdHJ1Y3QgewogIE1pbm5ldEJsb2NrIGJsb2NrOwogICAgdWludDhfdCAqcmVhZCwgKndyaXRlLCAqYWxsb2M7CiAgfTsKICBzdHJ1Y3QgewogICAgdWludDhfdCAqc3RhcnQsICplbmQ7CiAgfTsKfSBNaW5uZXRCdWZmZXI7CgojZGVmaW5lIEJVRkZFUihidWYpIFwKICAoTWlubmV0QnVmZmVyKSB7ICgodWludDhfdCopKGJ1ZikpICsgTFdTX1BSRSwgKCh1aW50OF90KikoYnVmKSkgKyBMV1NfUFJFLCAoKHVpbnQ4X3QqKShidWYpKSArIExXU19QUkUsICgodWludDhfdCopKGJ1ZikpICsgc2l6ZW9mKChidWYpKSAtIDEsIDAgfQoKI2RlZmluZSBCVUZGRVJfMCgpIFwKICAoTWlubmV0QnVmZmVyKSB7IDAsIDAsIDAsIDAsIDAgfQoKI2RlZmluZSBCVUZGRVJfTihidWYsIG4pIFwKICAoTWlubmV0QnVmZmVyKSB7ICgodWludDhfdCopKGJ1ZikpLCAoKHVpbnQ4X3QqKShidWYpKSwgKCh1aW50OF90KikoYnVmKSksICgodWludDhfdCopKGJ1ZikpICsgbiwgMCB9CgojZGVmaW5lIGJ1ZmZlcl9BVkFJTChiKSAoKGIpLT5lbmQgLSAoYiktPndyaXRlKQojZGVmaW5lIGJ1ZmZlcl9CWVRFUyhiKSAoKGIpLT53cml0ZSAtIChiKS0+cmVhZCkKI2RlZmluZSBidWZmZXJfSEVBRChiKSAoKGIpLT53cml0ZSAtIChiKS0+c3RhcnQpCiNkZWZpbmUgYnVmZmVyX1RBSUwoYikgKChiKS0+cmVhZCAtIChiKS0+c3RhcnQpCgojZGVmaW5lIGJ1ZmZlcl96ZXJvKGIpIG1lbXNldCgoYiksIDAsIHNpemVvZihNaW5uZXRCdWZmZXIpKQoKdm9pZCBidWZmZXJfaW5pdChNaW5uZXRCdWZmZXIqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYnVmZmVyX2FsbG9jKE1pbm5ldEJ1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CnNzaXplX3QgYnVmZmVyX2FwcGVuZChNaW5uZXRCdWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgYnVmZmVyX2ZyZWUoTWlubmV0QnVmZmVyKiwgSlNSdW50aW1lKik7CkJPT0wgYnVmZmVyX3dyaXRlKE1pbm5ldEJ1ZmZlciosIGNvbnN0IGNoYXIqLCBzaXplX3QpOwppbnQgYnVmZmVyX3ZwcmludGYoTWlubmV0QnVmZmVyKiwgY29uc3QgY2hhciosIHZhX2xpc3QpOwppbnQgYnVmZmVyX3ByaW50ZihNaW5uZXRCdWZmZXIqLCBjb25zdCBjaGFyKiwgLi4uKTsKdWludDhfdCogYnVmZmVyX3JlYWxsb2MoTWlubmV0QnVmZmVyKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKaW50IGJ1ZmZlcl9mcm9tYXJyYXlidWZmZXIoTWlubmV0QnVmZmVyKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbXZhbHVlKE1pbm5ldEJ1ZmZlciosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJ1ZmZlcl90b3N0cmluZyhNaW5uZXRCdWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKY2hhciogYnVmZmVyX2VzY2FwZWQoTWlubmV0QnVmZmVyIGNvbnN0KiwgSlNDb250ZXh0Kik7CnZvaWQgYnVmZmVyX2ZpbmFsaXplcihKU1J1bnRpbWUqLCB2b2lkKiwgdm9pZCopOwpKU1ZhbHVlIGJ1ZmZlcl90b2FycmF5YnVmZmVyKE1pbm5ldEJ1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwp2b2lkIGJ1ZmZlcl9kdW1wKGNvbnN0IGNoYXIqLCBNaW5uZXRCdWZmZXIgY29uc3QqKTsKCnN0YXRpYyBpbmxpbmUgdm9pZApidWZmZXJfcmVzZXQoTWlubmV0QnVmZmVyKiBidWYpIHsKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0OwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0Owp9CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJ1ZmZlcl9ncm93KE1pbm5ldEJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gYmxvY2tfZ3JvdygmYnVmLT5ibG9jaywgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBCT09MCmJ1ZmZlcl9jbG9uZShNaW5uZXRCdWZmZXIqIGJ1ZiwgY29uc3QgTWlubmV0QnVmZmVyKiBvdGhlciwgSlNDb250ZXh0KiBjdHgpIHsKICBpZighYnVmZmVyX2FsbG9jKGJ1ZiwgYmxvY2tfU0laRShvdGhlciksIGN0eCkpCiAgICByZXR1cm4gRkFMU0U7CiAgbWVtY3B5KGJ1Zi0+c3RhcnQsIG90aGVyLT5zdGFydCwgYnVmZmVyX0hFQUQob3RoZXIpKTsKCiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9UQUlMKG90aGVyKTsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9IRUFEKG90aGVyKTsKICByZXR1cm4gVFJVRTsKfQoKc3RhdGljIGlubGluZSB1aW50OF90KgpidWZmZXJfc2tpcChNaW5uZXRCdWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUpIHsKICBhc3NlcnQoYnVmLT5yZWFkICsgc2l6ZSA8PSBidWYtPndyaXRlKTsKICBidWYtPnJlYWQgKz0gc2l6ZTsKICByZXR1cm4gYnVmLT5yZWFkOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKYnVmZmVyX3B1dGNoYXIoTWlubmV0QnVmZmVyKiBidWYsIGNoYXIgYykgewogIGlmKGJ1Zi0+d3JpdGUgKyAxIDw9IGJ1Zi0+ZW5kKSB7CiAgICAqYnVmLT53cml0ZSA9ICh1aW50OF90KWM7CiAgICBidWYtPndyaXRlKys7CiAgICByZXR1cm4gVFJVRTsKICB9CiAgcmV0dXJuIEZBTFNFOwp9CgojZW5kaWYgLyogTUlOTkVUX0JVRkZFUl9IICovCgAAAAAAAAAABg8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgUAAAAAAABaBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1530,
					1,
					"cut",
					null,
					"AQAAAF8FAAAAAAAAXwUAAAAAAAAnAAAAc3RydWN0IHsKICAgIHVpbnQ4X3QgKnN0YXJ0LCAqZW5kOwogIH07",
					"AQAAAAAAAAABAAAAXwUAAAAAAACGBQAAAAAAAP///////+9/"
				],
				[
					1533,
					2,
					"left_delete",
					null,
					"AgAAAF0FAAAAAAAAXQUAAAAAAAACAAAAICBcBQAAAAAAAFwFAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAXwUAAAAAAABfBQAAAAAAAAAAAAAAADRA"
				],
				[
					1537,
					1,
					"paste",
					null,
					"AQAAABMFAAAAAAAAOgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwUAAAAAAAATBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1540,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADoFAAAAAAAAOwUAAAAAAAAAAAAAOwUAAAAAAAA9BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgUAAAAAAAA6BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1543,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAGDwAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGludHR5cGVzLmg+CiNpbmNsdWRlIDxzdGRpby5oPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxzdGRhcmcuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4KCnN0cnVjdCBieXRlX2Jsb2NrIHsKICB1aW50OF90ICpzdGFydCwgKmVuZDsKfTsKCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgTWlubmV0QmxvY2s7CgojZGVmaW5lIGJsb2NrX1NJWkUoYikgKChiKS0+ZW5kIC0gKGIpLT5zdGFydCkKI2RlZmluZSBibG9ja19CRUdJTihiKSAodm9pZCopKGIpLT5zdGFydAojZGVmaW5lIGJsb2NrX0VORChiKSAodm9pZCopKGIpLT5lbmQKI2RlZmluZSBibG9ja19BTExPQyhiKSAoKGIpLT5zdGFydCA/IChiKS0+c3RhcnQgLSBMV1NfUFJFIDogMCkKCnZvaWQgYmxvY2tfaW5pdChzdHJ1Y3QgYnl0ZV9ibG9jayosIHVpbnQ4X3QqLCBzaXplX3QpOwp1aW50OF90KiBibG9ja19hbGxvYyhzdHJ1Y3QgYnl0ZV9ibG9jayosIHNpemVfdCwgSlNDb250ZXh0Kik7CnVpbnQ4X3QqIGJsb2NrX3JlYWxsb2Moc3RydWN0IGJ5dGVfYmxvY2sqLCBzaXplX3QsIEpTQ29udGV4dCopOwp2b2lkIGJsb2NrX2ZyZWUoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU1J1bnRpbWUqKTsKaW50IGJsb2NrX2Zyb21hcnJheWJ1ZmZlcihzdHJ1Y3QgYnl0ZV9ibG9jayosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3RvYXJyYXlidWZmZXIoc3RydWN0IGJ5dGVfYmxvY2sqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b3N0cmluZyhzdHJ1Y3QgYnl0ZV9ibG9jayBjb25zdCosIEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSB1aW50OF90KgpibG9ja19ncm93KHN0cnVjdCBieXRlX2Jsb2NrKiBibGssIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19yZWFsbG9jKGJsaywgYmxvY2tfU0laRShibGspICsgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3QgYnl0ZV9ibG9jawpibG9ja19tb3ZlKHN0cnVjdCBieXRlX2Jsb2NrKiBibGspIHsKICBzdHJ1Y3QgYnl0ZV9ibG9jayByZXQgPSB7YmxrLT5zdGFydCwgYmxrLT5lbmR9OwogIGJsay0+c3RhcnQgPSAwOwogIGJsay0+ZW5kID0gMDsKICByZXR1cm4gcmV0Owp9Cgp0eXBlZGVmIHVuaW9uIGJ5dGVfYnVmZmVyIHsKICBzdHJ1Y3QgYnl0ZV9ibG9jazsKc3RydWN0IHsKICAgIHVpbnQ4X3QgKnN0YXJ0LCAqZW5kOwogIH07CiAgICBzdHJ1Y3QgewogICAgTWlubmV0QmxvY2sgYmxvY2s7CiAgICB1aW50OF90ICpyZWFkLCAqd3JpdGUsICphbGxvYzsKICB9Owp9IE1pbm5ldEJ1ZmZlcjsKCiNkZWZpbmUgQlVGRkVSKGJ1ZikgXAogIChNaW5uZXRCdWZmZXIpIHsgKCh1aW50OF90KikoYnVmKSkgKyBMV1NfUFJFLCAoKHVpbnQ4X3QqKShidWYpKSArIExXU19QUkUsICgodWludDhfdCopKGJ1ZikpICsgTFdTX1BSRSwgKCh1aW50OF90KikoYnVmKSkgKyBzaXplb2YoKGJ1ZikpIC0gMSwgMCB9CgojZGVmaW5lIEJVRkZFUl8wKCkgXAogIChNaW5uZXRCdWZmZXIpIHsgMCwgMCwgMCwgMCwgMCB9CgojZGVmaW5lIEJVRkZFUl9OKGJ1ZiwgbikgXAogIChNaW5uZXRCdWZmZXIpIHsgKCh1aW50OF90KikoYnVmKSksICgodWludDhfdCopKGJ1ZikpLCAoKHVpbnQ4X3QqKShidWYpKSwgKCh1aW50OF90KikoYnVmKSkgKyBuLCAwIH0KCiNkZWZpbmUgYnVmZmVyX0FWQUlMKGIpICgoYiktPmVuZCAtIChiKS0+d3JpdGUpCiNkZWZpbmUgYnVmZmVyX0JZVEVTKGIpICgoYiktPndyaXRlIC0gKGIpLT5yZWFkKQojZGVmaW5lIGJ1ZmZlcl9IRUFEKGIpICgoYiktPndyaXRlIC0gKGIpLT5zdGFydCkKI2RlZmluZSBidWZmZXJfVEFJTChiKSAoKGIpLT5yZWFkIC0gKGIpLT5zdGFydCkKCiNkZWZpbmUgYnVmZmVyX3plcm8oYikgbWVtc2V0KChiKSwgMCwgc2l6ZW9mKE1pbm5ldEJ1ZmZlcikpCgp2b2lkIGJ1ZmZlcl9pbml0KE1pbm5ldEJ1ZmZlciosIHVpbnQ4X3QqLCBzaXplX3QpOwp1aW50OF90KiBidWZmZXJfYWxsb2MoTWlubmV0QnVmZmVyKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKc3NpemVfdCBidWZmZXJfYXBwZW5kKE1pbm5ldEJ1ZmZlciosIGNvbnN0IHZvaWQqLCBzaXplX3QsIEpTQ29udGV4dCogY3R4KTsKdm9pZCBidWZmZXJfZnJlZShNaW5uZXRCdWZmZXIqLCBKU1J1bnRpbWUqKTsKQk9PTCBidWZmZXJfd3JpdGUoTWlubmV0QnVmZmVyKiwgY29uc3QgY2hhciosIHNpemVfdCk7CmludCBidWZmZXJfdnByaW50ZihNaW5uZXRCdWZmZXIqLCBjb25zdCBjaGFyKiwgdmFfbGlzdCk7CmludCBidWZmZXJfcHJpbnRmKE1pbm5ldEJ1ZmZlciosIGNvbnN0IGNoYXIqLCAuLi4pOwp1aW50OF90KiBidWZmZXJfcmVhbGxvYyhNaW5uZXRCdWZmZXIqLCBzaXplX3QsIEpTQ29udGV4dCopOwppbnQgYnVmZmVyX2Zyb21hcnJheWJ1ZmZlcihNaW5uZXRCdWZmZXIqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKaW50IGJ1ZmZlcl9mcm9tdmFsdWUoTWlubmV0QnVmZmVyKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYnVmZmVyX3Rvc3RyaW5nKE1pbm5ldEJ1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwpjaGFyKiBidWZmZXJfZXNjYXBlZChNaW5uZXRCdWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKdm9pZCBidWZmZXJfZmluYWxpemVyKEpTUnVudGltZSosIHZvaWQqLCB2b2lkKik7CkpTVmFsdWUgYnVmZmVyX3RvYXJyYXlidWZmZXIoTWlubmV0QnVmZmVyIGNvbnN0KiwgSlNDb250ZXh0Kik7CnZvaWQgYnVmZmVyX2R1bXAoY29uc3QgY2hhciosIE1pbm5ldEJ1ZmZlciBjb25zdCopOwoKc3RhdGljIGlubGluZSB2b2lkCmJ1ZmZlcl9yZXNldChNaW5uZXRCdWZmZXIqIGJ1ZikgewogIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQ7CiAgYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQ7Cn0KCnN0YXRpYyBpbmxpbmUgdWludDhfdCoKYnVmZmVyX2dyb3coTWlubmV0QnVmZmVyKiBidWYsIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19ncm93KCZidWYtPmJsb2NrLCBzaXplLCBjdHgpOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKYnVmZmVyX2Nsb25lKE1pbm5ldEJ1ZmZlciogYnVmLCBjb25zdCBNaW5uZXRCdWZmZXIqIG90aGVyLCBKU0NvbnRleHQqIGN0eCkgewogIGlmKCFidWZmZXJfYWxsb2MoYnVmLCBibG9ja19TSVpFKG90aGVyKSwgY3R4KSkKICAgIHJldHVybiBGQUxTRTsKICBtZW1jcHkoYnVmLT5zdGFydCwgb3RoZXItPnN0YXJ0LCBidWZmZXJfSEVBRChvdGhlcikpOwoKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0ICsgYnVmZmVyX1RBSUwob3RoZXIpOwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0ICsgYnVmZmVyX0hFQUQob3RoZXIpOwogIHJldHVybiBUUlVFOwp9CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJ1ZmZlcl9za2lwKE1pbm5ldEJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIGFzc2VydChidWYtPnJlYWQgKyBzaXplIDw9IGJ1Zi0+d3JpdGUpOwogIGJ1Zi0+cmVhZCArPSBzaXplOwogIHJldHVybiBidWYtPnJlYWQ7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTApidWZmZXJfcHV0Y2hhcihNaW5uZXRCdWZmZXIqIGJ1ZiwgY2hhciBjKSB7CiAgaWYoYnVmLT53cml0ZSArIDEgPD0gYnVmLT5lbmQpIHsKICAgICpidWYtPndyaXRlID0gKHVpbnQ4X3QpYzsKICAgIGJ1Zi0+d3JpdGUrKzsKICAgIHJldHVybiBUUlVFOwogIH0KICByZXR1cm4gRkFMU0U7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfQlVGRkVSX0ggKi8KAAAAAAAAAAAGDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQUAAAAAAAA9BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1554,
					1,
					"cut",
					null,
					"AQAAABgBAAAAAAAAGAEAAAAAAAAIAAAAdHlwZWRlZiA",
					"AQAAAAAAAAABAAAAIAEAAAAAAAAYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1555,
					1,
					"paste",
					null,
					"AQAAABgBAAAAAAAAIAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAEAAAAAAAAYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1559,
					1,
					"paste",
					null,
					"AQAAAOgAAAAAAAAA8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AAAAAAAAADoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1573,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB0BAAAAAAAAHgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQEAAAAAAAAdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1574,
					1,
					"paste",
					null,
					"AQAAAB4BAAAAAAAAKQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgEAAAAAAAAeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1579,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAACsBAAAAAAAALAEAAAAAAAAAAAAALAEAAAAAAAAsAQAAAAAAACcAAAAKdHlwZWRlZiBzdHJ1Y3QgYnl0ZV9ibG9jayBNaW5uZXRCbG9jazs",
					"AQAAAAAAAAABAAAAKwEAAAAAAABSAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1592,
					1,
					"",
					null,
					"AQAAAPoBAAAAAAAABQIAAAAAAAARAAAAc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAA+gEAAAAAAAALAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1593,
					1,
					"",
					null,
					"AQAAADACAAAAAAAAOwIAAAAAAAARAAAAc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAAMAIAAAAAAABBAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1594,
					1,
					"",
					null,
					"AQAAAGoCAAAAAAAAdQIAAAAAAAARAAAAc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAAagIAAAAAAAB7AgAAAAAAAAAAAAAAAPC/"
				],
				[
					1595,
					1,
					"",
					null,
					"AQAAAJ0CAAAAAAAAqAIAAAAAAAARAAAAc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAAnQIAAAAAAACuAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1596,
					1,
					"",
					null,
					"AQAAANICAAAAAAAA3QIAAAAAAAARAAAAc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAA0gIAAAAAAADjAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1597,
					1,
					"",
					null,
					"AQAAABIDAAAAAAAAHQMAAAAAAAARAAAAc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAAEgMAAAAAAAAjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1598,
					1,
					"",
					null,
					"AQAAAEQDAAAAAAAATwMAAAAAAAARAAAAc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAARAMAAAAAAABVAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1599,
					1,
					"",
					null,
					"AQAAAIgDAAAAAAAAkwMAAAAAAAARAAAAc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAAiAMAAAAAAACZAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1600,
					1,
					"",
					null,
					"AQAAAAQEAAAAAAAADwQAAAAAAAARAAAAc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAABAQAAAAAAAAVBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1601,
					1,
					"",
					null,
					"AQAAABsEAAAAAAAAJgQAAAAAAAARAAAAc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAAGwQAAAAAAAAsBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1602,
					1,
					"",
					null,
					"AQAAADEEAAAAAAAAPAQAAAAAAAARAAAAc3RydWN0IGJ5dGVfYmxvY2s",
					"AQAAAAAAAAABAAAAMQQAAAAAAABCBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1610,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACyDgAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGludHR5cGVzLmg+CiNpbmNsdWRlIDxzdGRpby5oPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxzdGRhcmcuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4KCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgewogIHVpbnQ4X3QgKnN0YXJ0LCAqZW5kOwp9IE1pbm5ldEJsb2NrOwogCgojZGVmaW5lIGJsb2NrX1NJWkUoYikgKChiKS0+ZW5kIC0gKGIpLT5zdGFydCkKI2RlZmluZSBibG9ja19CRUdJTihiKSAodm9pZCopKGIpLT5zdGFydAojZGVmaW5lIGJsb2NrX0VORChiKSAodm9pZCopKGIpLT5lbmQKI2RlZmluZSBibG9ja19BTExPQyhiKSAoKGIpLT5zdGFydCA/IChiKS0+c3RhcnQgLSBMV1NfUFJFIDogMCkKCnZvaWQgYmxvY2tfaW5pdChNaW5uZXRCbG9jayosIHVpbnQ4X3QqLCBzaXplX3QpOwp1aW50OF90KiBibG9ja19hbGxvYyhNaW5uZXRCbG9jayosIHNpemVfdCwgSlNDb250ZXh0Kik7CnVpbnQ4X3QqIGJsb2NrX3JlYWxsb2MoTWlubmV0QmxvY2sqLCBzaXplX3QsIEpTQ29udGV4dCopOwp2b2lkIGJsb2NrX2ZyZWUoTWlubmV0QmxvY2sqLCBKU1J1bnRpbWUqKTsKaW50IGJsb2NrX2Zyb21hcnJheWJ1ZmZlcihNaW5uZXRCbG9jayosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3RvYXJyYXlidWZmZXIoTWlubmV0QmxvY2sqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b3N0cmluZyhNaW5uZXRCbG9jayBjb25zdCosIEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSB1aW50OF90KgpibG9ja19ncm93KE1pbm5ldEJsb2NrKiBibGssIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19yZWFsbG9jKGJsaywgYmxvY2tfU0laRShibGspICsgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRCbG9jawpibG9ja19tb3ZlKE1pbm5ldEJsb2NrKiBibGspIHsKICBNaW5uZXRCbG9jayByZXQgPSB7YmxrLT5zdGFydCwgYmxrLT5lbmR9OwogIGJsay0+c3RhcnQgPSAwOwogIGJsay0+ZW5kID0gMDsKICByZXR1cm4gcmV0Owp9Cgp0eXBlZGVmIHVuaW9uIGJ5dGVfYnVmZmVyIHsKICBzdHJ1Y3QgYnl0ZV9ibG9jazsKICBzdHJ1Y3QgewogICAgdWludDhfdCAqc3RhcnQsICplbmQ7CiAgfTsKICBzdHJ1Y3QgewogICAgTWlubmV0QmxvY2sgYmxvY2s7CiAgICB1aW50OF90ICpyZWFkLCAqd3JpdGUsICphbGxvYzsKICB9Owp9IE1pbm5ldEJ1ZmZlcjsKCiNkZWZpbmUgQlVGRkVSKGJ1ZikgXAogIChNaW5uZXRCdWZmZXIpIHsgKCh1aW50OF90KikoYnVmKSkgKyBMV1NfUFJFLCAoKHVpbnQ4X3QqKShidWYpKSArIExXU19QUkUsICgodWludDhfdCopKGJ1ZikpICsgTFdTX1BSRSwgKCh1aW50OF90KikoYnVmKSkgKyBzaXplb2YoKGJ1ZikpIC0gMSwgMCB9CgojZGVmaW5lIEJVRkZFUl8wKCkgXAogIChNaW5uZXRCdWZmZXIpIHsgMCwgMCwgMCwgMCwgMCB9CgojZGVmaW5lIEJVRkZFUl9OKGJ1ZiwgbikgXAogIChNaW5uZXRCdWZmZXIpIHsgKCh1aW50OF90KikoYnVmKSksICgodWludDhfdCopKGJ1ZikpLCAoKHVpbnQ4X3QqKShidWYpKSwgKCh1aW50OF90KikoYnVmKSkgKyBuLCAwIH0KCiNkZWZpbmUgYnVmZmVyX0FWQUlMKGIpICgoYiktPmVuZCAtIChiKS0+d3JpdGUpCiNkZWZpbmUgYnVmZmVyX0JZVEVTKGIpICgoYiktPndyaXRlIC0gKGIpLT5yZWFkKQojZGVmaW5lIGJ1ZmZlcl9IRUFEKGIpICgoYiktPndyaXRlIC0gKGIpLT5zdGFydCkKI2RlZmluZSBidWZmZXJfVEFJTChiKSAoKGIpLT5yZWFkIC0gKGIpLT5zdGFydCkKCiNkZWZpbmUgYnVmZmVyX3plcm8oYikgbWVtc2V0KChiKSwgMCwgc2l6ZW9mKE1pbm5ldEJ1ZmZlcikpCgp2b2lkIGJ1ZmZlcl9pbml0KE1pbm5ldEJ1ZmZlciosIHVpbnQ4X3QqLCBzaXplX3QpOwp1aW50OF90KiBidWZmZXJfYWxsb2MoTWlubmV0QnVmZmVyKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKc3NpemVfdCBidWZmZXJfYXBwZW5kKE1pbm5ldEJ1ZmZlciosIGNvbnN0IHZvaWQqLCBzaXplX3QsIEpTQ29udGV4dCogY3R4KTsKdm9pZCBidWZmZXJfZnJlZShNaW5uZXRCdWZmZXIqLCBKU1J1bnRpbWUqKTsKQk9PTCBidWZmZXJfd3JpdGUoTWlubmV0QnVmZmVyKiwgY29uc3QgY2hhciosIHNpemVfdCk7CmludCBidWZmZXJfdnByaW50ZihNaW5uZXRCdWZmZXIqLCBjb25zdCBjaGFyKiwgdmFfbGlzdCk7CmludCBidWZmZXJfcHJpbnRmKE1pbm5ldEJ1ZmZlciosIGNvbnN0IGNoYXIqLCAuLi4pOwp1aW50OF90KiBidWZmZXJfcmVhbGxvYyhNaW5uZXRCdWZmZXIqLCBzaXplX3QsIEpTQ29udGV4dCopOwppbnQgYnVmZmVyX2Zyb21hcnJheWJ1ZmZlcihNaW5uZXRCdWZmZXIqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKaW50IGJ1ZmZlcl9mcm9tdmFsdWUoTWlubmV0QnVmZmVyKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYnVmZmVyX3Rvc3RyaW5nKE1pbm5ldEJ1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwpjaGFyKiBidWZmZXJfZXNjYXBlZChNaW5uZXRCdWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKdm9pZCBidWZmZXJfZmluYWxpemVyKEpTUnVudGltZSosIHZvaWQqLCB2b2lkKik7CkpTVmFsdWUgYnVmZmVyX3RvYXJyYXlidWZmZXIoTWlubmV0QnVmZmVyIGNvbnN0KiwgSlNDb250ZXh0Kik7CnZvaWQgYnVmZmVyX2R1bXAoY29uc3QgY2hhciosIE1pbm5ldEJ1ZmZlciBjb25zdCopOwoKc3RhdGljIGlubGluZSB2b2lkCmJ1ZmZlcl9yZXNldChNaW5uZXRCdWZmZXIqIGJ1ZikgewogIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQ7CiAgYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQ7Cn0KCnN0YXRpYyBpbmxpbmUgdWludDhfdCoKYnVmZmVyX2dyb3coTWlubmV0QnVmZmVyKiBidWYsIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19ncm93KCZidWYtPmJsb2NrLCBzaXplLCBjdHgpOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKYnVmZmVyX2Nsb25lKE1pbm5ldEJ1ZmZlciogYnVmLCBjb25zdCBNaW5uZXRCdWZmZXIqIG90aGVyLCBKU0NvbnRleHQqIGN0eCkgewogIGlmKCFidWZmZXJfYWxsb2MoYnVmLCBibG9ja19TSVpFKG90aGVyKSwgY3R4KSkKICAgIHJldHVybiBGQUxTRTsKICBtZW1jcHkoYnVmLT5zdGFydCwgb3RoZXItPnN0YXJ0LCBidWZmZXJfSEVBRChvdGhlcikpOwoKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0ICsgYnVmZmVyX1RBSUwob3RoZXIpOwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0ICsgYnVmZmVyX0hFQUQob3RoZXIpOwogIHJldHVybiBUUlVFOwp9CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJ1ZmZlcl9za2lwKE1pbm5ldEJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIGFzc2VydChidWYtPnJlYWQgKyBzaXplIDw9IGJ1Zi0+d3JpdGUpOwogIGJ1Zi0+cmVhZCArPSBzaXplOwogIHJldHVybiBidWYtPnJlYWQ7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTApidWZmZXJfcHV0Y2hhcihNaW5uZXRCdWZmZXIqIGJ1ZiwgY2hhciBjKSB7CiAgaWYoYnVmLT53cml0ZSArIDEgPD0gYnVmLT5lbmQpIHsKICAgICpidWYtPndyaXRlID0gKHVpbnQ4X3QpYzsKICAgIGJ1Zi0+d3JpdGUrKzsKICAgIHJldHVybiBUUlVFOwogIH0KICByZXR1cm4gRkFMU0U7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfQlVGRkVSX0ggKi8KAAAAAAAAAACyDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAQAAAAAAAC9BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1705,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB4DAAAAAAAAHwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgMAAAAAAAAeAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1706,
					1,
					"left_delete",
					null,
					"AQAAAB4DAAAAAAAAHgMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAHwMAAAAAAAAfAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1735,
					1,
					"paste",
					null,
					"AQAAAJQOAAAAAAAALA8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlA4AAAAAAACUDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1740,
					1,
					"cut",
					null,
					"AQAAAJQOAAAAAAAAlA4AAAAAAACYAAAACgpzdGF0aWMgaW5saW5lIE1pbm5ldEJ5dGVzCmJsb2NrX21vdmUoTWlubmV0Qnl0ZXMqIGJsaykgewogIE1pbm5ldEJ5dGVzIHJldCA9IHtibGstPnN0YXJ0LCBibGstPmVuZH07CiAgYmxrLT5zdGFydCA9IDA7CiAgYmxrLT5lbmQgPSAwOwogIHJldHVybiByZXQ7Cn0",
					"AQAAAAAAAAABAAAAlA4AAAAAAAAsDwAAAAAAAAAAAAAAAPC/"
				],
				[
					1741,
					1,
					"paste",
					null,
					"AQAAAJQOAAAAAAAAMA8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlA4AAAAAAACUDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1743,
					2,
					"left_delete",
					null,
					"AgAAAJYOAAAAAAAAlg4AAAAAAAABAAAAc5UOAAAAAAAAlQ4AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAlw4AAAAAAACXDgAAAAAAAAAAAAAAACRA"
				],
				[
					1744,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAJUOAAAAAAAAlg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQ4AAAAAAACVDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1775,
					1,
					"insert",
					{
						"characters": "*bnu"
					},
					"BQAAAOYOAAAAAAAA5w4AAAAAAAAAAAAA5w4AAAAAAADnDgAAAAAAABYAAAB7YnVmLT5zdGFydCwgYnVmLT5lbmR95w4AAAAAAADoDgAAAAAAAAAAAADoDgAAAAAAAOkOAAAAAAAAAAAAAOkOAAAAAAAA6g4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5g4AAAAAAAD8DgAAAAAAAAAAAAAAAPC/"
				],
				[
					1776,
					3,
					"left_delete",
					null,
					"AwAAAOkOAAAAAAAA6Q4AAAAAAAABAAAAdegOAAAAAAAA6A4AAAAAAAABAAAAbucOAAAAAAAA5w4AAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAA6g4AAAAAAADqDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1777,
					1,
					"insert",
					{
						"characters": "bif"
					},
					"AwAAAOcOAAAAAAAA6A4AAAAAAAAAAAAA6A4AAAAAAADpDgAAAAAAAAAAAADpDgAAAAAAAOoOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5w4AAAAAAADnDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1778,
					1,
					"left_delete",
					null,
					"AQAAAOkOAAAAAAAA6Q4AAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAA6g4AAAAAAADqDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1779,
					1,
					"insert",
					{
						"characters": "uf"
					},
					"AgAAAOkOAAAAAAAA6g4AAAAAAAAAAAAA6g4AAAAAAADrDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6Q4AAAAAAADpDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1780,
					3,
					"left_delete",
					null,
					"AwAAAOoOAAAAAAAA6g4AAAAAAAABAAAAZukOAAAAAAAA6Q4AAAAAAAABAAAAdegOAAAAAAAA6A4AAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAA6w4AAAAAAADrDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1781,
					1,
					"insert",
					{
						"characters": "uf"
					},
					"AgAAAOgOAAAAAAAA6Q4AAAAAAAAAAAAA6Q4AAAAAAADqDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6A4AAAAAAADoDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1793,
					1,
					"insert",
					{
						"characters": "\nmemset"
					},
					"CAAAAOsOAAAAAAAA7A4AAAAAAAAAAAAA7A4AAAAAAADuDgAAAAAAAAAAAADuDgAAAAAAAO8OAAAAAAAAAAAAAO8OAAAAAAAA8A4AAAAAAAAAAAAA8A4AAAAAAADxDgAAAAAAAAAAAADxDgAAAAAAAPIOAAAAAAAAAAAAAPIOAAAAAAAA8w4AAAAAAAAAAAAA8w4AAAAAAAD0DgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6w4AAAAAAADrDgAAAAAAAP///////+9/"
				],
				[
					1794,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPQOAAAAAAAA9g4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9A4AAAAAAAD0DgAAAAAAAAAAAAAAAPC/"
				],
				[
					1795,
					1,
					"insert",
					{
						"characters": "buf,"
					},
					"BAAAAPUOAAAAAAAA9g4AAAAAAAAAAAAA9g4AAAAAAAD3DgAAAAAAAAAAAAD3DgAAAAAAAPgOAAAAAAAAAAAAAPgOAAAAAAAA+Q4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9Q4AAAAAAAD1DgAAAAAAAAAAAAAAAPC/"
				],
				[
					1796,
					1,
					"insert",
					{
						"characters": " 0,"
					},
					"AwAAAPkOAAAAAAAA+g4AAAAAAAAAAAAA+g4AAAAAAAD7DgAAAAAAAAAAAAD7DgAAAAAAAPwOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+Q4AAAAAAAD5DgAAAAAAAAAAAAAAAPC/"
				],
				[
					1797,
					1,
					"insert",
					{
						"characters": " sizeof"
					},
					"BwAAAPwOAAAAAAAA/Q4AAAAAAAAAAAAA/Q4AAAAAAAD+DgAAAAAAAAAAAAD+DgAAAAAAAP8OAAAAAAAAAAAAAP8OAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAABDwAAAAAAAAAAAAABDwAAAAAAAAIPAAAAAAAAAAAAAAIPAAAAAAAAAw8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/A4AAAAAAAD8DgAAAAAAAAAAAAAAAPC/"
				],
				[
					1798,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAMPAAAAAAAABQ8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAw8AAAAAAAADDwAAAAAAAAAAAAAAAPC/"
				],
				[
					1799,
					1,
					"insert",
					{
						"characters": "MinnetBuffer"
					},
					"DAAAAAQPAAAAAAAABQ8AAAAAAAAAAAAABQ8AAAAAAAAGDwAAAAAAAAAAAAAGDwAAAAAAAAcPAAAAAAAAAAAAAAcPAAAAAAAACA8AAAAAAAAAAAAACA8AAAAAAAAJDwAAAAAAAAAAAAAJDwAAAAAAAAoPAAAAAAAAAAAAAAoPAAAAAAAACw8AAAAAAAAAAAAACw8AAAAAAAAMDwAAAAAAAAAAAAAMDwAAAAAAAA0PAAAAAAAAAAAAAA0PAAAAAAAADg8AAAAAAAAAAAAADg8AAAAAAAAPDwAAAAAAAAAAAAAPDwAAAAAAABAPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABA8AAAAAAAAEDwAAAAAAAAAAAAAAAPC/"
				],
				[
					1801,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABIPAAAAAAAAEw8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEg8AAAAAAAASDwAAAAAAAAAAAAAAAPC/"
				],
				[
					1804,
					1,
					"left_delete",
					null,
					"AQAAABQPAAAAAAAAFA8AAAAAAAAiAAAAICBidWYtPnN0YXJ0ID0gMDsKICBidWYtPmVuZCA9IDA7Cg",
					"AQAAAAAAAAABAAAAFA8AAAAAAAA2DwAAAAAAAAAAAAAAAAAA"
				],
				[
					1829,
					1,
					"paste",
					null,
					"AgAAAI0KAAAAAAAAxwoAAAAAAAAAAAAAxwoAAAAAAADHCgAAAAAAAD8AAABKU1ZhbHVlIGJ1ZmZlcl90b2FycmF5YnVmZmVyKE1pbm5ldEJ1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwo",
					"AQAAAAAAAAABAAAAjQoAAAAAAADMCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1832,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA8DwAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGludHR5cGVzLmg+CiNpbmNsdWRlIDxzdGRpby5oPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxzdGRhcmcuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4KCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgewogIHVpbnQ4X3QgKnN0YXJ0LCAqZW5kOwp9IE1pbm5ldEJ5dGVzOwogCgojZGVmaW5lIGJsb2NrX1NJWkUoYikgKChiKS0+ZW5kIC0gKGIpLT5zdGFydCkKI2RlZmluZSBibG9ja19CRUdJTihiKSAodm9pZCopKGIpLT5zdGFydAojZGVmaW5lIGJsb2NrX0VORChiKSAodm9pZCopKGIpLT5lbmQKI2RlZmluZSBibG9ja19BTExPQyhiKSAoKGIpLT5zdGFydCA/IChiKS0+c3RhcnQgLSBMV1NfUFJFIDogMCkKCnZvaWQgYmxvY2tfaW5pdChNaW5uZXRCeXRlcyosIHVpbnQ4X3QqLCBzaXplX3QpOwp1aW50OF90KiBibG9ja19hbGxvYyhNaW5uZXRCeXRlcyosIHNpemVfdCwgSlNDb250ZXh0Kik7CnVpbnQ4X3QqIGJsb2NrX3JlYWxsb2MoTWlubmV0Qnl0ZXMqLCBzaXplX3QsIEpTQ29udGV4dCopOwp2b2lkIGJsb2NrX2ZyZWUoTWlubmV0Qnl0ZXMqLCBKU1J1bnRpbWUqKTsKaW50IGJsb2NrX2Zyb21hcnJheWJ1ZmZlcihNaW5uZXRCeXRlcyosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3RvYXJyYXlidWZmZXIoTWlubmV0Qnl0ZXMqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b3N0cmluZyhNaW5uZXRCeXRlcyBjb25zdCosIEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSB1aW50OF90KgpibG9ja19ncm93KE1pbm5ldEJ5dGVzKiBibGssIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19yZWFsbG9jKGJsaywgYmxvY2tfU0laRShibGspICsgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRCeXRlcwpibG9ja19tb3ZlKE1pbm5ldEJ5dGVzKiBibGspIHsKICBNaW5uZXRCeXRlcyByZXQgPSB7YmxrLT5zdGFydCwgYmxrLT5lbmR9OwogIGJsay0+c3RhcnQgPSAwOwogIGJsay0+ZW5kID0gMDsKICByZXR1cm4gcmV0Owp9Cgp0eXBlZGVmIHVuaW9uIGJ5dGVfYnVmZmVyIHsKICBzdHJ1Y3QgYnl0ZV9ibG9jazsKICBzdHJ1Y3QgewogICAgdWludDhfdCAqc3RhcnQsICplbmQ7CiAgfTsKICBzdHJ1Y3QgewogICAgTWlubmV0Qnl0ZXMgYmxvY2s7CiAgICB1aW50OF90ICpyZWFkLCAqd3JpdGUsICphbGxvYzsKICB9Owp9IE1pbm5ldEJ1ZmZlcjsKCiNkZWZpbmUgQlVGRkVSKGJ1ZikgXAogIChNaW5uZXRCdWZmZXIpIHsgKCh1aW50OF90KikoYnVmKSkgKyBMV1NfUFJFLCAoKHVpbnQ4X3QqKShidWYpKSArIExXU19QUkUsICgodWludDhfdCopKGJ1ZikpICsgTFdTX1BSRSwgKCh1aW50OF90KikoYnVmKSkgKyBzaXplb2YoKGJ1ZikpIC0gMSwgMCB9CgojZGVmaW5lIEJVRkZFUl8wKCkgXAogIChNaW5uZXRCdWZmZXIpIHsgMCwgMCwgMCwgMCwgMCB9CgojZGVmaW5lIEJVRkZFUl9OKGJ1ZiwgbikgXAogIChNaW5uZXRCdWZmZXIpIHsgKCh1aW50OF90KikoYnVmKSksICgodWludDhfdCopKGJ1ZikpLCAoKHVpbnQ4X3QqKShidWYpKSwgKCh1aW50OF90KikoYnVmKSkgKyBuLCAwIH0KCiNkZWZpbmUgYnVmZmVyX0FWQUlMKGIpICgoYiktPmVuZCAtIChiKS0+d3JpdGUpCiNkZWZpbmUgYnVmZmVyX0JZVEVTKGIpICgoYiktPndyaXRlIC0gKGIpLT5yZWFkKQojZGVmaW5lIGJ1ZmZlcl9IRUFEKGIpICgoYiktPndyaXRlIC0gKGIpLT5zdGFydCkKI2RlZmluZSBidWZmZXJfVEFJTChiKSAoKGIpLT5yZWFkIC0gKGIpLT5zdGFydCkKCiNkZWZpbmUgYnVmZmVyX3plcm8oYikgbWVtc2V0KChiKSwgMCwgc2l6ZW9mKE1pbm5ldEJ1ZmZlcikpCgp2b2lkIGJ1ZmZlcl9pbml0KE1pbm5ldEJ1ZmZlciosIHVpbnQ4X3QqLCBzaXplX3QpOwp1aW50OF90KiBidWZmZXJfYWxsb2MoTWlubmV0QnVmZmVyKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKc3NpemVfdCBidWZmZXJfYXBwZW5kKE1pbm5ldEJ1ZmZlciosIGNvbnN0IHZvaWQqLCBzaXplX3QsIEpTQ29udGV4dCogY3R4KTsKdm9pZCBidWZmZXJfZnJlZShNaW5uZXRCdWZmZXIqLCBKU1J1bnRpbWUqKTsKQk9PTCBidWZmZXJfd3JpdGUoTWlubmV0QnVmZmVyKiwgY29uc3QgY2hhciosIHNpemVfdCk7CmludCBidWZmZXJfdnByaW50ZihNaW5uZXRCdWZmZXIqLCBjb25zdCBjaGFyKiwgdmFfbGlzdCk7CmludCBidWZmZXJfcHJpbnRmKE1pbm5ldEJ1ZmZlciosIGNvbnN0IGNoYXIqLCAuLi4pOwp1aW50OF90KiBidWZmZXJfcmVhbGxvYyhNaW5uZXRCdWZmZXIqLCBzaXplX3QsIEpTQ29udGV4dCopOwppbnQgYnVmZmVyX2Zyb21hcnJheWJ1ZmZlcihNaW5uZXRCdWZmZXIqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKaW50IGJ1ZmZlcl9mcm9tdmFsdWUoTWlubmV0QnVmZmVyKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYnVmZmVyX3Rvc3RyaW5nKE1pbm5ldEJ1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwpjaGFyKiBidWZmZXJfZXNjYXBlZChNaW5uZXRCdWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKdm9pZCBidWZmZXJfZmluYWxpemVyKEpTUnVudGltZSosIHZvaWQqLCB2b2lkKik7CkpTVmFsdWUgIGJ1ZmZlcl90b2FycmF5YnVmZmVyKE1pbm5ldEJ1ZmZlciosIEpTQ29udGV4dCopOwp2b2lkIGJ1ZmZlcl9kdW1wKGNvbnN0IGNoYXIqLCBNaW5uZXRCdWZmZXIgY29uc3QqKTsKCnN0YXRpYyBpbmxpbmUgdm9pZApidWZmZXJfcmVzZXQoTWlubmV0QnVmZmVyKiBidWYpIHsKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0OwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0Owp9CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJ1ZmZlcl9ncm93KE1pbm5ldEJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gYmxvY2tfZ3JvdygmYnVmLT5ibG9jaywgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBCT09MCmJ1ZmZlcl9jbG9uZShNaW5uZXRCdWZmZXIqIGJ1ZiwgY29uc3QgTWlubmV0QnVmZmVyKiBvdGhlciwgSlNDb250ZXh0KiBjdHgpIHsKICBpZighYnVmZmVyX2FsbG9jKGJ1ZiwgYmxvY2tfU0laRShvdGhlciksIGN0eCkpCiAgICByZXR1cm4gRkFMU0U7CiAgbWVtY3B5KGJ1Zi0+c3RhcnQsIG90aGVyLT5zdGFydCwgYnVmZmVyX0hFQUQob3RoZXIpKTsKCiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9UQUlMKG90aGVyKTsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9IRUFEKG90aGVyKTsKICByZXR1cm4gVFJVRTsKfQoKc3RhdGljIGlubGluZSB1aW50OF90KgpidWZmZXJfc2tpcChNaW5uZXRCdWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUpIHsKICBhc3NlcnQoYnVmLT5yZWFkICsgc2l6ZSA8PSBidWYtPndyaXRlKTsKICBidWYtPnJlYWQgKz0gc2l6ZTsKICByZXR1cm4gYnVmLT5yZWFkOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKYnVmZmVyX3B1dGNoYXIoTWlubmV0QnVmZmVyKiBidWYsIGNoYXIgYykgewogIGlmKGJ1Zi0+d3JpdGUgKyAxIDw9IGJ1Zi0+ZW5kKSB7CiAgICAqYnVmLT53cml0ZSA9ICh1aW50OF90KWM7CiAgICBidWYtPndyaXRlKys7CiAgICByZXR1cm4gVFJVRTsKICB9CiAgcmV0dXJuIEZBTFNFOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldEJ1ZmZlcgpidWZmZXJfbW92ZShNaW5uZXRCdWZmZXIqIGJ1ZikgewogIE1pbm5ldEJ1ZmZlciByZXQgPSAqYnVmOwogIG1lbXNldChidWYsIDAsIHNpemVvZihNaW5uZXRCdWZmZXIpKTsKICByZXR1cm4gcmV0Owp9CiNlbmRpZiAvKiBNSU5ORVRfQlVGRkVSX0ggKi8KAAAAAAAAAAA5DwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwoAAAAAAADHCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1835,
					1,
					"right_delete",
					null,
					"AQAAABsPAAAAAAAAGw8AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAGw8AAAAAAAAbDwAAAAAAAAAAAAAAAPC/"
				],
				[
					1836,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAABsPAAAAAAAAHA8AAAAAAAAAAAAAHA8AAAAAAAAdDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGw8AAAAAAAAbDwAAAAAAAAAAAAAAAPC/"
				],
				[
					1870,
					1,
					"cut",
					null,
					"AQAAAFkBAAAAAAAAWQEAAAAAAABOAAAACiNkZWZpbmUgYmxvY2tfQkVHSU4oYikgKHZvaWQqKShiKS0+c3RhcnQKI2RlZmluZSBibG9ja19FTkQoYikgKHZvaWQqKShiKS0+ZW5k",
					"AQAAAAAAAAABAAAApwEAAAAAAABZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1871,
					1,
					"paste",
					null,
					"AQAAAFkBAAAAAAAApwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQEAAAAAAABZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1874,
					1,
					"paste",
					null,
					"AQAAAGwHAAAAAAAAugcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAcAAAAAAABsBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1879,
					1,
					"left_delete",
					null,
					"AQAAAHYHAAAAAAAAdgcAAAAAAAAEAAAAbG9jaw",
					"AQAAAAAAAAABAAAAdgcAAAAAAAB6BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1880,
					1,
					"insert",
					{
						"characters": "uffer"
					},
					"BQAAAHYHAAAAAAAAdwcAAAAAAAAAAAAAdwcAAAAAAAB4BwAAAAAAAAAAAAB4BwAAAAAAAHkHAAAAAAAAAAAAAHkHAAAAAAAAegcAAAAAAAAAAAAAegcAAAAAAAB7BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgcAAAAAAAB2BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1883,
					4,
					"left_delete",
					null,
					"BAAAAKMHAAAAAAAAowcAAAAAAAABAAAAa6IHAAAAAAAAogcAAAAAAAABAAAAY6EHAAAAAAAAoQcAAAAAAAABAAAAb6AHAAAAAAAAoAcAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAApAcAAAAAAACkBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1884,
					1,
					"insert",
					{
						"characters": "uffer"
					},
					"BQAAAKAHAAAAAAAAoQcAAAAAAAAAAAAAoQcAAAAAAACiBwAAAAAAAAAAAACiBwAAAAAAAKMHAAAAAAAAAAAAAKMHAAAAAAAApAcAAAAAAAAAAAAApAcAAAAAAAClBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAcAAAAAAACgBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1888,
					1,
					"insert",
					{
						"characters": "block."
					},
					"BgAAAJEHAAAAAAAAkgcAAAAAAAAAAAAAkgcAAAAAAACTBwAAAAAAAAAAAACTBwAAAAAAAJQHAAAAAAAAAAAAAJQHAAAAAAAAlQcAAAAAAAAAAAAAlQcAAAAAAACWBwAAAAAAAAAAAACWBwAAAAAAAJcHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQcAAAAAAACRBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1890,
					1,
					"insert",
					{
						"characters": "block_BEGIN"
					},
					"CwAAAIUHAAAAAAAAhgcAAAAAAAAAAAAAhgcAAAAAAACHBwAAAAAAAAAAAACHBwAAAAAAAIgHAAAAAAAAAAAAAIgHAAAAAAAAiQcAAAAAAAAAAAAAiQcAAAAAAACKBwAAAAAAAAAAAACKBwAAAAAAAIsHAAAAAAAAAAAAAIsHAAAAAAAAjAcAAAAAAAAAAAAAjAcAAAAAAACNBwAAAAAAAAAAAACNBwAAAAAAAI4HAAAAAAAAAAAAAI4HAAAAAAAAjwcAAAAAAAAAAAAAjwcAAAAAAACQBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQcAAAAAAACFBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1891,
					1,
					"insert",
					{
						"characters": "(&/b"
					},
					"BAAAAJAHAAAAAAAAkQcAAAAAAAAAAAAAkQcAAAAAAACSBwAAAAAAAAAAAACSBwAAAAAAAJMHAAAAAAAAAAAAAJMHAAAAAAAAlAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAcAAAAAAACQBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1892,
					2,
					"left_delete",
					null,
					"AgAAAJMHAAAAAAAAkwcAAAAAAAABAAAAYpIHAAAAAAAAkgcAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAlAcAAAAAAACUBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1893,
					1,
					"insert",
					{
						"characters": "(b)->block)"
					},
					"CwAAAJIHAAAAAAAAkwcAAAAAAAAAAAAAkwcAAAAAAACUBwAAAAAAAAAAAACUBwAAAAAAAJUHAAAAAAAAAAAAAJUHAAAAAAAAlgcAAAAAAAAAAAAAlgcAAAAAAACXBwAAAAAAAAAAAACXBwAAAAAAAJgHAAAAAAAAAAAAAJgHAAAAAAAAmQcAAAAAAAAAAAAAmQcAAAAAAACaBwAAAAAAAAAAAACaBwAAAAAAAJsHAAAAAAAAAAAAAJsHAAAAAAAAnAcAAAAAAAAAAAAAnAcAAAAAAACdBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgcAAAAAAACSBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1894,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJ0HAAAAAAAAngcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQcAAAAAAACdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1895,
					1,
					"left_delete",
					null,
					"AQAAAJ0HAAAAAAAAnQcAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAngcAAAAAAACeBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1897,
					1,
					"cut",
					null,
					"AQAAAJ0HAAAAAAAAnQcAAAAAAAAXAAAAKHZvaWQqKShiKS0+YmxvY2suc3RhcnQ",
					"AQAAAAAAAAABAAAAnQcAAAAAAAC0BwAAAAAAAP///////+9/"
				],
				[
					1901,
					1,
					"cut",
					null,
					"AQAAAG0HAAAAAAAAbQcAAAAAAAAxAAAAI2RlZmluZSBidWZmZXJfQkVHSU4oYikgYmxvY2tfQkVHSU4oJihiKS0+YmxvY2spCg",
					"AQAAAAAAAAABAAAAbQcAAAAAAACeBwAAAAAAAAAAAAAAAAAA"
				],
				[
					1902,
					2,
					"paste",
					null,
					"AgAAAG0HAAAAAAAAngcAAAAAAAAAAAAAngcAAAAAAADPBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQcAAAAAAABtBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1905,
					1,
					"insert",
					{
						"characters": "_END"
					},
					"BQAAAKwHAAAAAAAArQcAAAAAAAAAAAAArQcAAAAAAACtBwAAAAAAAAYAAABfQkVHSU6tBwAAAAAAAK4HAAAAAAAAAAAAAK4HAAAAAAAArwcAAAAAAAAAAAAArwcAAAAAAACwBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAcAAAAAAACyBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1909,
					2,
					"left_delete",
					null,
					"AgAAALsHAAAAAAAAuwcAAAAAAAAEAAAARUdJTroHAAAAAAAAugcAAAAAAAABAAAAQg",
					"AQAAAAAAAAABAAAAuwcAAAAAAAC/BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1910,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAALoHAAAAAAAAuwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugcAAAAAAAC6BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1911,
					1,
					"left_delete",
					null,
					"AQAAALoHAAAAAAAAugcAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAuwcAAAAAAAC7BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1912,
					1,
					"insert",
					{
						"characters": "END"
					},
					"AwAAALoHAAAAAAAAuwcAAAAAAAAAAAAAuwcAAAAAAAC8BwAAAAAAAAAAAAC8BwAAAAAAAL0HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugcAAAAAAAC6BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1916,
					1,
					"left_delete",
					null,
					"AQAAAMsHAAAAAAAAywcAAAAAAAAmAAAAI2RlZmluZSBidWZmZXJfRU5EKGIpICh2b2lkKikoYiktPmVuZAo",
					"AQAAAAAAAAABAAAAywcAAAAAAADxBwAAAAAAAAAAAAAAAAAA"
				],
				[
					1940,
					1,
					"cut",
					null,
					"AQAAAG0HAAAAAAAAbQcAAAAAAAAxAAAAI2RlZmluZSBidWZmZXJfQkVHSU4oYikgYmxvY2tfQkVHSU4oJihiKS0+YmxvY2spCg",
					"AQAAAAAAAAABAAAAbQcAAAAAAACeBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1941,
					2,
					"paste",
					null,
					"AgAAAG0HAAAAAAAAngcAAAAAAAAAAAAAngcAAAAAAADPBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQcAAAAAAABtBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1944,
					1,
					"insert",
					{
						"characters": "SIZE("
					},
					"BgAAAHwHAAAAAAAAfQcAAAAAAAAAAAAAfQcAAAAAAAB9BwAAAAAAAAYAAABCRUdJTih9BwAAAAAAAH4HAAAAAAAAAAAAAH4HAAAAAAAAfwcAAAAAAAAAAAAAfwcAAAAAAACABwAAAAAAAAAAAACABwAAAAAAAIEHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAcAAAAAAACCBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1946,
					5,
					"right_delete",
					null,
					"BQAAAIoHAAAAAAAAigcAAAAAAAABAAAAQooHAAAAAAAAigcAAAAAAAABAAAARYoHAAAAAAAAigcAAAAAAAABAAAAR4oHAAAAAAAAigcAAAAAAAABAAAASYoHAAAAAAAAigcAAAAAAAABAAAATg",
					"AQAAAAAAAAABAAAAigcAAAAAAACKBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1947,
					1,
					"insert",
					{
						"characters": "SIZE"
					},
					"BAAAAIoHAAAAAAAAiwcAAAAAAAAAAAAAiwcAAAAAAACMBwAAAAAAAAAAAACMBwAAAAAAAI0HAAAAAAAAAAAAAI0HAAAAAAAAjgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigcAAAAAAACKBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1951,
					1,
					"cut",
					null,
					"AQAAAG0HAAAAAAAAbQcAAAAAAAAvAAAAI2RlZmluZSBidWZmZXJfU0laRShiKSBibG9ja19TSVpFKCYoYiktPmJsb2NrKQo",
					"AQAAAAAAAAABAAAAbQcAAAAAAACcBwAAAAAAAAAAAAAAAAAA"
				],
				[
					1953,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMsHAAAAAAAAzAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywcAAAAAAADLBwAAAAAAAAAAAAAAAAAA"
				],
				[
					1954,
					1,
					"paste",
					null,
					"AQAAAMwHAAAAAAAA+wcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAcAAAAAAADMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1955,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPsHAAAAAAAA/AcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wcAAAAAAAD7BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1957,
					1,
					"left_delete",
					null,
					"AQAAAMsHAAAAAAAAywcAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAzAcAAAAAAADMBwAAAAAAAAAAAAAAAAAA"
				],
				[
					1965,
					1,
					"cut",
					null,
					"AQAAAMsHAAAAAAAAywcAAAAAAAAvAAAAI2RlZmluZSBidWZmZXJfU0laRShiKSBibG9ja19TSVpFKCYoYiktPmJsb2NrKQo",
					"AQAAAAAAAAABAAAAywcAAAAAAAD6BwAAAAAAAAAAAAAAAAAA"
				],
				[
					1966,
					2,
					"paste",
					null,
					"AgAAAMsHAAAAAAAA+gcAAAAAAAAAAAAA+gcAAAAAAAApCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywcAAAAAAADLBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1971,
					1,
					"insert",
					{
						"characters": "ALLOC"
					},
					"BgAAAAkIAAAAAAAACggAAAAAAAAAAAAACggAAAAAAAAKCAAAAAAAAAQAAABTSVpFCggAAAAAAAALCAAAAAAAAAAAAAALCAAAAAAAAAwIAAAAAAAAAAAAAAwIAAAAAAAADQgAAAAAAAAAAAAADQgAAAAAAAAOCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQgAAAAAAAANCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1973,
					7,
					"left_delete",
					null,
					"BwAAABcIAAAAAAAAFwgAAAAAAAABAAAAXxYIAAAAAAAAFggAAAAAAAABAAAAaxUIAAAAAAAAFQgAAAAAAAABAAAAYxQIAAAAAAAAFAgAAAAAAAABAAAAbxMIAAAAAAAAEwgAAAAAAAABAAAAbBIIAAAAAAAAEggAAAAAAAABAAAAYhEIAAAAAAAAEQgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAGAgAAAAAAAAYCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1974,
					1,
					"insert",
					{
						"characters": " ((b)->alloc"
					},
					"DAAAABEIAAAAAAAAEggAAAAAAAAAAAAAEggAAAAAAAATCAAAAAAAAAAAAAATCAAAAAAAABQIAAAAAAAAAAAAABQIAAAAAAAAFQgAAAAAAAAAAAAAFQgAAAAAAAAWCAAAAAAAAAAAAAAWCAAAAAAAABcIAAAAAAAAAAAAABcIAAAAAAAAGAgAAAAAAAAAAAAAGAgAAAAAAAAZCAAAAAAAAAAAAAAZCAAAAAAAABoIAAAAAAAAAAAAABoIAAAAAAAAGwgAAAAAAAAAAAAAGwgAAAAAAAAcCAAAAAAAAAAAAAAcCAAAAAAAAB0IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQgAAAAAAAARCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1975,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAB0IAAAAAAAAHggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQgAAAAAAAAdCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1977,
					1,
					"cut",
					null,
					"AQAAAB4IAAAAAAAAHggAAAAAAAARAAAAU0laRSgmKGIpLT5ibG9jayk",
					"AQAAAAAAAAABAAAAHggAAAAAAAAvCAAAAAAAAP///////+9/"
				],
				[
					1980,
					1,
					"cut",
					null,
					"AQAAAPoHAAAAAAAA+gcAAAAAAAAlAAAAI2RlZmluZSBidWZmZXJfQUxMT0MoYikgKChiKS0+YWxsb2MpCg",
					"AQAAAAAAAAABAAAAHwgAAAAAAAD6BwAAAAAAAAAAAAAAAAAA"
				],
				[
					1981,
					1,
					"paste",
					null,
					"AQAAAPoHAAAAAAAAHwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gcAAAAAAAD6BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1983,
					1,
					"cut",
					null,
					"AQAAAPoHAAAAAAAA+gcAAAAAAAAlAAAAI2RlZmluZSBidWZmZXJfQUxMT0MoYikgKChiKS0+YWxsb2MpCg",
					"AQAAAAAAAAABAAAAHwgAAAAAAAD6BwAAAAAAAAAAAAAAAAAA"
				],
				[
					1985,
					1,
					"paste",
					null,
					"AQAAAGwHAAAAAAAAkQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAcAAAAAAABsBwAAAAAAAAAAAAAAAAAA"
				],
				[
					1989,
					1,
					"cut",
					null,
					"AQAAAGwHAAAAAAAAbAcAAAAAAAAlAAAAI2RlZmluZSBidWZmZXJfQUxMT0MoYikgKChiKS0+YWxsb2MpCg",
					"AQAAAAAAAAABAAAAkQcAAAAAAABsBwAAAAAAAAAAAAAAAAAA"
				],
				[
					1990,
					1,
					"paste",
					null,
					"AQAAAGwHAAAAAAAAkQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAcAAAAAAABsBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2094,
					1,
					"cut",
					null,
					"AQAAABUFAAAAAAAAFQUAAAAAAAAVAAAAKnJlYWQsICp3cml0ZSwgKmFsbG9j",
					"AQAAAAAAAAABAAAAFQUAAAAAAAAqBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2095,
					1,
					"paste",
					null,
					"AQAAABUFAAAAAAAAKgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQUAAAAAAAAVBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2100,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOAEAAAAAAAA4QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AQAAAAAAADgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2101,
					1,
					"paste",
					null,
					"AQAAAOEEAAAAAAAA9gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QQAAAAAAADhBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2105,
					1,
					"left_delete",
					null,
					"AQAAAB8FAAAAAAAAHwUAAAAAAAAjAAAAICAgIHVpbnQ4X3QgKnJlYWQsICp3cml0ZSwgKmFsbG9jOwo",
					"AQAAAAAAAAABAAAAHwUAAAAAAABCBQAAAAAAAAAAAAAAAAAA"
				],
				[
					2110,
					1,
					"left_delete",
					null,
					"AQAAAP0EAAAAAAAA/QQAAAAAAAALAAAAICBzdHJ1Y3Qgewo",
					"AQAAAAAAAAABAAAA/QQAAAAAAAAIBQAAAAAAAAAAAAAAAAAA"
				],
				[
					2113,
					1,
					"left_delete",
					null,
					"AQAAABQFAAAAAAAAFAUAAAAAAAAFAAAAICB9Owo",
					"AQAAAAAAAAABAAAAFAUAAAAAAAAZBQAAAAAAAAAAAAAAAAAA"
				],
				[
					2125,
					1,
					"cut",
					null,
					"AQAAAL0EAAAAAAAAvQQAAAAAAABAAAAAICBzdHJ1Y3QgewogICAgdWludDhfdCAqc3RhcnQsICplbmQsKnJlYWQsICp3cml0ZSwgKmFsbG9jOwogIH07Cg",
					"AQAAAAAAAAABAAAAvQQAAAAAAAD9BAAAAAAAAAAAAAAAAAAA"
				],
				[
					2127,
					1,
					"paste",
					null,
					"AQAAAKgEAAAAAAAA6AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAQAAAAAAACoBAAAAAAAAAAAAAAAAAAA"
				],
				[
					2134,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADQDwAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGludHR5cGVzLmg+CiNpbmNsdWRlIDxzdGRpby5oPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxzdGRhcmcuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4KCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgewogIHVpbnQ4X3QgKnN0YXJ0LCAqZW5kOwp9IE1pbm5ldEJ5dGVzOwoKI2RlZmluZSBibG9ja19TSVpFKGIpICgoYiktPmVuZCAtIChiKS0+c3RhcnQpCiNkZWZpbmUgYmxvY2tfQkVHSU4oYikgKHZvaWQqKShiKS0+c3RhcnQKI2RlZmluZSBibG9ja19FTkQoYikgKHZvaWQqKShiKS0+ZW5kCiNkZWZpbmUgYmxvY2tfQUxMT0MoYikgKChiKS0+c3RhcnQgPyAoYiktPnN0YXJ0IC0gTFdTX1BSRSA6IDApCgp2b2lkIGJsb2NrX2luaXQoTWlubmV0Qnl0ZXMqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYmxvY2tfYWxsb2MoTWlubmV0Qnl0ZXMqLCBzaXplX3QsIEpTQ29udGV4dCopOwp1aW50OF90KiBibG9ja19yZWFsbG9jKE1pbm5ldEJ5dGVzKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKdm9pZCBibG9ja19mcmVlKE1pbm5ldEJ5dGVzKiwgSlNSdW50aW1lKik7CmludCBibG9ja19mcm9tYXJyYXlidWZmZXIoTWlubmV0Qnl0ZXMqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b2FycmF5YnVmZmVyKE1pbm5ldEJ5dGVzKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYmxvY2tfdG9zdHJpbmcoTWlubmV0Qnl0ZXMgY29uc3QqLCBKU0NvbnRleHQqKTsKCnN0YXRpYyBpbmxpbmUgdWludDhfdCoKYmxvY2tfZ3JvdyhNaW5uZXRCeXRlcyogYmxrLCBzaXplX3Qgc2l6ZSwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gYmxvY2tfcmVhbGxvYyhibGssIGJsb2NrX1NJWkUoYmxrKSArIHNpemUsIGN0eCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0Qnl0ZXMKYmxvY2tfbW92ZShNaW5uZXRCeXRlcyogYmxrKSB7CiAgTWlubmV0Qnl0ZXMgcmV0ID0ge2Jsay0+c3RhcnQsIGJsay0+ZW5kfTsKICBibGstPnN0YXJ0ID0gMDsKICBibGstPmVuZCA9IDA7CiAgcmV0dXJuIHJldDsKfQoKdHlwZWRlZiB1bmlvbiBieXRlX2J1ZmZlciB7CiAgc3RydWN0IHsKICAgIHVpbnQ4X3QgKnN0YXJ0LCAqZW5kLCpyZWFkLCAqd3JpdGUsICphbGxvYzsKICB9OwogIHN0cnVjdCBieXRlX2Jsb2NrOwogICAgTWlubmV0Qnl0ZXMgYmxvY2s7Cn0gTWlubmV0QnVmZmVyOwoKI2RlZmluZSBCVUZGRVIoYnVmKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyAoKHVpbnQ4X3QqKShidWYpKSArIExXU19QUkUsICgodWludDhfdCopKGJ1ZikpICsgTFdTX1BSRSwgKCh1aW50OF90KikoYnVmKSkgKyBMV1NfUFJFLCAoKHVpbnQ4X3QqKShidWYpKSArIHNpemVvZigoYnVmKSkgLSAxLCAwIH0KCiNkZWZpbmUgQlVGRkVSXzAoKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyAwLCAwLCAwLCAwLCAwIH0KCiNkZWZpbmUgQlVGRkVSX04oYnVmLCBuKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyAoKHVpbnQ4X3QqKShidWYpKSwgKCh1aW50OF90KikoYnVmKSksICgodWludDhfdCopKGJ1ZikpLCAoKHVpbnQ4X3QqKShidWYpKSArIG4sIDAgfQoKI2RlZmluZSBidWZmZXJfQVZBSUwoYikgKChiKS0+ZW5kIC0gKGIpLT53cml0ZSkKI2RlZmluZSBidWZmZXJfQllURVMoYikgKChiKS0+d3JpdGUgLSAoYiktPnJlYWQpCiNkZWZpbmUgYnVmZmVyX0hFQUQoYikgKChiKS0+d3JpdGUgLSAoYiktPnN0YXJ0KQojZGVmaW5lIGJ1ZmZlcl9UQUlMKGIpICgoYiktPnJlYWQgLSAoYiktPnN0YXJ0KQojZGVmaW5lIGJ1ZmZlcl9BTExPQyhiKSAoKGIpLT5hbGxvYykKCiNkZWZpbmUgYnVmZmVyX0JFR0lOKGIpIGJsb2NrX0JFR0lOKCYoYiktPmJsb2NrKQojZGVmaW5lIGJ1ZmZlcl9FTkQoYikgYmxvY2tfRU5EKCYoYiktPmJsb2NrKQojZGVmaW5lIGJ1ZmZlcl9TSVpFKGIpIGJsb2NrX1NJWkUoJihiKS0+YmxvY2spCgojZGVmaW5lIGJ1ZmZlcl96ZXJvKGIpIG1lbXNldCgoYiksIDAsIHNpemVvZihNaW5uZXRCdWZmZXIpKQoKdm9pZCBidWZmZXJfaW5pdChNaW5uZXRCdWZmZXIqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYnVmZmVyX2FsbG9jKE1pbm5ldEJ1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CnNzaXplX3QgYnVmZmVyX2FwcGVuZChNaW5uZXRCdWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgYnVmZmVyX2ZyZWUoTWlubmV0QnVmZmVyKiwgSlNSdW50aW1lKik7CkJPT0wgYnVmZmVyX3dyaXRlKE1pbm5ldEJ1ZmZlciosIGNvbnN0IGNoYXIqLCBzaXplX3QpOwppbnQgYnVmZmVyX3ZwcmludGYoTWlubmV0QnVmZmVyKiwgY29uc3QgY2hhciosIHZhX2xpc3QpOwppbnQgYnVmZmVyX3ByaW50ZihNaW5uZXRCdWZmZXIqLCBjb25zdCBjaGFyKiwgLi4uKTsKdWludDhfdCogYnVmZmVyX3JlYWxsb2MoTWlubmV0QnVmZmVyKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKaW50IGJ1ZmZlcl9mcm9tYXJyYXlidWZmZXIoTWlubmV0QnVmZmVyKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbXZhbHVlKE1pbm5ldEJ1ZmZlciosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJ1ZmZlcl90b3N0cmluZyhNaW5uZXRCdWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKY2hhciogYnVmZmVyX2VzY2FwZWQoTWlubmV0QnVmZmVyIGNvbnN0KiwgSlNDb250ZXh0Kik7CnZvaWQgYnVmZmVyX2ZpbmFsaXplcihKU1J1bnRpbWUqLCB2b2lkKiwgdm9pZCopOwpKU1ZhbHVlIGJ1ZmZlcl90b2FycmF5YnVmZmVyKE1pbm5ldEJ1ZmZlciosIEpTQ29udGV4dCopOwp2b2lkIGJ1ZmZlcl9kdW1wKGNvbnN0IGNoYXIqLCBNaW5uZXRCdWZmZXIgY29uc3QqKTsKCnN0YXRpYyBpbmxpbmUgdm9pZApidWZmZXJfcmVzZXQoTWlubmV0QnVmZmVyKiBidWYpIHsKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0OwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0Owp9CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJ1ZmZlcl9ncm93KE1pbm5ldEJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gYmxvY2tfZ3JvdygmYnVmLT5ibG9jaywgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBCT09MCmJ1ZmZlcl9jbG9uZShNaW5uZXRCdWZmZXIqIGJ1ZiwgY29uc3QgTWlubmV0QnVmZmVyKiBvdGhlciwgSlNDb250ZXh0KiBjdHgpIHsKICBpZighYnVmZmVyX2FsbG9jKGJ1ZiwgYmxvY2tfU0laRShvdGhlciksIGN0eCkpCiAgICByZXR1cm4gRkFMU0U7CiAgbWVtY3B5KGJ1Zi0+c3RhcnQsIG90aGVyLT5zdGFydCwgYnVmZmVyX0hFQUQob3RoZXIpKTsKCiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9UQUlMKG90aGVyKTsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9IRUFEKG90aGVyKTsKICByZXR1cm4gVFJVRTsKfQoKc3RhdGljIGlubGluZSB1aW50OF90KgpidWZmZXJfc2tpcChNaW5uZXRCdWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUpIHsKICBhc3NlcnQoYnVmLT5yZWFkICsgc2l6ZSA8PSBidWYtPndyaXRlKTsKICBidWYtPnJlYWQgKz0gc2l6ZTsKICByZXR1cm4gYnVmLT5yZWFkOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKYnVmZmVyX3B1dGNoYXIoTWlubmV0QnVmZmVyKiBidWYsIGNoYXIgYykgewogIGlmKGJ1Zi0+d3JpdGUgKyAxIDw9IGJ1Zi0+ZW5kKSB7CiAgICAqYnVmLT53cml0ZSA9ICh1aW50OF90KWM7CiAgICBidWYtPndyaXRlKys7CiAgICByZXR1cm4gVFJVRTsKICB9CiAgcmV0dXJuIEZBTFNFOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldEJ1ZmZlcgpidWZmZXJfbW92ZShNaW5uZXRCdWZmZXIqIGJ1ZikgewogIE1pbm5ldEJ1ZmZlciByZXQgPSAqYnVmOwogIG1lbXNldChidWYsIDAsIHNpemVvZihNaW5uZXRCdWZmZXIpKTsKICByZXR1cm4gcmV0Owp9CgojZW5kaWYgLyogTUlOTkVUX0JVRkZFUl9IICovCgAAAAAAAAAAzw8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AQAAAAAAADoBAAAAAAAAAAAAAAAAAAA"
				],
				[
					2137,
					4,
					"right_delete",
					null,
					"BAAAALIEAAAAAAAAsgQAAAAAAAABAAAACrIEAAAAAAAAsgQAAAAAAAABAAAAILIEAAAAAAAAsgQAAAAAAAABAAAAILIEAAAAAAAAsgQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAsgQAAAAAAACyBAAAAAAAAP///////+9/"
				],
				[
					2139,
					1,
					"right_delete",
					null,
					"AgAAAN8EAAAAAAAA3wQAAAAAAAABAAAACt8EAAAAAAAA3wQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA3wQAAAAAAADfBAAAAAAAAP///////+9/"
				],
				[
					2183,
					1,
					"insert",
					{
						"characters": "(void*)"
					},
					"BwAAAL8BAAAAAAAAwAEAAAAAAAAAAAAAwAEAAAAAAADBAQAAAAAAAAAAAADBAQAAAAAAAMIBAAAAAAAAAAAAAMIBAAAAAAAAwwEAAAAAAAAAAAAAwwEAAAAAAADEAQAAAAAAAAAAAADEAQAAAAAAAMUBAAAAAAAAAAAAAMUBAAAAAAAAxgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwEAAAAAAAC/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					2190,
					1,
					"cut",
					null,
					"AQAAAL8BAAAAAAAAvwEAAAAAAAAHAAAAKHZvaWQqKQ",
					"AQAAAAAAAAABAAAAxgEAAAAAAAC/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					2191,
					1,
					"paste",
					null,
					"AQAAAL8BAAAAAAAAxgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwEAAAAAAAC/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					2196,
					1,
					"insert",
					{
						"characters": "(size_t)"
					},
					"CAAAAEIBAAAAAAAAQwEAAAAAAAAAAAAAQwEAAAAAAABEAQAAAAAAAAAAAABEAQAAAAAAAEUBAAAAAAAAAAAAAEUBAAAAAAAARgEAAAAAAAAAAAAARgEAAAAAAABHAQAAAAAAAAAAAABHAQAAAAAAAEgBAAAAAAAAAAAAAEgBAAAAAAAASQEAAAAAAAAAAAAASQEAAAAAAABKAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgEAAAAAAABCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2237,
					1,
					"paste",
					null,
					"AQAAAA0HAAAAAAAAFQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQcAAAAAAAANBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2240,
					1,
					"paste",
					null,
					"AQAAAEYHAAAAAAAATgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgcAAAAAAABGBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2247,
					1,
					"insert",
					{
						"characters": "/("
					},
					"AgAAAH8HAAAAAAAAgAcAAAAAAAAAAAAAgAcAAAAAAACBBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwcAAAAAAAB/BwAAAAAAAAAAAAAAAPC/"
				],
				[
					2248,
					2,
					"left_delete",
					null,
					"AgAAAIAHAAAAAAAAgAcAAAAAAAABAAAAKH8HAAAAAAAAfwcAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAgQcAAAAAAACBBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2249,
					1,
					"insert",
					{
						"characters": "(void*)"
					},
					"BwAAAH8HAAAAAAAAgAcAAAAAAAAAAAAAgAcAAAAAAACBBwAAAAAAAAAAAACBBwAAAAAAAIIHAAAAAAAAAAAAAIIHAAAAAAAAgwcAAAAAAAAAAAAAgwcAAAAAAACEBwAAAAAAAAAAAACEBwAAAAAAAIUHAAAAAAAAAAAAAIUHAAAAAAAAhgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwcAAAAAAAB/BwAAAAAAAAAAAAAAAPC/"
				],
				[
					2256,
					1,
					"cut",
					null,
					"AQAAAH8HAAAAAAAAfwcAAAAAAAAHAAAAKHZvaWQqKQ",
					"AQAAAAAAAAABAAAAhgcAAAAAAAB/BwAAAAAAAAAAAAAAAPC/"
				],
				[
					2257,
					1,
					"paste",
					null,
					"AQAAAH8HAAAAAAAAhgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwcAAAAAAAB/BwAAAAAAAAAAAAAAAPC/"
				],
				[
					2272,
					1,
					"paste",
					null,
					"AQAAAN0GAAAAAAAA5QYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QYAAAAAAADdBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2275,
					1,
					"insert",
					{
						"characters": "ptrdiff"
					},
					"CAAAAN4GAAAAAAAA3wYAAAAAAAAAAAAA3wYAAAAAAADfBgAAAAAAAAQAAABzaXpl3wYAAAAAAADgBgAAAAAAAAAAAADgBgAAAAAAAOEGAAAAAAAAAAAAAOEGAAAAAAAA4gYAAAAAAAAAAAAA4gYAAAAAAADjBgAAAAAAAAAAAADjBgAAAAAAAOQGAAAAAAAAAAAAAOQGAAAAAAAA5QYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gYAAAAAAADiBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2278,
					1,
					"cut",
					null,
					"AQAAAN0GAAAAAAAA3QYAAAAAAAALAAAAKHB0cmRpZmZfdCk",
					"AQAAAAAAAAABAAAA3QYAAAAAAADoBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2279,
					1,
					"paste",
					null,
					"AQAAAN0GAAAAAAAA6AYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QYAAAAAAADdBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2284,
					1,
					"paste",
					null,
					"AQAAAK0GAAAAAAAAuAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQYAAAAAAACtBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2347,
					1,
					"cut",
					null,
					"AQAAAKsFAAAAAAAAqwUAAAAAAAAnAAAALCAoKHVpbnQ4X3QqKShidWYpKSArIHNpemVvZigoYnVmKSkgLSAx",
					"AQAAAAAAAAABAAAAqwUAAAAAAADSBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2351,
					1,
					"paste",
					null,
					"AQAAAHMFAAAAAAAAmgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwUAAAAAAABzBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2354,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJoFAAAAAAAAmwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgUAAAAAAACaBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2355,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJsFAAAAAAAAnAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwUAAAAAAACbBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2365,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAHMFAAAAAAAAdAUAAAAAAAAAAAAAdAUAAAAAAAB0BQAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAAcwUAAAAAAAB0BQAAAAAAAAAAAAAAAPC/"
				],
				[
					2405,
					1,
					"cut",
					null,
					"AQAAAHkGAAAAAAAAeQYAAAAAAAAXAAAALCAoKHVpbnQ4X3QqKShidWYpKSArIG4",
					"AQAAAAAAAAABAAAAeQYAAAAAAACQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2410,
					1,
					"paste",
					null,
					"AQAAAFMGAAAAAAAAagYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwYAAAAAAABTBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2421,
					1,
					"left_delete",
					null,
					"AQAAAEIGAAAAAAAAQgYAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAQwYAAAAAAABDBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2424,
					1,
					"left_delete",
					null,
					"AQAAAFEGAAAAAAAAUQYAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAUgYAAAAAAABSBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2427,
					1,
					"left_delete",
					null,
					"AQAAAFMGAAAAAAAAUwYAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAVAYAAAAAAABUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2430,
					1,
					"left_delete",
					null,
					"AQAAAGIGAAAAAAAAYgYAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAYwYAAAAAAABjBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2433,
					1,
					"left_delete",
					null,
					"AQAAAGgGAAAAAAAAaAYAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAaQYAAAAAAABpBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2436,
					1,
					"left_delete",
					null,
					"AQAAAHcGAAAAAAAAdwYAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAeAYAAAAAAAB4BgAAAAAAAAAAAAAAAPC/"
				],
				[
					2439,
					1,
					"left_delete",
					null,
					"AQAAAHoGAAAAAAAAegYAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAewYAAAAAAAB7BgAAAAAAAAAAAAAAAPC/"
				],
				[
					2444,
					1,
					"left_delete",
					null,
					"AQAAAIgGAAAAAAAAiAYAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAiQYAAAAAAACJBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2447,
					1,
					"left_delete",
					null,
					"AQAAAFcFAAAAAAAAVwUAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAWAUAAAAAAABYBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2452,
					1,
					"left_delete",
					null,
					"AQAAAGUFAAAAAAAAZQUAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAZgUAAAAAAABmBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2455,
					1,
					"left_delete",
					null,
					"AQAAAHQFAAAAAAAAdAUAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAdQUAAAAAAAB1BQAAAAAAAAAAAAAAAPC/"
				],
				[
					2458,
					1,
					"left_delete",
					null,
					"AQAAAIIFAAAAAAAAggUAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAgwUAAAAAAACDBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2461,
					1,
					"left_delete",
					null,
					"AQAAAIwFAAAAAAAAjAUAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAjQUAAAAAAACNBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2466,
					1,
					"left_delete",
					null,
					"AQAAAI8FAAAAAAAAjwUAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAkAUAAAAAAACQBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2469,
					1,
					"left_delete",
					null,
					"AQAAAJYFAAAAAAAAlgUAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAlwUAAAAAAACXBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2474,
					1,
					"left_delete",
					null,
					"AQAAAKUFAAAAAAAApQUAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAApgUAAAAAAACmBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2480,
					1,
					"left_delete",
					null,
					"AQAAALEFAAAAAAAAsQUAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAsgUAAAAAAACyBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2483,
					1,
					"left_delete",
					null,
					"AQAAAMAFAAAAAAAAwAUAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAwQUAAAAAAADBBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2501,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAFsGAAAAAAAAXAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwYAAAAAAABbBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2503,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAF0GAAAAAAAAXgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQYAAAAAAABdBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2510,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD3DwAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGludHR5cGVzLmg+CiNpbmNsdWRlIDxzdGRpby5oPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxzdGRhcmcuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4KCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgewogIHVpbnQ4X3QgKnN0YXJ0LCAqZW5kOwp9IE1pbm5ldEJ5dGVzOwoKI2RlZmluZSBibG9ja19TSVpFKGIpIChzaXplX3QpKChiKS0+ZW5kIC0gKGIpLT5zdGFydCkKI2RlZmluZSBibG9ja19CRUdJTihiKSAodm9pZCopKGIpLT5zdGFydAojZGVmaW5lIGJsb2NrX0VORChiKSAodm9pZCopKGIpLT5lbmQKI2RlZmluZSBibG9ja19BTExPQyhiKSAodm9pZCopKChiKS0+c3RhcnQgPyAoYiktPnN0YXJ0IC0gTFdTX1BSRSA6IDApCgp2b2lkIGJsb2NrX2luaXQoTWlubmV0Qnl0ZXMqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYmxvY2tfYWxsb2MoTWlubmV0Qnl0ZXMqLCBzaXplX3QsIEpTQ29udGV4dCopOwp1aW50OF90KiBibG9ja19yZWFsbG9jKE1pbm5ldEJ5dGVzKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKdm9pZCBibG9ja19mcmVlKE1pbm5ldEJ5dGVzKiwgSlNSdW50aW1lKik7CmludCBibG9ja19mcm9tYXJyYXlidWZmZXIoTWlubmV0Qnl0ZXMqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b2FycmF5YnVmZmVyKE1pbm5ldEJ5dGVzKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYmxvY2tfdG9zdHJpbmcoTWlubmV0Qnl0ZXMgY29uc3QqLCBKU0NvbnRleHQqKTsKCnN0YXRpYyBpbmxpbmUgdWludDhfdCoKYmxvY2tfZ3JvdyhNaW5uZXRCeXRlcyogYmxrLCBzaXplX3Qgc2l6ZSwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gYmxvY2tfcmVhbGxvYyhibGssIGJsb2NrX1NJWkUoYmxrKSArIHNpemUsIGN0eCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0Qnl0ZXMKYmxvY2tfbW92ZShNaW5uZXRCeXRlcyogYmxrKSB7CiAgTWlubmV0Qnl0ZXMgcmV0ID0ge2Jsay0+c3RhcnQsIGJsay0+ZW5kfTsKICBibGstPnN0YXJ0ID0gMDsKICBibGstPmVuZCA9IDA7CiAgcmV0dXJuIHJldDsKfQoKdHlwZWRlZiB1bmlvbiBieXRlX2J1ZmZlciB7CiAgc3RydWN0IHsgdWludDhfdCAqc3RhcnQsICplbmQsICpyZWFkLCAqd3JpdGUsICphbGxvYzsgfTsKICBzdHJ1Y3QgYnl0ZV9ibG9jazsKICBNaW5uZXRCeXRlcyBibG9jazsKfSBNaW5uZXRCdWZmZXI7CgojZGVmaW5lIEJVRkZFUihidWYpIFwKICAoTWlubmV0QnVmZmVyKSB7ICh1aW50OF90KikoYnVmKSArIExXU19QUkUsICAgKHVpbnQ4X3QqKShidWYpICsgc2l6ZW9mKGJ1ZikgLSAxLCAodWludDhfdCopKGJ1ZikgKyBMV1NfUFJFLCAodWludDhfdCopKGJ1ZikgKyBMV1NfUFJFLCAwIH0KCiNkZWZpbmUgQlVGRkVSXzAoKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyAwLCAwLCAwLCAwLCAwIH0KCiNkZWZpbmUgQlVGRkVSX04oYnVmLCBuKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyAodWludDhfdCopKGJ1ZiksICh1aW50OF90KikoYnVmKSArIChuKSwgKHVpbnQ4X3QqKShidWYpLCAodWludDhfdCopKGJ1ZiksIDAgfQoKI2RlZmluZSBidWZmZXJfQVZBSUwoYikgKHB0cmRpZmZfdCkoKGIpLT5lbmQgLSAoYiktPndyaXRlKQojZGVmaW5lIGJ1ZmZlcl9CWVRFUyhiKSAocHRyZGlmZl90KSgoYiktPndyaXRlIC0gKGIpLT5yZWFkKQojZGVmaW5lIGJ1ZmZlcl9IRUFEKGIpIChzaXplX3QpKChiKS0+d3JpdGUgLSAoYiktPnN0YXJ0KQojZGVmaW5lIGJ1ZmZlcl9UQUlMKGIpIChzaXplX3QpKChiKS0+cmVhZCAtIChiKS0+c3RhcnQpCiNkZWZpbmUgYnVmZmVyX0FMTE9DKGIpICh2b2lkKikoKGIpLT5hbGxvYykKCiNkZWZpbmUgYnVmZmVyX0JFR0lOKGIpIGJsb2NrX0JFR0lOKCYoYiktPmJsb2NrKQojZGVmaW5lIGJ1ZmZlcl9FTkQoYikgYmxvY2tfRU5EKCYoYiktPmJsb2NrKQojZGVmaW5lIGJ1ZmZlcl9TSVpFKGIpIGJsb2NrX1NJWkUoJihiKS0+YmxvY2spCgojZGVmaW5lIGJ1ZmZlcl96ZXJvKGIpIG1lbXNldCgoYiksIDAsIHNpemVvZihNaW5uZXRCdWZmZXIpKQoKdm9pZCBidWZmZXJfaW5pdChNaW5uZXRCdWZmZXIqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYnVmZmVyX2FsbG9jKE1pbm5ldEJ1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CnNzaXplX3QgYnVmZmVyX2FwcGVuZChNaW5uZXRCdWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgYnVmZmVyX2ZyZWUoTWlubmV0QnVmZmVyKiwgSlNSdW50aW1lKik7CkJPT0wgYnVmZmVyX3dyaXRlKE1pbm5ldEJ1ZmZlciosIGNvbnN0IGNoYXIqLCBzaXplX3QpOwppbnQgYnVmZmVyX3ZwcmludGYoTWlubmV0QnVmZmVyKiwgY29uc3QgY2hhciosIHZhX2xpc3QpOwppbnQgYnVmZmVyX3ByaW50ZihNaW5uZXRCdWZmZXIqLCBjb25zdCBjaGFyKiwgLi4uKTsKdWludDhfdCogYnVmZmVyX3JlYWxsb2MoTWlubmV0QnVmZmVyKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKaW50IGJ1ZmZlcl9mcm9tYXJyYXlidWZmZXIoTWlubmV0QnVmZmVyKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbXZhbHVlKE1pbm5ldEJ1ZmZlciosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJ1ZmZlcl90b3N0cmluZyhNaW5uZXRCdWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKY2hhciogYnVmZmVyX2VzY2FwZWQoTWlubmV0QnVmZmVyIGNvbnN0KiwgSlNDb250ZXh0Kik7CnZvaWQgYnVmZmVyX2ZpbmFsaXplcihKU1J1bnRpbWUqLCB2b2lkKiwgdm9pZCopOwpKU1ZhbHVlIGJ1ZmZlcl90b2FycmF5YnVmZmVyKE1pbm5ldEJ1ZmZlciosIEpTQ29udGV4dCopOwp2b2lkIGJ1ZmZlcl9kdW1wKGNvbnN0IGNoYXIqLCBNaW5uZXRCdWZmZXIgY29uc3QqKTsKCnN0YXRpYyBpbmxpbmUgdm9pZApidWZmZXJfcmVzZXQoTWlubmV0QnVmZmVyKiBidWYpIHsKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0OwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0Owp9CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJ1ZmZlcl9ncm93KE1pbm5ldEJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gYmxvY2tfZ3JvdygmYnVmLT5ibG9jaywgc2l6ZSwgY3R4KTsKfQoKc3RhdGljIGlubGluZSBCT09MCmJ1ZmZlcl9jbG9uZShNaW5uZXRCdWZmZXIqIGJ1ZiwgY29uc3QgTWlubmV0QnVmZmVyKiBvdGhlciwgSlNDb250ZXh0KiBjdHgpIHsKICBpZighYnVmZmVyX2FsbG9jKGJ1ZiwgYmxvY2tfU0laRShvdGhlciksIGN0eCkpCiAgICByZXR1cm4gRkFMU0U7CiAgbWVtY3B5KGJ1Zi0+c3RhcnQsIG90aGVyLT5zdGFydCwgYnVmZmVyX0hFQUQob3RoZXIpKTsKCiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9UQUlMKG90aGVyKTsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9IRUFEKG90aGVyKTsKICByZXR1cm4gVFJVRTsKfQoKc3RhdGljIGlubGluZSB1aW50OF90KgpidWZmZXJfc2tpcChNaW5uZXRCdWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUpIHsKICBhc3NlcnQoYnVmLT5yZWFkICsgc2l6ZSA8PSBidWYtPndyaXRlKTsKICBidWYtPnJlYWQgKz0gc2l6ZTsKICByZXR1cm4gYnVmLT5yZWFkOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKYnVmZmVyX3B1dGNoYXIoTWlubmV0QnVmZmVyKiBidWYsIGNoYXIgYykgewogIGlmKGJ1Zi0+d3JpdGUgKyAxIDw9IGJ1Zi0+ZW5kKSB7CiAgICAqYnVmLT53cml0ZSA9ICh1aW50OF90KWM7CiAgICBidWYtPndyaXRlKys7CiAgICByZXR1cm4gVFJVRTsKICB9CiAgcmV0dXJuIEZBTFNFOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldEJ1ZmZlcgpidWZmZXJfbW92ZShNaW5uZXRCdWZmZXIqIGJ1ZikgewogIE1pbm5ldEJ1ZmZlciByZXQgPSAqYnVmOwogIG1lbXNldChidWYsIDAsIHNpemVvZihNaW5uZXRCdWZmZXIpKTsKICByZXR1cm4gcmV0Owp9CgojZW5kaWYgLyogTUlOTkVUX0JVRkZFUl9IICovCgAAAAAAAAAA+w8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQYAAAAAAAAJBgAAAAAAAAAAAAAAAAAA"
				],
				[
					2523,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD7DwAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGludHR5cGVzLmg+CiNpbmNsdWRlIDxzdGRpby5oPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxzdGRhcmcuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4KCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgewogIHVpbnQ4X3QgKnN0YXJ0LCAqZW5kOwp9IE1pbm5ldEJ5dGVzOwoKI2RlZmluZSBibG9ja19TSVpFKGIpIChzaXplX3QpKChiKS0+ZW5kIC0gKGIpLT5zdGFydCkKI2RlZmluZSBibG9ja19CRUdJTihiKSAodm9pZCopKGIpLT5zdGFydAojZGVmaW5lIGJsb2NrX0VORChiKSAodm9pZCopKGIpLT5lbmQKI2RlZmluZSBibG9ja19BTExPQyhiKSAodm9pZCopKChiKS0+c3RhcnQgPyAoYiktPnN0YXJ0IC0gTFdTX1BSRSA6IDApCgp2b2lkIGJsb2NrX2luaXQoTWlubmV0Qnl0ZXMqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYmxvY2tfYWxsb2MoTWlubmV0Qnl0ZXMqLCBzaXplX3QsIEpTQ29udGV4dCopOwp1aW50OF90KiBibG9ja19yZWFsbG9jKE1pbm5ldEJ5dGVzKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKdm9pZCBibG9ja19mcmVlKE1pbm5ldEJ5dGVzKiwgSlNSdW50aW1lKik7CmludCBibG9ja19mcm9tYXJyYXlidWZmZXIoTWlubmV0Qnl0ZXMqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b2FycmF5YnVmZmVyKE1pbm5ldEJ5dGVzKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYmxvY2tfdG9zdHJpbmcoTWlubmV0Qnl0ZXMgY29uc3QqLCBKU0NvbnRleHQqKTsKCnN0YXRpYyBpbmxpbmUgdWludDhfdCoKYmxvY2tfZ3JvdyhNaW5uZXRCeXRlcyogYmxrLCBzaXplX3Qgc2l6ZSwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gYmxvY2tfcmVhbGxvYyhibGssIGJsb2NrX1NJWkUoYmxrKSArIHNpemUsIGN0eCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0Qnl0ZXMKYmxvY2tfbW92ZShNaW5uZXRCeXRlcyogYmxrKSB7CiAgTWlubmV0Qnl0ZXMgcmV0ID0ge2Jsay0+c3RhcnQsIGJsay0+ZW5kfTsKICBibGstPnN0YXJ0ID0gMDsKICBibGstPmVuZCA9IDA7CiAgcmV0dXJuIHJldDsKfQoKdHlwZWRlZiB1bmlvbiBieXRlX2J1ZmZlciB7CiAgc3RydWN0IHsKICAgIHVpbnQ4X3QgKnN0YXJ0LCAqZW5kLCAqcmVhZCwgKndyaXRlLCAqYWxsb2M7CiAgfTsKICBzdHJ1Y3QgYnl0ZV9ibG9jazsKICBNaW5uZXRCeXRlcyBibG9jazsKfSBNaW5uZXRCdWZmZXI7CgojZGVmaW5lIEJVRkZFUihidWYpIFwKICAoTWlubmV0QnVmZmVyKSB7ICh1aW50OF90KikoYnVmKSArIExXU19QUkUsICh1aW50OF90KikoYnVmKSArIHNpemVvZihidWYpIC0gMSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgMCB9CgojZGVmaW5lIEJVRkZFUl8wKCkgXAogIChNaW5uZXRCdWZmZXIpIHsgMCwgMCwgMCwgMCwgMCB9CgojZGVmaW5lIEJVRkZFUl9OKGJ1ZiwgbikgXAogIChNaW5uZXRCdWZmZXIpIHsgKHVpbnQ4X3QqKShidWYpLCAodWludDhfdCopKGJ1ZikgKyAobiksICh1aW50OF90KikoYnVmKSwgKHVpbnQ4X3QqKShidWYpLCAwIH0KCiNkZWZpbmUgYnVmZmVyX0FWQUlMKGIpIChwdHJkaWZmX3QpKChiKS0+ZW5kIC0gKGIpLT53cml0ZSkKI2RlZmluZSBidWZmZXJfQllURVMoYikgKHB0cmRpZmZfdCkoKGIpLT53cml0ZSAtIChiKS0+cmVhZCkKI2RlZmluZSBidWZmZXJfSEVBRChiKSAoc2l6ZV90KSgoYiktPndyaXRlIC0gKGIpLT5zdGFydCkKI2RlZmluZSBidWZmZXJfVEFJTChiKSAoc2l6ZV90KSgoYiktPnJlYWQgLSAoYiktPnN0YXJ0KQojZGVmaW5lIGJ1ZmZlcl9BTExPQyhiKSAodm9pZCopKChiKS0+YWxsb2MpCgojZGVmaW5lIGJ1ZmZlcl9CRUdJTihiKSBibG9ja19CRUdJTigmKGIpLT5ibG9jaykKI2RlZmluZSBidWZmZXJfRU5EKGIpIGJsb2NrX0VORCgmKGIpLT5ibG9jaykKI2RlZmluZSBidWZmZXJfU0laRShiKSBibG9ja19TSVpFKCYoYiktPmJsb2NrKQoKI2RlZmluZSBidWZmZXJfemVybyhiKSBtZW1zZXQoKGIpLCAwLCBzaXplb2YoTWlubmV0QnVmZmVyKSkKCnZvaWQgYnVmZmVyX2luaXQoTWlubmV0QnVmZmVyKiwgdWludDhfdCosIHNpemVfdCk7CnVpbnQ4X3QqIGJ1ZmZlcl9hbGxvYyhNaW5uZXRCdWZmZXIqLCBzaXplX3QsIEpTQ29udGV4dCopOwpzc2l6ZV90IGJ1ZmZlcl9hcHBlbmQoTWlubmV0QnVmZmVyKiwgY29uc3Qgdm9pZCosIHNpemVfdCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIGJ1ZmZlcl9mcmVlKE1pbm5ldEJ1ZmZlciosIEpTUnVudGltZSopOwpCT09MIGJ1ZmZlcl93cml0ZShNaW5uZXRCdWZmZXIqLCBjb25zdCBjaGFyKiwgc2l6ZV90KTsKaW50IGJ1ZmZlcl92cHJpbnRmKE1pbm5ldEJ1ZmZlciosIGNvbnN0IGNoYXIqLCB2YV9saXN0KTsKaW50IGJ1ZmZlcl9wcmludGYoTWlubmV0QnVmZmVyKiwgY29uc3QgY2hhciosIC4uLik7CnVpbnQ4X3QqIGJ1ZmZlcl9yZWFsbG9jKE1pbm5ldEJ1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbWFycmF5YnVmZmVyKE1pbm5ldEJ1ZmZlciosIEpTVmFsdWUsIEpTQ29udGV4dCopOwppbnQgYnVmZmVyX2Zyb212YWx1ZShNaW5uZXRCdWZmZXIqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBidWZmZXJfdG9zdHJpbmcoTWlubmV0QnVmZmVyIGNvbnN0KiwgSlNDb250ZXh0Kik7CmNoYXIqIGJ1ZmZlcl9lc2NhcGVkKE1pbm5ldEJ1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwp2b2lkIGJ1ZmZlcl9maW5hbGl6ZXIoSlNSdW50aW1lKiwgdm9pZCosIHZvaWQqKTsKSlNWYWx1ZSBidWZmZXJfdG9hcnJheWJ1ZmZlcihNaW5uZXRCdWZmZXIqLCBKU0NvbnRleHQqKTsKdm9pZCBidWZmZXJfZHVtcChjb25zdCBjaGFyKiwgTWlubmV0QnVmZmVyIGNvbnN0Kik7CgpzdGF0aWMgaW5saW5lIHZvaWQKYnVmZmVyX3Jlc2V0KE1pbm5ldEJ1ZmZlciogYnVmKSB7CiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydDsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydDsKfQoKc3RhdGljIGlubGluZSB1aW50OF90KgpidWZmZXJfZ3JvdyhNaW5uZXRCdWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIGJsb2NrX2dyb3coJmJ1Zi0+YmxvY2ssIHNpemUsIGN0eCk7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTApidWZmZXJfY2xvbmUoTWlubmV0QnVmZmVyKiBidWYsIGNvbnN0IE1pbm5ldEJ1ZmZlciogb3RoZXIsIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoIWJ1ZmZlcl9hbGxvYyhidWYsIGJsb2NrX1NJWkUob3RoZXIpLCBjdHgpKQogICAgcmV0dXJuIEZBTFNFOwogIG1lbWNweShidWYtPnN0YXJ0LCBvdGhlci0+c3RhcnQsIGJ1ZmZlcl9IRUFEKG90aGVyKSk7CgogIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQgKyBidWZmZXJfVEFJTChvdGhlcik7CiAgYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQgKyBidWZmZXJfSEVBRChvdGhlcik7CiAgcmV0dXJuIFRSVUU7Cn0KCnN0YXRpYyBpbmxpbmUgdWludDhfdCoKYnVmZmVyX3NraXAoTWlubmV0QnVmZmVyKiBidWYsIHNpemVfdCBzaXplKSB7CiAgYXNzZXJ0KGJ1Zi0+cmVhZCArIHNpemUgPD0gYnVmLT53cml0ZSk7CiAgYnVmLT5yZWFkICs9IHNpemU7CiAgcmV0dXJuIGJ1Zi0+cmVhZDsKfQoKc3RhdGljIGlubGluZSBCT09MCmJ1ZmZlcl9wdXRjaGFyKE1pbm5ldEJ1ZmZlciogYnVmLCBjaGFyIGMpIHsKICBpZihidWYtPndyaXRlICsgMSA8PSBidWYtPmVuZCkgewogICAgKmJ1Zi0+d3JpdGUgPSAodWludDhfdCljOwogICAgYnVmLT53cml0ZSsrOwogICAgcmV0dXJuIFRSVUU7CiAgfQogIHJldHVybiBGQUxTRTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRCdWZmZXIKYnVmZmVyX21vdmUoTWlubmV0QnVmZmVyKiBidWYpIHsKICBNaW5uZXRCdWZmZXIgcmV0ID0gKmJ1ZjsKICBtZW1zZXQoYnVmLCAwLCBzaXplb2YoTWlubmV0QnVmZmVyKSk7CiAgcmV0dXJuIHJldDsKfQoKI2VuZGlmIC8qIE1JTk5FVF9CVUZGRVJfSCAqLwoAAAAAAAAAAPsPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQsAAAAAAACFCwAAAAAAAAAAAAAAAAAA"
				],
				[
					2524,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD7DwAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGludHR5cGVzLmg+CiNpbmNsdWRlIDxzdGRpby5oPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxzdGRhcmcuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4KCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgewogIHVpbnQ4X3QgKnN0YXJ0LCAqZW5kOwp9IE1pbm5ldEJ5dGVzOwoKI2RlZmluZSBibG9ja19TSVpFKGIpIChzaXplX3QpKChiKS0+ZW5kIC0gKGIpLT5zdGFydCkKI2RlZmluZSBibG9ja19CRUdJTihiKSAodm9pZCopKGIpLT5zdGFydAojZGVmaW5lIGJsb2NrX0VORChiKSAodm9pZCopKGIpLT5lbmQKI2RlZmluZSBibG9ja19BTExPQyhiKSAodm9pZCopKChiKS0+c3RhcnQgPyAoYiktPnN0YXJ0IC0gTFdTX1BSRSA6IDApCgp2b2lkIGJsb2NrX2luaXQoTWlubmV0Qnl0ZXMqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYmxvY2tfYWxsb2MoTWlubmV0Qnl0ZXMqLCBzaXplX3QsIEpTQ29udGV4dCopOwp1aW50OF90KiBibG9ja19yZWFsbG9jKE1pbm5ldEJ5dGVzKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKdm9pZCBibG9ja19mcmVlKE1pbm5ldEJ5dGVzKiwgSlNSdW50aW1lKik7CmludCBibG9ja19mcm9tYXJyYXlidWZmZXIoTWlubmV0Qnl0ZXMqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b2FycmF5YnVmZmVyKE1pbm5ldEJ5dGVzKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYmxvY2tfdG9zdHJpbmcoTWlubmV0Qnl0ZXMgY29uc3QqLCBKU0NvbnRleHQqKTsKCnN0YXRpYyBpbmxpbmUgdWludDhfdCoKYmxvY2tfZ3JvdyhNaW5uZXRCeXRlcyogYmxrLCBzaXplX3Qgc2l6ZSwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gYmxvY2tfcmVhbGxvYyhibGssIGJsb2NrX1NJWkUoYmxrKSArIHNpemUsIGN0eCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0Qnl0ZXMKYmxvY2tfbW92ZShNaW5uZXRCeXRlcyogYmxrKSB7CiAgTWlubmV0Qnl0ZXMgcmV0ID0ge2Jsay0+c3RhcnQsIGJsay0+ZW5kfTsKICBibGstPnN0YXJ0ID0gMDsKICBibGstPmVuZCA9IDA7CiAgcmV0dXJuIHJldDsKfQoKdHlwZWRlZiB1bmlvbiBieXRlX2J1ZmZlciB7CiAgc3RydWN0IHsKICAgIHVpbnQ4X3QgKnN0YXJ0LCAqZW5kLCAqcmVhZCwgKndyaXRlLCAqYWxsb2M7CiAgfTsKICBzdHJ1Y3QgYnl0ZV9ibG9jazsKICBNaW5uZXRCeXRlcyBibG9jazsKfSBNaW5uZXRCdWZmZXI7CgojZGVmaW5lIEJVRkZFUihidWYpIFwKICAoTWlubmV0QnVmZmVyKSB7ICh1aW50OF90KikoYnVmKSArIExXU19QUkUsICh1aW50OF90KikoYnVmKSArIHNpemVvZihidWYpIC0gMSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgMCB9CgojZGVmaW5lIEJVRkZFUl8wKCkgXAogIChNaW5uZXRCdWZmZXIpIHsgMCwgMCwgMCwgMCwgMCB9CgojZGVmaW5lIEJVRkZFUl9OKGJ1ZiwgbikgXAogIChNaW5uZXRCdWZmZXIpIHsgKHVpbnQ4X3QqKShidWYpLCAodWludDhfdCopKGJ1ZikgKyAobiksICh1aW50OF90KikoYnVmKSwgKHVpbnQ4X3QqKShidWYpLCAwIH0KCiNkZWZpbmUgYnVmZmVyX0FWQUlMKGIpIChwdHJkaWZmX3QpKChiKS0+ZW5kIC0gKGIpLT53cml0ZSkKI2RlZmluZSBidWZmZXJfQllURVMoYikgKHB0cmRpZmZfdCkoKGIpLT53cml0ZSAtIChiKS0+cmVhZCkKI2RlZmluZSBidWZmZXJfSEVBRChiKSAoc2l6ZV90KSgoYiktPndyaXRlIC0gKGIpLT5zdGFydCkKI2RlZmluZSBidWZmZXJfVEFJTChiKSAoc2l6ZV90KSgoYiktPnJlYWQgLSAoYiktPnN0YXJ0KQojZGVmaW5lIGJ1ZmZlcl9BTExPQyhiKSAodm9pZCopKChiKS0+YWxsb2MpCgojZGVmaW5lIGJ1ZmZlcl9CRUdJTihiKSBibG9ja19CRUdJTigmKGIpLT5ibG9jaykKI2RlZmluZSBidWZmZXJfRU5EKGIpIGJsb2NrX0VORCgmKGIpLT5ibG9jaykKI2RlZmluZSBidWZmZXJfU0laRShiKSBibG9ja19TSVpFKCYoYiktPmJsb2NrKQoKI2RlZmluZSBidWZmZXJfemVybyhiKSBtZW1zZXQoKGIpLCAwLCBzaXplb2YoTWlubmV0QnVmZmVyKSkKCnZvaWQgYnVmZmVyX2luaXQoTWlubmV0QnVmZmVyKiwgdWludDhfdCosIHNpemVfdCk7CnVpbnQ4X3QqIGJ1ZmZlcl9hbGxvYyhNaW5uZXRCdWZmZXIqLCBzaXplX3QsIEpTQ29udGV4dCopOwpzc2l6ZV90IGJ1ZmZlcl9hcHBlbmQoTWlubmV0QnVmZmVyKiwgY29uc3Qgdm9pZCosIHNpemVfdCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIGJ1ZmZlcl9mcmVlKE1pbm5ldEJ1ZmZlciosIEpTUnVudGltZSopOwpCT09MIGJ1ZmZlcl93cml0ZShNaW5uZXRCdWZmZXIqLCBjb25zdCBjaGFyKiwgc2l6ZV90KTsKaW50IGJ1ZmZlcl92cHJpbnRmKE1pbm5ldEJ1ZmZlciosIGNvbnN0IGNoYXIqLCB2YV9saXN0KTsKaW50IGJ1ZmZlcl9wcmludGYoTWlubmV0QnVmZmVyKiwgY29uc3QgY2hhciosIC4uLik7CnVpbnQ4X3QqIGJ1ZmZlcl9yZWFsbG9jKE1pbm5ldEJ1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbWFycmF5YnVmZmVyKE1pbm5ldEJ1ZmZlciosIEpTVmFsdWUsIEpTQ29udGV4dCopOwppbnQgYnVmZmVyX2Zyb212YWx1ZShNaW5uZXRCdWZmZXIqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBidWZmZXJfdG9zdHJpbmcoTWlubmV0QnVmZmVyIGNvbnN0KiwgSlNDb250ZXh0Kik7CmNoYXIqIGJ1ZmZlcl9lc2NhcGVkKE1pbm5ldEJ1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwp2b2lkIGJ1ZmZlcl9maW5hbGl6ZXIoSlNSdW50aW1lKiwgdm9pZCosIHZvaWQqKTsKSlNWYWx1ZSBidWZmZXJfdG9hcnJheWJ1ZmZlcihNaW5uZXRCdWZmZXIqLCBKU0NvbnRleHQqKTsKdm9pZCBidWZmZXJfZHVtcChjb25zdCBjaGFyKiwgTWlubmV0QnVmZmVyIGNvbnN0Kik7CgpzdGF0aWMgaW5saW5lIHZvaWQKYnVmZmVyX3Jlc2V0KE1pbm5ldEJ1ZmZlciogYnVmKSB7CiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydDsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydDsKfQoKc3RhdGljIGlubGluZSB1aW50OF90KgpidWZmZXJfZ3JvdyhNaW5uZXRCdWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIGJsb2NrX2dyb3coJmJ1Zi0+YmxvY2ssIHNpemUsIGN0eCk7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTApidWZmZXJfY2xvbmUoTWlubmV0QnVmZmVyKiBidWYsIGNvbnN0IE1pbm5ldEJ1ZmZlciogb3RoZXIsIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoIWJ1ZmZlcl9hbGxvYyhidWYsIGJsb2NrX1NJWkUob3RoZXIpLCBjdHgpKQogICAgcmV0dXJuIEZBTFNFOwogIG1lbWNweShidWYtPnN0YXJ0LCBvdGhlci0+c3RhcnQsIGJ1ZmZlcl9IRUFEKG90aGVyKSk7CgogIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQgKyBidWZmZXJfVEFJTChvdGhlcik7CiAgYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQgKyBidWZmZXJfSEVBRChvdGhlcik7CiAgcmV0dXJuIFRSVUU7Cn0KCnN0YXRpYyBpbmxpbmUgdWludDhfdCoKYnVmZmVyX3NraXAoTWlubmV0QnVmZmVyKiBidWYsIHNpemVfdCBzaXplKSB7CiAgYXNzZXJ0KGJ1Zi0+cmVhZCArIHNpemUgPD0gYnVmLT53cml0ZSk7CiAgYnVmLT5yZWFkICs9IHNpemU7CiAgcmV0dXJuIGJ1Zi0+cmVhZDsKfQoKc3RhdGljIGlubGluZSBCT09MCmJ1ZmZlcl9wdXRjaGFyKE1pbm5ldEJ1ZmZlciogYnVmLCBjaGFyIGMpIHsKICBpZihidWYtPndyaXRlICsgMSA8PSBidWYtPmVuZCkgewogICAgKmJ1Zi0+d3JpdGUgPSAodWludDhfdCljOwogICAgYnVmLT53cml0ZSsrOwogICAgcmV0dXJuIFRSVUU7CiAgfQogIHJldHVybiBGQUxTRTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRCdWZmZXIKYnVmZmVyX21vdmUoTWlubmV0QnVmZmVyKiBidWYpIHsKICBNaW5uZXRCdWZmZXIgcmV0ID0gKmJ1ZjsKICBtZW1zZXQoYnVmLCAwLCBzaXplb2YoTWlubmV0QnVmZmVyKSk7CiAgcmV0dXJuIHJldDsKfQoKI2VuZGlmIC8qIE1JTk5FVF9CVUZGRVJfSCAqLwoAAAAAAAAAAPsPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQsAAAAAAACFCwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet.c",
			"settings":
			{
				"buffer_size": 20864,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3854,
					1,
					"left_delete",
					null,
					"AQAAAA4fAAAAAAAADh8AAAAAAACnAAAAICAvLyBsd3NsX3VzZXIoIm1pbm5ldF9pb19oYW5kbGVyIGZkPSVkIHdyPSVpIG1hZ2ljPTB4JXggZXZlbnRzPSVzIHJldmVudHM9JXMiLCB3c28tPnBvbGwuZmQsIHdyLCAobWFnaWMpLCBpb19ldmVudHMod3NvLT5wb2xsLmV2ZW50cyksIGlvX2V2ZW50cyh3c28tPnBvbGwucmV2ZW50cykpOwo",
					"AQAAAAAAAAABAAAADh8AAAAAAAC1HwAAAAAAAAAAAAAAAPC/"
				],
				[
					3861,
					2,
					"left_delete",
					null,
					"AgAAAJMfAAAAAAAAkx8AAAAAAACIAAAAICAgIC8vIGx3c2xfdXNlcigibWlubmV0X2lvX2hhbmRsZXIgcG9sbCgpIGZkPSVkLCBtYWdpYz0lcywgcmV2ZW50cz0lcyIsIHdzby0+cG9sbC5mZCwgaW9fZXZlbnRzKG1hZ2ljKSwgaW9fZXZlbnRzKHdzby0+cG9sbC5yZXZlbnRzKSk7CpIfAAAAAAAAkh8AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAkx8AAAAAAAAbIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3868,
					1,
					"left_delete",
					null,
					"AQAAAD0gAAAAAAAAPSAAAAAAAABfAAAAICAgICAgLy8gbHdzbF91c2VyKCJtaW5uZXRfaW9faGFuZGxlciBvcGFxdWU9JXAgZmQ9JWQgZXJybm89JWQiLCBvcGFxdWUsIHdzby0+cG9sbC5mZCwgZXJybm8pOwo",
					"AQAAAAAAAAABAAAAPSAAAAAAAACcIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3875,
					1,
					"left_delete",
					null,
					"AQAAAG4gAAAAAAAAbiAAAAAAAAC2AAAAICAgIC8vIGx3c2xfdXNlcigibWlubmV0X2lvX2hhbmRsZXIgJXMgYmVmb3JlIGx3c19zZXJ2aWNlX2ZkIGZkPSVkLCBldmVudHM9JXMsIHJldmVudHM9JXMiLCAoKGNvbnN0IGNoYXIqW10peyJSZWFkIiwgIldyaXRlIn0pW3dyXSwgeC5mZCwgaW9fZXZlbnRzKHguZXZlbnRzKSwgaW9fZXZlbnRzKHgucmV2ZW50cykpOwo",
					"AQAAAAAAAAABAAAAbiAAAAAAAAAkIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3882,
					1,
					"left_delete",
					null,
					"AQAAAJkgAAAAAAAAmSAAAAAAAACBAAAAICAgIC8vIGx3c2xfdXNlcigibWlubmV0X2lvX2hhbmRsZXIgJXMgYWZ0ZXIgIGx3c19zZXJ2aWNlX2ZkIGZkPSVkLCByZXQ9JWQiLCAoKGNvbnN0IGNoYXIqW10peyJSZWFkIiwgIldyaXRlIn0pW3dyXSwgeC5mZCwgcmV0KTsK",
					"AQAAAAAAAAABAAAAmSAAAAAAAAAaIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3894,
					1,
					"insert",
					{
						"characters": "re"
					},
					"AgAAAKEeAAAAAAAAoh4AAAAAAAAAAAAAoh4AAAAAAACjHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoR4AAAAAAAChHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3895,
					2,
					"left_delete",
					null,
					"AgAAAKIeAAAAAAAAoh4AAAAAAAABAAAAZaEeAAAAAAAAoR4AAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAox4AAAAAAACjHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3896,
					1,
					"insert",
					{
						"characters": ",ret"
					},
					"BAAAAKEeAAAAAAAAoh4AAAAAAAAAAAAAoh4AAAAAAACjHgAAAAAAAAAAAACjHgAAAAAAAKQeAAAAAAAAAAAAAKQeAAAAAAAApR4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoR4AAAAAAAChHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3899,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAHYgAAAAAAAAdyAAAAAAAAAAAAAAdyAAAAAAAAB3IAAAAAAAAAMAAABpbnQ",
					"AQAAAAAAAAABAAAAeSAAAAAAAAB2IAAAAAAAAAAAAAAAAPC/"
				],
				[
					3906,
					1,
					"insert",
					{
						"characters": "\nstruct"
					},
					"CAAAAJQeAAAAAAAAlR4AAAAAAAAAAAAAlR4AAAAAAACXHgAAAAAAAAAAAACXHgAAAAAAAJgeAAAAAAAAAAAAAJgeAAAAAAAAmR4AAAAAAAAAAAAAmR4AAAAAAACaHgAAAAAAAAAAAACaHgAAAAAAAJseAAAAAAAAAAAAAJseAAAAAAAAnB4AAAAAAAAAAAAAnB4AAAAAAACdHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlB4AAAAAAACUHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3907,
					1,
					"insert",
					{
						"characters": " pollfd*"
					},
					"CAAAAJ0eAAAAAAAAnh4AAAAAAAAAAAAAnh4AAAAAAACfHgAAAAAAAAAAAACfHgAAAAAAAKAeAAAAAAAAAAAAAKAeAAAAAAAAoR4AAAAAAAAAAAAAoR4AAAAAAACiHgAAAAAAAAAAAACiHgAAAAAAAKMeAAAAAAAAAAAAAKMeAAAAAAAApB4AAAAAAAAAAAAApB4AAAAAAAClHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnR4AAAAAAACdHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3908,
					1,
					"insert",
					{
						"characters": " pfd"
					},
					"BAAAAKUeAAAAAAAAph4AAAAAAAAAAAAAph4AAAAAAACnHgAAAAAAAAAAAACnHgAAAAAAAKgeAAAAAAAAAAAAAKgeAAAAAAAAqR4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApR4AAAAAAAClHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3909,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAKkeAAAAAAAAqh4AAAAAAAAAAAAAqh4AAAAAAACrHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqR4AAAAAAACpHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3910,
					1,
					"insert",
					{
						"characters": " wso"
					},
					"BAAAAKseAAAAAAAArB4AAAAAAAAAAAAArB4AAAAAAACtHgAAAAAAAAAAAACtHgAAAAAAAK4eAAAAAAAAAAAAAK4eAAAAAAAArx4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqx4AAAAAAACrHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3911,
					1,
					"insert",
					{
						"characters": "->poll;"
					},
					"BwAAAK8eAAAAAAAAsB4AAAAAAAAAAAAAsB4AAAAAAACxHgAAAAAAAAAAAACxHgAAAAAAALIeAAAAAAAAAAAAALIeAAAAAAAAsx4AAAAAAAAAAAAAsx4AAAAAAAC0HgAAAAAAAAAAAAC0HgAAAAAAALUeAAAAAAAAAAAAALUeAAAAAAAAth4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArx4AAAAAAACvHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3913,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAKweAAAAAAAArR4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArB4AAAAAAACsHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3919,
					1,
					"",
					null,
					"AQAAAO8eAAAAAAAA9B4AAAAAAAAKAAAAd3NvLT5wb2xsLg",
					"AQAAAAAAAAABAAAA7x4AAAAAAAD5HgAAAAAAAAAAAAAAAPC/"
				],
				[
					3920,
					1,
					"",
					null,
					"AQAAADcfAAAAAAAAPB8AAAAAAAAKAAAAd3NvLT5wb2xsLg",
					"AQAAAAAAAAABAAAANx8AAAAAAABBHwAAAAAAAAAAAAAAAPC/"
				],
				[
					3921,
					1,
					"",
					null,
					"AQAAALkfAAAAAAAAvh8AAAAAAAAKAAAAd3NvLT5wb2xsLg",
					"AQAAAAAAAAABAAAAuR8AAAAAAADDHwAAAAAAAAAAAAAAAPC/"
				],
				[
					3922,
					1,
					"",
					null,
					"AQAAAPMfAAAAAAAA+B8AAAAAAAAKAAAAd3NvLT5wb2xsLg",
					"AQAAAAAAAAABAAAA8x8AAAAAAAD9HwAAAAAAAAAAAAAAAPC/"
				],
				[
					3923,
					1,
					"",
					null,
					"AQAAAAMgAAAAAAAACCAAAAAAAAAKAAAAd3NvLT5wb2xsLg",
					"AQAAAAAAAAABAAAAAyAAAAAAAAANIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3924,
					1,
					"",
					null,
					"AQAAACAgAAAAAAAAJSAAAAAAAAAKAAAAd3NvLT5wb2xsLg",
					"AQAAAAAAAAABAAAAICAAAAAAAAAqIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3966,
					1,
					"paste",
					null,
					"AgAAAKYeAAAAAAAArB4AAAAAAAAAAAAArB4AAAAAAACsHgAAAAAAAAMAAABwZmQ",
					"AQAAAAAAAAABAAAAph4AAAAAAACpHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3970,
					1,
					"",
					null,
					"AQAAAPIeAAAAAAAA+B4AAAAAAAADAAAAcGZk",
					"AQAAAAAAAAABAAAA8h4AAAAAAAD1HgAAAAAAAAAAAAAAAPC/"
				],
				[
					3971,
					1,
					"",
					null,
					"AQAAAD0fAAAAAAAAQx8AAAAAAAADAAAAcGZk",
					"AQAAAAAAAAABAAAAPR8AAAAAAABAHwAAAAAAAAAAAAAAAPC/"
				],
				[
					3972,
					1,
					"",
					null,
					"AQAAAMIfAAAAAAAAyB8AAAAAAAADAAAAcGZk",
					"AQAAAAAAAAABAAAAwh8AAAAAAADFHwAAAAAAAAAAAAAAAPC/"
				],
				[
					3973,
					1,
					"",
					null,
					"AQAAAP8fAAAAAAAABSAAAAAAAAADAAAAcGZk",
					"AQAAAAAAAAABAAAA/x8AAAAAAAACIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3974,
					1,
					"",
					null,
					"AQAAABIgAAAAAAAAGCAAAAAAAAADAAAAcGZk",
					"AQAAAAAAAAABAAAAEiAAAAAAAAAVIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3975,
					1,
					"",
					null,
					"AQAAADIgAAAAAAAAOCAAAAAAAAADAAAAcGZk",
					"AQAAAAAAAAABAAAAMiAAAAAAAAA1IAAAAAAAAAAAAAAAAPC/"
				],
				[
					3985,
					1,
					"",
					null,
					"AQAAAKYeAAAAAAAApx4AAAAAAAAGAAAAcG9sbGZk",
					"AQAAAAAAAAABAAAAph4AAAAAAACsHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3986,
					1,
					"",
					null,
					"AQAAAO0eAAAAAAAA7h4AAAAAAAAGAAAAcG9sbGZk",
					"AQAAAAAAAAABAAAA7R4AAAAAAADzHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3987,
					1,
					"",
					null,
					"AQAAADMfAAAAAAAANB8AAAAAAAAGAAAAcG9sbGZk",
					"AQAAAAAAAAABAAAAMx8AAAAAAAA5HwAAAAAAAAAAAAAAAPC/"
				],
				[
					3988,
					1,
					"",
					null,
					"AQAAALMfAAAAAAAAtB8AAAAAAAAGAAAAcG9sbGZk",
					"AQAAAAAAAAABAAAAsx8AAAAAAAC5HwAAAAAAAAAAAAAAAPC/"
				],
				[
					3989,
					1,
					"",
					null,
					"AQAAAOsfAAAAAAAA7B8AAAAAAAAGAAAAcG9sbGZk",
					"AQAAAAAAAAABAAAA6x8AAAAAAADxHwAAAAAAAAAAAAAAAPC/"
				],
				[
					3990,
					1,
					"",
					null,
					"AQAAAPkfAAAAAAAA+h8AAAAAAAAGAAAAcG9sbGZk",
					"AQAAAAAAAAABAAAA+R8AAAAAAAD/HwAAAAAAAAAAAAAAAPC/"
				],
				[
					3991,
					1,
					"",
					null,
					"AQAAABQgAAAAAAAAFSAAAAAAAAAGAAAAcG9sbGZk",
					"AQAAAAAAAAABAAAAFCAAAAAAAAAaIAAAAAAAAAAAAAAAAPC/"
				],
				[
					4008,
					1,
					"cut",
					null,
					"AQAAAFUeAAAAAAAAVR4AAAAAAABAAAAAICBzdHJ1Y3QgbHdzX2NvbnRleHQqIGNvbnRleHQgPSBsd3NfZ2V0X2NvbnRleHQoY2xvc3VyZS0+bHdzaSk7Cg",
					"AQAAAAAAAAABAAAAVR4AAAAAAACVHgAAAAAAAAAAAAAAAPC/"
				],
				[
					4011,
					1,
					"paste",
					null,
					"AQAAAMwfAAAAAAAADCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzB8AAAAAAADMHwAAAAAAAAAAAAAAAPC/"
				],
				[
					4050,
					1,
					"cut",
					null,
					"AQAAAB8eAAAAAAAAHx4AAAAAAAA2AAAAICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIHdzbyA9IGNsb3N1cmUtPm9wYXF1ZTsK",
					"AQAAAAAAAAABAAAAHx4AAAAAAABVHgAAAAAAAAAAAAAAAPC/"
				],
				[
					4051,
					1,
					"paste",
					null,
					"AQAAAB8eAAAAAAAAVR4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHx4AAAAAAAAfHgAAAAAAAAAAAAAAAPC/"
				],
				[
					4071,
					1,
					"insert",
					{
						"characters": "->poll"
					},
					"BgAAAFMeAAAAAAAAVB4AAAAAAAAAAAAAVB4AAAAAAABVHgAAAAAAAAAAAABVHgAAAAAAAFYeAAAAAAAAAAAAAFYeAAAAAAAAVx4AAAAAAAAAAAAAVx4AAAAAAABYHgAAAAAAAAAAAABYHgAAAAAAAFkeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUx4AAAAAAABTHgAAAAAAAAAAAAAAAPC/"
				],
				[
					4074,
					1,
					"cut",
					null,
					"AQAAAEQeAAAAAAAARB4AAAAAAAAVAAAAY2xvc3VyZS0+b3BhcXVlLT5wb2xs",
					"AQAAAAAAAAABAAAAWR4AAAAAAABEHgAAAAAAAAAAAAAAAPC/"
				],
				[
					4075,
					1,
					"paste",
					null,
					"AQAAAEQeAAAAAAAAWR4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARB4AAAAAAABEHgAAAAAAAAAAAAAAAPC/"
				],
				[
					4082,
					1,
					"paste",
					null,
					"AgAAAHEeAAAAAAAAhh4AAAAAAAAAAAAAhh4AAAAAAACGHgAAAAAAAAkAAAB3c28tPnBvbGw",
					"AQAAAAAAAAABAAAAcR4AAAAAAAB6HgAAAAAAAAAAAAAAAPC/"
				],
				[
					4089,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAB8eAAAAAAAAIB4AAAAAAAAAAAAAIB4AAAAAAAAhHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHx4AAAAAAAAfHgAAAAAAAAAAAAAAAPC/"
				],
				[
					4094,
					1,
					"insert",
					{
						"characters": "po"
					},
					"AwAAADEfAAAAAAAAMh8AAAAAAAAAAAAAMh8AAAAAAAAyHwAAAAAAAAoAAAAmd3NvLT5wb2xsMh8AAAAAAAAzHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMR8AAAAAAAA7HwAAAAAAAAAAAAAAAPC/"
				],
				[
					4095,
					1,
					"left_delete",
					null,
					"AQAAADIfAAAAAAAAMh8AAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAMx8AAAAAAAAzHwAAAAAAAAAAAAAAAPC/"
				],
				[
					4113,
					1,
					"paste",
					null,
					"AgAAAEwgAAAAAAAAXSAAAAAAAAAAAAAAXSAAAAAAAABdIAAAAAAAAAMAAAB3c28",
					"AQAAAAAAAAABAAAATCAAAAAAAABPIAAAAAAAAAAAAAAAAPC/"
				],
				[
					4118,
					1,
					"paste",
					null,
					"AgAAAGcgAAAAAAAAeCAAAAAAAAAAAAAAeCAAAAAAAAB4IAAAAAAAAAMAAAB3c28",
					"AQAAAAAAAAABAAAAZyAAAAAAAABqIAAAAAAAAAAAAAAAAPC/"
				],
				[
					4121,
					2,
					"left_delete",
					null,
					"AgAAAFwgAAAAAAAAXCAAAAAAAAABAAAAPlsgAAAAAAAAWyAAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAXSAAAAAAAABdIAAAAAAAAAAAAAAAAPC/"
				],
				[
					4123,
					1,
					"left_delete",
					null,
					"AQAAAHQgAAAAAAAAdCAAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAdSAAAAAAAAB1IAAAAAAAAAAAAAAAAG5A"
				],
				[
					4124,
					1,
					"right_delete",
					null,
					"AQAAAHQgAAAAAAAAdCAAAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAAdCAAAAAAAAB0IAAAAAAAAAAAAAAAAPC/"
				],
				[
					4133,
					1,
					"left_delete",
					null,
					"AQAAAB8eAAAAAAAAHx4AAAAAAAA+AAAALy8gIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogd3NvID0gY2xvc3VyZS0+b3BhcXVlLT5wb2xsOwo",
					"AQAAAAAAAAABAAAAHx4AAAAAAABdHgAAAAAAAAAAAAAAAPC/"
				],
				[
					4138,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAHx4AAAAAAAAfHgAAAAAAAAAAAAAAAPC/"
				],
				[
					4175,
					2,
					"left_delete",
					null,
					"AgAAAAYgAAAAAAAABiAAAAAAAAABAAAAewUgAAAAAAAABSAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAByAAAAAAAAAHIAAAAAAAAAAAAAAAAPC/"
				],
				[
					4178,
					4,
					"left_delete",
					null,
					"BAAAAEwgAAAAAAAATCAAAAAAAAABAAAAfUogAAAAAAAASiAAAAAAAAACAAAAICBIIAAAAAAAAEggAAAAAAAAAgAAACAgRyAAAAAAAABHIAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAATSAAAAAAAABNIAAAAAAAAAAAAAAAAHlA"
				],
				[
					4193,
					1,
					"cut",
					null,
					"AQAAAA8gAAAAAAAADyAAAAAAAAAPAAAAY2xvc3VyZS0+b3BhcXVl",
					"AQAAAAAAAAABAAAADyAAAAAAAAAeIAAAAAAAAAAAAAAAAPC/"
				],
				[
					4194,
					1,
					"paste",
					null,
					"AQAAAA8gAAAAAAAAHiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADyAAAAAAAAAPIAAAAAAAAAAAAAAAAPC/"
				],
				[
					4199,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADEeAAAAAAAAMh4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMR4AAAAAAAAxHgAAAAAAAAAAAAAAAPC/"
				],
				[
					4200,
					1,
					"left_delete",
					null,
					"AQAAADEeAAAAAAAAMR4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAMh4AAAAAAAAyHgAAAAAAAAAAAAAAAPC/"
				],
				[
					4201,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADEeAAAAAAAAMh4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMR4AAAAAAAAxHgAAAAAAAAAAAAAAAPC/"
				],
				[
					4204,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAB4eAAAAAAAAHx4AAAAAAAAAAAAAHx4AAAAAAAAhHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHh4AAAAAAAAeHgAAAAAAAP///////+9/"
				],
				[
					4205,
					1,
					"paste",
					null,
					"AQAAACEeAAAAAAAAMB4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIR4AAAAAAAAhHgAAAAAAAAAAAAAAAPC/"
				],
				[
					4207,
					1,
					"insert",
					{
						"characters": "assert("
					},
					"BwAAACEeAAAAAAAAIh4AAAAAAAAAAAAAIh4AAAAAAAAjHgAAAAAAAAAAAAAjHgAAAAAAACQeAAAAAAAAAAAAACQeAAAAAAAAJR4AAAAAAAAAAAAAJR4AAAAAAAAmHgAAAAAAAAAAAAAmHgAAAAAAACceAAAAAAAAAAAAACceAAAAAAAAKB4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIR4AAAAAAAAhHgAAAAAAAAAAAAAAADRA"
				],
				[
					4208,
					1,
					"right_delete",
					null,
					"AQAAACgeAAAAAAAAKB4AAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAKB4AAAAAAAAoHgAAAAAAAAAAAAAAAPC/"
				],
				[
					4210,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAADYeAAAAAAAANx4AAAAAAAAAAAAANx4AAAAAAAA4HgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANh4AAAAAAAA2HgAAAAAAAP///////+9/"
				],
				[
					4213,
					1,
					"cut",
					null,
					"AQAAAB8eAAAAAAAAHx4AAAAAAAAaAAAAICBhc3NlcnQobG9zdXJlLT5vcGFxdWUpOwo",
					"AQAAAAAAAAABAAAAOR4AAAAAAAAfHgAAAAAAAAAAAAAAAAAA"
				],
				[
					4215,
					1,
					"paste",
					null,
					"AQAAAGAeAAAAAAAAeh4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYB4AAAAAAABgHgAAAAAAAAAAAAAAAAAA"
				],
				[
					4220,
					1,
					"cut",
					null,
					"AQAAADIeAAAAAAAAMh4AAAAAAAAaAAAAID0gJmNsb3N1cmUtPm9wYXF1ZS0+cG9sbDs",
					"AQAAAAAAAAABAAAAMh4AAAAAAABMHgAAAAAAAP///////+9/"
				],
				[
					4222,
					1,
					"insert",
					{
						"characters": "p="
					},
					"AgAAAIIeAAAAAAAAgx4AAAAAAAAAAAAAgx4AAAAAAACEHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgh4AAAAAAACCHgAAAAAAAAAAAAAAwGdA"
				],
				[
					4223,
					1,
					"paste",
					null,
					"AQAAAIQeAAAAAAAAnh4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhB4AAAAAAACEHgAAAAAAAAAAAAAAAPC/"
				],
				[
					4226,
					2,
					"right_delete",
					null,
					"AgAAAIUeAAAAAAAAhR4AAAAAAAABAAAAPYUeAAAAAAAAhR4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAhR4AAAAAAACFHgAAAAAAAAAAAAAAAPC/"
				],
				[
					4228,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIIeAAAAAAAAgx4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgh4AAAAAAACCHgAAAAAAAAAAAAAAAAAA"
				],
				[
					4270,
					1,
					"left_delete",
					null,
					"AQAAACIgAAAAAAAAIiAAAAAAAAAaAAAAICAgICAgaWYoY2xvc3VyZS0+b3BhcXVlKQo",
					"AQAAAAAAAAABAAAAIiAAAAAAAAA8IAAAAAAAAAAAAAAAAPC/"
				],
				[
					4349,
					1,
					"cut",
					null,
					"AQAAANgfAAAAAAAA2B8AAAAAAAAeAAAAbHdzX2dldF9jb250ZXh0KGNsb3N1cmUtPmx3c2kp",
					"AQAAAAAAAAABAAAA2B8AAAAAAAD2HwAAAAAAAAAAAAAAAPC/"
				],
				[
					4354,
					1,
					"paste",
					null,
					"AgAAAEYgAAAAAAAAZCAAAAAAAAAAAAAAZCAAAAAAAABkIAAAAAAAAAcAAABjb250ZXh0",
					"AQAAAAAAAAABAAAARiAAAAAAAABNIAAAAAAAAAAAAAAAAPC/"
				],
				[
					4361,
					1,
					"left_delete",
					null,
					"AQAAALYfAAAAAAAAth8AAAAAAAAkAAAAICAgIHN0cnVjdCBsd3NfY29udGV4dCogY29udGV4dCA9IDsK",
					"AQAAAAAAAAABAAAAth8AAAAAAADaHwAAAAAAAAAAAAAAAPC/"
				],
				[
					4378,
					1,
					"paste",
					null,
					"AgAAAIcfAAAAAAAAmR8AAAAAAAAAAAAAmR8AAAAAAACZHwAAAAAAAAwAAABNaW5uZXRQb2xsRmQ",
					"AQAAAAAAAAABAAAAhx8AAAAAAACTHwAAAAAAAAAAAAAAAPC/"
				],
				[
					4385,
					1,
					"left_delete",
					null,
					"AQAAAIcfAAAAAAAAhx8AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAiB8AAAAAAACIHwAAAAAAAAAAAAAAAPC/"
				],
				[
					4390,
					1,
					"paste",
					null,
					"AgAAAHUfAAAAAAAAhx8AAAAAAAAAAAAAhx8AAAAAAACHHwAAAAAAAAwAAABNaW5uZXRQb2xsRmQ",
					"AQAAAAAAAAABAAAAdR8AAAAAAACBHwAAAAAAAAAAAAAAAPC/"
				],
				[
					4393,
					1,
					"left_delete",
					null,
					"AQAAAIsfAAAAAAAAix8AAAAAAAAUAAAAIChzdHJ1Y3QgbHdzX3BvbGxmZCk",
					"AQAAAAAAAAABAAAAix8AAAAAAACfHwAAAAAAAAAAAAAAAPC/"
				],
				[
					4403,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAcR8AAAAAAABxHwAAAAAAAAAAAAAAAPC/"
				],
				[
					4484,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAE8eAAAAAAAAUB4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATx4AAAAAAABPHgAAAAAAAAAAAAAAAPC/"
				],
				[
					4534,
					1,
					"cut",
					null,
					"AQAAAIQeAAAAAAAAhB4AAAAAAAAeAAAAICBwID0gJmNsb3N1cmUtPm9wYXF1ZS0+cG9sbDsK",
					"AQAAAAAAAAABAAAAhB4AAAAAAACiHgAAAAAAAAAAAAAAAPC/"
				],
				[
					4537,
					1,
					"paste",
					null,
					"AQAAAGEeAAAAAAAAfx4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYR4AAAAAAABhHgAAAAAAAAAAAAAAAPC/"
				],
				[
					4543,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEYeAAAAAAAARx4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARh4AAAAAAABGHgAAAAAAAAAAAAAAAAAA"
				],
				[
					4761,
					1,
					"cut",
					null,
					"AQAAAAUiAAAAAAAABSIAAAAAAAAVAAAAbHdzX29wYXF1ZSh3c2ksIGN0eCl9",
					"AQAAAAAAAAABAAAABSIAAAAAAAAaIgAAAAAAAAAAAAAAAPC/"
				],
				[
					4762,
					1,
					"paste",
					null,
					"AQAAAAUiAAAAAAAAGiIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABSIAAAAAAAAFIgAAAAAAAAAAAAAAAPC/"
				],
				[
					4767,
					1,
					"insert",
					{
						"characters": "\nstruct"
					},
					"CAAAAFomAAAAAAAAWyYAAAAAAAAAAAAAWyYAAAAAAABdJgAAAAAAAAAAAABdJgAAAAAAAF4mAAAAAAAAAAAAAF4mAAAAAAAAXyYAAAAAAAAAAAAAXyYAAAAAAABgJgAAAAAAAAAAAABgJgAAAAAAAGEmAAAAAAAAAAAAAGEmAAAAAAAAYiYAAAAAAAAAAAAAYiYAAAAAAABjJgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWiYAAAAAAABaJgAAAAAAAAAAAAAAAPC/"
				],
				[
					4768,
					1,
					"insert",
					{
						"characters": " wsi_"
					},
					"BQAAAGMmAAAAAAAAZCYAAAAAAAAAAAAAZCYAAAAAAABlJgAAAAAAAAAAAABlJgAAAAAAAGYmAAAAAAAAAAAAAGYmAAAAAAAAZyYAAAAAAAAAAAAAZyYAAAAAAABoJgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYyYAAAAAAABjJgAAAAAAAAAAAAAAAPC/"
				],
				[
					4769,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGgmAAAAAAAAaSYAAAAAAAAAAAAAaSYAAAAAAABrJgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaCYAAAAAAABoJgAAAAAAAAAAAAAAAPC/"
				],
				[
					4770,
					1,
					"left_delete",
					null,
					"AgAAAGkmAAAAAAAAaSYAAAAAAAACAAAAICBoJgAAAAAAAGgmAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAayYAAAAAAABrJgAAAAAAAAAAAAAAAPC/"
				],
				[
					4771,
					1,
					"insert",
					{
						"characters": "opaque_user_dat"
					},
					"DwAAAGgmAAAAAAAAaSYAAAAAAAAAAAAAaSYAAAAAAABqJgAAAAAAAAAAAABqJgAAAAAAAGsmAAAAAAAAAAAAAGsmAAAAAAAAbCYAAAAAAAAAAAAAbCYAAAAAAABtJgAAAAAAAAAAAABtJgAAAAAAAG4mAAAAAAAAAAAAAG4mAAAAAAAAbyYAAAAAAAAAAAAAbyYAAAAAAABwJgAAAAAAAAAAAABwJgAAAAAAAHEmAAAAAAAAAAAAAHEmAAAAAAAAciYAAAAAAAAAAAAAciYAAAAAAABzJgAAAAAAAAAAAABzJgAAAAAAAHQmAAAAAAAAAAAAAHQmAAAAAAAAdSYAAAAAAAAAAAAAdSYAAAAAAAB2JgAAAAAAAAAAAAB2JgAAAAAAAHcmAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaCYAAAAAAABoJgAAAAAAAAAAAAAAAPC/"
				],
				[
					4772,
					1,
					"insert",
					{
						"characters": "a*opaque"
					},
					"CAAAAHcmAAAAAAAAeCYAAAAAAAAAAAAAeCYAAAAAAAB5JgAAAAAAAAAAAAB5JgAAAAAAAHomAAAAAAAAAAAAAHomAAAAAAAAeyYAAAAAAAAAAAAAeyYAAAAAAAB8JgAAAAAAAAAAAAB8JgAAAAAAAH0mAAAAAAAAAAAAAH0mAAAAAAAAfiYAAAAAAAAAAAAAfiYAAAAAAAB/JgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdyYAAAAAAAB3JgAAAAAAAAAAAAAAAPC/"
				],
				[
					4773,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAH8mAAAAAAAAgCYAAAAAAAAAAAAAgCYAAAAAAACBJgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfyYAAAAAAAB/JgAAAAAAAAAAAAAAAPC/"
				],
				[
					4774,
					1,
					"paste",
					null,
					"AQAAAIEmAAAAAAAAliYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgSYAAAAAAACBJgAAAAAAAAAAAAAAAPC/"
				],
				[
					4775,
					1,
					"insert",
					{
						"characters": "M"
					},
					"AQAAAJYmAAAAAAAAlyYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAliYAAAAAAACWJgAAAAAAAAAAAAAAAPC/"
				],
				[
					4776,
					1,
					"left_delete",
					null,
					"AQAAAJYmAAAAAAAAliYAAAAAAAABAAAATQ",
					"AQAAAAAAAAABAAAAlyYAAAAAAACXJgAAAAAAAAAAAAAAAPC/"
				],
				[
					4777,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJYmAAAAAAAAlyYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAliYAAAAAAACWJgAAAAAAAAAAAAAAAPC/"
				],
				[
					4778,
					1,
					"left_delete",
					null,
					"AgAAAJYmAAAAAAAAliYAAAAAAAABAAAAO5UmAAAAAAAAlSYAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAlyYAAAAAAACXJgAAAAAAAAAAAAAAAPC/"
				],
				[
					4779,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJUmAAAAAAAAliYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlSYAAAAAAACVJgAAAAAAAAAAAAAAAPC/"
				],
				[
					5387,
					1,
					"insert",
					{
						"characters": "&/"
					},
					"AgAAAFwmAAAAAAAAXSYAAAAAAAAAAAAAXSYAAAAAAABeJgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXCYAAAAAAABcJgAAAAAAAAAAAAAAAPC/"
				],
				[
					5388,
					2,
					"left_delete",
					null,
					"AgAAAF0mAAAAAAAAXSYAAAAAAAABAAAAL1wmAAAAAAAAXCYAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAXiYAAAAAAABeJgAAAAAAAAAAAAAAAPC/"
				],
				[
					5389,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAFwmAAAAAAAAXSYAAAAAAAAAAAAAXSYAAAAAAABeJgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXCYAAAAAAABcJgAAAAAAAAAAAAAAAPC/"
				],
				[
					5390,
					1,
					"right_delete",
					null,
					"AQAAAF4mAAAAAAAAXiYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAXiYAAAAAAABeJgAAAAAAAAAAAAAAAPC/"
				],
				[
					5393,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAXiYAAAAAAABeJgAAAAAAAAAAAAAAAPC/"
				],
				[
					5413,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACAUQAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC1jbGllbnQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJtaW5uZXQtcmVzcG9uc2UuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1zdHJlYW0uaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgIm1pbm5ldC1idWZmZXIuaCIKI2luY2x1ZGUgPGFzc2VydC5oPgojaW5jbHVkZSA8ZXJybm8uaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8Y3R5cGUuaD4KI2luY2x1ZGUgPHN5cy90aW1lLmg+CgojaWZkZWYgX1dJTjMyCiNpbmNsdWRlICJwb2xsLmgiCiNlbmRpZgoKI2lmbmRlZiBQT0xMSU4KI2RlZmluZSBQT0xMSU4gMQojZW5kaWYKI2lmbmRlZiBQT0xMT1VUCiNkZWZpbmUgUE9MTE9VVCA0CiNlbmRpZgojaWZuZGVmIFBPTExFUlIKI2RlZmluZSBQT0xMRVJSIDgKI2VuZGlmCiNpZm5kZWYgUE9MTEhVUAojZGVmaW5lIFBPTExIVVAgMTYKI2VuZGlmCgojaWZkZWYgSlNfU0hBUkVEX0xJQlJBUlkKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZQojZWxzZQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlX21pbm5ldAojZW5kaWYKCiNkZWZpbmUgUElPIChQT0xMSU4gfCBQT0xMT1VUIHwgUE9MTEVSUikKCnN0cnVjdCBoYW5kbGVyX2Nsb3N1cmUgewogIEpTQ29udGV4dCogY3R4OwogIHN0cnVjdCBsd3MqIGx3c2k7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7Cn07CgpKU1ZhbHVlIG1pbm5ldF9mZXRjaChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0Kik7CgovLyBUSFJFQURfTE9DQUwgc3RydWN0IGx3c19jb250ZXh0KiBtaW5uZXRfbHdzX2NvbnRleHQgPSAwOwoKc3RhdGljIFRIUkVBRF9MT0NBTCBKU1ZhbHVlIG1pbm5ldF9sb2dfY2IsIG1pbm5ldF9sb2dfdGhpczsKVEhSRUFEX0xPQ0FMIGludDMyX3QgbWlubmV0X2xvZ19sZXZlbCA9IDA7ClRIUkVBRF9MT0NBTCBKU0NvbnRleHQqIG1pbm5ldF9sb2dfY3R4ID0gMDsKVEhSRUFEX0xPQ0FMIEJPT0wgbWlubmV0X2V4Y2VwdGlvbiA9IEZBTFNFOwoKc3RhdGljIHZvaWQKbHdzX2xvZ19jYWxsYmFjayhpbnQgbGV2ZWwsIGNvbnN0IGNoYXIqIGxpbmUpIHsKICBpZihtaW5uZXRfbG9nX2N0eCkgewogICAgaWYoSlNfSXNGdW5jdGlvbihtaW5uZXRfbG9nX2N0eCwgbWlubmV0X2xvZ19jYikpIHsKICAgICAgc2l6ZV90IG4gPSAwLCBsZW4gPSBzdHJsZW4obGluZSk7CgogICAgICBpZihsZW4gPiAwICYmIGxpbmVbMF0gPT0gJ1snKSB7CiAgICAgICAgaWYoKG4gPSBieXRlX2NocihsaW5lLCBsZW4sICddJykpIDwgbGVuKQogICAgICAgICAgbisrOwogICAgICAgIHdoaWxlKG4gPCBsZW4gJiYgaXNzcGFjZShsaW5lW25dKSkgbisrOwogICAgICAgIGlmKG4gKyAxIDwgbGVuICYmIGxpbmVbbiArIDFdID09ICc6JykKICAgICAgICAgIG4gKz0gMjsKICAgICAgICB3aGlsZShuIDwgbGVuICYmIChpc3NwYWNlKGxpbmVbbl0pIHx8IGxpbmVbbl0gPT0gJy0nKSkgbisrOwogICAgICB9CiAgICAgIGlmKGxlbiA+IDAgJiYgbGluZVtsZW4gLSAxXSA9PSAnXG4nKQogICAgICAgIGxlbi0tOwoKICAgICAgSlNWYWx1ZUNvbnN0IGFyZ3ZbMl0gPSB7SlNfTmV3SW50MzIobWlubmV0X2xvZ19jdHgsIGxldmVsKSwgSlNfTmV3U3RyaW5nTGVuKG1pbm5ldF9sb2dfY3R4LCBsaW5lICsgbiwgbGVuIC0gbil9OwogICAgICBKU1ZhbHVlIHJldCA9IEpTX0NhbGwobWlubmV0X2xvZ19jdHgsIG1pbm5ldF9sb2dfY2IsIG1pbm5ldF9sb2dfdGhpcywgMiwgYXJndik7CgogICAgICBpZihKU19Jc0V4Y2VwdGlvbihyZXQpKQogICAgICAgIG1pbm5ldF9leGNlcHRpb24gPSBUUlVFOwoKICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9sb2dfY3R4LCBhcmd2WzBdKTsKICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9sb2dfY3R4LCBhcmd2WzFdKTsKICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9sb2dfY3R4LCByZXQpOwogICAgfSBlbHNlIHsKICAgICAganNfY29uc29sZV9sb2cobWlubmV0X2xvZ19jdHgsICZtaW5uZXRfbG9nX3RoaXMsICZtaW5uZXRfbG9nX2NiKTsKICAgIH0KICB9Cn0KCmludAptaW5uZXRfbHdzX3VuaGFuZGxlZChjb25zdCBjaGFyKiBoYW5kbGVyLCBpbnQgcmVhc29uKSB7CiAgbHdzbF93YXJuKCJVbmhhbmRsZWQgXHgxYlsxOzMxbSVzXHgxYlswbSBldmVudDogJWkgJXNcbiIsIGhhbmRsZXIsIHJlYXNvbiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSk7CiAgYXNzZXJ0KDApOwogIHJldHVybiAtMTsKfQoKLypzdGF0aWMgSlNWYWx1ZQpnZXRfbG9nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwpIHsKICByZXR1cm4gSlNfRHVwVmFsdWUoY3R4LCBtaW5uZXRfbG9nX2NiKTsKfSovCgpzdGF0aWMgSlNWYWx1ZQpzZXRfbG9nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIEpTVmFsdWVDb25zdCB2YWx1ZSwgSlNWYWx1ZUNvbnN0IHRoaXNPYmopIHsKICBKU1ZhbHVlIHJldCA9IEpTX1ZBTFVFX0dFVF9UQUcobWlubmV0X2xvZ19jYikgPT0gMCA/IEpTX1VOREVGSU5FRCA6IG1pbm5ldF9sb2dfY2I7CgogIG1pbm5ldF9sb2dfY3R4ID0gY3R4OwogIG1pbm5ldF9sb2dfY2IgPSBKU19EdXBWYWx1ZShjdHgsIHZhbHVlKTsKICBpZighSlNfSXNVbmRlZmluZWQobWlubmV0X2xvZ190aGlzKSAmJiAhSlNfSXNOdWxsKG1pbm5ldF9sb2dfdGhpcykgJiYgSlNfVkFMVUVfR0VUX1RBRyhtaW5uZXRfbG9nX3RoaXMpICE9IDApCiAgICBKU19GcmVlVmFsdWUoY3R4LCBtaW5uZXRfbG9nX3RoaXMpOwoKICBtaW5uZXRfbG9nX3RoaXMgPSBKU19EdXBWYWx1ZShjdHgsIHRoaXNPYmopOwoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQptaW5uZXRfc2V0X2xvZyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcmV0OwogIGlmKGFyZ2MgPj0gMSAmJiBKU19Jc051bWJlcihhcmd2WzBdKSkgewogICAgSlNfVG9JbnQzMihjdHgsICZtaW5uZXRfbG9nX2xldmVsLCBhcmd2WzBdKTsKICAgIGFyZ2MtLTsKICAgIGFyZ3YrKzsKICB9CgogIHJldCA9IHNldF9sb2coY3R4LCB0aGlzX3ZhbCwgYXJndlswXSwgYXJnYyA+IDEgPyBhcmd2WzFdIDogSlNfTlVMTCk7CiAgbHdzX3NldF9sb2dfbGV2ZWwoKCh1bnNpZ25lZCltaW5uZXRfbG9nX2xldmVsICYgKCgxdSA8PCBMTExfQ09VTlQpIC0gMSkpLCBsd3NfbG9nX2NhbGxiYWNrKTsKICByZXR1cm4gcmV0Owp9CgpKU1ZhbHVlCmhlYWRlcnNfb2JqZWN0KEpTQ29udGV4dCogY3R4LCBjb25zdCBNaW5uZXRCdWZmZXIqIGJ1ZmZlcikgewogIEpTVmFsdWUgcmV0ID0gSlNfTmV3T2JqZWN0KGN0eCk7CiAgc2l6ZV90IGxlbiwgbjsKICB1aW50OF90ICp4LCAqZW5kOwogIGZvcih4ID0gYnVmZmVyLT5zdGFydCwgZW5kID0gYnVmZmVyLT53cml0ZTsgeCA8IGVuZDsgeCArPSBsZW4gKyAxKSB7CiAgICBsZW4gPSBieXRlX2Nocih4LCBlbmQgLSB4LCAnXG4nKTsKICAgIGlmKGxlbiA+IChuID0gYnl0ZV9jaHIoeCwgbGVuLCAnOicpKSkgewogICAgICBjb25zdCBjaGFyKiBwcm9wID0ganNfc3RybmR1cChjdHgsIChjb25zdCBjaGFyKil4LCBuKTsKICAgICAgaWYoeFtuXSA9PSAnOicpCiAgICAgICAgbisrOwogICAgICBpZihpc3NwYWNlKHhbbl0pKQogICAgICAgIG4rKzsKICAgICAgSlNfRGVmaW5lUHJvcGVydHlWYWx1ZVN0cihjdHgsIHJldCwgcHJvcCwgSlNfTmV3U3RyaW5nTGVuKGN0eCwgKGNvbnN0IGNoYXIqKSZ4W25dLCBsZW4gLSBuKSwgSlNfUFJPUF9FTlVNRVJBQkxFKTsKICAgICAganNfZnJlZShjdHgsICh2b2lkKilwcm9wKTsKICAgIH0KICB9CiAgcmV0dXJuIHJldDsKfQoKY2hhcioKaGVhZGVyc19hdG9tKEpTQXRvbSBhdG9tLCBKU0NvbnRleHQqIGN0eCkgewogIGNoYXIqIHJldDsKICBjb25zdCBjaGFyKiBzdHIgPSBKU19BdG9tVG9DU3RyaW5nKGN0eCwgYXRvbSk7CiAgc2l6ZV90IGxlbiA9IHN0cmxlbihzdHIpOwoKICBpZigocmV0ID0ganNfbWFsbG9jKGN0eCwgbGVuICsgMikpKSB7CiAgICBzdHJjcHkocmV0LCBzdHIpOwogICAgcmV0W2xlbl0gPSAnOic7CiAgICByZXRbbGVuICsgMV0gPSAnXDAnOwogIH0KICByZXR1cm4gcmV0Owp9CgppbnQKaGVhZGVyc19mcm9tKE1pbm5ldEJ1ZmZlciogYnVmZmVyLCBzdHJ1Y3QgbHdzKiB3c2ksIEpTVmFsdWVDb25zdCBvYmosIEpTQ29udGV4dCogY3R4KSB7CiAgSlNQcm9wZXJ0eUVudW0qIHRhYjsKICB1aW50MzJfdCB0YWJfbGVuLCBpOwoKICBpZihKU19HZXRPd25Qcm9wZXJ0eU5hbWVzKGN0eCwgJnRhYiwgJnRhYl9sZW4sIG9iaiwgSlNfR1BOX0VOVU1fT05MWSB8IEpTX0dQTl9TVFJJTkdfTUFTSykpCiAgICByZXR1cm4gMDsKCiAgZm9yKGkgPSAwOyBpIDwgdGFiX2xlbjsgaSsrKSB7CiAgICBKU1ZhbHVlIHZhbHVlID0gSlNfR2V0UHJvcGVydHkoY3R4LCBvYmosIHRhYltpXS5hdG9tKTsKICAgIHNpemVfdCBsZW47CiAgICBjaGFyKiBwcm9wOwogICAgY29uc3QgY2hhciogc3RyOwogICAgaW50IHJldDsKCiAgICBzdHIgPSBKU19Ub0NTdHJpbmdMZW4oY3R4LCAmbGVuLCB2YWx1ZSk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CgogICAgcHJvcCA9IGhlYWRlcnNfYXRvbSh0YWJbaV0uYXRvbSwgY3R4KTsKCiAgICByZXQgPSBsd3NfYWRkX2h0dHBfaGVhZGVyX2J5X25hbWUod3NpLCBwcm9wLCBzdHIsIGxlbiwgJmJ1ZmZlci0+d3JpdGUsIGJ1ZmZlci0+ZW5kKTsKCiAgICBqc19mcmVlKGN0eCwgcHJvcCk7CiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHN0cik7CgogICAgaWYocmV0KQogICAgICByZXR1cm4gLTE7CiAgfQoKICBqc19mcmVlKGN0eCwgdGFiKTsKICByZXR1cm4gMDsKfQoKc3NpemVfdApoZWFkZXJzX3NldChKU0NvbnRleHQqIGN0eCwgTWlubmV0QnVmZmVyKiBidWZmZXIsIGNvbnN0IGNoYXIqIG5hbWUsIGNvbnN0IGNoYXIqIHZhbHVlKSB7CiAgc2l6ZV90IG5hbWVsZW4gPSBzdHJsZW4obmFtZSksIHZhbHVlbGVuID0gc3RybGVuKHZhbHVlKTsKICBzaXplX3QgbGVuID0gbmFtZWxlbiArIDIgKyB2YWx1ZWxlbiArIDI7CgogIGJ1ZmZlcl9ncm93KGJ1ZmZlciwgbGVuLCBjdHgpOwogIGJ1ZmZlcl93cml0ZShidWZmZXIsIG5hbWUsIG5hbWVsZW4pOwogIGJ1ZmZlcl93cml0ZShidWZmZXIsICI6ICIsIDIpOwogIGJ1ZmZlcl93cml0ZShidWZmZXIsIHZhbHVlLCB2YWx1ZWxlbik7CiAgYnVmZmVyX3dyaXRlKGJ1ZmZlciwgIlxyXG4iLCAyKTsKCiAgcmV0dXJuIGxlbjsKfQoKaW50CmZkX2NhbGxiYWNrKHN0cnVjdCBsd3MqIHdzaSwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucyByZWFzb24sIE1pbm5ldENhbGxiYWNrKiBjYiwgc3RydWN0IGx3c19wb2xsYXJncyogYXJncykgewoKICBzd2l0Y2gocmVhc29uKSB7CiAgICBjYXNlIExXU19DQUxMQkFDS19MT0NLX1BPTEw6CiAgICBjYXNlIExXU19DQUxMQkFDS19VTkxPQ0tfUE9MTDogcmV0dXJuIDA7CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfQUREX1BPTExfRkQ6IHsKCiAgICAgIGlmKGNiLT5jdHgpIHsKICAgICAgICBKU1ZhbHVlIGFyZ3ZbM10gPSB7SlNfTmV3SW50MzIoY2ItPmN0eCwgYXJncy0+ZmQpfTsKICAgICAgICBtaW5uZXRfaGFuZGxlcnMoY2ItPmN0eCwgd3NpLCBhcmdzLCAmYXJndlsxXSk7CgogICAgICAgIG1pbm5ldF9lbWl0KGNiLCAzLCBhcmd2KTsKCiAgICAgICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIGFyZ3ZbMF0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShjYi0+Y3R4LCBhcmd2WzFdKTsKICAgICAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgYXJndlsyXSk7CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19ERUxfUE9MTF9GRDogewoKICAgICAgaWYoY2ItPmN0eCkgewogICAgICAgIEpTVmFsdWUgYXJndlszXSA9IHsKICAgICAgICAgICAgSlNfTmV3SW50MzIoY2ItPmN0eCwgYXJncy0+ZmQpLAogICAgICAgIH07CiAgICAgICAgbWlubmV0X2hhbmRsZXJzKGNiLT5jdHgsIHdzaSwgYXJncywgJmFyZ3ZbMV0pOwogICAgICAgIG1pbm5ldF9lbWl0KGNiLCAzLCBhcmd2KTsKICAgICAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIGFyZ3ZbMV0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShjYi0+Y3R4LCBhcmd2WzJdKTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0NIQU5HRV9NT0RFX1BPTExfRkQ6IHsKCiAgICAgIGlmKGNiLT5jdHgpIHsKICAgICAgICBpZihhcmdzLT5ldmVudHMgIT0gYXJncy0+cHJldl9ldmVudHMpIHsKICAgICAgICAgIEpTVmFsdWUgYXJndlszXSA9IHtKU19OZXdJbnQzMihjYi0+Y3R4LCBhcmdzLT5mZCl9OwogICAgICAgICAgbWlubmV0X2hhbmRsZXJzKGNiLT5jdHgsIHdzaSwgYXJncywgJmFyZ3ZbMV0pOwoKICAgICAgICAgIG1pbm5ldF9lbWl0KGNiLCAzLCBhcmd2KTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjYi0+Y3R4LCBhcmd2WzBdKTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjYi0+Y3R4LCBhcmd2WzFdKTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjYi0+Y3R4LCBhcmd2WzJdKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgZGVmYXVsdDogewogICAgICByZXR1cm4gLTE7CiAgICB9CiAgfQp9CgpzdGF0aWMgY29uc3QgY2hhcioKaW9fZXZlbnRzKGludCBldmVudHMpIHsKICBzd2l0Y2goZXZlbnRzIC8qICYgKFBPTExJTiB8IFBPTExPVVQpKi8pIHsKICAgIGNhc2UgUE9MTE9VVCB8IFBPTExIVVA6IHJldHVybiAiT1VUfEhVUCI7CiAgICBjYXNlIFBPTExJTiB8IFBPTExPVVQgfCBQT0xMSFVQIHwgUE9MTEVSUjogcmV0dXJuICJJTnxPVVR8SFVQfEVSUiI7CiAgICBjYXNlIFBPTExPVVQgfCBQT0xMSFVQIHwgUE9MTEVSUjogcmV0dXJuICJPVVR8SFVQfEVSUiI7CiAgICBjYXNlIFBPTExJTiB8IFBPTExPVVQ6IHJldHVybiAiSU58T1VUIjsKICAgIGNhc2UgUE9MTElOOiByZXR1cm4gIklOIjsKICAgIGNhc2UgUE9MTE9VVDoKICAgICAgcmV0dXJuICJPVVQiOwogICAgICAvLyAgY2FzZSAwOiByZXR1cm4gIjAiOwogIH0KICBhc3NlcnQoIWV2ZW50cyk7CiAgcmV0dXJuICIiOwp9CgpzdGF0aWMgaW50CmlvX3BhcnNlX2V2ZW50cyhjb25zdCBjaGFyKiBzdHIpIHsKICBpbnQgZXZlbnRzID0gMDsKCiAgaWYoc3Ryc3RyKHN0ciwgIklOIikpCiAgICBldmVudHMgfD0gUE9MTElOOwogIGlmKHN0cnN0cihzdHIsICJPVVQiKSkKICAgIGV2ZW50cyB8PSBQT0xMT1VUOwogIGlmKHN0cnN0cihzdHIsICJIVVAiKSkKICAgIGV2ZW50cyB8PSBQT0xMSFVQOwogIGlmKHN0cnN0cihzdHIsICJFUlIiKSkKICAgIGV2ZW50cyB8PSBQT0xMRVJSOwogIHJldHVybiBldmVudHM7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9pb19oYW5kbGVyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMsIHZvaWQqIHB0cikgewogIHN0cnVjdCBoYW5kbGVyX2Nsb3N1cmUqIGNsb3N1cmUgPSBwdHI7CiAgc3RydWN0IHBvbGxmZCogcDsKICBpbnQzMl90IHdyLCByZXQ7CgogIGFzc2VydChjbG9zdXJlLT5vcGFxdWUpOwogIHAgPSAmY2xvc3VyZS0+b3BhcXVlLT5wb2xsOwoKICBKU19Ub0ludDMyKGN0eCwgJndyLCBhcmd2WzBdKTsKCiAgcC0+cmV2ZW50cyA9IG1hZ2ljICYgKHdyID09IFdSSVRFX0hBTkRMRVIgPyBQT0xMT1VUIDogUE9MTElOKTsKCiAgaWYoKHAtPnJldmVudHMgJiBQSU8pICE9IG1hZ2ljKSB7CiAgICBpZihwb2xsKHAsIDEsIDApIDwgMCkKICAgICAgbHdzbF9lcnIoInBvbGwgZXJyb3I6ICVzXG4iLCBzdHJlcnJvcihlcnJubykpOwogIH0KCiAgaWYocC0+cmV2ZW50cyAmIFBJTykgewogICAgc3RydWN0IGx3c19wb2xsZmQgeCA9IHtwLT5mZCwgbWFnaWMsIHAtPnJldmVudHMgJiBQSU99OwoKICAgIGlmKHAtPnJldmVudHMgJiAoUE9MTEVSUiB8IFBPTExIVVApKQogICAgICBjbG9zdXJlLT5vcGFxdWUtPmVycm9yID0gZXJybm87CgogICAgcmV0ID0gbHdzX3NlcnZpY2VfZmQobHdzX2dldF9jb250ZXh0KGNsb3N1cmUtPmx3c2kpLCAmeCk7CiAgfQoKICByZXR1cm4gSlNfVU5ERUZJTkVEOwp9CgpzdGF0aWMgdm9pZApmcmVlX2hhbmRsZXJfY2xvc3VyZSh2b2lkKiBwdHIpIHsKICBzdHJ1Y3QgaGFuZGxlcl9jbG9zdXJlKiBjbG9zdXJlID0gcHRyOwogIEpTQ29udGV4dCogY3R4ID0gY2xvc3VyZS0+Y3R4OwogIGpzX2ZyZWUoY3R4LCBjbG9zdXJlKTsKfTsKCnN0YXRpYyBKU1ZhbHVlCm1ha2VfaGFuZGxlcihKU0NvbnRleHQqIGN0eCwgaW50IGZkLCBpbnQgZXZlbnRzLCBzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3QgaGFuZGxlcl9jbG9zdXJlKiBjbG9zdXJlOwoKICBpZighKGNsb3N1cmUgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKHN0cnVjdCBoYW5kbGVyX2Nsb3N1cmUpKSkpCiAgICByZXR1cm4gSlNfVGhyb3dPdXRPZk1lbW9yeShjdHgpOwoKICAqY2xvc3VyZSA9IChzdHJ1Y3QgaGFuZGxlcl9jbG9zdXJlKXtjdHgsIHdzaSwgbHdzX29wYXF1ZSh3c2ksIGN0eCl9OwoKICBjbG9zdXJlLT5vcGFxdWUtPnBvbGwgPSAoc3RydWN0IHBvbGxmZCl7ZmQsIGV2ZW50cywgMH07CgogIHJldHVybiBKU19OZXdDQ2xvc3VyZShjdHgsIG1pbm5ldF9pb19oYW5kbGVyLCAxLCBldmVudHMsIGNsb3N1cmUsIGZyZWVfaGFuZGxlcl9jbG9zdXJlKTsKfQoKLyp2b2lkCm1pbm5ldF9oYW5kbGVycyhKU0NvbnRleHQqIGN0eCwgc3RydWN0IGx3cyogd3NpLCBzdHJ1Y3QgbHdzX3BvbGxhcmdzKiBhcmdzLCBKU1ZhbHVlIG91dFsyXSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CiAgaW50IGV2ZW50cyA9IGFyZ3MtPmV2ZW50cyAmIChQT0xMSU4gfCBQT0xMT1VUKTsKICBhc3NlcnQob3BhcXVlKTsKCiAgaWYoIUpTX0lzT2JqZWN0KG9wYXF1ZS0+aGFuZGxlcnNbUkVBRF9IQU5ETEVSXSkgfHwgIUpTX0lzT2JqZWN0KG9wYXF1ZS0+aGFuZGxlcnNbV1JJVEVfSEFORExFUl0pKSB7CiAgICBKU1ZhbHVlIGZ1bmMgPSBtYWtlX2hhbmRsZXIoY3R4LCBhcmdzLT5mZCwgZXZlbnRzLCB3c2kpOwoKICAgIGZvcihpbnQgaSA9IFJFQURfSEFORExFUjsgaSA8PSBXUklURV9IQU5ETEVSOyBpKyspIG9wYXF1ZS0+aGFuZGxlcnNbaV0gPSBqc19mdW5jdGlvbl9iaW5kXzEoY3R4LCBmdW5jLCBKU19OZXdJbnQzMihjdHgsIGkpKTsKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGZ1bmMpOwogIH0KCiAgb3BhcXVlLT5wb2xsID0gKHN0cnVjdCBwb2xsZmQpe2FyZ3MtPmZkLCBldmVudHMsIDB9OwoKICBvdXRbMF0gPSAoZXZlbnRzICYgUE9MTElOKSA/IG9wYXF1ZS0+aGFuZGxlcnNbUkVBRF9IQU5ETEVSXSA6IEpTX05VTEw7CiAgb3V0WzFdID0gKGV2ZW50cyAmIFBPTExPVVQpID8gb3BhcXVlLT5oYW5kbGVyc1tXUklURV9IQU5ETEVSXSA6IEpTX05VTEw7Cn0KKi8Kdm9pZAptaW5uZXRfaGFuZGxlcnMoSlNDb250ZXh0KiBjdHgsIHN0cnVjdCBsd3MqIHdzaSwgc3RydWN0IGx3c19wb2xsYXJncyogYXJncywgSlNWYWx1ZSBvdXRbMl0pIHsKICBKU1ZhbHVlIGZ1bmM7CiAgaW50IGV2ZW50cyA9IGFyZ3MtPmV2ZW50cyAmIChQT0xMSU4gfCBQT0xMT1VUKTsKICAvLyBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqb3BhcXVlID1sd3Nfb3BhcXVlKHdzaSwgY3R4KTsKCiAgaWYoZXZlbnRzKQogICAgZnVuYyA9IG1ha2VfaGFuZGxlcihjdHgsIGFyZ3MtPmZkLCBldmVudHMsIHdzaSk7CgogIG91dFswXSA9IChldmVudHMgJiBQT0xMSU4pID8ganNfZnVuY3Rpb25fYmluZF8xKGN0eCwgZnVuYywgSlNfTmV3SW50MzIoY3R4LCBSRUFEX0hBTkRMRVIpKSA6IEpTX05VTEw7CiAgb3V0WzFdID0gKGV2ZW50cyAmIFBPTExPVVQpID8ganNfZnVuY3Rpb25fYmluZF8xKGN0eCwgZnVuYywgSlNfTmV3SW50MzIoY3R4LCBXUklURV9IQU5ETEVSKSkgOiBKU19OVUxMOwoKICBpZihldmVudHMpCiAgICBKU19GcmVlVmFsdWUoY3R4LCBmdW5jKTsKfQoKSlNWYWx1ZQptaW5uZXRfZW1pdF90aGlzKGNvbnN0IHN0cnVjdCB3c19jYWxsYmFjayogY2IsIEpTVmFsdWVDb25zdCB0aGlzX29iaiwgaW50IGFyZ2MsIEpTVmFsdWUqIGFyZ3YpIHsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoY2ItPmN0eCkgewogICAgc2l6ZV90IGxlbjsKICAgIGNvbnN0IGNoYXIqIHN0cjsKICAgIHN0ciA9IEpTX1RvQ1N0cmluZ0xlbihjYi0+Y3R4LCAmbGVuLCBjYi0+ZnVuY19vYmopOwogICAgLy8gcHJpbnRmKCJlbWl0ICVzIFslZF0gXCIlLipzXCJcbiIsIGNiLT5uYW1lLCBhcmdjLCAoaW50KSgoY29uc3QgY2hhciopbWVtY2hyKHN0ciwgJ3snLCBsZW4pIC0gc3RyKSwgc3RyKTsKICAgIEpTX0ZyZWVDU3RyaW5nKGNiLT5jdHgsIHN0cik7CgogICAgcmV0ID0gSlNfQ2FsbChjYi0+Y3R4LCBjYi0+ZnVuY19vYmosIHRoaXNfb2JqLCBhcmdjLCBhcmd2KTsKICB9CgogIGlmKEpTX0lzRXhjZXB0aW9uKHJldCkpCiAgICBtaW5uZXRfZXhjZXB0aW9uID0gVFJVRTsKCiAgcmV0dXJuIHJldDsKfQoKSlNWYWx1ZQptaW5uZXRfZW1pdChjb25zdCBzdHJ1Y3Qgd3NfY2FsbGJhY2sqIGNiLCBpbnQgYXJnYywgSlNWYWx1ZSogYXJndikgewogIHJldHVybiBtaW5uZXRfZW1pdF90aGlzKGNiLCBjYi0+dGhpc19vYmogLyogPyAqY2ItPnRoaXNfb2JqIDogSlNfTlVMTCovLCBhcmdjLCBhcmd2KTsKfQoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF9mdW5jc1tdID0gewogICAgSlNfQ0ZVTkNfREVGKCJzZXJ2ZXIiLCAxLCBtaW5uZXRfd3Nfc2VydmVyKSwKICAgIEpTX0NGVU5DX0RFRigiY2xpZW50IiwgMSwgbWlubmV0X3dzX2NsaWVudCksCiAgICBKU19DRlVOQ19ERUYoImZldGNoIiwgMSwgbWlubmV0X2ZldGNoKSwKICAgIEpTX0NGVU5DX1NQRUNJQUxfREVGKCJzb2NrZXQiLCAxLCBjb25zdHJ1Y3RvciwgbWlubmV0X3dzX2NvbnN0cnVjdG9yKSwKICAgIEpTX0NGVU5DX1NQRUNJQUxfREVGKCJ1cmwiLCAxLCBjb25zdHJ1Y3RvciwgbWlubmV0X3VybF9jb25zdHJ1Y3RvciksCiAgICAvLyBKU19DR0VUU0VUX0RFRigibG9nIiwgZ2V0X2xvZywgc2V0X2xvZyksCiAgICBKU19DRlVOQ19ERUYoInNldExvZyIsIDEsIG1pbm5ldF9zZXRfbG9nKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJNRVRIT0RfR0VUIiwgTUVUSE9EX0dFVCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTUVUSE9EX1BPU1QiLCBNRVRIT0RfUE9TVCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTUVUSE9EX09QVElPTlMiLCBNRVRIT0RfT1BUSU9OUywgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTUVUSE9EX1BVVCIsIE1FVEhPRF9QVVQsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIk1FVEhPRF9QQVRDSCIsIE1FVEhPRF9QQVRDSCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTUVUSE9EX0RFTEVURSIsIE1FVEhPRF9ERUxFVEUsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIk1FVEhPRF9DT05ORUNUIiwgTUVUSE9EX0NPTk5FQ1QsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIk1FVEhPRF9IRUFEIiwgTUVUSE9EX0hFQUQsIDApLAoKICAgIEpTX1BST1BfSU5UMzJfREVGKCJMTExfRVJSIiwgTExMX0VSUiwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTExMX1dBUk4iLCBMTExfV0FSTiwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTExMX05PVElDRSIsIExMTF9OT1RJQ0UsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkxMTF9JTkZPIiwgTExMX0lORk8sIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkxMTF9ERUJVRyIsIExMTF9ERUJVRywgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTExMX1BBUlNFUiIsIExMTF9QQVJTRVIsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkxMTF9IRUFERVIiLCBMTExfSEVBREVSLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJMTExfRVhUIiwgTExMX0VYVCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTExMX0NMSUVOVCIsIExMTF9DTElFTlQsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkxMTF9MQVRFTkNZIiwgTExMX0xBVEVOQ1ksIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkxMTF9VU0VSIiwgTExMX1VTRVIsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkxMTF9USFJFQUQiLCBMTExfVEhSRUFELCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJMTExfQUxMIiwgfigofjB1KSA8PCBMTExfQ09VTlQpLCAwKSwKfTsKCnZvaWQKdmFsdWVfZHVtcChKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbiwgSlNWYWx1ZUNvbnN0IGNvbnN0KiB2KSB7CiAgY29uc3QgY2hhciogc3RyID0gSlNfVG9DU3RyaW5nKGN0eCwgKnYpOwogIGx3c2xfdXNlcigiJXMgPSAnJXMnXG4iLCBuLCBzdHIpOwogIEpTX0ZyZWVDU3RyaW5nKGN0eCwgc3RyKTsKfQoKc3RhdGljIGludApqc19taW5uZXRfaW5pdChKU0NvbnRleHQqIGN0eCwgSlNNb2R1bGVEZWYqIG0pIHsKICAvKiAgbWlubmV0X2xvZ19jYiA9IEpTX1VOREVGSU5FRDsKICAgIG1pbm5ldF9sb2dfdGhpcyA9IEpTX1VOREVGSU5FRDsqLwoKICBKU19TZXRNb2R1bGVFeHBvcnRMaXN0KGN0eCwgbSwgbWlubmV0X2Z1bmNzLCBjb3VudG9mKG1pbm5ldF9mdW5jcykpOwoKICAvLyBBZGQgY2xhc3MgUmVzcG9uc2UKICBKU19OZXdDbGFzc0lEKCZtaW5uZXRfcmVzcG9uc2VfY2xhc3NfaWQpOwogIEpTX05ld0NsYXNzKEpTX0dldFJ1bnRpbWUoY3R4KSwgbWlubmV0X3Jlc3BvbnNlX2NsYXNzX2lkLCAmbWlubmV0X3Jlc3BvbnNlX2NsYXNzKTsKCiAgbWlubmV0X3Jlc3BvbnNlX3Byb3RvID0gSlNfTmV3T2JqZWN0KGN0eCk7CiAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBtaW5uZXRfcmVzcG9uc2VfcHJvdG8sIG1pbm5ldF9yZXNwb25zZV9wcm90b19mdW5jcywgbWlubmV0X3Jlc3BvbnNlX3Byb3RvX2Z1bmNzX3NpemUpOwogIEpTX1NldENsYXNzUHJvdG8oY3R4LCBtaW5uZXRfcmVzcG9uc2VfY2xhc3NfaWQsIG1pbm5ldF9yZXNwb25zZV9wcm90byk7CgogIG1pbm5ldF9yZXNwb25zZV9jdG9yID0gSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIG1pbm5ldF9yZXNwb25zZV9jb25zdHJ1Y3RvciwgIk1pbm5ldFJlc3BvbnNlIiwgMCwgSlNfQ0ZVTkNfY29uc3RydWN0b3IsIDApOwogIEpTX1NldENvbnN0cnVjdG9yKGN0eCwgbWlubmV0X3Jlc3BvbnNlX2N0b3IsIG1pbm5ldF9yZXNwb25zZV9wcm90byk7CgogIGlmKG0pCiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiUmVzcG9uc2UiLCBtaW5uZXRfcmVzcG9uc2VfY3Rvcik7CgogIC8vIEFkZCBjbGFzcyBSZXF1ZXN0CiAgSlNfTmV3Q2xhc3NJRCgmbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQpOwoKICBKU19OZXdDbGFzcyhKU19HZXRSdW50aW1lKGN0eCksIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkLCAmbWlubmV0X3JlcXVlc3RfY2xhc3MpOwogIG1pbm5ldF9yZXF1ZXN0X3Byb3RvID0gSlNfTmV3T2JqZWN0KGN0eCk7CiAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3MsIG1pbm5ldF9yZXF1ZXN0X3Byb3RvX2Z1bmNzX3NpemUpOwogIEpTX1NldENsYXNzUHJvdG8oY3R4LCBtaW5uZXRfcmVxdWVzdF9jbGFzc19pZCwgbWlubmV0X3JlcXVlc3RfcHJvdG8pOwoKICBtaW5uZXRfcmVxdWVzdF9jdG9yID0gSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIG1pbm5ldF9yZXF1ZXN0X2NvbnN0cnVjdG9yLCAiTWlubmV0UmVxdWVzdCIsIDAsIEpTX0NGVU5DX2NvbnN0cnVjdG9yLCAwKTsKICBKU19TZXRDb25zdHJ1Y3RvcihjdHgsIG1pbm5ldF9yZXF1ZXN0X2N0b3IsIG1pbm5ldF9yZXF1ZXN0X3Byb3RvKTsKCiAgaWYobSkKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJSZXF1ZXN0IiwgbWlubmV0X3JlcXVlc3RfY3Rvcik7CgogIC8vIEFkZCBjbGFzcyBTdHJlYW0KICBKU19OZXdDbGFzc0lEKCZtaW5uZXRfc3RyZWFtX2NsYXNzX2lkKTsKCiAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBtaW5uZXRfc3RyZWFtX2NsYXNzX2lkLCAmbWlubmV0X3N0cmVhbV9jbGFzcyk7CiAgbWlubmV0X3N0cmVhbV9wcm90byA9IEpTX05ld09iamVjdChjdHgpOwogIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgbWlubmV0X3N0cmVhbV9wcm90bywgbWlubmV0X3N0cmVhbV9wcm90b19mdW5jcywgbWlubmV0X3N0cmVhbV9wcm90b19mdW5jc19zaXplKTsKICBKU19TZXRDbGFzc1Byb3RvKGN0eCwgbWlubmV0X3N0cmVhbV9jbGFzc19pZCwgbWlubmV0X3N0cmVhbV9wcm90byk7CgogIG1pbm5ldF9zdHJlYW1fY3RvciA9IEpTX05ld0NGdW5jdGlvbjIoY3R4LCBtaW5uZXRfc3RyZWFtX2NvbnN0cnVjdG9yLCAiTWlubmV0U3RyZWFtIiwgMCwgSlNfQ0ZVTkNfY29uc3RydWN0b3IsIDApOwogIEpTX1NldENvbnN0cnVjdG9yKGN0eCwgbWlubmV0X3N0cmVhbV9jdG9yLCBtaW5uZXRfc3RyZWFtX3Byb3RvKTsKCiAgaWYobSkKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJTdHJlYW0iLCBtaW5uZXRfc3RyZWFtX2N0b3IpOwoKICAvLyBBZGQgY2xhc3MgVVJMCiAgbWlubmV0X3VybF9pbml0KGN0eCwgbSk7CgogIC8vIEFkZCBjbGFzcyBXZWJTb2NrZXQKICBKU19OZXdDbGFzc0lEKCZtaW5uZXRfd3NfY2xhc3NfaWQpOwogIEpTX05ld0NsYXNzKEpTX0dldFJ1bnRpbWUoY3R4KSwgbWlubmV0X3dzX2NsYXNzX2lkLCAmbWlubmV0X3dzX2NsYXNzKTsKICBtaW5uZXRfd3NfcHJvdG8gPSBKU19OZXdPYmplY3QoY3R4KTsKICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIG1pbm5ldF93c19wcm90bywgbWlubmV0X3dzX3Byb3RvX2Z1bmNzLCBtaW5uZXRfd3NfcHJvdG9fZnVuY3Nfc2l6ZSk7CiAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19wcm90b19kZWZzLCBtaW5uZXRfd3NfcHJvdG9fZGVmc19zaXplKTsKCiAgbWlubmV0X3dzX2N0b3IgPSBKU19OZXdDRnVuY3Rpb24yKGN0eCwgbWlubmV0X3dzX2NvbnN0cnVjdG9yLCAiTWlubmV0V2Vic29ja2V0IiwgMCwgSlNfQ0ZVTkNfY29uc3RydWN0b3IsIDApOwogIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgbWlubmV0X3dzX2N0b3IsIG1pbm5ldF93c19zdGF0aWNfZnVuY3MsIG1pbm5ldF93c19zdGF0aWNfZnVuY3Nfc2l6ZSk7CgogIEpTX1NldENvbnN0cnVjdG9yKGN0eCwgbWlubmV0X3dzX2N0b3IsIG1pbm5ldF93c19wcm90byk7CgogIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgbWlubmV0X3dzX2N0b3IsIG1pbm5ldF93c19wcm90b19kZWZzLCBtaW5uZXRfd3NfcHJvdG9fZGVmc19zaXplKTsKCiAgaWYobSkKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJTb2NrZXQiLCBtaW5uZXRfd3NfY3Rvcik7CgogIHsKICAgIEpTVmFsdWUgbWlubmV0X2RlZmF1bHQgPSBKU19OZXdPYmplY3QoY3R4KTsKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgbWlubmV0X2RlZmF1bHQsIG1pbm5ldF9mdW5jcywgY291bnRvZihtaW5uZXRfZnVuY3MpKTsKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJkZWZhdWx0IiwgbWlubmV0X2RlZmF1bHQpOwogIH0KCiAgcmV0dXJuIDA7Cn0KCl9fYXR0cmlidXRlX18oKHZpc2liaWxpdHkoImRlZmF1bHQiKSkpIEpTTW9kdWxlRGVmKgpKU19JTklUX01PRFVMRShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpIHsKICBKU01vZHVsZURlZiogbTsKICBtID0gSlNfTmV3Q01vZHVsZShjdHgsIG1vZHVsZV9uYW1lLCBqc19taW5uZXRfaW5pdCk7CiAgaWYoIW0pCiAgICByZXR1cm4gTlVMTDsKICBKU19BZGRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiUmVzcG9uc2UiKTsKICBKU19BZGRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiUmVxdWVzdCIpOwogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJTdHJlYW0iKTsKICBKU19BZGRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiU29ja2V0Iik7CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIlVSTCIpOwogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJkZWZhdWx0Iik7CiAgSlNfQWRkTW9kdWxlRXhwb3J0TGlzdChjdHgsIG0sIG1pbm5ldF9mdW5jcywgY291bnRvZihtaW5uZXRfZnVuY3MpKTsKCiAgbWlubmV0X2xvZ19jdHggPSBjdHg7CgogIGx3c19zZXRfbG9nX2xldmVsKG1pbm5ldF9sb2dfbGV2ZWwsIGx3c19sb2dfY2FsbGJhY2spOwoKICByZXR1cm4gbTsKfQoKY29uc3QgY2hhcioKbHdzX2NhbGxiYWNrX25hbWUoaW50IHJlYXNvbikgewogIHJldHVybiAoKGNvbnN0IGNoYXIqIGNvbnN0W10pewogICAgICAiTFdTX0NBTExCQUNLX0VTVEFCTElTSEVEIiwKICAgICAgIkxXU19DQUxMQkFDS19DTElFTlRfQ09OTkVDVElPTl9FUlJPUiIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfQ0xJRU5UX0ZJTFRFUl9QUkVfRVNUQUJMSVNIIiwKICAgICAgIkxXU19DQUxMQkFDS19DTElFTlRfRVNUQUJMSVNIRUQiLAogICAgICAiTFdTX0NBTExCQUNLX0NMT1NFRCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfQ0xPU0VEX0hUVFAiLAogICAgICAiTFdTX0NBTExCQUNLX1JFQ0VJVkUiLAogICAgICAiTFdTX0NBTExCQUNLX1JFQ0VJVkVfUE9ORyIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfQ0xJRU5UX1JFQ0VJVkUiLAogICAgICAiTFdTX0NBTExCQUNLX0NMSUVOVF9SRUNFSVZFX1BPTkciLAogICAgICAiTFdTX0NBTExCQUNLX0NMSUVOVF9XUklURUFCTEUiLAogICAgICAiTFdTX0NBTExCQUNLX1NFUlZFUl9XUklURUFCTEUiLAogICAgICAiTFdTX0NBTExCQUNLX0hUVFAiLAogICAgICAiTFdTX0NBTExCQUNLX0hUVFBfQk9EWSIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfSFRUUF9CT0RZX0NPTVBMRVRJT04iLAogICAgICAiTFdTX0NBTExCQUNLX0hUVFBfRklMRV9DT01QTEVUSU9OIiwKICAgICAgIkxXU19DQUxMQkFDS19IVFRQX1dSSVRFQUJMRSIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfRklMVEVSX05FVFdPUktfQ09OTkVDVElPTiIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfRklMVEVSX0hUVFBfQ09OTkVDVElPTiIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfU0VSVkVSX05FV19DTElFTlRfSU5TVEFOVElBVEVEIiwKICAgICAgIkxXU19DQUxMQkFDS19GSUxURVJfUFJPVE9DT0xfQ09OTkVDVElPTiIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX0NMSUVOVF9WRVJJRllfQ0VSVFMiLAogICAgICAiTFdTX0NBTExCQUNLX09QRU5TU0xfTE9BRF9FWFRSQV9TRVJWRVJfVkVSSUZZX0NFUlRTIiwKICAgICAgIkxXU19DQUxMQkFDS19PUEVOU1NMX1BFUkZPUk1fQ0xJRU5UX0NFUlRfVkVSSUZJQ0FUSU9OIiwKICAgICAgIkxXU19DQUxMQkFDS19DTElFTlRfQVBQRU5EX0hBTkRTSEFLRV9IRUFERVIiLAogICAgICAiTFdTX0NBTExCQUNLX0NPTkZJUk1fRVhURU5TSU9OX09LQVkiLAogICAgICAiTFdTX0NBTExCQUNLX0NMSUVOVF9DT05GSVJNX0VYVEVOU0lPTl9TVVBQT1JURUQiLAogICAgICAiTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQiLAogICAgICAiTFdTX0NBTExCQUNLX1BST1RPQ09MX0RFU1RST1kiLAogICAgICAiTFdTX0NBTExCQUNLX1dTSV9DUkVBVEUiLAogICAgICAiTFdTX0NBTExCQUNLX1dTSV9ERVNUUk9ZIiwKICAgICAgIkxXU19DQUxMQkFDS19HRVRfVEhSRUFEX0lEIiwKICAgICAgIkxXU19DQUxMQkFDS19BRERfUE9MTF9GRCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfREVMX1BPTExfRkQiLAogICAgICAiTFdTX0NBTExCQUNLX0NIQU5HRV9NT0RFX1BPTExfRkQiLAogICAgICAiTFdTX0NBTExCQUNLX0xPQ0tfUE9MTCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfVU5MT0NLX1BPTEwiLAogICAgICAiTFdTX0NBTExCQUNLX09QRU5TU0xfQ09OVEVYVF9SRVFVSVJFU19QUklWQVRFX0tFWSIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfV1NfUEVFUl9JTklUSUFURURfQ0xPU0UiLAogICAgICAiTFdTX0NBTExCQUNLX1dTX0VYVF9ERUZBVUxUUyIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfQ0dJIiwKICAgICAgIkxXU19DQUxMQkFDS19DR0lfVEVSTUlOQVRFRCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfQ0dJX1NURElOX0RBVEEiLAogICAgICAiTFdTX0NBTExCQUNLX0NHSV9TVERJTl9DT01QTEVURUQiLAogICAgICAiTFdTX0NBTExCQUNLX0VTVEFCTElTSEVEX0NMSUVOVF9IVFRQIiwKICAgICAgIkxXU19DQUxMQkFDS19DTE9TRURfQ0xJRU5UX0hUVFAiLAogICAgICAiTFdTX0NBTExCQUNLX1JFQ0VJVkVfQ0xJRU5UX0hUVFAiLAogICAgICAiTFdTX0NBTExCQUNLX0NPTVBMRVRFRF9DTElFTlRfSFRUUCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkVDRUlWRV9DTElFTlRfSFRUUF9SRUFEIiwKICAgICAgIkxXU19DQUxMQkFDS19IVFRQX0JJTkRfUFJPVE9DT0wiLAogICAgICAiTFdTX0NBTExCQUNLX0hUVFBfRFJPUF9QUk9UT0NPTCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfQ0hFQ0tfQUNDRVNTX1JJR0hUUyIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUFJPQ0VTU19IVE1MIiwKICAgICAgIkxXU19DQUxMQkFDS19BRERfSEVBREVSUyIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfU0VTU0lPTl9JTkZPIiwKICAgICAgIkxXU19DQUxMQkFDS19HU19FVkVOVCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfSFRUUF9QTU8iLAogICAgICAiTFdTX0NBTExCQUNLX0NMSUVOVF9IVFRQX1dSSVRFQUJMRSIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9QRVJGT1JNX1NFUlZFUl9DRVJUX1ZFUklGSUNBVElPTiIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkFXX1JYIiwKICAgICAgIkxXU19DQUxMQkFDS19SQVdfQ0xPU0UiLAogICAgICAiTFdTX0NBTExCQUNLX1JBV19XUklURUFCTEUiLAogICAgICAiTFdTX0NBTExCQUNLX1JBV19BRE9QVCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkFXX0FET1BUX0ZJTEUiLAogICAgICAiTFdTX0NBTExCQUNLX1JBV19SWF9GSUxFIiwKICAgICAgIkxXU19DQUxMQkFDS19SQVdfV1JJVEVBQkxFX0ZJTEUiLAogICAgICAiTFdTX0NBTExCQUNLX1JBV19DTE9TRV9GSUxFIiwKICAgICAgIkxXU19DQUxMQkFDS19TU0xfSU5GTyIsCiAgICAgIDAsCiAgICAgICJMV1NfQ0FMTEJBQ0tfQ0hJTERfQ0xPU0lORyIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfQ0dJX1BST0NFU1NfQVRUQUNIIiwKICAgICAgIkxXU19DQUxMQkFDS19FVkVOVF9XQUlUX0NBTkNFTExFRCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfVkhPU1RfQ0VSVF9BR0lORyIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfVElNRVIiLAogICAgICAiTFdTX0NBTExCQUNLX1ZIT1NUX0NFUlRfVVBEQVRFIiwKICAgICAgIkxXU19DQUxMQkFDS19DTElFTlRfQ0xPU0VEIiwKICAgICAgIkxXU19DQUxMQkFDS19DTElFTlRfSFRUUF9EUk9QX1BST1RPQ09MIiwKICAgICAgIkxXU19DQUxMQkFDS19XU19TRVJWRVJfQklORF9QUk9UT0NPTCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfV1NfU0VSVkVSX0RST1BfUFJPVE9DT0wiLAogICAgICAiTFdTX0NBTExCQUNLX1dTX0NMSUVOVF9CSU5EX1BST1RPQ09MIiwKICAgICAgIkxXU19DQUxMQkFDS19XU19DTElFTlRfRFJPUF9QUk9UT0NPTCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkFXX1NLVF9CSU5EX1BST1RPQ09MIiwKICAgICAgIkxXU19DQUxMQkFDS19SQVdfU0tUX0RST1BfUFJPVE9DT0wiLAogICAgICAiTFdTX0NBTExCQUNLX1JBV19GSUxFX0JJTkRfUFJPVE9DT0wiLAogICAgICAiTFdTX0NBTExCQUNLX1JBV19GSUxFX0RST1BfUFJPVE9DT0wiLAogICAgICAiTFdTX0NBTExCQUNLX0NMSUVOVF9IVFRQX0JJTkRfUFJPVE9DT0wiLAogICAgICAiTFdTX0NBTExCQUNLX0hUVFBfQ09ORklSTV9VUEdSQURFIiwKICAgICAgMCwKICAgICAgMCwKICAgICAgIkxXU19DQUxMQkFDS19SQVdfUFJPWFlfQ0xJX1JYIiwKICAgICAgIkxXU19DQUxMQkFDS19SQVdfUFJPWFlfU1JWX1JYIiwKICAgICAgIkxXU19DQUxMQkFDS19SQVdfUFJPWFlfQ0xJX0NMT1NFIiwKICAgICAgIkxXU19DQUxMQkFDS19SQVdfUFJPWFlfU1JWX0NMT1NFIiwKICAgICAgIkxXU19DQUxMQkFDS19SQVdfUFJPWFlfQ0xJX1dSSVRFQUJMRSIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkFXX1BST1hZX1NSVl9XUklURUFCTEUiLAogICAgICAiTFdTX0NBTExCQUNLX1JBV19QUk9YWV9DTElfQURPUFQiLAogICAgICAiTFdTX0NBTExCQUNLX1JBV19QUk9YWV9TUlZfQURPUFQiLAogICAgICAiTFdTX0NBTExCQUNLX1JBV19QUk9YWV9DTElfQklORF9QUk9UT0NPTCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkFXX1BST1hZX1NSVl9CSU5EX1BST1RPQ09MIiwKICAgICAgIkxXU19DQUxMQkFDS19SQVdfUFJPWFlfQ0xJX0RST1BfUFJPVE9DT0wiLAogICAgICAiTFdTX0NBTExCQUNLX1JBV19QUk9YWV9TUlZfRFJPUF9QUk9UT0NPTCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkFXX0NPTk5FQ1RFRCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfVkVSSUZZX0JBU0lDX0FVVEhPUklaQVRJT04iLAogICAgICAiTFdTX0NBTExCQUNLX1dTSV9UWF9DUkVESVRfR0VUIiwKICAgICAgIkxXU19DQUxMQkFDS19DTElFTlRfSFRUUF9SRURJUkVDVCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfQ09OTkVDVElORyIsCiAgfSlbcmVhc29uXTsKfQoAAAAAAAAAAIBRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQMAAAAAAAAhAwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet.c.orig",
			"settings":
			{
				"buffer_size": 20823,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/client.js",
			"settings":
			{
				"buffer_size": 1735,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					62,
					1,
					"insert",
					{
						"characters": "console.log"
					},
					"CwAAAEgCAAAAAAAASQIAAAAAAAAAAAAASQIAAAAAAABKAgAAAAAAAAAAAABKAgAAAAAAAEsCAAAAAAAAAAAAAEsCAAAAAAAATAIAAAAAAAAAAAAATAIAAAAAAABNAgAAAAAAAAAAAABNAgAAAAAAAE4CAAAAAAAAAAAAAE4CAAAAAAAATwIAAAAAAAAAAAAATwIAAAAAAABQAgAAAAAAAAAAAABQAgAAAAAAAFECAAAAAAAAAAAAAFECAAAAAAAAUgIAAAAAAAAAAAAAUgIAAAAAAABTAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAIAAAAAAABIAgAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFMCAAAAAAAAVQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwIAAAAAAABTAgAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAFQCAAAAAAAAVgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAIAAAAAAABUAgAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "Client"
					},
					"BgAAAFUCAAAAAAAAVgIAAAAAAAAAAAAAVgIAAAAAAABXAgAAAAAAAAAAAABXAgAAAAAAAFgCAAAAAAAAAAAAAFgCAAAAAAAAWQIAAAAAAAAAAAAAWQIAAAAAAABaAgAAAAAAAAAAAABaAgAAAAAAAFsCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQIAAAAAAABVAgAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFwCAAAAAAAAXQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAIAAAAAAABcAgAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAF0CAAAAAAAAXwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQIAAAAAAABdAgAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "url,s"
					},
					"BQAAAF4CAAAAAAAAXwIAAAAAAAAAAAAAXwIAAAAAAABgAgAAAAAAAAAAAABgAgAAAAAAAGECAAAAAAAAAAAAAGECAAAAAAAAYgIAAAAAAAAAAAAAYgIAAAAAAABjAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgIAAAAAAABeAgAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"left_delete",
					null,
					"AQAAAGICAAAAAAAAYgIAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAYwIAAAAAAABjAgAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "options,debug"
					},
					"DQAAAGICAAAAAAAAYwIAAAAAAAAAAAAAYwIAAAAAAABkAgAAAAAAAAAAAABkAgAAAAAAAGUCAAAAAAAAAAAAAGUCAAAAAAAAZgIAAAAAAAAAAAAAZgIAAAAAAABnAgAAAAAAAAAAAABnAgAAAAAAAGgCAAAAAAAAAAAAAGgCAAAAAAAAaQIAAAAAAAAAAAAAaQIAAAAAAABqAgAAAAAAAAAAAABqAgAAAAAAAGsCAAAAAAAAAAAAAGsCAAAAAAAAbAIAAAAAAAAAAAAAbAIAAAAAAABtAgAAAAAAAAAAAABtAgAAAAAAAG4CAAAAAAAAAAAAAG4CAAAAAAAAbwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgIAAAAAAABiAgAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHECAAAAAAAAcgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQIAAAAAAABxAgAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHICAAAAAAAAcwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgIAAAAAAAByAgAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"cut",
					null,
					"AQAAAEgCAAAAAAAASAIAAAAAAAArAAAAY29uc29sZS5sb2coJ0NsaWVudCcse3VybCxvcHRpb25zLGRlYnVnfSk7Cg",
					"AQAAAAAAAAABAAAAcwIAAAAAAABIAgAAAAAAAAAAAAAAAAAA"
				],
				[
					86,
					1,
					"paste",
					null,
					"AQAAAEABAAAAAAAAawEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAEAAAAAAABAAQAAAAAAAAAAAAAAAAAA"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAEABAAAAAAAAQQEAAAAAAAAAAAAAQQEAAAAAAABCAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAEAAAAAAABAAQAAAAAAAAAAAAAAAAAA"
				],
				[
					95,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADFBgAAaW1wb3J0IHsgZXJyLCBleGl0LCBwdXRzIH0gZnJvbSAnc3RkJzsKaW1wb3J0IHsgc2V0UmVhZEhhbmRsZXIsIHNldFdyaXRlSGFuZGxlciB9IGZyb20gJ29zJzsKaW1wb3J0IHsgY2xpZW50LCBMTExfQ0xJRU5ULCBMTExfVVNFUiwgVVJMIH0gZnJvbSAnbmV0JzsKaW1wb3J0IHsgSW5pdCB9IGZyb20gJy4vbG9nLmpzJzsKaW1wb3J0IHsgZXNjYXBlLCBhYmJyZXZpYXRlIH0gZnJvbSAnLi9jb21tb24uanMnOwoKY29uc3QgY29ubmVjdGlvbnMgPSBuZXcgU2V0KCk7CgpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDbGllbnQodXJsLCBvcHRpb25zLCBkZWJ1ZykgewovL2NvbnNvbGUubG9nKCdDbGllbnQnLHt1cmwsb3B0aW9ucyxkZWJ1Z30pOwogIEluaXQoJ0NsaWVudCcsIExMTF9DTElFTlQgfCAoZGVidWcgPyBMTExfVVNFUiA6IDApKTsKCiAgY29uc3QgeyBvbkNvbm5lY3QsIG9uQ2xvc2UsIG9uRXJyb3IsIG9uSHR0cCwgb25GZCwgb25NZXNzYWdlLCAuLi5vcHRzIH0gPSBvcHRpb25zOwoKICBjb25zdCBzc2xDZXJ0ID0gJ2xvY2FsaG9zdC5jcnQnLAogICAgc3NsUHJpdmF0ZUtleSA9ICdsb2NhbGhvc3Qua2V5JzsKCiAgZXJyLnB1dHMoYENsaWVudCBjb25uZWN0aW5nIHRvICR7dXJsfSAuLi5cbmApOwoKICByZXR1cm4gY2xpZW50KHVybCwgewogICAgc3NsQ2VydCwKICAgIHNzbFByaXZhdGVLZXksCiAgICAuLi5vcHRzLAogICAgb25Db25uZWN0KHdzLCByZXEpIHsKICAgICAgY29ubmVjdGlvbnMuYWRkKHdzKTsKICAgICAgb25Db25uZWN0ID8gb25Db25uZWN0KHdzLCByZXEpIDogY29uc29sZS5sb2coJ29uQ29ubmVjdCcsIHdzLCByZXEpOwogICAgfSwKICAgIG9uQ2xvc2Uod3MsIHJlYXNvbikgewogICAgICBjb25uZWN0aW9ucy5kZWxldGUod3MpOwoKICAgICAgb25DbG9zZSA/IG9uQ2xvc2Uod3MsIHJlYXNvbikgOiAoY29uc29sZS5sb2coJ29uQ2xvc2UnLCB7IHdzLCByZWFzb24gfSksIGV4aXQocmVhc29uICE9IDEwMDAgPyAxIDogMCkpOwogICAgfSwKICAgIG9uRXJyb3Iod3MsIGVycm9yKSB7CiAgICAgIGNvbm5lY3Rpb25zLmRlbGV0ZSh3cyk7CgogICAgICBvbkVycm9yID8gb25FcnJvcih3cywgZXJyb3IpIDogKGNvbnNvbGUubG9nKCdvbkVycm9yJywgeyB3cywgZXJyb3IgfSksIGV4aXQoZXJyb3IpKTsKICAgIH0sCiAgICBvbkh0dHAocmVxLCByc3ApIHsKICAgICAgY29uc3QgeyB1cmwsIG1ldGhvZCwgaGVhZGVycyB9ID0gcmVxOwoKICAgICAgcmV0dXJuIG9uSHR0cCA/IG9uSHR0cChyZXEsIHJzcCkgOiAoY29uc29sZS5sb2coJ1x4MWJbMzg7NTs4Mm1vbkh0dHBceDFiWzBtJywgeyB1cmwsIG1ldGhvZCwgaGVhZGVycyB9KSwgcnNwKTsKICAgIH0sCiAgICBvbkZkKGZkLCByZCwgd3IpIHsKICAgICAgc2V0UmVhZEhhbmRsZXIoZmQsIHJkKTsKICAgICAgc2V0V3JpdGVIYW5kbGVyKGZkLCB3cik7CiAgICB9LAogICAgb25NZXNzYWdlKHdzLCBtc2cpIHsKICAgICAgb25NZXNzYWdlID8gb25NZXNzYWdlKHdzLCBtc2cpIDogKGNvbnNvbGUubG9nKCdvbk1lc3NhZ2UnLCBjb25zb2xlLmNvbmZpZyh7IG1heFN0cmluZ0xlbjogMTAwIH0pLCB7IHdzLCBtc2cgfSksIHB1dHMoZXNjYXBlKGFiYnJldmlhdGUobXNnKSkgKyAnXG4nKSk7CiAgICB9CiAgfSk7Cn0KCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShDbGllbnQsICdjb25uZWN0aW9ucycsIHsKICBnZXQoKSB7CiAgICByZXR1cm4gWy4uLmNvbm5lY3Rpb25zXTsKICB9Cn0pOwoAAAAAAAAAAMUGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgEAAAAAAABCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADFBgAAaW1wb3J0IHsgZXJyLCBleGl0LCBwdXRzIH0gZnJvbSAnc3RkJzsKaW1wb3J0IHsgc2V0UmVhZEhhbmRsZXIsIHNldFdyaXRlSGFuZGxlciB9IGZyb20gJ29zJzsKaW1wb3J0IHsgY2xpZW50LCBMTExfQ0xJRU5ULCBMTExfVVNFUiwgVVJMIH0gZnJvbSAnbmV0JzsKaW1wb3J0IHsgSW5pdCB9IGZyb20gJy4vbG9nLmpzJzsKaW1wb3J0IHsgZXNjYXBlLCBhYmJyZXZpYXRlIH0gZnJvbSAnLi9jb21tb24uanMnOwoKY29uc3QgY29ubmVjdGlvbnMgPSBuZXcgU2V0KCk7CgpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDbGllbnQodXJsLCBvcHRpb25zLCBkZWJ1ZykgewovL2NvbnNvbGUubG9nKCdDbGllbnQnLHt1cmwsb3B0aW9ucyxkZWJ1Z30pOwogIEluaXQoJ0NsaWVudCcsIExMTF9DTElFTlQgfCAoZGVidWcgPyBMTExfVVNFUiA6IDApKTsKCiAgY29uc3QgeyBvbkNvbm5lY3QsIG9uQ2xvc2UsIG9uRXJyb3IsIG9uSHR0cCwgb25GZCwgb25NZXNzYWdlLCAuLi5vcHRzIH0gPSBvcHRpb25zOwoKICBjb25zdCBzc2xDZXJ0ID0gJ2xvY2FsaG9zdC5jcnQnLAogICAgc3NsUHJpdmF0ZUtleSA9ICdsb2NhbGhvc3Qua2V5JzsKCiAgZXJyLnB1dHMoYENsaWVudCBjb25uZWN0aW5nIHRvICR7dXJsfSAuLi5cbmApOwoKICByZXR1cm4gY2xpZW50KHVybCwgewogICAgc3NsQ2VydCwKICAgIHNzbFByaXZhdGVLZXksCiAgICAuLi5vcHRzLAogICAgb25Db25uZWN0KHdzLCByZXEpIHsKICAgICAgY29ubmVjdGlvbnMuYWRkKHdzKTsKICAgICAgb25Db25uZWN0ID8gb25Db25uZWN0KHdzLCByZXEpIDogY29uc29sZS5sb2coJ29uQ29ubmVjdCcsIHdzLCByZXEpOwogICAgfSwKICAgIG9uQ2xvc2Uod3MsIHJlYXNvbikgewogICAgICBjb25uZWN0aW9ucy5kZWxldGUod3MpOwoKICAgICAgb25DbG9zZSA/IG9uQ2xvc2Uod3MsIHJlYXNvbikgOiAoY29uc29sZS5sb2coJ29uQ2xvc2UnLCB7IHdzLCByZWFzb24gfSksIGV4aXQocmVhc29uICE9IDEwMDAgPyAxIDogMCkpOwogICAgfSwKICAgIG9uRXJyb3Iod3MsIGVycm9yKSB7CiAgICAgIGNvbm5lY3Rpb25zLmRlbGV0ZSh3cyk7CgogICAgICBvbkVycm9yID8gb25FcnJvcih3cywgZXJyb3IpIDogKGNvbnNvbGUubG9nKCdvbkVycm9yJywgeyB3cywgZXJyb3IgfSksIGV4aXQoZXJyb3IpKTsKICAgIH0sCiAgICBvbkh0dHAocmVxLCByc3ApIHsKICAgICAgY29uc3QgeyB1cmwsIG1ldGhvZCwgaGVhZGVycyB9ID0gcmVxOwoKICAgICAgcmV0dXJuIG9uSHR0cCA/IG9uSHR0cChyZXEsIHJzcCkgOiAoY29uc29sZS5sb2coJ1x4MWJbMzg7NTs4Mm1vbkh0dHBceDFiWzBtJywgeyB1cmwsIG1ldGhvZCwgaGVhZGVycyB9KSwgcnNwKTsKICAgIH0sCiAgICBvbkZkKGZkLCByZCwgd3IpIHsKICAgICAgc2V0UmVhZEhhbmRsZXIoZmQsIHJkKTsKICAgICAgc2V0V3JpdGVIYW5kbGVyKGZkLCB3cik7CiAgICB9LAogICAgb25NZXNzYWdlKHdzLCBtc2cpIHsKICAgICAgb25NZXNzYWdlID8gb25NZXNzYWdlKHdzLCBtc2cpIDogKGNvbnNvbGUubG9nKCdvbk1lc3NhZ2UnLCBjb25zb2xlLmNvbmZpZyh7IG1heFN0cmluZ0xlbjogMTAwIH0pLCB7IHdzLCBtc2cgfSksIHB1dHMoZXNjYXBlKGFiYnJldmlhdGUobXNnKSkgKyAnXG4nKSk7CiAgICB9CiAgfSk7Cn0KCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShDbGllbnQsICdjb25uZWN0aW9ucycsIHsKICBnZXQoKSB7CiAgICByZXR1cm4gWy4uLmNvbm5lY3Rpb25zXTsKICB9Cn0pOwoAAAAAAAAAAMcGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgEAAAAAAABCAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-websocket.h",
			"settings":
			{
				"buffer_size": 2717,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					44,
					1,
					"cut",
					null,
					"AQAAAB8FAAAAAAAAHwUAAAAAAACBAQAACnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgpsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWU7CgogIG9wYXF1ZSA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKSk7CiAgb3BhcXVlLT5zZXJpYWwgPSArK3dzX3NlcmlhbDsKICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CgogIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIG9wYXF1ZSk7CiAgcmV0dXJuIG9wYXF1ZTsKfQ",
					"AQAAAAAAAAABAAAAHwUAAAAAAACgBgAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					2,
					"paste",
					null,
					"AgAAAB8FAAAAAAAAoAYAAAAAAAAAAAAAoAYAAAAAAAAhCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwUAAAAAAAAfBQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "session"
					},
					"CAAAANAGAAAAAAAA0QYAAAAAAAAAAAAA0QYAAAAAAADRBgAAAAAAAAYAAABvcGFxdWXRBgAAAAAAANIGAAAAAAAAAAAAANIGAAAAAAAA0wYAAAAAAAAAAAAA0wYAAAAAAADUBgAAAAAAAAAAAADUBgAAAAAAANUGAAAAAAAAAAAAANUGAAAAAAAA1gYAAAAAAAAAAAAA1gYAAAAAAADXBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AYAAAAAAADWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "session_data*"
					},
					"DgAAALYGAAAAAAAAtwYAAAAAAAAAAAAAtwYAAAAAAAC3BgAAAAAAABUAAAB3c2lfb3BhcXVlX3VzZXJfZGF0YSq3BgAAAAAAALgGAAAAAAAAAAAAALgGAAAAAAAAuQYAAAAAAAAAAAAAuQYAAAAAAAC6BgAAAAAAAAAAAAC6BgAAAAAAALsGAAAAAAAAAAAAALsGAAAAAAAAvAYAAAAAAAAAAAAAvAYAAAAAAAC9BgAAAAAAAAAAAAC9BgAAAAAAAL4GAAAAAAAAAAAAAL4GAAAAAAAAvwYAAAAAAAAAAAAAvwYAAAAAAADABgAAAAAAAAAAAADABgAAAAAAAMEGAAAAAAAAAAAAAMEGAAAAAAAAwgYAAAAAAAAAAAAAwgYAAAAAAADDBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgYAAAAAAADLBgAAAAAAAP///////+9/"
				],
				[
					61,
					1,
					"left_delete",
					null,
					"AQAAAN8GAAAAAAAA3wYAAAAAAAAQAAAALCBKU0NvbnRleHQqIGN0eA",
					"AQAAAAAAAAABAAAA3wYAAAAAAADvBgAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADkHAAAAAAAAOgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQcAAAAAAAA5BwAAAAAAAP///////+9/"
				],
				[
					66,
					1,
					"left_delete",
					null,
					"AQAAAEwHAAAAAAAATAcAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAATQcAAAAAAABNBwAAAAAAAAAAAAAAYH1A"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": " ->sess;"
					},
					"CAAAAEwHAAAAAAAATQcAAAAAAAAAAAAATQcAAAAAAABOBwAAAAAAAAAAAABOBwAAAAAAAE8HAAAAAAAAAAAAAE8HAAAAAAAAUAcAAAAAAAAAAAAAUAcAAAAAAABRBwAAAAAAAAAAAABRBwAAAAAAAFIHAAAAAAAAAAAAAFIHAAAAAAAAUwcAAAAAAAAAAAAAUwcAAAAAAABUBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAcAAAAAAABMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"left_delete",
					null,
					"AQAAAFUHAAAAAAAAVQcAAAAAAACrAAAACiAgb3BhcXVlID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEpKTsKICBvcGFxdWUtPnNlcmlhbCA9ICsrd3Nfc2VyaWFsOwogIG9wYXF1ZS0+c3RhdHVzID0gQ09OTkVDVElORzsKCiAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgb3BhcXVlKTsK",
					"AQAAAAAAAAABAAAAVQcAAAAAAAAACAAAAAAAAAAAAAAAAAAA"
				],
				[
					73,
					5,
					"left_delete",
					null,
					"BQAAAGMHAAAAAAAAYwcAAAAAAAABAAAAZWIHAAAAAAAAYgcAAAAAAAABAAAAdWEHAAAAAAAAYQcAAAAAAAABAAAAcWAHAAAAAAAAYAcAAAAAAAABAAAAYV8HAAAAAAAAXwcAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAZAcAAAAAAABkBwAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAF8HAAAAAAAAYAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwcAAAAAAABfBwAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					2,
					"left_delete",
					null,
					"AgAAAF8HAAAAAAAAXwcAAAAAAAABAAAAMF4HAAAAAAAAXgcAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAYAcAAAAAAABgBwAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAF4HAAAAAAAAXwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgcAAAAAAABeBwAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAFQHAAAAAAAAVQcAAAAAAAAAAAAAVQcAAAAAAABZBwAAAAAAAAAAAABVBwAAAAAAAFUHAAAAAAAABAAAACAgICBVBwAAAAAAAFcHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAcAAAAAAABUBwAAAAAAAP///////+9/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKEGAAAAAAAAogYAAAAAAAAAAAAAVgcAAAAAAABWBwAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAAoQYAAAAAAAChBgAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADJCQAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgc2l6ZV90IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIEpTVmFsdWUgaGFuZGxlcnNbMl07CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7Cn0gTWlubmV0V2Vic29ja2V0OwoKZXh0ZXJuIGludDY0X3Qgd3Nfc2VyaWFsOwoKTWlubmV0V2Vic29ja2V0KiB3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogd3NfZnJvbV93c2kyKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfb2JqZWN0KEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CnZvaWQgbWlubmV0X3dzX3NzbGNlcnQoSlNDb250ZXh0Kiwgc3RydWN0IGx3c19jb250ZXh0X2NyZWF0aW9uX2luZm8qLCBKU1ZhbHVlIG9wdGlvbnMpOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIEpTT2JqZWN0KiBvYmo7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgaW50NjRfdCBzZXJpYWw7CiAgTWlubmV0U3RhdHVzIHN0YXR1czsKICBpbnQgZXJyb3I7CiAgTWlubmV0UG9sbEZkIHBmZDsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgpsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWU7CgogIG9wYXF1ZSA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKSk7CiAgb3BhcXVlLT5zZXJpYWwgPSArK3dzX3NlcmlhbDsKICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CgogIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIG9wYXF1ZSk7CiAgcmV0dXJuIG9wYXF1ZTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkgCiAgICByZXR1cm4gb3BhcXVlIC0+c2VzczsKCiAgcmV0dXJuIDA7Cn0KLyoKc3RhdGljIGlubGluZSBpbnQKd3NfZmQoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIGx3c19nZXRfc29ja2V0X2ZkKGx3c19nZXRfbmV0d29ya193c2kod3MtPmx3c2kpKTsKfQoKc3RhdGljIGlubGluZSBpbnQKd3NfbHdzKGNvbnN0IE1pbm5ldFdlYnNvY2tldCogd3MpIHsKIHJldHVybiB3cy0+bHdzaTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCndzX29wYXF1ZShjb25zdCBNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiByZXR1cm4gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzLT5sd3NpKTsKfSovCgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKbWlubmV0X3dzX2RhdGEoSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUob2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKbWlubmV0X3dzX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF93c19jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfV0VCU09DS0VUX0ggKi8KAAAAAAAAAADHCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQYAAAAAAADQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHCQAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgc2l6ZV90IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIEpTVmFsdWUgaGFuZGxlcnNbMl07CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7Cn0gTWlubmV0V2Vic29ja2V0OwoKZXh0ZXJuIGludDY0X3Qgd3Nfc2VyaWFsOwoKTWlubmV0V2Vic29ja2V0KiB3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogd3NfZnJvbV93c2kyKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfb2JqZWN0KEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CnZvaWQgbWlubmV0X3dzX3NzbGNlcnQoSlNDb250ZXh0Kiwgc3RydWN0IGx3c19jb250ZXh0X2NyZWF0aW9uX2luZm8qLCBKU1ZhbHVlIG9wdGlvbnMpOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIEpTT2JqZWN0KiBvYmo7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgaW50NjRfdCBzZXJpYWw7CiAgTWlubmV0U3RhdHVzIHN0YXR1czsKICBpbnQgZXJyb3I7CiAgTWlubmV0UG9sbEZkIHBmZDsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgpsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWU7CgogIG9wYXF1ZSA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKSk7CiAgb3BhcXVlLT5zZXJpYWwgPSArK3dzX3NlcmlhbDsKICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CgogIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIG9wYXF1ZSk7CiAgcmV0dXJuIG9wYXF1ZTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9Ci8qCnN0YXRpYyBpbmxpbmUgaW50CndzX2ZkKGNvbnN0IE1pbm5ldFdlYnNvY2tldCogd3MpIHsKIHJldHVybiBsd3NfZ2V0X3NvY2tldF9mZChsd3NfZ2V0X25ldHdvcmtfd3NpKHdzLT5sd3NpKSk7Cn0KCnN0YXRpYyBpbmxpbmUgaW50CndzX2x3cyhjb25zdCBNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiByZXR1cm4gd3MtPmx3c2k7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSk7Cn0qLwoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAxwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQYAAAAAAADQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHCQAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgc2l6ZV90IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIEpTVmFsdWUgaGFuZGxlcnNbMl07CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7Cn0gTWlubmV0V2Vic29ja2V0OwoKZXh0ZXJuIGludDY0X3Qgd3Nfc2VyaWFsOwoKTWlubmV0V2Vic29ja2V0KiB3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogd3NfZnJvbV93c2kyKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfb2JqZWN0KEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CnZvaWQgbWlubmV0X3dzX3NzbGNlcnQoSlNDb250ZXh0Kiwgc3RydWN0IGx3c19jb250ZXh0X2NyZWF0aW9uX2luZm8qLCBKU1ZhbHVlIG9wdGlvbnMpOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIEpTT2JqZWN0KiBvYmo7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgaW50NjRfdCBzZXJpYWw7CiAgTWlubmV0U3RhdHVzIHN0YXR1czsKICBpbnQgZXJyb3I7CiAgTWlubmV0UG9sbEZkIHBmZDsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgpsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWU7CgogIG9wYXF1ZSA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKSk7CiAgb3BhcXVlLT5zZXJpYWwgPSArK3dzX3NlcmlhbDsKICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CgogIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIG9wYXF1ZSk7CiAgcmV0dXJuIG9wYXF1ZTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9Ci8qCnN0YXRpYyBpbmxpbmUgaW50CndzX2ZkKGNvbnN0IE1pbm5ldFdlYnNvY2tldCogd3MpIHsKIHJldHVybiBsd3NfZ2V0X3NvY2tldF9mZChsd3NfZ2V0X25ldHdvcmtfd3NpKHdzLT5sd3NpKSk7Cn0KCnN0YXRpYyBpbmxpbmUgaW50CndzX2x3cyhjb25zdCBNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiByZXR1cm4gd3MtPmx3c2k7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSk7Cn0qLwoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAxwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQYAAAAAAADQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHCQAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgc2l6ZV90IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIEpTVmFsdWUgaGFuZGxlcnNbMl07CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7Cn0gTWlubmV0V2Vic29ja2V0OwoKZXh0ZXJuIGludDY0X3Qgd3Nfc2VyaWFsOwoKTWlubmV0V2Vic29ja2V0KiB3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogd3NfZnJvbV93c2kyKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfb2JqZWN0KEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CnZvaWQgbWlubmV0X3dzX3NzbGNlcnQoSlNDb250ZXh0Kiwgc3RydWN0IGx3c19jb250ZXh0X2NyZWF0aW9uX2luZm8qLCBKU1ZhbHVlIG9wdGlvbnMpOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIEpTT2JqZWN0KiBvYmo7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgaW50NjRfdCBzZXJpYWw7CiAgTWlubmV0U3RhdHVzIHN0YXR1czsKICBpbnQgZXJyb3I7CiAgTWlubmV0UG9sbEZkIHBmZDsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgpsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWU7CgogIG9wYXF1ZSA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKSk7CiAgb3BhcXVlLT5zZXJpYWwgPSArK3dzX3NlcmlhbDsKICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CgogIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIG9wYXF1ZSk7CiAgcmV0dXJuIG9wYXF1ZTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9Ci8qCnN0YXRpYyBpbmxpbmUgaW50CndzX2ZkKGNvbnN0IE1pbm5ldFdlYnNvY2tldCogd3MpIHsKIHJldHVybiBsd3NfZ2V0X3NvY2tldF9mZChsd3NfZ2V0X25ldHdvcmtfd3NpKHdzLT5sd3NpKSk7Cn0KCnN0YXRpYyBpbmxpbmUgaW50CndzX2x3cyhjb25zdCBNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiByZXR1cm4gd3MtPmx3c2k7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSk7Cn0qLwoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAxwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQYAAAAAAADQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHCQAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgc2l6ZV90IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIEpTVmFsdWUgaGFuZGxlcnNbMl07CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7Cn0gTWlubmV0V2Vic29ja2V0OwoKZXh0ZXJuIGludDY0X3Qgd3Nfc2VyaWFsOwoKTWlubmV0V2Vic29ja2V0KiB3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogd3NfZnJvbV93c2kyKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfb2JqZWN0KEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CnZvaWQgbWlubmV0X3dzX3NzbGNlcnQoSlNDb250ZXh0Kiwgc3RydWN0IGx3c19jb250ZXh0X2NyZWF0aW9uX2luZm8qLCBKU1ZhbHVlIG9wdGlvbnMpOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIEpTT2JqZWN0KiBvYmo7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgaW50NjRfdCBzZXJpYWw7CiAgTWlubmV0U3RhdHVzIHN0YXR1czsKICBpbnQgZXJyb3I7CiAgTWlubmV0UG9sbEZkIHBmZDsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgpsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWU7CgogIG9wYXF1ZSA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKSk7CiAgb3BhcXVlLT5zZXJpYWwgPSArK3dzX3NlcmlhbDsKICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CgogIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIG9wYXF1ZSk7CiAgcmV0dXJuIG9wYXF1ZTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9Ci8qCnN0YXRpYyBpbmxpbmUgaW50CndzX2ZkKGNvbnN0IE1pbm5ldFdlYnNvY2tldCogd3MpIHsKIHJldHVybiBsd3NfZ2V0X3NvY2tldF9mZChsd3NfZ2V0X25ldHdvcmtfd3NpKHdzLT5sd3NpKSk7Cn0KCnN0YXRpYyBpbmxpbmUgaW50CndzX2x3cyhjb25zdCBNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiByZXR1cm4gd3MtPmx3c2k7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSk7Cn0qLwoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAxwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQYAAAAAAADQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHCQAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgc2l6ZV90IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIEpTVmFsdWUgaGFuZGxlcnNbMl07CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7Cn0gTWlubmV0V2Vic29ja2V0OwoKZXh0ZXJuIGludDY0X3Qgd3Nfc2VyaWFsOwoKTWlubmV0V2Vic29ja2V0KiB3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogd3NfZnJvbV93c2kyKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfb2JqZWN0KEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CnZvaWQgbWlubmV0X3dzX3NzbGNlcnQoSlNDb250ZXh0Kiwgc3RydWN0IGx3c19jb250ZXh0X2NyZWF0aW9uX2luZm8qLCBKU1ZhbHVlIG9wdGlvbnMpOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIEpTT2JqZWN0KiBvYmo7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgaW50NjRfdCBzZXJpYWw7CiAgTWlubmV0U3RhdHVzIHN0YXR1czsKICBpbnQgZXJyb3I7CiAgTWlubmV0UG9sbEZkIHBmZDsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgpsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWU7CgogIG9wYXF1ZSA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKSk7CiAgb3BhcXVlLT5zZXJpYWwgPSArK3dzX3NlcmlhbDsKICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CgogIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIG9wYXF1ZSk7CiAgcmV0dXJuIG9wYXF1ZTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9Ci8qCnN0YXRpYyBpbmxpbmUgaW50CndzX2ZkKGNvbnN0IE1pbm5ldFdlYnNvY2tldCogd3MpIHsKIHJldHVybiBsd3NfZ2V0X3NvY2tldF9mZChsd3NfZ2V0X25ldHdvcmtfd3NpKHdzLT5sd3NpKSk7Cn0KCnN0YXRpYyBpbmxpbmUgaW50CndzX2x3cyhjb25zdCBNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiByZXR1cm4gd3MtPmx3c2k7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSk7Cn0qLwoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAxwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQYAAAAAAADQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHCQAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgc2l6ZV90IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIEpTVmFsdWUgaGFuZGxlcnNbMl07CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7Cn0gTWlubmV0V2Vic29ja2V0OwoKZXh0ZXJuIGludDY0X3Qgd3Nfc2VyaWFsOwoKTWlubmV0V2Vic29ja2V0KiB3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogd3NfZnJvbV93c2kyKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfb2JqZWN0KEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CnZvaWQgbWlubmV0X3dzX3NzbGNlcnQoSlNDb250ZXh0Kiwgc3RydWN0IGx3c19jb250ZXh0X2NyZWF0aW9uX2luZm8qLCBKU1ZhbHVlIG9wdGlvbnMpOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIEpTT2JqZWN0KiBvYmo7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgaW50NjRfdCBzZXJpYWw7CiAgTWlubmV0U3RhdHVzIHN0YXR1czsKICBpbnQgZXJyb3I7CiAgTWlubmV0UG9sbEZkIHBmZDsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgpsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWU7CgogIG9wYXF1ZSA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKSk7CiAgb3BhcXVlLT5zZXJpYWwgPSArK3dzX3NlcmlhbDsKICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CgogIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIG9wYXF1ZSk7CiAgcmV0dXJuIG9wYXF1ZTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9Ci8qCnN0YXRpYyBpbmxpbmUgaW50CndzX2ZkKGNvbnN0IE1pbm5ldFdlYnNvY2tldCogd3MpIHsKIHJldHVybiBsd3NfZ2V0X3NvY2tldF9mZChsd3NfZ2V0X25ldHdvcmtfd3NpKHdzLT5sd3NpKSk7Cn0KCnN0YXRpYyBpbmxpbmUgaW50CndzX2x3cyhjb25zdCBNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiByZXR1cm4gd3MtPmx3c2k7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSk7Cn0qLwoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAxwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQYAAAAAAADQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHCQAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgc2l6ZV90IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIEpTVmFsdWUgaGFuZGxlcnNbMl07CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7Cn0gTWlubmV0V2Vic29ja2V0OwoKZXh0ZXJuIGludDY0X3Qgd3Nfc2VyaWFsOwoKTWlubmV0V2Vic29ja2V0KiB3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogd3NfZnJvbV93c2kyKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfb2JqZWN0KEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CnZvaWQgbWlubmV0X3dzX3NzbGNlcnQoSlNDb250ZXh0Kiwgc3RydWN0IGx3c19jb250ZXh0X2NyZWF0aW9uX2luZm8qLCBKU1ZhbHVlIG9wdGlvbnMpOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIEpTT2JqZWN0KiBvYmo7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgaW50NjRfdCBzZXJpYWw7CiAgTWlubmV0U3RhdHVzIHN0YXR1czsKICBpbnQgZXJyb3I7CiAgTWlubmV0UG9sbEZkIHBmZDsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgpsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWU7CgogIG9wYXF1ZSA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKSk7CiAgb3BhcXVlLT5zZXJpYWwgPSArK3dzX3NlcmlhbDsKICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CgogIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIG9wYXF1ZSk7CiAgcmV0dXJuIG9wYXF1ZTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9Ci8qCnN0YXRpYyBpbmxpbmUgaW50CndzX2ZkKGNvbnN0IE1pbm5ldFdlYnNvY2tldCogd3MpIHsKIHJldHVybiBsd3NfZ2V0X3NvY2tldF9mZChsd3NfZ2V0X25ldHdvcmtfd3NpKHdzLT5sd3NpKSk7Cn0KCnN0YXRpYyBpbmxpbmUgaW50CndzX2x3cyhjb25zdCBNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiByZXR1cm4gd3MtPmx3c2k7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSk7Cn0qLwoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAxwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQYAAAAAAADQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHCQAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgc2l6ZV90IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIEpTVmFsdWUgaGFuZGxlcnNbMl07CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7Cn0gTWlubmV0V2Vic29ja2V0OwoKZXh0ZXJuIGludDY0X3Qgd3Nfc2VyaWFsOwoKTWlubmV0V2Vic29ja2V0KiB3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogd3NfZnJvbV93c2kyKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfb2JqZWN0KEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CnZvaWQgbWlubmV0X3dzX3NzbGNlcnQoSlNDb250ZXh0Kiwgc3RydWN0IGx3c19jb250ZXh0X2NyZWF0aW9uX2luZm8qLCBKU1ZhbHVlIG9wdGlvbnMpOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIEpTT2JqZWN0KiBvYmo7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgaW50NjRfdCBzZXJpYWw7CiAgTWlubmV0U3RhdHVzIHN0YXR1czsKICBpbnQgZXJyb3I7CiAgTWlubmV0UG9sbEZkIHBmZDsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgpsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWU7CgogIG9wYXF1ZSA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKSk7CiAgb3BhcXVlLT5zZXJpYWwgPSArK3dzX3NlcmlhbDsKICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CgogIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIG9wYXF1ZSk7CiAgcmV0dXJuIG9wYXF1ZTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9Ci8qCnN0YXRpYyBpbmxpbmUgaW50CndzX2ZkKGNvbnN0IE1pbm5ldFdlYnNvY2tldCogd3MpIHsKIHJldHVybiBsd3NfZ2V0X3NvY2tldF9mZChsd3NfZ2V0X25ldHdvcmtfd3NpKHdzLT5sd3NpKSk7Cn0KCnN0YXRpYyBpbmxpbmUgaW50CndzX2x3cyhjb25zdCBNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiByZXR1cm4gd3MtPmx3c2k7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSk7Cn0qLwoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAxwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQYAAAAAAADQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHCQAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgc2l6ZV90IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIEpTVmFsdWUgaGFuZGxlcnNbMl07CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7Cn0gTWlubmV0V2Vic29ja2V0OwoKZXh0ZXJuIGludDY0X3Qgd3Nfc2VyaWFsOwoKTWlubmV0V2Vic29ja2V0KiB3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogd3NfZnJvbV93c2kyKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfb2JqZWN0KEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CnZvaWQgbWlubmV0X3dzX3NzbGNlcnQoSlNDb250ZXh0Kiwgc3RydWN0IGx3c19jb250ZXh0X2NyZWF0aW9uX2luZm8qLCBKU1ZhbHVlIG9wdGlvbnMpOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIEpTT2JqZWN0KiBvYmo7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgaW50NjRfdCBzZXJpYWw7CiAgTWlubmV0U3RhdHVzIHN0YXR1czsKICBpbnQgZXJyb3I7CiAgTWlubmV0UG9sbEZkIHBmZDsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgpsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWU7CgogIG9wYXF1ZSA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKSk7CiAgb3BhcXVlLT5zZXJpYWwgPSArK3dzX3NlcmlhbDsKICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CgogIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIG9wYXF1ZSk7CiAgcmV0dXJuIG9wYXF1ZTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9Ci8qCnN0YXRpYyBpbmxpbmUgaW50CndzX2ZkKGNvbnN0IE1pbm5ldFdlYnNvY2tldCogd3MpIHsKIHJldHVybiBsd3NfZ2V0X3NvY2tldF9mZChsd3NfZ2V0X25ldHdvcmtfd3NpKHdzLT5sd3NpKSk7Cn0KCnN0YXRpYyBpbmxpbmUgaW50CndzX2x3cyhjb25zdCBNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiByZXR1cm4gd3MtPmx3c2k7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSk7Cn0qLwoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAxwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQYAAAAAAADQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHCQAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgc2l6ZV90IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIEpTVmFsdWUgaGFuZGxlcnNbMl07CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7Cn0gTWlubmV0V2Vic29ja2V0OwoKZXh0ZXJuIGludDY0X3Qgd3Nfc2VyaWFsOwoKTWlubmV0V2Vic29ja2V0KiB3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogd3NfZnJvbV93c2kyKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfb2JqZWN0KEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CnZvaWQgbWlubmV0X3dzX3NzbGNlcnQoSlNDb250ZXh0Kiwgc3RydWN0IGx3c19jb250ZXh0X2NyZWF0aW9uX2luZm8qLCBKU1ZhbHVlIG9wdGlvbnMpOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIEpTT2JqZWN0KiBvYmo7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgaW50NjRfdCBzZXJpYWw7CiAgTWlubmV0U3RhdHVzIHN0YXR1czsKICBpbnQgZXJyb3I7CiAgTWlubmV0UG9sbEZkIHBmZDsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgpsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWU7CgogIG9wYXF1ZSA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKSk7CiAgb3BhcXVlLT5zZXJpYWwgPSArK3dzX3NlcmlhbDsKICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CgogIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIG9wYXF1ZSk7CiAgcmV0dXJuIG9wYXF1ZTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9Ci8qCnN0YXRpYyBpbmxpbmUgaW50CndzX2ZkKGNvbnN0IE1pbm5ldFdlYnNvY2tldCogd3MpIHsKIHJldHVybiBsd3NfZ2V0X3NvY2tldF9mZChsd3NfZ2V0X25ldHdvcmtfd3NpKHdzLT5sd3NpKSk7Cn0KCnN0YXRpYyBpbmxpbmUgaW50CndzX2x3cyhjb25zdCBNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiByZXR1cm4gd3MtPmx3c2k7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSk7Cn0qLwoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAxwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQYAAAAAAADQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"cut",
					null,
					"AQAAAA0BAAAAAAAADQEAAAAAAAAXAAAAICBKU1ZhbHVlIGhhbmRsZXJzWzJdOwo",
					"AQAAAAAAAAABAAAADQEAAAAAAAAkAQAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALoEAAAAAAAAuwQAAAAAAAAAAAAAuwQAAAAAAAC9BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugQAAAAAAAC6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"paste",
					null,
					"AQAAAL0EAAAAAAAA1AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQQAAAAAAAC9BAAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"left_delete",
					null,
					"AQAAANMEAAAAAAAA0wQAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA1AQAAAAAAADUBAAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADJCQAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgc2l6ZV90IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIEJPT0wgYmluYXJ5OwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCk1pbm5ldFdlYnNvY2tldCogd3NfZnJvbV93c2koc3RydWN0IGx3cyopOwpNaW5uZXRXZWJzb2NrZXQqIHdzX2Zyb21fd3NpMihzdHJ1Y3QgbHdzKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgbWlubmV0X3dzX29iamVjdChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CkpTVmFsdWUgbWlubmV0X3dzX3dyYXAoSlNDb250ZXh0Kiwgc3RydWN0IGx3cyopOwp2b2lkIG1pbm5ldF93c19zc2xjZXJ0KEpTQ29udGV4dCosIHN0cnVjdCBsd3NfY29udGV4dF9jcmVhdGlvbl9pbmZvKiwgSlNWYWx1ZSBvcHRpb25zKTsKSlNWYWx1ZSBtaW5uZXRfd3NfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlW10pOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3dzX2NsYXNzX2lkOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3dzX3Byb3RvLCBtaW5uZXRfd3NfY3RvcjsKZXh0ZXJuIEpTQ2xhc3NEZWYgbWlubmV0X3dzX2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3dzX3Byb3RvX2Z1bmNzW10sIG1pbm5ldF93c19zdGF0aWNfZnVuY3NbXSwgbWlubmV0X3dzX3Byb3RvX2RlZnNbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfd3NfcHJvdG9fZnVuY3Nfc2l6ZSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc19zaXplLCBtaW5uZXRfd3NfcHJvdG9fZGVmc19zaXplOwoKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsKICBKU09iamVjdCogb2JqOwogIHN0cnVjdCBzb2NrZXQqIHdzOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcTsKICBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiBzZXNzOwogICAgSlNWYWx1ZSBoYW5kbGVyc1syXTsKICBpbnQ2NF90IHNlcmlhbDsKICBNaW5uZXRTdGF0dXMgc3RhdHVzOwogIGludCBlcnJvcjsKICBNaW5uZXRQb2xsRmQgcGZkOwp9OwoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCmx3c19vcGFxdWUoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZTsKCiAgb3BhcXVlID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEpKTsKICBvcGFxdWUtPnNlcmlhbCA9ICsrd3Nfc2VyaWFsOwogIG9wYXF1ZS0+c3RhdHVzID0gQ09OTkVDVElORzsKCiAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgb3BhcXVlKTsKICByZXR1cm4gb3BhcXVlOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBzZXNzaW9uX2RhdGEqCmx3c19zZXNzaW9uKHN0cnVjdCBsd3MqIHdzaSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZS0+c2VzczsKCiAgcmV0dXJuIDA7Cn0KLyoKc3RhdGljIGlubGluZSBpbnQKd3NfZmQoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIGx3c19nZXRfc29ja2V0X2ZkKGx3c19nZXRfbmV0d29ya193c2kod3MtPmx3c2kpKTsKfQoKc3RhdGljIGlubGluZSBpbnQKd3NfbHdzKGNvbnN0IE1pbm5ldFdlYnNvY2tldCogd3MpIHsKIHJldHVybiB3cy0+bHdzaTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCndzX29wYXF1ZShjb25zdCBNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiByZXR1cm4gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzLT5sd3NpKTsKfSovCgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKbWlubmV0X3dzX2RhdGEoSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUob2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKbWlubmV0X3dzX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF93c19jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfV0VCU09DS0VUX0ggKi8KAAAAAAAAAADHCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wQAAAAAAADTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "strucrt"
					},
					"CAAAAAoFAAAAAAAACwUAAAAAAAAAAAAACwUAAAAAAAALBQAAAAAAAAwAAABNaW5uZXRQb2xsRmQLBQAAAAAAAAwFAAAAAAAAAAAAAAwFAAAAAAAADQUAAAAAAAAAAAAADQUAAAAAAAAOBQAAAAAAAAAAAAAOBQAAAAAAAA8FAAAAAAAAAAAAAA8FAAAAAAAAEAUAAAAAAAAAAAAAEAUAAAAAAAARBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgUAAAAAAAAWBQAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABEFAAAAAAAAEgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQUAAAAAAAARBQAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					3,
					"left_delete",
					null,
					"AwAAABEFAAAAAAAAEQUAAAAAAAABAAAAIBAFAAAAAAAAEAUAAAAAAAABAAAAdA8FAAAAAAAADwUAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAEgUAAAAAAAASBQAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAA8FAAAAAAAAEAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwUAAAAAAAAPBQAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": " pollfd"
					},
					"BwAAABAFAAAAAAAAEQUAAAAAAAAAAAAAEQUAAAAAAAASBQAAAAAAAAAAAAASBQAAAAAAABMFAAAAAAAAAAAAABMFAAAAAAAAFAUAAAAAAAAAAAAAFAUAAAAAAAAVBQAAAAAAAAAAAAAVBQAAAAAAABYFAAAAAAAAAAAAABYFAAAAAAAAFwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAUAAAAAAAAQBQAAAAAAAAAAAAAAAPC/"
				],
				[
					247,
					1,
					"paste",
					null,
					"AgAAAHkHAAAAAAAAhAcAAAAAAAAAAAAAhAcAAAAAAACEBwAAAAAAAAUAAAB3c19mZA",
					"AQAAAAAAAAABAAAAeQcAAAAAAAB+BwAAAAAAAAAAAAAAAPC/"
				],
				[
					256,
					1,
					"right_delete",
					null,
					"AQAAAHsHAAAAAAAAewcAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAewcAAAAAAAB8BwAAAAAAAAAAAAAAAPC/"
				],
				[
					259,
					1,
					"insert",
					{
						"characters": "wsi"
					},
					"BAAAAIEHAAAAAAAAggcAAAAAAAAAAAAAggcAAAAAAACCBwAAAAAAAAIAAABmZIIHAAAAAAAAgwcAAAAAAAAAAAAAgwcAAAAAAACEBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQcAAAAAAACDBwAAAAAAAAAAAAAAAPC/"
				],
				[
					275,
					1,
					"paste",
					null,
					"AgAAAHUHAAAAAAAAhAcAAAAAAAAAAAAAhAcAAAAAAACEBwAAAAAAAAMAAABpbnQ",
					"AQAAAAAAAAABAAAAdQcAAAAAAAB4BwAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAIQHAAAAAAAAhQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAcAAAAAAACEBwAAAAAAAAAAAAAAAPC/"
				],
				[
					277,
					1,
					"left_delete",
					null,
					"AQAAAIQHAAAAAAAAhAcAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAhQcAAAAAAACFBwAAAAAAAAAAAAAAAPC/"
				],
				[
					278,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAIQHAAAAAAAAhQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAcAAAAAAACEBwAAAAAAAAAAAAAAAPC/"
				],
				[
					281,
					1,
					"insert",
					{
						"characters": "struct"
					},
					"BgAAAJIHAAAAAAAAkwcAAAAAAAAAAAAAkwcAAAAAAACUBwAAAAAAAAAAAACUBwAAAAAAAJUHAAAAAAAAAAAAAJUHAAAAAAAAlgcAAAAAAAAAAAAAlgcAAAAAAACXBwAAAAAAAAAAAACXBwAAAAAAAJgHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgcAAAAAAACSBwAAAAAAAAAAAAAAAPC/"
				],
				[
					282,
					1,
					"insert",
					{
						"characters": " lws"
					},
					"BAAAAJgHAAAAAAAAmQcAAAAAAAAAAAAAmQcAAAAAAACaBwAAAAAAAAAAAACaBwAAAAAAAJsHAAAAAAAAAAAAAJsHAAAAAAAAnAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAcAAAAAAACYBwAAAAAAAAAAAAAAAPC/"
				],
				[
					283,
					1,
					"insert",
					{
						"characters": " *wsi"
					},
					"BQAAAJwHAAAAAAAAnQcAAAAAAAAAAAAAnQcAAAAAAACeBwAAAAAAAAAAAACeBwAAAAAAAJ8HAAAAAAAAAAAAAJ8HAAAAAAAAoAcAAAAAAAAAAAAAoAcAAAAAAAChBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAcAAAAAAACcBwAAAAAAAAAAAAAAAPC/"
				],
				[
					287,
					1,
					"left_delete",
					null,
					"AQAAAKEHAAAAAAAAoQcAAAAAAAAZAAAAY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cw",
					"AQAAAAAAAAABAAAAoQcAAAAAAAC6BwAAAAAAAAAAAAAAAPC/"
				],
				[
					296,
					1,
					"cut",
					null,
					"AQAAAGQHAAAAAAAAZAcAAAAAAAACAAAALyo",
					"AQAAAAAAAAABAAAAZgcAAAAAAABkBwAAAAAAAAAAAAAAAPC/"
				],
				[
					299,
					1,
					"paste",
					null,
					"AQAAAN8HAAAAAAAA4QcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wcAAAAAAADfBwAAAAAAAAAAAAAAAPC/"
				],
				[
					315,
					1,
					"paste",
					null,
					"AgAAAL0HAAAAAAAA1QcAAAAAAAAAAAAA1QcAAAAAAADVBwAAAAAAABMAAABsd3NfZ2V0X25ldHdvcmtfd3Np",
					"AQAAAAAAAAABAAAAvQcAAAAAAADQBwAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"right_delete",
					null,
					"AQAAANYHAAAAAAAA1gcAAAAAAAAFAAAAd3MtPmw",
					"AQAAAAAAAAABAAAA1gcAAAAAAADbBwAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": "str"
					},
					"BAAAAKsHAAAAAAAArAcAAAAAAAAAAAAArAcAAAAAAACsBwAAAAAAABEAAABsd3NfZ2V0X3NvY2tldF9mZKwHAAAAAAAArQcAAAAAAAAAAAAArQcAAAAAAACuBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAcAAAAAAACrBwAAAAAAAAAAAAAAAPC/"
				],
				[
					329,
					3,
					"left_delete",
					null,
					"AwAAAK0HAAAAAAAArQcAAAAAAAABAAAAcqwHAAAAAAAArAcAAAAAAAABAAAAdKsHAAAAAAAAqwcAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAArgcAAAAAAACuBwAAAAAAAAAAAAAAAPC/"
				],
				[
					330,
					1,
					"insert",
					{
						"characters": "(struct"
					},
					"BwAAAKsHAAAAAAAArAcAAAAAAAAAAAAArAcAAAAAAACtBwAAAAAAAAAAAACtBwAAAAAAAK4HAAAAAAAAAAAAAK4HAAAAAAAArwcAAAAAAAAAAAAArwcAAAAAAACwBwAAAAAAAAAAAACwBwAAAAAAALEHAAAAAAAAAAAAALEHAAAAAAAAsgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwcAAAAAAACrBwAAAAAAAAAAAAAAAPC/"
				],
				[
					331,
					1,
					"insert",
					{
						"characters": " wsi_"
					},
					"BQAAALIHAAAAAAAAswcAAAAAAAAAAAAAswcAAAAAAAC0BwAAAAAAAAAAAAC0BwAAAAAAALUHAAAAAAAAAAAAALUHAAAAAAAAtgcAAAAAAAAAAAAAtgcAAAAAAAC3BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgcAAAAAAACyBwAAAAAAAAAAAAAAAPC/"
				],
				[
					332,
					1,
					"insert_completion",
					{
						"completion": "wsi_opaque_user_data",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "wsi_opaque_user_data"
					},
					"AgAAALMHAAAAAAAAswcAAAAAAAAEAAAAd3NpX7MHAAAAAAAAxwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwcAAAAAAAC3BwAAAAAAAAAAAAAAAPC/"
				],
				[
					333,
					1,
					"insert",
					{
						"characters": "*)/("
					},
					"BAAAAMcHAAAAAAAAyAcAAAAAAAAAAAAAyAcAAAAAAADJBwAAAAAAAAAAAADJBwAAAAAAAMoHAAAAAAAAAAAAAMoHAAAAAAAAywcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwcAAAAAAADHBwAAAAAAAAAAAAAAAPC/"
				],
				[
					334,
					2,
					"left_delete",
					null,
					"AgAAAMoHAAAAAAAAygcAAAAAAAABAAAAKMkHAAAAAAAAyQcAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAywcAAAAAAADLBwAAAAAAAAAAAAAAAPC/"
				],
				[
					335,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAMkHAAAAAAAAygcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQcAAAAAAADJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					336,
					1,
					"left_delete",
					null,
					"AQAAAMkHAAAAAAAAyQcAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAygcAAAAAAADKBwAAAAAAAAAAAAAAAPC/"
				],
				[
					337,
					1,
					"right_delete",
					null,
					"AQAAAMkHAAAAAAAAyQcAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAyQcAAAAAAADJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAKsHAAAAAAAArAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwcAAAAAAACrBwAAAAAAAAAAAAAAAPC/"
				],
				[
					345,
					1,
					"insert",
					{
						"characters": "_>"
					},
					"AgAAAOgHAAAAAAAA6QcAAAAAAAAAAAAA6QcAAAAAAADqBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AcAAAAAAADoBwAAAAAAAAAAAAAAAPC/"
				],
				[
					346,
					2,
					"left_delete",
					null,
					"AgAAAOkHAAAAAAAA6QcAAAAAAAABAAAAPugHAAAAAAAA6AcAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAA6gcAAAAAAADqBwAAAAAAAAAAAAAAAPC/"
				],
				[
					347,
					1,
					"insert",
					{
						"characters": "->ws"
					},
					"BAAAAOgHAAAAAAAA6QcAAAAAAAAAAAAA6QcAAAAAAADqBwAAAAAAAAAAAADqBwAAAAAAAOsHAAAAAAAAAAAAAOsHAAAAAAAA7AcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AcAAAAAAADoBwAAAAAAAAAAAAAAAPC/"
				],
				[
					355,
					1,
					"doxy_enter",
					null,
					"AQAAAPAHAAAAAAAA8QcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AcAAAAAAADwBwAAAAAAAAAAAAAAAAAA"
				],
				[
					386,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAB4BAAAAAAAAHwEAAAAAAAAAAAAAHwEAAAAAAAAgAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgEAAAAAAAAeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					400,
					1,
					"left_delete",
					null,
					"AQAAAHQBAAAAAAAAdAEAAAAAAAArAAAATWlubmV0V2Vic29ja2V0KiB3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKik7Cg",
					"AQAAAAAAAAABAAAAdAEAAAAAAACfAQAAAAAAAAAAAAAAAAAA"
				],
				[
					434,
					1,
					"cut",
					null,
					"AQAAAN8EAAAAAAAA3wQAAAAAAAAVAAAAICBzdHJ1Y3QgcG9sbGZkIHBmZDsK",
					"AQAAAAAAAAABAAAA3wQAAAAAAAD0BAAAAAAAAAAAAAAAAPC/"
				],
				[
					437,
					1,
					"paste",
					null,
					"AQAAABwBAAAAAAAAMQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAEAAAAAAAAcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					449,
					1,
					"cut",
					null,
					"AQAAAHkGAAAAAAAAeQYAAAAAAADCAAAACnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKbHdzX3Nlc3Npb24oc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CgogIGlmKChvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSkpCiAgICByZXR1cm4gb3BhcXVlLT5zZXNzOwoKICByZXR1cm4gMDsKfQo",
					"AQAAAAAAAAABAAAAeQYAAAAAAAA7BwAAAAAAAAAAAAAAAPC/"
				],
				[
					450,
					2,
					"paste",
					null,
					"AgAAAHkGAAAAAAAAOwcAAAAAAAAAAAAAOwcAAAAAAAD9BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQYAAAAAAAB5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					455,
					1,
					"insert",
					{
						"characters": "ses"
					},
					"BAAAAF8HAAAAAAAAYAcAAAAAAAAAAAAAYAcAAAAAAABgBwAAAAAAAAsAAABsd3Nfc2Vzc2lvbmAHAAAAAAAAYQcAAAAAAAAAAAAAYQcAAAAAAABiBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwcAAAAAAABqBwAAAAAAAAAAAAAAAPC/"
				],
				[
					456,
					3,
					"left_delete",
					null,
					"AwAAAGEHAAAAAAAAYQcAAAAAAAABAAAAc2AHAAAAAAAAYAcAAAAAAAABAAAAZV8HAAAAAAAAXwcAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAYgcAAAAAAABiBwAAAAAAAAAAAAAAAPC/"
				],
				[
					457,
					1,
					"insert",
					{
						"characters": "ws_session"
					},
					"CgAAAF8HAAAAAAAAYAcAAAAAAAAAAAAAYAcAAAAAAABhBwAAAAAAAAAAAABhBwAAAAAAAGIHAAAAAAAAAAAAAGIHAAAAAAAAYwcAAAAAAAAAAAAAYwcAAAAAAABkBwAAAAAAAAAAAABkBwAAAAAAAGUHAAAAAAAAAAAAAGUHAAAAAAAAZgcAAAAAAAAAAAAAZgcAAAAAAABnBwAAAAAAAAAAAABnBwAAAAAAAGgHAAAAAAAAAAAAAGgHAAAAAAAAaQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwcAAAAAAABfBwAAAAAAAAAAAAAAAPC/"
				],
				[
					468,
					1,
					"paste",
					null,
					"AgAAAGoHAAAAAAAAeQcAAAAAAAAAAAAAeQcAAAAAAAB5BwAAAAAAAA8AAABzdHJ1Y3QgbHdzKiB3c2k",
					"AQAAAAAAAAABAAAAagcAAAAAAAB5BwAAAAAAAAAAAAAAAPC/"
				],
				[
					469,
					1,
					"insert",
					{
						"characters": "*ws"
					},
					"AwAAAHkHAAAAAAAAegcAAAAAAAAAAAAAegcAAAAAAAB7BwAAAAAAAAAAAAB7BwAAAAAAAHwHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQcAAAAAAAB5BwAAAAAAAAAAAAAAAPC/"
				],
				[
					493,
					1,
					"paste",
					null,
					"AQAAANAHAAAAAAAA0gcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AcAAAAAAADQBwAAAAAAAAAAAAAAAPC/"
				],
				[
					494,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAANIHAAAAAAAA0wcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gcAAAAAAADSBwAAAAAAAAAAAAAAAPC/"
				],
				[
					495,
					1,
					"left_delete",
					null,
					"AQAAANIHAAAAAAAA0gcAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAA0wcAAAAAAADTBwAAAAAAAAAAAAAAAPC/"
				],
				[
					496,
					1,
					"insert",
					{
						"characters": "->L"
					},
					"AwAAANIHAAAAAAAA0wcAAAAAAAAAAAAA0wcAAAAAAADUBwAAAAAAAAAAAADUBwAAAAAAANUHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gcAAAAAAADSBwAAAAAAAAAAAAAAAPC/"
				],
				[
					501,
					1,
					"left_delete",
					null,
					"AQAAANQHAAAAAAAA1AcAAAAAAAABAAAATA",
					"AQAAAAAAAAABAAAA1QcAAAAAAADVBwAAAAAAAAAAAAAAAPC/"
				],
				[
					502,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAANQHAAAAAAAA1QcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AcAAAAAAADUBwAAAAAAAAAAAAAAAPC/"
				],
				[
					514,
					1,
					"insert",
					{
						"characters": "\nrert"
					},
					"BgAAAH8HAAAAAAAAgAcAAAAAAAAAAAAAgAcAAAAAAACCBwAAAAAAAAAAAACCBwAAAAAAAIMHAAAAAAAAAAAAAIMHAAAAAAAAhAcAAAAAAAAAAAAAhAcAAAAAAACFBwAAAAAAAAAAAACFBwAAAAAAAIYHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwcAAAAAAAB/BwAAAAAAAP///////+9/"
				],
				[
					515,
					2,
					"left_delete",
					null,
					"AgAAAIUHAAAAAAAAhQcAAAAAAAABAAAAdIQHAAAAAAAAhAcAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAhgcAAAAAAACGBwAAAAAAAAAAAAAAAPC/"
				],
				[
					516,
					1,
					"insert",
					{
						"characters": "turn"
					},
					"BAAAAIQHAAAAAAAAhQcAAAAAAAAAAAAAhQcAAAAAAACGBwAAAAAAAAAAAACGBwAAAAAAAIcHAAAAAAAAAAAAAIcHAAAAAAAAiAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAcAAAAAAACEBwAAAAAAAAAAAAAAAPC/"
				],
				[
					517,
					1,
					"insert",
					{
						"characters": " lws_session"
					},
					"DAAAAIgHAAAAAAAAiQcAAAAAAAAAAAAAiQcAAAAAAACKBwAAAAAAAAAAAACKBwAAAAAAAIsHAAAAAAAAAAAAAIsHAAAAAAAAjAcAAAAAAAAAAAAAjAcAAAAAAACNBwAAAAAAAAAAAACNBwAAAAAAAI4HAAAAAAAAAAAAAI4HAAAAAAAAjwcAAAAAAAAAAAAAjwcAAAAAAACQBwAAAAAAAAAAAACQBwAAAAAAAJEHAAAAAAAAAAAAAJEHAAAAAAAAkgcAAAAAAAAAAAAAkgcAAAAAAACTBwAAAAAAAAAAAACTBwAAAAAAAJQHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAcAAAAAAACIBwAAAAAAAAAAAAAAAPC/"
				],
				[
					518,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJQHAAAAAAAAlgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAcAAAAAAACUBwAAAAAAAAAAAAAAAPC/"
				],
				[
					519,
					1,
					"insert",
					{
						"characters": "ws->lwsi"
					},
					"CAAAAJUHAAAAAAAAlgcAAAAAAAAAAAAAlgcAAAAAAACXBwAAAAAAAAAAAACXBwAAAAAAAJgHAAAAAAAAAAAAAJgHAAAAAAAAmQcAAAAAAAAAAAAAmQcAAAAAAACaBwAAAAAAAAAAAACaBwAAAAAAAJsHAAAAAAAAAAAAAJsHAAAAAAAAnAcAAAAAAAAAAAAAnAcAAAAAAACdBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQcAAAAAAACVBwAAAAAAAAAAAAAAAPC/"
				],
				[
					521,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJ4HAAAAAAAAnwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngcAAAAAAACeBwAAAAAAAAAAAAAAAPC/"
				],
				[
					524,
					1,
					"left_delete",
					null,
					"AQAAAKAHAAAAAAAAoAcAAAAAAACCAAAAICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZS0+c2VzczsKCiAgcmV0dXJuIDA7Cg",
					"AQAAAAAAAAABAAAAoAcAAAAAAAAiCAAAAAAAAAAAAAAAAAAA"
				],
				[
					595,
					1,
					"cut",
					null,
					"AQAAADsHAAAAAAAAOwcAAAAAAABnAAAACnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKd3Nfc2Vzc2lvbihNaW5uZXRXZWJzb2NrZXQqd3MpIHsKICByZXR1cm4gbHdzX3Nlc3Npb24od3MtPmx3c2kpOwp9Cg",
					"AQAAAAAAAAABAAAAOwcAAAAAAACiBwAAAAAAAAAAAAAAAPC/"
				],
				[
					596,
					2,
					"paste",
					null,
					"AgAAADsHAAAAAAAAogcAAAAAAAAAAAAAogcAAAAAAAAJCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwcAAAAAAAA7BwAAAAAAAAAAAAAAAPC/"
				],
				[
					600,
					2,
					"left_delete",
					null,
					"AgAAAGMHAAAAAAAAYwcAAAAAAAAGAAAAZXNzaW9uYgcAAAAAAABiBwAAAAAAAAEAAABz",
					"AQAAAAAAAAABAAAAYwcAAAAAAABpBwAAAAAAAAAAAAAAAPC/"
				],
				[
					601,
					1,
					"insert",
					{
						"characters": "opaque"
					},
					"BgAAAGIHAAAAAAAAYwcAAAAAAAAAAAAAYwcAAAAAAABkBwAAAAAAAAAAAABkBwAAAAAAAGUHAAAAAAAAAAAAAGUHAAAAAAAAZgcAAAAAAAAAAAAAZgcAAAAAAABnBwAAAAAAAAAAAABnBwAAAAAAAGgHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgcAAAAAAABiBwAAAAAAAAAAAAAAAPC/"
				],
				[
					631,
					1,
					"paste",
					null,
					"AgAAAFEHAAAAAAAAZQcAAAAAAAAAAAAAZQcAAAAAAABlBwAAAAAAAAwAAABzZXNzaW9uX2RhdGE",
					"AQAAAAAAAAABAAAAUQcAAAAAAABdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					653,
					1,
					"paste",
					null,
					"AgAAAJAHAAAAAAAAqAcAAAAAAAAAAAAAqAcAAAAAAACoBwAAAAAAAAsAAABsd3Nfc2Vzc2lvbg",
					"AQAAAAAAAAABAAAAkAcAAAAAAACbBwAAAAAAAAAAAAAAAPC/"
				],
				[
					662,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACcCgAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgc2l6ZV90IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIEJPT0wgYmluYXJ5OwogIHN0cnVjdCBwb2xsZmQgcGZkOwogIC8vc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7Cn0gTWlubmV0V2Vic29ja2V0OwoKZXh0ZXJuIGludDY0X3Qgd3Nfc2VyaWFsOwoKTWlubmV0V2Vic29ja2V0KiB3c19mcm9tX3dzaTIoc3RydWN0IGx3cyosIEpTQ29udGV4dCopOwpKU1ZhbHVlIG1pbm5ldF93c19vYmplY3QoSlNDb250ZXh0Kiwgc3RydWN0IGx3cyopOwpKU1ZhbHVlIG1pbm5ldF93c193cmFwKEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKdm9pZCBtaW5uZXRfd3Nfc3NsY2VydChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzX2NvbnRleHRfY3JlYXRpb25faW5mbyosIEpTVmFsdWUgb3B0aW9ucyk7CkpTVmFsdWUgbWlubmV0X3dzX2NvbnN0cnVjdG9yKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZVtdKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF93c19jbGFzc19pZDsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU1ZhbHVlIG1pbm5ldF93c19wcm90bywgbWlubmV0X3dzX2N0b3I7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF93c19jbGFzczsKZXh0ZXJuIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF93c19wcm90b19mdW5jc1tdLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzW10sIG1pbm5ldF93c19wcm90b19kZWZzW107CmV4dGVybiBjb25zdCBzaXplX3QgbWlubmV0X3dzX3Byb3RvX2Z1bmNzX3NpemUsIG1pbm5ldF93c19zdGF0aWNfZnVuY3Nfc2l6ZSwgbWlubmV0X3dzX3Byb3RvX2RlZnNfc2l6ZTsKCnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSB7CiAgSlNPYmplY3QqIG9iajsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7CiAgc3RydWN0IHNlc3Npb25fZGF0YSogc2VzczsKICBKU1ZhbHVlIGhhbmRsZXJzWzJdOwogIGludDY0X3Qgc2VyaWFsOwogIE1pbm5ldFN0YXR1cyBzdGF0dXM7CiAgaW50IGVycm9yOwp9OwoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCmx3c19vcGFxdWUoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZTsKCiAgb3BhcXVlID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEpKTsKICBvcGFxdWUtPnNlcmlhbCA9ICsrd3Nfc2VyaWFsOwogIG9wYXF1ZS0+c3RhdHVzID0gQ09OTkVDVElORzsKCiAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgb3BhcXVlKTsKICByZXR1cm4gb3BhcXVlOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBzZXNzaW9uX2RhdGEqCmx3c19zZXNzaW9uKHN0cnVjdCBsd3MqIHdzaSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZS0+c2VzczsKCiAgcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoTWlubmV0V2Vic29ja2V0KndzKSB7CiAgcmV0dXJuIGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSk7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKd3Nfc2Vzc2lvbihNaW5uZXRXZWJzb2NrZXQqd3MpIHsKICByZXR1cm4gbHdzX3Nlc3Npb24od3MtPmx3c2kpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKd3NfZnJvbV93c2koc3RydWN0IGx3cyAqd3NpKSB7CiByZXR1cm4gKChzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqKWx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKS0+d3M7Cn0KCi8qCnN0YXRpYyBpbmxpbmUgaW50CndzX2x3cyhjb25zdCBNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiByZXR1cm4gd3MtPmx3c2k7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSk7Cn0qLwoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAoAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwcAAAAAAABwBwAAAAAAAAAAAAAAAPC/"
				],
				[
					686,
					1,
					"cut",
					null,
					"AQAAAP4FAAAAAAAA/gUAAAAAAAAgAAAAICBvcGFxdWUtPnNlcmlhbCA9ICsrd3Nfc2VyaWFsOwo",
					"AQAAAAAAAAABAAAA/gUAAAAAAAAeBgAAAAAAAAAAAAAAAPC/"
				],
				[
					687,
					1,
					"paste",
					null,
					"AQAAAP4FAAAAAAAAHgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gUAAAAAAAD+BQAAAAAAAAAAAAAAAPC/"
				],
				[
					698,
					1,
					"cut",
					null,
					"AQAAABwBAAAAAAAAHAEAAAAAAAAVAAAAICBzdHJ1Y3QgcG9sbGZkIHBmZDsK",
					"AQAAAAAAAAABAAAAHAEAAAAAAAAxAQAAAAAAAAAAAAAAAPC/"
				],
				[
					703,
					1,
					"paste",
					null,
					"AQAAANUEAAAAAAAA6gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QQAAAAAAADVBAAAAAAAAAAAAAAAAPC/"
				],
				[
					706,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACgCgAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgc2l6ZV90IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIEJPT0wgYmluYXJ5OwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCk1pbm5ldFdlYnNvY2tldCogd3NfZnJvbV93c2kyKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfb2JqZWN0KEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CnZvaWQgbWlubmV0X3dzX3NzbGNlcnQoSlNDb250ZXh0Kiwgc3RydWN0IGx3c19jb250ZXh0X2NyZWF0aW9uX2luZm8qLCBKU1ZhbHVlIG9wdGlvbnMpOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIEpTT2JqZWN0KiBvYmo7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgSlNWYWx1ZSBoYW5kbGVyc1syXTsKICBpbnQ2NF90IHNlcmlhbDsKICBNaW5uZXRTdGF0dXMgc3RhdHVzOwogICAgc3RydWN0IHBvbGxmZCBwZmQ7CmludCBlcnJvcjsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgpsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWU7CgogIG9wYXF1ZSA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKSk7CiAgb3BhcXVlLT5zZXJpYWwgPSArK3dzX3NlcmlhbDsKICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CgogIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIG9wYXF1ZSk7CiAgcmV0dXJuIG9wYXF1ZTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKd3Nfb3BhcXVlKE1pbm5ldFdlYnNvY2tldCogd3MpIHsKICByZXR1cm4gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzLT5sd3NpKTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgp3c19zZXNzaW9uKE1pbm5ldFdlYnNvY2tldCogd3MpIHsKICByZXR1cm4gbHdzX3Nlc3Npb24od3MtPmx3c2kpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKd3NfZnJvbV93c2koc3RydWN0IGx3cyogd3NpKSB7CiAgcmV0dXJuICgoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKilsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSktPndzOwp9CgovKgpzdGF0aWMgaW5saW5lIGludAp3c19sd3MoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIHdzLT5sd3NpOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKd3Nfb3BhcXVlKGNvbnN0IE1pbm5ldFdlYnNvY2tldCogd3MpIHsKIHJldHVybiBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3MtPmx3c2kpOwp9Ki8KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0KgptaW5uZXRfd3NfZGF0YShKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZShvYmosIG1pbm5ldF93c19jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0KgptaW5uZXRfd3NfZGF0YTIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9XRUJTT0NLRVRfSCAqLwoAAAAAAAAAAKAKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gQAAAAAAADqBAAAAAAAAAAAAAAAAPC/"
				],
				[
					707,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACgCgAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgc2l6ZV90IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIEJPT0wgYmluYXJ5OwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCk1pbm5ldFdlYnNvY2tldCogd3NfZnJvbV93c2kyKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfb2JqZWN0KEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CnZvaWQgbWlubmV0X3dzX3NzbGNlcnQoSlNDb250ZXh0Kiwgc3RydWN0IGx3c19jb250ZXh0X2NyZWF0aW9uX2luZm8qLCBKU1ZhbHVlIG9wdGlvbnMpOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIEpTT2JqZWN0KiBvYmo7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgSlNWYWx1ZSBoYW5kbGVyc1syXTsKICBpbnQ2NF90IHNlcmlhbDsKICBNaW5uZXRTdGF0dXMgc3RhdHVzOwogIHN0cnVjdCBwb2xsZmQgcGZkOwogIGludCBlcnJvcjsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgpsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWU7CgogIG9wYXF1ZSA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKSk7CiAgb3BhcXVlLT5zZXJpYWwgPSArK3dzX3NlcmlhbDsKICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CgogIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIG9wYXF1ZSk7CiAgcmV0dXJuIG9wYXF1ZTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKd3Nfb3BhcXVlKE1pbm5ldFdlYnNvY2tldCogd3MpIHsKICByZXR1cm4gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzLT5sd3NpKTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgp3c19zZXNzaW9uKE1pbm5ldFdlYnNvY2tldCogd3MpIHsKICByZXR1cm4gbHdzX3Nlc3Npb24od3MtPmx3c2kpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKd3NfZnJvbV93c2koc3RydWN0IGx3cyogd3NpKSB7CiAgcmV0dXJuICgoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKilsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSktPndzOwp9CgovKgpzdGF0aWMgaW5saW5lIGludAp3c19sd3MoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIHdzLT5sd3NpOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKd3Nfb3BhcXVlKGNvbnN0IE1pbm5ldFdlYnNvY2tldCogd3MpIHsKIHJldHVybiBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3MtPmx3c2kpOwp9Ki8KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0KgptaW5uZXRfd3NfZGF0YShKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZShvYmosIG1pbm5ldF93c19jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0KgptaW5uZXRfd3NfZGF0YTIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9XRUJTT0NLRVRfSCAqLwoAAAAAAAAAAKEKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gQAAAAAAADqBAAAAAAAAAAAAAAAAPC/"
				],
				[
					769,
					1,
					"cut",
					null,
					"AQAAAJMEAAAAAAAAkwQAAAAAAAAXAAAAICBKU1ZhbHVlIGhhbmRsZXJzWzJdOwo",
					"AQAAAAAAAAABAAAAkwQAAAAAAACqBAAAAAAAAAAAAAAAAPC/"
				],
				[
					770,
					2,
					"paste",
					null,
					"AgAAAJMEAAAAAAAAqgQAAAAAAAAAAAAAqgQAAAAAAADBBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwQAAAAAAACTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					783,
					1,
					"left_delete",
					null,
					"AQAAAKUEAAAAAAAApQQAAAAAAAADAAAAWzJd",
					"AQAAAAAAAAABAAAAqAQAAAAAAAClBAAAAAAAAAAAAAAAAPC/"
				],
				[
					794,
					1,
					"left_delete",
					null,
					"AQAAAKcEAAAAAAAApwQAAAAAAAAXAAAAICBKU1ZhbHVlIGhhbmRsZXJzWzJdOwo",
					"AQAAAAAAAAABAAAApwQAAAAAAAC+BAAAAAAAAAAAAAAAAPC/"
				],
				[
					797,
					1,
					"left_delete",
					null,
					"AQAAAKQEAAAAAAAApAQAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAApQQAAAAAAAClBAAAAAAAAAAAAAAAAPC/"
				],
				[
					820,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACdCgAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgc2l6ZV90IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIEJPT0wgYmluYXJ5OwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCk1pbm5ldFdlYnNvY2tldCogd3NfZnJvbV93c2kyKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfb2JqZWN0KEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CnZvaWQgbWlubmV0X3dzX3NzbGNlcnQoSlNDb250ZXh0Kiwgc3RydWN0IGx3c19jb250ZXh0X2NyZWF0aW9uX2luZm8qLCBKU1ZhbHVlIG9wdGlvbnMpOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIEpTT2JqZWN0KiBvYmo7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgSlNWYWx1ZSBoYW5kbGVyOwogIGludDY0X3Qgc2VyaWFsOwogIE1pbm5ldFN0YXR1cyBzdGF0dXM7CiAgc3RydWN0IHBvbGxmZCBwb2xsOwogIGludCBlcnJvcjsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgpsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWU7CgogIG9wYXF1ZSA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKSk7CiAgb3BhcXVlLT5zZXJpYWwgPSArK3dzX3NlcmlhbDsKICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CgogIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIG9wYXF1ZSk7CiAgcmV0dXJuIG9wYXF1ZTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKd3Nfb3BhcXVlKE1pbm5ldFdlYnNvY2tldCogd3MpIHsKICByZXR1cm4gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzLT5sd3NpKTsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgp3c19zZXNzaW9uKE1pbm5ldFdlYnNvY2tldCogd3MpIHsKICByZXR1cm4gbHdzX3Nlc3Npb24od3MtPmx3c2kpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKd3NfZnJvbV93c2koc3RydWN0IGx3cyogd3NpKSB7CiAgcmV0dXJuICgoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKilsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSktPndzOwp9CgovKgpzdGF0aWMgaW5saW5lIGludAp3c19sd3MoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIHdzLT5sd3NpOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKd3Nfb3BhcXVlKGNvbnN0IE1pbm5ldFdlYnNvY2tldCogd3MpIHsKIHJldHVybiBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3MtPmx3c2kpOwp9Ki8KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0KgptaW5uZXRfd3NfZGF0YShKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZShvYmosIG1pbm5ldF93c19jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0KgptaW5uZXRfd3NfZGF0YTIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9XRUJTT0NLRVRfSCAqLwoAAAAAAAAAAJ0KAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAEAAAAAAAAeAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "libwebsockets/include/libwebsockets/lws-misc.h",
			"settings":
			{
				"buffer_size": 36955,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "minnet-server-http.c",
			"settings":
			{
				"buffer_size": 20538,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA6UAAAI2luY2x1ZGUgPHN5cy90eXBlcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDxjdHlwZS5oPgojaW5jbHVkZSA8bGliZ2VuLmg+CgojaW5jbHVkZSAianN1dGlscy5oIgojaW5jbHVkZSAibWlubmV0LXdlYnNvY2tldC5oIgojaW5jbHVkZSAibWlubmV0LXNlcnZlci5oIgojaW5jbHVkZSAibWlubmV0LXNlcnZlci1odHRwLmgiCiNpbmNsdWRlICJtaW5uZXQtcmVzcG9uc2UuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgpNaW5uZXRWaG9zdE9wdGlvbnMqCnZob3N0X29wdGlvbnNfY3JlYXRlKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBuYW1lLCBjb25zdCBjaGFyKiB2YWx1ZSkgewogIE1pbm5ldFZob3N0T3B0aW9ucyogdm8gPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKE1pbm5ldFZob3N0T3B0aW9ucykpOwoKI2lmZGVmIERFQlVHX09VVFBVVAogIGZwcmludGYoc3RkZXJyLCAidmhvc3Rfb3B0aW9uc19jcmVhdGUgJXMgJXNcbiIsIG5hbWUsIHZhbHVlKTsKI2VuZGlmCgogIHZvLT5uYW1lID0gbmFtZSA/IGpzX3N0cmR1cChjdHgsIG5hbWUpIDogMDsKICB2by0+dmFsdWUgPSB2YWx1ZSA/IGpzX3N0cmR1cChjdHgsIHZhbHVlKSA6IDA7CgogIHJldHVybiB2bzsKfQoKTWlubmV0Vmhvc3RPcHRpb25zKgp2aG9zdF9vcHRpb25zX25ldyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZob3N0X29wdGlvbikgewogIE1pbm5ldFZob3N0T3B0aW9ucyogdm87CiAgSlNWYWx1ZSBuYW1lLCB2YWx1ZTsKICBjb25zdCBjaGFyICpuYW1lc3RyLCAqdmFsdWVzdHI7CgogIG5hbWUgPSBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHZob3N0X29wdGlvbiwgMCk7CiAgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHZob3N0X29wdGlvbiwgMSk7CgogIG5hbWVzdHIgPSBKU19Ub0NTdHJpbmcoY3R4LCBuYW1lKTsKICB2YWx1ZXN0ciA9IEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKTsKCiAgSlNfRnJlZVZhbHVlKGN0eCwgbmFtZSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsdWUpOwoKICB2byA9IHZob3N0X29wdGlvbnNfY3JlYXRlKGN0eCwgbmFtZXN0ciwgdmFsdWVzdHIpOwoKICBKU19GcmVlQ1N0cmluZyhjdHgsIG5hbWVzdHIpOwogIEpTX0ZyZWVDU3RyaW5nKGN0eCwgdmFsdWVzdHIpOwoKICByZXR1cm4gdm87Cn0KCnZvaWQKdmhvc3Rfb3B0aW9uc19mcmVlKEpTQ29udGV4dCogY3R4LCBNaW5uZXRWaG9zdE9wdGlvbnMqIHZvKSB7CgogIGlmKHZvLT5uYW1lKQogICAganNfZnJlZShjdHgsICh2b2lkKil2by0+bmFtZSk7CiAgaWYodm8tPnZhbHVlKQogICAganNfZnJlZShjdHgsICh2b2lkKil2by0+dmFsdWUpOwoKICBqc19mcmVlKGN0eCwgKHZvaWQqKXZvKTsKfQoKTWlubmV0SHR0cE1vdW50Kgptb3VudF9jcmVhdGUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIG1vdW50cG9pbnQsIGNvbnN0IGNoYXIqIG9yaWdpbiwgY29uc3QgY2hhciogZGVmLCBlbnVtIGx3c19tb3VudF9wcm90b2NvbHMgb3JpZ2luX3Byb3RvKSB7CiAgTWlubmV0SHR0cE1vdW50KiBtID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihNaW5uZXRIdHRwTW91bnQpKTsKCiAgLy8gcHJpbnRmKCJtb3VudF9jcmVhdGUgbW50PSUtMTBzIG9yZz0lLTEwcyBkZWY9JXNcbiIsIG1vdW50cG9pbnQsIG9yaWdpbiwgZGVmKTsKCiAgbS0+bHdzLm1vdW50cG9pbnQgPSBqc19zdHJkdXAoY3R4LCBtb3VudHBvaW50KTsKICBtLT5sd3Mub3JpZ2luID0gb3JpZ2luID8ganNfc3RyZHVwKGN0eCwgb3JpZ2luKSA6IDA7CiAgbS0+bHdzLmRlZiA9IGRlZiA/IGpzX3N0cmR1cChjdHgsIGRlZikgOiAwOwogIG0tPmx3cy5wcm90b2NvbCA9IG9yaWdpbl9wcm90byA9PSBMV1NNUFJPX0NBTExCQUNLID8gImh0dHAiIDogImRlZnByb3QiOwogIG0tPmx3cy5vcmlnaW5fcHJvdG9jb2wgPSBvcmlnaW5fcHJvdG87CiAgbS0+bHdzLm1vdW50cG9pbnRfbGVuID0gc3RybGVuKG1vdW50cG9pbnQpOwoKICByZXR1cm4gbTsKfQoKTWlubmV0SHR0cE1vdW50Kgptb3VudF9uZXcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmosIGNvbnN0IGNoYXIqIGtleSkgewogIE1pbm5ldEh0dHBNb3VudCogcmV0OwogIEpTVmFsdWUgbW50ID0gSlNfVU5ERUZJTkVELCBvcmcgPSBKU19VTkRFRklORUQsIGRlZiA9IEpTX1VOREVGSU5FRDsKCiAgaWYoSlNfSXNBcnJheShjdHgsIG9iaikpIHsKICAgIG1udCA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgb2JqLCAwKTsKICAgIG9yZyA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgb2JqLCAxKTsKICAgIGRlZiA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgb2JqLCAyKTsKICB9IGVsc2UgaWYoSlNfSXNGdW5jdGlvbihjdHgsIG9iaikpIHsKCiAgICBpZigha2V5KSB7CiAgICAgIHNpemVfdCBuYW1lbGVuOwogICAgICBKU1ZhbHVlIG5hbWUgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgIm5hbWUiKTsKICAgICAgY29uc3QgY2hhciogbmFtZXN0ciA9IEpTX1RvQ1N0cmluZ0xlbihjdHgsICZuYW1lbGVuLCBuYW1lKTsKICAgICAgY2hhciBidWZbbmFtZWxlbiArIDJdOwogICAgICBwc3RyY3B5KCZidWZbMV0sIG5hbWVsZW4gKyAxLCBuYW1lc3RyKTsKICAgICAgYnVmWzBdID0gJy8nOwogICAgICBidWZbbmFtZWxlbiArIDFdID0gJ1wwJzsKICAgICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBuYW1lc3RyKTsKICAgICAgbW50ID0gSlNfTmV3U3RyaW5nKGN0eCwgYnVmKTsKICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgbmFtZSk7CiAgICB9IGVsc2UgewogICAgICBtbnQgPSBKU19OZXdTdHJpbmcoY3R4LCBrZXkpOwogICAgfQoKICAgIG9yZyA9IEpTX0R1cFZhbHVlKGN0eCwgb2JqKTsKICB9CgogIGNvbnN0IGNoYXIqIHBhdGggPSBKU19Ub0NTdHJpbmcoY3R4LCBtbnQpOwoKICAvLyBwcmludGYoIm1vdW50X25ldyAnJXMnXG4iLCBwYXRoKTsKCiAgaWYoSlNfSXNGdW5jdGlvbihjdHgsIG9yZykpIHsKICAgIHJldCA9IG1vdW50X2NyZWF0ZShjdHgsIHBhdGgsIDAsIDAsIExXU01QUk9fQ0FMTEJBQ0spOwoKICAgIEdFVENCVEhJUyhvcmcsIHJldC0+Y2FsbGJhY2ssIEpTX1VOREVGSU5FRCk7CgogIH0gZWxzZSB7CiAgICBjb25zdCBjaGFyKiBkZXN0ID0gSlNfVG9DU3RyaW5nKGN0eCwgb3JnKTsKICAgIGNvbnN0IGNoYXIqIGRvdHNsYXNoc2xhc2ggPSBzdHJzdHIoZGVzdCwgIjovLyIpOwogICAgc2l6ZV90IHBsZW4gPSBkb3RzbGFzaHNsYXNoID8gZG90c2xhc2hzbGFzaCAtIGRlc3QgOiAwOwogICAgY29uc3QgY2hhciogb3JpZ2luID0gJmRlc3RbcGxlbiA/IHBsZW4gKyAzIDogMF07CiAgICBjb25zdCBjaGFyKiBpbmRleCA9IEpTX0lzVW5kZWZpbmVkKGRlZikgPyAwIDogSlNfVG9DU3RyaW5nKGN0eCwgZGVmKTsKICAgIGVudW0gbHdzX21vdW50X3Byb3RvY29scyBwcm90byA9IHBsZW4gPT0gMCA/IExXU01QUk9fRklMRSA6ICFzdHJuY21wKGRlc3QsICJodHRwcyIsIHBsZW4pID8gTFdTTVBST19IVFRQUyA6IExXU01QUk9fSFRUUDsKCiAgICByZXQgPSBtb3VudF9jcmVhdGUoY3R4LCBwYXRoLCBvcmlnaW4sIGluZGV4LCBwcm90byk7CgogICAgaWYoaW5kZXgpCiAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgaW5kZXgpOwogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBkZXN0KTsKICB9CgogIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcGF0aCk7CgogIEpTX0ZyZWVWYWx1ZShjdHgsIG1udCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgb3JnKTsKICBKU19GcmVlVmFsdWUoY3R4LCBkZWYpOwoKICByZXR1cm4gcmV0Owp9CgpzdHJ1Y3QgaHR0cF9tb3VudCoKbW91bnRfZmluZChjb25zdCBjaGFyKiB4LCBzaXplX3QgbikgewogIHN0cnVjdCBsd3NfaHR0cF9tb3VudCAqcCwgKm0gPSAwOwogIGludCBwcm90b2NvbCA9IG4gPT0gMCA/IExXU01QUk9fQ0FMTEJBQ0sgOiBMV1NNUFJPX0hUVFA7CiAgc2l6ZV90IGwgPSAwOwogIGlmKG4gPT0gMCkKICAgIG4gPSBzdHJsZW4oeCk7CiAgaWYocHJvdG9jb2wgPT0gTFdTTVBST19DQUxMQkFDSyAmJiB4WzBdID09ICcvJykgewogICAgeCsrOwogICAgbi0tOwogIH0KICBmb3IocCA9IChzdHJ1Y3QgbHdzX2h0dHBfbW91bnQqKW1pbm5ldF9zZXJ2ZXIuY29udGV4dC5pbmZvLm1vdW50czsgcDsgcCA9IChzdHJ1Y3QgbHdzX2h0dHBfbW91bnQqKXAtPm1vdW50X25leHQpIHsKICAgIGlmKHByb3RvY29sICE9IExXU01QUk9fQ0FMTEJBQ0sgfHwgcC0+b3JpZ2luX3Byb3RvY29sID09IExXU01QUk9fQ0FMTEJBQ0spIHsKICAgICAgY29uc3QgY2hhciogbW50ID0gcC0+bW91bnRwb2ludDsKICAgICAgc2l6ZV90IGxlbiA9IHAtPm1vdW50cG9pbnRfbGVuOwogICAgICBpZihwcm90b2NvbCA9PSBMV1NNUFJPX0NBTExCQUNLICYmIG1udFswXSA9PSAnLycpIHsKICAgICAgICBtbnQrKzsKICAgICAgICBsZW4tLTsKICAgICAgfQogICAgICBpZihsZW4gPT0gbiAmJiAhc3RybmNtcCh4LCBtbnQsIG4pKSB7CiAgICAgICAgbSA9IHA7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgaWYobiA+PSBsZW4gJiYgbGVuID49IGwgJiYgIXN0cm5jbXAobW50LCB4LCBNSU4obGVuLCBuKSkpIHsKICAgICAgICBtID0gcDsKICAgICAgfQogICAgfQogIH0KICByZXR1cm4gKHN0cnVjdCBodHRwX21vdW50KiltOwp9Cgp2b2lkCm1vdW50X2ZyZWUoSlNDb250ZXh0KiBjdHgsIE1pbm5ldEh0dHBNb3VudCBjb25zdCogbSkgewogIGpzX2ZyZWUoY3R4LCAodm9pZCopbS0+bHdzLm1vdW50cG9pbnQpOwoKICBpZihtLT5sd3Mub3JpZ2luKQogICAganNfZnJlZShjdHgsICh2b2lkKiltLT5sd3Mub3JpZ2luKTsKCiAgaWYobS0+bHdzLmRlZikKICAgIGpzX2ZyZWUoY3R4LCAodm9pZCopbS0+bHdzLmRlZik7CgogIGpzX2ZyZWUoY3R4LCAodm9pZCopbSk7Cn0KCmludApodHRwX3NlcnZlcl9yZXNwb25kKHN0cnVjdCBsd3MqIHdzaSwgTWlubmV0QnVmZmVyKiBidWYsIE1pbm5ldFJlc3BvbnNlKiByZXNwLCBKU0NvbnRleHQqIGN0eCkgewoKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSA9IGx3c19vcGFxdWUod3NpLCBjdHgpOwogIGludCBpc19zc2wgPSBsd3NfaXNfc3NsKHdzaSk7CgogIGx3c2xfdXNlcigiaHR0cCAiIEZHKCIxOTgiKSAiJS0zOHMiIE5DICIgd3NpIyUiIFBSSWQ2NCAiIHVybD0lcyBzdGF0dXM9JWQgdHlwZT0lcyBsZW5ndGg9JXp1IiwgIlJFU1BPTkQiLCBvcGFxdWUtPnNlcmlhbCwgcmVzcC0+dXJsLCByZXNwLT5zdGF0dXMsIHJlc3AtPnR5cGUsIGJ1ZmZlcl9IRUFEKCZyZXNwLT5ib2R5KSk7CgogIC8vIHJlc3AtPnJlYWRfb25seSA9IFRSVUU7CgogIGlmKGx3c19hZGRfaHR0cF9jb21tb25faGVhZGVycyh3c2ksIHJlc3AtPnN0YXR1cywgcmVzcC0+dHlwZSwgaXNfc3NsID8gTFdTX0lMTEVHQUxfSFRUUF9DT05URU5UX0xFTiA6IGJ1ZmZlcl9IRUFEKCZyZXNwLT5ib2R5KSwgJmJ1Zi0+d3JpdGUsIGJ1Zi0+ZW5kKSkgewogICAgcmV0dXJuIDE7CiAgfQogIC8qICB7CiAgICAgIGNoYXIqIGIgPSBidWZmZXJfZXNjYXBlZChidWYsIGN0eCk7CgogICAgICBsd3NsX3VzZXIoImx3c19hZGRfaHR0cF9jb21tb25faGVhZGVycyAldGQgJyVzJyIsIGJ1Zi0+d3JpdGUgLSBidWYtPnN0YXJ0LCBiKTsKICAgICAganNfZnJlZShjdHgsIGIpOwogICAgfSovCgogIHsKICAgIHNpemVfdCBsZW4sIG47CiAgICB1aW50OF90ICp4LCAqZW5kOwogICAgZm9yKHggPSByZXNwLT5oZWFkZXJzLnN0YXJ0LCBlbmQgPSByZXNwLT5oZWFkZXJzLndyaXRlOyB4IDwgZW5kOyB4ICs9IGxlbiArIDEpIHsKICAgICAgbGVuID0gYnl0ZV9jaHJzKHgsIGVuZCAtIHgsICJcclxuIiwgMik7CiAgICAgIGlmKGxlbiA+IChuID0gYnl0ZV9jaHIoeCwgbGVuLCAnOicpKSkgewogICAgICAgIGNvbnN0IGNoYXIqIHByb3AgPSBqc19zdHJuZHVwKGN0eCwgKGNvbnN0IGNoYXIqKXgsIG4pOwogICAgICAgIGlmKHhbbl0gPT0gJzonKQogICAgICAgICAgbisrOwogICAgICAgIGlmKGlzc3BhY2UoeFtuXSkpCiAgICAgICAgICBuKys7CgogICAgICAgIGx3c2xfdXNlcigiSFRUUCBoZWFkZXIgJXMgPSAlLipzIiwgcHJvcCwgKGludCkobGVuIC0gbiksICZ4W25dKTsKCiAgICAgICAgaWYoKGx3c19hZGRfaHR0cF9oZWFkZXJfYnlfbmFtZSh3c2ksIChjb25zdCB1bnNpZ25lZCBjaGFyKilwcm9wLCAoY29uc3QgdW5zaWduZWQgY2hhciopJnhbbl0sIGxlbiAtIG4sICZidWYtPndyaXRlLCBidWYtPmVuZCkpKQogICAgICAgICAgSlNfVGhyb3dJbnRlcm5hbEVycm9yKG1pbm5ldF9zZXJ2ZXIuY2IuaHR0cC5jdHgsICJsd3NfYWRkX2h0dHBfaGVhZGVyX2J5X25hbWUgZmFpbGVkIik7CiAgICAgICAganNfZnJlZShjdHgsICh2b2lkKilwcm9wKTsKICAgICAgfQogICAgfQogIH0KICBpbnQgcmV0ID0gbHdzX2ZpbmFsaXplX3dyaXRlX2h0dHBfaGVhZGVyKHdzaSwgYnVmLT5zdGFydCwgJmJ1Zi0+d3JpdGUsIGJ1Zi0+ZW5kKTsKCiAgLyogewogICAgIGNoYXIqIGIgPSBidWZmZXJfZXNjYXBlZChidWYsIGN0eCk7CiAgICAgbHdzbF91c2VyKCJsd3NfZmluYWxpemVfd3JpdGVfaHR0cF9oZWFkZXIgJyVzJyAldGQgcmV0PSVkIiwgYiwgYnVmLT53cml0ZSAtIGJ1Zi0+c3RhcnQsIHJldCk7CiAgICAgIGpzX2ZyZWUoY3R4LCBiKTsKICAgfSovCiAgaWYocmV0KQogICAgcmV0dXJuIDI7CgogIHJldHVybiAwOwp9CgpzdGF0aWMgTWlubmV0UmVzcG9uc2UqCnJlcXVlc3RfaGFuZGxlcihNaW5uZXRTZXNzaW9uKiBzZXJ2LCBNaW5uZXRDYWxsYmFjayogY2IpIHsKICBNaW5uZXRSZXNwb25zZSogcmVzcCA9IG1pbm5ldF9yZXNwb25zZV9kYXRhMihtaW5uZXRfc2VydmVyLmNvbnRleHQuanMsIHNlcnYtPnJlc3Bfb2JqKTsKCiAgaWYoY2IgJiYgY2ItPmN0eCkgewogICAgSlNWYWx1ZSByZXQgPSBtaW5uZXRfZW1pdF90aGlzKGNiLCBzZXJ2LT53c19vYmosIDIsIHNlcnYtPmFyZ3MpOwogICAgbHdzbF91c2VyKCJyZXF1ZXN0X2hhbmRsZXIgcmV0PSVzIiwgSlNfVG9DU3RyaW5nKGNiLT5jdHgsIHJldCkpOwogICAgaWYoSlNfSXNPYmplY3QocmV0KSAmJiBtaW5uZXRfcmVzcG9uc2VfZGF0YTIoY2ItPmN0eCwgcmV0KSkgewogICAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgc2Vydi0+YXJnc1sxXSk7CiAgICAgIHNlcnYtPmFyZ3NbMV0gPSByZXQ7CiAgICAgIHJlc3AgPSBtaW5uZXRfcmVzcG9uc2VfZGF0YTIoY2ItPmN0eCwgcmV0KTsKICAgIH0gZWxzZSB7CiAgICAgIEpTX0ZyZWVWYWx1ZShjYi0+Y3R4LCByZXQpOwogICAgfQogIH0KICBsd3NsX3VzZXIoInJlcXVlc3RfaGFuZGxlciAlcyIsIHJlc3BvbnNlX2R1bXAocmVzcCkpOwoKICByZXR1cm4gcmVzcDsKfQoKc3RhdGljIHNpemVfdApmaWxlX3NpemUoRklMRSogZnApIHsKICBsb25nIHBvcyA9IGZ0ZWxsKGZwKTsKICBzaXplX3Qgc2l6ZSA9IDA7CgogIGlmKGZzZWVrKGZwLCAwLCBTRUVLX0VORCkgIT0gLTEpIHsKICAgIHNpemUgPSBmdGVsbChmcCk7CiAgICBmc2VlayhmcCwgcG9zLCBTRUVLX1NFVCk7CiAgfQogIHJldHVybiBzaXplOwp9CgpzdGF0aWMgaW50CnNlcnZlX2ZpbGUoc3RydWN0IGx3cyogd3NpLCBjb25zdCBjaGFyKiBwYXRoLCBzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnQsIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwLCBKU0NvbnRleHQqIGN0eCkgewogIEZJTEUqIGZwOwogIGNvbnN0IGNoYXIqIG1pbWUgPSBsd3NfZ2V0X21pbWV0eXBlKHBhdGgsICZtb3VudC0+bHdzKTsKCiAgaWYocGF0aFswXSA9PSAnXDAnKQogICAgcGF0aCA9IG1vdW50LT5kZWY7CgogIC8qewogICAgY2hhciBkaXNwb3NpdGlvblsxMDI0XTsKICAgIHNucHJpbnRmKGRpc3Bvc2l0aW9uLCBzaXplb2YoZGlzcG9zaXRpb24pLCAiYXR0YWNobWVudDsgZmlsZW5hbWU9XCIlc1wiIiwgYmFzZW5hbWUocGF0aCkpOwogICAgaGVhZGVyc19zZXQoY3R4LCAmcmVzcC0+aGVhZGVycywgIkNvbnRlbnQtRGlzcG9zaXRpb24iLCBkaXNwb3NpdGlvbik7CiAgfSovCgogIGlmKChmcCA9IGZvcGVuKHBhdGgsICJyYiIpKSkgewogICAgc2l6ZV90IG4gPSBmaWxlX3NpemUoZnApOwoKICAgIGJ1ZmZlcl9hbGxvYygmcmVzcC0+Ym9keSwgbiwgY3R4KTsKCiAgICBpZihmcmVhZChyZXNwLT5ib2R5LndyaXRlLCBuLCAxLCBmcCkgPT0gMSkKICAgICAgcmVzcC0+Ym9keS53cml0ZSArPSBuOwoKICAgIGlmKG1pbWUpIHsKICAgICAgaWYocmVzcC0+dHlwZSkKICAgICAgICBqc19mcmVlKGN0eCwgcmVzcC0+dHlwZSk7CgogICAgICByZXNwLT50eXBlID0ganNfc3RyZHVwKGN0eCwgbWltZSk7CiAgICB9CgogICAgZmNsb3NlKGZwKTsKICB9IGVsc2UgewogICAgY29uc3QgY2hhciogYm9keSA9ICI8aHRtbD48aGVhZD48dGl0bGU+NDA0IE5vdCBGb3VuZDwvdGl0bGU+PG1ldGEgY2hhcnNldD11dGYtOCBodHRwLWVxdWl2PVwiQ29udGVudC1MYW5ndWFnZVwiIGNvbnRlbnQ9XCJlblwiLz48L2hlYWQ+PGJvZHk+PGgxPjQwNCBOb3QgRm91bmQ8L2gxPjwvYm9keT48L2h0bWw+IjsKICAgIHJlc3AtPnN0YXR1cyA9IDQwNDsKICAgIHJlc3AtPm9rID0gRkFMU0U7CgogICAgcmVzcG9uc2Vfd3JpdGUocmVzcCwgYm9keSwgc3RybGVuKGJvZHkpLCBjdHgpOwogIH0KCiAgbHdzbF91c2VyKCJzZXJ2ZV9maWxlIHBhdGg9JXMgbW91bnQ9JS4qcyBsZW5ndGg9JXRkIiwgcGF0aCwgbW91bnQtPmx3cy5tb3VudHBvaW50X2xlbiwgbW91bnQtPmx3cy5tb3VudHBvaW50LCBidWZmZXJfSEVBRCgmcmVzcC0+Ym9keSkpOwoKICByZXR1cm4gMDsKfQoKaW50Cmh0dHBfc2VydmVyX3dyaXRhYmxlKHN0cnVjdCBsd3MqIHdzaSwgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AsIEJPT0wgZG9uZSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CiAgZW51bSBsd3Nfd3JpdGVfcHJvdG9jb2wgbiwgcDsKICBzaXplX3QgcmVtYWluOwogIHNzaXplX3QgcmV0ID0gMDsKCiAgbiA9IGRvbmUgPyBMV1NfV1JJVEVfSFRUUF9GSU5BTCA6IExXU19XUklURV9IVFRQOwogIC8qICBpZighYnVmZmVyX0JZVEVTKCZyZXNwLT5ib2R5KSAmJiBpc19oMih3c2kpKSBidWZmZXJfYXBwZW5kKCZyZXNwLT5ib2R5LCAiXG5YWFhYWFhYWFhYWFhYWCIsIDEsIGN0eCk7Ki8KCiAgaWYoKHJlbWFpbiA9IGJ1ZmZlcl9CWVRFUygmcmVzcC0+Ym9keSkpKSB7CiAgICB1aW50OF90KiB4ID0gcmVzcC0+Ym9keS5yZWFkOwogICAgc2l6ZV90IGwgPSBpc19oMih3c2kpID8gKHJlbWFpbiA+IDEwMjQgPyAxMDI0IDogcmVtYWluKSA6IHJlbWFpbjsKCiAgICBpZihsID4gMCkgewogICAgICBwID0gKHJlbWFpbiAtIGwpID4gMCA/IExXU19XUklURV9IVFRQIDogbjsKICAgICAgcmV0ID0gbHdzX3dyaXRlKHdzaSwgeCwgbCwgcCk7CiAgICAgIGx3c2xfdXNlcigibHdzX3dyaXRlIHdzaSMlIiBQUklpNjQgIiBsZW49JXp1IGZpbmFsPSVkIHJldD0lemQiLCBvcGFxdWUtPnNlcmlhbCwgbCwgcCA9PSBMV1NfV1JJVEVfSFRUUF9GSU5BTCwgcmV0KTsKICAgICAgaWYocmV0ID4gMCkKICAgICAgICBidWZmZXJfc2tpcCgmcmVzcC0+Ym9keSwgcmV0KTsKICAgIH0KICB9CgogIGx3c2xfdXNlcigiaHR0cF9zZXJ2ZXJfd3JpdGFibGUgd3NpIyUiIFBSSWk2NCAiIGRvbmU9JWkgcmVtYWluPSV6dSBmaW5hbD0lZCIsIG9wYXF1ZS0+c2VyaWFsLCBkb25lLCBidWZmZXJfQllURVMoJnJlc3AtPmJvZHkpLCBwID09IExXU19XUklURV9IVFRQX0ZJTkFMKTsKCiAgaWYocCA9PSBMV1NfV1JJVEVfSFRUUF9GSU5BTCkgewogICAgaWYobHdzX2h0dHBfdHJhbnNhY3Rpb25fY29tcGxldGVkKHdzaSkpCiAgICAgIHJldHVybiAtMTsKICB9IGVsc2UgewogICAgLyoKICAgICAqIEhUVFAvMS4wIG5vIGtlZXBhbGl2ZTogY2xvc2UgbmV0d29yayBjb25uZWN0aW9uCiAgICAgKiBIVFRQLzEuMSBvciBIVFRQMS4wICsgS0E6IHdhaXQgLyBwcm9jZXNzIG5leHQgdHJhbnNhY3Rpb24KICAgICAqIEhUVFAvMjogc3RyZWFtIGVuZGVkLCBwYXJlbnQgY29ubmVjdGlvbiByZW1haW5zIHVwCiAgICAgKi8KICAgIGx3c19jYWxsYmFja19vbl93cml0YWJsZSh3c2kpOwogIH0KCiAgcmV0dXJuIDA7Cn0KCmludApodHRwX3NlcnZlcl9jYWxsYmFjayhzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIEpTQ29udGV4dCogY3R4ID0gbWlubmV0X3NlcnZlci5jb250ZXh0LmpzOwogIHVpbnQ4X3QgYnVmW0xXU19QUkUgKyBMV1NfUkVDT01NRU5ERURfTUlOX0hFQURFUl9TUEFDRV07CiAgTWlubmV0SHR0cE1ldGhvZCBtZXRob2QgPSAtMTsKICBNaW5uZXRTZXNzaW9uKiBzZXJ2ID0gdXNlcjsKICBKU1ZhbHVlIHdzX29iaiA9IG1pbm5ldF93c19vYmplY3QoY3R4LCB3c2kpOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CiAgY2hhciogdXJsOwogIHNpemVfdCB1cmxfbGVuOwoKICBpZihzZXJ2KSB7CiAgICBpZihyZWFzb24gPT0gTFdTX0NBTExCQUNLX0ZJTFRFUl9IVFRQX0NPTk5FQ1RJT04gfHwgcmVhc29uID09IExXU19DQUxMQkFDS19IVFRQX0NPTkZJUk1fVVBHUkFERSkgewogICAgICBzZXJ2LT5zZXJpYWwgPSBvcGFxdWUtPnNlcmlhbDsKICAgICAgc2Vydi0+aDIgPSBpc19oMih3c2kpOwogICAgfQogIH0KCiAgaWYob3BhcXVlLT5yZXEpIHsKICAgIHVybCA9IG9wYXF1ZS0+cmVxLT51cmw7CiAgICBtZXRob2QgPSBvcGFxdWUtPnJlcS0+bWV0aG9kOwogIH0gZWxzZSB7CiAgICB1cmwgPSBsd3NfdXJpX2FuZF9tZXRob2Qod3NpLCBjdHgsICZtZXRob2QpOwogIH0KICB1cmxfbGVuID0gdXJsID8gc3RybGVuKHVybCkgOiAwOwoKICBzd2l0Y2gocmVhc29uKSB7CiAgICBjYXNlIExXU19DQUxMQkFDS19FU1RBQkxJU0hFRDoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0NIRUNLX0FDQ0VTU19SSUdIVFM6CiAgICBjYXNlIExXU19DQUxMQkFDS19QUk9UT0NPTF9JTklUOiB7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0hUVFBfQ09ORklSTV9VUEdSQURFOiB7CiAgICAgIEpTVmFsdWVDb25zdCBhcmdzWzJdID0ge3dzX29iaiwgSlNfTlVMTH07CgogICAgICBpZighb3BhcXVlLT5yZXEpCiAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhtaW5uZXRfc2VydmVyLmNvbnRleHQuanMsIGluLCB1cmwsIG1ldGhvZCk7CgogICAgICBpbnQgbnVtX2hkciA9IGh0dHBfc2VydmVyX2hlYWRlcnMoY3R4LCAmb3BhcXVlLT5yZXEtPmhlYWRlcnMsIHdzaSk7CgogICAgICBsd3NsX3VzZXIoImh0dHAgIiBGR0MoMTcxLCAiJS0zOHMiKSAiIGZkPSVpLCBudW1faGRyPSVpXG4iLCBsd3NfY2FsbGJhY2tfbmFtZShyZWFzb24pICsgMTMsIGx3c19nZXRfc29ja2V0X2ZkKGx3c19nZXRfbmV0d29ya193c2kod3NpKSksIG51bV9oZHIpOwoKICAgICAgLypyZXR1cm4gMTsqLwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19GSUxURVJfSFRUUF9DT05ORUNUSU9OOiB7CgogICAgICBpZighb3BhcXVlLT5yZXEpCiAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIDAsIHVybCwgbWV0aG9kKTsKCiAgICAgIE1pbm5ldEJ1ZmZlciogaCA9ICZvcGFxdWUtPnJlcS0+aGVhZGVyczsKICAgICAgaW50IG51bV9oZHIgPSBodHRwX3NlcnZlcl9oZWFkZXJzKGN0eCwgaCwgd3NpKTsKICAgICAgbHdzbF91c2VyKCJodHRwICIgRkdDKDE3MSwgIiUtMzhzIikgIiAlc1xuIiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCByZXF1ZXN0X2R1bXAob3BhcXVlLT5yZXEsIGN0eCkpOwoKICAgICAgLy8gcmV0dXJuIDA7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0FERF9IRUFERVJTOiB7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0hUVFBfQk9EWV9DT01QTEVUSU9OOiB7CiAgICAgIE1pbm5ldENhbGxiYWNrKiBjYiA9IHNlcnYtPm1vdW50ID8gJnNlcnYtPm1vdW50LT5jYWxsYmFjayA6IDA7CiAgICAgIE1pbm5ldEJ1ZmZlciBiID0gQlVGRkVSKGJ1Zik7CiAgICAgIE1pbm5ldFJlc3BvbnNlKiByZXNwID0gcmVxdWVzdF9oYW5kbGVyKHNlcnYsIGNiKTsKCiAgICAgIGlmKGNiICYmIGNiLT5jdHgpIHsKICAgICAgICBKU1ZhbHVlIHJldCA9IG1pbm5ldF9lbWl0X3RoaXMoY2IsIHdzX29iaiwgMiwgc2Vydi0+YXJncyk7CgogICAgICAgIGFzc2VydChqc19pc19pdGVyYXRvcihjdHgsIHJldCkpOwogICAgICAgIHNlcnYtPmdlbmVyYXRvciA9IHJldDsKICAgICAgfSAvKiBlbHNlIGlmKGx3c19odHRwX3RyYW5zYWN0aW9uX2NvbXBsZXRlZCh3c2kpKSB7CiAgICAgICAgIHJldHVybiAtMTsKICAgICAgIH0KICovCiAgICAgIGx3c19jYWxsYmFja19vbl93cml0YWJsZSh3c2kpOwogICAgICByZXR1cm4gMDsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19IVFRQX0JPRFk6IHsKICAgICAgTWlubmV0UmVxdWVzdCogcmVxID0gbWlubmV0X3JlcXVlc3RfZGF0YTIoY3R4LCBzZXJ2LT5yZXFfb2JqKTsKCiAgICAgIGx3c2xfdXNlcigiaHR0cCBMV1NfQ0FMTEJBQ0tfSFRUUF9CT0RZXHRpc19oMj0laSBsZW46ICV6dSwgc2l6ZTogJXp1XG4iLCBpc19oMih3c2kpLCBsZW4sIGJ1ZmZlcl9IRUFEKCZyZXEtPmJvZHkpKTsKCiAgICAgIGlmKGxlbikgewogICAgICAgIGJ1ZmZlcl9hcHBlbmQoJnJlcS0+Ym9keSwgaW4sIGxlbiwgY3R4KTsKCiAgICAgICAganNfZHVtcF9zdHJpbmcoaW4sIGxlbiwgODApOwogICAgICAgIHB1dHMoIiIpOwogICAgICB9CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0hUVFA6IHsKICAgICAgTWlubmV0SHR0cE1vdW50KiBtb3VudDsKICAgICAgTWlubmV0QnVmZmVyIGIgPSBCVUZGRVIoYnVmKTsKICAgICAgSlNWYWx1ZSogYXJncyA9IHNlcnYtPmFyZ3M7CiAgICAgIGNoYXIqIHBhdGggPSBpbjsKICAgICAgaW50IHJldCA9IDA7CiAgICAgIHNpemVfdCBtb3VudHBvaW50X2xlbiA9IDA7CgogICAgICBpZih1cmwgJiYgaW4gJiYgbGVuIDwgdXJsX2xlbiAmJiAhc3RyY21wKCh1cmxfbGVuIC0gbGVuKSArIHVybCwgaW4pKQogICAgICAgIG1vdW50cG9pbnRfbGVuID0gdXJsX2xlbiAtIGxlbjsKCiAgICAgIGx3c2xfdXNlcigiaHR0cCAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiB3c2kjJSIgUFJJZDY0ICIgbW91bnRwb2ludD0nJS4qcycgcGF0aD0nJXMnXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBvcGFxdWUtPnNlcmlhbCwgKGludCltb3VudHBvaW50X2xlbiwgdXJsLCBwYXRoKTsKCiAgICAgIGlmKCFvcGFxdWUtPnJlcSkKICAgICAgICBvcGFxdWUtPnJlcSA9IHJlcXVlc3RfbmV3KGN0eCwgcGF0aCwgdXJsLCBtZXRob2QpOwoKICAgICAgaWYoIW9wYXF1ZS0+cmVxLT5oZWFkZXJzLndyaXRlKSB7CiAgICAgICAgaW50IG51bV9oZHIgPSBodHRwX3NlcnZlcl9oZWFkZXJzKGN0eCwgJm9wYXF1ZS0+cmVxLT5oZWFkZXJzLCB3c2kpOwogICAgICB9CgogICAgICBpZighb3BhcXVlLT5yZXEtPnBhdGhbMF0pCiAgICAgICAgcHN0cmNweShvcGFxdWUtPnJlcS0+cGF0aCwgc2l6ZW9mKG9wYXF1ZS0+cmVxLT5wYXRoKSwgcGF0aCk7CgogICAgICBzZXJ2LT5tb3VudCA9IG1vdW50X2ZpbmQocGF0aCwgMCk7CiAgICAgIGlmKHVybCAmJiAhc2Vydi0+bW91bnQpCiAgICAgICAgaWYoIShzZXJ2LT5tb3VudCA9IG1vdW50X2ZpbmQodXJsLCBtb3VudHBvaW50X2xlbikpKQogICAgICAgICAgc2Vydi0+bW91bnQgPSBtb3VudF9maW5kKHVybCwgMCk7CgogICAgICBzZXJ2LT5oMiA9IGlzX2gyKHdzaSk7CgogICAgICBpZigobW91bnQgPSBzZXJ2LT5tb3VudCkpIHsKICAgICAgICBzaXplX3QgbWxlbiA9IHN0cmxlbihtb3VudC0+bW50KTsKICAgICAgICBhc3NlcnQoIXN0cm5jbXAodXJsLCBtb3VudC0+bW50LCBtbGVuKSk7CiAgICAgICAgYXNzZXJ0KCFzdHJjbXAodXJsICsgbWxlbiwgcGF0aCkpOwoKICAgICAgICBsd3NsX3VzZXIoImh0dHAgIiBGRygiJWQiKSAiJS0zOHMiIE5DICIgbW91bnQ6IG1udD0nJXMnLCBvcmc9JyVzJywgcHJvPSclcycsIG9yaWdpbl9wcm90b2NvbD0nJXMnXG4iLAogICAgICAgICAgICAgICAgICAyMiArIChyZWFzb24gKiAyKSwKICAgICAgICAgICAgICAgICAgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLAogICAgICAgICAgICAgICAgICBtb3VudC0+bW50LAogICAgICAgICAgICAgICAgICBtb3VudC0+b3JnLAogICAgICAgICAgICAgICAgICBtb3VudC0+cHJvLAogICAgICAgICAgICAgICAgICAoKGNvbnN0IGNoYXIqW10peyJIVFRQIiwgIkhUVFBTIiwgIkZJTEUiLCAiQ0dJIiwgIlJFRElSX0hUVFAiLCAiUkVESVJfSFRUUFMiLCAiQ0FMTEJBQ0sifSlbKHVpbnRwdHJfdCltb3VudC0+bHdzLm9yaWdpbl9wcm90b2NvbF0pOwogICAgICB9CgogICAgICBhcmdzWzBdID0gc2Vydi0+cmVxX29iaiA9IG1pbm5ldF9yZXF1ZXN0X3dyYXAoY3R4LCBvcGFxdWUtPnJlcSk7CgogICAgICBpZighSlNfSXNPYmplY3QoYXJnc1sxXSkpCiAgICAgICAgYXJnc1sxXSA9IG1pbm5ldF9yZXNwb25zZV9uZXcoY3R4LCB1cmwsIG1ldGhvZCA9PSBNRVRIT0RfUE9TVCA/IDIwMSA6IDIwMCwgVFJVRSwgInRleHQvaHRtbCIpOwoKICAgICAgTWlubmV0UmVxdWVzdCogcmVxID0gb3BhcXVlLT5yZXE7CiAgICAgIE1pbm5ldFJlc3BvbnNlKiByZXNwID0gbWlubmV0X3Jlc3BvbnNlX2RhdGEyKGN0eCwgYXJnc1sxXSk7CgogICAgICBsd3NsX3VzZXIoImh0dHAgIiBGRygiJWQiKSAiJS0zOHMiIE5DICIgcmVxPSVwLCBoZWFkZXI9JXp1XG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCByZXEsIGJ1ZmZlcl9IRUFEKCZyZXEtPmhlYWRlcnMpKTsKCiAgICAgICsrcmVxLT5yZWZfY291bnQ7CiAgICAgIE1pbm5ldENhbGxiYWNrKiBjYiA9ICZtaW5uZXRfc2VydmVyLmNiLmh0dHA7CgogICAgICBpZihtb3VudCAmJiAobW91bnQtPmx3cy5vcmlnaW5fcHJvdG9jb2wgPT0gTFdTTVBST19GSUxFIHx8IChtb3VudC0+bHdzLm9yaWdpbl9wcm90b2NvbCA9PSBMV1NNUFJPX0NBTExCQUNLICYmIG1vdW50LT5sd3Mub3JpZ2luKSkpIHsKCiAgICAgICAgaWYoKHJldCA9IHNlcnZlX2ZpbGUod3NpLCBwYXRoLCBtb3VudCwgcmVzcCwgY3R4KSkpIHsKCiAgICAgICAgICBsd3NsX3VzZXIoImh0dHAgIiBGRygiJWQiKSAiJS0zOHMiIE5DICIgc2VydmVfZmlsZSBGQUlMICVkIiwgMjIgKyAocmVhc29uICogMiksIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgcmV0KTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHdzX29iaik7CiAgICAgICAgICByZXR1cm4gMTsKICAgICAgICB9CiAgICAgICAgaWYoKHJldCA9IGh0dHBfc2VydmVyX3Jlc3BvbmQod3NpLCAmYiwgcmVzcCwgY3R4KSkpIHsKCiAgICAgICAgICBsd3NsX3VzZXIoImh0dHAgIiBGRygiJWQiKSAiJS0zOHMiIE5DICIgaHR0cF9zZXJ2ZXJfcmVzcG9uZCBGQUlMICVkIiwgMjIgKyAocmVhc29uICogMiksIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgcmV0KTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHdzX29iaik7CiAgICAgICAgICByZXR1cm4gMTsKICAgICAgICB9CgogICAgICB9IGVsc2UgaWYobW91bnQgJiYgbW91bnQtPmx3cy5vcmlnaW5fcHJvdG9jb2wgPT0gTFdTTVBST19DQUxMQkFDSykgewoKICAgICAgICBjYiA9ICZtb3VudC0+Y2FsbGJhY2s7CgogICAgICAgIGlmKHJlcS0+bWV0aG9kID09IE1FVEhPRF9HRVQgLyogfHwgaXNfaDIod3NpKSovKSB7CiAgICAgICAgICByZXNwID0gcmVxdWVzdF9oYW5kbGVyKHNlcnYsIGNiKTsKCiAgICAgICAgICBpZihjYiAmJiBjYi0+Y3R4KSB7CiAgICAgICAgICAgIEpTVmFsdWUgZ2VuID0gbWlubmV0X2VtaXRfdGhpcyhjYiwgd3Nfb2JqLCAyLCBhcmdzKTsKICAgICAgICAgICAgYXNzZXJ0KGpzX2lzX2l0ZXJhdG9yKGN0eCwgZ2VuKSk7CiAgICAgICAgICAgIGx3c2xfdXNlcigiaHR0cCAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBnZW49JXMiLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBKU19Ub0NTdHJpbmcoY3R4LCBnZW4pKTsKCiAgICAgICAgICAgIHNlcnYtPmdlbmVyYXRvciA9IGdlbjsKICAgICAgICAgICAgc2Vydi0+bmV4dCA9IEpTX1VOREVGSU5FRDsKICAgICAgICAgIH0gZWxzZSB7CgogICAgICAgICAgICBsd3NsX3VzZXIoImh0dHAgIiBGRygiJWQiKSAiJS0zOHMiIE5DICIgdXJsPSVzIHBhdGg9JXMgbW91bnRwb2ludD0lLipzXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCB1cmwsIHBhdGgsIChpbnQpbW91bnRwb2ludF9sZW4sIHVybCk7CiAgICAgICAgICAgIGlmKGx3c19odHRwX3RyYW5zYWN0aW9uX2NvbXBsZXRlZCh3c2kpKQogICAgICAgICAgICAgIHJldHVybiAtMTsKICAgICAgICAgIH0KICAgICAgICAgIGlmKGh0dHBfc2VydmVyX3Jlc3BvbmQod3NpLCAmYiwgcmVzcCwgY3R4KSkgewogICAgICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCB3c19vYmopOwogICAgICAgICAgICByZXR1cm4gMTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgbHdzbF91c2VyKCJodHRwIE5PVCBGT1VORFx0dXJsPSVzIHBhdGg9JXMgbW91bnRwb2ludD0lLipzXG4iLCB1cmwsIHBhdGgsIChpbnQpbW91bnRwb2ludF9sZW4sIHVybCk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgaWYocmVxLT5tZXRob2QgPT0gTUVUSE9EX0dFVCB8fCBpc19oMih3c2kpKQogICAgICAgICh3c2kpOwoKICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgd3Nfb2JqKTsKCiAgICAgIHJldHVybiByZXQ7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9XUklURUFCTEU6IHsKICAgICAgTWlubmV0QnVmZmVyIGIgPSBCVUZGRVIoYnVmKTsKICAgICAgTWlubmV0UmVzcG9uc2UqIHJlc3AgPSBtaW5uZXRfcmVzcG9uc2VfZGF0YTIobWlubmV0X3NlcnZlci5jb250ZXh0LmpzLCBzZXJ2LT5yZXNwX29iaik7CiAgICAgIEJPT0wgZG9uZSA9IEZBTFNFOwoKICAgICAgbHdzbF91c2VyKCJodHRwLXdyaXRlYWJsZSAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiB3c2kjJSIgUFJJZDY0ICIgaDI9JXUgbW50PSVzIHJlbWFpbj0ldGQgdHlwZT0lcyB1cmw9JXMiLAogICAgICAgICAgICAgICAgMjIgKyAocmVhc29uICogMiksCiAgICAgICAgICAgICAgICBsd3NfY2FsbGJhY2tfbmFtZShyZWFzb24pICsgMTMsCiAgICAgICAgICAgICAgICBvcGFxdWUtPnNlcmlhbCwKICAgICAgICAgICAgICAgIHNlcnYtPmgyLAogICAgICAgICAgICAgICAgc2Vydi0+bW91bnQgPyBzZXJ2LT5tb3VudC0+bW50IDogMCwKICAgICAgICAgICAgICAgIHJlc3AgPyBidWZmZXJfQllURVMoJnJlc3AtPmJvZHkpIDogMCwKICAgICAgICAgICAgICAgIHJlc3AgPyByZXNwLT50eXBlIDogMCwKICAgICAgICAgICAgICAgIHJlc3AgPyByZXNwLT51cmwgOiAwKTsKCiAgICAgIGlmKEpTX0lzT2JqZWN0KHNlcnYtPmdlbmVyYXRvcikpIHsKICAgICAgICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgICAgICAgd2hpbGUoIWRvbmUpIHsKICAgICAgICAgIHJldCA9IGpzX2l0ZXJhdG9yX25leHQobWlubmV0X3NlcnZlci5jb250ZXh0LmpzLCBzZXJ2LT5nZW5lcmF0b3IsICZzZXJ2LT5uZXh0LCAmZG9uZSwgMCwgMCk7CgogICAgICAgICAgaWYoSlNfSXNFeGNlcHRpb24ocmV0KSkgewogICAgICAgICAgICBKU1ZhbHVlIGV4Y2VwdGlvbiA9IEpTX0dldEV4Y2VwdGlvbihjdHgpOwogICAgICAgICAgICBmcHJpbnRmKHN0ZGVyciwgIkV4Y2VwdGlvbjogJXNcbiIsIEpTX1RvQ1N0cmluZyhjdHgsIGV4Y2VwdGlvbikpOwogICAgICAgICAgICBkb25lID0gVFJVRTsKICAgICAgICAgIH0gZWxzZSBpZighZG9uZSkgewogICAgICAgICAgICBKU0J1ZmZlciBvdXQgPSBqc19idWZmZXJfZnJvbShtaW5uZXRfc2VydmVyLmNvbnRleHQuanMsIHJldCk7CiAgICAgICAgICAgIGx3c2xfdXNlcigiaHR0cCAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBzaXplPSV6dSIsIDIyICsgKHJlYXNvbiAqIDIpLCBsd3NfY2FsbGJhY2tfbmFtZShyZWFzb24pICsgMTMsIG91dC5zaXplKTsKICAgICAgICAgICAgYnVmZmVyX2FwcGVuZCgmcmVzcC0+Ym9keSwgb3V0LmRhdGEsIG91dC5zaXplLCBjdHgpOwogICAgICAgICAgICBqc19idWZmZXJfZnJlZSgmb3V0LCBtaW5uZXRfc2VydmVyLmNvbnRleHQuanMpOwogICAgICAgICAgfQogICAgICAgICAgbHdzbF91c2VyKCJodHRwICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHdzaSMlIiBQUklkNjQgIiBkb25lPSVpIHdyaXRlPSV6dSIsIDIyICsgKHJlYXNvbiAqIDIpLCBsd3NfY2FsbGJhY2tfbmFtZShyZWFzb24pICsgMTMsIG9wYXF1ZS0+c2VyaWFsLCBkb25lLCBidWZmZXJfSEVBRCgmcmVzcC0+Ym9keSkpOwoKICAgICAgICAgIGlmKG9wYXF1ZS0+c3RhdHVzID09IE9QRU4pIHsKICAgICAgICAgICAgaWYoaHR0cF9zZXJ2ZXJfcmVzcG9uZCh3c2ksICZiLCByZXNwLCBjdHgpKSB7CiAgICAgICAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgd3Nfb2JqKTsKICAgICAgICAgICAgICByZXR1cm4gMTsKICAgICAgICAgICAgfQogICAgICAgICAgICBvcGFxdWUtPnN0YXR1cyA9IENMT1NJTkc7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgfSBlbHNlIGlmKCFidWZmZXJfSEVBRCgmcmVzcC0+Ym9keSkpIHsKICAgICAgICBzdGF0aWMgaW50IHVuaGFuZGxlZDsKCiAgICAgICAgaWYoIXVuaGFuZGxlZCsrKQogICAgICAgICAgbHdzbF91c2VyKCJodHRwICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHVuaGFuZGxlZCIsIDIyICsgKHJlYXNvbiAqIDIpLCBsd3NfY2FsbGJhY2tfbmFtZShyZWFzb24pICsgMTMpOwoKICAgICAgICBicmVhazsKICAgICAgfSBlbHNlIHsKICAgICAgICBkb25lID0gVFJVRTsKICAgICAgfQoKICAgICAgaHR0cF9zZXJ2ZXJfd3JpdGFibGUod3NpLCByZXNwLCBkb25lKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9CSU5EX1BST1RPQ09MOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9EUk9QX1BST1RPQ09MOiB7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0hUVFBfRklMRV9DT01QTEVUSU9OOiB7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMT1NFRF9DTElFTlRfSFRUUDoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMT1NFRF9IVFRQOiB7CiAgICAgIGx3c2xfdXNlcigiaHR0cCAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiB3c2kjJSIgUFJJZDY0LCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBvcGFxdWUtPnNlcmlhbCk7CiAgICAgIGlmKHNlcnYpIHsKICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jb250ZXh0LmpzLCBzZXJ2LT5yZXFfb2JqKTsKICAgICAgICBzZXJ2LT5yZXFfb2JqID0gSlNfVU5ERUZJTkVEOwogICAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfc2VydmVyLmNvbnRleHQuanMsIHNlcnYtPnJlc3Bfb2JqKTsKICAgICAgICBzZXJ2LT5yZXNwX29iaiA9IEpTX1VOREVGSU5FRDsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGRlZmF1bHQ6IHsKICAgICAgbWlubmV0X2x3c191bmhhbmRsZWQoX19mdW5jX18sIHJlYXNvbik7CiAgICAgIGJyZWFrOwogICAgfQogIH0KICBpbnQgcmV0ID0gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwoKICBpZihyZWFzb24gIT0gTFdTX0NBTExCQUNLX0hUVFBfV1JJVEVBQkxFICYmIChyZWFzb24gPCBMV1NfQ0FMTEJBQ0tfSFRUUF9CSU5EX1BST1RPQ09MIHx8IHJlYXNvbiA+IExXU19DQUxMQkFDS19DSEVDS19BQ0NFU1NfUklHSFRTKSkgewogICAgbHdzbF91c2VyKCJodHRwICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHdzaSMlIiBQUklkNjQgIiBmZD0laSBpc19oMj0laSBpc19zc2w9JWkgdXJsPSVzIG1ldGhvZD0lcyBpbj0nJS4qcycgcmV0PSVkXG4iLAogICAgICAgICAgICAgIDIyICsgKHJlYXNvbiAqIDIpLAogICAgICAgICAgICAgIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywKICAgICAgICAgICAgICBvcGFxdWUtPnNlcmlhbCwKICAgICAgICAgICAgICBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLAogICAgICAgICAgICAgIChzZXJ2ICYmIHNlcnYtPmgyKSB8fCBpc19oMih3c2kpLAogICAgICAgICAgICAgIGx3c19pc19zc2wod3NpKSwKICAgICAgICAgICAgICB1cmwsCiAgICAgICAgICAgICAgbWV0aG9kX25hbWUobWV0aG9kKSwKICAgICAgICAgICAgICAoaW50KWxlbiwKICAgICAgICAgICAgICAoY2hhciopaW4sCiAgICAgICAgICAgICAgcmV0KTsKICB9CgogIHJldHVybiByZXQ7Cn0KAAAAAAAAAAA6UAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-server-http.h",
			"settings":
			{
				"buffer_size": 1615,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPBgAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfdmhvc3Rfb3B0aW9uIHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpuZXh0LCAqb3B0aW9uczsKICAgICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogICAgfTsKICAgIHN0cnVjdCBsd3NfcHJvdG9jb2xfdmhvc3Rfb3B0aW9ucyBsd3M7CiAgfTsKfSBNaW5uZXRWaG9zdE9wdGlvbnM7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX21vdW50IHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF9tb3VudCogbmV4dDsKICAgICAgY29uc3QgY2hhciAqbW50LCAqb3JnLCAqZGVmLCAqcHJvOwogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpjZ2llbnYsICpleHRyYV9taW1ldHlwZXMsICppbnRlcnByZXQ7CiAgICB9OwogICAgc3RydWN0IGx3c19odHRwX21vdW50IGx3czsKICB9OwogIE1pbm5ldENhbGxiYWNrIGNhbGxiYWNrOwp9IE1pbm5ldEh0dHBNb3VudDsKCi8qdHlwZWRlZiBzdHJ1Y3QgaHR0cF9zZXNzaW9uIHsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3A7Cn0gTWlubmV0SHR0cFNlc3Npb247Ki8KCk1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogdmFsdWUpOwp2b2lkIHZob3N0X29wdGlvbnNfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRWaG9zdE9wdGlvbnMqIHZvKTsKTWlubmV0Vmhvc3RPcHRpb25zKiB2aG9zdF9vcHRpb25zX25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3Qgdmhvc3Rfb3B0aW9uKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqIG9yaWdpbiwgY29uc3QgY2hhciogZGVmLCBlbnVtIGx3c19tb3VudF9wcm90b2NvbHMgb3JpZ2luX3Byb3RvKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBjb25zdCBjaGFyKiBrZXkpOwpzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnRfZmluZChjb25zdCBjaGFyKiwgc2l6ZV90KTsKdm9pZCBtb3VudF9mcmVlKEpTQ29udGV4dCosIE1pbm5ldEh0dHBNb3VudCBjb25zdCopOwppbnQgaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IGx3cyosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgQk9PTCBkb25lKTsKaW50IGh0dHBfc2VydmVyX2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbik7CgpzdGF0aWMgaW5saW5lIGludAppc19oMihzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2dldF9uZXR3b3JrX3dzaSh3c2kpICE9IHdzaTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9TRVJWRVJfSFRUUF9IICovCgAAAAAAAAAATwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwYAAAAAAABPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPBgAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfdmhvc3Rfb3B0aW9uIHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpuZXh0LCAqb3B0aW9uczsKICAgICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogICAgfTsKICAgIHN0cnVjdCBsd3NfcHJvdG9jb2xfdmhvc3Rfb3B0aW9ucyBsd3M7CiAgfTsKfSBNaW5uZXRWaG9zdE9wdGlvbnM7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX21vdW50IHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF9tb3VudCogbmV4dDsKICAgICAgY29uc3QgY2hhciAqbW50LCAqb3JnLCAqZGVmLCAqcHJvOwogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpjZ2llbnYsICpleHRyYV9taW1ldHlwZXMsICppbnRlcnByZXQ7CiAgICB9OwogICAgc3RydWN0IGx3c19odHRwX21vdW50IGx3czsKICB9OwogIE1pbm5ldENhbGxiYWNrIGNhbGxiYWNrOwp9IE1pbm5ldEh0dHBNb3VudDsKCi8qdHlwZWRlZiBzdHJ1Y3QgaHR0cF9zZXNzaW9uIHsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3A7Cn0gTWlubmV0SHR0cFNlc3Npb247Ki8KCk1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogdmFsdWUpOwp2b2lkIHZob3N0X29wdGlvbnNfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRWaG9zdE9wdGlvbnMqIHZvKTsKTWlubmV0Vmhvc3RPcHRpb25zKiB2aG9zdF9vcHRpb25zX25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3Qgdmhvc3Rfb3B0aW9uKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqIG9yaWdpbiwgY29uc3QgY2hhciogZGVmLCBlbnVtIGx3c19tb3VudF9wcm90b2NvbHMgb3JpZ2luX3Byb3RvKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBjb25zdCBjaGFyKiBrZXkpOwpzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnRfZmluZChjb25zdCBjaGFyKiwgc2l6ZV90KTsKdm9pZCBtb3VudF9mcmVlKEpTQ29udGV4dCosIE1pbm5ldEh0dHBNb3VudCBjb25zdCopOwppbnQgaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IGx3cyosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgQk9PTCBkb25lKTsKaW50IGh0dHBfc2VydmVyX2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbik7CgpzdGF0aWMgaW5saW5lIGludAppc19oMihzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2dldF9uZXR3b3JrX3dzaSh3c2kpICE9IHdzaTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9TRVJWRVJfSFRUUF9IICovCgAAAAAAAAAATwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwYAAAAAAABPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPBgAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfdmhvc3Rfb3B0aW9uIHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpuZXh0LCAqb3B0aW9uczsKICAgICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogICAgfTsKICAgIHN0cnVjdCBsd3NfcHJvdG9jb2xfdmhvc3Rfb3B0aW9ucyBsd3M7CiAgfTsKfSBNaW5uZXRWaG9zdE9wdGlvbnM7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX21vdW50IHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF9tb3VudCogbmV4dDsKICAgICAgY29uc3QgY2hhciAqbW50LCAqb3JnLCAqZGVmLCAqcHJvOwogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpjZ2llbnYsICpleHRyYV9taW1ldHlwZXMsICppbnRlcnByZXQ7CiAgICB9OwogICAgc3RydWN0IGx3c19odHRwX21vdW50IGx3czsKICB9OwogIE1pbm5ldENhbGxiYWNrIGNhbGxiYWNrOwp9IE1pbm5ldEh0dHBNb3VudDsKCi8qdHlwZWRlZiBzdHJ1Y3QgaHR0cF9zZXNzaW9uIHsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3A7Cn0gTWlubmV0SHR0cFNlc3Npb247Ki8KCk1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogdmFsdWUpOwp2b2lkIHZob3N0X29wdGlvbnNfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRWaG9zdE9wdGlvbnMqIHZvKTsKTWlubmV0Vmhvc3RPcHRpb25zKiB2aG9zdF9vcHRpb25zX25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3Qgdmhvc3Rfb3B0aW9uKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqIG9yaWdpbiwgY29uc3QgY2hhciogZGVmLCBlbnVtIGx3c19tb3VudF9wcm90b2NvbHMgb3JpZ2luX3Byb3RvKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBjb25zdCBjaGFyKiBrZXkpOwpzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnRfZmluZChjb25zdCBjaGFyKiwgc2l6ZV90KTsKdm9pZCBtb3VudF9mcmVlKEpTQ29udGV4dCosIE1pbm5ldEh0dHBNb3VudCBjb25zdCopOwppbnQgaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IGx3cyosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgQk9PTCBkb25lKTsKaW50IGh0dHBfc2VydmVyX2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbik7CgpzdGF0aWMgaW5saW5lIGludAppc19oMihzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2dldF9uZXR3b3JrX3dzaSh3c2kpICE9IHdzaTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9TRVJWRVJfSFRUUF9IICovCgAAAAAAAAAATwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwYAAAAAAABPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPBgAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfdmhvc3Rfb3B0aW9uIHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpuZXh0LCAqb3B0aW9uczsKICAgICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogICAgfTsKICAgIHN0cnVjdCBsd3NfcHJvdG9jb2xfdmhvc3Rfb3B0aW9ucyBsd3M7CiAgfTsKfSBNaW5uZXRWaG9zdE9wdGlvbnM7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX21vdW50IHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF9tb3VudCogbmV4dDsKICAgICAgY29uc3QgY2hhciAqbW50LCAqb3JnLCAqZGVmLCAqcHJvOwogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpjZ2llbnYsICpleHRyYV9taW1ldHlwZXMsICppbnRlcnByZXQ7CiAgICB9OwogICAgc3RydWN0IGx3c19odHRwX21vdW50IGx3czsKICB9OwogIE1pbm5ldENhbGxiYWNrIGNhbGxiYWNrOwp9IE1pbm5ldEh0dHBNb3VudDsKCi8qdHlwZWRlZiBzdHJ1Y3QgaHR0cF9zZXNzaW9uIHsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3A7Cn0gTWlubmV0SHR0cFNlc3Npb247Ki8KCk1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogdmFsdWUpOwp2b2lkIHZob3N0X29wdGlvbnNfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRWaG9zdE9wdGlvbnMqIHZvKTsKTWlubmV0Vmhvc3RPcHRpb25zKiB2aG9zdF9vcHRpb25zX25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3Qgdmhvc3Rfb3B0aW9uKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqIG9yaWdpbiwgY29uc3QgY2hhciogZGVmLCBlbnVtIGx3c19tb3VudF9wcm90b2NvbHMgb3JpZ2luX3Byb3RvKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBjb25zdCBjaGFyKiBrZXkpOwpzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnRfZmluZChjb25zdCBjaGFyKiwgc2l6ZV90KTsKdm9pZCBtb3VudF9mcmVlKEpTQ29udGV4dCosIE1pbm5ldEh0dHBNb3VudCBjb25zdCopOwppbnQgaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IGx3cyosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgQk9PTCBkb25lKTsKaW50IGh0dHBfc2VydmVyX2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbik7CgpzdGF0aWMgaW5saW5lIGludAppc19oMihzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2dldF9uZXR3b3JrX3dzaSh3c2kpICE9IHdzaTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9TRVJWRVJfSFRUUF9IICovCgAAAAAAAAAATwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwYAAAAAAABPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPBgAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfdmhvc3Rfb3B0aW9uIHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpuZXh0LCAqb3B0aW9uczsKICAgICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogICAgfTsKICAgIHN0cnVjdCBsd3NfcHJvdG9jb2xfdmhvc3Rfb3B0aW9ucyBsd3M7CiAgfTsKfSBNaW5uZXRWaG9zdE9wdGlvbnM7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX21vdW50IHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF9tb3VudCogbmV4dDsKICAgICAgY29uc3QgY2hhciAqbW50LCAqb3JnLCAqZGVmLCAqcHJvOwogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpjZ2llbnYsICpleHRyYV9taW1ldHlwZXMsICppbnRlcnByZXQ7CiAgICB9OwogICAgc3RydWN0IGx3c19odHRwX21vdW50IGx3czsKICB9OwogIE1pbm5ldENhbGxiYWNrIGNhbGxiYWNrOwp9IE1pbm5ldEh0dHBNb3VudDsKCi8qdHlwZWRlZiBzdHJ1Y3QgaHR0cF9zZXNzaW9uIHsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3A7Cn0gTWlubmV0SHR0cFNlc3Npb247Ki8KCk1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogdmFsdWUpOwp2b2lkIHZob3N0X29wdGlvbnNfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRWaG9zdE9wdGlvbnMqIHZvKTsKTWlubmV0Vmhvc3RPcHRpb25zKiB2aG9zdF9vcHRpb25zX25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3Qgdmhvc3Rfb3B0aW9uKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqIG9yaWdpbiwgY29uc3QgY2hhciogZGVmLCBlbnVtIGx3c19tb3VudF9wcm90b2NvbHMgb3JpZ2luX3Byb3RvKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBjb25zdCBjaGFyKiBrZXkpOwpzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnRfZmluZChjb25zdCBjaGFyKiwgc2l6ZV90KTsKdm9pZCBtb3VudF9mcmVlKEpTQ29udGV4dCosIE1pbm5ldEh0dHBNb3VudCBjb25zdCopOwppbnQgaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IGx3cyosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgQk9PTCBkb25lKTsKaW50IGh0dHBfc2VydmVyX2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbik7CgpzdGF0aWMgaW5saW5lIGludAppc19oMihzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2dldF9uZXR3b3JrX3dzaSh3c2kpICE9IHdzaTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9TRVJWRVJfSFRUUF9IICovCgAAAAAAAAAATwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwYAAAAAAABPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPBgAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfdmhvc3Rfb3B0aW9uIHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpuZXh0LCAqb3B0aW9uczsKICAgICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogICAgfTsKICAgIHN0cnVjdCBsd3NfcHJvdG9jb2xfdmhvc3Rfb3B0aW9ucyBsd3M7CiAgfTsKfSBNaW5uZXRWaG9zdE9wdGlvbnM7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX21vdW50IHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF9tb3VudCogbmV4dDsKICAgICAgY29uc3QgY2hhciAqbW50LCAqb3JnLCAqZGVmLCAqcHJvOwogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpjZ2llbnYsICpleHRyYV9taW1ldHlwZXMsICppbnRlcnByZXQ7CiAgICB9OwogICAgc3RydWN0IGx3c19odHRwX21vdW50IGx3czsKICB9OwogIE1pbm5ldENhbGxiYWNrIGNhbGxiYWNrOwp9IE1pbm5ldEh0dHBNb3VudDsKCi8qdHlwZWRlZiBzdHJ1Y3QgaHR0cF9zZXNzaW9uIHsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3A7Cn0gTWlubmV0SHR0cFNlc3Npb247Ki8KCk1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogdmFsdWUpOwp2b2lkIHZob3N0X29wdGlvbnNfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRWaG9zdE9wdGlvbnMqIHZvKTsKTWlubmV0Vmhvc3RPcHRpb25zKiB2aG9zdF9vcHRpb25zX25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3Qgdmhvc3Rfb3B0aW9uKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqIG9yaWdpbiwgY29uc3QgY2hhciogZGVmLCBlbnVtIGx3c19tb3VudF9wcm90b2NvbHMgb3JpZ2luX3Byb3RvKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBjb25zdCBjaGFyKiBrZXkpOwpzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnRfZmluZChjb25zdCBjaGFyKiwgc2l6ZV90KTsKdm9pZCBtb3VudF9mcmVlKEpTQ29udGV4dCosIE1pbm5ldEh0dHBNb3VudCBjb25zdCopOwppbnQgaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IGx3cyosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgQk9PTCBkb25lKTsKaW50IGh0dHBfc2VydmVyX2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbik7CgpzdGF0aWMgaW5saW5lIGludAppc19oMihzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2dldF9uZXR3b3JrX3dzaSh3c2kpICE9IHdzaTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9TRVJWRVJfSFRUUF9IICovCgAAAAAAAAAATwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwYAAAAAAABPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPBgAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfdmhvc3Rfb3B0aW9uIHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpuZXh0LCAqb3B0aW9uczsKICAgICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogICAgfTsKICAgIHN0cnVjdCBsd3NfcHJvdG9jb2xfdmhvc3Rfb3B0aW9ucyBsd3M7CiAgfTsKfSBNaW5uZXRWaG9zdE9wdGlvbnM7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX21vdW50IHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF9tb3VudCogbmV4dDsKICAgICAgY29uc3QgY2hhciAqbW50LCAqb3JnLCAqZGVmLCAqcHJvOwogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpjZ2llbnYsICpleHRyYV9taW1ldHlwZXMsICppbnRlcnByZXQ7CiAgICB9OwogICAgc3RydWN0IGx3c19odHRwX21vdW50IGx3czsKICB9OwogIE1pbm5ldENhbGxiYWNrIGNhbGxiYWNrOwp9IE1pbm5ldEh0dHBNb3VudDsKCi8qdHlwZWRlZiBzdHJ1Y3QgaHR0cF9zZXNzaW9uIHsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3A7Cn0gTWlubmV0SHR0cFNlc3Npb247Ki8KCk1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogdmFsdWUpOwp2b2lkIHZob3N0X29wdGlvbnNfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRWaG9zdE9wdGlvbnMqIHZvKTsKTWlubmV0Vmhvc3RPcHRpb25zKiB2aG9zdF9vcHRpb25zX25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3Qgdmhvc3Rfb3B0aW9uKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqIG9yaWdpbiwgY29uc3QgY2hhciogZGVmLCBlbnVtIGx3c19tb3VudF9wcm90b2NvbHMgb3JpZ2luX3Byb3RvKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBjb25zdCBjaGFyKiBrZXkpOwpzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnRfZmluZChjb25zdCBjaGFyKiwgc2l6ZV90KTsKdm9pZCBtb3VudF9mcmVlKEpTQ29udGV4dCosIE1pbm5ldEh0dHBNb3VudCBjb25zdCopOwppbnQgaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IGx3cyosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgQk9PTCBkb25lKTsKaW50IGh0dHBfc2VydmVyX2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbik7CgpzdGF0aWMgaW5saW5lIGludAppc19oMihzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2dldF9uZXR3b3JrX3dzaSh3c2kpICE9IHdzaTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9TRVJWRVJfSFRUUF9IICovCgAAAAAAAAAATwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwYAAAAAAABPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPBgAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfdmhvc3Rfb3B0aW9uIHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpuZXh0LCAqb3B0aW9uczsKICAgICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogICAgfTsKICAgIHN0cnVjdCBsd3NfcHJvdG9jb2xfdmhvc3Rfb3B0aW9ucyBsd3M7CiAgfTsKfSBNaW5uZXRWaG9zdE9wdGlvbnM7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX21vdW50IHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF9tb3VudCogbmV4dDsKICAgICAgY29uc3QgY2hhciAqbW50LCAqb3JnLCAqZGVmLCAqcHJvOwogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpjZ2llbnYsICpleHRyYV9taW1ldHlwZXMsICppbnRlcnByZXQ7CiAgICB9OwogICAgc3RydWN0IGx3c19odHRwX21vdW50IGx3czsKICB9OwogIE1pbm5ldENhbGxiYWNrIGNhbGxiYWNrOwp9IE1pbm5ldEh0dHBNb3VudDsKCi8qdHlwZWRlZiBzdHJ1Y3QgaHR0cF9zZXNzaW9uIHsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3A7Cn0gTWlubmV0SHR0cFNlc3Npb247Ki8KCk1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogdmFsdWUpOwp2b2lkIHZob3N0X29wdGlvbnNfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRWaG9zdE9wdGlvbnMqIHZvKTsKTWlubmV0Vmhvc3RPcHRpb25zKiB2aG9zdF9vcHRpb25zX25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3Qgdmhvc3Rfb3B0aW9uKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqIG9yaWdpbiwgY29uc3QgY2hhciogZGVmLCBlbnVtIGx3c19tb3VudF9wcm90b2NvbHMgb3JpZ2luX3Byb3RvKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBjb25zdCBjaGFyKiBrZXkpOwpzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnRfZmluZChjb25zdCBjaGFyKiwgc2l6ZV90KTsKdm9pZCBtb3VudF9mcmVlKEpTQ29udGV4dCosIE1pbm5ldEh0dHBNb3VudCBjb25zdCopOwppbnQgaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IGx3cyosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgQk9PTCBkb25lKTsKaW50IGh0dHBfc2VydmVyX2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbik7CgpzdGF0aWMgaW5saW5lIGludAppc19oMihzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2dldF9uZXR3b3JrX3dzaSh3c2kpICE9IHdzaTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9TRVJWRVJfSFRUUF9IICovCgAAAAAAAAAATwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwYAAAAAAABPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPBgAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfdmhvc3Rfb3B0aW9uIHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpuZXh0LCAqb3B0aW9uczsKICAgICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogICAgfTsKICAgIHN0cnVjdCBsd3NfcHJvdG9jb2xfdmhvc3Rfb3B0aW9ucyBsd3M7CiAgfTsKfSBNaW5uZXRWaG9zdE9wdGlvbnM7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX21vdW50IHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF9tb3VudCogbmV4dDsKICAgICAgY29uc3QgY2hhciAqbW50LCAqb3JnLCAqZGVmLCAqcHJvOwogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpjZ2llbnYsICpleHRyYV9taW1ldHlwZXMsICppbnRlcnByZXQ7CiAgICB9OwogICAgc3RydWN0IGx3c19odHRwX21vdW50IGx3czsKICB9OwogIE1pbm5ldENhbGxiYWNrIGNhbGxiYWNrOwp9IE1pbm5ldEh0dHBNb3VudDsKCi8qdHlwZWRlZiBzdHJ1Y3QgaHR0cF9zZXNzaW9uIHsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3A7Cn0gTWlubmV0SHR0cFNlc3Npb247Ki8KCk1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogdmFsdWUpOwp2b2lkIHZob3N0X29wdGlvbnNfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRWaG9zdE9wdGlvbnMqIHZvKTsKTWlubmV0Vmhvc3RPcHRpb25zKiB2aG9zdF9vcHRpb25zX25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3Qgdmhvc3Rfb3B0aW9uKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqIG9yaWdpbiwgY29uc3QgY2hhciogZGVmLCBlbnVtIGx3c19tb3VudF9wcm90b2NvbHMgb3JpZ2luX3Byb3RvKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBjb25zdCBjaGFyKiBrZXkpOwpzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnRfZmluZChjb25zdCBjaGFyKiwgc2l6ZV90KTsKdm9pZCBtb3VudF9mcmVlKEpTQ29udGV4dCosIE1pbm5ldEh0dHBNb3VudCBjb25zdCopOwppbnQgaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IGx3cyosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgQk9PTCBkb25lKTsKaW50IGh0dHBfc2VydmVyX2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbik7CgpzdGF0aWMgaW5saW5lIGludAppc19oMihzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2dldF9uZXR3b3JrX3dzaSh3c2kpICE9IHdzaTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9TRVJWRVJfSFRUUF9IICovCgAAAAAAAAAATwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwYAAAAAAABPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPBgAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfdmhvc3Rfb3B0aW9uIHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpuZXh0LCAqb3B0aW9uczsKICAgICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogICAgfTsKICAgIHN0cnVjdCBsd3NfcHJvdG9jb2xfdmhvc3Rfb3B0aW9ucyBsd3M7CiAgfTsKfSBNaW5uZXRWaG9zdE9wdGlvbnM7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX21vdW50IHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF9tb3VudCogbmV4dDsKICAgICAgY29uc3QgY2hhciAqbW50LCAqb3JnLCAqZGVmLCAqcHJvOwogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpjZ2llbnYsICpleHRyYV9taW1ldHlwZXMsICppbnRlcnByZXQ7CiAgICB9OwogICAgc3RydWN0IGx3c19odHRwX21vdW50IGx3czsKICB9OwogIE1pbm5ldENhbGxiYWNrIGNhbGxiYWNrOwp9IE1pbm5ldEh0dHBNb3VudDsKCi8qdHlwZWRlZiBzdHJ1Y3QgaHR0cF9zZXNzaW9uIHsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3A7Cn0gTWlubmV0SHR0cFNlc3Npb247Ki8KCk1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogdmFsdWUpOwp2b2lkIHZob3N0X29wdGlvbnNfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRWaG9zdE9wdGlvbnMqIHZvKTsKTWlubmV0Vmhvc3RPcHRpb25zKiB2aG9zdF9vcHRpb25zX25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3Qgdmhvc3Rfb3B0aW9uKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqIG9yaWdpbiwgY29uc3QgY2hhciogZGVmLCBlbnVtIGx3c19tb3VudF9wcm90b2NvbHMgb3JpZ2luX3Byb3RvKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBjb25zdCBjaGFyKiBrZXkpOwpzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnRfZmluZChjb25zdCBjaGFyKiwgc2l6ZV90KTsKdm9pZCBtb3VudF9mcmVlKEpTQ29udGV4dCosIE1pbm5ldEh0dHBNb3VudCBjb25zdCopOwppbnQgaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IGx3cyosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgQk9PTCBkb25lKTsKaW50IGh0dHBfc2VydmVyX2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbik7CgpzdGF0aWMgaW5saW5lIGludAppc19oMihzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2dldF9uZXR3b3JrX3dzaSh3c2kpICE9IHdzaTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9TRVJWRVJfSFRUUF9IICovCgAAAAAAAAAATwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwYAAAAAAABPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPBgAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfdmhvc3Rfb3B0aW9uIHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpuZXh0LCAqb3B0aW9uczsKICAgICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogICAgfTsKICAgIHN0cnVjdCBsd3NfcHJvdG9jb2xfdmhvc3Rfb3B0aW9ucyBsd3M7CiAgfTsKfSBNaW5uZXRWaG9zdE9wdGlvbnM7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX21vdW50IHsKICB1bmlvbiB7CiAgICBzdHJ1Y3QgewogICAgICBzdHJ1Y3QgaHR0cF9tb3VudCogbmV4dDsKICAgICAgY29uc3QgY2hhciAqbW50LCAqb3JnLCAqZGVmLCAqcHJvOwogICAgICBzdHJ1Y3QgaHR0cF92aG9zdF9vcHRpb25zICpjZ2llbnYsICpleHRyYV9taW1ldHlwZXMsICppbnRlcnByZXQ7CiAgICB9OwogICAgc3RydWN0IGx3c19odHRwX21vdW50IGx3czsKICB9OwogIE1pbm5ldENhbGxiYWNrIGNhbGxiYWNrOwp9IE1pbm5ldEh0dHBNb3VudDsKCi8qdHlwZWRlZiBzdHJ1Y3QgaHR0cF9zZXNzaW9uIHsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3A7Cn0gTWlubmV0SHR0cFNlc3Npb247Ki8KCk1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogdmFsdWUpOwp2b2lkIHZob3N0X29wdGlvbnNfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRWaG9zdE9wdGlvbnMqIHZvKTsKTWlubmV0Vmhvc3RPcHRpb25zKiB2aG9zdF9vcHRpb25zX25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3Qgdmhvc3Rfb3B0aW9uKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqIG9yaWdpbiwgY29uc3QgY2hhciogZGVmLCBlbnVtIGx3c19tb3VudF9wcm90b2NvbHMgb3JpZ2luX3Byb3RvKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBjb25zdCBjaGFyKiBrZXkpOwpzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnRfZmluZChjb25zdCBjaGFyKiwgc2l6ZV90KTsKdm9pZCBtb3VudF9mcmVlKEpTQ29udGV4dCosIE1pbm5ldEh0dHBNb3VudCBjb25zdCopOwppbnQgaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IGx3cyosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgQk9PTCBkb25lKTsKaW50IGh0dHBfc2VydmVyX2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbik7CgpzdGF0aWMgaW5saW5lIGludAppc19oMihzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2dldF9uZXR3b3JrX3dzaSh3c2kpICE9IHdzaTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9TRVJWRVJfSFRUUF9IICovCgAAAAAAAAAATwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwYAAAAAAABPBgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-server.h",
			"settings":
			{
				"buffer_size": 480,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADZAQAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0gKI2RlZmluZSBNSU5ORVRfU0VSVkVSX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC5oIgoKc3RydWN0IGh0dHBfbW91bnQ7Cgp0eXBlZGVmIHN0cnVjdCBzZXJ2ZXJfY29udGV4dCB7CiAgTWlubmV0Q29udGV4dCBjb250ZXh0OwogIE1pbm5ldENhbGxiYWNrcyBjYjsKfSBNaW5uZXRTZXJ2ZXI7CgpzdHJ1Y3QgcHJveHlfY29ubmVjdGlvbjsKCkpTVmFsdWUgbWlubmV0X3dzX3NlcnZlcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQgYXJnYywgSlNWYWx1ZSogYXJndik7CmludCBodHRwX3NlcnZlcl9oZWFkZXJzKEpTQ29udGV4dCosIE1pbm5ldEJ1ZmZlciosIHN0cnVjdCBsd3MqIHdzaSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIE1pbm5ldFNlcnZlciBtaW5uZXRfc2VydmVyOwoKI2VuZGlmIC8qIE1JTk5FVF9TRVJWRVJfSCAqLwoAAAAAAAAAAOABAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADgAQAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0gKI2RlZmluZSBNSU5ORVRfU0VSVkVSX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCiNpbmNsdWRlICJtaW5uZXQuaCIKCnN0cnVjdCBodHRwX21vdW50OwoKdHlwZWRlZiBzdHJ1Y3Qgc2VydmVyX2NvbnRleHQgewogIE1pbm5ldENvbnRleHQgY29udGV4dDsKICBNaW5uZXRDYWxsYmFja3MgY2I7Cn0gTWlubmV0U2VydmVyOwoKc3RydWN0IHByb3h5X2Nvbm5lY3Rpb247CgpKU1ZhbHVlIG1pbm5ldF93c19zZXJ2ZXIoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50IGFyZ2MsIEpTVmFsdWUqIGFyZ3YpOwppbnQgaHR0cF9zZXJ2ZXJfaGVhZGVycyhKU0NvbnRleHQqLCBNaW5uZXRCdWZmZXIqLCBzdHJ1Y3QgbHdzKiB3c2kpOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRTZXJ2ZXIgbWlubmV0X3NlcnZlcjsKCiNlbmRpZiAvKiBNSU5ORVRfU0VSVkVSX0ggKi8KAAAAAAAAAADgAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADgAQAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0gKI2RlZmluZSBNSU5ORVRfU0VSVkVSX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCiNpbmNsdWRlICJtaW5uZXQuaCIKCnN0cnVjdCBodHRwX21vdW50OwoKdHlwZWRlZiBzdHJ1Y3Qgc2VydmVyX2NvbnRleHQgewogIE1pbm5ldENvbnRleHQgY29udGV4dDsKICBNaW5uZXRDYWxsYmFja3MgY2I7Cn0gTWlubmV0U2VydmVyOwoKc3RydWN0IHByb3h5X2Nvbm5lY3Rpb247CgpKU1ZhbHVlIG1pbm5ldF93c19zZXJ2ZXIoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50IGFyZ2MsIEpTVmFsdWUqIGFyZ3YpOwppbnQgaHR0cF9zZXJ2ZXJfaGVhZGVycyhKU0NvbnRleHQqLCBNaW5uZXRCdWZmZXIqLCBzdHJ1Y3QgbHdzKiB3c2kpOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRTZXJ2ZXIgbWlubmV0X3NlcnZlcjsKCiNlbmRpZiAvKiBNSU5ORVRfU0VSVkVSX0ggKi8KAAAAAAAAAADgAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADgAQAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0gKI2RlZmluZSBNSU5ORVRfU0VSVkVSX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCiNpbmNsdWRlICJtaW5uZXQuaCIKCnN0cnVjdCBodHRwX21vdW50OwoKdHlwZWRlZiBzdHJ1Y3Qgc2VydmVyX2NvbnRleHQgewogIE1pbm5ldENvbnRleHQgY29udGV4dDsKICBNaW5uZXRDYWxsYmFja3MgY2I7Cn0gTWlubmV0U2VydmVyOwoKc3RydWN0IHByb3h5X2Nvbm5lY3Rpb247CgpKU1ZhbHVlIG1pbm5ldF93c19zZXJ2ZXIoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50IGFyZ2MsIEpTVmFsdWUqIGFyZ3YpOwppbnQgaHR0cF9zZXJ2ZXJfaGVhZGVycyhKU0NvbnRleHQqLCBNaW5uZXRCdWZmZXIqLCBzdHJ1Y3QgbHdzKiB3c2kpOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRTZXJ2ZXIgbWlubmV0X3NlcnZlcjsKCiNlbmRpZiAvKiBNSU5ORVRfU0VSVkVSX0ggKi8KAAAAAAAAAADgAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADgAQAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0gKI2RlZmluZSBNSU5ORVRfU0VSVkVSX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCiNpbmNsdWRlICJtaW5uZXQuaCIKCnN0cnVjdCBodHRwX21vdW50OwoKdHlwZWRlZiBzdHJ1Y3Qgc2VydmVyX2NvbnRleHQgewogIE1pbm5ldENvbnRleHQgY29udGV4dDsKICBNaW5uZXRDYWxsYmFja3MgY2I7Cn0gTWlubmV0U2VydmVyOwoKc3RydWN0IHByb3h5X2Nvbm5lY3Rpb247CgpKU1ZhbHVlIG1pbm5ldF93c19zZXJ2ZXIoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50IGFyZ2MsIEpTVmFsdWUqIGFyZ3YpOwppbnQgaHR0cF9zZXJ2ZXJfaGVhZGVycyhKU0NvbnRleHQqLCBNaW5uZXRCdWZmZXIqLCBzdHJ1Y3QgbHdzKiB3c2kpOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRTZXJ2ZXIgbWlubmV0X3NlcnZlcjsKCiNlbmRpZiAvKiBNSU5ORVRfU0VSVkVSX0ggKi8KAAAAAAAAAADgAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADgAQAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0gKI2RlZmluZSBNSU5ORVRfU0VSVkVSX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCiNpbmNsdWRlICJtaW5uZXQuaCIKCnN0cnVjdCBodHRwX21vdW50OwoKdHlwZWRlZiBzdHJ1Y3Qgc2VydmVyX2NvbnRleHQgewogIE1pbm5ldENvbnRleHQgY29udGV4dDsKICBNaW5uZXRDYWxsYmFja3MgY2I7Cn0gTWlubmV0U2VydmVyOwoKc3RydWN0IHByb3h5X2Nvbm5lY3Rpb247CgpKU1ZhbHVlIG1pbm5ldF93c19zZXJ2ZXIoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50IGFyZ2MsIEpTVmFsdWUqIGFyZ3YpOwppbnQgaHR0cF9zZXJ2ZXJfaGVhZGVycyhKU0NvbnRleHQqLCBNaW5uZXRCdWZmZXIqLCBzdHJ1Y3QgbHdzKiB3c2kpOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRTZXJ2ZXIgbWlubmV0X3NlcnZlcjsKCiNlbmRpZiAvKiBNSU5ORVRfU0VSVkVSX0ggKi8KAAAAAAAAAADgAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADgAQAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0gKI2RlZmluZSBNSU5ORVRfU0VSVkVSX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCiNpbmNsdWRlICJtaW5uZXQuaCIKCnN0cnVjdCBodHRwX21vdW50OwoKdHlwZWRlZiBzdHJ1Y3Qgc2VydmVyX2NvbnRleHQgewogIE1pbm5ldENvbnRleHQgY29udGV4dDsKICBNaW5uZXRDYWxsYmFja3MgY2I7Cn0gTWlubmV0U2VydmVyOwoKc3RydWN0IHByb3h5X2Nvbm5lY3Rpb247CgpKU1ZhbHVlIG1pbm5ldF93c19zZXJ2ZXIoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50IGFyZ2MsIEpTVmFsdWUqIGFyZ3YpOwppbnQgaHR0cF9zZXJ2ZXJfaGVhZGVycyhKU0NvbnRleHQqLCBNaW5uZXRCdWZmZXIqLCBzdHJ1Y3QgbHdzKiB3c2kpOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRTZXJ2ZXIgbWlubmV0X3NlcnZlcjsKCiNlbmRpZiAvKiBNSU5ORVRfU0VSVkVSX0ggKi8KAAAAAAAAAADgAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADgAQAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0gKI2RlZmluZSBNSU5ORVRfU0VSVkVSX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCiNpbmNsdWRlICJtaW5uZXQuaCIKCnN0cnVjdCBodHRwX21vdW50OwoKdHlwZWRlZiBzdHJ1Y3Qgc2VydmVyX2NvbnRleHQgewogIE1pbm5ldENvbnRleHQgY29udGV4dDsKICBNaW5uZXRDYWxsYmFja3MgY2I7Cn0gTWlubmV0U2VydmVyOwoKc3RydWN0IHByb3h5X2Nvbm5lY3Rpb247CgpKU1ZhbHVlIG1pbm5ldF93c19zZXJ2ZXIoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50IGFyZ2MsIEpTVmFsdWUqIGFyZ3YpOwppbnQgaHR0cF9zZXJ2ZXJfaGVhZGVycyhKU0NvbnRleHQqLCBNaW5uZXRCdWZmZXIqLCBzdHJ1Y3QgbHdzKiB3c2kpOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRTZXJ2ZXIgbWlubmV0X3NlcnZlcjsKCiNlbmRpZiAvKiBNSU5ORVRfU0VSVkVSX0ggKi8KAAAAAAAAAADgAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADgAQAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0gKI2RlZmluZSBNSU5ORVRfU0VSVkVSX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCiNpbmNsdWRlICJtaW5uZXQuaCIKCnN0cnVjdCBodHRwX21vdW50OwoKdHlwZWRlZiBzdHJ1Y3Qgc2VydmVyX2NvbnRleHQgewogIE1pbm5ldENvbnRleHQgY29udGV4dDsKICBNaW5uZXRDYWxsYmFja3MgY2I7Cn0gTWlubmV0U2VydmVyOwoKc3RydWN0IHByb3h5X2Nvbm5lY3Rpb247CgpKU1ZhbHVlIG1pbm5ldF93c19zZXJ2ZXIoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50IGFyZ2MsIEpTVmFsdWUqIGFyZ3YpOwppbnQgaHR0cF9zZXJ2ZXJfaGVhZGVycyhKU0NvbnRleHQqLCBNaW5uZXRCdWZmZXIqLCBzdHJ1Y3QgbHdzKiB3c2kpOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRTZXJ2ZXIgbWlubmV0X3NlcnZlcjsKCiNlbmRpZiAvKiBNSU5ORVRfU0VSVkVSX0ggKi8KAAAAAAAAAADgAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADgAQAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0gKI2RlZmluZSBNSU5ORVRfU0VSVkVSX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCiNpbmNsdWRlICJtaW5uZXQuaCIKCnN0cnVjdCBodHRwX21vdW50OwoKdHlwZWRlZiBzdHJ1Y3Qgc2VydmVyX2NvbnRleHQgewogIE1pbm5ldENvbnRleHQgY29udGV4dDsKICBNaW5uZXRDYWxsYmFja3MgY2I7Cn0gTWlubmV0U2VydmVyOwoKc3RydWN0IHByb3h5X2Nvbm5lY3Rpb247CgpKU1ZhbHVlIG1pbm5ldF93c19zZXJ2ZXIoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50IGFyZ2MsIEpTVmFsdWUqIGFyZ3YpOwppbnQgaHR0cF9zZXJ2ZXJfaGVhZGVycyhKU0NvbnRleHQqLCBNaW5uZXRCdWZmZXIqLCBzdHJ1Y3QgbHdzKiB3c2kpOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRTZXJ2ZXIgbWlubmV0X3NlcnZlcjsKCiNlbmRpZiAvKiBNSU5ORVRfU0VSVkVSX0ggKi8KAAAAAAAAAADgAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADgAQAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0gKI2RlZmluZSBNSU5ORVRfU0VSVkVSX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCiNpbmNsdWRlICJtaW5uZXQuaCIKCnN0cnVjdCBodHRwX21vdW50OwoKdHlwZWRlZiBzdHJ1Y3Qgc2VydmVyX2NvbnRleHQgewogIE1pbm5ldENvbnRleHQgY29udGV4dDsKICBNaW5uZXRDYWxsYmFja3MgY2I7Cn0gTWlubmV0U2VydmVyOwoKc3RydWN0IHByb3h5X2Nvbm5lY3Rpb247CgpKU1ZhbHVlIG1pbm5ldF93c19zZXJ2ZXIoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50IGFyZ2MsIEpTVmFsdWUqIGFyZ3YpOwppbnQgaHR0cF9zZXJ2ZXJfaGVhZGVycyhKU0NvbnRleHQqLCBNaW5uZXRCdWZmZXIqLCBzdHJ1Y3QgbHdzKiB3c2kpOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRTZXJ2ZXIgbWlubmV0X3NlcnZlcjsKCiNlbmRpZiAvKiBNSU5ORVRfU0VSVkVSX0ggKi8KAAAAAAAAAADgAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet.h",
			"settings":
			{
				"buffer_size": 6051,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					97,
					1,
					"insert",
					{
						"characters": "\nstruct"
					},
					"CAAAAKcKAAAAAAAAqAoAAAAAAAAAAAAAqAoAAAAAAACqCgAAAAAAAAAAAACqCgAAAAAAAKsKAAAAAAAAAAAAAKsKAAAAAAAArAoAAAAAAAAAAAAArAoAAAAAAACtCgAAAAAAAAAAAACtCgAAAAAAAK4KAAAAAAAAAAAAAK4KAAAAAAAArwoAAAAAAAAAAAAArwoAAAAAAACwCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwoAAAAAAACnCgAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": " bty"
					},
					"BAAAALAKAAAAAAAAsQoAAAAAAAAAAAAAsQoAAAAAAACyCgAAAAAAAAAAAACyCgAAAAAAALMKAAAAAAAAAAAAALMKAAAAAAAAtAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAoAAAAAAACwCgAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					2,
					"left_delete",
					null,
					"AgAAALMKAAAAAAAAswoAAAAAAAABAAAAebIKAAAAAAAAsgoAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAtAoAAAAAAAC0CgAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "yt_"
					},
					"AwAAALIKAAAAAAAAswoAAAAAAAAAAAAAswoAAAAAAAC0CgAAAAAAAAAAAAC0CgAAAAAAALUKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgoAAAAAAACyCgAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"left_delete",
					null,
					"AQAAALQKAAAAAAAAtAoAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAtQoAAAAAAAC1CgAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "e_buffer"
					},
					"CAAAALQKAAAAAAAAtQoAAAAAAAAAAAAAtQoAAAAAAAC2CgAAAAAAAAAAAAC2CgAAAAAAALcKAAAAAAAAAAAAALcKAAAAAAAAuAoAAAAAAAAAAAAAuAoAAAAAAAC5CgAAAAAAAAAAAAC5CgAAAAAAALoKAAAAAAAAAAAAALoKAAAAAAAAuwoAAAAAAAAAAAAAuwoAAAAAAAC8CgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAoAAAAAAAC0CgAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAALwKAAAAAAAAvQoAAAAAAAAAAAAAvQoAAAAAAAC+CgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAoAAAAAAAC8CgAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"left_delete",
					null,
					"AQAAAL0KAAAAAAAAvQoAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAvgoAAAAAAAC+CgAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "send_buf;"
					},
					"CQAAAL0KAAAAAAAAvgoAAAAAAAAAAAAAvgoAAAAAAAC/CgAAAAAAAAAAAAC/CgAAAAAAAMAKAAAAAAAAAAAAAMAKAAAAAAAAwQoAAAAAAAAAAAAAwQoAAAAAAADCCgAAAAAAAAAAAADCCgAAAAAAAMMKAAAAAAAAAAAAAMMKAAAAAAAAxAoAAAAAAAAAAAAAxAoAAAAAAADFCgAAAAAAAAAAAADFCgAAAAAAAMYKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQoAAAAAAAC9CgAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"cut",
					null,
					"AQAAAKgKAAAAAAAAqAoAAAAAAAAfAAAAICBzdHJ1Y3QgYnl0ZV9idWZmZXIgc2VuZF9idWY7Cg",
					"AQAAAAAAAAABAAAAqAoAAAAAAADHCgAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"paste",
					null,
					"AQAAAP0KAAAAAAAAHAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QoAAAAAAAD9CgAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"cut",
					null,
					"AQAAAEwAAAAAAAAATAAAAAAAAAAbAAAAI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4K",
					"AQAAAAAAAAABAAAATAAAAAAAAABnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					2,
					"paste",
					null,
					"AgAAAEwAAAAAAAAAZwAAAAAAAAAAAAAAZwAAAAAAAACCAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAG8AAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAABwAAAAAAAAABIAAAAgPGxpYndlYnNvY2tldHMuaD4",
					"AQAAAAAAAAABAAAAbwAAAAAAAACBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAHAAAAAAAAAAcgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "buffewr."
					},
					"CAAAAHEAAAAAAAAAcgAAAAAAAAAAAAAAcgAAAAAAAABzAAAAAAAAAAAAAABzAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAdQAAAAAAAAAAAAAAdQAAAAAAAAB2AAAAAAAAAAAAAAB2AAAAAAAAAHcAAAAAAAAAAAAAAHcAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB5AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQAAAAAAAABxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					3,
					"left_delete",
					null,
					"AwAAAHgAAAAAAAAAeAAAAAAAAAABAAAALncAAAAAAAAAdwAAAAAAAAABAAAAcnYAAAAAAAAAdgAAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAeQAAAAAAAAB5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": "r.h"
					},
					"AwAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgAAAAAAAAB2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAMgsAAAAAAAA/CwAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAMgsAAAAAAAA/CwAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAMgsAAAAAAAA/CwAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAMgsAAAAAAAA/CwAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAMgsAAAAAAAA/CwAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAMgsAAAAAAAA/CwAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAMgsAAAAAAAA/CwAAAAAAAAAAAAAAAPC/"
				],
				[
					220,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAMgsAAAAAAAA/CwAAAAAAAAAAAAAAAPC/"
				],
				[
					221,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAMgsAAAAAAAA/CwAAAAAAAAAAAAAAAPC/"
				],
				[
					222,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACjFwAAI2lmbmRlZiBNSU5ORVRfSAojZGVmaW5lIE1JTk5FVF9ICgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpNaW5uZXRCdWZmZXI7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CgojaWZkZWYgSlNfU0hBUkVEX0xJQlJBUlkKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZQojZWxzZQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlX21pbm5ldAojZW5kaWYKCiNkZWZpbmUgTUFYKGEsIGIpICgoYSkgPiAoYikgPyAoYSkgOiAoYikpCiNkZWZpbmUgTUlOKGEsIGIpICgoYSkgPCAoYikgPyAoYSkgOiAoYikpCgojZGVmaW5lIGNvdW50b2YoeCkgKHNpemVvZih4KSAvIHNpemVvZigoeClbMF0pKQojZGVmaW5lIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKHByb3BfbmFtZSwgZmdldHRlciwgZnNldHRlciwgbWFnaWNfbnVtLCBmbGFncykgXAogIHsgXAogICAgLm5hbWUgPSBwcm9wX25hbWUsIC5wcm9wX2ZsYWdzID0gZmxhZ3MsIC5kZWZfdHlwZSA9IEpTX0RFRl9DR0VUU0VUX01BR0lDLCAubWFnaWMgPSBtYWdpY19udW0sIC51ID0gey5nZXRzZXQgPSB7LmdldCA9IHsuZ2V0dGVyX21hZ2ljID0gZmdldHRlcn0sIC5zZXQgPSB7LnNldHRlcl9tYWdpYyA9IGZzZXR0ZXJ9fSB9IFwKICB9CiNkZWZpbmUgSlNfQ0dFVFNFVF9GTEFHU19ERUYocHJvcF9uYW1lLCBmZ2V0dGVyLCBmc2V0dGVyLCBmbGFncykgXAogIHsgXAogICAgLm5hbWUgPSBwcm9wX25hbWUsIC5wcm9wX2ZsYWdzID0gZmxhZ3MsIC5kZWZfdHlwZSA9IEpTX0RFRl9DR0VUU0VULCAudSA9IHsuZ2V0c2V0ID0gey5nZXQgPSB7LmdldHRlcl9tYWdpYyA9IGZnZXR0ZXJ9LCAuc2V0ID0gey5zZXR0ZXJfbWFnaWMgPSBmc2V0dGVyfX0gfSBcCiAgfQoKI2RlZmluZSBTRVRMT0cobWF4X2xldmVsKSBsd3Nfc2V0X2xvZ19sZXZlbCgoKCgobWF4X2xldmVsKSA8PCAxKSAtIDEpICYgKH5MTExfUEFSU0VSKSkgfCBMTExfVVNFUiwgTlVMTCk7CgojZGVmaW5lIEdFVENCUFJPUChvYmosIG9wdCwgY2JfcHRyKSBHRVRDQihKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgb3B0KSwgY2JfcHRyKQojZGVmaW5lIEdFVENCKG9wdCwgY2JfcHRyKSBHRVRDQlRISVMob3B0LCBjYl9wdHIsIHRoaXNfdmFsKQojZGVmaW5lIEdFVENCVEhJUyhvcHQsIGNiX3B0ciwgdGhpc19vYmopIFwKICBpZihKU19Jc0Z1bmN0aW9uKGN0eCwgb3B0KSkgeyBcCiAgICBjYl9wdHIgPSAoTWlubmV0Q2FsbGJhY2spe2N0eCwgSlNfRHVwVmFsdWUoY3R4LCB0aGlzX29iaiksIG9wdCwgI2NiX3B0cn07IFwKICB9CgojZGVmaW5lIEZSRUVDQihjYl9wdHIpIFwKICBkbyB7IFwKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX3B0ci50aGlzX29iaik7IFwKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX3B0ci5mdW5jX29iaik7IFwKICB9IHdoaWxlKDApOwoKI2RlZmluZSBBREQocHRyLCBpbnN0LCBtZW1iZXIpIFwKICBkbyB7IFwKICAgICgqKHB0cikpID0gKGluc3QpOyBcCiAgICAocHRyKSA9ICYoKihwdHIpKS0+bWVtYmVyOyBcCiAgfSB3aGlsZSgwKTsKCiNkZWZpbmUgRkcoYykgIlx4MWJbMzg7NTsiIGMgIm0iCiNkZWZpbmUgQkcoYykgIlx4MWJbNDg7NTsiIGMgIm0iCiNkZWZpbmUgRkdDKGMsIHN0cikgRkcoI2MpIHN0ciBOQwojZGVmaW5lIEJHQyhjLCBzdHIpIEJHKCNjKSBzdHIgTkMKI2RlZmluZSBOQyAiXHgxYlswbSIKCiNpZmRlZiBfVGhyZWFkX2xvY2FsCiNkZWZpbmUgVEhSRUFEX0xPQ0FMIF9UaHJlYWRfbG9jYWwKI2VsaWYgZGVmaW5lZChfX0dOVUNfXykgfHwgZGVmaW5lZChfX0lOVEVMX0NPTVBJTEVSKSB8fCBkZWZpbmVkKF9fU1VOUFJPX0NDKSB8fCBkZWZpbmVkKF9fSUJNQ1BQX18pCiNkZWZpbmUgVEhSRUFEX0xPQ0FMIF9fdGhyZWFkCiNlbGlmIGRlZmluZWQoX1dJTjMyKQojZGVmaW5lIFRIUkVBRF9MT0NBTCBfX2RlY2xzcGVjKHRocmVhZCkKI2Vsc2UKI2Vycm9yIE5vIFRMUyBpbXBsZW1lbnRhdGlvbiBmb3VuZC4KI2VuZGlmCgplbnVtIHsgUkVBRF9IQU5ETEVSID0gMCwgV1JJVEVfSEFORExFUiB9OwplbnVtIGh0dHBfbWV0aG9kOwoKdHlwZWRlZiBzdHJ1Y3QgbHdzX3BvbGxmZCBNaW5uZXRQb2xsRmQ7Cgp0eXBlZGVmIGVudW0gY2xpZW50X3N0YXRlIHsKICBDT05ORUNUSU5HID0gMCwKICBPUEVOID0gMSwKICBDTE9TSU5HID0gMiwKICBDTE9TRUQgPSAzLAp9IE1pbm5ldFN0YXR1czsKCnR5cGVkZWYgc3RydWN0IHdzX2NhbGxiYWNrIHsKICBKU0NvbnRleHQqIGN0eDsKICBKU1ZhbHVlIHRoaXNfb2JqOwogIEpTVmFsdWUgZnVuY19vYmo7CiAgY29uc3QgY2hhciogbmFtZTsKfSBNaW5uZXRDYWxsYmFjazsKCnN0cnVjdCBwcm94eV9jb25uZWN0aW9uOwpzdHJ1Y3QgaHR0cF9tb3VudDsKc3RydWN0IHNlcnZlcl9jb250ZXh0OwpzdHJ1Y3QgY2xpZW50X2NvbnRleHQ7Cgp0eXBlZGVmIHN0cnVjdCBzZXNzaW9uX2RhdGEgewogIEpTVmFsdWUgd3Nfb2JqOwogIHVuaW9uIHsKICAgIHN0cnVjdCB7CiAgICAgIEpTVmFsdWUgcmVxX29iajsKICAgICAgSlNWYWx1ZSByZXNwX29iajsKICAgIH07CiAgICBKU1ZhbHVlIGFyZ3NbMl07CiAgfTsKICBzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnQ7CiAgc3RydWN0IHByb3h5X2Nvbm5lY3Rpb24qIHByb3h5OwogIEpTVmFsdWUgZ2VuZXJhdG9yLCBuZXh0OwogIGludCBzZXJpYWw7CiAgQk9PTCBoMiA6IDE7CiAgaW50NjRfdCB3cml0dGVuOwogIHN0cnVjdCBzZXJ2ZXJfY29udGV4dCogc2VydmVyOwogIHN0cnVjdCBjbGllbnRfY29udGV4dCogY2xpZW50OwogIE1pbm5ldEJ1ZmZlciBzZW5kX2J1ZjsKfSBNaW5uZXRTZXNzaW9uOwoKdHlwZWRlZiBzdHJ1Y3QgY2FsbGJhY2tzIHsKICBNaW5uZXRDYWxsYmFjayBtZXNzYWdlLCBjb25uZWN0LCBjbG9zZSwgcG9uZywgZmQsIGh0dHA7Cn0gTWlubmV0Q2FsbGJhY2tzOwoKdHlwZWRlZiBzdHJ1Y3QgY29udGV4dCB7CiAgSlNDb250ZXh0KiBqczsKICBzdHJ1Y3QgbHdzX2NvbnRleHQqIGx3czsKICBzdHJ1Y3QgbHdzX2NvbnRleHRfY3JlYXRpb25faW5mbyBpbmZvOwp9IE1pbm5ldENvbnRleHQ7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIGludDMyX3QgbWlubmV0X2xvZ19sZXZlbDsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NvbnRleHQqIG1pbm5ldF9sb2dfY3R4OwpleHRlcm4gVEhSRUFEX0xPQ0FMIEJPT0wgbWlubmV0X2V4Y2VwdGlvbjsKCkpTVmFsdWUgaGVhZGVyc19vYmplY3QoSlNDb250ZXh0KiwgY29uc3QgTWlubmV0QnVmZmVyKiBidWZmZXIpOwpjaGFyKiBoZWFkZXJzX2F0b20oSlNBdG9tLCBKU0NvbnRleHQqIGN0eCk7CmludCBoZWFkZXJzX2Zyb20oTWlubmV0QnVmZmVyKiwgc3RydWN0IGx3cyogd3NpLCBKU1ZhbHVlIG9iaiwgSlNDb250ZXh0KiBjdHgpOwpzc2l6ZV90IGhlYWRlcnNfc2V0KEpTQ29udGV4dCosIE1pbm5ldEJ1ZmZlciosIGNvbnN0IGNoYXIqIG5hbWUsIGNvbnN0IGNoYXIqIHZhbHVlKTsKaW50IGZkX2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgTWlubmV0Q2FsbGJhY2sqIGNiLCBzdHJ1Y3QgbHdzX3BvbGxhcmdzKiBhcmdzKTsKaW50IG1pbm5ldF9sd3NfdW5oYW5kbGVkKGNvbnN0IGNoYXIqIGhhbmRsZXIsIGludCk7CkpTVmFsdWUgbWlubmV0X2VtaXRfdGhpcyhjb25zdCBzdHJ1Y3Qgd3NfY2FsbGJhY2sqLCBKU1ZhbHVlQ29uc3QgdGhpc19vYmosIGludCBhcmdjLCBKU1ZhbHVlKiBhcmd2KTsKSlNWYWx1ZSBtaW5uZXRfZW1pdChjb25zdCBzdHJ1Y3Qgd3NfY2FsbGJhY2sqLCBpbnQgYXJnYywgSlNWYWx1ZSogYXJndik7CnZvaWQgbWlubmV0X2hhbmRsZXJzKEpTQ29udGV4dCosIHN0cnVjdCBsd3MqIHdzaSwgc3RydWN0IGx3c19wb2xsYXJncyogYXJncywgSlNWYWx1ZSBvdXRbMl0pOwp2b2lkIHZhbHVlX2R1bXAoSlNDb250ZXh0KiwgY29uc3QgY2hhciogbiwgSlNWYWx1ZSBjb25zdCogdik7CkpTTW9kdWxlRGVmKiBqc19pbml0X21vZHVsZV9taW5uZXQoSlNDb250ZXh0KiwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpOwpjb25zdCBjaGFyKiBsd3NfY2FsbGJhY2tfbmFtZShpbnQpOwoKc3RhdGljIGlubGluZSBCT09MCmx3c19pc19wb2xsX2NhbGxiYWNrKGludCByZWFzb24pIHsKICBzd2l0Y2gocmVhc29uKSB7CiAgICBjYXNlIExXU19DQUxMQkFDS19MT0NLX1BPTEw6CiAgICBjYXNlIExXU19DQUxMQkFDS19VTkxPQ0tfUE9MTDoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0FERF9QT0xMX0ZEOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfREVMX1BPTExfRkQ6CiAgICBjYXNlIExXU19DQUxMQkFDS19DSEFOR0VfTU9ERV9QT0xMX0ZEOiByZXR1cm4gVFJVRTsKICB9CiAgcmV0dXJuIEZBTFNFOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKbHdzX2lzX2h0dHBfY2FsbGJhY2soaW50IHJlYXNvbikgewogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX0VTVEFCTElTSEVEX0NMSUVOVF9IVFRQOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfQ0xPU0VEX0NMSUVOVF9IVFRQOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRV9DTElFTlRfSFRUUF9SRUFEOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRV9DTElFTlRfSFRUUDoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMSUVOVF9IVFRQX1dSSVRFQUJMRToKICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMSUVOVF9IVFRQX1JFRElSRUNUOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfQ0xJRU5UX0hUVFBfQklORF9QUk9UT0NPTDoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMSUVOVF9IVFRQX0RST1BfUFJPVE9DT0w6CiAgICBjYXNlIExXU19DQUxMQkFDS19DT01QTEVURURfQ0xJRU5UX0hUVFA6CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfQUREX0hFQURFUlM6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTE9TRURfSFRUUDoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0ZJTFRFUl9IVFRQX0NPTk5FQ1RJT046CiAgICBjYXNlIExXU19DQUxMQkFDS19IVFRQOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9CSU5EX1BST1RPQ09MOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9CT0RZOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9CT0RZX0NPTVBMRVRJT046CiAgICBjYXNlIExXU19DQUxMQkFDS19IVFRQX0RST1BfUFJPVE9DT0w6CiAgICBjYXNlIExXU19DQUxMQkFDS19IVFRQX0ZJTEVfQ09NUExFVElPTjoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0hUVFBfV1JJVEVBQkxFOiByZXR1cm4gVFJVRTsKICB9CiAgcmV0dXJuIEZBTFNFOwp9CgpzdGF0aWMgaW5saW5lIHNpemVfdApieXRlX2Nocihjb25zdCB2b2lkKiB4LCBzaXplX3QgbGVuLCBjaGFyIGMpIHsKICBjb25zdCBjaGFyICpzLCAqdCwgKnN0ciA9IHg7CiAgZm9yKHMgPSBzdHIsIHQgPSBzICsgbGVuOyBzIDwgdDsgKytzKQogICAgaWYoKnMgPT0gYykKICAgICAgYnJlYWs7CiAgcmV0dXJuIHMgLSBzdHI7Cn0KCnN0YXRpYyBpbmxpbmUgc2l6ZV90CmJ5dGVfY2hycyhjb25zdCB2b2lkKiBzdHIsIHNpemVfdCBsZW4sIGNvbnN0IGNoYXIgbmVlZGxlW10sIHNpemVfdCBubCkgewogIGNvbnN0IGNoYXIgKnMsICp0OwogIGZvcihzID0gc3RyLCB0ID0gc3RyICsgbGVuOyBzICE9IHQ7IHMrKykKICAgIGlmKGJ5dGVfY2hyKG5lZWRsZSwgbmwsICpzKSA8IG5sKQogICAgICBicmVhazsKICByZXR1cm4gcyAtIChjb25zdCBjaGFyKilzdHI7Cn0KCnN0YXRpYyBpbmxpbmUgY2hhcioKbHdzX2dldF91cmkoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCwgZW51bSBsd3NfdG9rZW5faW5kZXhlcyB0b2tlbikgewogIHNpemVfdCBsZW47CiAgY2hhciBidWZbMTAyNF07CgogIGlmKChsZW4gPSBsd3NfaGRyX2NvcHkod3NpLCBidWYsIHNpemVvZihidWYpIC0gMSwgdG9rZW4pKSA+IDApCiAgICBidWZbbGVuXSA9ICdcMCc7CiAgZWxzZQogICAgcmV0dXJuIDA7CgogIHJldHVybiBqc19zdHJuZHVwKGN0eCwgYnVmLCBsZW4pOwp9CgojZW5kaWYgLyogTUlOTkVUX0ggKi8KAAAAAAAAAACjFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgsAAAAAAAA/CwAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAARggAAAAAAABGCAAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAATQgAAAAAAABfCAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-fetch.c",
			"settings":
			{
				"buffer_size": 7960,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAARHwAAI2RlZmluZSBfR05VX1NPVVJDRQojaW5jbHVkZSAibWlubmV0LXJlc3BvbnNlLmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgPHN0cmluZ3MuaD4KI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1cmwvY3VybC5oPgoKc3RydWN0IGhlYWRlcl9jb250ZXh0IHsKICBKU0NvbnRleHQqIGN0eDsKICBNaW5uZXRCdWZmZXIqIGJ1ZjsKfTsKCnN0cnVjdCBjdXJsX2NhbGxiYWNrIHsKICBKU0NvbnRleHQqIGN0eDsKICBDVVJMTSogbXVsdGk7Cn07CgpzdHJ1Y3QgY3VybF9zb2NrZXQgewogIEJPT0wgd2FudHJlYWQsIHdhbnR3cml0ZTsKICBjdXJsX3NvY2tldF90IHNvY2tmZDsKfTsKCnN0YXRpYyB2b2lkCmhlYWRlcl9saXN0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgaGVhZGVycywgc3RydWN0IGN1cmxfc2xpc3QqKiBsaXN0X3B0cikgewogIEpTVmFsdWUgZ2xvYmFsX29iaiwgb2JqZWN0X2N0b3IsIGtleXMsIG5hbWVzLCBsZW5ndGg7CiAgaW50IGk7CiAgaW50MzJfdCBsZW47CgogIGdsb2JhbF9vYmogPSBKU19HZXRHbG9iYWxPYmplY3QoY3R4KTsKICBvYmplY3RfY3RvciA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgZ2xvYmFsX29iaiwgIk9iamVjdCIpOwogIGtleXMgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iamVjdF9jdG9yLCAia2V5cyIpOwoKICBuYW1lcyA9IEpTX0NhbGwoY3R4LCBrZXlzLCBvYmplY3RfY3RvciwgMSwgKEpTVmFsdWVDb25zdCopJmhlYWRlcnMpOwogIGxlbmd0aCA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgbmFtZXMsICJsZW5ndGgiKTsKCiAgSlNfVG9JbnQzMihjdHgsICZsZW4sIGxlbmd0aCk7CgogIGZvcihpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICBKU1ZhbHVlIGtleSwgdmFsdWU7CiAgICBjb25zdCBjaGFyICprZXlfc3RyLCAqdmFsdWVfc3RyOwogICAgc2l6ZV90IGtleV9sZW4sIHZhbHVlX2xlbjsKICAgIGtleSA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgbmFtZXMsIGkpOwogICAga2V5X3N0ciA9IEpTX1RvQ1N0cmluZyhjdHgsIGtleSk7CiAgICBrZXlfbGVuID0gc3RybGVuKGtleV9zdHIpOwoKICAgIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBoZWFkZXJzLCBrZXlfc3RyKTsKICAgIHZhbHVlX3N0ciA9IEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKTsKICAgIHZhbHVlX2xlbiA9IHN0cmxlbih2YWx1ZV9zdHIpOwoKICAgIHsKICAgICAgc2l6ZV90IGJ1ZnNpemUgPSAwOwogICAgICBjaGFyIGJ1ZltrZXlfbGVuICsgMiArIHZhbHVlX2xlbiArIDIgKyAxXTsKCiAgICAgIHN0cmNweSgmYnVmW2J1ZnNpemVdLCBrZXlfc3RyKTsKICAgICAgYnVmc2l6ZSArPSBrZXlfbGVuOwogICAgICBzdHJjcHkoJmJ1ZltidWZzaXplXSwgIjogIik7CiAgICAgIGJ1ZnNpemUgKz0gMjsKICAgICAgc3RyY3B5KCZidWZbYnVmc2l6ZV0sIHZhbHVlX3N0cik7CiAgICAgIGJ1ZnNpemUgKz0gdmFsdWVfbGVuOwogICAgICBzdHJjcHkoJmJ1ZltidWZzaXplXSwgIlwwXG4iKTsKICAgICAgYnVmc2l6ZSArPSAyOwoKICAgICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBrZXlfc3RyKTsKICAgICAgSlNfRnJlZUNTdHJpbmcoY3R4LCB2YWx1ZV9zdHIpOwoKICAgICAgKmxpc3RfcHRyID0gY3VybF9zbGlzdF9hcHBlbmQoKmxpc3RfcHRyLCBidWYpOwogICAgfQogIH0KCiAgSlNfRnJlZVZhbHVlKGN0eCwgZ2xvYmFsX29iaik7CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqZWN0X2N0b3IpOwogIC8vIEpTX0ZyZWVWYWx1ZShjdHgsIG9iamVjdF9wcm90byk7CiAgSlNfRnJlZVZhbHVlKGN0eCwga2V5cyk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgbmFtZXMpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIGxlbmd0aCk7Cn0KCnN0YXRpYyBzaXplX3QKaGVhZGVyX2NhbGxiYWNrKGNoYXIqIHgsIHNpemVfdCBuLCBzaXplX3Qgbml0ZW1zLCB2b2lkKiB1c2VyZGF0YSkgewogIHN0cnVjdCBoZWFkZXJfY29udGV4dCogaGMgPSB1c2VyZGF0YTsKICBzaXplX3QgaTsKCiAgZm9yKGkgPSBuaXRlbXM7IGkgPiAwOyAtLWkpCiAgICBpZighKHhbaSAtIDFdID09ICdccicgfHwgeFtpIC0gMV0gPT0gJ1xuJykpCiAgICAgIGJyZWFrOwoKICBpZihpID4gMCAmJiBidWZmZXJfYXBwZW5kKGhjLT5idWYsIHgsIGkgKyAxLCBoYy0+Y3R4KSA+IDApCiAgICBoYy0+YnVmLT53cml0ZVstMV0gPSAnXG4nOwoKICByZXR1cm4gbml0ZW1zICogbjsKfQoKc3RhdGljIGludApoYW5kbGVfc29ja2V0KENVUkwqIGVhc3ksIGN1cmxfc29ja2V0X3QgcywgaW50IGFjdGlvbiwgdm9pZCogdXNlcnAsIHZvaWQqIHNvY2tldHApIHsKICBzdHJ1Y3QgY3VybF9jYWxsYmFjayogY2FsbGJhY2tfZGF0YSA9IHVzZXJwOwogIHN0cnVjdCBjdXJsX3NvY2tldCogc29jazsKICBpbnQgZXZlbnRzID0gMDsKCiAgc3dpdGNoKGFjdGlvbikgewogICAgY2FzZSBDVVJMX1BPTExfSU46CiAgICBjYXNlIENVUkxfUE9MTF9PVVQ6CiAgICBjYXNlIENVUkxfUE9MTF9JTk9VVDoKICAgICAgc29jayA9IChzdHJ1Y3QgY3VybF9zb2NrZXQqKShzb2NrZXRwID8gc29ja2V0cCA6IGpzX21hbGxvY3ooY2FsbGJhY2tfZGF0YS0+Y3R4LCBzaXplb2Yoc3RydWN0IGN1cmxfc29ja2V0KSkpOwoKICAgICAgY3VybF9tdWx0aV9hc3NpZ24oY2FsbGJhY2tfZGF0YS0+bXVsdGksIHMsICh2b2lkKilzb2NrKTsKCiAgICAgIHNvY2stPnNvY2tmZCA9IHM7CgogICAgICBpZihhY3Rpb24gIT0gQ1VSTF9QT0xMX0lOKQogICAgICAgIHNvY2stPndhbnR3cml0ZSA9IFRSVUU7CiAgICAgIGlmKGFjdGlvbiAhPSBDVVJMX1BPTExfT1VUKQogICAgICAgIHNvY2stPndhbnRyZWFkID0gVFJVRTsKCiAgICAgIGZwcmludGYoc3RkZXJyLCAiaGFuZGxlX3NvY2tldCBzb2NrPSVkLCB3YW50d3JpdGU9JWQsIHdhbnRyZWFkPSVkXG4iLCBzb2NrLT5zb2NrZmQsIHNvY2stPndhbnR3cml0ZSwgc29jay0+d2FudHJlYWQpOwoKICAgICAgLyogICAgICBldmVudF9kZWwoc29jay0+ZXZlbnQpOwogICAgICAgICAgICBldmVudF9hc3NpZ24oc29jay0+ZXZlbnQsIGJhc2UsIHNvY2stPnNvY2tmZCwgZXZlbnRzLAogICAgICAgICAgICAgIGN1cmxfcGVyZm9ybSwgc29jayk7CiAgICAgICAgICAgIGV2ZW50X2FkZChzb2NrLT5ldmVudCwgTlVMTCk7CiAgICAgICAgKi8KICAgICAgYnJlYWs7CiAgICBjYXNlIENVUkxfUE9MTF9SRU1PVkU6CiAgICAgIGlmKHNvY2tldHApIHsKICAgICAgICAvKiAgZXZlbnRfZGVsKCgoY3VybF9jb250ZXh0X3QqKSBzb2NrZXRwKS0+ZXZlbnQpOyovCiAgICAgICAganNfZnJlZShjYWxsYmFja19kYXRhLT5jdHgsIHNvY2tldHApOwogICAgICAgIGN1cmxfbXVsdGlfYXNzaWduKGNhbGxiYWNrX2RhdGEtPm11bHRpLCBzLCBOVUxMKTsKICAgICAgfQogICAgICBicmVhazsKICAgIGRlZmF1bHQ6IGFib3J0KCk7CiAgfQoKICByZXR1cm4gMDsKfQoKLyoKc3RhdGljIHZvaWQKb25fdGltZW91dChldnV0aWxfc29ja2V0X3QgZmQsIHNob3J0IGV2ZW50cywgdm9pZCogYXJnKSB7CiAgaW50IHJ1bm5pbmdfaGFuZGxlczsKICBjdXJsX211bHRpX3NvY2tldF9hY3Rpb24oY3VybF9oYW5kbGUsIENVUkxfU09DS0VUX1RJTUVPVVQsIDAsICZydW5uaW5nX2hhbmRsZXMpOwogIGNoZWNrX211bHRpX2luZm8oKTsKfSovCgpzdGF0aWMgaW50CnN0YXJ0X3RpbWVvdXQoQ1VSTE0qIG11bHRpLCBsb25nIHRpbWVvdXRfbXMsIHZvaWQqIHVzZXJwKSB7CiAgc3RydWN0IGN1cmxfY2FsbGJhY2sqIGNhbGxiYWNrX2RhdGEgPSB1c2VycDsKICAvKmlmKHRpbWVvdXRfbXMgPCAwKSB7CiAgICAgZXZ0aW1lcl9kZWwodGltZW91dCk7CiAgIH0gZWxzZSB7CiAgICAgaWYodGltZW91dF9tcyA9PSAwKQogICAgICAgdGltZW91dF9tcyA9IDE7CiAgICAgc3RydWN0IHRpbWV2YWwgdHY7CiAgICAgdHYudHZfc2VjID0gdGltZW91dF9tcyAvIDEwMDA7CiAgICAgdHYudHZfdXNlYyA9ICh0aW1lb3V0X21zICUgMTAwMCkgKiAxMDAwOwogICAgIGV2dGltZXJfZGVsKHRpbWVvdXQpOwogICAgIGV2dGltZXJfYWRkKHRpbWVvdXQsICZ0dik7CiAgIH0qLwogIHJldHVybiAwOwp9CgpKU1ZhbHVlCm1pbm5ldF9mZXRjaChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2KSB7CiAgQ1VSTCogY3VybCA9IDA7CiAgQ1VSTE0qIG11bHRpID0gMDsKICBDVVJMY29kZSBjdXJsUmVzOwogIGNvbnN0IGNoYXIqIHVybDsKICBGSUxFKiBmaTsKICBNaW5uZXRSZXNwb25zZSogcmVzOwogIHVpbnQ4X3QqIGJ1ZmZlcjsKICBsb25nIGJ1ZlNpemU7CiAgbG9uZyBzdGF0dXM7CiAgY2hhciogdHlwZTsKICBjb25zdCBjaGFyKiBib2R5X3N0ciA9IE5VTEw7CiAgc3RydWN0IGN1cmxfc2xpc3QqIGhlYWRlcmxpc3QgPSBOVUxMOwogIHN0cnVjdCBoZWFkZXJfY29udGV4dCBoY3R4ID0ge2N0eCwgMH07CiAgc3RydWN0IGN1cmxfY2FsbGJhY2sqIGNhbGxiYWNrX2RhdGEgPSAwOwogIGludCBzdGlsbF9ydW5uaW5nID0gMTsgLyoga2VlcCBudW1iZXIgb2YgcnVubmluZyBoYW5kbGVzICovCgogIEpTVmFsdWUgcmVzT2JqID0gSlNfTmV3T2JqZWN0Q2xhc3MoY3R4LCBtaW5uZXRfcmVzcG9uc2VfY2xhc3NfaWQpOwogIGlmKEpTX0lzRXhjZXB0aW9uKHJlc09iaikpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICByZXMgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKCpyZXMpKTsKCiAgaWYoIXJlcykgewogICAgSlNfRnJlZVZhbHVlKGN0eCwgcmVzT2JqKTsKICAgIHJldHVybiBKU19FWENFUFRJT047CiAgfQoKICBpZighSlNfSXNTdHJpbmcoYXJndlswXSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICB1cmwgPSBKU19Ub0NTdHJpbmcoY3R4LCBhcmd2WzBdKTsKICByZXMtPnVybCA9IGpzX3N0cmR1cChjdHgsIHVybCk7CgogIGlmKGFyZ2MgPiAxICYmIEpTX0lzT2JqZWN0KGFyZ3ZbMV0pKSB7CiAgICBKU1ZhbHVlIG1ldGhvZCwgYm9keSwgaGVhZGVyczsKICAgIGNvbnN0IGNoYXIqIG1ldGhvZF9zdHI7CiAgICBtZXRob2QgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIGFyZ3ZbMV0sICJtZXRob2QiKTsKICAgIGJvZHkgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIGFyZ3ZbMV0sICJib2R5Iik7CiAgICBoZWFkZXJzID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBhcmd2WzFdLCAiaGVhZGVycyIpOwoKICAgIGlmKCFKU19Jc1VuZGVmaW5lZChoZWFkZXJzKSkKICAgICAgaGVhZGVyX2xpc3QoY3R4LCBoZWFkZXJzLCAmaGVhZGVybGlzdCk7CgogICAgbWV0aG9kX3N0ciA9IEpTX1RvQ1N0cmluZyhjdHgsIG1ldGhvZCk7CgogICAgaWYoIUpTX0lzVW5kZWZpbmVkKGJvZHkpIHx8ICFzdHJjYXNlY21wKG1ldGhvZF9zdHIsICJwb3N0IikpIHsKICAgICAgYm9keV9zdHIgPSBKU19Ub0NTdHJpbmcoY3R4LCBib2R5KTsKICAgIH0KCiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIG1ldGhvZF9zdHIpOwoKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIG1ldGhvZCk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCBib2R5KTsKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGhlYWRlcnMpOwogIH0KCiAgY3VybF9nbG9iYWxfaW5pdChDVVJMX0dMT0JBTF9ERUZBVUxUKTsKCiAgaWYoIShtdWx0aSA9IGN1cmxfbXVsdGlfaW5pdCgpKSB8fCAhKGN1cmwgPSBjdXJsX2Vhc3lfaW5pdCgpKSB8fCAhKGNhbGxiYWNrX2RhdGEgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKHN0cnVjdCBjdXJsX2NhbGxiYWNrKSkpKSB7CiAgICByZXNPYmogPSBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CiAgICBnb3RvIGZhaWw7CiAgfQoKICBjYWxsYmFja19kYXRhLT5jdHggPSBjdHg7CiAgY2FsbGJhY2tfZGF0YS0+bXVsdGkgPSBtdWx0aTsKCiAgY3VybF9tdWx0aV9zZXRvcHQobXVsdGksIENVUkxNT1BUX1NPQ0tFVEZVTkNUSU9OLCBoYW5kbGVfc29ja2V0KTsKICBjdXJsX211bHRpX3NldG9wdChtdWx0aSwgQ1VSTE1PUFRfU09DS0VUREFUQSwgY2FsbGJhY2tfZGF0YSk7CiAgY3VybF9tdWx0aV9zZXRvcHQobXVsdGksIENVUkxNT1BUX1RJTUVSRlVOQ1RJT04sIHN0YXJ0X3RpbWVvdXQpOwogIGN1cmxfbXVsdGlfc2V0b3B0KG11bHRpLCBDVVJMTU9QVF9USU1FUkRBVEEsIGNhbGxiYWNrX2RhdGEpOwoKICBmaSA9IHRtcGZpbGUoKTsKICBoY3R4LmJ1ZiA9ICZyZXMtPmhlYWRlcnM7CgogIGN1cmxfZWFzeV9zZXRvcHQoY3VybCwgQ1VSTE9QVF9VUkwsIHVybCk7CiAgY3VybF9lYXN5X3NldG9wdChjdXJsLCBDVVJMT1BUX0ZPTExPV0xPQ0FUSU9OLCAxTCk7CiAgY3VybF9lYXN5X3NldG9wdChjdXJsLCBDVVJMT1BUX1VTRVJBR0VOVCwgIm1pbmltYWwtbmV0d29yay1xdWlja2pzIik7CiAgY3VybF9lYXN5X3NldG9wdChjdXJsLCBDVVJMT1BUX0hUVFBIRUFERVIsIGhlYWRlcmxpc3QpOwogIGN1cmxfZWFzeV9zZXRvcHQoY3VybCwgQ1VSTE9QVF9XUklURURBVEEsIGZpKTsKICBjdXJsX2Vhc3lfc2V0b3B0KGN1cmwsIENVUkxPUFRfSEVBREVSRlVOQ1RJT04sICZoZWFkZXJfY2FsbGJhY2spOwogIGN1cmxfZWFzeV9zZXRvcHQoY3VybCwgQ1VSTE9QVF9IRUFERVJEQVRBLCAmaGN0eCk7CgogIGlmKGJvZHlfc3RyKQogICAgY3VybF9lYXN5X3NldG9wdChjdXJsLCBDVVJMT1BUX1BPU1RGSUVMRFMsIGJvZHlfc3RyKTsKCiAgY3VybF9tdWx0aV9hZGRfaGFuZGxlKG11bHRpLCBjdXJsKTsKCiAgaWYoc3RpbGxfcnVubmluZykgewogICAgQ1VSTE1zZyogbXNnOwogICAgaW50IHF1ZXVlZDsKICAgIENVUkxNY29kZSBtYyA9IGN1cmxfbXVsdGlfcGVyZm9ybShtdWx0aSwgJnN0aWxsX3J1bm5pbmcpOwogIH0KI2lmIDAKICBjdXJsUmVzID0gY3VybF9lYXN5X3BlcmZvcm0oY3VybCk7CiAgaWYoY3VybF9lYXN5X2dldGluZm8oY3VybCwgQ1VSTElORk9fUkVTUE9OU0VfQ09ERSwgJnN0YXR1cykgPT0gQ1VSTEVfT0spCiAgICByZXMtPnN0YXR1cyA9IHN0YXR1czsKCiAgaWYoY3VybF9lYXN5X2dldGluZm8oY3VybCwgQ1VSTElORk9fQ09OVEVOVF9UWVBFLCAmdHlwZSkgPT0gQ1VSTEVfT0spCiAgICByZXMtPnR5cGUgPSB0eXBlID8ganNfc3RyZHVwKGN0eCwgdHlwZSkgOiAwOwoKICByZXMtPm9rID0gRkFMU0U7CgogIGlmKGN1cmxSZXMgIT0gQ1VSTEVfT0spIHsKICAgIGZwcmludGYoc3RkZXJyLCAiQ1VSTCBmYWlsZWQ6ICVzXG4iLCBjdXJsX2Vhc3lfc3RyZXJyb3IoY3VybFJlcykpOwogICAgZ290byBmaW5pc2g7CiAgfQoKICBidWZTaXplID0gZnRlbGwoZmkpOwogIHJld2luZChmaSk7CgogIGJ1ZmZlciA9IGNhbGxvYygxLCBidWZTaXplICsgMSk7CiAgaWYoIWJ1ZmZlcikgewogICAgZmNsb3NlKGZpKTsKICAgIGZwdXRzKCJtZW1vcnkgYWxsb2MgZmFpbHMiLCBzdGRlcnIpOwogICAgZ290byBmaW5pc2g7CiAgfQoKICAvKiBjb3B5IHRoZSBmaWxlIGludG8gdGhlIGJ1ZmZlciAqLwogIGlmKDEgIT0gZnJlYWQoYnVmZmVyLCBidWZTaXplLCAxLCBmaSkpIHsKICAgIGZjbG9zZShmaSk7CiAgICBmcmVlKGJ1ZmZlcik7CiAgICBmcHV0cygiZW50aXJlIHJlYWQgZmFpbHMiLCBzdGRlcnIpOwogICAgZ290byBmaW5pc2g7CiAgfQoKICBmY2xvc2UoZmkpOwogIHJlcy0+b2sgPSBUUlVFOwogIHJlcy0+Ym9keSA9IEJVRkZFUl9OKGJ1ZmZlciwgYnVmU2l6ZSk7CiNlbmRpZgoKZmluaXNoOgoKICBjdXJsX3NsaXN0X2ZyZWVfYWxsKGhlYWRlcmxpc3QpOwogIGlmKGJvZHlfc3RyKQogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBib2R5X3N0cik7CgogIEpTX1NldE9wYXF1ZShyZXNPYmosIHJlcyk7CgpmYWlsOgogIGlmKGNhbGxiYWNrX2RhdGEpCiAgICBqc19mcmVlKGN0eCwgY2FsbGJhY2tfZGF0YSk7CiAgaWYoY3VybCkKICAgIGN1cmxfZWFzeV9jbGVhbnVwKGN1cmwpOwogIGlmKG11bHRpKQogICAgY3VybF9tdWx0aV9jbGVhbnVwKG11bHRpKTsKCiAgY3VybF9nbG9iYWxfY2xlYW51cCgpOwogIHJldHVybiByZXNPYmo7Cn0KAAAAAAAAAAAYHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-response.c",
			"settings":
			{
				"buffer_size": 10135,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACXJwAAI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXNwb25zZS5oIgojaW5jbHVkZSAibWlubmV0LWJ1ZmZlci5oIgojaW5jbHVkZSAianN1dGlscy5oIgojaW5jbHVkZSA8Y3V0aWxzLmg+CgpUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF9yZXNwb25zZV9jbGFzc19pZDsKVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3Jlc3BvbnNlX3Byb3RvLCBtaW5uZXRfcmVzcG9uc2VfY3RvcjsKCmVudW0geyBSRVNQT05TRV9CVUZGRVIsIFJFU1BPTlNFX0pTT04sIFJFU1BPTlNFX1RFWFQsIFJFU1BPTlNFX0hFQURFUiB9OwplbnVtIHsgUkVTUE9OU0VfT0ssIFJFU1BPTlNFX1VSTCwgUkVTUE9OU0VfU1RBVFVTLCBSRVNQT05TRV9UWVBFLCBSRVNQT05TRV9PRkZTRVQsIFJFU1BPTlNFX0hFQURFUlMgfTsKCi8qc3RydWN0IGh0dHBfaGVhZGVyKgpoZWFkZXJfbmV3KEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBuYW1lLCBjb25zdCBjaGFyKiB2YWx1ZSkgewogIE1pbm5ldEh0dHBIZWFkZXIqIGhkcjsKCiAgaWYoIShoZHIgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKE1pbm5ldEh0dHBIZWFkZXIpKSkpCiAgICBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIGhkci0+bmFtZSA9IGpzX3N0cmR1cChjdHgsIG5hbWUpOwogIGhkci0+dmFsdWUgPSBqc19zdHJkdXAoY3R4LCB2YWx1ZSk7CgogIHJldHVybiBoZHI7Cn0KCnZvaWQKaGVhZGVyX2ZyZWUoSlNSdW50aW1lKiBydCwgc3RydWN0IGh0dHBfaGVhZGVyKiBoZHIpIHsKICBqc19mcmVlX3J0KHJ0LCBoZHItPm5hbWUpOwogIGpzX2ZyZWVfcnQocnQsIGhkci0+dmFsdWUpOwogIGpzX2ZyZWVfcnQocnQsIGhkcik7Cn0qLwoKdm9pZApyZXNwb25zZV9mb3JtYXQoc3RydWN0IGh0dHBfcmVzcG9uc2UgY29uc3QqIHJlcywgY2hhciogYnVmLCBzaXplX3QgbGVuKSB7CiAgc25wcmludGYoYnVmLCBsZW4sIEZHQygyMjYsICJNaW5uZXRSZXNwb25zZSIpICIgeyB1cmw6ICclcycsIHN0YXR1czogJWQsIG9rOiAlcywgdHlwZTogJyVzJyB9IiwgcmVzLT51cmwsIHJlcy0+c3RhdHVzLCByZXMtPm9rID8gInRydWUiIDogImZhbHNlIiwgcmVzLT50eXBlKTsKfQoKY2hhcioKcmVzcG9uc2VfZHVtcChzdHJ1Y3QgaHR0cF9yZXNwb25zZSBjb25zdCogcmVzKSB7CiAgc3RhdGljIGNoYXIgYnVmWzEwMjRdOwogIHJlc3BvbnNlX2Zvcm1hdChyZXMsIGJ1Ziwgc2l6ZW9mKGJ1ZikpOwogIHJldHVybiBidWY7Cn0KCnZvaWQKcmVzcG9uc2VfemVybyhzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzKSB7CiAgbWVtc2V0KHJlcywgMCwgc2l6ZW9mKE1pbm5ldFJlc3BvbnNlKSk7CiAgcmVzLT5ib2R5ID0gQlVGRkVSXzAoKTsKfQoKdm9pZApyZXNwb25zZV9pbml0KHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXMsIGNoYXIqIHVybCwgaW50MzJfdCBzdGF0dXMsIEJPT0wgb2ssIGNoYXIqIHR5cGUpIHsKICBtZW1zZXQocmVzLCAwLCBzaXplb2YoTWlubmV0UmVzcG9uc2UpKTsKCiAgcmVzLT5zdGF0dXMgPSBzdGF0dXM7CiAgcmVzLT5vayA9IG9rOwogIHJlcy0+dXJsID0gdXJsOwogIHJlcy0+dHlwZSA9IHR5cGU7CiAgcmVzLT5oZWFkZXJzID0gQlVGRkVSXzAoKTsKICByZXMtPmJvZHkgPSBCVUZGRVJfMCgpOwp9Cgpzc2l6ZV90CnJlc3BvbnNlX3dyaXRlKHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXMsIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBuLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBidWZmZXJfYXBwZW5kKCZyZXMtPmJvZHksIHgsIG4sIGN0eCk7Cn0KCnZvaWQKcmVzcG9uc2VfZnJlZShKU1J1bnRpbWUqIHJ0LCBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzKSB7CiAganNfZnJlZV9ydChydCwgKHZvaWQqKXJlcy0+dXJsKTsKICByZXMtPnVybCA9IDA7CiAganNfZnJlZV9ydChydCwgKHZvaWQqKXJlcy0+dHlwZSk7CiAgcmVzLT50eXBlID0gMDsKCiAgYnVmZmVyX2ZyZWUoJnJlcy0+aGVhZGVycywgcnQpOwogIGJ1ZmZlcl9mcmVlKCZyZXMtPmJvZHksIHJ0KTsKCiAganNfZnJlZV9ydChydCwgcmVzKTsKfQoKc3RydWN0IGh0dHBfcmVzcG9uc2UqCnJlc3BvbnNlX25ldyhKU0NvbnRleHQqIGN0eCkgewogIE1pbm5ldFJlc3BvbnNlKiByZXM7CgogIGlmKCEocmVzID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihNaW5uZXRSZXNwb25zZSkpKSkKICAgIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgcmV0dXJuIHJlczsKfQoKSlNWYWx1ZQptaW5uZXRfcmVzcG9uc2VfbmV3KEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiB1cmwsIGludDMyX3Qgc3RhdHVzLCBCT09MIG9rLCBjb25zdCBjaGFyKiB0eXBlKSB7CiAgTWlubmV0UmVzcG9uc2UqIHJlczsKCiAgaWYoKHJlcyA9IHJlc3BvbnNlX25ldyhjdHgpKSkgewogICAgcmVzcG9uc2VfaW5pdChyZXMsIGpzX3N0cmR1cChjdHgsIHVybCksIHN0YXR1cywgb2ssIGpzX3N0cmR1cChjdHgsIHR5cGUpKTsKCiAgICByZXR1cm4gbWlubmV0X3Jlc3BvbnNlX3dyYXAoY3R4LCByZXMpOwogIH0KCiAgcmV0dXJuIEpTX05VTEw7Cn0KCkpTVmFsdWUKbWlubmV0X3Jlc3BvbnNlX3dyYXAoSlNDb250ZXh0KiBjdHgsIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXMpIHsKICBKU1ZhbHVlIHJldCA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBtaW5uZXRfcmVzcG9uc2VfcHJvdG8sIG1pbm5ldF9yZXNwb25zZV9jbGFzc19pZCk7CgogIGlmKEpTX0lzRXhjZXB0aW9uKHJldCkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBKU19TZXRPcGFxdWUocmV0LCByZXMpOwogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9yZXNwb25zZV9idWZmZXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBNaW5uZXRSZXNwb25zZSogcmVzOwoKICBpZigocmVzID0gSlNfR2V0T3BhcXVlMihjdHgsIHRoaXNfdmFsLCBtaW5uZXRfcmVzcG9uc2VfY2xhc3NfaWQpKSkgewogICAgSlNWYWx1ZSB2YWwgPSBKU19OZXdBcnJheUJ1ZmZlciAvKkNvcHkqLyAoY3R4LCBibG9ja19CRUdJTigmcmVzLT5ib2R5KSwgYmxvY2tfU0laRSgmcmVzLT5ib2R5KSwgMCwgMCwgMCk7CiAgICByZXR1cm4gdmFsOwogIH0KCiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKc3RhdGljIEpTVmFsdWUKbWlubmV0X3Jlc3BvbnNlX2Nsb25lKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgTWlubmV0UmVzcG9uc2UgKnJlcywgKmNsb25lOwoKICBpZighKHJlcyA9IG1pbm5ldF9yZXNwb25zZV9kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBpZighKGNsb25lID0gcmVzcG9uc2VfbmV3KGN0eCkpKQogICAgcmV0dXJuIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgY2xvbmUtPnJlYWRfb25seSA9IHJlcy0+cmVhZF9vbmx5OwogIGNsb25lLT5zdGF0dXMgPSByZXMtPnN0YXR1czsKICBjbG9uZS0+cmVhZF9vbmx5ID0gcmVzLT5yZWFkX29ubHk7CiAgY2xvbmUtPnVybCA9IGpzX3N0cmR1cChjdHgsIHJlcy0+dXJsKTsKICBjbG9uZS0+dHlwZSA9IGpzX3N0cmR1cChjdHgsIHJlcy0+dHlwZSk7CgogIGJ1ZmZlcl9jbG9uZSgmY2xvbmUtPmhlYWRlcnMsICZyZXMtPmhlYWRlcnMsIGN0eCk7CiAgYnVmZmVyX2Nsb25lKCZjbG9uZS0+Ym9keSwgJnJlcy0+Ym9keSwgY3R4KTsKCiAgcmV0dXJuIG1pbm5ldF9yZXNwb25zZV93cmFwKGN0eCwgY2xvbmUpOwp9CgpzdGF0aWMgSlNWYWx1ZQptaW5uZXRfcmVzcG9uc2VfanNvbihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIE1pbm5ldFJlc3BvbnNlKiByZXM7CiAgaWYoKHJlcyA9IEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwgbWlubmV0X3Jlc3BvbnNlX2NsYXNzX2lkKSkpCiAgICByZXR1cm4gSlNfUGFyc2VKU09OKGN0eCwgYmxvY2tfQkVHSU4oJnJlcy0+Ym9keSksIGJ1ZmZlcl9IRUFEKCZyZXMtPmJvZHkpLCByZXMtPnVybCk7CgogIHJldHVybiBKU19FWENFUFRJT047Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9yZXNwb25zZV90ZXh0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgTWlubmV0UmVzcG9uc2UqIHJlczsKICBpZigocmVzID0gSlNfR2V0T3BhcXVlMihjdHgsIHRoaXNfdmFsLCBtaW5uZXRfcmVzcG9uc2VfY2xhc3NfaWQpKSkKICAgIHJldHVybiBKU19OZXdTdHJpbmdMZW4oY3R4LCAoY2hhciopYmxvY2tfQkVHSU4oJnJlcy0+Ym9keSksIGJ1ZmZlcl9IRUFEKCZyZXMtPmJvZHkpKTsKCiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKLypzdGF0aWMgSlNWYWx1ZQptaW5uZXRfcmVzcG9uc2VfaGVhZGVyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgTWlubmV0UmVzcG9uc2UqIHJlczsKICBNaW5uZXRIdHRwSGVhZGVyKiBoZHI7CiAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogIEpTVmFsdWUgcmV0ID0gSlNfRkFMU0U7CgogIGlmKCEocmVzID0gSlNfR2V0T3BhcXVlMihjdHgsIHRoaXNfdmFsLCBtaW5uZXRfcmVzcG9uc2VfY2xhc3NfaWQpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIG5hbWUgPSBKU19Ub0NTdHJpbmcoY3R4LCBhcmd2WzBdKTsKICB2YWx1ZSA9IEpTX1RvQ1N0cmluZyhjdHgsIGFyZ3ZbMV0pOwoKICBpZigoaGRyID0gaGVhZGVyX25ldyhjdHgsIG5hbWUsIHZhbHVlKSkpIHsKICAgIGlmKCFyZXMtPmhlYWRlcnMubmV4dCkKICAgICAgaW5pdF9saXN0X2hlYWQoJnJlcy0+aGVhZGVycyk7CgogICAgbGlzdF9hZGRfdGFpbCgmaGRyLT5saW5rLCAmcmVzLT5oZWFkZXJzKTsKICAgIHJldCA9IEpTX1RSVUU7CiAgfQoKICBKU19GcmVlQ1N0cmluZyhjdHgsIG5hbWUpOwogIEpTX0ZyZWVDU3RyaW5nKGN0eCwgdmFsdWUpOwoKICByZXR1cm4gcmV0Owp9Ki8KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9yZXNwb25zZV9nZXQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IG1hZ2ljKSB7CiAgTWlubmV0UmVzcG9uc2UqIHJlczsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBpZighKHJlcyA9IEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwgbWlubmV0X3Jlc3BvbnNlX2NsYXNzX2lkKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgUkVTUE9OU0VfU1RBVFVTOiB7CiAgICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgcmVzLT5zdGF0dXMpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkVTUE9OU0VfT0s6IHsKICAgICAgcmV0ID0gSlNfTmV3Qm9vbChjdHgsIHJlcy0+b2spOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkVTUE9OU0VfVVJMOiB7CiAgICAgIHJldCA9IHJlcy0+dXJsID8gSlNfTmV3U3RyaW5nKGN0eCwgcmVzLT51cmwpIDogSlNfTlVMTDsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFU1BPTlNFX1RZUEU6IHsKICAgICAgcmV0ID0gcmVzLT50eXBlID8gSlNfTmV3U3RyaW5nKGN0eCwgcmVzLT50eXBlKSA6IEpTX05VTEw7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVNQT05TRV9PRkZTRVQ6IHsKICAgICAgcmV0ID0gSlNfTmV3SW50NjQoY3R4LCBidWZmZXJfSEVBRCgmcmVzLT5ib2R5KSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVNQT05TRV9IRUFERVJTOiB7CiAgICAgIHJldCA9IGhlYWRlcnNfb2JqZWN0KGN0eCwgJnJlcy0+aGVhZGVycyk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKbWlubmV0X3Jlc3BvbnNlX3NldChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGludCBtYWdpYykgewogIE1pbm5ldFJlc3BvbnNlKiByZXNwOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIGNvbnN0IGNoYXIqIHN0cjsKICBzaXplX3QgbGVuOwogIGlmKCEocmVzcCA9IEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwgbWlubmV0X3Jlc3BvbnNlX2NsYXNzX2lkKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBpZihyZXNwLT5yZWFkX29ubHkpCiAgICByZXR1cm4gSlNfVGhyb3dSZWZlcmVuY2VFcnJvcihjdHgsICJSZXNwb25zZSBvYmplY3QgaXMgcmVhZC1vbmx5Iik7CgogIHN0ciA9IEpTX1RvQ1N0cmluZ0xlbihjdHgsICZsZW4sIHZhbHVlKTsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIFJFU1BPTlNFX1NUQVRVUzogewogICAgICBpbnQzMl90IHM7CiAgICAgIGlmKCFKU19Ub0ludDMyKGN0eCwgJnMsIHZhbHVlKSkKICAgICAgICByZXNwLT5zdGF0dXMgPSBzOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkVTUE9OU0VfT0s6IHsKICAgICAgcmVzcC0+b2sgPSBKU19Ub0Jvb2woY3R4LCB2YWx1ZSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVNQT05TRV9VUkw6IHsKICAgICAgcmVzcC0+dXJsID0ganNfc3RyZHVwKGN0eCwgc3RyKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFU1BPTlNFX1RZUEU6IHsKICAgICAgcmVzcC0+dHlwZSA9IGpzX3N0cmR1cChjdHgsIHN0cik7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVNQT05TRV9PRkZTRVQ6IHsKICAgICAgdWludDY0X3QgbzsKICAgICAgaWYoIUpTX1RvSW5kZXgoY3R4LCAmbywgdmFsdWUpKQogICAgICAgIHJlc3AtPmJvZHkud3JpdGUgPSByZXNwLT5ib2R5LnN0YXJ0ICsgbzsKICAgICAgYnJlYWs7CiAgICB9CiAgfQogIEpTX0ZyZWVDU3RyaW5nKGN0eCwgc3RyKTsKICByZXR1cm4gcmV0Owp9CgpKU1ZhbHVlCm1pbm5ldF9yZXNwb25zZV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSBwcm90bywgb2JqOwogIE1pbm5ldFJlc3BvbnNlKiByZXNwOwogIGludCBpOwoKICBpZighKHJlc3AgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKE1pbm5ldFJlc3BvbnNlKSkpKQogICAgcmV0dXJuIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgLyogdXNpbmcgbmV3X3RhcmdldCB0byBnZXQgdGhlIHByb3RvdHlwZSBpcyBuZWNlc3Nhcnkgd2hlbiB0aGUKICAgICBjbGFzcyBpcyBleHRlbmRlZC4gKi8KICBwcm90byA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgbmV3X3RhcmdldCwgInByb3RvdHlwZSIpOwogIGlmKEpTX0lzRXhjZXB0aW9uKHByb3RvKSkKICAgIHByb3RvID0gSlNfRHVwVmFsdWUoY3R4LCBtaW5uZXRfcmVzcG9uc2VfcHJvdG8pOwoKICBvYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcHJvdG8sIG1pbm5ldF9yZXNwb25zZV9jbGFzc19pZCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgcHJvdG8pOwogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICBnb3RvIGZhaWw7CgogIGlmKGFyZ2MgPj0gMSAmJiBhcmdjIDwgMykgewoKICAgIGlmKCFqc19pc19udWxsaXNoKGFyZ3ZbMF0pKSB7CiAgICAgIGJ1ZmZlcl9mcm9tdmFsdWUoJnJlc3AtPmJvZHksIGFyZ3ZbMF0sIGN0eCk7CiAgICB9CgogICAgYXJnYy0tOwogICAgYXJndisrOwogIH0KCiAgZm9yKGkgPSAwOyBpIDwgYXJnYzsgaSsrKSB7CiAgICBpZihKU19Jc09iamVjdChhcmd2W2ldKSAmJiAhSlNfSXNOdWxsKGFyZ3ZbaV0pKSB7CiAgICAgIGpzX2NvcHlfcHJvcGVydGllcyhjdHgsIG9iaiwgYXJndltpXSwgSlNfR1BOX1NUUklOR19NQVNLKTsKICAgICAgYXJnYy0tOwogICAgICBhcmd2Kys7CiAgICB9IGVsc2UgaWYoSlNfSXNTdHJpbmcoYXJndltpXSkpIHsKICAgICAgY29uc3QgY2hhciogc3RyID0gSlNfVG9DU3RyaW5nKGN0eCwgYXJndltpXSk7CiAgICAgIGlmKCFyZXNwLT51cmwpCiAgICAgICAgcmVzcC0+dXJsID0ganNfc3RyZHVwKGN0eCwgc3RyKTsKICAgICAgZWxzZSBpZighcmVzcC0+dHlwZSkKICAgICAgICByZXNwLT50eXBlID0ganNfc3RyZHVwKGN0eCwgc3RyKTsKICAgICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzdHIpOwoKICAgIH0gZWxzZSBpZihKU19Jc0Jvb2woYXJndltpXSkpIHsKICAgICAgcmVzcC0+b2sgPSBKU19Ub0Jvb2woY3R4LCBhcmd2W2ldKTsKICAgIH0gZWxzZSBpZihKU19Jc051bWJlcihhcmd2W2ldKSkgewogICAgICBpbnQzMl90IHM7CiAgICAgIGlmKCFKU19Ub0ludDMyKGN0eCwgJnMsIGFyZ3ZbaV0pKQogICAgICAgIHJlc3AtPnN0YXR1cyA9IHM7CiAgICB9CiAgfQoKICBKU19TZXRPcGFxdWUob2JqLCByZXNwKTsKCiAgcmV0dXJuIG9iajsKCmZhaWw6CiAganNfZnJlZShjdHgsIHJlc3ApOwogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKdm9pZAptaW5uZXRfcmVzcG9uc2VfZmluYWxpemVyKEpTUnVudGltZSogcnQsIEpTVmFsdWUgdmFsKSB7CiAgTWlubmV0UmVzcG9uc2UqIHJlcyA9IEpTX0dldE9wYXF1ZSh2YWwsIG1pbm5ldF9yZXNwb25zZV9jbGFzc19pZCk7CiAgaWYocmVzKSB7CiAgICBidWZmZXJfZnJlZSgmcmVzLT5oZWFkZXJzLCBydCk7CiAgICBidWZmZXJfZnJlZSgmcmVzLT5ib2R5LCBydCk7CgogICAgaWYocmVzLT51cmwpCiAgICAgIGpzX2ZyZWVfcnQocnQsIHJlcy0+dXJsKTsKICAgIGlmKHJlcy0+dHlwZSkKICAgICAganNfZnJlZV9ydChydCwgcmVzLT50eXBlKTsKCiAgICBqc19mcmVlX3J0KHJ0LCByZXMpOwogIH0KfQoKSlNDbGFzc0RlZiBtaW5uZXRfcmVzcG9uc2VfY2xhc3MgPSB7CiAgICAiTWlubmV0UmVzcG9uc2UiLAogICAgLmZpbmFsaXplciA9IG1pbm5ldF9yZXNwb25zZV9maW5hbGl6ZXIsCn07Cgpjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfcmVzcG9uc2VfcHJvdG9fZnVuY3NbXSA9IHsKICAgIEpTX0NGVU5DX0RFRigiYXJyYXlCdWZmZXIiLCAwLCBtaW5uZXRfcmVzcG9uc2VfYnVmZmVyKSwKICAgIEpTX0NGVU5DX0RFRigianNvbiIsIDAsIG1pbm5ldF9yZXNwb25zZV9qc29uKSwKICAgIEpTX0NGVU5DX0RFRigidGV4dCIsIDAsIG1pbm5ldF9yZXNwb25zZV90ZXh0KSwKICAgIEpTX0NGVU5DX0RFRigiY2xvbmUiLCAwLCBtaW5uZXRfcmVzcG9uc2VfY2xvbmUpLAogICAgLy8gSlNfQ0ZVTkNfREVGKCJoZWFkZXIiLCAyLCBtaW5uZXRfcmVzcG9uc2VfaGVhZGVyKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJzdGF0dXMiLCBtaW5uZXRfcmVzcG9uc2VfZ2V0LCBtaW5uZXRfcmVzcG9uc2Vfc2V0LCBSRVNQT05TRV9TVEFUVVMsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigib2siLCBtaW5uZXRfcmVzcG9uc2VfZ2V0LCBtaW5uZXRfcmVzcG9uc2Vfc2V0LCBSRVNQT05TRV9PSywgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJ1cmwiLCBtaW5uZXRfcmVzcG9uc2VfZ2V0LCBtaW5uZXRfcmVzcG9uc2Vfc2V0LCBSRVNQT05TRV9VUkwsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigidHlwZSIsIG1pbm5ldF9yZXNwb25zZV9nZXQsIG1pbm5ldF9yZXNwb25zZV9zZXQsIFJFU1BPTlNFX1RZUEUsIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigib2Zmc2V0IiwgbWlubmV0X3Jlc3BvbnNlX2dldCwgbWlubmV0X3Jlc3BvbnNlX3NldCwgUkVTUE9OU0VfT0ZGU0VUKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJoZWFkZXJzIiwgbWlubmV0X3Jlc3BvbnNlX2dldCwgMCwgUkVTUE9OU0VfSEVBREVSUywgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX1BST1BfU1RSSU5HX0RFRigiW1N5bWJvbC50b1N0cmluZ1RhZ10iLCAiTWlubmV0UmVzcG9uc2UiLCBKU19QUk9QX0NPTkZJR1VSQUJMRSksCn07Cgpjb25zdCBzaXplX3QgbWlubmV0X3Jlc3BvbnNlX3Byb3RvX2Z1bmNzX3NpemUgPSBjb3VudG9mKG1pbm5ldF9yZXNwb25zZV9wcm90b19mdW5jcyk7CgAAAAAAAAAAlycAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-client.h",
			"settings":
			{
				"buffer_size": 609,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABhAgAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgTWlubmV0Q29udGV4dCBjb250ZXh0OwogIE1pbm5ldENhbGxiYWNrcyBjYjsKICBKU1ZhbHVlIGhlYWRlcnMsIGJvZHksIG5leHQ7CiAgTWlubmV0VVJMIHVybDsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXF1ZXN0OwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87Cn0gTWlubmV0Q2xpZW50OwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRDbGllbnQqIG1pbm5ldF9jbGllbnQ7CgpKU1ZhbHVlIG1pbm5ldF93c19jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlKiBhcmd2KTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IGNsaWVudF9jb250ZXh0Kgpsd3NfY2xpZW50KHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfY29udGV4dF91c2VyKGx3c19nZXRfY29udGV4dCh3c2kpKTsKfQojZW5kaWYKAAAAAAAAAABhAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABhAgAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgTWlubmV0Q29udGV4dCBjb250ZXh0OwogIE1pbm5ldENhbGxiYWNrcyBjYjsKICBKU1ZhbHVlIGhlYWRlcnMsIGJvZHksIG5leHQ7CiAgTWlubmV0VVJMIHVybDsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXF1ZXN0OwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87Cn0gTWlubmV0Q2xpZW50OwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRDbGllbnQqIG1pbm5ldF9jbGllbnQ7CgpKU1ZhbHVlIG1pbm5ldF93c19jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlKiBhcmd2KTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IGNsaWVudF9jb250ZXh0Kgpsd3NfY2xpZW50KHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfY29udGV4dF91c2VyKGx3c19nZXRfY29udGV4dCh3c2kpKTsKfQojZW5kaWYKAAAAAAAAAABhAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABhAgAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgTWlubmV0Q29udGV4dCBjb250ZXh0OwogIE1pbm5ldENhbGxiYWNrcyBjYjsKICBKU1ZhbHVlIGhlYWRlcnMsIGJvZHksIG5leHQ7CiAgTWlubmV0VVJMIHVybDsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXF1ZXN0OwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87Cn0gTWlubmV0Q2xpZW50OwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRDbGllbnQqIG1pbm5ldF9jbGllbnQ7CgpKU1ZhbHVlIG1pbm5ldF93c19jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlKiBhcmd2KTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IGNsaWVudF9jb250ZXh0Kgpsd3NfY2xpZW50KHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfY29udGV4dF91c2VyKGx3c19nZXRfY29udGV4dCh3c2kpKTsKfQojZW5kaWYKAAAAAAAAAABhAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABhAgAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgTWlubmV0Q29udGV4dCBjb250ZXh0OwogIE1pbm5ldENhbGxiYWNrcyBjYjsKICBKU1ZhbHVlIGhlYWRlcnMsIGJvZHksIG5leHQ7CiAgTWlubmV0VVJMIHVybDsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXF1ZXN0OwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87Cn0gTWlubmV0Q2xpZW50OwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRDbGllbnQqIG1pbm5ldF9jbGllbnQ7CgpKU1ZhbHVlIG1pbm5ldF93c19jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlKiBhcmd2KTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IGNsaWVudF9jb250ZXh0Kgpsd3NfY2xpZW50KHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfY29udGV4dF91c2VyKGx3c19nZXRfY29udGV4dCh3c2kpKTsKfQojZW5kaWYKAAAAAAAAAABhAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABhAgAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgTWlubmV0Q29udGV4dCBjb250ZXh0OwogIE1pbm5ldENhbGxiYWNrcyBjYjsKICBKU1ZhbHVlIGhlYWRlcnMsIGJvZHksIG5leHQ7CiAgTWlubmV0VVJMIHVybDsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXF1ZXN0OwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87Cn0gTWlubmV0Q2xpZW50OwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRDbGllbnQqIG1pbm5ldF9jbGllbnQ7CgpKU1ZhbHVlIG1pbm5ldF93c19jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlKiBhcmd2KTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IGNsaWVudF9jb250ZXh0Kgpsd3NfY2xpZW50KHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfY29udGV4dF91c2VyKGx3c19nZXRfY29udGV4dCh3c2kpKTsKfQojZW5kaWYKAAAAAAAAAABhAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABhAgAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgTWlubmV0Q29udGV4dCBjb250ZXh0OwogIE1pbm5ldENhbGxiYWNrcyBjYjsKICBKU1ZhbHVlIGhlYWRlcnMsIGJvZHksIG5leHQ7CiAgTWlubmV0VVJMIHVybDsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXF1ZXN0OwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87Cn0gTWlubmV0Q2xpZW50OwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRDbGllbnQqIG1pbm5ldF9jbGllbnQ7CgpKU1ZhbHVlIG1pbm5ldF93c19jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlKiBhcmd2KTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IGNsaWVudF9jb250ZXh0Kgpsd3NfY2xpZW50KHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfY29udGV4dF91c2VyKGx3c19nZXRfY29udGV4dCh3c2kpKTsKfQojZW5kaWYKAAAAAAAAAABhAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABhAgAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgTWlubmV0Q29udGV4dCBjb250ZXh0OwogIE1pbm5ldENhbGxiYWNrcyBjYjsKICBKU1ZhbHVlIGhlYWRlcnMsIGJvZHksIG5leHQ7CiAgTWlubmV0VVJMIHVybDsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXF1ZXN0OwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87Cn0gTWlubmV0Q2xpZW50OwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRDbGllbnQqIG1pbm5ldF9jbGllbnQ7CgpKU1ZhbHVlIG1pbm5ldF93c19jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlKiBhcmd2KTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IGNsaWVudF9jb250ZXh0Kgpsd3NfY2xpZW50KHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfY29udGV4dF91c2VyKGx3c19nZXRfY29udGV4dCh3c2kpKTsKfQojZW5kaWYKAAAAAAAAAABhAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABhAgAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgTWlubmV0Q29udGV4dCBjb250ZXh0OwogIE1pbm5ldENhbGxiYWNrcyBjYjsKICBKU1ZhbHVlIGhlYWRlcnMsIGJvZHksIG5leHQ7CiAgTWlubmV0VVJMIHVybDsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXF1ZXN0OwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87Cn0gTWlubmV0Q2xpZW50OwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRDbGllbnQqIG1pbm5ldF9jbGllbnQ7CgpKU1ZhbHVlIG1pbm5ldF93c19jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlKiBhcmd2KTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IGNsaWVudF9jb250ZXh0Kgpsd3NfY2xpZW50KHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfY29udGV4dF91c2VyKGx3c19nZXRfY29udGV4dCh3c2kpKTsKfQojZW5kaWYKAAAAAAAAAABhAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABhAgAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgTWlubmV0Q29udGV4dCBjb250ZXh0OwogIE1pbm5ldENhbGxiYWNrcyBjYjsKICBKU1ZhbHVlIGhlYWRlcnMsIGJvZHksIG5leHQ7CiAgTWlubmV0VVJMIHVybDsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXF1ZXN0OwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87Cn0gTWlubmV0Q2xpZW50OwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRDbGllbnQqIG1pbm5ldF9jbGllbnQ7CgpKU1ZhbHVlIG1pbm5ldF93c19jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlKiBhcmd2KTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IGNsaWVudF9jb250ZXh0Kgpsd3NfY2xpZW50KHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfY29udGV4dF91c2VyKGx3c19nZXRfY29udGV4dCh3c2kpKTsKfQojZW5kaWYKAAAAAAAAAABhAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABhAgAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgTWlubmV0Q29udGV4dCBjb250ZXh0OwogIE1pbm5ldENhbGxiYWNrcyBjYjsKICBKU1ZhbHVlIGhlYWRlcnMsIGJvZHksIG5leHQ7CiAgTWlubmV0VVJMIHVybDsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXF1ZXN0OwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87Cn0gTWlubmV0Q2xpZW50OwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRDbGllbnQqIG1pbm5ldF9jbGllbnQ7CgpKU1ZhbHVlIG1pbm5ldF93c19jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlKiBhcmd2KTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IGNsaWVudF9jb250ZXh0Kgpsd3NfY2xpZW50KHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfY29udGV4dF91c2VyKGx3c19nZXRfY29udGV4dCh3c2kpKTsKfQojZW5kaWYKAAAAAAAAAABhAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABhAgAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgTWlubmV0Q29udGV4dCBjb250ZXh0OwogIE1pbm5ldENhbGxiYWNrcyBjYjsKICBKU1ZhbHVlIGhlYWRlcnMsIGJvZHksIG5leHQ7CiAgTWlubmV0VVJMIHVybDsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXF1ZXN0OwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87Cn0gTWlubmV0Q2xpZW50OwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBNaW5uZXRDbGllbnQqIG1pbm5ldF9jbGllbnQ7CgpKU1ZhbHVlIG1pbm5ldF93c19jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlKiBhcmd2KTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IGNsaWVudF9jb250ZXh0Kgpsd3NfY2xpZW50KHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfY29udGV4dF91c2VyKGx3c19nZXRfY29udGV4dCh3c2kpKTsKfQojZW5kaWYKAAAAAAAAAABhAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-server-ws.c",
			"settings":
			{
				"buffer_size": 5483,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					11,
					1,
					"insert",
					{
						"characters": " c"
					},
					"AwAAAHUNAAAAAAAAdg0AAAAAAAAAAAAAdg0AAAAAAAB2DQAAAAAAAAUAAAAgIC8qY3YNAAAAAAAAdw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeg0AAAAAAAB1DQAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAACwOAAAAAAAALQ4AAAAAAAAAAAAALQ4AAAAAAAAtDgAAAAAAAAIAAAAqLw",
					"AQAAAAAAAAABAAAALA4AAAAAAAAuDgAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAC0OAAAAAAAALg4AAAAAAAAAAAAALg4AAAAAAAAyDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQ4AAAAAAAAtDgAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "brewak"
					},
					"CAAAABwOAAAAAAAAHQ4AAAAAAAAAAAAAHQ4AAAAAAAAdDgAAAAAAAAoAAAAgcmV0dXJuIDA7JQ4AAAAAAAAlDgAAAAAAAAQAAAAgICAgHQ4AAAAAAAAeDgAAAAAAAAAAAAAeDgAAAAAAAB8OAAAAAAAAAAAAAB8OAAAAAAAAIA4AAAAAAAAAAAAAIA4AAAAAAAAhDgAAAAAAAAAAAAAhDgAAAAAAACIOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHA4AAAAAAAAmDgAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					3,
					"left_delete",
					null,
					"AwAAACEOAAAAAAAAIQ4AAAAAAAABAAAAayAOAAAAAAAAIA4AAAAAAAABAAAAYR8OAAAAAAAAHw4AAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAIg4AAAAAAAAiDgAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "ak;"
					},
					"AwAAAB8OAAAAAAAAIA4AAAAAAAAAAAAAIA4AAAAAAAAhDgAAAAAAAAAAAAAhDgAAAAAAACIOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHw4AAAAAAAAfDgAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					2,
					"right_delete",
					null,
					"AgAAAKINAAAAAAAAog0AAAAAAAABAAAAL6INAAAAAAAAog0AAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAog0AAAAAAACiDQAAAAAAAAAAAAAAAE5A"
				],
				[
					25,
					2,
					"right_delete",
					null,
					"AgAAAKoNAAAAAAAAqg0AAAAAAAABAAAAd6oNAAAAAAAAqg0AAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAqg0AAAAAAACqDQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "WRITABLE"
					},
					"CAAAAKoNAAAAAAAAqw0AAAAAAAAAAAAAqw0AAAAAAACsDQAAAAAAAAAAAACsDQAAAAAAAK0NAAAAAAAAAAAAAK0NAAAAAAAArg0AAAAAAAAAAAAArg0AAAAAAACvDQAAAAAAAAAAAACvDQAAAAAAALANAAAAAAAAAAAAALANAAAAAAAAsQ0AAAAAAAAAAAAAsQ0AAAAAAACyDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqg0AAAAAAACqDQAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					2,
					"right_delete",
					null,
					"AgAAALINAAAAAAAAsg0AAAAAAAABAAAAILINAAAAAAAAsg0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAsg0AAAAAAACyDQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPQNAAAAAAAA9Q0AAAAAAAAAAAAA9Q0AAAAAAAD1DQAAAAAAACUAAAAgICAgICBsd3NfY2FsbGJhY2tfb25fd3JpdGFibGUod3NpKTsK",
					"AQAAAAAAAAABAAAA9A0AAAAAAAAZDgAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAPUNAAAAAAAA9g0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9Q0AAAAAAAD1DQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACmFAAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgppbnQgaHR0cF9zZXJ2ZXJfY2FsbGJhY2soc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMsIHZvaWQqLCB2b2lkKiwgc2l6ZV90KTsKCmludAp3c19jYWxsYmFjayhzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIE1pbm5ldFNlc3Npb24qIHNlc3MgPSB1c2VyOwogIEpTQ29udGV4dCogY3R4ID0gbWlubmV0X3NlcnZlci5jb250ZXh0LmpzOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIGlmKGx3c19pc19wb2xsX2NhbGxiYWNrKHJlYXNvbikpCiAgICByZXR1cm4gZmRfY2FsbGJhY2sod3NpLCByZWFzb24sICZtaW5uZXRfc2VydmVyLmNiLmZkLCBpbik7CiAgaWYobHdzX2lzX2h0dHBfY2FsbGJhY2socmVhc29uKSkKICAgIHJldHVybiBodHRwX3NlcnZlcl9jYWxsYmFjayh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQ6IHsKICAgICAgaWYoIW9wYXF1ZSkKICAgICAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX1NFUlZFUl9WRVJJRllfQ0VSVFM6CiAgICBjYXNlIExXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfQ0xJRU5UX1ZFUklGWV9DRVJUUzoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9ORVdfQ0xJRU5UX0lOU1RBTlRJQVRFRDogewogICAgICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9DUkVBVEU6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NJX0RFU1RST1k6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9DT05GSVJNX1VQR1JBREU6IHsKICAgICAgaWYoIWx3c19pc19zc2wod3NpKSAmJiAhc3RyY21wKGluLCAiaDJjIikpCiAgICAgICAgcmV0dXJuIC0xOwoKICAgICAgLypyZXR1cm4gaHR0cF9zZXJ2ZXJfY2FsbGJhY2sod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOyovCiAgICAgIGlmKCFvcGFxdWUpCiAgICAgICAgb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CiAgICAgIGFzc2VydChvcGFxdWUpOwoKICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgIGludCBudW1faGRyID0gaHR0cF9zZXJ2ZXJfaGVhZGVycyhjdHgsICZvcGFxdWUtPnJlcS0+aGVhZGVycywgd3NpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRVNUQUJMSVNIRUQ6IHsKICAgICAgLy8gc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKCiAgICAgIG9wYXF1ZS0+c3RhdHVzID0gT1BFTjsKCiAgICAgIGlmKG1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdC5jdHgpIHsKCiAgICAgICAgaWYoIW9wYXF1ZS0+cmVxKQogICAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgICAgYXNzZXJ0KG9wYXF1ZS0+cmVxKTsKCiAgICAgICAgaWYoIUpTX0lzT2JqZWN0KHNlc3MtPnJlcV9vYmopKQogICAgICAgICAgc2Vzcy0+cmVxX29iaiA9IG1pbm5ldF9yZXF1ZXN0X3dyYXAoY3R4LCBvcGFxdWUtPnJlcSk7CgogICAgICAgIHNlc3MtPndzX29iaiA9IG1pbm5ldF93c193cmFwKGN0eCwgd3NpKTsKICAgICAgICBvcGFxdWUtPndzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKCiAgICAgICAgbHdzbF91c2VyKCJ3cyAgICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHdzaSMlIiBQUklkNjQgIiByZXE9JXAgdXJsPSVzXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBvcGFxdWUtPnNlcmlhbCwgb3BhcXVlLT5yZXEsIG9wYXF1ZS0+cmVxLT51cmwpOwogICAgICAgIG1pbm5ldF9lbWl0X3RoaXMoJm1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdCwgc2Vzcy0+d3Nfb2JqLCAyLCAmc2Vzcy0+d3Nfb2JqKTsKICAgICAgfQoKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfUEVFUl9JTklUSUFURURfQ0xPU0U6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTE9TRUQ6IHsKICAgICAgaWYob3BhcXVlLT5zdGF0dXMgPCBDTE9TSU5HKSB7CiAgICAgICAgSlNWYWx1ZSB3aHkgPSBKU19VTkRFRklORUQ7CiAgICAgICAgaW50IGNvZGUgPSAtMTsKCiAgICAgICAgaWYoaW4pIHsKICAgICAgICAgIHVpbnQ4X3QqIGNvZGVwID0gaW47CiAgICAgICAgICBjb2RlID0gKGNvZGVwWzBdIDw8IDgpICsgY29kZXBbMV07CiAgICAgICAgICBpZihsZW4gLSAyID4gMCkKICAgICAgICAgICAgd2h5ID0gSlNfTmV3U3RyaW5nTGVuKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgKGNoYXIqKWluICsgMiwgbGVuIC0gMik7CiAgICAgICAgfQoKICAgICAgICBvcGFxdWUtPnN0YXR1cyA9IENMT1NJTkc7CgogICAgICAgIGx3c2xfdXNlcigid3MgICAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBmZD0lZCwgc3RhdHVzPSVkXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBvcGFxdWUtPnN0YXR1cyk7CgogICAgICAgIGlmKGN0eCkgewogICAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzNdID0ge3Nlc3MtPndzX29iaiwgY29kZSAhPSAtMSA/IEpTX05ld0ludDMyKGN0eCwgY29kZSkgOiBKU19VTkRFRklORUQsIHdoeX07CiAgICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYi5jbG9zZSwgY29kZSAhPSAtMSA/IDMgOiAxLCBjYl9hcmd2KTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICAgIH0KICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jb250ZXh0LmpzLCB3aHkpOwogICAgICAgIC8qSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBzZXNzLT53c19vYmogPSBKU19OVUxMOyovCiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CgogICBjYXNlIExXU19DQUxMQkFDS19TRVJWRVJfV1JJVEVBQkxFOiB7CiAgICAgIHByaW50ZigiV1JJVEFCTEUgJXMgZmQ9JWRcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbiksIGx3c19nZXRfc29ja2V0X2ZkKHdzaSkpOwogICAgICAgYnJlYWs7CiAgICB9IAoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1JFQ0VJVkU6IHsKICAgICAgaWYoY3R4KSB7CiAgICAgICAgTWlubmV0V2Vic29ja2V0KiB3cyA9IG1pbm5ldF93c19kYXRhMihjdHgsIHNlc3MtPndzX29iaik7CiAgICAgICAgSlNWYWx1ZSBtc2cgPSB3cy0+YmluYXJ5ID8gSlNfTmV3QXJyYXlCdWZmZXJDb3B5KGN0eCwgaW4sIGxlbikgOiBKU19OZXdTdHJpbmdMZW4oY3R4LCBpbiwgbGVuKTsKICAgICAgICBKU1ZhbHVlIGNiX2FyZ3ZbMl0gPSB7SlNfRHVwVmFsdWUoY3R4LCBzZXNzLT53c19vYmopLCBtc2d9OwogICAgICAgIG1pbm5ldF9lbWl0KCZtaW5uZXRfc2VydmVyLmNiLm1lc3NhZ2UsIDIsIGNiX2FyZ3YpOwogICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMF0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICB9CiAgICAgIHJldHVybiAwOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRV9QT05HOiB7CiAgICAgIGlmKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgpIHsKICAgICAgICAvLyB3c19vYmogPSBtaW5uZXRfd3Nfd3JhcChtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4LCB3c2kpOwogICAgICAgIEpTVmFsdWUgbXNnID0gSlNfTmV3QXJyYXlCdWZmZXJDb3B5KG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIGluLCBsZW4pOwogICAgICAgIEpTVmFsdWUgY2JfYXJndlsyXSA9IHtKU19EdXBWYWx1ZShtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4LCBzZXNzLT53c19vYmopLCBtc2d9OwogICAgICAgIG1pbm5ldF9lbWl0KCZtaW5uZXRfc2VydmVyLmNiLnBvbmcsIDIsIGNiX2FyZ3YpOwogICAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4LCBjYl9hcmd2WzBdKTsKICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCwgY2JfYXJndlsxXSk7CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19GSUxURVJfTkVUV09SS19DT05ORUNUSU9OOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRklMVEVSX1BST1RPQ09MX0NPTk5FQ1RJT046CiAgICBjYXNlIExXU19DQUxMQkFDS19XU19TRVJWRVJfRFJPUF9QUk9UT0NPTDogewogICAgICByZXR1cm4gMDsKICAgIH0KCiAgICBkZWZhdWx0OiB7CiAgICAgIC8vIHByaW50Zigid3NfY2FsbGJhY2sgJXMgJXAgJXAgJXp1XG4iLCBsd3NfY2FsbGJhY2tfbmFtZShyZWFzb24pLCB1c2VyLCBpbiwgbGVuKTsKICAgICAgbWlubmV0X2x3c191bmhhbmRsZWQoX19mdW5jX18sIHJlYXNvbik7CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgLy8gbHdzbF91c2VyKCJ3cyAgICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIGZkPSVkIHVybD0nJXMnIGluPSclLipzJ1xuIiwgMjIgKyAocmVhc29uICogMiksIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQod3NpKSwgbHdzX2dldF91cmkod3NpLCBtaW5uZXRfc2VydmVyLmNvbnRleHQuanMsCiAgLy8gV1NJX1RPS0VOX0dFVF9VUkkpLCAoaW50KWxlbiwgKGNoYXIqKWluKTsKCiAgaWYob3BhcXVlICYmIG9wYXF1ZS0+c3RhdHVzID49IENMT1NJTkcpCiAgICByZXR1cm4gLTE7CgogIHJldHVybiAwOyAvLyBsd3NfY2FsbGJhY2tfaHR0cF9kdW1teSh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7Cn0KAAAAAAAAAAClFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9g0AAAAAAAD2DQAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAKMNAAAAAAAApA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAow0AAAAAAACjDQAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "stderr,"
					},
					"BwAAAKsNAAAAAAAArA0AAAAAAAAAAAAArA0AAAAAAACtDQAAAAAAAAAAAACtDQAAAAAAAK4NAAAAAAAAAAAAAK4NAAAAAAAArw0AAAAAAAAAAAAArw0AAAAAAACwDQAAAAAAAAAAAACwDQAAAAAAALENAAAAAAAAAAAAALENAAAAAAAAsg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqw0AAAAAAACrDQAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACtFAAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgppbnQgaHR0cF9zZXJ2ZXJfY2FsbGJhY2soc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMsIHZvaWQqLCB2b2lkKiwgc2l6ZV90KTsKCmludAp3c19jYWxsYmFjayhzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIE1pbm5ldFNlc3Npb24qIHNlc3MgPSB1c2VyOwogIEpTQ29udGV4dCogY3R4ID0gbWlubmV0X3NlcnZlci5jb250ZXh0LmpzOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIGlmKGx3c19pc19wb2xsX2NhbGxiYWNrKHJlYXNvbikpCiAgICByZXR1cm4gZmRfY2FsbGJhY2sod3NpLCByZWFzb24sICZtaW5uZXRfc2VydmVyLmNiLmZkLCBpbik7CiAgaWYobHdzX2lzX2h0dHBfY2FsbGJhY2socmVhc29uKSkKICAgIHJldHVybiBodHRwX3NlcnZlcl9jYWxsYmFjayh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQ6IHsKICAgICAgaWYoIW9wYXF1ZSkKICAgICAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX1NFUlZFUl9WRVJJRllfQ0VSVFM6CiAgICBjYXNlIExXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfQ0xJRU5UX1ZFUklGWV9DRVJUUzoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9ORVdfQ0xJRU5UX0lOU1RBTlRJQVRFRDogewogICAgICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9DUkVBVEU6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NJX0RFU1RST1k6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9DT05GSVJNX1VQR1JBREU6IHsKICAgICAgaWYoIWx3c19pc19zc2wod3NpKSAmJiAhc3RyY21wKGluLCAiaDJjIikpCiAgICAgICAgcmV0dXJuIC0xOwoKICAgICAgLypyZXR1cm4gaHR0cF9zZXJ2ZXJfY2FsbGJhY2sod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOyovCiAgICAgIGlmKCFvcGFxdWUpCiAgICAgICAgb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CiAgICAgIGFzc2VydChvcGFxdWUpOwoKICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgIGludCBudW1faGRyID0gaHR0cF9zZXJ2ZXJfaGVhZGVycyhjdHgsICZvcGFxdWUtPnJlcS0+aGVhZGVycywgd3NpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRVNUQUJMSVNIRUQ6IHsKICAgICAgLy8gc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKCiAgICAgIG9wYXF1ZS0+c3RhdHVzID0gT1BFTjsKCiAgICAgIGlmKG1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdC5jdHgpIHsKCiAgICAgICAgaWYoIW9wYXF1ZS0+cmVxKQogICAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgICAgYXNzZXJ0KG9wYXF1ZS0+cmVxKTsKCiAgICAgICAgaWYoIUpTX0lzT2JqZWN0KHNlc3MtPnJlcV9vYmopKQogICAgICAgICAgc2Vzcy0+cmVxX29iaiA9IG1pbm5ldF9yZXF1ZXN0X3dyYXAoY3R4LCBvcGFxdWUtPnJlcSk7CgogICAgICAgIHNlc3MtPndzX29iaiA9IG1pbm5ldF93c193cmFwKGN0eCwgd3NpKTsKICAgICAgICBvcGFxdWUtPndzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKCiAgICAgICAgbHdzbF91c2VyKCJ3cyAgICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHdzaSMlIiBQUklkNjQgIiByZXE9JXAgdXJsPSVzXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBvcGFxdWUtPnNlcmlhbCwgb3BhcXVlLT5yZXEsIG9wYXF1ZS0+cmVxLT51cmwpOwogICAgICAgIG1pbm5ldF9lbWl0X3RoaXMoJm1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdCwgc2Vzcy0+d3Nfb2JqLCAyLCAmc2Vzcy0+d3Nfb2JqKTsKICAgICAgfQoKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfUEVFUl9JTklUSUFURURfQ0xPU0U6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTE9TRUQ6IHsKICAgICAgaWYob3BhcXVlLT5zdGF0dXMgPCBDTE9TSU5HKSB7CiAgICAgICAgSlNWYWx1ZSB3aHkgPSBKU19VTkRFRklORUQ7CiAgICAgICAgaW50IGNvZGUgPSAtMTsKCiAgICAgICAgaWYoaW4pIHsKICAgICAgICAgIHVpbnQ4X3QqIGNvZGVwID0gaW47CiAgICAgICAgICBjb2RlID0gKGNvZGVwWzBdIDw8IDgpICsgY29kZXBbMV07CiAgICAgICAgICBpZihsZW4gLSAyID4gMCkKICAgICAgICAgICAgd2h5ID0gSlNfTmV3U3RyaW5nTGVuKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgKGNoYXIqKWluICsgMiwgbGVuIC0gMik7CiAgICAgICAgfQoKICAgICAgICBvcGFxdWUtPnN0YXR1cyA9IENMT1NJTkc7CgogICAgICAgIGx3c2xfdXNlcigid3MgICAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBmZD0lZCwgc3RhdHVzPSVkXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBvcGFxdWUtPnN0YXR1cyk7CgogICAgICAgIGlmKGN0eCkgewogICAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzNdID0ge3Nlc3MtPndzX29iaiwgY29kZSAhPSAtMSA/IEpTX05ld0ludDMyKGN0eCwgY29kZSkgOiBKU19VTkRFRklORUQsIHdoeX07CiAgICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYi5jbG9zZSwgY29kZSAhPSAtMSA/IDMgOiAxLCBjYl9hcmd2KTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICAgIH0KICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jb250ZXh0LmpzLCB3aHkpOwogICAgICAgIC8qSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBzZXNzLT53c19vYmogPSBKU19OVUxMOyovCiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfU0VSVkVSX1dSSVRFQUJMRTogewogICAgICBmcHJpbnRmKHN0ZGVyciwiV1JJVEFCTEUgJXMgZmQ9JWRcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbiksIGx3c19nZXRfc29ja2V0X2ZkKHdzaSkpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFOiB7CiAgICAgIGlmKGN0eCkgewogICAgICAgIE1pbm5ldFdlYnNvY2tldCogd3MgPSBtaW5uZXRfd3NfZGF0YTIoY3R4LCBzZXNzLT53c19vYmopOwogICAgICAgIEpTVmFsdWUgbXNnID0gd3MtPmJpbmFyeSA/IEpTX05ld0FycmF5QnVmZmVyQ29weShjdHgsIGluLCBsZW4pIDogSlNfTmV3U3RyaW5nTGVuKGN0eCwgaW4sIGxlbik7CiAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzJdID0ge0pTX0R1cFZhbHVlKGN0eCwgc2Vzcy0+d3Nfb2JqKSwgbXNnfTsKICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYi5tZXNzYWdlLCAyLCBjYl9hcmd2KTsKICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCBjYl9hcmd2WzBdKTsKICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCBjYl9hcmd2WzFdKTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX1JFQ0VJVkVfUE9ORzogewogICAgICBpZihtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4KSB7CiAgICAgICAgLy8gd3Nfb2JqID0gbWlubmV0X3dzX3dyYXAobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCwgd3NpKTsKICAgICAgICBKU1ZhbHVlIG1zZyA9IEpTX05ld0FycmF5QnVmZmVyQ29weShtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4LCBpbiwgbGVuKTsKICAgICAgICBKU1ZhbHVlIGNiX2FyZ3ZbMl0gPSB7SlNfRHVwVmFsdWUobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCwgc2Vzcy0+d3Nfb2JqKSwgbXNnfTsKICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYi5wb25nLCAyLCBjYl9hcmd2KTsKICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCwgY2JfYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIGNiX2FyZ3ZbMV0pOwogICAgICB9CiAgICAgIHJldHVybiAwOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRklMVEVSX05FVFdPUktfQ09OTkVDVElPTjoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0ZJTFRFUl9QUk9UT0NPTF9DT05ORUNUSU9OOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfU0VSVkVSX0RST1BfUFJPVE9DT0w6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgZGVmYXVsdDogewogICAgICAvLyBwcmludGYoIndzX2NhbGxiYWNrICVzICVwICVwICV6dVxuIiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSwgdXNlciwgaW4sIGxlbik7CiAgICAgIG1pbm5ldF9sd3NfdW5oYW5kbGVkKF9fZnVuY19fLCByZWFzb24pOwogICAgICBicmVhazsKICAgIH0KICB9CgogIC8vIGx3c2xfdXNlcigid3MgICAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBmZD0lZCB1cmw9JyVzJyBpbj0nJS4qcydcbiIsIDIyICsgKHJlYXNvbiAqIDIpLCBsd3NfY2FsbGJhY2tfbmFtZShyZWFzb24pICsgMTMsIGx3c19nZXRfc29ja2V0X2ZkKHdzaSksIGx3c19nZXRfdXJpKHdzaSwgbWlubmV0X3NlcnZlci5jb250ZXh0LmpzLAogIC8vIFdTSV9UT0tFTl9HRVRfVVJJKSwgKGludClsZW4sIChjaGFyKilpbik7CgogIGlmKG9wYXF1ZSAmJiBvcGFxdWUtPnN0YXR1cyA+PSBDTE9TSU5HKQogICAgcmV0dXJuIC0xOwoKICByZXR1cm4gMDsgLy8gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwp9CgAAAAAAAAAArhQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsg0AAAAAAACyDQAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "+13"
					},
					"AwAAAOMNAAAAAAAA5A0AAAAAAAAAAAAA5A0AAAAAAADlDQAAAAAAAAAAAADlDQAAAAAAAOYNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4w0AAAAAAADjDQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"lower_case",
					null,
					"AQAAALQNAAAAAAAAvA0AAAAAAAAIAAAAV1JJVEFCTEU",
					"AQAAAAAAAAABAAAAtA0AAAAAAAC8DQAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "\\x1b"
					},
					"BAAAALQNAAAAAAAAtQ0AAAAAAAAAAAAAtQ0AAAAAAAC2DQAAAAAAAAAAAAC2DQAAAAAAALcNAAAAAAAAAAAAALcNAAAAAAAAuA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtA0AAAAAAAC0DQAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "[1;"
					},
					"AwAAALgNAAAAAAAAuQ0AAAAAAAAAAAAAuQ0AAAAAAAC6DQAAAAAAAAAAAAC6DQAAAAAAALsNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuA0AAAAAAAC4DQAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "33m"
					},
					"AwAAALsNAAAAAAAAvA0AAAAAAAAAAAAAvA0AAAAAAAC9DQAAAAAAAAAAAAC9DQAAAAAAAL4NAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuw0AAAAAAAC7DQAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMYNAAAAAAAAxw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxg0AAAAAAADGDQAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"left_delete",
					null,
					"AQAAAMYNAAAAAAAAxg0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAxw0AAAAAAADHDQAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "\\x1b"
					},
					"BAAAAMYNAAAAAAAAxw0AAAAAAAAAAAAAxw0AAAAAAADIDQAAAAAAAAAAAADIDQAAAAAAAMkNAAAAAAAAAAAAAMkNAAAAAAAAyg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxg0AAAAAAADGDQAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAMoNAAAAAAAAzA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyg0AAAAAAADKDQAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "0m"
					},
					"AgAAAMsNAAAAAAAAzA0AAAAAAAAAAAAAzA0AAAAAAADNDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyw0AAAAAAADLDQAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"right_delete",
					null,
					"AQAAAM0NAAAAAAAAzQ0AAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAzQ0AAAAAAADNDQAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADCFAAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgppbnQgaHR0cF9zZXJ2ZXJfY2FsbGJhY2soc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMsIHZvaWQqLCB2b2lkKiwgc2l6ZV90KTsKCmludAp3c19jYWxsYmFjayhzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIE1pbm5ldFNlc3Npb24qIHNlc3MgPSB1c2VyOwogIEpTQ29udGV4dCogY3R4ID0gbWlubmV0X3NlcnZlci5jb250ZXh0LmpzOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIGlmKGx3c19pc19wb2xsX2NhbGxiYWNrKHJlYXNvbikpCiAgICByZXR1cm4gZmRfY2FsbGJhY2sod3NpLCByZWFzb24sICZtaW5uZXRfc2VydmVyLmNiLmZkLCBpbik7CiAgaWYobHdzX2lzX2h0dHBfY2FsbGJhY2socmVhc29uKSkKICAgIHJldHVybiBodHRwX3NlcnZlcl9jYWxsYmFjayh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQ6IHsKICAgICAgaWYoIW9wYXF1ZSkKICAgICAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX1NFUlZFUl9WRVJJRllfQ0VSVFM6CiAgICBjYXNlIExXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfQ0xJRU5UX1ZFUklGWV9DRVJUUzoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9ORVdfQ0xJRU5UX0lOU1RBTlRJQVRFRDogewogICAgICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9DUkVBVEU6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NJX0RFU1RST1k6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9DT05GSVJNX1VQR1JBREU6IHsKICAgICAgaWYoIWx3c19pc19zc2wod3NpKSAmJiAhc3RyY21wKGluLCAiaDJjIikpCiAgICAgICAgcmV0dXJuIC0xOwoKICAgICAgLypyZXR1cm4gaHR0cF9zZXJ2ZXJfY2FsbGJhY2sod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOyovCiAgICAgIGlmKCFvcGFxdWUpCiAgICAgICAgb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CiAgICAgIGFzc2VydChvcGFxdWUpOwoKICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgIGludCBudW1faGRyID0gaHR0cF9zZXJ2ZXJfaGVhZGVycyhjdHgsICZvcGFxdWUtPnJlcS0+aGVhZGVycywgd3NpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRVNUQUJMSVNIRUQ6IHsKICAgICAgLy8gc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKCiAgICAgIG9wYXF1ZS0+c3RhdHVzID0gT1BFTjsKCiAgICAgIGlmKG1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdC5jdHgpIHsKCiAgICAgICAgaWYoIW9wYXF1ZS0+cmVxKQogICAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgICAgYXNzZXJ0KG9wYXF1ZS0+cmVxKTsKCiAgICAgICAgaWYoIUpTX0lzT2JqZWN0KHNlc3MtPnJlcV9vYmopKQogICAgICAgICAgc2Vzcy0+cmVxX29iaiA9IG1pbm5ldF9yZXF1ZXN0X3dyYXAoY3R4LCBvcGFxdWUtPnJlcSk7CgogICAgICAgIHNlc3MtPndzX29iaiA9IG1pbm5ldF93c193cmFwKGN0eCwgd3NpKTsKICAgICAgICBvcGFxdWUtPndzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKCiAgICAgICAgbHdzbF91c2VyKCJ3cyAgICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHdzaSMlIiBQUklkNjQgIiByZXE9JXAgdXJsPSVzXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBvcGFxdWUtPnNlcmlhbCwgb3BhcXVlLT5yZXEsIG9wYXF1ZS0+cmVxLT51cmwpOwogICAgICAgIG1pbm5ldF9lbWl0X3RoaXMoJm1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdCwgc2Vzcy0+d3Nfb2JqLCAyLCAmc2Vzcy0+d3Nfb2JqKTsKICAgICAgfQoKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfUEVFUl9JTklUSUFURURfQ0xPU0U6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTE9TRUQ6IHsKICAgICAgaWYob3BhcXVlLT5zdGF0dXMgPCBDTE9TSU5HKSB7CiAgICAgICAgSlNWYWx1ZSB3aHkgPSBKU19VTkRFRklORUQ7CiAgICAgICAgaW50IGNvZGUgPSAtMTsKCiAgICAgICAgaWYoaW4pIHsKICAgICAgICAgIHVpbnQ4X3QqIGNvZGVwID0gaW47CiAgICAgICAgICBjb2RlID0gKGNvZGVwWzBdIDw8IDgpICsgY29kZXBbMV07CiAgICAgICAgICBpZihsZW4gLSAyID4gMCkKICAgICAgICAgICAgd2h5ID0gSlNfTmV3U3RyaW5nTGVuKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgKGNoYXIqKWluICsgMiwgbGVuIC0gMik7CiAgICAgICAgfQoKICAgICAgICBvcGFxdWUtPnN0YXR1cyA9IENMT1NJTkc7CgogICAgICAgIGx3c2xfdXNlcigid3MgICAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBmZD0lZCwgc3RhdHVzPSVkXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBvcGFxdWUtPnN0YXR1cyk7CgogICAgICAgIGlmKGN0eCkgewogICAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzNdID0ge3Nlc3MtPndzX29iaiwgY29kZSAhPSAtMSA/IEpTX05ld0ludDMyKGN0eCwgY29kZSkgOiBKU19VTkRFRklORUQsIHdoeX07CiAgICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYi5jbG9zZSwgY29kZSAhPSAtMSA/IDMgOiAxLCBjYl9hcmd2KTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICAgIH0KICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jb250ZXh0LmpzLCB3aHkpOwogICAgICAgIC8qSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBzZXNzLT53c19vYmogPSBKU19OVUxMOyovCiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfU0VSVkVSX1dSSVRFQUJMRTogewogICAgICBmcHJpbnRmKHN0ZGVyciwgIlx4MWJbMTszM213cml0YWJsZVx4MWJbMG0gJXMgZmQ9JWRcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikrMTMsIGx3c19nZXRfc29ja2V0X2ZkKHdzaSkpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFOiB7CiAgICAgIGlmKGN0eCkgewogICAgICAgIE1pbm5ldFdlYnNvY2tldCogd3MgPSBtaW5uZXRfd3NfZGF0YTIoY3R4LCBzZXNzLT53c19vYmopOwogICAgICAgIEpTVmFsdWUgbXNnID0gd3MtPmJpbmFyeSA/IEpTX05ld0FycmF5QnVmZmVyQ29weShjdHgsIGluLCBsZW4pIDogSlNfTmV3U3RyaW5nTGVuKGN0eCwgaW4sIGxlbik7CiAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzJdID0ge0pTX0R1cFZhbHVlKGN0eCwgc2Vzcy0+d3Nfb2JqKSwgbXNnfTsKICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYi5tZXNzYWdlLCAyLCBjYl9hcmd2KTsKICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCBjYl9hcmd2WzBdKTsKICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCBjYl9hcmd2WzFdKTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX1JFQ0VJVkVfUE9ORzogewogICAgICBpZihtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4KSB7CiAgICAgICAgLy8gd3Nfb2JqID0gbWlubmV0X3dzX3dyYXAobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCwgd3NpKTsKICAgICAgICBKU1ZhbHVlIG1zZyA9IEpTX05ld0FycmF5QnVmZmVyQ29weShtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4LCBpbiwgbGVuKTsKICAgICAgICBKU1ZhbHVlIGNiX2FyZ3ZbMl0gPSB7SlNfRHVwVmFsdWUobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCwgc2Vzcy0+d3Nfb2JqKSwgbXNnfTsKICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYi5wb25nLCAyLCBjYl9hcmd2KTsKICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCwgY2JfYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIGNiX2FyZ3ZbMV0pOwogICAgICB9CiAgICAgIHJldHVybiAwOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRklMVEVSX05FVFdPUktfQ09OTkVDVElPTjoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0ZJTFRFUl9QUk9UT0NPTF9DT05ORUNUSU9OOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfU0VSVkVSX0RST1BfUFJPVE9DT0w6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgZGVmYXVsdDogewogICAgICAvLyBwcmludGYoIndzX2NhbGxiYWNrICVzICVwICVwICV6dVxuIiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSwgdXNlciwgaW4sIGxlbik7CiAgICAgIG1pbm5ldF9sd3NfdW5oYW5kbGVkKF9fZnVuY19fLCByZWFzb24pOwogICAgICBicmVhazsKICAgIH0KICB9CgogIC8vIGx3c2xfdXNlcigid3MgICAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBmZD0lZCB1cmw9JyVzJyBpbj0nJS4qcydcbiIsIDIyICsgKHJlYXNvbiAqIDIpLCBsd3NfY2FsbGJhY2tfbmFtZShyZWFzb24pICsgMTMsIGx3c19nZXRfc29ja2V0X2ZkKHdzaSksIGx3c19nZXRfdXJpKHdzaSwgbWlubmV0X3NlcnZlci5jb250ZXh0LmpzLAogIC8vIFdTSV9UT0tFTl9HRVRfVVJJKSwgKGludClsZW4sIChjaGFyKilpbik7CgogIGlmKG9wYXF1ZSAmJiBvcGFxdWUtPnN0YXR1cyA+PSBDTE9TSU5HKQogICAgcmV0dXJuIC0xOwoKICByZXR1cm4gMDsgLy8gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwp9CgAAAAAAAAAAxBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQ0AAAAAAADNDQAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CAAAABMOAAAAAAAAFA4AAAAAAAAAAAAAFA4AAAAAAAAaDgAAAAAAAAAAAAAaDgAAAAAAABsOAAAAAAAAAAAAABsOAAAAAAAAIQ4AAAAAAAAAAAAAFA4AAAAAAAAUDgAAAAAAAAYAAAAgICAgICAbDgAAAAAAABwOAAAAAAAAAAAAABwOAAAAAAAAIg4AAAAAAAAAAAAAFQ4AAAAAAAAVDgAAAAAAAAYAAAAgICAgICA",
					"AQAAAAAAAAABAAAAEw4AAAAAAAATDgAAAAAAAP///////+9/"
				],
				[
					190,
					1,
					"paste",
					null,
					"AQAAABwOAAAAAAAAOQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHA4AAAAAAAAcDgAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADkOAAAAAAAAOg4AAAAAAAAAAAAAOg4AAAAAAABADgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQ4AAAAAAAA5DgAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"cut",
					null,
					"AQAAABwOAAAAAAAAHA4AAAAAAAAdAAAATFdTX0NBTExCQUNLX1NFUlZFUl9XUklURUFCTEU",
					"AQAAAAAAAAABAAAAHA4AAAAAAAA5DgAAAAAAAP///////+9/"
				],
				[
					200,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABUOAAAAAAAAFg4AAAAAAAAAAAAAHg4AAAAAAAAeDgAAAAAAAAYAAAAgICAgICA",
					"AQAAAAAAAAABAAAAFQ4AAAAAAAAVDgAAAAAAAAAAAAAAAE5A"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": "MinnetBuffer"
					},
					"DAAAABYOAAAAAAAAFw4AAAAAAAAAAAAAFw4AAAAAAAAYDgAAAAAAAAAAAAAYDgAAAAAAABkOAAAAAAAAAAAAABkOAAAAAAAAGg4AAAAAAAAAAAAAGg4AAAAAAAAbDgAAAAAAAAAAAAAbDgAAAAAAABwOAAAAAAAAAAAAABwOAAAAAAAAHQ4AAAAAAAAAAAAAHQ4AAAAAAAAeDgAAAAAAAAAAAAAeDgAAAAAAAB8OAAAAAAAAAAAAAB8OAAAAAAAAIA4AAAAAAAAAAAAAIA4AAAAAAAAhDgAAAAAAAAAAAAAhDgAAAAAAACIOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFg4AAAAAAAAWDgAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": " send_"
					},
					"BgAAACIOAAAAAAAAIw4AAAAAAAAAAAAAIw4AAAAAAAAkDgAAAAAAAAAAAAAkDgAAAAAAACUOAAAAAAAAAAAAACUOAAAAAAAAJg4AAAAAAAAAAAAAJg4AAAAAAAAnDgAAAAAAAAAAAAAnDgAAAAAAACgOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIg4AAAAAAAAiDgAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"left_delete",
					null,
					"AQAAACcOAAAAAAAAJw4AAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAKA4AAAAAAAAoDgAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAACcOAAAAAAAAKA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJw4AAAAAAAAnDgAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACgOAAAAAAAAKQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKA4AAAAAAAAoDgAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAACIOAAAAAAAAIw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIg4AAAAAAAAiDgAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAACoOAAAAAAAAKw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKg4AAAAAAAAqDgAAAAAAAP///////+9/"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": " &sess->dse"
					},
					"CwAAACsOAAAAAAAALA4AAAAAAAAAAAAALA4AAAAAAAAtDgAAAAAAAAAAAAAtDgAAAAAAAC4OAAAAAAAAAAAAAC4OAAAAAAAALw4AAAAAAAAAAAAALw4AAAAAAAAwDgAAAAAAAAAAAAAwDgAAAAAAADEOAAAAAAAAAAAAADEOAAAAAAAAMg4AAAAAAAAAAAAAMg4AAAAAAAAzDgAAAAAAAAAAAAAzDgAAAAAAADQOAAAAAAAAAAAAADQOAAAAAAAANQ4AAAAAAAAAAAAANQ4AAAAAAAA2DgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKw4AAAAAAAArDgAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					3,
					"left_delete",
					null,
					"AwAAADUOAAAAAAAANQ4AAAAAAAABAAAAZTQOAAAAAAAANA4AAAAAAAABAAAAczMOAAAAAAAAMw4AAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAANg4AAAAAAAA2DgAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "send_buf;"
					},
					"CQAAADMOAAAAAAAANA4AAAAAAAAAAAAANA4AAAAAAAA1DgAAAAAAAAAAAAA1DgAAAAAAADYOAAAAAAAAAAAAADYOAAAAAAAANw4AAAAAAAAAAAAANw4AAAAAAAA4DgAAAAAAAAAAAAA4DgAAAAAAADkOAAAAAAAAAAAAADkOAAAAAAAAOg4AAAAAAAAAAAAAOg4AAAAAAAA7DgAAAAAAAAAAAAA7DgAAAAAAADwOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMw4AAAAAAAAzDgAAAAAAAAAAAAAAAPC/"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": "bzf"
					},
					"BAAAACQOAAAAAAAAJQ4AAAAAAAAAAAAAJQ4AAAAAAAAlDgAAAAAAAAUAAABzZW5kYiUOAAAAAAAAJg4AAAAAAAAAAAAAJg4AAAAAAAAnDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJA4AAAAAAAApDgAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					2,
					"left_delete",
					null,
					"AgAAACYOAAAAAAAAJg4AAAAAAAABAAAAZiUOAAAAAAAAJQ4AAAAAAAABAAAAeg",
					"AQAAAAAAAAABAAAAJw4AAAAAAAAnDgAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "uf"
					},
					"AgAAACUOAAAAAAAAJg4AAAAAAAAAAAAAJg4AAAAAAAAnDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQ4AAAAAAAAlDgAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAADoOAAAAAAAAOw4AAAAAAAAAAAAAOw4AAAAAAAA8DgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOg4AAAAAAAA6DgAAAAAAAP///////+9/"
				],
				[
					254,
					1,
					"paste",
					null,
					"AQAAADsOAAAAAAAAsg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOw4AAAAAAAA7DgAAAAAAAAAAAAAAAPC/"
				],
				[
					261,
					1,
					"left_delete",
					null,
					"AQAAAG8OAAAAAAAAbw4AAAAAAAACAAAAZmQ",
					"AQAAAAAAAAABAAAAbw4AAAAAAABxDgAAAAAAAAAAAAAAAPC/"
				],
				[
					262,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAG8OAAAAAAAAcA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbw4AAAAAAABvDgAAAAAAAAAAAAAAAPC/"
				],
				[
					263,
					1,
					"left_delete",
					null,
					"AQAAAG8OAAAAAAAAbw4AAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAAcA4AAAAAAABwDgAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": "buf"
					},
					"AwAAAG8OAAAAAAAAcA4AAAAAAAAAAAAAcA4AAAAAAABxDgAAAAAAAAAAAABxDgAAAAAAAHIOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbw4AAAAAAABvDgAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"right_delete",
					null,
					"AQAAAHQOAAAAAAAAdA4AAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAdA4AAAAAAAB0DgAAAAAAAAAAAAAAAPC/"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAHQOAAAAAAAAdQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdA4AAAAAAAB0DgAAAAAAAAAAAAAAAPC/"
				],
				[
					271,
					1,
					"left_delete",
					null,
					"AQAAAJkOAAAAAAAAmQ4AAAAAAAAWAAAAIGx3c19nZXRfc29ja2V0X2ZkKHdzaQ",
					"AQAAAAAAAAABAAAArw4AAAAAAACZDgAAAAAAAAAAAAAAAPC/"
				],
				[
					272,
					2,
					"right_delete",
					null,
					"AgAAAJkOAAAAAAAAmQ4AAAAAAAABAAAAKZkOAAAAAAAAmQ4AAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAmQ4AAAAAAACZDgAAAAAAAAAAAAAAAPC/"
				],
				[
					273,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJkOAAAAAAAAmg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQ4AAAAAAACZDgAAAAAAAAAAAAAAAPC/"
				],
				[
					278,
					1,
					"paste",
					null,
					"AQAAAJoOAAAAAAAAqA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmg4AAAAAAACaDgAAAAAAAAAAAAAAAPC/"
				],
				[
					279,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKgOAAAAAAAAqg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqA4AAAAAAACoDgAAAAAAAAAAAAAAAPC/"
				],
				[
					280,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAKkOAAAAAAAAqg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQ4AAAAAAACpDgAAAAAAAAAAAAAAAPC/"
				],
				[
					281,
					1,
					"left_delete",
					null,
					"AQAAAKkOAAAAAAAAqQ4AAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAqg4AAAAAAACqDgAAAAAAAAAAAAAAAPC/"
				],
				[
					282,
					1,
					"insert",
					{
						"characters": "buf,"
					},
					"BAAAAKkOAAAAAAAAqg4AAAAAAAAAAAAAqg4AAAAAAACrDgAAAAAAAAAAAACrDgAAAAAAAKwOAAAAAAAAAAAAAKwOAAAAAAAArQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQ4AAAAAAACpDgAAAAAAAAAAAAAAAPC/"
				],
				[
					283,
					1,
					"insert",
					{
						"characters": " ctx"
					},
					"BAAAAK0OAAAAAAAArg4AAAAAAAAAAAAArg4AAAAAAACvDgAAAAAAAAAAAACvDgAAAAAAALAOAAAAAAAAAAAAALAOAAAAAAAAsQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQ4AAAAAAACtDgAAAAAAAAAAAAAAAPC/"
				],
				[
					285,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAALIOAAAAAAAAsw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsg4AAAAAAACyDgAAAAAAAAAAAAAAAPC/"
				],
				[
					293,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABvFQAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgppbnQgaHR0cF9zZXJ2ZXJfY2FsbGJhY2soc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMsIHZvaWQqLCB2b2lkKiwgc2l6ZV90KTsKCmludAp3c19jYWxsYmFjayhzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIE1pbm5ldFNlc3Npb24qIHNlc3MgPSB1c2VyOwogIEpTQ29udGV4dCogY3R4ID0gbWlubmV0X3NlcnZlci5jb250ZXh0LmpzOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIGlmKGx3c19pc19wb2xsX2NhbGxiYWNrKHJlYXNvbikpCiAgICByZXR1cm4gZmRfY2FsbGJhY2sod3NpLCByZWFzb24sICZtaW5uZXRfc2VydmVyLmNiLmZkLCBpbik7CiAgaWYobHdzX2lzX2h0dHBfY2FsbGJhY2socmVhc29uKSkKICAgIHJldHVybiBodHRwX3NlcnZlcl9jYWxsYmFjayh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQ6IHsKICAgICAgaWYoIW9wYXF1ZSkKICAgICAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX1NFUlZFUl9WRVJJRllfQ0VSVFM6CiAgICBjYXNlIExXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfQ0xJRU5UX1ZFUklGWV9DRVJUUzoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9ORVdfQ0xJRU5UX0lOU1RBTlRJQVRFRDogewogICAgICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9DUkVBVEU6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NJX0RFU1RST1k6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9DT05GSVJNX1VQR1JBREU6IHsKICAgICAgaWYoIWx3c19pc19zc2wod3NpKSAmJiAhc3RyY21wKGluLCAiaDJjIikpCiAgICAgICAgcmV0dXJuIC0xOwoKICAgICAgLypyZXR1cm4gaHR0cF9zZXJ2ZXJfY2FsbGJhY2sod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOyovCiAgICAgIGlmKCFvcGFxdWUpCiAgICAgICAgb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CiAgICAgIGFzc2VydChvcGFxdWUpOwoKICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgIGludCBudW1faGRyID0gaHR0cF9zZXJ2ZXJfaGVhZGVycyhjdHgsICZvcGFxdWUtPnJlcS0+aGVhZGVycywgd3NpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRVNUQUJMSVNIRUQ6IHsKICAgICAgLy8gc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKCiAgICAgIG9wYXF1ZS0+c3RhdHVzID0gT1BFTjsKCiAgICAgIGlmKG1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdC5jdHgpIHsKCiAgICAgICAgaWYoIW9wYXF1ZS0+cmVxKQogICAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgICAgYXNzZXJ0KG9wYXF1ZS0+cmVxKTsKCiAgICAgICAgaWYoIUpTX0lzT2JqZWN0KHNlc3MtPnJlcV9vYmopKQogICAgICAgICAgc2Vzcy0+cmVxX29iaiA9IG1pbm5ldF9yZXF1ZXN0X3dyYXAoY3R4LCBvcGFxdWUtPnJlcSk7CgogICAgICAgIHNlc3MtPndzX29iaiA9IG1pbm5ldF93c193cmFwKGN0eCwgd3NpKTsKICAgICAgICBvcGFxdWUtPndzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKCiAgICAgICAgbHdzbF91c2VyKCJ3cyAgICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHdzaSMlIiBQUklkNjQgIiByZXE9JXAgdXJsPSVzXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBvcGFxdWUtPnNlcmlhbCwgb3BhcXVlLT5yZXEsIG9wYXF1ZS0+cmVxLT51cmwpOwogICAgICAgIG1pbm5ldF9lbWl0X3RoaXMoJm1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdCwgc2Vzcy0+d3Nfb2JqLCAyLCAmc2Vzcy0+d3Nfb2JqKTsKICAgICAgfQoKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfUEVFUl9JTklUSUFURURfQ0xPU0U6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTE9TRUQ6IHsKICAgICAgaWYob3BhcXVlLT5zdGF0dXMgPCBDTE9TSU5HKSB7CiAgICAgICAgSlNWYWx1ZSB3aHkgPSBKU19VTkRFRklORUQ7CiAgICAgICAgaW50IGNvZGUgPSAtMTsKCiAgICAgICAgaWYoaW4pIHsKICAgICAgICAgIHVpbnQ4X3QqIGNvZGVwID0gaW47CiAgICAgICAgICBjb2RlID0gKGNvZGVwWzBdIDw8IDgpICsgY29kZXBbMV07CiAgICAgICAgICBpZihsZW4gLSAyID4gMCkKICAgICAgICAgICAgd2h5ID0gSlNfTmV3U3RyaW5nTGVuKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgKGNoYXIqKWluICsgMiwgbGVuIC0gMik7CiAgICAgICAgfQoKICAgICAgICBvcGFxdWUtPnN0YXR1cyA9IENMT1NJTkc7CgogICAgICAgIGx3c2xfdXNlcigid3MgICAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBmZD0lZCwgc3RhdHVzPSVkXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBvcGFxdWUtPnN0YXR1cyk7CgogICAgICAgIGlmKGN0eCkgewogICAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzNdID0ge3Nlc3MtPndzX29iaiwgY29kZSAhPSAtMSA/IEpTX05ld0ludDMyKGN0eCwgY29kZSkgOiBKU19VTkRFRklORUQsIHdoeX07CiAgICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYi5jbG9zZSwgY29kZSAhPSAtMSA/IDMgOiAxLCBjYl9hcmd2KTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICAgIH0KICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jb250ZXh0LmpzLCB3aHkpOwogICAgICAgIC8qSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBzZXNzLT53c19vYmogPSBKU19OVUxMOyovCiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfU0VSVkVSX1dSSVRFQUJMRTogewogICAgICBmcHJpbnRmKHN0ZGVyciwgIlx4MWJbMTszM213cml0YWJsZVx4MWJbMG0gJXMgZmQ9JWRcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQod3NpKSk7CgoKTWlubmV0QnVmZmVyKiBidWYgPSAmc2Vzcy0+c2VuZF9idWY7CiAgICAgIGZwcmludGYoc3RkZXJyLCAiXHgxYlsxOzMzbXdyaXRhYmxlXHgxYlswbSAlcyBidWY9JXNcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgYnVmZmVyX2VzY2FwZWQoYnVmLCBjdHgpKTsKCgogICAgICAKCiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1JFQ0VJVkU6IHsKICAgICAgaWYoY3R4KSB7CiAgICAgICAgTWlubmV0V2Vic29ja2V0KiB3cyA9IG1pbm5ldF93c19kYXRhMihjdHgsIHNlc3MtPndzX29iaik7CiAgICAgICAgSlNWYWx1ZSBtc2cgPSB3cy0+YmluYXJ5ID8gSlNfTmV3QXJyYXlCdWZmZXJDb3B5KGN0eCwgaW4sIGxlbikgOiBKU19OZXdTdHJpbmdMZW4oY3R4LCBpbiwgbGVuKTsKICAgICAgICBKU1ZhbHVlIGNiX2FyZ3ZbMl0gPSB7SlNfRHVwVmFsdWUoY3R4LCBzZXNzLT53c19vYmopLCBtc2d9OwogICAgICAgIG1pbm5ldF9lbWl0KCZtaW5uZXRfc2VydmVyLmNiLm1lc3NhZ2UsIDIsIGNiX2FyZ3YpOwogICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMF0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICB9CiAgICAgIHJldHVybiAwOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRV9QT05HOiB7CiAgICAgIGlmKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgpIHsKICAgICAgICAvLyB3c19vYmogPSBtaW5uZXRfd3Nfd3JhcChtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4LCB3c2kpOwogICAgICAgIEpTVmFsdWUgbXNnID0gSlNfTmV3QXJyYXlCdWZmZXJDb3B5KG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIGluLCBsZW4pOwogICAgICAgIEpTVmFsdWUgY2JfYXJndlsyXSA9IHtKU19EdXBWYWx1ZShtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4LCBzZXNzLT53c19vYmopLCBtc2d9OwogICAgICAgIG1pbm5ldF9lbWl0KCZtaW5uZXRfc2VydmVyLmNiLnBvbmcsIDIsIGNiX2FyZ3YpOwogICAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4LCBjYl9hcmd2WzBdKTsKICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCwgY2JfYXJndlsxXSk7CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19GSUxURVJfTkVUV09SS19DT05ORUNUSU9OOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRklMVEVSX1BST1RPQ09MX0NPTk5FQ1RJT046CiAgICBjYXNlIExXU19DQUxMQkFDS19XU19TRVJWRVJfRFJPUF9QUk9UT0NPTDogewogICAgICByZXR1cm4gMDsKICAgIH0KCiAgICBkZWZhdWx0OiB7CiAgICAgIC8vIHByaW50Zigid3NfY2FsbGJhY2sgJXMgJXAgJXAgJXp1XG4iLCBsd3NfY2FsbGJhY2tfbmFtZShyZWFzb24pLCB1c2VyLCBpbiwgbGVuKTsKICAgICAgbWlubmV0X2x3c191bmhhbmRsZWQoX19mdW5jX18sIHJlYXNvbik7CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgLy8gbHdzbF91c2VyKCJ3cyAgICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIGZkPSVkIHVybD0nJXMnIGluPSclLipzJ1xuIiwgMjIgKyAocmVhc29uICogMiksIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQod3NpKSwgbHdzX2dldF91cmkod3NpLCBtaW5uZXRfc2VydmVyLmNvbnRleHQuanMsCiAgLy8gV1NJX1RPS0VOX0dFVF9VUkkpLCAoaW50KWxlbiwgKGNoYXIqKWluKTsKCiAgaWYob3BhcXVlICYmIG9wYXF1ZS0+c3RhdHVzID49IENMT1NJTkcpCiAgICByZXR1cm4gLTE7CgogIHJldHVybiAwOyAvLyBsd3NfY2FsbGJhY2tfaHR0cF9kdW1teSh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7Cn0KAAAAAAAAAABrFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQ4AAAAAAAAVDgAAAAAAAAAAAAAAwJJA"
				],
				[
					315,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrFQAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgppbnQgaHR0cF9zZXJ2ZXJfY2FsbGJhY2soc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMsIHZvaWQqLCB2b2lkKiwgc2l6ZV90KTsKCmludAp3c19jYWxsYmFjayhzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIE1pbm5ldFNlc3Npb24qIHNlc3MgPSB1c2VyOwogIEpTQ29udGV4dCogY3R4ID0gbWlubmV0X3NlcnZlci5jb250ZXh0LmpzOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIGlmKGx3c19pc19wb2xsX2NhbGxiYWNrKHJlYXNvbikpCiAgICByZXR1cm4gZmRfY2FsbGJhY2sod3NpLCByZWFzb24sICZtaW5uZXRfc2VydmVyLmNiLmZkLCBpbik7CiAgaWYobHdzX2lzX2h0dHBfY2FsbGJhY2socmVhc29uKSkKICAgIHJldHVybiBodHRwX3NlcnZlcl9jYWxsYmFjayh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQ6IHsKICAgICAgaWYoIW9wYXF1ZSkKICAgICAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX1NFUlZFUl9WRVJJRllfQ0VSVFM6CiAgICBjYXNlIExXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfQ0xJRU5UX1ZFUklGWV9DRVJUUzoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9ORVdfQ0xJRU5UX0lOU1RBTlRJQVRFRDogewogICAgICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9DUkVBVEU6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NJX0RFU1RST1k6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9DT05GSVJNX1VQR1JBREU6IHsKICAgICAgaWYoIWx3c19pc19zc2wod3NpKSAmJiAhc3RyY21wKGluLCAiaDJjIikpCiAgICAgICAgcmV0dXJuIC0xOwoKICAgICAgLypyZXR1cm4gaHR0cF9zZXJ2ZXJfY2FsbGJhY2sod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOyovCiAgICAgIGlmKCFvcGFxdWUpCiAgICAgICAgb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CiAgICAgIGFzc2VydChvcGFxdWUpOwoKICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgIGludCBudW1faGRyID0gaHR0cF9zZXJ2ZXJfaGVhZGVycyhjdHgsICZvcGFxdWUtPnJlcS0+aGVhZGVycywgd3NpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRVNUQUJMSVNIRUQ6IHsKICAgICAgLy8gc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKCiAgICAgIG9wYXF1ZS0+c3RhdHVzID0gT1BFTjsKCiAgICAgIGlmKG1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdC5jdHgpIHsKCiAgICAgICAgaWYoIW9wYXF1ZS0+cmVxKQogICAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgICAgYXNzZXJ0KG9wYXF1ZS0+cmVxKTsKCiAgICAgICAgaWYoIUpTX0lzT2JqZWN0KHNlc3MtPnJlcV9vYmopKQogICAgICAgICAgc2Vzcy0+cmVxX29iaiA9IG1pbm5ldF9yZXF1ZXN0X3dyYXAoY3R4LCBvcGFxdWUtPnJlcSk7CgogICAgICAgIHNlc3MtPndzX29iaiA9IG1pbm5ldF93c193cmFwKGN0eCwgd3NpKTsKICAgICAgICBvcGFxdWUtPndzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKCiAgICAgICAgbHdzbF91c2VyKCJ3cyAgICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHdzaSMlIiBQUklkNjQgIiByZXE9JXAgdXJsPSVzXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBvcGFxdWUtPnNlcmlhbCwgb3BhcXVlLT5yZXEsIG9wYXF1ZS0+cmVxLT51cmwpOwogICAgICAgIG1pbm5ldF9lbWl0X3RoaXMoJm1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdCwgc2Vzcy0+d3Nfb2JqLCAyLCAmc2Vzcy0+d3Nfb2JqKTsKICAgICAgfQoKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfUEVFUl9JTklUSUFURURfQ0xPU0U6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTE9TRUQ6IHsKICAgICAgaWYob3BhcXVlLT5zdGF0dXMgPCBDTE9TSU5HKSB7CiAgICAgICAgSlNWYWx1ZSB3aHkgPSBKU19VTkRFRklORUQ7CiAgICAgICAgaW50IGNvZGUgPSAtMTsKCiAgICAgICAgaWYoaW4pIHsKICAgICAgICAgIHVpbnQ4X3QqIGNvZGVwID0gaW47CiAgICAgICAgICBjb2RlID0gKGNvZGVwWzBdIDw8IDgpICsgY29kZXBbMV07CiAgICAgICAgICBpZihsZW4gLSAyID4gMCkKICAgICAgICAgICAgd2h5ID0gSlNfTmV3U3RyaW5nTGVuKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgKGNoYXIqKWluICsgMiwgbGVuIC0gMik7CiAgICAgICAgfQoKICAgICAgICBvcGFxdWUtPnN0YXR1cyA9IENMT1NJTkc7CgogICAgICAgIGx3c2xfdXNlcigid3MgICAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBmZD0lZCwgc3RhdHVzPSVkXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBvcGFxdWUtPnN0YXR1cyk7CgogICAgICAgIGlmKGN0eCkgewogICAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzNdID0ge3Nlc3MtPndzX29iaiwgY29kZSAhPSAtMSA/IEpTX05ld0ludDMyKGN0eCwgY29kZSkgOiBKU19VTkRFRklORUQsIHdoeX07CiAgICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYi5jbG9zZSwgY29kZSAhPSAtMSA/IDMgOiAxLCBjYl9hcmd2KTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICAgIH0KICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jb250ZXh0LmpzLCB3aHkpOwogICAgICAgIC8qSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBzZXNzLT53c19vYmogPSBKU19OVUxMOyovCiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfU0VSVkVSX1dSSVRFQUJMRTogewogICAgICBmcHJpbnRmKHN0ZGVyciwgIlx4MWJbMTszM213cml0YWJsZVx4MWJbMG0gJXMgZmQ9JWRcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQod3NpKSk7CgogICAgICBNaW5uZXRCdWZmZXIqIGJ1ZiA9ICZzZXNzLT5zZW5kX2J1ZjsKICAgICAgZnByaW50ZihzdGRlcnIsICJceDFiWzE7MzNtd3JpdGFibGVceDFiWzBtICVzIGJ1Zj0lc1xuIiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBidWZmZXJfZXNjYXBlZChidWYsIGN0eCkpOwoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRTogewogICAgICBpZihjdHgpIHsKICAgICAgICBNaW5uZXRXZWJzb2NrZXQqIHdzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBKU1ZhbHVlIG1zZyA9IHdzLT5iaW5hcnkgPyBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY3R4LCBpbiwgbGVuKSA6IEpTX05ld1N0cmluZ0xlbihjdHgsIGluLCBsZW4pOwogICAgICAgIEpTVmFsdWUgY2JfYXJndlsyXSA9IHtKU19EdXBWYWx1ZShjdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IubWVzc2FnZSwgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlsxXSk7CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFX1BPTkc6IHsKICAgICAgaWYobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCkgewogICAgICAgIC8vIHdzX29iaiA9IG1pbm5ldF93c193cmFwKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHdzaSk7CiAgICAgICAgSlNWYWx1ZSBtc2cgPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCwgaW4sIGxlbik7CiAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzJdID0ge0pTX0R1cFZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IucG9uZywgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIGNiX2FyZ3ZbMF0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4LCBjYl9hcmd2WzFdKTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0ZJTFRFUl9ORVRXT1JLX0NPTk5FQ1RJT046CiAgICBjYXNlIExXU19DQUxMQkFDS19GSUxURVJfUFJPVE9DT0xfQ09OTkVDVElPTjoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTX1NFUlZFUl9EUk9QX1BST1RPQ09MOiB7CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGRlZmF1bHQ6IHsKICAgICAgLy8gcHJpbnRmKCJ3c19jYWxsYmFjayAlcyAlcCAlcCAlenVcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbiksIHVzZXIsIGluLCBsZW4pOwogICAgICBtaW5uZXRfbHdzX3VuaGFuZGxlZChfX2Z1bmNfXywgcmVhc29uKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICAvLyBsd3NsX3VzZXIoIndzICAgIiBGRygiJWQiKSAiJS0zOHMiIE5DICIgZmQ9JWQgdXJsPSclcycgaW49JyUuKnMnXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBsd3NfZ2V0X3VyaSh3c2ksIG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywKICAvLyBXU0lfVE9LRU5fR0VUX1VSSSksIChpbnQpbGVuLCAoY2hhciopaW4pOwoKICBpZihvcGFxdWUgJiYgb3BhcXVlLT5zdGF0dXMgPj0gQ0xPU0lORykKICAgIHJldHVybiAtMTsKCiAgcmV0dXJuIDA7IC8vIGx3c19jYWxsYmFja19odHRwX2R1bW15KHdzaSwgcmVhc29uLCB1c2VyLCBpbiwgbGVuKTsKfQoAAAAAAAAAAGsVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQ4AAAAAAABADgAAAAAAAAAAAAAAAPC/"
				],
				[
					316,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrFQAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgppbnQgaHR0cF9zZXJ2ZXJfY2FsbGJhY2soc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMsIHZvaWQqLCB2b2lkKiwgc2l6ZV90KTsKCmludAp3c19jYWxsYmFjayhzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIE1pbm5ldFNlc3Npb24qIHNlc3MgPSB1c2VyOwogIEpTQ29udGV4dCogY3R4ID0gbWlubmV0X3NlcnZlci5jb250ZXh0LmpzOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIGlmKGx3c19pc19wb2xsX2NhbGxiYWNrKHJlYXNvbikpCiAgICByZXR1cm4gZmRfY2FsbGJhY2sod3NpLCByZWFzb24sICZtaW5uZXRfc2VydmVyLmNiLmZkLCBpbik7CiAgaWYobHdzX2lzX2h0dHBfY2FsbGJhY2socmVhc29uKSkKICAgIHJldHVybiBodHRwX3NlcnZlcl9jYWxsYmFjayh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQ6IHsKICAgICAgaWYoIW9wYXF1ZSkKICAgICAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX1NFUlZFUl9WRVJJRllfQ0VSVFM6CiAgICBjYXNlIExXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfQ0xJRU5UX1ZFUklGWV9DRVJUUzoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9ORVdfQ0xJRU5UX0lOU1RBTlRJQVRFRDogewogICAgICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9DUkVBVEU6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NJX0RFU1RST1k6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9DT05GSVJNX1VQR1JBREU6IHsKICAgICAgaWYoIWx3c19pc19zc2wod3NpKSAmJiAhc3RyY21wKGluLCAiaDJjIikpCiAgICAgICAgcmV0dXJuIC0xOwoKICAgICAgLypyZXR1cm4gaHR0cF9zZXJ2ZXJfY2FsbGJhY2sod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOyovCiAgICAgIGlmKCFvcGFxdWUpCiAgICAgICAgb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CiAgICAgIGFzc2VydChvcGFxdWUpOwoKICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgIGludCBudW1faGRyID0gaHR0cF9zZXJ2ZXJfaGVhZGVycyhjdHgsICZvcGFxdWUtPnJlcS0+aGVhZGVycywgd3NpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRVNUQUJMSVNIRUQ6IHsKICAgICAgLy8gc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKCiAgICAgIG9wYXF1ZS0+c3RhdHVzID0gT1BFTjsKCiAgICAgIGlmKG1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdC5jdHgpIHsKCiAgICAgICAgaWYoIW9wYXF1ZS0+cmVxKQogICAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgICAgYXNzZXJ0KG9wYXF1ZS0+cmVxKTsKCiAgICAgICAgaWYoIUpTX0lzT2JqZWN0KHNlc3MtPnJlcV9vYmopKQogICAgICAgICAgc2Vzcy0+cmVxX29iaiA9IG1pbm5ldF9yZXF1ZXN0X3dyYXAoY3R4LCBvcGFxdWUtPnJlcSk7CgogICAgICAgIHNlc3MtPndzX29iaiA9IG1pbm5ldF93c193cmFwKGN0eCwgd3NpKTsKICAgICAgICBvcGFxdWUtPndzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKCiAgICAgICAgbHdzbF91c2VyKCJ3cyAgICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHdzaSMlIiBQUklkNjQgIiByZXE9JXAgdXJsPSVzXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBvcGFxdWUtPnNlcmlhbCwgb3BhcXVlLT5yZXEsIG9wYXF1ZS0+cmVxLT51cmwpOwogICAgICAgIG1pbm5ldF9lbWl0X3RoaXMoJm1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdCwgc2Vzcy0+d3Nfb2JqLCAyLCAmc2Vzcy0+d3Nfb2JqKTsKICAgICAgfQoKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfUEVFUl9JTklUSUFURURfQ0xPU0U6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTE9TRUQ6IHsKICAgICAgaWYob3BhcXVlLT5zdGF0dXMgPCBDTE9TSU5HKSB7CiAgICAgICAgSlNWYWx1ZSB3aHkgPSBKU19VTkRFRklORUQ7CiAgICAgICAgaW50IGNvZGUgPSAtMTsKCiAgICAgICAgaWYoaW4pIHsKICAgICAgICAgIHVpbnQ4X3QqIGNvZGVwID0gaW47CiAgICAgICAgICBjb2RlID0gKGNvZGVwWzBdIDw8IDgpICsgY29kZXBbMV07CiAgICAgICAgICBpZihsZW4gLSAyID4gMCkKICAgICAgICAgICAgd2h5ID0gSlNfTmV3U3RyaW5nTGVuKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgKGNoYXIqKWluICsgMiwgbGVuIC0gMik7CiAgICAgICAgfQoKICAgICAgICBvcGFxdWUtPnN0YXR1cyA9IENMT1NJTkc7CgogICAgICAgIGx3c2xfdXNlcigid3MgICAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBmZD0lZCwgc3RhdHVzPSVkXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBvcGFxdWUtPnN0YXR1cyk7CgogICAgICAgIGlmKGN0eCkgewogICAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzNdID0ge3Nlc3MtPndzX29iaiwgY29kZSAhPSAtMSA/IEpTX05ld0ludDMyKGN0eCwgY29kZSkgOiBKU19VTkRFRklORUQsIHdoeX07CiAgICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYi5jbG9zZSwgY29kZSAhPSAtMSA/IDMgOiAxLCBjYl9hcmd2KTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICAgIH0KICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jb250ZXh0LmpzLCB3aHkpOwogICAgICAgIC8qSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBzZXNzLT53c19vYmogPSBKU19OVUxMOyovCiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfU0VSVkVSX1dSSVRFQUJMRTogewogICAgICBmcHJpbnRmKHN0ZGVyciwgIlx4MWJbMTszM213cml0YWJsZVx4MWJbMG0gJXMgZmQ9JWRcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQod3NpKSk7CgogICAgICBNaW5uZXRCdWZmZXIqIGJ1ZiA9ICZzZXNzLT5zZW5kX2J1ZjsKICAgICAgZnByaW50ZihzdGRlcnIsICJceDFiWzE7MzNtd3JpdGFibGVceDFiWzBtICVzIGJ1Zj0lc1xuIiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBidWZmZXJfZXNjYXBlZChidWYsIGN0eCkpOwoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRTogewogICAgICBpZihjdHgpIHsKICAgICAgICBNaW5uZXRXZWJzb2NrZXQqIHdzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBKU1ZhbHVlIG1zZyA9IHdzLT5iaW5hcnkgPyBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY3R4LCBpbiwgbGVuKSA6IEpTX05ld1N0cmluZ0xlbihjdHgsIGluLCBsZW4pOwogICAgICAgIEpTVmFsdWUgY2JfYXJndlsyXSA9IHtKU19EdXBWYWx1ZShjdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IubWVzc2FnZSwgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlsxXSk7CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFX1BPTkc6IHsKICAgICAgaWYobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCkgewogICAgICAgIC8vIHdzX29iaiA9IG1pbm5ldF93c193cmFwKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHdzaSk7CiAgICAgICAgSlNWYWx1ZSBtc2cgPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCwgaW4sIGxlbik7CiAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzJdID0ge0pTX0R1cFZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IucG9uZywgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIGNiX2FyZ3ZbMF0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4LCBjYl9hcmd2WzFdKTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0ZJTFRFUl9ORVRXT1JLX0NPTk5FQ1RJT046CiAgICBjYXNlIExXU19DQUxMQkFDS19GSUxURVJfUFJPVE9DT0xfQ09OTkVDVElPTjoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTX1NFUlZFUl9EUk9QX1BST1RPQ09MOiB7CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGRlZmF1bHQ6IHsKICAgICAgLy8gcHJpbnRmKCJ3c19jYWxsYmFjayAlcyAlcCAlcCAlenVcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbiksIHVzZXIsIGluLCBsZW4pOwogICAgICBtaW5uZXRfbHdzX3VuaGFuZGxlZChfX2Z1bmNfXywgcmVhc29uKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICAvLyBsd3NsX3VzZXIoIndzICAgIiBGRygiJWQiKSAiJS0zOHMiIE5DICIgZmQ9JWQgdXJsPSclcycgaW49JyUuKnMnXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBsd3NfZ2V0X3VyaSh3c2ksIG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywKICAvLyBXU0lfVE9LRU5fR0VUX1VSSSksIChpbnQpbGVuLCAoY2hhciopaW4pOwoKICBpZihvcGFxdWUgJiYgb3BhcXVlLT5zdGF0dXMgPj0gQ0xPU0lORykKICAgIHJldHVybiAtMTsKCiAgcmV0dXJuIDA7IC8vIGx3c19jYWxsYmFja19odHRwX2R1bW15KHdzaSwgcmVhc29uLCB1c2VyLCBpbiwgbGVuKTsKfQoAAAAAAAAAAGsVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQ4AAAAAAABADgAAAAAAAAAAAAAAAPC/"
				],
				[
					317,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrFQAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgppbnQgaHR0cF9zZXJ2ZXJfY2FsbGJhY2soc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMsIHZvaWQqLCB2b2lkKiwgc2l6ZV90KTsKCmludAp3c19jYWxsYmFjayhzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIE1pbm5ldFNlc3Npb24qIHNlc3MgPSB1c2VyOwogIEpTQ29udGV4dCogY3R4ID0gbWlubmV0X3NlcnZlci5jb250ZXh0LmpzOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIGlmKGx3c19pc19wb2xsX2NhbGxiYWNrKHJlYXNvbikpCiAgICByZXR1cm4gZmRfY2FsbGJhY2sod3NpLCByZWFzb24sICZtaW5uZXRfc2VydmVyLmNiLmZkLCBpbik7CiAgaWYobHdzX2lzX2h0dHBfY2FsbGJhY2socmVhc29uKSkKICAgIHJldHVybiBodHRwX3NlcnZlcl9jYWxsYmFjayh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQ6IHsKICAgICAgaWYoIW9wYXF1ZSkKICAgICAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX1NFUlZFUl9WRVJJRllfQ0VSVFM6CiAgICBjYXNlIExXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfQ0xJRU5UX1ZFUklGWV9DRVJUUzoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9ORVdfQ0xJRU5UX0lOU1RBTlRJQVRFRDogewogICAgICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9DUkVBVEU6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NJX0RFU1RST1k6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9DT05GSVJNX1VQR1JBREU6IHsKICAgICAgaWYoIWx3c19pc19zc2wod3NpKSAmJiAhc3RyY21wKGluLCAiaDJjIikpCiAgICAgICAgcmV0dXJuIC0xOwoKICAgICAgLypyZXR1cm4gaHR0cF9zZXJ2ZXJfY2FsbGJhY2sod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOyovCiAgICAgIGlmKCFvcGFxdWUpCiAgICAgICAgb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CiAgICAgIGFzc2VydChvcGFxdWUpOwoKICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgIGludCBudW1faGRyID0gaHR0cF9zZXJ2ZXJfaGVhZGVycyhjdHgsICZvcGFxdWUtPnJlcS0+aGVhZGVycywgd3NpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRVNUQUJMSVNIRUQ6IHsKICAgICAgLy8gc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKCiAgICAgIG9wYXF1ZS0+c3RhdHVzID0gT1BFTjsKCiAgICAgIGlmKG1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdC5jdHgpIHsKCiAgICAgICAgaWYoIW9wYXF1ZS0+cmVxKQogICAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgICAgYXNzZXJ0KG9wYXF1ZS0+cmVxKTsKCiAgICAgICAgaWYoIUpTX0lzT2JqZWN0KHNlc3MtPnJlcV9vYmopKQogICAgICAgICAgc2Vzcy0+cmVxX29iaiA9IG1pbm5ldF9yZXF1ZXN0X3dyYXAoY3R4LCBvcGFxdWUtPnJlcSk7CgogICAgICAgIHNlc3MtPndzX29iaiA9IG1pbm5ldF93c193cmFwKGN0eCwgd3NpKTsKICAgICAgICBvcGFxdWUtPndzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKCiAgICAgICAgbHdzbF91c2VyKCJ3cyAgICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHdzaSMlIiBQUklkNjQgIiByZXE9JXAgdXJsPSVzXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBvcGFxdWUtPnNlcmlhbCwgb3BhcXVlLT5yZXEsIG9wYXF1ZS0+cmVxLT51cmwpOwogICAgICAgIG1pbm5ldF9lbWl0X3RoaXMoJm1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdCwgc2Vzcy0+d3Nfb2JqLCAyLCAmc2Vzcy0+d3Nfb2JqKTsKICAgICAgfQoKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfUEVFUl9JTklUSUFURURfQ0xPU0U6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTE9TRUQ6IHsKICAgICAgaWYob3BhcXVlLT5zdGF0dXMgPCBDTE9TSU5HKSB7CiAgICAgICAgSlNWYWx1ZSB3aHkgPSBKU19VTkRFRklORUQ7CiAgICAgICAgaW50IGNvZGUgPSAtMTsKCiAgICAgICAgaWYoaW4pIHsKICAgICAgICAgIHVpbnQ4X3QqIGNvZGVwID0gaW47CiAgICAgICAgICBjb2RlID0gKGNvZGVwWzBdIDw8IDgpICsgY29kZXBbMV07CiAgICAgICAgICBpZihsZW4gLSAyID4gMCkKICAgICAgICAgICAgd2h5ID0gSlNfTmV3U3RyaW5nTGVuKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgKGNoYXIqKWluICsgMiwgbGVuIC0gMik7CiAgICAgICAgfQoKICAgICAgICBvcGFxdWUtPnN0YXR1cyA9IENMT1NJTkc7CgogICAgICAgIGx3c2xfdXNlcigid3MgICAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBmZD0lZCwgc3RhdHVzPSVkXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBvcGFxdWUtPnN0YXR1cyk7CgogICAgICAgIGlmKGN0eCkgewogICAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzNdID0ge3Nlc3MtPndzX29iaiwgY29kZSAhPSAtMSA/IEpTX05ld0ludDMyKGN0eCwgY29kZSkgOiBKU19VTkRFRklORUQsIHdoeX07CiAgICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYi5jbG9zZSwgY29kZSAhPSAtMSA/IDMgOiAxLCBjYl9hcmd2KTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICAgIH0KICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jb250ZXh0LmpzLCB3aHkpOwogICAgICAgIC8qSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBzZXNzLT53c19vYmogPSBKU19OVUxMOyovCiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfU0VSVkVSX1dSSVRFQUJMRTogewogICAgICBmcHJpbnRmKHN0ZGVyciwgIlx4MWJbMTszM213cml0YWJsZVx4MWJbMG0gJXMgZmQ9JWRcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQod3NpKSk7CgogICAgICBNaW5uZXRCdWZmZXIqIGJ1ZiA9ICZzZXNzLT5zZW5kX2J1ZjsKICAgICAgZnByaW50ZihzdGRlcnIsICJceDFiWzE7MzNtd3JpdGFibGVceDFiWzBtICVzIGJ1Zj0lc1xuIiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBidWZmZXJfZXNjYXBlZChidWYsIGN0eCkpOwoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRTogewogICAgICBpZihjdHgpIHsKICAgICAgICBNaW5uZXRXZWJzb2NrZXQqIHdzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBKU1ZhbHVlIG1zZyA9IHdzLT5iaW5hcnkgPyBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY3R4LCBpbiwgbGVuKSA6IEpTX05ld1N0cmluZ0xlbihjdHgsIGluLCBsZW4pOwogICAgICAgIEpTVmFsdWUgY2JfYXJndlsyXSA9IHtKU19EdXBWYWx1ZShjdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IubWVzc2FnZSwgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlsxXSk7CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFX1BPTkc6IHsKICAgICAgaWYobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCkgewogICAgICAgIC8vIHdzX29iaiA9IG1pbm5ldF93c193cmFwKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHdzaSk7CiAgICAgICAgSlNWYWx1ZSBtc2cgPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCwgaW4sIGxlbik7CiAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzJdID0ge0pTX0R1cFZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IucG9uZywgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIGNiX2FyZ3ZbMF0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4LCBjYl9hcmd2WzFdKTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0ZJTFRFUl9ORVRXT1JLX0NPTk5FQ1RJT046CiAgICBjYXNlIExXU19DQUxMQkFDS19GSUxURVJfUFJPVE9DT0xfQ09OTkVDVElPTjoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTX1NFUlZFUl9EUk9QX1BST1RPQ09MOiB7CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGRlZmF1bHQ6IHsKICAgICAgLy8gcHJpbnRmKCJ3c19jYWxsYmFjayAlcyAlcCAlcCAlenVcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbiksIHVzZXIsIGluLCBsZW4pOwogICAgICBtaW5uZXRfbHdzX3VuaGFuZGxlZChfX2Z1bmNfXywgcmVhc29uKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICAvLyBsd3NsX3VzZXIoIndzICAgIiBGRygiJWQiKSAiJS0zOHMiIE5DICIgZmQ9JWQgdXJsPSclcycgaW49JyUuKnMnXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBsd3NfZ2V0X3VyaSh3c2ksIG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywKICAvLyBXU0lfVE9LRU5fR0VUX1VSSSksIChpbnQpbGVuLCAoY2hhciopaW4pOwoKICBpZihvcGFxdWUgJiYgb3BhcXVlLT5zdGF0dXMgPj0gQ0xPU0lORykKICAgIHJldHVybiAtMTsKCiAgcmV0dXJuIDA7IC8vIGx3c19jYWxsYmFja19odHRwX2R1bW15KHdzaSwgcmVhc29uLCB1c2VyLCBpbiwgbGVuKTsKfQoAAAAAAAAAAGsVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQ4AAAAAAABADgAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrFQAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgppbnQgaHR0cF9zZXJ2ZXJfY2FsbGJhY2soc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMsIHZvaWQqLCB2b2lkKiwgc2l6ZV90KTsKCmludAp3c19jYWxsYmFjayhzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIE1pbm5ldFNlc3Npb24qIHNlc3MgPSB1c2VyOwogIEpTQ29udGV4dCogY3R4ID0gbWlubmV0X3NlcnZlci5jb250ZXh0LmpzOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIGlmKGx3c19pc19wb2xsX2NhbGxiYWNrKHJlYXNvbikpCiAgICByZXR1cm4gZmRfY2FsbGJhY2sod3NpLCByZWFzb24sICZtaW5uZXRfc2VydmVyLmNiLmZkLCBpbik7CiAgaWYobHdzX2lzX2h0dHBfY2FsbGJhY2socmVhc29uKSkKICAgIHJldHVybiBodHRwX3NlcnZlcl9jYWxsYmFjayh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQ6IHsKICAgICAgaWYoIW9wYXF1ZSkKICAgICAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX1NFUlZFUl9WRVJJRllfQ0VSVFM6CiAgICBjYXNlIExXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfQ0xJRU5UX1ZFUklGWV9DRVJUUzoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9ORVdfQ0xJRU5UX0lOU1RBTlRJQVRFRDogewogICAgICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9DUkVBVEU6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NJX0RFU1RST1k6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9DT05GSVJNX1VQR1JBREU6IHsKICAgICAgaWYoIWx3c19pc19zc2wod3NpKSAmJiAhc3RyY21wKGluLCAiaDJjIikpCiAgICAgICAgcmV0dXJuIC0xOwoKICAgICAgLypyZXR1cm4gaHR0cF9zZXJ2ZXJfY2FsbGJhY2sod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOyovCiAgICAgIGlmKCFvcGFxdWUpCiAgICAgICAgb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CiAgICAgIGFzc2VydChvcGFxdWUpOwoKICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgIGludCBudW1faGRyID0gaHR0cF9zZXJ2ZXJfaGVhZGVycyhjdHgsICZvcGFxdWUtPnJlcS0+aGVhZGVycywgd3NpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRVNUQUJMSVNIRUQ6IHsKICAgICAgLy8gc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKCiAgICAgIG9wYXF1ZS0+c3RhdHVzID0gT1BFTjsKCiAgICAgIGlmKG1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdC5jdHgpIHsKCiAgICAgICAgaWYoIW9wYXF1ZS0+cmVxKQogICAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgICAgYXNzZXJ0KG9wYXF1ZS0+cmVxKTsKCiAgICAgICAgaWYoIUpTX0lzT2JqZWN0KHNlc3MtPnJlcV9vYmopKQogICAgICAgICAgc2Vzcy0+cmVxX29iaiA9IG1pbm5ldF9yZXF1ZXN0X3dyYXAoY3R4LCBvcGFxdWUtPnJlcSk7CgogICAgICAgIHNlc3MtPndzX29iaiA9IG1pbm5ldF93c193cmFwKGN0eCwgd3NpKTsKICAgICAgICBvcGFxdWUtPndzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKCiAgICAgICAgbHdzbF91c2VyKCJ3cyAgICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHdzaSMlIiBQUklkNjQgIiByZXE9JXAgdXJsPSVzXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBvcGFxdWUtPnNlcmlhbCwgb3BhcXVlLT5yZXEsIG9wYXF1ZS0+cmVxLT51cmwpOwogICAgICAgIG1pbm5ldF9lbWl0X3RoaXMoJm1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdCwgc2Vzcy0+d3Nfb2JqLCAyLCAmc2Vzcy0+d3Nfb2JqKTsKICAgICAgfQoKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfUEVFUl9JTklUSUFURURfQ0xPU0U6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTE9TRUQ6IHsKICAgICAgaWYob3BhcXVlLT5zdGF0dXMgPCBDTE9TSU5HKSB7CiAgICAgICAgSlNWYWx1ZSB3aHkgPSBKU19VTkRFRklORUQ7CiAgICAgICAgaW50IGNvZGUgPSAtMTsKCiAgICAgICAgaWYoaW4pIHsKICAgICAgICAgIHVpbnQ4X3QqIGNvZGVwID0gaW47CiAgICAgICAgICBjb2RlID0gKGNvZGVwWzBdIDw8IDgpICsgY29kZXBbMV07CiAgICAgICAgICBpZihsZW4gLSAyID4gMCkKICAgICAgICAgICAgd2h5ID0gSlNfTmV3U3RyaW5nTGVuKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgKGNoYXIqKWluICsgMiwgbGVuIC0gMik7CiAgICAgICAgfQoKICAgICAgICBvcGFxdWUtPnN0YXR1cyA9IENMT1NJTkc7CgogICAgICAgIGx3c2xfdXNlcigid3MgICAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBmZD0lZCwgc3RhdHVzPSVkXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBvcGFxdWUtPnN0YXR1cyk7CgogICAgICAgIGlmKGN0eCkgewogICAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzNdID0ge3Nlc3MtPndzX29iaiwgY29kZSAhPSAtMSA/IEpTX05ld0ludDMyKGN0eCwgY29kZSkgOiBKU19VTkRFRklORUQsIHdoeX07CiAgICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYi5jbG9zZSwgY29kZSAhPSAtMSA/IDMgOiAxLCBjYl9hcmd2KTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICAgIH0KICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jb250ZXh0LmpzLCB3aHkpOwogICAgICAgIC8qSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBzZXNzLT53c19vYmogPSBKU19OVUxMOyovCiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfU0VSVkVSX1dSSVRFQUJMRTogewogICAgICBmcHJpbnRmKHN0ZGVyciwgIlx4MWJbMTszM213cml0YWJsZVx4MWJbMG0gJXMgZmQ9JWRcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQod3NpKSk7CgogICAgICBNaW5uZXRCdWZmZXIqIGJ1ZiA9ICZzZXNzLT5zZW5kX2J1ZjsKICAgICAgZnByaW50ZihzdGRlcnIsICJceDFiWzE7MzNtd3JpdGFibGVceDFiWzBtICVzIGJ1Zj0lc1xuIiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBidWZmZXJfZXNjYXBlZChidWYsIGN0eCkpOwoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRTogewogICAgICBpZihjdHgpIHsKICAgICAgICBNaW5uZXRXZWJzb2NrZXQqIHdzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBKU1ZhbHVlIG1zZyA9IHdzLT5iaW5hcnkgPyBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY3R4LCBpbiwgbGVuKSA6IEpTX05ld1N0cmluZ0xlbihjdHgsIGluLCBsZW4pOwogICAgICAgIEpTVmFsdWUgY2JfYXJndlsyXSA9IHtKU19EdXBWYWx1ZShjdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IubWVzc2FnZSwgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlsxXSk7CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFX1BPTkc6IHsKICAgICAgaWYobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCkgewogICAgICAgIC8vIHdzX29iaiA9IG1pbm5ldF93c193cmFwKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHdzaSk7CiAgICAgICAgSlNWYWx1ZSBtc2cgPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCwgaW4sIGxlbik7CiAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzJdID0ge0pTX0R1cFZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IucG9uZywgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIGNiX2FyZ3ZbMF0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4LCBjYl9hcmd2WzFdKTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0ZJTFRFUl9ORVRXT1JLX0NPTk5FQ1RJT046CiAgICBjYXNlIExXU19DQUxMQkFDS19GSUxURVJfUFJPVE9DT0xfQ09OTkVDVElPTjoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTX1NFUlZFUl9EUk9QX1BST1RPQ09MOiB7CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGRlZmF1bHQ6IHsKICAgICAgLy8gcHJpbnRmKCJ3c19jYWxsYmFjayAlcyAlcCAlcCAlenVcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbiksIHVzZXIsIGluLCBsZW4pOwogICAgICBtaW5uZXRfbHdzX3VuaGFuZGxlZChfX2Z1bmNfXywgcmVhc29uKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICAvLyBsd3NsX3VzZXIoIndzICAgIiBGRygiJWQiKSAiJS0zOHMiIE5DICIgZmQ9JWQgdXJsPSclcycgaW49JyUuKnMnXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBsd3NfZ2V0X3VyaSh3c2ksIG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywKICAvLyBXU0lfVE9LRU5fR0VUX1VSSSksIChpbnQpbGVuLCAoY2hhciopaW4pOwoKICBpZihvcGFxdWUgJiYgb3BhcXVlLT5zdGF0dXMgPj0gQ0xPU0lORykKICAgIHJldHVybiAtMTsKCiAgcmV0dXJuIDA7IC8vIGx3c19jYWxsYmFja19odHRwX2R1bW15KHdzaSwgcmVhc29uLCB1c2VyLCBpbiwgbGVuKTsKfQoAAAAAAAAAAGsVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQ4AAAAAAABADgAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrFQAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgppbnQgaHR0cF9zZXJ2ZXJfY2FsbGJhY2soc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMsIHZvaWQqLCB2b2lkKiwgc2l6ZV90KTsKCmludAp3c19jYWxsYmFjayhzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIE1pbm5ldFNlc3Npb24qIHNlc3MgPSB1c2VyOwogIEpTQ29udGV4dCogY3R4ID0gbWlubmV0X3NlcnZlci5jb250ZXh0LmpzOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIGlmKGx3c19pc19wb2xsX2NhbGxiYWNrKHJlYXNvbikpCiAgICByZXR1cm4gZmRfY2FsbGJhY2sod3NpLCByZWFzb24sICZtaW5uZXRfc2VydmVyLmNiLmZkLCBpbik7CiAgaWYobHdzX2lzX2h0dHBfY2FsbGJhY2socmVhc29uKSkKICAgIHJldHVybiBodHRwX3NlcnZlcl9jYWxsYmFjayh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQ6IHsKICAgICAgaWYoIW9wYXF1ZSkKICAgICAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX1NFUlZFUl9WRVJJRllfQ0VSVFM6CiAgICBjYXNlIExXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfQ0xJRU5UX1ZFUklGWV9DRVJUUzoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9ORVdfQ0xJRU5UX0lOU1RBTlRJQVRFRDogewogICAgICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9DUkVBVEU6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NJX0RFU1RST1k6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9DT05GSVJNX1VQR1JBREU6IHsKICAgICAgaWYoIWx3c19pc19zc2wod3NpKSAmJiAhc3RyY21wKGluLCAiaDJjIikpCiAgICAgICAgcmV0dXJuIC0xOwoKICAgICAgLypyZXR1cm4gaHR0cF9zZXJ2ZXJfY2FsbGJhY2sod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOyovCiAgICAgIGlmKCFvcGFxdWUpCiAgICAgICAgb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CiAgICAgIGFzc2VydChvcGFxdWUpOwoKICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgIGludCBudW1faGRyID0gaHR0cF9zZXJ2ZXJfaGVhZGVycyhjdHgsICZvcGFxdWUtPnJlcS0+aGVhZGVycywgd3NpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRVNUQUJMSVNIRUQ6IHsKICAgICAgLy8gc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKCiAgICAgIG9wYXF1ZS0+c3RhdHVzID0gT1BFTjsKCiAgICAgIGlmKG1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdC5jdHgpIHsKCiAgICAgICAgaWYoIW9wYXF1ZS0+cmVxKQogICAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgICAgYXNzZXJ0KG9wYXF1ZS0+cmVxKTsKCiAgICAgICAgaWYoIUpTX0lzT2JqZWN0KHNlc3MtPnJlcV9vYmopKQogICAgICAgICAgc2Vzcy0+cmVxX29iaiA9IG1pbm5ldF9yZXF1ZXN0X3dyYXAoY3R4LCBvcGFxdWUtPnJlcSk7CgogICAgICAgIHNlc3MtPndzX29iaiA9IG1pbm5ldF93c193cmFwKGN0eCwgd3NpKTsKICAgICAgICBvcGFxdWUtPndzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKCiAgICAgICAgbHdzbF91c2VyKCJ3cyAgICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHdzaSMlIiBQUklkNjQgIiByZXE9JXAgdXJsPSVzXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBvcGFxdWUtPnNlcmlhbCwgb3BhcXVlLT5yZXEsIG9wYXF1ZS0+cmVxLT51cmwpOwogICAgICAgIG1pbm5ldF9lbWl0X3RoaXMoJm1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdCwgc2Vzcy0+d3Nfb2JqLCAyLCAmc2Vzcy0+d3Nfb2JqKTsKICAgICAgfQoKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfUEVFUl9JTklUSUFURURfQ0xPU0U6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTE9TRUQ6IHsKICAgICAgaWYob3BhcXVlLT5zdGF0dXMgPCBDTE9TSU5HKSB7CiAgICAgICAgSlNWYWx1ZSB3aHkgPSBKU19VTkRFRklORUQ7CiAgICAgICAgaW50IGNvZGUgPSAtMTsKCiAgICAgICAgaWYoaW4pIHsKICAgICAgICAgIHVpbnQ4X3QqIGNvZGVwID0gaW47CiAgICAgICAgICBjb2RlID0gKGNvZGVwWzBdIDw8IDgpICsgY29kZXBbMV07CiAgICAgICAgICBpZihsZW4gLSAyID4gMCkKICAgICAgICAgICAgd2h5ID0gSlNfTmV3U3RyaW5nTGVuKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgKGNoYXIqKWluICsgMiwgbGVuIC0gMik7CiAgICAgICAgfQoKICAgICAgICBvcGFxdWUtPnN0YXR1cyA9IENMT1NJTkc7CgogICAgICAgIGx3c2xfdXNlcigid3MgICAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBmZD0lZCwgc3RhdHVzPSVkXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBvcGFxdWUtPnN0YXR1cyk7CgogICAgICAgIGlmKGN0eCkgewogICAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzNdID0ge3Nlc3MtPndzX29iaiwgY29kZSAhPSAtMSA/IEpTX05ld0ludDMyKGN0eCwgY29kZSkgOiBKU19VTkRFRklORUQsIHdoeX07CiAgICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYi5jbG9zZSwgY29kZSAhPSAtMSA/IDMgOiAxLCBjYl9hcmd2KTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICAgIH0KICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jb250ZXh0LmpzLCB3aHkpOwogICAgICAgIC8qSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBzZXNzLT53c19vYmogPSBKU19OVUxMOyovCiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfU0VSVkVSX1dSSVRFQUJMRTogewogICAgICBmcHJpbnRmKHN0ZGVyciwgIlx4MWJbMTszM213cml0YWJsZVx4MWJbMG0gJXMgZmQ9JWRcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQod3NpKSk7CgogICAgICBNaW5uZXRCdWZmZXIqIGJ1ZiA9ICZzZXNzLT5zZW5kX2J1ZjsKICAgICAgZnByaW50ZihzdGRlcnIsICJceDFiWzE7MzNtd3JpdGFibGVceDFiWzBtICVzIGJ1Zj0lc1xuIiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBidWZmZXJfZXNjYXBlZChidWYsIGN0eCkpOwoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRTogewogICAgICBpZihjdHgpIHsKICAgICAgICBNaW5uZXRXZWJzb2NrZXQqIHdzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBKU1ZhbHVlIG1zZyA9IHdzLT5iaW5hcnkgPyBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY3R4LCBpbiwgbGVuKSA6IEpTX05ld1N0cmluZ0xlbihjdHgsIGluLCBsZW4pOwogICAgICAgIEpTVmFsdWUgY2JfYXJndlsyXSA9IHtKU19EdXBWYWx1ZShjdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IubWVzc2FnZSwgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlsxXSk7CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFX1BPTkc6IHsKICAgICAgaWYobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCkgewogICAgICAgIC8vIHdzX29iaiA9IG1pbm5ldF93c193cmFwKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHdzaSk7CiAgICAgICAgSlNWYWx1ZSBtc2cgPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCwgaW4sIGxlbik7CiAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzJdID0ge0pTX0R1cFZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IucG9uZywgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIGNiX2FyZ3ZbMF0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4LCBjYl9hcmd2WzFdKTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0ZJTFRFUl9ORVRXT1JLX0NPTk5FQ1RJT046CiAgICBjYXNlIExXU19DQUxMQkFDS19GSUxURVJfUFJPVE9DT0xfQ09OTkVDVElPTjoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTX1NFUlZFUl9EUk9QX1BST1RPQ09MOiB7CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGRlZmF1bHQ6IHsKICAgICAgLy8gcHJpbnRmKCJ3c19jYWxsYmFjayAlcyAlcCAlcCAlenVcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbiksIHVzZXIsIGluLCBsZW4pOwogICAgICBtaW5uZXRfbHdzX3VuaGFuZGxlZChfX2Z1bmNfXywgcmVhc29uKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICAvLyBsd3NsX3VzZXIoIndzICAgIiBGRygiJWQiKSAiJS0zOHMiIE5DICIgZmQ9JWQgdXJsPSclcycgaW49JyUuKnMnXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBsd3NfZ2V0X3VyaSh3c2ksIG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywKICAvLyBXU0lfVE9LRU5fR0VUX1VSSSksIChpbnQpbGVuLCAoY2hhciopaW4pOwoKICBpZihvcGFxdWUgJiYgb3BhcXVlLT5zdGF0dXMgPj0gQ0xPU0lORykKICAgIHJldHVybiAtMTsKCiAgcmV0dXJuIDA7IC8vIGx3c19jYWxsYmFja19odHRwX2R1bW15KHdzaSwgcmVhc29uLCB1c2VyLCBpbiwgbGVuKTsKfQoAAAAAAAAAAGsVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQ4AAAAAAABADgAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrFQAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgppbnQgaHR0cF9zZXJ2ZXJfY2FsbGJhY2soc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMsIHZvaWQqLCB2b2lkKiwgc2l6ZV90KTsKCmludAp3c19jYWxsYmFjayhzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIE1pbm5ldFNlc3Npb24qIHNlc3MgPSB1c2VyOwogIEpTQ29udGV4dCogY3R4ID0gbWlubmV0X3NlcnZlci5jb250ZXh0LmpzOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIGlmKGx3c19pc19wb2xsX2NhbGxiYWNrKHJlYXNvbikpCiAgICByZXR1cm4gZmRfY2FsbGJhY2sod3NpLCByZWFzb24sICZtaW5uZXRfc2VydmVyLmNiLmZkLCBpbik7CiAgaWYobHdzX2lzX2h0dHBfY2FsbGJhY2socmVhc29uKSkKICAgIHJldHVybiBodHRwX3NlcnZlcl9jYWxsYmFjayh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQ6IHsKICAgICAgaWYoIW9wYXF1ZSkKICAgICAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX1NFUlZFUl9WRVJJRllfQ0VSVFM6CiAgICBjYXNlIExXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfQ0xJRU5UX1ZFUklGWV9DRVJUUzoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9ORVdfQ0xJRU5UX0lOU1RBTlRJQVRFRDogewogICAgICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9DUkVBVEU6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NJX0RFU1RST1k6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9DT05GSVJNX1VQR1JBREU6IHsKICAgICAgaWYoIWx3c19pc19zc2wod3NpKSAmJiAhc3RyY21wKGluLCAiaDJjIikpCiAgICAgICAgcmV0dXJuIC0xOwoKICAgICAgLypyZXR1cm4gaHR0cF9zZXJ2ZXJfY2FsbGJhY2sod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOyovCiAgICAgIGlmKCFvcGFxdWUpCiAgICAgICAgb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CiAgICAgIGFzc2VydChvcGFxdWUpOwoKICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgIGludCBudW1faGRyID0gaHR0cF9zZXJ2ZXJfaGVhZGVycyhjdHgsICZvcGFxdWUtPnJlcS0+aGVhZGVycywgd3NpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRVNUQUJMSVNIRUQ6IHsKICAgICAgLy8gc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKCiAgICAgIG9wYXF1ZS0+c3RhdHVzID0gT1BFTjsKCiAgICAgIGlmKG1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdC5jdHgpIHsKCiAgICAgICAgaWYoIW9wYXF1ZS0+cmVxKQogICAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgICAgYXNzZXJ0KG9wYXF1ZS0+cmVxKTsKCiAgICAgICAgaWYoIUpTX0lzT2JqZWN0KHNlc3MtPnJlcV9vYmopKQogICAgICAgICAgc2Vzcy0+cmVxX29iaiA9IG1pbm5ldF9yZXF1ZXN0X3dyYXAoY3R4LCBvcGFxdWUtPnJlcSk7CgogICAgICAgIHNlc3MtPndzX29iaiA9IG1pbm5ldF93c193cmFwKGN0eCwgd3NpKTsKICAgICAgICBvcGFxdWUtPndzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKCiAgICAgICAgbHdzbF91c2VyKCJ3cyAgICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHdzaSMlIiBQUklkNjQgIiByZXE9JXAgdXJsPSVzXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBvcGFxdWUtPnNlcmlhbCwgb3BhcXVlLT5yZXEsIG9wYXF1ZS0+cmVxLT51cmwpOwogICAgICAgIG1pbm5ldF9lbWl0X3RoaXMoJm1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdCwgc2Vzcy0+d3Nfb2JqLCAyLCAmc2Vzcy0+d3Nfb2JqKTsKICAgICAgfQoKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfUEVFUl9JTklUSUFURURfQ0xPU0U6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTE9TRUQ6IHsKICAgICAgaWYob3BhcXVlLT5zdGF0dXMgPCBDTE9TSU5HKSB7CiAgICAgICAgSlNWYWx1ZSB3aHkgPSBKU19VTkRFRklORUQ7CiAgICAgICAgaW50IGNvZGUgPSAtMTsKCiAgICAgICAgaWYoaW4pIHsKICAgICAgICAgIHVpbnQ4X3QqIGNvZGVwID0gaW47CiAgICAgICAgICBjb2RlID0gKGNvZGVwWzBdIDw8IDgpICsgY29kZXBbMV07CiAgICAgICAgICBpZihsZW4gLSAyID4gMCkKICAgICAgICAgICAgd2h5ID0gSlNfTmV3U3RyaW5nTGVuKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgKGNoYXIqKWluICsgMiwgbGVuIC0gMik7CiAgICAgICAgfQoKICAgICAgICBvcGFxdWUtPnN0YXR1cyA9IENMT1NJTkc7CgogICAgICAgIGx3c2xfdXNlcigid3MgICAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBmZD0lZCwgc3RhdHVzPSVkXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBvcGFxdWUtPnN0YXR1cyk7CgogICAgICAgIGlmKGN0eCkgewogICAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzNdID0ge3Nlc3MtPndzX29iaiwgY29kZSAhPSAtMSA/IEpTX05ld0ludDMyKGN0eCwgY29kZSkgOiBKU19VTkRFRklORUQsIHdoeX07CiAgICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYi5jbG9zZSwgY29kZSAhPSAtMSA/IDMgOiAxLCBjYl9hcmd2KTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICAgIH0KICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jb250ZXh0LmpzLCB3aHkpOwogICAgICAgIC8qSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBzZXNzLT53c19vYmogPSBKU19OVUxMOyovCiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfU0VSVkVSX1dSSVRFQUJMRTogewogICAgICBmcHJpbnRmKHN0ZGVyciwgIlx4MWJbMTszM213cml0YWJsZVx4MWJbMG0gJXMgZmQ9JWRcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQod3NpKSk7CgogICAgICBNaW5uZXRCdWZmZXIqIGJ1ZiA9ICZzZXNzLT5zZW5kX2J1ZjsKICAgICAgZnByaW50ZihzdGRlcnIsICJceDFiWzE7MzNtd3JpdGFibGVceDFiWzBtICVzIGJ1Zj0lc1xuIiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBidWZmZXJfZXNjYXBlZChidWYsIGN0eCkpOwoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRTogewogICAgICBpZihjdHgpIHsKICAgICAgICBNaW5uZXRXZWJzb2NrZXQqIHdzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBKU1ZhbHVlIG1zZyA9IHdzLT5iaW5hcnkgPyBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY3R4LCBpbiwgbGVuKSA6IEpTX05ld1N0cmluZ0xlbihjdHgsIGluLCBsZW4pOwogICAgICAgIEpTVmFsdWUgY2JfYXJndlsyXSA9IHtKU19EdXBWYWx1ZShjdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IubWVzc2FnZSwgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlsxXSk7CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFX1BPTkc6IHsKICAgICAgaWYobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCkgewogICAgICAgIC8vIHdzX29iaiA9IG1pbm5ldF93c193cmFwKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHdzaSk7CiAgICAgICAgSlNWYWx1ZSBtc2cgPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCwgaW4sIGxlbik7CiAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzJdID0ge0pTX0R1cFZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IucG9uZywgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIGNiX2FyZ3ZbMF0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4LCBjYl9hcmd2WzFdKTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0ZJTFRFUl9ORVRXT1JLX0NPTk5FQ1RJT046CiAgICBjYXNlIExXU19DQUxMQkFDS19GSUxURVJfUFJPVE9DT0xfQ09OTkVDVElPTjoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTX1NFUlZFUl9EUk9QX1BST1RPQ09MOiB7CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGRlZmF1bHQ6IHsKICAgICAgLy8gcHJpbnRmKCJ3c19jYWxsYmFjayAlcyAlcCAlcCAlenVcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbiksIHVzZXIsIGluLCBsZW4pOwogICAgICBtaW5uZXRfbHdzX3VuaGFuZGxlZChfX2Z1bmNfXywgcmVhc29uKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICAvLyBsd3NsX3VzZXIoIndzICAgIiBGRygiJWQiKSAiJS0zOHMiIE5DICIgZmQ9JWQgdXJsPSclcycgaW49JyUuKnMnXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBsd3NfZ2V0X3VyaSh3c2ksIG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywKICAvLyBXU0lfVE9LRU5fR0VUX1VSSSksIChpbnQpbGVuLCAoY2hhciopaW4pOwoKICBpZihvcGFxdWUgJiYgb3BhcXVlLT5zdGF0dXMgPj0gQ0xPU0lORykKICAgIHJldHVybiAtMTsKCiAgcmV0dXJuIDA7IC8vIGx3c19jYWxsYmFja19odHRwX2R1bW15KHdzaSwgcmVhc29uLCB1c2VyLCBpbiwgbGVuKTsKfQoAAAAAAAAAAGsVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQ4AAAAAAABADgAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrFQAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgppbnQgaHR0cF9zZXJ2ZXJfY2FsbGJhY2soc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMsIHZvaWQqLCB2b2lkKiwgc2l6ZV90KTsKCmludAp3c19jYWxsYmFjayhzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIE1pbm5ldFNlc3Npb24qIHNlc3MgPSB1c2VyOwogIEpTQ29udGV4dCogY3R4ID0gbWlubmV0X3NlcnZlci5jb250ZXh0LmpzOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIGlmKGx3c19pc19wb2xsX2NhbGxiYWNrKHJlYXNvbikpCiAgICByZXR1cm4gZmRfY2FsbGJhY2sod3NpLCByZWFzb24sICZtaW5uZXRfc2VydmVyLmNiLmZkLCBpbik7CiAgaWYobHdzX2lzX2h0dHBfY2FsbGJhY2socmVhc29uKSkKICAgIHJldHVybiBodHRwX3NlcnZlcl9jYWxsYmFjayh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQ6IHsKICAgICAgaWYoIW9wYXF1ZSkKICAgICAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX1NFUlZFUl9WRVJJRllfQ0VSVFM6CiAgICBjYXNlIExXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfQ0xJRU5UX1ZFUklGWV9DRVJUUzoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9ORVdfQ0xJRU5UX0lOU1RBTlRJQVRFRDogewogICAgICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9DUkVBVEU6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NJX0RFU1RST1k6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9DT05GSVJNX1VQR1JBREU6IHsKICAgICAgaWYoIWx3c19pc19zc2wod3NpKSAmJiAhc3RyY21wKGluLCAiaDJjIikpCiAgICAgICAgcmV0dXJuIC0xOwoKICAgICAgLypyZXR1cm4gaHR0cF9zZXJ2ZXJfY2FsbGJhY2sod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOyovCiAgICAgIGlmKCFvcGFxdWUpCiAgICAgICAgb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CiAgICAgIGFzc2VydChvcGFxdWUpOwoKICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgIGludCBudW1faGRyID0gaHR0cF9zZXJ2ZXJfaGVhZGVycyhjdHgsICZvcGFxdWUtPnJlcS0+aGVhZGVycywgd3NpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRVNUQUJMSVNIRUQ6IHsKICAgICAgLy8gc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKCiAgICAgIG9wYXF1ZS0+c3RhdHVzID0gT1BFTjsKCiAgICAgIGlmKG1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdC5jdHgpIHsKCiAgICAgICAgaWYoIW9wYXF1ZS0+cmVxKQogICAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgICAgYXNzZXJ0KG9wYXF1ZS0+cmVxKTsKCiAgICAgICAgaWYoIUpTX0lzT2JqZWN0KHNlc3MtPnJlcV9vYmopKQogICAgICAgICAgc2Vzcy0+cmVxX29iaiA9IG1pbm5ldF9yZXF1ZXN0X3dyYXAoY3R4LCBvcGFxdWUtPnJlcSk7CgogICAgICAgIHNlc3MtPndzX29iaiA9IG1pbm5ldF93c193cmFwKGN0eCwgd3NpKTsKICAgICAgICBvcGFxdWUtPndzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKCiAgICAgICAgbHdzbF91c2VyKCJ3cyAgICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHdzaSMlIiBQUklkNjQgIiByZXE9JXAgdXJsPSVzXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBvcGFxdWUtPnNlcmlhbCwgb3BhcXVlLT5yZXEsIG9wYXF1ZS0+cmVxLT51cmwpOwogICAgICAgIG1pbm5ldF9lbWl0X3RoaXMoJm1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdCwgc2Vzcy0+d3Nfb2JqLCAyLCAmc2Vzcy0+d3Nfb2JqKTsKICAgICAgfQoKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfUEVFUl9JTklUSUFURURfQ0xPU0U6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTE9TRUQ6IHsKICAgICAgaWYob3BhcXVlLT5zdGF0dXMgPCBDTE9TSU5HKSB7CiAgICAgICAgSlNWYWx1ZSB3aHkgPSBKU19VTkRFRklORUQ7CiAgICAgICAgaW50IGNvZGUgPSAtMTsKCiAgICAgICAgaWYoaW4pIHsKICAgICAgICAgIHVpbnQ4X3QqIGNvZGVwID0gaW47CiAgICAgICAgICBjb2RlID0gKGNvZGVwWzBdIDw8IDgpICsgY29kZXBbMV07CiAgICAgICAgICBpZihsZW4gLSAyID4gMCkKICAgICAgICAgICAgd2h5ID0gSlNfTmV3U3RyaW5nTGVuKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgKGNoYXIqKWluICsgMiwgbGVuIC0gMik7CiAgICAgICAgfQoKICAgICAgICBvcGFxdWUtPnN0YXR1cyA9IENMT1NJTkc7CgogICAgICAgIGx3c2xfdXNlcigid3MgICAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBmZD0lZCwgc3RhdHVzPSVkXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBvcGFxdWUtPnN0YXR1cyk7CgogICAgICAgIGlmKGN0eCkgewogICAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzNdID0ge3Nlc3MtPndzX29iaiwgY29kZSAhPSAtMSA/IEpTX05ld0ludDMyKGN0eCwgY29kZSkgOiBKU19VTkRFRklORUQsIHdoeX07CiAgICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYi5jbG9zZSwgY29kZSAhPSAtMSA/IDMgOiAxLCBjYl9hcmd2KTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICAgIH0KICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jb250ZXh0LmpzLCB3aHkpOwogICAgICAgIC8qSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBzZXNzLT53c19vYmogPSBKU19OVUxMOyovCiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfU0VSVkVSX1dSSVRFQUJMRTogewogICAgICBmcHJpbnRmKHN0ZGVyciwgIlx4MWJbMTszM213cml0YWJsZVx4MWJbMG0gJXMgZmQ9JWRcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQod3NpKSk7CgogICAgICBNaW5uZXRCdWZmZXIqIGJ1ZiA9ICZzZXNzLT5zZW5kX2J1ZjsKICAgICAgZnByaW50ZihzdGRlcnIsICJceDFiWzE7MzNtd3JpdGFibGVceDFiWzBtICVzIGJ1Zj0lc1xuIiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBidWZmZXJfZXNjYXBlZChidWYsIGN0eCkpOwoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRTogewogICAgICBpZihjdHgpIHsKICAgICAgICBNaW5uZXRXZWJzb2NrZXQqIHdzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBKU1ZhbHVlIG1zZyA9IHdzLT5iaW5hcnkgPyBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY3R4LCBpbiwgbGVuKSA6IEpTX05ld1N0cmluZ0xlbihjdHgsIGluLCBsZW4pOwogICAgICAgIEpTVmFsdWUgY2JfYXJndlsyXSA9IHtKU19EdXBWYWx1ZShjdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IubWVzc2FnZSwgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlsxXSk7CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFX1BPTkc6IHsKICAgICAgaWYobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCkgewogICAgICAgIC8vIHdzX29iaiA9IG1pbm5ldF93c193cmFwKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHdzaSk7CiAgICAgICAgSlNWYWx1ZSBtc2cgPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCwgaW4sIGxlbik7CiAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzJdID0ge0pTX0R1cFZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IucG9uZywgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIGNiX2FyZ3ZbMF0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4LCBjYl9hcmd2WzFdKTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0ZJTFRFUl9ORVRXT1JLX0NPTk5FQ1RJT046CiAgICBjYXNlIExXU19DQUxMQkFDS19GSUxURVJfUFJPVE9DT0xfQ09OTkVDVElPTjoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTX1NFUlZFUl9EUk9QX1BST1RPQ09MOiB7CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGRlZmF1bHQ6IHsKICAgICAgLy8gcHJpbnRmKCJ3c19jYWxsYmFjayAlcyAlcCAlcCAlenVcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbiksIHVzZXIsIGluLCBsZW4pOwogICAgICBtaW5uZXRfbHdzX3VuaGFuZGxlZChfX2Z1bmNfXywgcmVhc29uKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICAvLyBsd3NsX3VzZXIoIndzICAgIiBGRygiJWQiKSAiJS0zOHMiIE5DICIgZmQ9JWQgdXJsPSclcycgaW49JyUuKnMnXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBsd3NfZ2V0X3VyaSh3c2ksIG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywKICAvLyBXU0lfVE9LRU5fR0VUX1VSSSksIChpbnQpbGVuLCAoY2hhciopaW4pOwoKICBpZihvcGFxdWUgJiYgb3BhcXVlLT5zdGF0dXMgPj0gQ0xPU0lORykKICAgIHJldHVybiAtMTsKCiAgcmV0dXJuIDA7IC8vIGx3c19jYWxsYmFja19odHRwX2R1bW15KHdzaSwgcmVhc29uLCB1c2VyLCBpbiwgbGVuKTsKfQoAAAAAAAAAAGsVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQ4AAAAAAABADgAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrFQAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgppbnQgaHR0cF9zZXJ2ZXJfY2FsbGJhY2soc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMsIHZvaWQqLCB2b2lkKiwgc2l6ZV90KTsKCmludAp3c19jYWxsYmFjayhzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIE1pbm5ldFNlc3Npb24qIHNlc3MgPSB1c2VyOwogIEpTQ29udGV4dCogY3R4ID0gbWlubmV0X3NlcnZlci5jb250ZXh0LmpzOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIGlmKGx3c19pc19wb2xsX2NhbGxiYWNrKHJlYXNvbikpCiAgICByZXR1cm4gZmRfY2FsbGJhY2sod3NpLCByZWFzb24sICZtaW5uZXRfc2VydmVyLmNiLmZkLCBpbik7CiAgaWYobHdzX2lzX2h0dHBfY2FsbGJhY2socmVhc29uKSkKICAgIHJldHVybiBodHRwX3NlcnZlcl9jYWxsYmFjayh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQ6IHsKICAgICAgaWYoIW9wYXF1ZSkKICAgICAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX1NFUlZFUl9WRVJJRllfQ0VSVFM6CiAgICBjYXNlIExXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfQ0xJRU5UX1ZFUklGWV9DRVJUUzoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9ORVdfQ0xJRU5UX0lOU1RBTlRJQVRFRDogewogICAgICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9DUkVBVEU6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NJX0RFU1RST1k6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9DT05GSVJNX1VQR1JBREU6IHsKICAgICAgaWYoIWx3c19pc19zc2wod3NpKSAmJiAhc3RyY21wKGluLCAiaDJjIikpCiAgICAgICAgcmV0dXJuIC0xOwoKICAgICAgLypyZXR1cm4gaHR0cF9zZXJ2ZXJfY2FsbGJhY2sod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOyovCiAgICAgIGlmKCFvcGFxdWUpCiAgICAgICAgb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CiAgICAgIGFzc2VydChvcGFxdWUpOwoKICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgIGludCBudW1faGRyID0gaHR0cF9zZXJ2ZXJfaGVhZGVycyhjdHgsICZvcGFxdWUtPnJlcS0+aGVhZGVycywgd3NpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRVNUQUJMSVNIRUQ6IHsKICAgICAgLy8gc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKCiAgICAgIG9wYXF1ZS0+c3RhdHVzID0gT1BFTjsKCiAgICAgIGlmKG1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdC5jdHgpIHsKCiAgICAgICAgaWYoIW9wYXF1ZS0+cmVxKQogICAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgICAgYXNzZXJ0KG9wYXF1ZS0+cmVxKTsKCiAgICAgICAgaWYoIUpTX0lzT2JqZWN0KHNlc3MtPnJlcV9vYmopKQogICAgICAgICAgc2Vzcy0+cmVxX29iaiA9IG1pbm5ldF9yZXF1ZXN0X3dyYXAoY3R4LCBvcGFxdWUtPnJlcSk7CgogICAgICAgIHNlc3MtPndzX29iaiA9IG1pbm5ldF93c193cmFwKGN0eCwgd3NpKTsKICAgICAgICBvcGFxdWUtPndzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKCiAgICAgICAgbHdzbF91c2VyKCJ3cyAgICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHdzaSMlIiBQUklkNjQgIiByZXE9JXAgdXJsPSVzXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBvcGFxdWUtPnNlcmlhbCwgb3BhcXVlLT5yZXEsIG9wYXF1ZS0+cmVxLT51cmwpOwogICAgICAgIG1pbm5ldF9lbWl0X3RoaXMoJm1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdCwgc2Vzcy0+d3Nfb2JqLCAyLCAmc2Vzcy0+d3Nfb2JqKTsKICAgICAgfQoKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfUEVFUl9JTklUSUFURURfQ0xPU0U6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTE9TRUQ6IHsKICAgICAgaWYob3BhcXVlLT5zdGF0dXMgPCBDTE9TSU5HKSB7CiAgICAgICAgSlNWYWx1ZSB3aHkgPSBKU19VTkRFRklORUQ7CiAgICAgICAgaW50IGNvZGUgPSAtMTsKCiAgICAgICAgaWYoaW4pIHsKICAgICAgICAgIHVpbnQ4X3QqIGNvZGVwID0gaW47CiAgICAgICAgICBjb2RlID0gKGNvZGVwWzBdIDw8IDgpICsgY29kZXBbMV07CiAgICAgICAgICBpZihsZW4gLSAyID4gMCkKICAgICAgICAgICAgd2h5ID0gSlNfTmV3U3RyaW5nTGVuKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgKGNoYXIqKWluICsgMiwgbGVuIC0gMik7CiAgICAgICAgfQoKICAgICAgICBvcGFxdWUtPnN0YXR1cyA9IENMT1NJTkc7CgogICAgICAgIGx3c2xfdXNlcigid3MgICAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBmZD0lZCwgc3RhdHVzPSVkXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBvcGFxdWUtPnN0YXR1cyk7CgogICAgICAgIGlmKGN0eCkgewogICAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzNdID0ge3Nlc3MtPndzX29iaiwgY29kZSAhPSAtMSA/IEpTX05ld0ludDMyKGN0eCwgY29kZSkgOiBKU19VTkRFRklORUQsIHdoeX07CiAgICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYi5jbG9zZSwgY29kZSAhPSAtMSA/IDMgOiAxLCBjYl9hcmd2KTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICAgIH0KICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jb250ZXh0LmpzLCB3aHkpOwogICAgICAgIC8qSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBzZXNzLT53c19vYmogPSBKU19OVUxMOyovCiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfU0VSVkVSX1dSSVRFQUJMRTogewogICAgICBmcHJpbnRmKHN0ZGVyciwgIlx4MWJbMTszM213cml0YWJsZVx4MWJbMG0gJXMgZmQ9JWRcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQod3NpKSk7CgogICAgICBNaW5uZXRCdWZmZXIqIGJ1ZiA9ICZzZXNzLT5zZW5kX2J1ZjsKICAgICAgZnByaW50ZihzdGRlcnIsICJceDFiWzE7MzNtd3JpdGFibGVceDFiWzBtICVzIGJ1Zj0lc1xuIiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBidWZmZXJfZXNjYXBlZChidWYsIGN0eCkpOwoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRTogewogICAgICBpZihjdHgpIHsKICAgICAgICBNaW5uZXRXZWJzb2NrZXQqIHdzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBKU1ZhbHVlIG1zZyA9IHdzLT5iaW5hcnkgPyBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY3R4LCBpbiwgbGVuKSA6IEpTX05ld1N0cmluZ0xlbihjdHgsIGluLCBsZW4pOwogICAgICAgIEpTVmFsdWUgY2JfYXJndlsyXSA9IHtKU19EdXBWYWx1ZShjdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IubWVzc2FnZSwgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlsxXSk7CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFX1BPTkc6IHsKICAgICAgaWYobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCkgewogICAgICAgIC8vIHdzX29iaiA9IG1pbm5ldF93c193cmFwKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHdzaSk7CiAgICAgICAgSlNWYWx1ZSBtc2cgPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCwgaW4sIGxlbik7CiAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzJdID0ge0pTX0R1cFZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IucG9uZywgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIGNiX2FyZ3ZbMF0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4LCBjYl9hcmd2WzFdKTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0ZJTFRFUl9ORVRXT1JLX0NPTk5FQ1RJT046CiAgICBjYXNlIExXU19DQUxMQkFDS19GSUxURVJfUFJPVE9DT0xfQ09OTkVDVElPTjoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTX1NFUlZFUl9EUk9QX1BST1RPQ09MOiB7CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGRlZmF1bHQ6IHsKICAgICAgLy8gcHJpbnRmKCJ3c19jYWxsYmFjayAlcyAlcCAlcCAlenVcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbiksIHVzZXIsIGluLCBsZW4pOwogICAgICBtaW5uZXRfbHdzX3VuaGFuZGxlZChfX2Z1bmNfXywgcmVhc29uKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICAvLyBsd3NsX3VzZXIoIndzICAgIiBGRygiJWQiKSAiJS0zOHMiIE5DICIgZmQ9JWQgdXJsPSclcycgaW49JyUuKnMnXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBsd3NfZ2V0X3VyaSh3c2ksIG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywKICAvLyBXU0lfVE9LRU5fR0VUX1VSSSksIChpbnQpbGVuLCAoY2hhciopaW4pOwoKICBpZihvcGFxdWUgJiYgb3BhcXVlLT5zdGF0dXMgPj0gQ0xPU0lORykKICAgIHJldHVybiAtMTsKCiAgcmV0dXJuIDA7IC8vIGx3c19jYWxsYmFja19odHRwX2R1bW15KHdzaSwgcmVhc29uLCB1c2VyLCBpbiwgbGVuKTsKfQoAAAAAAAAAAGsVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQ4AAAAAAABADgAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrFQAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgppbnQgaHR0cF9zZXJ2ZXJfY2FsbGJhY2soc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMsIHZvaWQqLCB2b2lkKiwgc2l6ZV90KTsKCmludAp3c19jYWxsYmFjayhzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIE1pbm5ldFNlc3Npb24qIHNlc3MgPSB1c2VyOwogIEpTQ29udGV4dCogY3R4ID0gbWlubmV0X3NlcnZlci5jb250ZXh0LmpzOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIGlmKGx3c19pc19wb2xsX2NhbGxiYWNrKHJlYXNvbikpCiAgICByZXR1cm4gZmRfY2FsbGJhY2sod3NpLCByZWFzb24sICZtaW5uZXRfc2VydmVyLmNiLmZkLCBpbik7CiAgaWYobHdzX2lzX2h0dHBfY2FsbGJhY2socmVhc29uKSkKICAgIHJldHVybiBodHRwX3NlcnZlcl9jYWxsYmFjayh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQ6IHsKICAgICAgaWYoIW9wYXF1ZSkKICAgICAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX1NFUlZFUl9WRVJJRllfQ0VSVFM6CiAgICBjYXNlIExXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfQ0xJRU5UX1ZFUklGWV9DRVJUUzoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9ORVdfQ0xJRU5UX0lOU1RBTlRJQVRFRDogewogICAgICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9DUkVBVEU6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NJX0RFU1RST1k6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9DT05GSVJNX1VQR1JBREU6IHsKICAgICAgaWYoIWx3c19pc19zc2wod3NpKSAmJiAhc3RyY21wKGluLCAiaDJjIikpCiAgICAgICAgcmV0dXJuIC0xOwoKICAgICAgLypyZXR1cm4gaHR0cF9zZXJ2ZXJfY2FsbGJhY2sod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOyovCiAgICAgIGlmKCFvcGFxdWUpCiAgICAgICAgb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CiAgICAgIGFzc2VydChvcGFxdWUpOwoKICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgIGludCBudW1faGRyID0gaHR0cF9zZXJ2ZXJfaGVhZGVycyhjdHgsICZvcGFxdWUtPnJlcS0+aGVhZGVycywgd3NpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRVNUQUJMSVNIRUQ6IHsKICAgICAgLy8gc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKCiAgICAgIG9wYXF1ZS0+c3RhdHVzID0gT1BFTjsKCiAgICAgIGlmKG1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdC5jdHgpIHsKCiAgICAgICAgaWYoIW9wYXF1ZS0+cmVxKQogICAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgICAgYXNzZXJ0KG9wYXF1ZS0+cmVxKTsKCiAgICAgICAgaWYoIUpTX0lzT2JqZWN0KHNlc3MtPnJlcV9vYmopKQogICAgICAgICAgc2Vzcy0+cmVxX29iaiA9IG1pbm5ldF9yZXF1ZXN0X3dyYXAoY3R4LCBvcGFxdWUtPnJlcSk7CgogICAgICAgIHNlc3MtPndzX29iaiA9IG1pbm5ldF93c193cmFwKGN0eCwgd3NpKTsKICAgICAgICBvcGFxdWUtPndzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKCiAgICAgICAgbHdzbF91c2VyKCJ3cyAgICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHdzaSMlIiBQUklkNjQgIiByZXE9JXAgdXJsPSVzXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBvcGFxdWUtPnNlcmlhbCwgb3BhcXVlLT5yZXEsIG9wYXF1ZS0+cmVxLT51cmwpOwogICAgICAgIG1pbm5ldF9lbWl0X3RoaXMoJm1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdCwgc2Vzcy0+d3Nfb2JqLCAyLCAmc2Vzcy0+d3Nfb2JqKTsKICAgICAgfQoKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfUEVFUl9JTklUSUFURURfQ0xPU0U6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTE9TRUQ6IHsKICAgICAgaWYob3BhcXVlLT5zdGF0dXMgPCBDTE9TSU5HKSB7CiAgICAgICAgSlNWYWx1ZSB3aHkgPSBKU19VTkRFRklORUQ7CiAgICAgICAgaW50IGNvZGUgPSAtMTsKCiAgICAgICAgaWYoaW4pIHsKICAgICAgICAgIHVpbnQ4X3QqIGNvZGVwID0gaW47CiAgICAgICAgICBjb2RlID0gKGNvZGVwWzBdIDw8IDgpICsgY29kZXBbMV07CiAgICAgICAgICBpZihsZW4gLSAyID4gMCkKICAgICAgICAgICAgd2h5ID0gSlNfTmV3U3RyaW5nTGVuKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgKGNoYXIqKWluICsgMiwgbGVuIC0gMik7CiAgICAgICAgfQoKICAgICAgICBvcGFxdWUtPnN0YXR1cyA9IENMT1NJTkc7CgogICAgICAgIGx3c2xfdXNlcigid3MgICAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBmZD0lZCwgc3RhdHVzPSVkXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBvcGFxdWUtPnN0YXR1cyk7CgogICAgICAgIGlmKGN0eCkgewogICAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzNdID0ge3Nlc3MtPndzX29iaiwgY29kZSAhPSAtMSA/IEpTX05ld0ludDMyKGN0eCwgY29kZSkgOiBKU19VTkRFRklORUQsIHdoeX07CiAgICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYi5jbG9zZSwgY29kZSAhPSAtMSA/IDMgOiAxLCBjYl9hcmd2KTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICAgIH0KICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jb250ZXh0LmpzLCB3aHkpOwogICAgICAgIC8qSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBzZXNzLT53c19vYmogPSBKU19OVUxMOyovCiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfU0VSVkVSX1dSSVRFQUJMRTogewogICAgICBmcHJpbnRmKHN0ZGVyciwgIlx4MWJbMTszM213cml0YWJsZVx4MWJbMG0gJXMgZmQ9JWRcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQod3NpKSk7CgogICAgICBNaW5uZXRCdWZmZXIqIGJ1ZiA9ICZzZXNzLT5zZW5kX2J1ZjsKICAgICAgZnByaW50ZihzdGRlcnIsICJceDFiWzE7MzNtd3JpdGFibGVceDFiWzBtICVzIGJ1Zj0lc1xuIiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBidWZmZXJfZXNjYXBlZChidWYsIGN0eCkpOwoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRTogewogICAgICBpZihjdHgpIHsKICAgICAgICBNaW5uZXRXZWJzb2NrZXQqIHdzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBKU1ZhbHVlIG1zZyA9IHdzLT5iaW5hcnkgPyBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY3R4LCBpbiwgbGVuKSA6IEpTX05ld1N0cmluZ0xlbihjdHgsIGluLCBsZW4pOwogICAgICAgIEpTVmFsdWUgY2JfYXJndlsyXSA9IHtKU19EdXBWYWx1ZShjdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IubWVzc2FnZSwgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlsxXSk7CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFX1BPTkc6IHsKICAgICAgaWYobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCkgewogICAgICAgIC8vIHdzX29iaiA9IG1pbm5ldF93c193cmFwKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHdzaSk7CiAgICAgICAgSlNWYWx1ZSBtc2cgPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCwgaW4sIGxlbik7CiAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzJdID0ge0pTX0R1cFZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IucG9uZywgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIGNiX2FyZ3ZbMF0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4LCBjYl9hcmd2WzFdKTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0ZJTFRFUl9ORVRXT1JLX0NPTk5FQ1RJT046CiAgICBjYXNlIExXU19DQUxMQkFDS19GSUxURVJfUFJPVE9DT0xfQ09OTkVDVElPTjoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTX1NFUlZFUl9EUk9QX1BST1RPQ09MOiB7CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGRlZmF1bHQ6IHsKICAgICAgLy8gcHJpbnRmKCJ3c19jYWxsYmFjayAlcyAlcCAlcCAlenVcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbiksIHVzZXIsIGluLCBsZW4pOwogICAgICBtaW5uZXRfbHdzX3VuaGFuZGxlZChfX2Z1bmNfXywgcmVhc29uKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICAvLyBsd3NsX3VzZXIoIndzICAgIiBGRygiJWQiKSAiJS0zOHMiIE5DICIgZmQ9JWQgdXJsPSclcycgaW49JyUuKnMnXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBsd3NfZ2V0X3VyaSh3c2ksIG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywKICAvLyBXU0lfVE9LRU5fR0VUX1VSSSksIChpbnQpbGVuLCAoY2hhciopaW4pOwoKICBpZihvcGFxdWUgJiYgb3BhcXVlLT5zdGF0dXMgPj0gQ0xPU0lORykKICAgIHJldHVybiAtMTsKCiAgcmV0dXJuIDA7IC8vIGx3c19jYWxsYmFja19odHRwX2R1bW15KHdzaSwgcmVhc29uLCB1c2VyLCBpbiwgbGVuKTsKfQoAAAAAAAAAAGsVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQ4AAAAAAABADgAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrFQAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgppbnQgaHR0cF9zZXJ2ZXJfY2FsbGJhY2soc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMsIHZvaWQqLCB2b2lkKiwgc2l6ZV90KTsKCmludAp3c19jYWxsYmFjayhzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIE1pbm5ldFNlc3Npb24qIHNlc3MgPSB1c2VyOwogIEpTQ29udGV4dCogY3R4ID0gbWlubmV0X3NlcnZlci5jb250ZXh0LmpzOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIGlmKGx3c19pc19wb2xsX2NhbGxiYWNrKHJlYXNvbikpCiAgICByZXR1cm4gZmRfY2FsbGJhY2sod3NpLCByZWFzb24sICZtaW5uZXRfc2VydmVyLmNiLmZkLCBpbik7CiAgaWYobHdzX2lzX2h0dHBfY2FsbGJhY2socmVhc29uKSkKICAgIHJldHVybiBodHRwX3NlcnZlcl9jYWxsYmFjayh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQ6IHsKICAgICAgaWYoIW9wYXF1ZSkKICAgICAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX1NFUlZFUl9WRVJJRllfQ0VSVFM6CiAgICBjYXNlIExXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfQ0xJRU5UX1ZFUklGWV9DRVJUUzoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9ORVdfQ0xJRU5UX0lOU1RBTlRJQVRFRDogewogICAgICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9DUkVBVEU6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NJX0RFU1RST1k6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9DT05GSVJNX1VQR1JBREU6IHsKICAgICAgaWYoIWx3c19pc19zc2wod3NpKSAmJiAhc3RyY21wKGluLCAiaDJjIikpCiAgICAgICAgcmV0dXJuIC0xOwoKICAgICAgLypyZXR1cm4gaHR0cF9zZXJ2ZXJfY2FsbGJhY2sod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOyovCiAgICAgIGlmKCFvcGFxdWUpCiAgICAgICAgb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CiAgICAgIGFzc2VydChvcGFxdWUpOwoKICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgIGludCBudW1faGRyID0gaHR0cF9zZXJ2ZXJfaGVhZGVycyhjdHgsICZvcGFxdWUtPnJlcS0+aGVhZGVycywgd3NpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRVNUQUJMSVNIRUQ6IHsKICAgICAgLy8gc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKCiAgICAgIG9wYXF1ZS0+c3RhdHVzID0gT1BFTjsKCiAgICAgIGlmKG1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdC5jdHgpIHsKCiAgICAgICAgaWYoIW9wYXF1ZS0+cmVxKQogICAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X25ldyhjdHgsIGluLCBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpLCBNRVRIT0RfR0VUKTsKCiAgICAgICAgYXNzZXJ0KG9wYXF1ZS0+cmVxKTsKCiAgICAgICAgaWYoIUpTX0lzT2JqZWN0KHNlc3MtPnJlcV9vYmopKQogICAgICAgICAgc2Vzcy0+cmVxX29iaiA9IG1pbm5ldF9yZXF1ZXN0X3dyYXAoY3R4LCBvcGFxdWUtPnJlcSk7CgogICAgICAgIHNlc3MtPndzX29iaiA9IG1pbm5ldF93c193cmFwKGN0eCwgd3NpKTsKICAgICAgICBvcGFxdWUtPndzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKCiAgICAgICAgbHdzbF91c2VyKCJ3cyAgICIgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHdzaSMlIiBQUklkNjQgIiByZXE9JXAgdXJsPSVzXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBvcGFxdWUtPnNlcmlhbCwgb3BhcXVlLT5yZXEsIG9wYXF1ZS0+cmVxLT51cmwpOwogICAgICAgIG1pbm5ldF9lbWl0X3RoaXMoJm1pbm5ldF9zZXJ2ZXIuY2IuY29ubmVjdCwgc2Vzcy0+d3Nfb2JqLCAyLCAmc2Vzcy0+d3Nfb2JqKTsKICAgICAgfQoKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfUEVFUl9JTklUSUFURURfQ0xPU0U6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTE9TRUQ6IHsKICAgICAgaWYob3BhcXVlLT5zdGF0dXMgPCBDTE9TSU5HKSB7CiAgICAgICAgSlNWYWx1ZSB3aHkgPSBKU19VTkRFRklORUQ7CiAgICAgICAgaW50IGNvZGUgPSAtMTsKCiAgICAgICAgaWYoaW4pIHsKICAgICAgICAgIHVpbnQ4X3QqIGNvZGVwID0gaW47CiAgICAgICAgICBjb2RlID0gKGNvZGVwWzBdIDw8IDgpICsgY29kZXBbMV07CiAgICAgICAgICBpZihsZW4gLSAyID4gMCkKICAgICAgICAgICAgd2h5ID0gSlNfTmV3U3RyaW5nTGVuKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgKGNoYXIqKWluICsgMiwgbGVuIC0gMik7CiAgICAgICAgfQoKICAgICAgICBvcGFxdWUtPnN0YXR1cyA9IENMT1NJTkc7CgogICAgICAgIGx3c2xfdXNlcigid3MgICAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBmZD0lZCwgc3RhdHVzPSVkXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBvcGFxdWUtPnN0YXR1cyk7CgogICAgICAgIGlmKGN0eCkgewogICAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzNdID0ge3Nlc3MtPndzX29iaiwgY29kZSAhPSAtMSA/IEpTX05ld0ludDMyKGN0eCwgY29kZSkgOiBKU19VTkRFRklORUQsIHdoeX07CiAgICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYi5jbG9zZSwgY29kZSAhPSAtMSA/IDMgOiAxLCBjYl9hcmd2KTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICAgIH0KICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jb250ZXh0LmpzLCB3aHkpOwogICAgICAgIC8qSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBzZXNzLT53c19vYmogPSBKU19OVUxMOyovCiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfU0VSVkVSX1dSSVRFQUJMRTogewogICAgICBmcHJpbnRmKHN0ZGVyciwgIlx4MWJbMTszM213cml0YWJsZVx4MWJbMG0gJXMgZmQ9JWRcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQod3NpKSk7CgogICAgICBNaW5uZXRCdWZmZXIqIGJ1ZiA9ICZzZXNzLT5zZW5kX2J1ZjsKICAgICAgZnByaW50ZihzdGRlcnIsICJceDFiWzE7MzNtd3JpdGFibGVceDFiWzBtICVzIGJ1Zj0lc1xuIiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBidWZmZXJfZXNjYXBlZChidWYsIGN0eCkpOwoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRTogewogICAgICBpZihjdHgpIHsKICAgICAgICBNaW5uZXRXZWJzb2NrZXQqIHdzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBKU1ZhbHVlIG1zZyA9IHdzLT5iaW5hcnkgPyBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY3R4LCBpbiwgbGVuKSA6IEpTX05ld1N0cmluZ0xlbihjdHgsIGluLCBsZW4pOwogICAgICAgIEpTVmFsdWUgY2JfYXJndlsyXSA9IHtKU19EdXBWYWx1ZShjdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IubWVzc2FnZSwgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlsxXSk7CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFX1BPTkc6IHsKICAgICAgaWYobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCkgewogICAgICAgIC8vIHdzX29iaiA9IG1pbm5ldF93c193cmFwKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHdzaSk7CiAgICAgICAgSlNWYWx1ZSBtc2cgPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkobWlubmV0X3NlcnZlci5jYi5wb25nLmN0eCwgaW4sIGxlbik7CiAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzJdID0ge0pTX0R1cFZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIHNlc3MtPndzX29iaiksIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2IucG9uZywgMiwgY2JfYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2IucG9uZy5jdHgsIGNiX2FyZ3ZbMF0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfc2VydmVyLmNiLnBvbmcuY3R4LCBjYl9hcmd2WzFdKTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0ZJTFRFUl9ORVRXT1JLX0NPTk5FQ1RJT046CiAgICBjYXNlIExXU19DQUxMQkFDS19GSUxURVJfUFJPVE9DT0xfQ09OTkVDVElPTjoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTX1NFUlZFUl9EUk9QX1BST1RPQ09MOiB7CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGRlZmF1bHQ6IHsKICAgICAgLy8gcHJpbnRmKCJ3c19jYWxsYmFjayAlcyAlcCAlcCAlenVcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbiksIHVzZXIsIGluLCBsZW4pOwogICAgICBtaW5uZXRfbHdzX3VuaGFuZGxlZChfX2Z1bmNfXywgcmVhc29uKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICAvLyBsd3NsX3VzZXIoIndzICAgIiBGRygiJWQiKSAiJS0zOHMiIE5DICIgZmQ9JWQgdXJsPSclcycgaW49JyUuKnMnXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLCBsd3NfZ2V0X3VyaSh3c2ksIG1pbm5ldF9zZXJ2ZXIuY29udGV4dC5qcywKICAvLyBXU0lfVE9LRU5fR0VUX1VSSSksIChpbnQpbGVuLCAoY2hhciopaW4pOwoKICBpZihvcGFxdWUgJiYgb3BhcXVlLT5zdGF0dXMgPj0gQ0xPU0lORykKICAgIHJldHVybiAtMTsKCiAgcmV0dXJuIDA7IC8vIGx3c19jYWxsYmFja19odHRwX2R1bW15KHdzaSwgcmVhc29uLCB1c2VyLCBpbiwgbGVuKTsKfQoAAAAAAAAAAGsVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQ4AAAAAAABADgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "tests/common.js",
			"settings":
			{
				"buffer_size": 1336,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "tests/test-server-http.js",
			"settings":
			{
				"buffer_size": 1216,
				"line_ending": "Unix"
			}
		},
		{
			"file": "minnet-request.c",
			"settings":
			{
				"buffer_size": 8965,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					39,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAiBUAAAAAAACUFQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAiBUAAAAAAACUFQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAiBUAAAAAAACUFQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAiBUAAAAAAACUFQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAiBUAAAAAAACUFQAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAiBUAAAAAAACUFQAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAiBUAAAAAAACUFQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAiBUAAAAAAACUFQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAiBUAAAAAAACUFQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAFIwAAI2RlZmluZSBfR05VX1NPVVJDRQojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlICJtaW5uZXQtcmVxdWVzdC5oIgojaW5jbHVkZSAibWlubmV0LXN0cmVhbS5oIgojaW5jbHVkZSAianN1dGlscy5oIgojaW5jbHVkZSA8Y3R5cGUuaD4KI2luY2x1ZGUgPHN0cmluZ3MuaD4KClRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQ7ClRIUkVBRF9MT0NBTCBKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X3Byb3RvLCBtaW5uZXRfcmVxdWVzdF9jdG9yOwoKZW51bSB7IFJFUVVFU1RfVFlQRSwgUkVRVUVTVF9NRVRIT0QsIFJFUVVFU1RfVVJJLCBSRVFVRVNUX1BBVEgsIFJFUVVFU1RfSEVBREVSUywgUkVRVUVTVF9BUlJBWUJVRkZFUiwgUkVRVUVTVF9URVhULCBSRVFVRVNUX0JPRFkgfTsKCnN0YXRpYyBjb25zdCBjaGFyKiBjb25zdCBtZXRob2RfbmFtZXNbXSA9IHsiR0VUIiwgIlBPU1QiLCAiT1BUSU9OUyIsICJQVVQiLCAiUEFUQ0giLCAiREVMRVRFIiwgIkNPTk5FQ1QiLCAiSEVBRCJ9OwoKY29uc3QgY2hhcioKbWV0aG9kX3N0cmluZyhlbnVtIGh0dHBfbWV0aG9kIG0pIHsKICBpZihtID49IDAgJiYgbSA8IGNvdW50b2YobWV0aG9kX25hbWVzKSkKICAgIHJldHVybiBtZXRob2RfbmFtZXNbbV07CiAgcmV0dXJuIDA7Cn0KCmludAptZXRob2RfbnVtYmVyKGNvbnN0IGNoYXIqIG5hbWUpIHsKICBpbnQgaSA9IDA7CiAgaWYobmFtZSkKICAgIGZvcihpID0gY291bnRvZihtZXRob2RfbmFtZXMpIC0gMTsgaSA+PSAwOyAtLWkpCiAgICAgIGlmKCFzdHJjYXNlY21wKG5hbWUsIG1ldGhvZF9uYW1lc1tpXSkpCiAgICAgICAgYnJlYWs7CiAgcmV0dXJuIGk7Cn0KCnZvaWQKcmVxdWVzdF9mb3JtYXQoc3RydWN0IGh0dHBfcmVxdWVzdCBjb25zdCogcmVxLCBjaGFyKiBidWYsIHNpemVfdCBsZW4sIEpTQ29udGV4dCogY3R4KSB7CiAgY2hhciogaGVhZGVycyA9IGJ1ZmZlcl9lc2NhcGVkKCZyZXEtPmhlYWRlcnMsIGN0eCk7CgogIHNucHJpbnRmKGJ1ZiwgbGVuLCBGR0MoMTk2LCAiTWlubmV0UmVxdWVzdCIpICIgeyBtZXRob2Q6ICclcycsIHVybDogJyVzJywgcGF0aDogJyVzJywgaGVhZGVyczogJyVzJyB9IiwgbWV0aG9kX25hbWUocmVxLT5tZXRob2QpLCByZXEtPnVybCwgcmVxLT5wYXRoLCBoZWFkZXJzKTsKCiAganNfZnJlZShjdHgsIGhlYWRlcnMpOwp9CgpjaGFyKgpyZXF1ZXN0X2R1bXAoc3RydWN0IGh0dHBfcmVxdWVzdCBjb25zdCogcmVxLCBKU0NvbnRleHQqIGN0eCkgewogIHN0YXRpYyBjaGFyIGJ1ZlsyMDQ4XTsKICByZXF1ZXN0X2Zvcm1hdChyZXEsIGJ1Ziwgc2l6ZW9mKGJ1ZiksIGN0eCk7CiAgcmV0dXJuIGJ1ZjsKfQoKdm9pZApyZXF1ZXN0X2luaXQoc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxLCBjb25zdCBjaGFyKiBwYXRoLCBjaGFyKiB1cmwsIGVudW0gaHR0cF9tZXRob2QgbWV0aG9kKSB7CiAgbWVtc2V0KHJlcSwgMCwgc2l6ZW9mKCpyZXEpKTsKCiAgcmVxLT5yZWZfY291bnQgPSAwOwoKICBpZihwYXRoKQogICAgcHN0cmNweShyZXEtPnBhdGgsIHNpemVvZihyZXEtPnBhdGgpLCBwYXRoKTsKCiAgcmVxLT51cmwgPSB1cmw7CiAgcmVxLT5tZXRob2QgPSBtZXRob2Q7Cn0KCnN0cnVjdCBodHRwX3JlcXVlc3QqCnJlcXVlc3RfbmV3KEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBwYXRoLCBjaGFyKiB1cmwsIE1pbm5ldEh0dHBNZXRob2QgbWV0aG9kKSB7CiAgTWlubmV0UmVxdWVzdCogcmVxOwoKICBpZigocmVxID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihNaW5uZXRSZXF1ZXN0KSkpKQogICAgcmVxdWVzdF9pbml0KHJlcSwgcGF0aCwgdXJsLCBtZXRob2QpOwoKICByZXR1cm4gcmVxOwp9CgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0KgpyZXF1ZXN0X2Zyb20oSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvcHRpb25zKSB7CiAgTWlubmV0UmVxdWVzdCogcmVxOwogIEpTVmFsdWUgdmFsdWU7CiAgY29uc3QgY2hhciAqdXJsLCAqcGF0aCwgKm1ldGhvZDsKCiAgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9wdGlvbnMsICJ1cmwiKTsKICB1cmwgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsdWUpOwoKICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb3B0aW9ucywgInBhdGgiKTsKICBwYXRoID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbHVlKTsKCiAgSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcHRpb25zLCAibWV0aG9kIik7CiAgbWV0aG9kID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbHVlKTsKCiAgSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcHRpb25zLCAiaGVhZGVycyIpOwoKICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CgogIHJlcXVlc3RfaW5pdChyZXEsIHBhdGgsIHVybCwgbWV0aG9kX251bWJlcihtZXRob2QpKTsKCiAgSlNfRnJlZUNTdHJpbmcoY3R4LCB1cmwpOwogIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcGF0aCk7CiAgSlNfRnJlZUNTdHJpbmcoY3R4LCBtZXRob2QpOwoKICByZXR1cm4gcmVxOwp9Cgp2b2lkCnJlcXVlc3RfemVybyhzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXEpIHsKICBtZW1zZXQocmVxLCAwLCBzaXplb2YoTWlubmV0UmVxdWVzdCkpOwogIHJlcS0+aGVhZGVycyA9IEJVRkZFUl8wKCk7CiAgcmVxLT5ib2R5ID0gQlVGRkVSXzAoKTsKfQoKc3RhdGljIGNvbnN0IGNoYXIqCmhlYWRlcl9nZXQoSlNDb250ZXh0KiBjdHgsIHNpemVfdCogbGVucCwgTWlubmV0QnVmZmVyKiBidWYsIGNvbnN0IGNoYXIqIG5hbWUpIHsKICBzaXplX3QgbGVuLCBuYW1lbGVuID0gc3RybGVuKG5hbWUpOwogIHVpbnQ4X3QgKngsICplbmQ7CgogIGZvcih4ID0gYnVmLT5zdGFydCwgZW5kID0gYnVmLT53cml0ZTsgeCA8IGVuZDsgeCArPSBsZW4gKyAxKSB7CiAgICBsZW4gPSBieXRlX2Nocih4LCBlbmQgLSB4LCAnXG4nKTsKCiAgICAvKiAgIGlmKG5hbWVsZW4gPj0gbGVuKQogICAgICAgICBjb250aW51ZTsqLwogICAgaWYoYnl0ZV9jaHIoeCwgbGVuLCAnOicpICE9IG5hbWVsZW4gfHwgc3RybmNhc2VjbXAobmFtZSwgKGNvbnN0IGNoYXIqKXgsIG5hbWVsZW4pKQogICAgICBjb250aW51ZTsKCiAgICBpZih4W25hbWVsZW5dID09ICc6JykKICAgICAgbmFtZWxlbisrOwogICAgaWYoaXNzcGFjZSh4W25hbWVsZW5dKSkKICAgICAgbmFtZWxlbisrOwoKICAgIGlmKGxlbnApCiAgICAgICpsZW5wID0gbGVuIC0gbmFtZWxlbjsKICAgIHJldHVybiAoY29uc3QgY2hhciopeCArIG5hbWVsZW47CiAgfQogIHJldHVybiAwOwp9CgpKU1ZhbHVlCm1pbm5ldF9yZXF1ZXN0X2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1ZhbHVlIHByb3RvLCBvYmo7CiAgTWlubmV0UmVxdWVzdCogcmVxOwoKICBpZighKHJlcSA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2YoTWlubmV0UmVxdWVzdCkpKSkKICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlCiAgICAgY2xhc3MgaXMgZXh0ZW5kZWQuICovCiAgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICBwcm90byA9IEpTX0R1cFZhbHVlKGN0eCwgbWlubmV0X3JlcXVlc3RfcHJvdG8pOwoKICBvYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcHJvdG8sIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKTsKICBKU19GcmVlVmFsdWUoY3R4LCBwcm90byk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKCiAgcmVxdWVzdF96ZXJvKHJlcSk7CgogIEpTX1NldE9wYXF1ZShvYmosIHJlcSk7CgogIGlmKGFyZ2MgPj0gMSkgewogICAgaWYoSlNfSXNTdHJpbmcoYXJndlswXSkpIHsKICAgICAgY29uc3QgY2hhciogc3RyID0gSlNfVG9DU3RyaW5nKGN0eCwgYXJndlswXSk7CiAgICAgIHJlcS0+dXJsID0ganNfc3RyZHVwKGN0eCwgc3RyKTsKICAgICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzdHIpOwogICAgfQogICAgYXJnYy0tOwogICAgYXJndisrOwogIH0KCiAgaWYoYXJnYyA+PSAxICYmIEpTX0lzT2JqZWN0KGFyZ3ZbMF0pKQogICAganNfY29weV9wcm9wZXJ0aWVzKGN0eCwgb2JqLCBhcmd2WzBdLCBKU19HUE5fU1RSSU5HX01BU0spOwoKICByZXEtPnJlYWRfb25seSA9IFRSVUU7CiAgcmV0dXJuIG9iajsKCmZhaWw6CiAganNfZnJlZShjdHgsIHJlcSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpKU1ZhbHVlCm1pbm5ldF9yZXF1ZXN0X25ldyhKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogcGF0aCwgY29uc3QgY2hhciogdXJsLCBlbnVtIGh0dHBfbWV0aG9kIG1ldGhvZCkgewogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcTsKCiAgaWYoIShyZXEgPSByZXF1ZXN0X25ldyhjdHgsIDAsIDAsIDApKSkKICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIHJlcXVlc3RfaW5pdChyZXEsIHBhdGgsIGpzX3N0cmR1cChjdHgsIHVybCksIG1ldGhvZCk7CgogIHJldHVybiBtaW5uZXRfcmVxdWVzdF93cmFwKGN0eCwgcmVxKTsKfQoKSlNWYWx1ZQptaW5uZXRfcmVxdWVzdF93cmFwKEpTQ29udGV4dCogY3R4LCBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXEpIHsKICBKU1ZhbHVlIHJldCA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQpOwoKICBpZihKU19Jc0V4Y2VwdGlvbihyZXQpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgSlNfU2V0T3BhcXVlKHJldCwgcmVxKTsKCiAgKytyZXEtPnJlZl9jb3VudDsKCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKbWlubmV0X3JlcXVlc3RfZ2V0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBtYWdpYykgewogIE1pbm5ldFJlcXVlc3QqIHJlcTsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoIShyZXEgPSBtaW5uZXRfcmVxdWVzdF9kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgUkVRVUVTVF9NRVRIT0Q6IHsKICAgICAgcmV0ID0gSlNfTmV3U3RyaW5nKGN0eCwgbWV0aG9kX25hbWUocmVxLT5tZXRob2QpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFUVVFU1RfVFlQRTogewogICAgICByZXQgPSBKU19OZXdJbnQzMihjdHgsIHJlcS0+bWV0aG9kKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFUVVFU1RfVVJJOiB7CiAgICAgIGlmKHJlcS0+dXJsKQogICAgICAgIHJldCA9IEpTX05ld1N0cmluZyhjdHgsIHJlcS0+dXJsKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFUVVFU1RfUEFUSDogewogICAgICByZXQgPSByZXEtPnBhdGhbMF0gPyBKU19OZXdTdHJpbmcoY3R4LCByZXEtPnBhdGgpIDogSlNfTlVMTDsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFUVVFU1RfSEVBREVSUzogewogICAgICByZXQgPSBoZWFkZXJzX29iamVjdChjdHgsICZyZXEtPmhlYWRlcnMpOwogICAgICAvLyByZXQgPSBidWZmZXJfdG9zdHJpbmcoJnJlcS0+aGVhZGVycywgY3R4KTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFUVVFU1RfQVJSQVlCVUZGRVI6IHsKICAgICAgcmV0ID0gYnVmZmVyX0hFQUQoJnJlcS0+Ym9keSkgPyBidWZmZXJfdG9hcnJheWJ1ZmZlcigmcmVxLT5ib2R5LCBjdHgpIDogSlNfTlVMTDsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFUVVFU1RfVEVYVDogewogICAgICByZXQgPSBidWZmZXJfSEVBRCgmcmVxLT5ib2R5KSA/IGJ1ZmZlcl90b3N0cmluZygmcmVxLT5ib2R5LCBjdHgpIDogSlNfTlVMTDsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFUVVFU1RfQk9EWTogewogICAgICBpZihidWZmZXJfSEVBRCgmcmVxLT5ib2R5KSkgewogICAgICAgIHNpemVfdCB0eXBlbGVuOwogICAgICAgIGNvbnN0IGNoYXIqIHR5cGUgPSBoZWFkZXJfZ2V0KGN0eCwgJnR5cGVsZW4sICZyZXEtPmhlYWRlcnMsICJjb250ZW50LXR5cGUiKTsKCiAgICAgICAgcmV0ID0gYnVmZmVyX3Rvc3RyaW5nKCZyZXEtPmJvZHksIGN0eCk7CiAgICAgICAgLy8gIHJldCA9IG1pbm5ldF9zdHJlYW1fbmV3KGN0eCwgdHlwZSwgdHlwZWxlbiwgYmxvY2tfQkVHSU4oJnJlcS0+Ym9keSksIGJ1ZmZlcl9IRUFEKCZyZXEtPmJvZHkpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXQgPSBKU19OVUxMOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQptaW5uZXRfcmVxdWVzdF9zZXQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgSlNWYWx1ZUNvbnN0IHZhbHVlLCBpbnQgbWFnaWMpIHsKICBNaW5uZXRSZXF1ZXN0KiByZXE7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgY29uc3QgY2hhciogc3RyOwogIHNpemVfdCBsZW47CiAgaWYoIShyZXEgPSBKU19HZXRPcGFxdWUyKGN0eCwgdGhpc192YWwsIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBpZihyZXEtPnJlYWRfb25seSkKICAgIHJldHVybiBKU19UaHJvd1JlZmVyZW5jZUVycm9yKGN0eCwgIlJlcXVlc3Qgb2JqZWN0IGlzIHJlYWQtb25seSIpOwoKICBzdHIgPSBKU19Ub0NTdHJpbmdMZW4oY3R4LCAmbGVuLCB2YWx1ZSk7CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBSRVFVRVNUX01FVEhPRDoKICAgIGNhc2UgUkVRVUVTVF9UWVBFOiB7CiAgICAgIGludDMyX3QgbSA9IC0xOwogICAgICBpZihKU19Jc051bWJlcih2YWx1ZSkpCiAgICAgICAgSlNfVG9JbnQzMihjdHgsICZtLCB2YWx1ZSk7CiAgICAgIGVsc2UKICAgICAgICBtID0gbWV0aG9kX251bWJlcihzdHIpOwogICAgICBpZihtID49IDAgJiYgbWV0aG9kX3N0cmluZyhtKSkKICAgICAgICByZXEtPm1ldGhvZCA9IG07CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVFVRVNUX1VSSTogewogICAgICBpZihyZXEtPnVybCkgewogICAgICAgIGpzX2ZyZWUoY3R4LCByZXEtPnVybCk7CiAgICAgICAgcmVxLT51cmwgPSAwOwogICAgICB9CiAgICAgIHJlcS0+dXJsID0ganNfc3RyZHVwKGN0eCwgc3RyKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFUVVFU1RfUEFUSDogewogICAgICBwc3RyY3B5KHJlcS0+cGF0aCwgc2l6ZW9mKHJlcS0+cGF0aCksIHN0cik7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVFVRVNUX0hFQURFUlM6IHsKICAgICAgcmV0ID0gSlNfVGhyb3dSZWZlcmVuY2VFcnJvcihjdHgsICJDYW5ub3Qgc2V0IGhlYWRlcnMiKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICBKU19GcmVlQ1N0cmluZyhjdHgsIHN0cik7CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyB2b2lkCm1pbm5ldF9yZXF1ZXN0X2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCBKU1ZhbHVlIHZhbCkgewogIE1pbm5ldFJlcXVlc3QqIHJlcSA9IEpTX0dldE9wYXF1ZSh2YWwsIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKTsKICBpZihyZXEgJiYgLS1yZXEtPnJlZl9jb3VudCA9PSAwKSB7CiAgICBpZihyZXEtPnVybCkKICAgICAganNfZnJlZV9ydChydCwgcmVxLT51cmwpOwoKICAgIGpzX2ZyZWVfcnQocnQsIHJlcSk7CiAgfQp9CgpKU0NsYXNzRGVmIG1pbm5ldF9yZXF1ZXN0X2NsYXNzID0gewogICAgIk1pbm5ldFJlcXVlc3QiLAogICAgLmZpbmFsaXplciA9IG1pbm5ldF9yZXF1ZXN0X2ZpbmFsaXplciwKfTsKCmNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF9yZXF1ZXN0X3Byb3RvX2Z1bmNzW10gPSB7CiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigidHlwZSIsIG1pbm5ldF9yZXF1ZXN0X2dldCwgbWlubmV0X3JlcXVlc3Rfc2V0LCBSRVFVRVNUX1RZUEUsIDApLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoIm1ldGhvZCIsIG1pbm5ldF9yZXF1ZXN0X2dldCwgbWlubmV0X3JlcXVlc3Rfc2V0LCBSRVFVRVNUX01FVEhPRCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJ1cmwiLCBtaW5uZXRfcmVxdWVzdF9nZXQsIG1pbm5ldF9yZXF1ZXN0X3NldCwgUkVRVUVTVF9VUkksIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigicGF0aCIsIG1pbm5ldF9yZXF1ZXN0X2dldCwgMCwgUkVRVUVTVF9QQVRILCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImhlYWRlcnMiLCBtaW5uZXRfcmVxdWVzdF9nZXQsIDAsIFJFUVVFU1RfSEVBREVSUywgMCksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigiYXJyYXlCdWZmZXIiLCBtaW5uZXRfcmVxdWVzdF9nZXQsIDAsIFJFUVVFU1RfQVJSQVlCVUZGRVIsIDApLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoInRleHQiLCBtaW5uZXRfcmVxdWVzdF9nZXQsIDAsIFJFUVVFU1RfVEVYVCwgMCksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigiYm9keSIsIG1pbm5ldF9yZXF1ZXN0X2dldCwgMCwgUkVRVUVTVF9CT0RZLCAwKSwKICAgIEpTX1BST1BfU1RSSU5HX0RFRigiW1N5bWJvbC50b1N0cmluZ1RhZ10iLCAiTWlubmV0UmVxdWVzdCIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKfTsKCmNvbnN0IHNpemVfdCBtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jc19zaXplID0gY291bnRvZihtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jcyk7CgAAAAAAAAAABSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiBUAAAAAAACUFQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-request.h",
			"settings":
			{
				"buffer_size": 2470,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					27,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAClCQAAI2lmbmRlZiBNSU5ORVRfUkVRVUVTVF9ICiNkZWZpbmUgTUlOTkVUX1JFUVVFU1RfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJidWZmZXIuaCIKCnN0cnVjdCBzb2NrZXQ7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwoKZW51bSBodHRwX21ldGhvZCB7IE1FVEhPRF9HRVQgPSAwLCBNRVRIT0RfUE9TVCwgTUVUSE9EX09QVElPTlMsIE1FVEhPRF9QVVQsIE1FVEhPRF9QQVRDSCwgTUVUSE9EX0RFTEVURSwgTUVUSE9EX0NPTk5FQ1QsIE1FVEhPRF9IRUFEIH07Cgp0eXBlZGVmIGVudW0gaHR0cF9tZXRob2QgTWlubmV0SHR0cE1ldGhvZDsKCmNvbnN0IGNoYXIqIG1ldGhvZF9zdHJpbmcoZW51bSBodHRwX21ldGhvZCk7CmludCBtZXRob2RfbnVtYmVyKGNvbnN0IGNoYXIqKTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfcmVxdWVzdCB7CiAgaW50IHJlZl9jb3VudDsKICBCT09MIHJlYWRfb25seTsKICBlbnVtIGh0dHBfbWV0aG9kIG1ldGhvZDsKICBjaGFyKiB1cmw7CiAgc3RydWN0IGJ5dGVfYnVmZmVyIGhlYWRlcnMsIGJvZHk7CiAgY2hhciBwYXRoWzI1Nl07Cn0gTWlubmV0UmVxdWVzdDsKCmNoYXIqIHJlcXVlc3RfZHVtcChzdHJ1Y3QgaHR0cF9yZXF1ZXN0IGNvbnN0KiwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIHJlcXVlc3RfaW5pdChzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiwgY29uc3QgY2hhciogcGF0aCwgY2hhciogdXJsLCBNaW5uZXRIdHRwTWV0aG9kKTsKc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxdWVzdF9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciogcGF0aCwgY2hhciogdXJsLCBNaW5uZXRIdHRwTWV0aG9kKTsKc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxdWVzdF9mcm9tKEpTQ29udGV4dCosIEpTVmFsdWUgb3B0aW9ucyk7CnZvaWQgcmVxdWVzdF96ZXJvKHN0cnVjdCBodHRwX3JlcXVlc3QqKTsKSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlIG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlIGFyZ3ZbXSk7CkpTVmFsdWUgbWlubmV0X3JlcXVlc3RfbmV3KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqIHBhdGgsIGNvbnN0IGNoYXIqIHVybCwgZW51bSBodHRwX21ldGhvZCk7CkpTVmFsdWUgbWlubmV0X3JlcXVlc3Rfd3JhcChKU0NvbnRleHQqLCBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXEpOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X3Byb3RvLCBtaW5uZXRfcmVxdWVzdF9jdG9yOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfcmVxdWVzdF9jbGFzc19pZDsKZXh0ZXJuIEpTQ2xhc3NEZWYgbWlubmV0X3JlcXVlc3RfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF9yZXF1ZXN0X3Byb3RvX2Z1bmNzX3NpemU7CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlcXVlc3QqCm1pbm5ldF9yZXF1ZXN0X2RhdGEoSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUob2JqLCBtaW5uZXRfcmVxdWVzdF9jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0UmVxdWVzdCoKbWlubmV0X3JlcXVlc3RfZGF0YTIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIGNoYXIqCmx3c191cmlfYW5kX21ldGhvZChzdHJ1Y3QgbHdzKiB3c2ksIEpTQ29udGV4dCogY3R4LCBNaW5uZXRIdHRwTWV0aG9kKiBtZXRob2QpIHsKICBjaGFyKiB1cmw7CgogIGlmKCh1cmwgPSBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX1BPU1RfVVJJKSkpCiAgICAqbWV0aG9kID0gTUVUSE9EX1BPU1Q7CiAgZWxzZSBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9HRVRfVVJJKSkpCiAgICAqbWV0aG9kID0gTUVUSE9EX0dFVDsKICBlbHNlIGlmKCh1cmwgPSBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0hFQURfVVJJKSkpCiAgICAqbWV0aG9kID0gTUVUSE9EX0hFQUQ7CiAgZWxzZSBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9PUFRJT05TX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9PUFRJT05TOwoKICByZXR1cm4gdXJsOwp9CgpzdGF0aWMgaW5saW5lIGNvbnN0IGNoYXIqCm1ldGhvZF9uYW1lKGludCBtKSB7CiAgaWYobSA8IDApCiAgICByZXR1cm4gIi0xIjsKICByZXR1cm4gKChjb25zdCBjaGFyKiBjb25zdFtdKXsiR0VUIiwgIlBPU1QiLCAiT1BUSU9OUyIsICJQVVQiLCAiUEFUQ0giLCAiREVMRVRFIiwgIkNPTk5FQ1QiLCAiSEVBRCJ9KVttXTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9SRVFVRVNUX0ggKi8KAAAAAAAAAACsCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACsCQAAI2lmbmRlZiBNSU5ORVRfUkVRVUVTVF9ICiNkZWZpbmUgTUlOTkVUX1JFUVVFU1RfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3Qgc29ja2V0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCmVudW0gaHR0cF9tZXRob2QgeyBNRVRIT0RfR0VUID0gMCwgTUVUSE9EX1BPU1QsIE1FVEhPRF9PUFRJT05TLCBNRVRIT0RfUFVULCBNRVRIT0RfUEFUQ0gsIE1FVEhPRF9ERUxFVEUsIE1FVEhPRF9DT05ORUNULCBNRVRIT0RfSEVBRCB9OwoKdHlwZWRlZiBlbnVtIGh0dHBfbWV0aG9kIE1pbm5ldEh0dHBNZXRob2Q7Cgpjb25zdCBjaGFyKiBtZXRob2Rfc3RyaW5nKGVudW0gaHR0cF9tZXRob2QpOwppbnQgbWV0aG9kX251bWJlcihjb25zdCBjaGFyKik7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX3JlcXVlc3QgewogIGludCByZWZfY291bnQ7CiAgQk9PTCByZWFkX29ubHk7CiAgZW51bSBodHRwX21ldGhvZCBtZXRob2Q7CiAgY2hhciogdXJsOwogIHN0cnVjdCBieXRlX2J1ZmZlciBoZWFkZXJzLCBib2R5OwogIGNoYXIgcGF0aFsyNTZdOwp9IE1pbm5ldFJlcXVlc3Q7CgpjaGFyKiByZXF1ZXN0X2R1bXAoc3RydWN0IGh0dHBfcmVxdWVzdCBjb25zdCosIEpTQ29udGV4dCogY3R4KTsKdm9pZCByZXF1ZXN0X2luaXQoc3RydWN0IGh0dHBfcmVxdWVzdCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfbmV3KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlIG9wdGlvbnMpOwp2b2lkIHJlcXVlc3RfemVybyhzdHJ1Y3QgaHR0cF9yZXF1ZXN0Kik7CkpTVmFsdWUgbWlubmV0X3JlcXVlc3RfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X25ldyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKiBwYXRoLCBjb25zdCBjaGFyKiB1cmwsIGVudW0gaHR0cF9tZXRob2QpOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X3dyYXAoSlNDb250ZXh0Kiwgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfY3RvcjsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQ7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yZXF1ZXN0X2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBNaW5uZXRSZXF1ZXN0KgptaW5uZXRfcmVxdWVzdF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlcXVlc3QqCm1pbm5ldF9yZXF1ZXN0X2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpsd3NfdXJpX2FuZF9tZXRob2Qoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCwgTWlubmV0SHR0cE1ldGhvZCogbWV0aG9kKSB7CiAgY2hhciogdXJsOwoKICBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9QT1NUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9QT1NUOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fR0VUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9HRVQ7CiAgZWxzZSBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9IRUFEX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9IRUFEOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fT1BUSU9OU19VUkkpKSkKICAgICptZXRob2QgPSBNRVRIT0RfT1BUSU9OUzsKCiAgcmV0dXJuIHVybDsKfQoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgptZXRob2RfbmFtZShpbnQgbSkgewogIGlmKG0gPCAwKQogICAgcmV0dXJuICItMSI7CiAgcmV0dXJuICgoY29uc3QgY2hhciogY29uc3RbXSl7IkdFVCIsICJQT1NUIiwgIk9QVElPTlMiLCAiUFVUIiwgIlBBVENIIiwgIkRFTEVURSIsICJDT05ORUNUIiwgIkhFQUQifSlbbV07Cn0KCiNlbmRpZiAvKiBNSU5ORVRfUkVRVUVTVF9IICovCgAAAAAAAAAArAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACsCQAAI2lmbmRlZiBNSU5ORVRfUkVRVUVTVF9ICiNkZWZpbmUgTUlOTkVUX1JFUVVFU1RfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3Qgc29ja2V0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCmVudW0gaHR0cF9tZXRob2QgeyBNRVRIT0RfR0VUID0gMCwgTUVUSE9EX1BPU1QsIE1FVEhPRF9PUFRJT05TLCBNRVRIT0RfUFVULCBNRVRIT0RfUEFUQ0gsIE1FVEhPRF9ERUxFVEUsIE1FVEhPRF9DT05ORUNULCBNRVRIT0RfSEVBRCB9OwoKdHlwZWRlZiBlbnVtIGh0dHBfbWV0aG9kIE1pbm5ldEh0dHBNZXRob2Q7Cgpjb25zdCBjaGFyKiBtZXRob2Rfc3RyaW5nKGVudW0gaHR0cF9tZXRob2QpOwppbnQgbWV0aG9kX251bWJlcihjb25zdCBjaGFyKik7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX3JlcXVlc3QgewogIGludCByZWZfY291bnQ7CiAgQk9PTCByZWFkX29ubHk7CiAgZW51bSBodHRwX21ldGhvZCBtZXRob2Q7CiAgY2hhciogdXJsOwogIHN0cnVjdCBieXRlX2J1ZmZlciBoZWFkZXJzLCBib2R5OwogIGNoYXIgcGF0aFsyNTZdOwp9IE1pbm5ldFJlcXVlc3Q7CgpjaGFyKiByZXF1ZXN0X2R1bXAoc3RydWN0IGh0dHBfcmVxdWVzdCBjb25zdCosIEpTQ29udGV4dCogY3R4KTsKdm9pZCByZXF1ZXN0X2luaXQoc3RydWN0IGh0dHBfcmVxdWVzdCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfbmV3KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlIG9wdGlvbnMpOwp2b2lkIHJlcXVlc3RfemVybyhzdHJ1Y3QgaHR0cF9yZXF1ZXN0Kik7CkpTVmFsdWUgbWlubmV0X3JlcXVlc3RfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X25ldyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKiBwYXRoLCBjb25zdCBjaGFyKiB1cmwsIGVudW0gaHR0cF9tZXRob2QpOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X3dyYXAoSlNDb250ZXh0Kiwgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfY3RvcjsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQ7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yZXF1ZXN0X2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBNaW5uZXRSZXF1ZXN0KgptaW5uZXRfcmVxdWVzdF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlcXVlc3QqCm1pbm5ldF9yZXF1ZXN0X2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpsd3NfdXJpX2FuZF9tZXRob2Qoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCwgTWlubmV0SHR0cE1ldGhvZCogbWV0aG9kKSB7CiAgY2hhciogdXJsOwoKICBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9QT1NUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9QT1NUOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fR0VUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9HRVQ7CiAgZWxzZSBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9IRUFEX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9IRUFEOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fT1BUSU9OU19VUkkpKSkKICAgICptZXRob2QgPSBNRVRIT0RfT1BUSU9OUzsKCiAgcmV0dXJuIHVybDsKfQoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgptZXRob2RfbmFtZShpbnQgbSkgewogIGlmKG0gPCAwKQogICAgcmV0dXJuICItMSI7CiAgcmV0dXJuICgoY29uc3QgY2hhciogY29uc3RbXSl7IkdFVCIsICJQT1NUIiwgIk9QVElPTlMiLCAiUFVUIiwgIlBBVENIIiwgIkRFTEVURSIsICJDT05ORUNUIiwgIkhFQUQifSlbbV07Cn0KCiNlbmRpZiAvKiBNSU5ORVRfUkVRVUVTVF9IICovCgAAAAAAAAAArAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACsCQAAI2lmbmRlZiBNSU5ORVRfUkVRVUVTVF9ICiNkZWZpbmUgTUlOTkVUX1JFUVVFU1RfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3Qgc29ja2V0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCmVudW0gaHR0cF9tZXRob2QgeyBNRVRIT0RfR0VUID0gMCwgTUVUSE9EX1BPU1QsIE1FVEhPRF9PUFRJT05TLCBNRVRIT0RfUFVULCBNRVRIT0RfUEFUQ0gsIE1FVEhPRF9ERUxFVEUsIE1FVEhPRF9DT05ORUNULCBNRVRIT0RfSEVBRCB9OwoKdHlwZWRlZiBlbnVtIGh0dHBfbWV0aG9kIE1pbm5ldEh0dHBNZXRob2Q7Cgpjb25zdCBjaGFyKiBtZXRob2Rfc3RyaW5nKGVudW0gaHR0cF9tZXRob2QpOwppbnQgbWV0aG9kX251bWJlcihjb25zdCBjaGFyKik7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX3JlcXVlc3QgewogIGludCByZWZfY291bnQ7CiAgQk9PTCByZWFkX29ubHk7CiAgZW51bSBodHRwX21ldGhvZCBtZXRob2Q7CiAgY2hhciogdXJsOwogIHN0cnVjdCBieXRlX2J1ZmZlciBoZWFkZXJzLCBib2R5OwogIGNoYXIgcGF0aFsyNTZdOwp9IE1pbm5ldFJlcXVlc3Q7CgpjaGFyKiByZXF1ZXN0X2R1bXAoc3RydWN0IGh0dHBfcmVxdWVzdCBjb25zdCosIEpTQ29udGV4dCogY3R4KTsKdm9pZCByZXF1ZXN0X2luaXQoc3RydWN0IGh0dHBfcmVxdWVzdCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfbmV3KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlIG9wdGlvbnMpOwp2b2lkIHJlcXVlc3RfemVybyhzdHJ1Y3QgaHR0cF9yZXF1ZXN0Kik7CkpTVmFsdWUgbWlubmV0X3JlcXVlc3RfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X25ldyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKiBwYXRoLCBjb25zdCBjaGFyKiB1cmwsIGVudW0gaHR0cF9tZXRob2QpOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X3dyYXAoSlNDb250ZXh0Kiwgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfY3RvcjsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQ7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yZXF1ZXN0X2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBNaW5uZXRSZXF1ZXN0KgptaW5uZXRfcmVxdWVzdF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlcXVlc3QqCm1pbm5ldF9yZXF1ZXN0X2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpsd3NfdXJpX2FuZF9tZXRob2Qoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCwgTWlubmV0SHR0cE1ldGhvZCogbWV0aG9kKSB7CiAgY2hhciogdXJsOwoKICBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9QT1NUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9QT1NUOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fR0VUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9HRVQ7CiAgZWxzZSBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9IRUFEX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9IRUFEOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fT1BUSU9OU19VUkkpKSkKICAgICptZXRob2QgPSBNRVRIT0RfT1BUSU9OUzsKCiAgcmV0dXJuIHVybDsKfQoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgptZXRob2RfbmFtZShpbnQgbSkgewogIGlmKG0gPCAwKQogICAgcmV0dXJuICItMSI7CiAgcmV0dXJuICgoY29uc3QgY2hhciogY29uc3RbXSl7IkdFVCIsICJQT1NUIiwgIk9QVElPTlMiLCAiUFVUIiwgIlBBVENIIiwgIkRFTEVURSIsICJDT05ORUNUIiwgIkhFQUQifSlbbV07Cn0KCiNlbmRpZiAvKiBNSU5ORVRfUkVRVUVTVF9IICovCgAAAAAAAAAArAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACsCQAAI2lmbmRlZiBNSU5ORVRfUkVRVUVTVF9ICiNkZWZpbmUgTUlOTkVUX1JFUVVFU1RfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3Qgc29ja2V0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCmVudW0gaHR0cF9tZXRob2QgeyBNRVRIT0RfR0VUID0gMCwgTUVUSE9EX1BPU1QsIE1FVEhPRF9PUFRJT05TLCBNRVRIT0RfUFVULCBNRVRIT0RfUEFUQ0gsIE1FVEhPRF9ERUxFVEUsIE1FVEhPRF9DT05ORUNULCBNRVRIT0RfSEVBRCB9OwoKdHlwZWRlZiBlbnVtIGh0dHBfbWV0aG9kIE1pbm5ldEh0dHBNZXRob2Q7Cgpjb25zdCBjaGFyKiBtZXRob2Rfc3RyaW5nKGVudW0gaHR0cF9tZXRob2QpOwppbnQgbWV0aG9kX251bWJlcihjb25zdCBjaGFyKik7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX3JlcXVlc3QgewogIGludCByZWZfY291bnQ7CiAgQk9PTCByZWFkX29ubHk7CiAgZW51bSBodHRwX21ldGhvZCBtZXRob2Q7CiAgY2hhciogdXJsOwogIHN0cnVjdCBieXRlX2J1ZmZlciBoZWFkZXJzLCBib2R5OwogIGNoYXIgcGF0aFsyNTZdOwp9IE1pbm5ldFJlcXVlc3Q7CgpjaGFyKiByZXF1ZXN0X2R1bXAoc3RydWN0IGh0dHBfcmVxdWVzdCBjb25zdCosIEpTQ29udGV4dCogY3R4KTsKdm9pZCByZXF1ZXN0X2luaXQoc3RydWN0IGh0dHBfcmVxdWVzdCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfbmV3KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlIG9wdGlvbnMpOwp2b2lkIHJlcXVlc3RfemVybyhzdHJ1Y3QgaHR0cF9yZXF1ZXN0Kik7CkpTVmFsdWUgbWlubmV0X3JlcXVlc3RfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X25ldyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKiBwYXRoLCBjb25zdCBjaGFyKiB1cmwsIGVudW0gaHR0cF9tZXRob2QpOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X3dyYXAoSlNDb250ZXh0Kiwgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfY3RvcjsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQ7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yZXF1ZXN0X2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBNaW5uZXRSZXF1ZXN0KgptaW5uZXRfcmVxdWVzdF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlcXVlc3QqCm1pbm5ldF9yZXF1ZXN0X2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpsd3NfdXJpX2FuZF9tZXRob2Qoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCwgTWlubmV0SHR0cE1ldGhvZCogbWV0aG9kKSB7CiAgY2hhciogdXJsOwoKICBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9QT1NUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9QT1NUOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fR0VUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9HRVQ7CiAgZWxzZSBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9IRUFEX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9IRUFEOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fT1BUSU9OU19VUkkpKSkKICAgICptZXRob2QgPSBNRVRIT0RfT1BUSU9OUzsKCiAgcmV0dXJuIHVybDsKfQoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgptZXRob2RfbmFtZShpbnQgbSkgewogIGlmKG0gPCAwKQogICAgcmV0dXJuICItMSI7CiAgcmV0dXJuICgoY29uc3QgY2hhciogY29uc3RbXSl7IkdFVCIsICJQT1NUIiwgIk9QVElPTlMiLCAiUFVUIiwgIlBBVENIIiwgIkRFTEVURSIsICJDT05ORUNUIiwgIkhFQUQifSlbbV07Cn0KCiNlbmRpZiAvKiBNSU5ORVRfUkVRVUVTVF9IICovCgAAAAAAAAAArAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACsCQAAI2lmbmRlZiBNSU5ORVRfUkVRVUVTVF9ICiNkZWZpbmUgTUlOTkVUX1JFUVVFU1RfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3Qgc29ja2V0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCmVudW0gaHR0cF9tZXRob2QgeyBNRVRIT0RfR0VUID0gMCwgTUVUSE9EX1BPU1QsIE1FVEhPRF9PUFRJT05TLCBNRVRIT0RfUFVULCBNRVRIT0RfUEFUQ0gsIE1FVEhPRF9ERUxFVEUsIE1FVEhPRF9DT05ORUNULCBNRVRIT0RfSEVBRCB9OwoKdHlwZWRlZiBlbnVtIGh0dHBfbWV0aG9kIE1pbm5ldEh0dHBNZXRob2Q7Cgpjb25zdCBjaGFyKiBtZXRob2Rfc3RyaW5nKGVudW0gaHR0cF9tZXRob2QpOwppbnQgbWV0aG9kX251bWJlcihjb25zdCBjaGFyKik7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX3JlcXVlc3QgewogIGludCByZWZfY291bnQ7CiAgQk9PTCByZWFkX29ubHk7CiAgZW51bSBodHRwX21ldGhvZCBtZXRob2Q7CiAgY2hhciogdXJsOwogIHN0cnVjdCBieXRlX2J1ZmZlciBoZWFkZXJzLCBib2R5OwogIGNoYXIgcGF0aFsyNTZdOwp9IE1pbm5ldFJlcXVlc3Q7CgpjaGFyKiByZXF1ZXN0X2R1bXAoc3RydWN0IGh0dHBfcmVxdWVzdCBjb25zdCosIEpTQ29udGV4dCogY3R4KTsKdm9pZCByZXF1ZXN0X2luaXQoc3RydWN0IGh0dHBfcmVxdWVzdCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfbmV3KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlIG9wdGlvbnMpOwp2b2lkIHJlcXVlc3RfemVybyhzdHJ1Y3QgaHR0cF9yZXF1ZXN0Kik7CkpTVmFsdWUgbWlubmV0X3JlcXVlc3RfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X25ldyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKiBwYXRoLCBjb25zdCBjaGFyKiB1cmwsIGVudW0gaHR0cF9tZXRob2QpOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X3dyYXAoSlNDb250ZXh0Kiwgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfY3RvcjsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQ7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yZXF1ZXN0X2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBNaW5uZXRSZXF1ZXN0KgptaW5uZXRfcmVxdWVzdF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlcXVlc3QqCm1pbm5ldF9yZXF1ZXN0X2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpsd3NfdXJpX2FuZF9tZXRob2Qoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCwgTWlubmV0SHR0cE1ldGhvZCogbWV0aG9kKSB7CiAgY2hhciogdXJsOwoKICBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9QT1NUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9QT1NUOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fR0VUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9HRVQ7CiAgZWxzZSBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9IRUFEX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9IRUFEOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fT1BUSU9OU19VUkkpKSkKICAgICptZXRob2QgPSBNRVRIT0RfT1BUSU9OUzsKCiAgcmV0dXJuIHVybDsKfQoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgptZXRob2RfbmFtZShpbnQgbSkgewogIGlmKG0gPCAwKQogICAgcmV0dXJuICItMSI7CiAgcmV0dXJuICgoY29uc3QgY2hhciogY29uc3RbXSl7IkdFVCIsICJQT1NUIiwgIk9QVElPTlMiLCAiUFVUIiwgIlBBVENIIiwgIkRFTEVURSIsICJDT05ORUNUIiwgIkhFQUQifSlbbV07Cn0KCiNlbmRpZiAvKiBNSU5ORVRfUkVRVUVTVF9IICovCgAAAAAAAAAArAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACsCQAAI2lmbmRlZiBNSU5ORVRfUkVRVUVTVF9ICiNkZWZpbmUgTUlOTkVUX1JFUVVFU1RfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3Qgc29ja2V0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCmVudW0gaHR0cF9tZXRob2QgeyBNRVRIT0RfR0VUID0gMCwgTUVUSE9EX1BPU1QsIE1FVEhPRF9PUFRJT05TLCBNRVRIT0RfUFVULCBNRVRIT0RfUEFUQ0gsIE1FVEhPRF9ERUxFVEUsIE1FVEhPRF9DT05ORUNULCBNRVRIT0RfSEVBRCB9OwoKdHlwZWRlZiBlbnVtIGh0dHBfbWV0aG9kIE1pbm5ldEh0dHBNZXRob2Q7Cgpjb25zdCBjaGFyKiBtZXRob2Rfc3RyaW5nKGVudW0gaHR0cF9tZXRob2QpOwppbnQgbWV0aG9kX251bWJlcihjb25zdCBjaGFyKik7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX3JlcXVlc3QgewogIGludCByZWZfY291bnQ7CiAgQk9PTCByZWFkX29ubHk7CiAgZW51bSBodHRwX21ldGhvZCBtZXRob2Q7CiAgY2hhciogdXJsOwogIHN0cnVjdCBieXRlX2J1ZmZlciBoZWFkZXJzLCBib2R5OwogIGNoYXIgcGF0aFsyNTZdOwp9IE1pbm5ldFJlcXVlc3Q7CgpjaGFyKiByZXF1ZXN0X2R1bXAoc3RydWN0IGh0dHBfcmVxdWVzdCBjb25zdCosIEpTQ29udGV4dCogY3R4KTsKdm9pZCByZXF1ZXN0X2luaXQoc3RydWN0IGh0dHBfcmVxdWVzdCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfbmV3KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlIG9wdGlvbnMpOwp2b2lkIHJlcXVlc3RfemVybyhzdHJ1Y3QgaHR0cF9yZXF1ZXN0Kik7CkpTVmFsdWUgbWlubmV0X3JlcXVlc3RfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X25ldyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKiBwYXRoLCBjb25zdCBjaGFyKiB1cmwsIGVudW0gaHR0cF9tZXRob2QpOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X3dyYXAoSlNDb250ZXh0Kiwgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfY3RvcjsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQ7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yZXF1ZXN0X2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBNaW5uZXRSZXF1ZXN0KgptaW5uZXRfcmVxdWVzdF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlcXVlc3QqCm1pbm5ldF9yZXF1ZXN0X2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpsd3NfdXJpX2FuZF9tZXRob2Qoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCwgTWlubmV0SHR0cE1ldGhvZCogbWV0aG9kKSB7CiAgY2hhciogdXJsOwoKICBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9QT1NUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9QT1NUOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fR0VUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9HRVQ7CiAgZWxzZSBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9IRUFEX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9IRUFEOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fT1BUSU9OU19VUkkpKSkKICAgICptZXRob2QgPSBNRVRIT0RfT1BUSU9OUzsKCiAgcmV0dXJuIHVybDsKfQoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgptZXRob2RfbmFtZShpbnQgbSkgewogIGlmKG0gPCAwKQogICAgcmV0dXJuICItMSI7CiAgcmV0dXJuICgoY29uc3QgY2hhciogY29uc3RbXSl7IkdFVCIsICJQT1NUIiwgIk9QVElPTlMiLCAiUFVUIiwgIlBBVENIIiwgIkRFTEVURSIsICJDT05ORUNUIiwgIkhFQUQifSlbbV07Cn0KCiNlbmRpZiAvKiBNSU5ORVRfUkVRVUVTVF9IICovCgAAAAAAAAAArAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACsCQAAI2lmbmRlZiBNSU5ORVRfUkVRVUVTVF9ICiNkZWZpbmUgTUlOTkVUX1JFUVVFU1RfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3Qgc29ja2V0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCmVudW0gaHR0cF9tZXRob2QgeyBNRVRIT0RfR0VUID0gMCwgTUVUSE9EX1BPU1QsIE1FVEhPRF9PUFRJT05TLCBNRVRIT0RfUFVULCBNRVRIT0RfUEFUQ0gsIE1FVEhPRF9ERUxFVEUsIE1FVEhPRF9DT05ORUNULCBNRVRIT0RfSEVBRCB9OwoKdHlwZWRlZiBlbnVtIGh0dHBfbWV0aG9kIE1pbm5ldEh0dHBNZXRob2Q7Cgpjb25zdCBjaGFyKiBtZXRob2Rfc3RyaW5nKGVudW0gaHR0cF9tZXRob2QpOwppbnQgbWV0aG9kX251bWJlcihjb25zdCBjaGFyKik7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX3JlcXVlc3QgewogIGludCByZWZfY291bnQ7CiAgQk9PTCByZWFkX29ubHk7CiAgZW51bSBodHRwX21ldGhvZCBtZXRob2Q7CiAgY2hhciogdXJsOwogIHN0cnVjdCBieXRlX2J1ZmZlciBoZWFkZXJzLCBib2R5OwogIGNoYXIgcGF0aFsyNTZdOwp9IE1pbm5ldFJlcXVlc3Q7CgpjaGFyKiByZXF1ZXN0X2R1bXAoc3RydWN0IGh0dHBfcmVxdWVzdCBjb25zdCosIEpTQ29udGV4dCogY3R4KTsKdm9pZCByZXF1ZXN0X2luaXQoc3RydWN0IGh0dHBfcmVxdWVzdCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfbmV3KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlIG9wdGlvbnMpOwp2b2lkIHJlcXVlc3RfemVybyhzdHJ1Y3QgaHR0cF9yZXF1ZXN0Kik7CkpTVmFsdWUgbWlubmV0X3JlcXVlc3RfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X25ldyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKiBwYXRoLCBjb25zdCBjaGFyKiB1cmwsIGVudW0gaHR0cF9tZXRob2QpOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X3dyYXAoSlNDb250ZXh0Kiwgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfY3RvcjsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQ7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yZXF1ZXN0X2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBNaW5uZXRSZXF1ZXN0KgptaW5uZXRfcmVxdWVzdF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlcXVlc3QqCm1pbm5ldF9yZXF1ZXN0X2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpsd3NfdXJpX2FuZF9tZXRob2Qoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCwgTWlubmV0SHR0cE1ldGhvZCogbWV0aG9kKSB7CiAgY2hhciogdXJsOwoKICBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9QT1NUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9QT1NUOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fR0VUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9HRVQ7CiAgZWxzZSBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9IRUFEX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9IRUFEOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fT1BUSU9OU19VUkkpKSkKICAgICptZXRob2QgPSBNRVRIT0RfT1BUSU9OUzsKCiAgcmV0dXJuIHVybDsKfQoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgptZXRob2RfbmFtZShpbnQgbSkgewogIGlmKG0gPCAwKQogICAgcmV0dXJuICItMSI7CiAgcmV0dXJuICgoY29uc3QgY2hhciogY29uc3RbXSl7IkdFVCIsICJQT1NUIiwgIk9QVElPTlMiLCAiUFVUIiwgIlBBVENIIiwgIkRFTEVURSIsICJDT05ORUNUIiwgIkhFQUQifSlbbV07Cn0KCiNlbmRpZiAvKiBNSU5ORVRfUkVRVUVTVF9IICovCgAAAAAAAAAApgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACmCQAAI2lmbmRlZiBNSU5ORVRfUkVRVUVTVF9ICiNkZWZpbmUgTUlOTkVUX1JFUVVFU1RfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3Qgc29ja2V0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCmVudW0gaHR0cF9tZXRob2QgeyBNRVRIT0RfR0VUID0gMCwgTUVUSE9EX1BPU1QsIE1FVEhPRF9PUFRJT05TLCBNRVRIT0RfUFVULCBNRVRIT0RfUEFUQ0gsIE1FVEhPRF9ERUxFVEUsIE1FVEhPRF9DT05ORUNULCBNRVRIT0RfSEVBRCB9OwoKdHlwZWRlZiBlbnVtIGh0dHBfbWV0aG9kIE1pbm5ldEh0dHBNZXRob2Q7Cgpjb25zdCBjaGFyKiBtZXRob2Rfc3RyaW5nKGVudW0gaHR0cF9tZXRob2QpOwppbnQgbWV0aG9kX251bWJlcihjb25zdCBjaGFyKik7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX3JlcXVlc3QgewogIGludCByZWZfY291bnQ7CiAgQk9PTCByZWFkX29ubHk7CiAgZW51bSBodHRwX21ldGhvZCBtZXRob2Q7CiAgY2hhciogdXJsOwogIE1pbm5ldEJ1ZmZlciBoZWFkZXJzLCBib2R5OwogIGNoYXIgcGF0aFsyNTZdOwp9IE1pbm5ldFJlcXVlc3Q7CgpjaGFyKiByZXF1ZXN0X2R1bXAoc3RydWN0IGh0dHBfcmVxdWVzdCBjb25zdCosIEpTQ29udGV4dCogY3R4KTsKdm9pZCByZXF1ZXN0X2luaXQoc3RydWN0IGh0dHBfcmVxdWVzdCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfbmV3KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlIG9wdGlvbnMpOwp2b2lkIHJlcXVlc3RfemVybyhzdHJ1Y3QgaHR0cF9yZXF1ZXN0Kik7CkpTVmFsdWUgbWlubmV0X3JlcXVlc3RfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X25ldyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKiBwYXRoLCBjb25zdCBjaGFyKiB1cmwsIGVudW0gaHR0cF9tZXRob2QpOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X3dyYXAoSlNDb250ZXh0Kiwgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfY3RvcjsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQ7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yZXF1ZXN0X2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBNaW5uZXRSZXF1ZXN0KgptaW5uZXRfcmVxdWVzdF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlcXVlc3QqCm1pbm5ldF9yZXF1ZXN0X2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpsd3NfdXJpX2FuZF9tZXRob2Qoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCwgTWlubmV0SHR0cE1ldGhvZCogbWV0aG9kKSB7CiAgY2hhciogdXJsOwoKICBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9QT1NUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9QT1NUOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fR0VUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9HRVQ7CiAgZWxzZSBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9IRUFEX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9IRUFEOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fT1BUSU9OU19VUkkpKSkKICAgICptZXRob2QgPSBNRVRIT0RfT1BUSU9OUzsKCiAgcmV0dXJuIHVybDsKfQoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgptZXRob2RfbmFtZShpbnQgbSkgewogIGlmKG0gPCAwKQogICAgcmV0dXJuICItMSI7CiAgcmV0dXJuICgoY29uc3QgY2hhciogY29uc3RbXSl7IkdFVCIsICJQT1NUIiwgIk9QVElPTlMiLCAiUFVUIiwgIlBBVENIIiwgIkRFTEVURSIsICJDT05ORUNUIiwgIkhFQUQifSlbbV07Cn0KCiNlbmRpZiAvKiBNSU5ORVRfUkVRVUVTVF9IICovCgAAAAAAAAAApgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACmCQAAI2lmbmRlZiBNSU5ORVRfUkVRVUVTVF9ICiNkZWZpbmUgTUlOTkVUX1JFUVVFU1RfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3Qgc29ja2V0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCmVudW0gaHR0cF9tZXRob2QgeyBNRVRIT0RfR0VUID0gMCwgTUVUSE9EX1BPU1QsIE1FVEhPRF9PUFRJT05TLCBNRVRIT0RfUFVULCBNRVRIT0RfUEFUQ0gsIE1FVEhPRF9ERUxFVEUsIE1FVEhPRF9DT05ORUNULCBNRVRIT0RfSEVBRCB9OwoKdHlwZWRlZiBlbnVtIGh0dHBfbWV0aG9kIE1pbm5ldEh0dHBNZXRob2Q7Cgpjb25zdCBjaGFyKiBtZXRob2Rfc3RyaW5nKGVudW0gaHR0cF9tZXRob2QpOwppbnQgbWV0aG9kX251bWJlcihjb25zdCBjaGFyKik7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX3JlcXVlc3QgewogIGludCByZWZfY291bnQ7CiAgQk9PTCByZWFkX29ubHk7CiAgZW51bSBodHRwX21ldGhvZCBtZXRob2Q7CiAgY2hhciogdXJsOwogIE1pbm5ldEJ1ZmZlciBoZWFkZXJzLCBib2R5OwogIGNoYXIgcGF0aFsyNTZdOwp9IE1pbm5ldFJlcXVlc3Q7CgpjaGFyKiByZXF1ZXN0X2R1bXAoc3RydWN0IGh0dHBfcmVxdWVzdCBjb25zdCosIEpTQ29udGV4dCogY3R4KTsKdm9pZCByZXF1ZXN0X2luaXQoc3RydWN0IGh0dHBfcmVxdWVzdCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfbmV3KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlIG9wdGlvbnMpOwp2b2lkIHJlcXVlc3RfemVybyhzdHJ1Y3QgaHR0cF9yZXF1ZXN0Kik7CkpTVmFsdWUgbWlubmV0X3JlcXVlc3RfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X25ldyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKiBwYXRoLCBjb25zdCBjaGFyKiB1cmwsIGVudW0gaHR0cF9tZXRob2QpOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X3dyYXAoSlNDb250ZXh0Kiwgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfY3RvcjsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQ7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yZXF1ZXN0X2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBNaW5uZXRSZXF1ZXN0KgptaW5uZXRfcmVxdWVzdF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlcXVlc3QqCm1pbm5ldF9yZXF1ZXN0X2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpsd3NfdXJpX2FuZF9tZXRob2Qoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCwgTWlubmV0SHR0cE1ldGhvZCogbWV0aG9kKSB7CiAgY2hhciogdXJsOwoKICBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9QT1NUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9QT1NUOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fR0VUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9HRVQ7CiAgZWxzZSBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9IRUFEX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9IRUFEOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fT1BUSU9OU19VUkkpKSkKICAgICptZXRob2QgPSBNRVRIT0RfT1BUSU9OUzsKCiAgcmV0dXJuIHVybDsKfQoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgptZXRob2RfbmFtZShpbnQgbSkgewogIGlmKG0gPCAwKQogICAgcmV0dXJuICItMSI7CiAgcmV0dXJuICgoY29uc3QgY2hhciogY29uc3RbXSl7IkdFVCIsICJQT1NUIiwgIk9QVElPTlMiLCAiUFVUIiwgIlBBVENIIiwgIkRFTEVURSIsICJDT05ORUNUIiwgIkhFQUQifSlbbV07Cn0KCiNlbmRpZiAvKiBNSU5ORVRfUkVRVUVTVF9IICovCgAAAAAAAAAApgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACmCQAAI2lmbmRlZiBNSU5ORVRfUkVRVUVTVF9ICiNkZWZpbmUgTUlOTkVUX1JFUVVFU1RfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3Qgc29ja2V0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCmVudW0gaHR0cF9tZXRob2QgeyBNRVRIT0RfR0VUID0gMCwgTUVUSE9EX1BPU1QsIE1FVEhPRF9PUFRJT05TLCBNRVRIT0RfUFVULCBNRVRIT0RfUEFUQ0gsIE1FVEhPRF9ERUxFVEUsIE1FVEhPRF9DT05ORUNULCBNRVRIT0RfSEVBRCB9OwoKdHlwZWRlZiBlbnVtIGh0dHBfbWV0aG9kIE1pbm5ldEh0dHBNZXRob2Q7Cgpjb25zdCBjaGFyKiBtZXRob2Rfc3RyaW5nKGVudW0gaHR0cF9tZXRob2QpOwppbnQgbWV0aG9kX251bWJlcihjb25zdCBjaGFyKik7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX3JlcXVlc3QgewogIGludCByZWZfY291bnQ7CiAgQk9PTCByZWFkX29ubHk7CiAgZW51bSBodHRwX21ldGhvZCBtZXRob2Q7CiAgY2hhciogdXJsOwogIE1pbm5ldEJ1ZmZlciBoZWFkZXJzLCBib2R5OwogIGNoYXIgcGF0aFsyNTZdOwp9IE1pbm5ldFJlcXVlc3Q7CgpjaGFyKiByZXF1ZXN0X2R1bXAoc3RydWN0IGh0dHBfcmVxdWVzdCBjb25zdCosIEpTQ29udGV4dCogY3R4KTsKdm9pZCByZXF1ZXN0X2luaXQoc3RydWN0IGh0dHBfcmVxdWVzdCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfbmV3KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlIG9wdGlvbnMpOwp2b2lkIHJlcXVlc3RfemVybyhzdHJ1Y3QgaHR0cF9yZXF1ZXN0Kik7CkpTVmFsdWUgbWlubmV0X3JlcXVlc3RfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X25ldyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKiBwYXRoLCBjb25zdCBjaGFyKiB1cmwsIGVudW0gaHR0cF9tZXRob2QpOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X3dyYXAoSlNDb250ZXh0Kiwgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfY3RvcjsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQ7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yZXF1ZXN0X2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBNaW5uZXRSZXF1ZXN0KgptaW5uZXRfcmVxdWVzdF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlcXVlc3QqCm1pbm5ldF9yZXF1ZXN0X2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpsd3NfdXJpX2FuZF9tZXRob2Qoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCwgTWlubmV0SHR0cE1ldGhvZCogbWV0aG9kKSB7CiAgY2hhciogdXJsOwoKICBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9QT1NUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9QT1NUOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fR0VUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9HRVQ7CiAgZWxzZSBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9IRUFEX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9IRUFEOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fT1BUSU9OU19VUkkpKSkKICAgICptZXRob2QgPSBNRVRIT0RfT1BUSU9OUzsKCiAgcmV0dXJuIHVybDsKfQoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgptZXRob2RfbmFtZShpbnQgbSkgewogIGlmKG0gPCAwKQogICAgcmV0dXJuICItMSI7CiAgcmV0dXJuICgoY29uc3QgY2hhciogY29uc3RbXSl7IkdFVCIsICJQT1NUIiwgIk9QVElPTlMiLCAiUFVUIiwgIlBBVENIIiwgIkRFTEVURSIsICJDT05ORUNUIiwgIkhFQUQifSlbbV07Cn0KCiNlbmRpZiAvKiBNSU5ORVRfUkVRVUVTVF9IICovCgAAAAAAAAAApgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACmCQAAI2lmbmRlZiBNSU5ORVRfUkVRVUVTVF9ICiNkZWZpbmUgTUlOTkVUX1JFUVVFU1RfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3Qgc29ja2V0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCmVudW0gaHR0cF9tZXRob2QgeyBNRVRIT0RfR0VUID0gMCwgTUVUSE9EX1BPU1QsIE1FVEhPRF9PUFRJT05TLCBNRVRIT0RfUFVULCBNRVRIT0RfUEFUQ0gsIE1FVEhPRF9ERUxFVEUsIE1FVEhPRF9DT05ORUNULCBNRVRIT0RfSEVBRCB9OwoKdHlwZWRlZiBlbnVtIGh0dHBfbWV0aG9kIE1pbm5ldEh0dHBNZXRob2Q7Cgpjb25zdCBjaGFyKiBtZXRob2Rfc3RyaW5nKGVudW0gaHR0cF9tZXRob2QpOwppbnQgbWV0aG9kX251bWJlcihjb25zdCBjaGFyKik7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX3JlcXVlc3QgewogIGludCByZWZfY291bnQ7CiAgQk9PTCByZWFkX29ubHk7CiAgZW51bSBodHRwX21ldGhvZCBtZXRob2Q7CiAgY2hhciogdXJsOwogIE1pbm5ldEJ1ZmZlciBoZWFkZXJzLCBib2R5OwogIGNoYXIgcGF0aFsyNTZdOwp9IE1pbm5ldFJlcXVlc3Q7CgpjaGFyKiByZXF1ZXN0X2R1bXAoc3RydWN0IGh0dHBfcmVxdWVzdCBjb25zdCosIEpTQ29udGV4dCogY3R4KTsKdm9pZCByZXF1ZXN0X2luaXQoc3RydWN0IGh0dHBfcmVxdWVzdCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfbmV3KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqIHBhdGgsIGNoYXIqIHVybCwgTWlubmV0SHR0cE1ldGhvZCk7CnN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3RfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlIG9wdGlvbnMpOwp2b2lkIHJlcXVlc3RfemVybyhzdHJ1Y3QgaHR0cF9yZXF1ZXN0Kik7CkpTVmFsdWUgbWlubmV0X3JlcXVlc3RfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X25ldyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKiBwYXRoLCBjb25zdCBjaGFyKiB1cmwsIGVudW0gaHR0cF9tZXRob2QpOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X3dyYXAoSlNDb250ZXh0Kiwgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfY3RvcjsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQ7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yZXF1ZXN0X2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBNaW5uZXRSZXF1ZXN0KgptaW5uZXRfcmVxdWVzdF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlcXVlc3QqCm1pbm5ldF9yZXF1ZXN0X2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpsd3NfdXJpX2FuZF9tZXRob2Qoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCwgTWlubmV0SHR0cE1ldGhvZCogbWV0aG9kKSB7CiAgY2hhciogdXJsOwoKICBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9QT1NUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9QT1NUOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fR0VUX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9HRVQ7CiAgZWxzZSBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9IRUFEX1VSSSkpKQogICAgKm1ldGhvZCA9IE1FVEhPRF9IRUFEOwogIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fT1BUSU9OU19VUkkpKSkKICAgICptZXRob2QgPSBNRVRIT0RfT1BUSU9OUzsKCiAgcmV0dXJuIHVybDsKfQoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgptZXRob2RfbmFtZShpbnQgbSkgewogIGlmKG0gPCAwKQogICAgcmV0dXJuICItMSI7CiAgcmV0dXJuICgoY29uc3QgY2hhciogY29uc3RbXSl7IkdFVCIsICJQT1NUIiwgIk9QVElPTlMiLCAiUFVUIiwgIlBBVENIIiwgIkRFTEVURSIsICJDT05ORUNUIiwgIkhFQUQifSlbbV07Cn0KCiNlbmRpZiAvKiBNSU5ORVRfUkVRVUVTVF9IICovCgAAAAAAAAAApgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"cscope",
				"Cscope: Search using egrep pattern"
			],
			[
				"tags",
				"CTags: Show Symbols (all)"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"json",
				"Pretty JSON: Format JSON"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"inde",
				"Indentation: Detect"
			],
			[
				"add repo",
				"Package Control: Add Repository"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"cmake",
				"CMake Format: Format Selection"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"prettier",
				"Build With: prettier"
			],
			[
				"edit current",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"edit curr",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 393.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-net",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/buffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/buffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.sublime-project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-stream.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-response.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/client.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/common.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/inst/x86_64-linux-gnu/opt/libwebsockets-x86_64/include/libwebsockets/lws-write.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/ws/client-parser-ws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugins/protocol_dumb_increment.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-ws-close.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core/logs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core/private-lib-core.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/wsi.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-logs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-stream.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-fetch.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-server-http.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-server-ws.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/fetch.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/log.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/spawn.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/ws/ops-ws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/close.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-eventlib-exports.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/private-lib-core-net.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/assert.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/test-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/.clang-format",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core/context.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/jsutils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/www.google.ch",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-context-vhost.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-server-ed.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/client_http.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-netcat/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-file/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-proxy/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-proxy/minimal-raw-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-file/minimal-raw-file.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-netcat/minimal-raw-netcat.c",
		"/home/roman/.config/sublime-text/Packages/User/Themes/juicy-contrast.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-response.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-client.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/libwebsockets/include/libwebsockets/lws-client.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-post/minimal-http-client-post.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/x86_64-linux-debug.log",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-profile/libwebsockets/include/libwebsockets/lws-client.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-custom-headers/minimal-http-client-custom-headers.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-certinfo/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-certinfo/minimal-http-client-certinfo.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/jsutils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build-libwebsockets.sh",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-multi/minimal-http-client-multi.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/http/client/client-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/build/x86_64-linux-gnu/bin/lws-minimal-http-server-form-post-file",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c.orig",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client/minimal-http-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/dummy-callback.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/secure-streams/system/auth-sigv4/sign.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/http/header.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minimal-http-client-post",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/libwebsockets/include/libwebsockets/lws-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/plat/freertos/private-lib-plat-freertos.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/LICENSE",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-service.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lazy.tmp",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-dynamic/minimal-http-server-dynamic.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-raw-proxy/minimal-ws-raw-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-proxy/minimal-http-server-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/client-server/minimal-ws-proxy/protocol_lws_minimal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/client-server/minimal-ws-proxy/minimal-ws-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/inst/x86_64-linux-xenial/usr/local/include/libwebsockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/test-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-protocols-plugins.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/h1/ops-h1.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/tls/openssl/openssl-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/tls/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/libwebsockets/include/libwebsockets/lws-context-vhost.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/inst/x86_64-linux-xenial/usr/local/include/libwebsockets/lws-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/inst/x86_64-linux-gnu/opt/libwebsockets/lib/pkgconfig/libwebsockets_static.pc",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-proxy.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-smd/multi.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-h2-rxflow/minimal-http-client.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-captive-portal/minimal-http-client-captive-portal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-attach/minimal-http-client-attach.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-hugeurl/minimal-http-client-hugeurl.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-adopt-tcp/minimal-raw-adopt-tcp.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/libwebsockets/include/libwebsockets/lws-protocols-plugins.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/curl/docs/examples/http-post.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/cmake/FindOpenSSLbins.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/cmake/FindMiniz.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/CMakeLists.txt"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 119.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/[!i]*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/[!i]*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets,*.h,*.c",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets,*.h,*.c",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets/*,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets,*.h,*.c",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets/*,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include,*.h",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include,*.h",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets*/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/libwebsockets/*,-*/brotli/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/libwebsockets/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/libwebsockets/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net.*.c,*.h,*.txt,*.cmake,-*/build/*,-*/libwebsockets/*",
			"*.c,*.h,*.txt,*.cmake,-*/build/*",
			"*.c,*.h,*.txt,*.cmakem,-*/build/*",
			"*.c,*.h,*.txt,-*/build/*",
			"*.c,*.h,-*/build/*",
			"*.c,*.h,-*/build/*,-*/libwebsockets/*",
			"*.c,*.h,-*/build/*",
			"*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/net,-*/build/*,*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/net,-*/build/*,-*/libwebsockets/*,*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/net,-*/build/*,*.c,*.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"pollfd",
			"pfd",
			"wso->poll\\.",
			"lws_get_context",
			"closure",
			"opaque->poll\\.",
			"debug",
			"ws->pfd",
			"ws->opaque",
			"ws->opaque->status",
			"opaque->pfd",
			"from",
			"lws_ws",
			"c->",
			"closure",
			"c->poll",
			"MinnetPollFd",
			"minnet_handlers",
			"make_handler",
			"io_handler",
			"\n    ",
			"\n ",
			"block_toarraybuffer",
			"struct byte_block",
			"grow",
			"buf",
			"BUFFER_H",
			"alloc =",
			"msg",
			"lws_write",
			"buf\\.",
			"lws_write\\(",
			"lws_write",
			"CLIENT_WRITEABLE",
			"\"writ",
			"\"writable",
			"2writable",
			"writable",
			"send_buf",
			"std\\.",
			"(os|std)\\.",
			"(std|os)\\.",
			"std\\.",
			"os\\.",
			"std\\.",
			"os\\.",
			"net\\.",
			"std\\.",
			"os\\.",
			"net\\.",
			"os\\.",
			"escape",
			"net\\.",
			"os\\.",
			"std\\.",
			"os\\.",
			"std\\.",
			"lws_lc_tag",
			"lws_wsi_tag",
			"url_parse",
			"\"STATUS",
			"^(\\s*)printf\\(",
			"^\\s*printf",
			"\"WSI",
			"      std.exit(1);\n",
			"\n    ",
			"buffer",
			"DONE",
			"\"ws",
			"LWS_CALLBACK_WS_PEER_INITIATED_CLOSE",
			"PEER_INI",
			"WS_PEER_INITIATED_CLOSE",
			"lws_close_reason",
			"\"defpro",
			"'args'",
			"MinnetStatus",
			"returning",
			"returnig",
			"return",
			"-1",
			"LWS_CALLBACK_CLIENT_RECEIVE",
			"messag",
			"lws_close_reason",
			"wsi",
			"client.connect_info\\.",
			"LWS_CLOSE_STATUS_NORMAL",
			"opaque",
			"lws_close_free_wsi",
			"lws_get_ssl",
			"n =",
			"n",
			"status",
			"minnet_exception",
			"'pid'",
			"MODULE_PATH",
			"onnections",
			"base",
			"minnet_log_cb",
			"minnet_log_this",
			"method_number",
			"ESTABLISHED",
			"ESTABLISHED_CLIENT_HTTP",
			"%-25s",
			"\"client ",
			"listen",
			"abbreviate",
			"escape",
			"minnet_lws_unhandled",
			"\".*ws ",
			"\"server",
			"\"ws_call",
			"LWS_CALLBACK_OPENSSL_LOAD_EXTRA_SERVER_VERIFY_CERTS",
			"\"WS\"",
			"\\&client.context.info",
			"client.context.info\\.",
			"ontext",
			"minnet_client",
			"\\.info\\.",
			"->info\\.",
			"user =",
			"MinnetServer",
			"MinnetSession",
			"lws_callback_on_writable",
			"LWS_CALLBACK_SERVER_WRITEABLE",
			"LWS_CALLBACK_CLIENT_WRITEABLE",
			"LWS_CALLBACK_SERVER_WRITEABLE",
			"PROTOCOL_INI",
			"case LWS_CALLBACK_[^ ]*POLL"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"p",
			"pollfd",
			"pfd->",
			"opaque->pfd",
			"opaque",
			"ws->status",
			"ws->pfd",
			"opaque->pfd",
			"MinnetBlock",
			"block_SIZ",
			"blk",
			"MINNET_BUFFER_H",
			"buf->",
			"",
			"\\1fprintf(stderr,",
			"conn->",
			"reason",
			"%-38s",
			"info",
			"info->",
			".connect_info.",
			"->connect_info.",
			"args",
			"",
			"events",
			"log(`",
			"log",
			"type",
			"worker",
			"opaque->status",
			"client->status",
			"sess->status",
			"client->status",
			"opaque->responded",
			"opaque->closed",
			"opaque->connected",
			"client->cb_",
			"client.cb_",
			"client_cb.",
			"CLIENT",
			"client->",
			"client.cb_",
			"info->",
			"url->",
			"",
			"path",
			")) {",
			"method",
			"protocol",
			"raw",
			"ssl",
			"client.url.",
			"JSValueConst argv[]",
			"c->pfd.fd",
			"c->pfd.\\1",
			" c->fd",
			"lwsl_user",
			"cli",
			"MinnetSession",
			"minnet_client_ctx",
			"GETCBPROP",
			"",
			"\\1//\\2",
			"\\1//lwsl_user",
			"\\1//printf",
			"info->",
			"ctx",
			"minnet_client_lws",
			"conn",
			"OPTIONS_CB",
			"minnet_server.cb",
			"server_cb_",
			"info",
			"client->",
			"client",
			"client->",
			"client.cb_",
			"client.",
			"cli->\\1",
			"client->\\1",
			"minnet_client_wrap",
			"client->",
			"cmake_minimum_required",
			"memoize",
			"cb",
			"->client_ssl_",
			"cb->",
			"\"client ",
			" ,",
			" ",
			"minnet_server.lws",
			"minnet_server.context",
			"minnet_lws_context",
			"DROP",
			"vhost_options_",
			"lwsl_debug",
			" ",
			"OPENSSL_",
			"",
			"}\\\\\\n  ${",
			"LIBWEBSOCKETS_LIBRARY_DIR",
			"${ESC}",
			" ",
			"",
			"brotli",
			"broli",
			"libbrotli",
			"  ",
			"${MBEDTLS_LIBRARIES}",
			"${MBEDTLS_CRYPTO_LIBRARY}",
			"${MBEDTLS_X509_LIBRARY}",
			"${MBEDTLS_LIBRARY}",
			"${MBEDTLS_CRYPTO_LIBRARY}",
			"TARGET ",
			"CMAKE_INSTALL_PREFIX",
			":INTERNAL",
			":STRING",
			"lwsl_debug",
			"JSBuffer",
			"#",
			"CMAKE_INSTALL_LIBDIR",
			"CMAKE_",
			"",
			"wsi#%",
			"\\1lwsl_user(",
			"\\1lwsl_user",
			"->headers\\1",
			"REQUEST_HEADERS"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": false,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 145,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
							"function_name_status_row": 15,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									329,
									351
								],
								[
									417,
									423
								],
								[
									580,
									598
								],
								[
									865,
									871
								],
								[
									1261,
									1267
								],
								[
									1602,
									1621
								],
								[
									1712,
									1730
								],
								[
									1820,
									1838
								],
								[
									2027,
									2044
								]
							],
							"symlist":
							[
								"  main(...args)",
								"  arg =>",
								"  onConnect(ws, req)",
								"\t() =>",
								"\t() =>",
								"  onClose(ws, reason)",
								"  onError(ws, error)",
								"  onMessage(ws, msg)",
								"  onHttp(req, resp)"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643198977.68,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "minnet-server.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11986,
						"regions":
						{
						},
						"selection":
						[
							[
								9710,
								9710
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 288,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643194660.72,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5366.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "minnet-stream.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1149,
						"regions":
						{
						},
						"selection":
						[
							[
								202,
								213
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 11,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643194660.16,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "minnet-client-http.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 229,
						"regions":
						{
						},
						"selection":
						[
							[
								28,
								28
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tabs_extra_last_activated": 1643194991.14,
							"tabs_extra_last_activated_sheet_index": 2
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "minnet-client.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10055,
						"regions":
						{
						},
						"selection":
						[
							[
								9038,
								9038
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 299,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643195895.47,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5546.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "libwebsockets/minimal-examples/ws-client/minimal-ws-client-spam-tx-rx/minimal-ws-client.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5332,
						"regions":
						{
						},
						"selection":
						[
							[
								1378,
								1378
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 60,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643195894.01,
							"tabs_extra_last_activated_sheet_index": 4,
							"tabs_extra_moving":
							[
								3,
								1
							],
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1199.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "minnet-websocket.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18383,
						"regions":
						{
						},
						"selection":
						[
							[
								10758,
								10758
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 402,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643199159.31,
							"tabs_extra_last_activated_sheet_index": 5,
							"tabs_extra_moving":
							[
								3,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7586.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "libwebsockets/include/libwebsockets/lws-write.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10215,
						"regions":
						{
						},
						"selection":
						[
							[
								8963,
								8972
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 230,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1643188649.14,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4236.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "tests/test-client.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2337,
						"regions":
						{
							"col_0000DDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										1914,
										1924
									]
								],
								"scope": "col_0000DDFF"
							},
							"col_0000DDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000DDFF_circle.png",
								"regions":
								[
									[
										1889,
										1889
									]
								],
								"scope": "col_gutter"
							},
							"col_808080FF":
							{
								"flags": 16,
								"regions":
								[
								],
								"scope": "col_808080FF"
							},
							"col_808080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_808080FF_circle.png",
								"regions":
								[
								],
								"scope": "col_gutter"
							},
							"col_C0C0C0FF":
							{
								"flags": 16,
								"regions":
								[
									[
										905,
										915
									]
								],
								"scope": "col_C0C0C0FF"
							},
							"col_C0C0C0FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_C0C0C0FF_circle.png",
								"regions":
								[
									[
										874,
										874
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								2337,
								2100
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": -1,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643200008.43,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1159.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "minnet-client-http.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6072,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643194989.41,
							"tabs_extra_last_activated_sheet_index": 8,
							"tabs_extra_moving":
							[
								3,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "minnet-buffer.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6135,
						"regions":
						{
						},
						"selection":
						[
							[
								1708,
								1718
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 80,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643192961.56,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1320.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/home/roman/Projects/plot-cv/quickjs/quickjs.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 40236,
						"regions":
						{
						},
						"selection":
						[
							[
								28592,
								28625
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 788,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643190060.43,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 147.0,
						"translation.y": 15326.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "minnet-buffer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4091,
						"regions":
						{
						},
						"selection":
						[
							[
								2949,
								2949
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 86,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643193603.11,
							"tabs_extra_last_activated_sheet_index": 11,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 913.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "minnet.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20864,
						"regions":
						{
						},
						"selection":
						[
							[
								781,
								801
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 43,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643199662.74,
							"tabs_extra_last_activated_sheet_index": 12,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 480.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "minnet.c.orig",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20823,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643197185.92,
							"tabs_extra_last_activated_sheet_index": 13,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "tests/client.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1735,
						"regions":
						{
						},
						"selection":
						[
							[
								322,
								322
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 9,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643199668.51,
							"tabs_extra_last_activated_sheet_index": 14,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 240.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "minnet-websocket.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2717,
						"regions":
						{
						},
						"selection":
						[
							[
								284,
								286
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 17,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643199161.52,
							"tabs_extra_last_activated_sheet_index": 15,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 240.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "libwebsockets/include/libwebsockets/lws-misc.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 36955,
						"regions":
						{
						},
						"selection":
						[
							[
								17336,
								17358
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 499,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643197803.75,
							"tabs_extra_last_activated_sheet_index": 16,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9727.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "minnet-server-http.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20538,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643187866.14,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 240.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "minnet-server-http.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1615,
						"regions":
						{
						},
						"selection":
						[
							[
								1615,
								1615
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 53,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643187975.62,
							"tabs_extra_last_activated_sheet_index": 9,
							"tabs_extra_moving":
							[
								3,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 843.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "minnet-server.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 480,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643188211.59,
							"tabs_extra_last_activated_sheet_index": 11,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 120.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "minnet.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6051,
						"regions":
						{
						},
						"selection":
						[
							[
								2125,
								2143
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 70,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643198945.24,
							"tabs_extra_last_activated_sheet_index": 20,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1363.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "minnet-fetch.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7960,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643188213.21,
							"tabs_extra_last_activated_sheet_index": 13,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "minnet-response.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10135,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643188212.75,
							"tabs_extra_last_activated_sheet_index": 14,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "minnet-client.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 609,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643188210.15,
							"tabs_extra_last_activated_sheet_index": 15,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "minnet-server-ws.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5483,
						"regions":
						{
						},
						"selection":
						[
							[
								3605,
								3648
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 110,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643188211.06,
							"tabs_extra_last_activated_sheet_index": 16,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1740.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "tests/common.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1336,
						"regions":
						{
						},
						"selection":
						[
							[
								1041,
								1047
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 33,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643199668.15,
							"tabs_extra_last_activated_sheet_index": 25,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 240.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "tests/test-server-http.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1216,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643199672.87,
							"tabs_extra_last_activated_sheet_index": 26,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "minnet-request.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8965,
						"regions":
						{
						},
						"selection":
						[
							[
								5512,
								5524
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 225,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643188106.42,
							"tabs_extra_last_activated_sheet_index": 17,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4066.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "minnet-request.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2470,
						"regions":
						{
						},
						"selection":
						[
							[
								307,
								307
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 11,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643184931.95,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 240.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.79872935197,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 304.0
	},
	"output.find_results":
	{
		"height": 337.0
	},
	"pinned_build_system": "Rebuild CScope",
	"project": "minnet.sublime-project",
	"replace":
	{
		"height": 74.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"test-cli",
				"tests/test-client.js"
			],
			[
				"client.js",
				"tests/client.js"
			],
			[
				"minnet-web",
				"minnet-websocket.h"
			],
			[
				"minnet.c",
				"minnet.c"
			],
			[
				"buffer.h",
				"minnet-buffer.h"
			],
			[
				"minnet-ser",
				"minnet-server.c"
			],
			[
				"minnet-clie",
				"minnet-client.c"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"lws-cal",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"server.js",
				"tests/server.js"
			],
			[
				"server.c",
				"minnet-server.c"
			],
			[
				"test-rpc",
				"test-rpc.js"
			],
			[
				"lws-call",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"minnet-server",
				"minnet-server-http.c"
			],
			[
				"",
				"tests/client_http.js"
			],
			[
				"rpc.j",
				"rpc.js"
			],
			[
				"wscli",
				"wscli.js"
			],
			[
				"lws-htt",
				"libwebsockets/include/libwebsockets/lws-http.h"
			],
			[
				"http-post",
				"libwebsockets/minimal-examples/http-client/minimal-http-client-post/minimal-http-client-post.c"
			],
			[
				"jsutils",
				"jsutils.c"
			],
			[
				"post",
				"libwebsockets/minimal-examples/http-client/minimal-http-client-post/minimal-http-client-post.c"
			],
			[
				"post-",
				"libwebsockets/build/x86_64-linux-gnu/bin/lws-minimal-http-server-form-post-file"
			],
			[
				"-post",
				"libwebsockets/minimal-examples/http-client/minimal-http-client-post/minimal-http-client-post.c"
			],
			[
				"rpc.js",
				"rpc.js"
			],
			[
				"minnet-url",
				"minnet-url.c"
			],
			[
				"minnet.h",
				"minnet.h"
			],
			[
				"ops-h1",
				"libwebsockets/lib/roles/h1/ops-h1.c"
			],
			[
				"lws-clie",
				"libwebsockets/include/libwebsockets/lws-client.h"
			],
			[
				"libwebsockets.h",
				"libwebsockets/include/libwebsockets.h"
			],
			[
				"lws-con",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"lws-context",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"websockets.h",
				"libwebsockets/include/libwebsockets.h"
			],
			[
				"raw-netcat",
				"libwebsockets/minimal-examples/raw/minimal-raw-netcat/minimal-raw-netcat.c"
			],
			[
				"adopt-raw",
				"libwebsockets/minimal-examples/raw/minimal-raw-adopt-tcp/minimal-raw-adopt-tcp.c"
			],
			[
				"build-li",
				"build-libwebsockets.sh"
			],
			[
				"client-post",
				"libwebsockets/minimal-examples/http-client/minimal-http-client-post/minimal-http-client-post.c"
			],
			[
				"post.c",
				"curl/docs/examples/http-post.c"
			],
			[
				"client",
				"libwebsockets/lib/roles/http/client/client-http.c"
			],
			[
				"server-dead",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-deaddrop/minimal-http-server-deaddrop.c"
			],
			[
				"lws-conte",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"lws_raw_pr",
				"libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c"
			],
			[
				"poll.c",
				"poll.c"
			],
			[
				"minnet-cli",
				"minnet-client.c"
			],
			[
				"libweb",
				"libwebsockets/include/libwebsockets.h"
			],
			[
				"output.c",
				"libwebsockets/lib/core-net/output.c"
			],
			[
				"connect3",
				"libwebsockets/lib/core-net/client/connect3.c"
			],
			[
				"connect.c",
				"libwebsockets/lib/core-net/client/connect.c"
			],
			[
				"close",
				"libwebsockets/lib/core-net/close.c"
			],
			[
				"lws-ca",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"lws-",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"lws_raw",
				"libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c"
			],
			[
				".js",
				"libwebsockets/test-apps/test.js"
			],
			[
				"libwebsockets/CM",
				"libwebsockets/CMakeLists.txt"
			],
			[
				"jsu",
				"jsutils.c"
			],
			[
				"vhost",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"mime",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-mimetypes/minimal-http-server-mimetypes.c"
			],
			[
				"form-post-file",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-form-post-file/minimal-http-server-form-post-file.c"
			],
			[
				"ops-h2",
				"libwebsockets/lib/roles/h2/ops-h2.c"
			],
			[
				"tls-mem",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-tls-mem/minimal-http-server-tls-mem.c"
			],
			[
				"minnet-client.c",
				"minnet-client.c"
			],
			[
				"BuildLi",
				"cmake/BuildLibwebsockets.cmake"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"buffer.c",
				"buffer.c"
			],
			[
				"9",
				"libwebsockets/lib/drivers/devices/display/ili9341.h"
			],
			[
				"proxy.c",
				"minnet-server-proxy.c"
			],
			[
				"raw-proxy",
				"libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-proxy/minimal-raw-proxy.c"
			],
			[
				"ws-raw-",
				"libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-raw-proxy/minimal-ws-raw-proxy.c"
			],
			[
				"lws_raw_pro",
				"libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c"
			],
			[
				"ops-ws",
				"libwebsockets/lib/roles/ws/ops-ws.c"
			],
			[
				"rpc",
				"rpc.js"
			],
			[
				"events.js",
				"~/Projects/plot-cv/lib/events.js"
			],
			[
				"debugger.js",
				"~/Projects/plot-cv/debugger.js"
			],
			[
				"lws-ado",
				"libwebsockets/include/libwebsockets/lws-adopt.h"
			],
			[
				"test-rp",
				"~/Projects/plot-cv/test-rpc.js"
			],
			[
				"cmakelists-im",
				"libwebsockets/CMakeLists-implied-options.txt"
			],
			[
				"cmake",
				"libwebsockets/CMakeLists.txt"
			],
			[
				"roles-htt",
				"libwebsockets/lib/roles/http/private-lib-roles-http.h"
			],
			[
				"-roles",
				"libwebsockets/lib/roles/h2/private-lib-roles-h2.h"
			],
			[
				"private-lib-rol",
				"libwebsockets/lib/roles/private-lib-roles.h"
			],
			[
				"server",
				"libwebsockets/lib/roles/http/server/server.c"
			],
			[
				"sse.c",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-sse/minimal-http-server-sse.c"
			],
			[
				"quicjs",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"quickj",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"quickjs.",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"webso",
				"minnet-websocket.c"
			],
			[
				"jsutil",
				"minnet-jsutils.h"
			],
			[
				"minnet",
				"minnet.c"
			],
			[
				"websoc",
				"websocket.c"
			],
			[
				"jsut",
				"jsutils.h"
			],
			[
				"minnet-",
				"minnet-server.h"
			],
			[
				"client.c",
				"client.c"
			],
			[
				"minn",
				"minnet.c"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 346.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
