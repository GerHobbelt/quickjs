{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"opa",
				"wsi_opaque_user_data"
			],
			[
				"JS_",
				"JS_ThrowInternalError"
			],
			[
				"form_parser_para",
				"form_parser_param_count"
			],
			[
				"minnet_",
				"minnet_ws_data2"
			],
			[
				"asynci",
				"AsyncIterator"
			],
			[
				"vhost_options_from",
				"vhost_options_fromentries"
			],
			[
				"LWS_CALL",
				"LWS_CALLBACK_HTTP_WRITEABLE"
			],
			[
				"minnet_ge",
				"minnet_generator_next"
			],
			[
				"JS_Set",
				"JS_SetPropertyStr"
			],
			[
				"JS_SetP",
				"JS_SetPropertyStr"
			],
			[
				"OPENSSL_LIB",
				"OPENSSL_LIBRARY_DIR"
			],
			[
				"OPENSSL",
				"OPENSSL_LIBRARIES"
			],
			[
				"lws_get",
				"lws_get_opaque_user_data"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"LWS_CALLBACK_FIL",
				"LWS_CALLBACK_HTTP_FILE_COMPLETION"
			],
			[
				"Minnet",
				"MinnetSession"
			],
			[
				"lws_conte",
				"lws_context_creation_info"
			],
			[
				"lws_con",
				"lws_context_creation_info"
			],
			[
				"lws_proto",
				"lws_protocol_vhost_options"
			],
			[
				"lws_",
				"lws_protocol_vhost_options"
			],
			[
				"CMAKE_C",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"CMAKE_CU",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"OPENSSL_",
				"OPENSSL_LIBRARIES"
			],
			[
				"server_ssl_ca",
				"server_ssl_ca_mem_len"
			],
			[
				"server_ssl_pr",
				"server_ssl_private_key_mem_len"
			],
			[
				"LIBWE",
				"LIBWEBSOCKETS_LIBRARIES"
			],
			[
				"LIBWEBSOCKE",
				"LIBWEBSOCKETS_LIBRARY_DIR"
			],
			[
				"LIBW",
				"LIBWEBSOCKETS_DIR"
			],
			[
				"LIBWEB",
				"LIBWEBSOCKETS_FOUND"
			],
			[
				"_",
				"add_library"
			],
			[
				"BUILD_",
				"BUILD_LIBWEBSOCKETS"
			],
			[
				"eleme",
				"element_len"
			],
			[
				"JS_Throw",
				"JS_ThrowOutOfMemory"
			],
			[
				"MinnetCa",
				"MinnetCallbacks"
			],
			[
				"JS_T",
				"JS_ThrowTypeError"
			],
			[
				"client_closu",
				"client_closure_dup"
			],
			[
				"fetch",
				"fetch_closure_dup"
			],
			[
				"client_cl",
				"client_closure_new"
			],
			[
				"client_closure",
				"client_closure_free"
			],
			[
				"error",
				"error_closure"
			],
			[
				"fet",
				"fetch_closure"
			],
			[
				"JS_PROP_",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"LWS_CALLBACK_RAW_",
				"LWS_CALLBACK_RAW_CONNECTED"
			],
			[
				"exp",
				"expected"
			],
			[
				"getOwn",
				"getOwnPropertyNames(...)"
			],
			[
				"define",
				"defineProperty(...)"
			],
			[
				"PROTOCOL",
				"PROTOCOL_HTTP"
			],
			[
				"Minn",
				"MinnetResponse"
			],
			[
				"min",
				"minnet_url_proto_funcs"
			],
			[
				"js_mall",
				"js_mallocz"
			],
			[
				"JS_FreeV",
				"JS_FreeValueRT"
			],
			[
				"vhost_",
				"vhost_options_create"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"CURL",
				"CURL_LIBRARY"
			],
			[
				"LI",
				"LIBWEBSOCKETS_LIBRARY_DIR"
			],
			[
				"target_link_",
				"target_link_directories"
			],
			[
				"CURL_",
				"CURL_LIBRARY_DEBUG"
			],
			[
				"minnet",
				"minnet_client_lws"
			],
			[
				"JS_To",
				"JS_ToCString"
			],
			[
				"JS_GetP",
				"JS_GetPropertyUint32"
			],
			[
				"OP",
				"OPENSSL_LIBRARY_DIR"
			],
			[
				"Content",
				"Content-Disposition"
			],
			[
				"MBED",
				"MBEDTLS_LIBRARY_DIR"
			],
			[
				"LIBWEBSO",
				"LIBWEBSOCKETS_LIBRARY_DIR"
			],
			[
				"CMAKE_",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"opt_P",
				"opt_private_key"
			],
			[
				"JS_FRee",
				"JS_FreeValue"
			],
			[
				"LWS_WR",
				"LWS_WRITE_HTTP_FINAL"
			],
			[
				"MBEDTLS_LIB",
				"MBEDTLS_LIBRARY_DIR"
			],
			[
				"curl_mul",
				"curl_multi_cleanup"
			],
			[
				"LWS_CALLBACK_",
				"LWS_CALLBACK_HTTP_WRITEABLE"
			],
			[
				"Event",
				"EventTarget"
			],
			[
				"http_",
				"http_response"
			],
			[
				"STREAM",
				"STREAM_TEXT"
			],
			[
				"moun",
				"mountpoint_len"
			],
			[
				"ori",
				"origin_protocol"
			],
			[
				"mount",
				"mountpoint_len"
			],
			[
				"LWS",
				"LWSMPRO_CALLBACK"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"minnet_request",
				"minnet_request_class_id"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"js_loca",
				"js_location_data"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					24,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/LICENSE",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABwEAAAICAg4pOCICBfR05VX1NPVVJDRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgYXN5bmNpdGVyYXRvcl9zaGlmdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHZlY3RvcjJhcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29iamVjdF9jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29iamVjdF9jbGFzc25hbWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19jb25zb2xlX2xvZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Z1bmN0aW9uX2JvdW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZnVuY3Rpb25fYmluZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Z1bmN0aW9uX2JpbmRfMSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Z1bmN0aW9uX2JpbmRfdGhpcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Z1bmN0aW9uX25hbWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pdGVyYXRvcl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfY29weV9wcm9wZXJ0aWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYnVmZmVyX2Zyb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19idWZmZXJfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYnVmZmVyX3RvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYnVmZmVyX3RvMyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2J1ZmZlcl92YWxpZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2J1ZmZlcl9jbG9uZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2J1ZmZlcl9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYnVmZmVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pc19pdGVyYWJsZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2lzX2l0ZXJhdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3ltYm9sX3N0YXRpY19hdG9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3ltYm9sX3N0YXRpY192YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N5bWJvbF9jdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZ2xvYmFsX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2dsb2JhbF9vcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29zX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3RpbWVyX3N0YXJ0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfdGltZXJfY2FuY2VsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfdGltZXJfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3RpbWVyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfdGltZXJfaW50ZXJ2YWwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc190aW1lcl9yZXN0YXJ0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcmVzb2x2ZV9mdW5jdGlvbnNfemVybyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3Jlc29sdmVfZnVuY3Rpb25zX2lzX251bGwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19wcm9taXNlX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19wcm9taXNlX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19yZXNvbHZlX2Z1bmN0aW9uc19jYWxsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfdG9zdHJpbmdsZW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc190b3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2ludm9rZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3Byb21pc2VfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcHJvbWlzZV9yZXNvbHZlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcHJvbWlzZV9yZWplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19wcm9taXNlX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19wcm9taXNlX3BlbmRpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19wcm9taXNlX2RvbmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pc19wcm9taXNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZXJyb3JfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfdG9wdHJzaXplICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZ2V0X3Byb3BlcnR5c3RyX2Jvb2wgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19nZXRfcHJvcGVydHlzdHJfaW50NjQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19nZXRfcHJvcGVydHlzdHJfdWludDMyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbW9kdWxlX2xpc3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19tb2R1bGVfYXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19tb2R1bGVfZmluZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21vZHVsZV9maW5kX3MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19tb2R1bGVfZXhwb3J0X2ZpbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19tb2R1bGVfbG9hZGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbW9kdWxlX2ltcG9ydF9tZXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZXJyb3JfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19hcnJheV9sZW5ndGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19hcnJheV90b19hcmd2ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYXJndl90b19hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2F0b21faXNfaW5kZXggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19hdG9tX2lzX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2F0b21faXNfbGVuZ3RoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYXN5bmNpdGVyYXRvcl96ZXJvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYXN5bmNpdGVyYXRvcl9jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFzeW5jaXRlcmF0b3JfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYXN5bmNpdGVyYXRvcl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYXN5bmNpdGVyYXRvcl9jaGVja19jbG9zaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYXN5bmNpdGVyYXRvcl9zaGlmdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFzeW5jaXRlcmF0b3JfeWllbGQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBhc3luY2l0ZXJhdG9yX3JlamVjdF9hbGwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBhc3luY2l0ZXJhdG9yX3N0b3AgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBhc3luY2l0ZXJhdG9yX2VtcGxhY2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBhc3luY2l0ZXJhdG9yX29iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					25,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server.h",
						"symkeys":
						[
							[
								32,
								47
							],
							[
								158,
								174
							],
							[
								459,
								471
							],
							[
								505,
								523
							],
							[
								558,
								571
							],
							[
								619,
								635
							],
							[
								710,
								721
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMINNET_SERVER_H‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚ìÇ‚Äì‚ÄÉserver_exception‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉMinnetServer‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚Äî‚íª‚Äì‚ÄÉserver_certificate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_server‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉdefprot_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉws_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAAEwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					26,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.h",
						"symkeys":
						[
							[
								37,
								57
							],
							[
								316,
								334
							],
							[
								602,
								617
							],
							[
								640,
								660
							],
							[
								720,
								737
							],
							[
								780,
								801
							],
							[
								843,
								861
							],
							[
								892,
								915
							],
							[
								955,
								973
							],
							[
								1025,
								1037
							],
							[
								1167,
								1176
							],
							[
								1231,
								1241
							],
							[
								1301,
								1313
							],
							[
								1351,
								1366
							],
							[
								1435,
								1445
							],
							[
								1487,
								1506
							],
							[
								1603,
								1623
							],
							[
								1671,
								1691
							],
							[
								1762,
								1782
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMINNET_SERVER_HTTP_H‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉMinnetVhostOptions‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉMinnetHttpMount‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_fromobj‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free_list‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find_s‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_fromvalue‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_writable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_generate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPAQAAICAg4pOCICBNSU5ORVRfU0VSVkVSX0gg4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pOC4oCTIHNlcnZlcl9leGNlcHRpb24gKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24KICAg4pOJICBNaW5uZXRTZXJ2ZXIgOyDigJQgdHlwZWRlZgrigJTikrvigJMgc2VydmVyX2NlcnRpZmljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGRlZnByb3RfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAABoDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					29,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.h",
						"symkeys":
						[
							[
								33,
								49
							],
							[
								214,
								227
							],
							[
								251,
								264
							],
							[
								440,
								453
							],
							[
								461,
								475
							],
							[
								536,
								548
							],
							[
								589,
								601
							],
							[
								663,
								674
							],
							[
								739,
								750
							],
							[
								783,
								798
							],
							[
								841,
								856
							],
							[
								898,
								913
							],
							[
								953,
								965
							],
							[
								988,
								1001
							],
							[
								1036,
								1052
							],
							[
								1087,
								1099
							],
							[
								1134,
								1149
							],
							[
								1194,
								1206
							],
							[
								1259,
								1278
							],
							[
								1331,
								1357
							],
							[
								1419,
								1437
							],
							[
								1488,
								1507
							],
							[
								1851,
								1870
							],
							[
								1976,
								1996
							],
							[
								2121,
								2132
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMINNET_REQUEST_H‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉmethod_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmethod_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉMinnetRequest‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚Äî‚íª‚Äì‚ÄÉrequest_format‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_dup‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromobj‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromwsi‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromurl‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_clear‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_clear_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_free_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_from‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_from‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_wrap‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_data‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_data2‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmethod_name‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADIAwAAICAg4pOCICBNSU5ORVRfU0VSVkVSX0hUVFBfSCDigKYg4oCUIG1hY3JvIG9iamVjdAogICDik4kgIE1pbm5ldFZob3N0T3B0aW9ucyA7IOKAlCB0eXBlZGVmCiAgIOKTiSAgTWlubmV0SHR0cE1vdW50IDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2Zyb21vYmogKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2R1bXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWVfbGlzdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHZob3N0X29wdGlvbnNfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1vdW50X2NyZWF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1vdW50X25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1vdW50X2ZpbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kX3MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9mcm9tdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9zZXJ2ZXJfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfc2VydmVyX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9zZXJ2ZXJfZ2VuZXJhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3NlcnZlcl9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPQDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AEAAAAAAAD8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.c",
						"symkeys":
						[
							[
								8,
								19
							],
							[
								618,
								631
							],
							[
								743,
								756
							],
							[
								933,
								947
							],
							[
								1301,
								1313
							],
							[
								1451,
								1463
							],
							[
								1648,
								1661
							],
							[
								1805,
								1816
							],
							[
								2000,
								2011
							],
							[
								2086,
								2101
							],
							[
								2830,
								2845
							],
							[
								3291,
								3306
							],
							[
								3471,
								3483
							],
							[
								3601,
								3614
							],
							[
								3790,
								3806
							],
							[
								3967,
								3979
							],
							[
								4112,
								4127
							],
							[
								4277,
								4287
							],
							[
								4875,
								4887
							],
							[
								5497,
								5516
							],
							[
								5789,
								5815
							],
							[
								6792,
								6810
							],
							[
								7026,
								7045
							],
							[
								7301,
								7319
							],
							[
								8869,
								8887
							],
							[
								10217,
								10241
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉmethod_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmethod_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_format‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_alloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_dup‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromobj‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromwsi‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromurl‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_clear‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_clear_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_free_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉheader_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_from‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_from‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_wrap‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_finalizer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADkBAAAICAg4pOCICBNSU5ORVRfUkVRVUVTVF9IIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBtZXRob2Rfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWV0aG9kX251bWJlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICAg4pOJICBNaW5uZXRSZXF1ZXN0IDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIHJlcXVlc3RfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2R1cCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZnJvbXVybCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfemVybyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfY2xlYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2NsZWFyX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcmVlX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3Rfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2RhdGEgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmVxdWVzdF9kYXRhMiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1ldGhvZF9uYW1lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAJAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					31,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAkBQAAICAg4pOCICBfR05VX1NPVVJDRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgbWV0aG9kX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1ldGhvZF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2Zvcm1hdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9td3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tdXJsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF96ZXJvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBoZWFkZXJfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3Rfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					32,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/jsutils.h",
						"symkeys":
						[
							[
								33,
								49
							],
							[
								336,
								349
							],
							[
								486,
								494
							],
							[
								505,
								514
							],
							[
								691,
								707
							],
							[
								717,
								729
							],
							[
								838,
								850
							],
							[
								867,
								879
							],
							[
								922,
								943
							],
							[
								986,
								1000
							],
							[
								1052,
								1069
							],
							[
								1167,
								1183
							],
							[
								1245,
								1263
							],
							[
								1313,
								1334
							],
							[
								1388,
								1404
							],
							[
								1440,
								1456
							],
							[
								1553,
								1571
							],
							[
								1629,
								1643
							],
							[
								1691,
								1704
							],
							[
								1737,
								1749
							],
							[
								1783,
								1796
							],
							[
								1851,
								1866
							],
							[
								1894,
								1909
							],
							[
								1945,
								1959
							],
							[
								1992,
								2006
							],
							[
								2036,
								2050
							],
							[
								2083,
								2097
							],
							[
								2132,
								2153
							],
							[
								2188,
								2210
							],
							[
								2245,
								2259
							],
							[
								2281,
								2294
							],
							[
								2329,
								2341
							],
							[
								2363,
								2372
							],
							[
								2407,
								2421
							],
							[
								2464,
								2479
							],
							[
								2512,
								2525
							],
							[
								2542,
								2559
							],
							[
								2658,
								2675
							],
							[
								2718,
								2734
							],
							[
								2763,
								2778
							],
							[
								2816,
								2834
							],
							[
								2873,
								2887
							],
							[
								2930,
								2941
							],
							[
								2977,
								2986
							],
							[
								3066,
								3083
							],
							[
								3124,
								3142
							],
							[
								3197,
								3214
							],
							[
								3266,
								3281
							],
							[
								3307,
								3325
							],
							[
								3357,
								3372
							],
							[
								3404,
								3417
							],
							[
								3453,
								3465
							],
							[
								3506,
								3518
							],
							[
								3566,
								3589
							],
							[
								3638,
								3662
							],
							[
								3712,
								3737
							],
							[
								3796,
								3810
							],
							[
								3837,
								3849
							],
							[
								3881,
								3895
							],
							[
								3930,
								3946
							],
							[
								3979,
								4000
							],
							[
								4032,
								4053
							],
							[
								4085,
								4099
							],
							[
								4135,
								4150
							],
							[
								4185,
								4201
							],
							[
								4243,
								4259
							],
							[
								4307,
								4323
							],
							[
								4374,
								4391
							],
							[
								4446,
								4463
							],
							[
								4514,
								4522
							],
							[
								4674,
								4688
							],
							[
								5066,
								5078
							],
							[
								5289,
								5306
							],
							[
								5554,
								5567
							],
							[
								5664,
								5686
							],
							[
								5929,
								5944
							],
							[
								6018,
								6031
							],
							[
								6170,
								6179
							],
							[
								6268,
								6277
							],
							[
								6382,
								6395
							],
							[
								6403,
								6421
							],
							[
								6444,
								6463
							],
							[
								6508,
								6525
							],
							[
								6547,
								6565
							],
							[
								6600,
								6619
							],
							[
								6668,
								6686
							],
							[
								6738,
								6755
							],
							[
								6805,
								6826
							],
							[
								6886,
								6913
							],
							[
								6954,
								6978
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMINNET_JSUTILS_H‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉJSThreadState‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉJSBuffer‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚Äî‚ìÇ‚Äì‚ÄÉJS_BUFFER‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉResolveFunctions‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"TimerClosure",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_BIND_THIS‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉvector2array‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_console_log‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_bound‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_bind‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_bind_1‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_bind_this‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_name‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_iterator_next‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_copy_properties‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_from‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_to‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_to3‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_valid‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_clone‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_iterable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_iterator‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_symbol_static_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_symbol_static_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_symbol_ctor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_global_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_global_os‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_os_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_timer_start‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_timer_cancel‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_timer_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_timer_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_timer_interval‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_timer_restart‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_free_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_tostringlen‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_invoke‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_resolve‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_reject‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_pending‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_done‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_promise‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_error_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_toptrsize‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_propertystr_bool‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_propertystr_int64‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_propertystr_uint32‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_list‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_at‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_find_s‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_export_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_import_meta‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_error_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_array_length‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_array_to_argv‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_argv_to_array‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_atom_is_index‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_atom_is_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_atom_is_length‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_clear‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_dump_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_to_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_replace_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_nullish‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_free_default‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_begin‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_end‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉAsyncRead‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉValueItem‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉAsyncIterator‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_clear‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_next‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_yield‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_stop‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_obj‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_emplace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_check_closing‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_reject_all‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAAWg4AAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					33,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACoEQAAICAg4pOCICBNSU5ORVRfSlNVVElMU19IIOKApiDigJQgbWFjcm8gb2JqZWN0CiAgIOKTiSAgSlNUaHJlYWRTdGF0ZSA7IOKAlCB0eXBlZGVmCiAgIOKTiSAgSlNCdWZmZXIgOyDigJQgdHlwZWRlZgrigJTik4LigJMgSlNfQlVGRkVSICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCiAgIOKTiSAgUmVzb2x2ZUZ1bmN0aW9ucyA7IOKAlCB0eXBlZGVmClRpbWVyQ2xvc3VyZQogICDik4IgIEpTX0JJTkRfVEhJUyDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgdmVjdG9yMmFycmF5ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb2JqZWN0X2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfY29uc29sZV9sb2cgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19mdW5jdGlvbl9ib3VuZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Z1bmN0aW9uX2JpbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19mdW5jdGlvbl9iaW5kXzEgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19mdW5jdGlvbl9iaW5kX3RoaXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19mdW5jdGlvbl9uYW1lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaXRlcmF0b3JfbmV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2NvcHlfcHJvcGVydGllcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2J1ZmZlcl9mcm9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYnVmZmVyX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2J1ZmZlcl90byAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2J1ZmZlcl90bzMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19idWZmZXJfdmFsaWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19idWZmZXJfY2xvbmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19idWZmZXJfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2J1ZmZlcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaXNfaXRlcmFibGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pc19pdGVyYXRvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N5bWJvbF9zdGF0aWNfYXRvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N5bWJvbF9zdGF0aWNfdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zeW1ib2xfY3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2dsb2JhbF9nZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19nbG9iYWxfb3MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vc19nZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc190aW1lcl9zdGFydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3RpbWVyX2NhbmNlbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3RpbWVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc190aW1lcl9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3RpbWVyX2ludGVydmFsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfdGltZXJfcmVzdGFydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3Byb21pc2VfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3Byb21pc2VfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3Rvc3RyaW5nbGVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnZva2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19wcm9taXNlX2NyZWF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3Byb21pc2VfcmVzb2x2ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3Byb21pc2VfcmVqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcHJvbWlzZV96ZXJvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcHJvbWlzZV9wZW5kaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcHJvbWlzZV9kb25lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaXNfcHJvbWlzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Vycm9yX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3RvcHRyc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2dldF9wcm9wZXJ0eXN0cl9ib29sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZ2V0X3Byb3BlcnR5c3RyX2ludDY0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZ2V0X3Byb3BlcnR5c3RyX3VpbnQzMiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21vZHVsZV9saXN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbW9kdWxlX2F0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbW9kdWxlX2ZpbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19tb2R1bGVfZmluZF9zICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbW9kdWxlX2V4cG9ydF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbW9kdWxlX2ltcG9ydF9tZXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZXJyb3JfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19hcnJheV9sZW5ndGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19hcnJheV90b19hcmd2ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYXJndl90b19hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2F0b21faXNfaW5kZXggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19hdG9tX2lzX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2F0b21faXNfbGVuZ3RoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfY2xlYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19kdW1wX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3RvX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3JlcGxhY2Vfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaXNfbnVsbGlzaCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2J1ZmZlcl9mcmVlX2RlZmF1bHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19idWZmZXJfYmVnaW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19idWZmZXJfZW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogICDik4kgIEFzeW5jUmVhZCA7IOKAlCB0eXBlZGVmCiAgIOKTiSAgVmFsdWVJdGVtIDsg4oCUIHR5cGVkZWYKICAg4pOJICBBc3luY0l0ZXJhdG9yIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIGFzeW5jaXRlcmF0b3JfemVybyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFzeW5jaXRlcmF0b3JfY2xlYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBhc3luY2l0ZXJhdG9yX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFzeW5jaXRlcmF0b3JfbmV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFzeW5jaXRlcmF0b3JfeWllbGQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBhc3luY2l0ZXJhdG9yX3N0b3AgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBhc3luY2l0ZXJhdG9yX29iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFzeW5jaXRlcmF0b3JfZW1wbGFjZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFzeW5jaXRlcmF0b3JfY2hlY2tfY2xvc2luZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFzeW5jaXRlcmF0b3JfcmVqZWN0X2FsbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					34,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/jsutils.h",
						"symkeys":
						[
							[
								33,
								49
							],
							[
								336,
								349
							],
							[
								486,
								494
							],
							[
								505,
								514
							],
							[
								691,
								707
							],
							[
								717,
								729
							],
							[
								838,
								850
							],
							[
								867,
								879
							],
							[
								922,
								943
							],
							[
								986,
								1000
							],
							[
								1052,
								1069
							],
							[
								1167,
								1183
							],
							[
								1245,
								1263
							],
							[
								1313,
								1334
							],
							[
								1388,
								1404
							],
							[
								1440,
								1456
							],
							[
								1553,
								1571
							],
							[
								1629,
								1643
							],
							[
								1691,
								1704
							],
							[
								1737,
								1749
							],
							[
								1783,
								1796
							],
							[
								1851,
								1866
							],
							[
								1894,
								1909
							],
							[
								1945,
								1959
							],
							[
								1992,
								2006
							],
							[
								2036,
								2050
							],
							[
								2083,
								2097
							],
							[
								2132,
								2153
							],
							[
								2188,
								2210
							],
							[
								2245,
								2259
							],
							[
								2281,
								2294
							],
							[
								2329,
								2341
							],
							[
								2363,
								2372
							],
							[
								2407,
								2421
							],
							[
								2464,
								2479
							],
							[
								2512,
								2525
							],
							[
								2542,
								2559
							],
							[
								2658,
								2675
							],
							[
								2718,
								2734
							],
							[
								2763,
								2778
							],
							[
								2816,
								2834
							],
							[
								2873,
								2887
							],
							[
								2930,
								2941
							],
							[
								2977,
								2986
							],
							[
								3066,
								3083
							],
							[
								3124,
								3142
							],
							[
								3197,
								3214
							],
							[
								3266,
								3281
							],
							[
								3307,
								3325
							],
							[
								3357,
								3372
							],
							[
								3404,
								3417
							],
							[
								3453,
								3465
							],
							[
								3506,
								3518
							],
							[
								3566,
								3589
							],
							[
								3638,
								3662
							],
							[
								3712,
								3737
							],
							[
								3796,
								3810
							],
							[
								3837,
								3849
							],
							[
								3881,
								3895
							],
							[
								3930,
								3946
							],
							[
								3979,
								4000
							],
							[
								4032,
								4053
							],
							[
								4085,
								4099
							],
							[
								4135,
								4150
							],
							[
								4185,
								4201
							],
							[
								4243,
								4259
							],
							[
								4307,
								4323
							],
							[
								4374,
								4391
							],
							[
								4446,
								4463
							],
							[
								4514,
								4522
							],
							[
								4674,
								4688
							],
							[
								5066,
								5078
							],
							[
								5289,
								5306
							],
							[
								5554,
								5567
							],
							[
								5664,
								5686
							],
							[
								5929,
								5944
							],
							[
								6018,
								6031
							],
							[
								6170,
								6179
							],
							[
								6268,
								6277
							],
							[
								6382,
								6395
							],
							[
								6403,
								6421
							],
							[
								6444,
								6463
							],
							[
								6508,
								6525
							],
							[
								6547,
								6565
							],
							[
								6600,
								6619
							],
							[
								6668,
								6686
							],
							[
								6738,
								6755
							],
							[
								6805,
								6826
							],
							[
								6886,
								6913
							],
							[
								6954,
								6978
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMINNET_JSUTILS_H‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉJSThreadState‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉJSBuffer‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚Äî‚ìÇ‚Äì‚ÄÉJS_BUFFER‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉResolveFunctions‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"TimerClosure",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉJS_BIND_THIS‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉvector2array‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_console_log‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_bound‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_bind‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_bind_1‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_bind_this‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_name‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_iterator_next‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_copy_properties‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_from‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_to‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_to3‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_valid‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_clone‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_iterable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_iterator‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_symbol_static_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_symbol_static_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_symbol_ctor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_global_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_global_os‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_os_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_timer_start‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_timer_cancel‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_timer_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_timer_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_timer_interval‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_timer_restart‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_free_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_tostringlen‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_invoke‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_resolve‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_reject‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_pending‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_done‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_promise‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_error_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_toptrsize‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_propertystr_bool‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_propertystr_int64‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_propertystr_uint32‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_list‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_at‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_find_s‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_export_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_import_meta‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_error_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_array_length‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_array_to_argv‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_argv_to_array‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_atom_is_index‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_atom_is_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_atom_is_length‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_clear‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_dump_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_to_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_replace_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_nullish‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_free_default‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_begin‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_buffer_end‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉAsyncRead‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉValueItem‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉAsyncIterator‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_clear‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_next‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_yield‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_stop‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_obj‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_emplace‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_check_closing‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉasynciterator_reject_all‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAAWg4AAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					35,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACoEQAAICAg4pOCICBNSU5ORVRfSlNVVElMU19IIOKApiDigJQgbWFjcm8gb2JqZWN0CiAgIOKTiSAgSlNUaHJlYWRTdGF0ZSA7IOKAlCB0eXBlZGVmCiAgIOKTiSAgSlNCdWZmZXIgOyDigJQgdHlwZWRlZgrigJTik4LigJMgSlNfQlVGRkVSICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCiAgIOKTiSAgUmVzb2x2ZUZ1bmN0aW9ucyA7IOKAlCB0eXBlZGVmClRpbWVyQ2xvc3VyZQogICDik4IgIEpTX0JJTkRfVEhJUyDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgdmVjdG9yMmFycmF5ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb2JqZWN0X2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfY29uc29sZV9sb2cgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19mdW5jdGlvbl9ib3VuZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Z1bmN0aW9uX2JpbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19mdW5jdGlvbl9iaW5kXzEgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19mdW5jdGlvbl9iaW5kX3RoaXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19mdW5jdGlvbl9uYW1lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaXRlcmF0b3JfbmV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2NvcHlfcHJvcGVydGllcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2J1ZmZlcl9mcm9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYnVmZmVyX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2J1ZmZlcl90byAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2J1ZmZlcl90bzMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19idWZmZXJfdmFsaWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19idWZmZXJfY2xvbmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19idWZmZXJfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2J1ZmZlcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaXNfaXRlcmFibGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pc19pdGVyYXRvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N5bWJvbF9zdGF0aWNfYXRvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N5bWJvbF9zdGF0aWNfdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zeW1ib2xfY3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2dsb2JhbF9nZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19nbG9iYWxfb3MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vc19nZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc190aW1lcl9zdGFydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3RpbWVyX2NhbmNlbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3RpbWVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc190aW1lcl9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3RpbWVyX2ludGVydmFsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfdGltZXJfcmVzdGFydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3Byb21pc2VfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3Byb21pc2VfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3Rvc3RyaW5nbGVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfdG9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbnZva2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19wcm9taXNlX2NyZWF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3Byb21pc2VfcmVzb2x2ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3Byb21pc2VfcmVqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcHJvbWlzZV96ZXJvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcHJvbWlzZV9wZW5kaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcHJvbWlzZV9kb25lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaXNfcHJvbWlzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2Vycm9yX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3RvcHRyc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2dldF9wcm9wZXJ0eXN0cl9ib29sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZ2V0X3Byb3BlcnR5c3RyX2ludDY0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZ2V0X3Byb3BlcnR5c3RyX3VpbnQzMiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21vZHVsZV9saXN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbW9kdWxlX2F0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbW9kdWxlX2ZpbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19tb2R1bGVfZmluZF9zICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbW9kdWxlX2V4cG9ydF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbW9kdWxlX2ltcG9ydF9tZXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZXJyb3JfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19hcnJheV9sZW5ndGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19hcnJheV90b19hcmd2ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYXJndl90b19hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2F0b21faXNfaW5kZXggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19hdG9tX2lzX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2F0b21faXNfbGVuZ3RoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfY2xlYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19kdW1wX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3RvX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3JlcGxhY2Vfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaXNfbnVsbGlzaCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2J1ZmZlcl9mcmVlX2RlZmF1bHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19idWZmZXJfYmVnaW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19idWZmZXJfZW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogICDik4kgIEFzeW5jUmVhZCA7IOKAlCB0eXBlZGVmCiAgIOKTiSAgVmFsdWVJdGVtIDsg4oCUIHR5cGVkZWYKICAg4pOJICBBc3luY0l0ZXJhdG9yIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIGFzeW5jaXRlcmF0b3JfemVybyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFzeW5jaXRlcmF0b3JfY2xlYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBhc3luY2l0ZXJhdG9yX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFzeW5jaXRlcmF0b3JfbmV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFzeW5jaXRlcmF0b3JfeWllbGQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBhc3luY2l0ZXJhdG9yX3N0b3AgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBhc3luY2l0ZXJhdG9yX29iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFzeW5jaXRlcmF0b3JfZW1wbGFjZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFzeW5jaXRlcmF0b3JfY2hlY2tfY2xvc2luZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGFzeW5jaXRlcmF0b3JfcmVqZWN0X2FsbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					36,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.h",
						"symkeys":
						[
							[
								33,
								49
							],
							[
								214,
								227
							],
							[
								251,
								264
							],
							[
								440,
								453
							],
							[
								461,
								475
							],
							[
								536,
								548
							],
							[
								589,
								601
							],
							[
								663,
								674
							],
							[
								739,
								750
							],
							[
								783,
								798
							],
							[
								841,
								856
							],
							[
								898,
								913
							],
							[
								953,
								965
							],
							[
								988,
								1001
							],
							[
								1036,
								1052
							],
							[
								1087,
								1099
							],
							[
								1134,
								1149
							],
							[
								1194,
								1206
							],
							[
								1259,
								1278
							],
							[
								1331,
								1357
							],
							[
								1419,
								1437
							],
							[
								1488,
								1507
							],
							[
								1851,
								1870
							],
							[
								1976,
								1996
							],
							[
								2121,
								2132
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMINNET_REQUEST_H‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉmethod_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmethod_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉMinnetRequest‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚Äî‚íª‚Äì‚ÄÉrequest_format‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_dup‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromobj‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromwsi‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromurl‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_clear‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_clear_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_free_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_from‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_from‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_wrap‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_data‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_data2‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmethod_name‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAA9AMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					37,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.c",
						"symkeys":
						[
							[
								8,
								19
							],
							[
								618,
								631
							],
							[
								743,
								756
							],
							[
								933,
								947
							],
							[
								1301,
								1313
							],
							[
								1451,
								1463
							],
							[
								1648,
								1661
							],
							[
								1805,
								1816
							],
							[
								2000,
								2011
							],
							[
								2086,
								2101
							],
							[
								2830,
								2845
							],
							[
								3291,
								3306
							],
							[
								3471,
								3483
							],
							[
								3601,
								3614
							],
							[
								3790,
								3806
							],
							[
								3967,
								3979
							],
							[
								4112,
								4127
							],
							[
								4277,
								4287
							],
							[
								4875,
								4887
							],
							[
								5497,
								5516
							],
							[
								5789,
								5815
							],
							[
								6792,
								6810
							],
							[
								7026,
								7045
							],
							[
								7301,
								7319
							],
							[
								8869,
								8887
							],
							[
								10217,
								10241
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉmethod_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmethod_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_format‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_alloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_dup‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromobj‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromwsi‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromurl‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_clear‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_clear_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_free_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉheader_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_from‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_from‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_wrap‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_finalizer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADkBAAAICAg4pOCICBNSU5ORVRfUkVRVUVTVF9IIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBtZXRob2Rfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWV0aG9kX251bWJlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICAg4pOJICBNaW5uZXRSZXF1ZXN0IDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIHJlcXVlc3RfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2R1cCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZnJvbXVybCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfemVybyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfY2xlYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2NsZWFyX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcmVlX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3Rfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2RhdGEgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmVxdWVzdF9kYXRhMiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1ldGhvZF9uYW1lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAJAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					38,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAkBQAAICAg4pOCICBfR05VX1NPVVJDRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgbWV0aG9kX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1ldGhvZF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2Zvcm1hdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9td3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tdXJsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF96ZXJvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBoZWFkZXJfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3Rfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					39,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.c",
						"symkeys":
						[
							[
								8,
								19
							],
							[
								618,
								631
							],
							[
								743,
								756
							],
							[
								933,
								947
							],
							[
								1301,
								1313
							],
							[
								1451,
								1463
							],
							[
								1648,
								1661
							],
							[
								1805,
								1816
							],
							[
								2000,
								2011
							],
							[
								2086,
								2101
							],
							[
								2830,
								2845
							],
							[
								3291,
								3306
							],
							[
								3471,
								3483
							],
							[
								3601,
								3614
							],
							[
								3790,
								3806
							],
							[
								3967,
								3979
							],
							[
								4112,
								4127
							],
							[
								4277,
								4287
							],
							[
								4875,
								4887
							],
							[
								5497,
								5516
							],
							[
								5789,
								5815
							],
							[
								6792,
								6810
							],
							[
								7026,
								7045
							],
							[
								7301,
								7319
							],
							[
								8869,
								8887
							],
							[
								10217,
								10241
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉmethod_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmethod_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_format‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_alloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_dup‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromobj‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromwsi‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromurl‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_clear‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_clear_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_free_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉheader_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_from‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_from‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_wrap‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_finalizer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AwAAAAAAAAAAAAAAJAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQFAAAgICDik4IgIF9HTlVfU09VUkNFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBtZXRob2Rfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWV0aG9kX251bWJlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9hbGxvYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9kdXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2Zyb21vYmogKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2Zyb213c2kgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2Zyb211cmwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2NsZWFyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9jbGVhcl9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGhlYWRlcl9nZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2Zyb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmVxdWVzdF9mcm9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmVxdWVzdF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmVxdWVzdF93cmFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3Rfc2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAJAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					42,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAkBQAAICAg4pOCICBfR05VX1NPVVJDRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgbWV0aG9kX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1ldGhvZF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2Zvcm1hdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9td3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tdXJsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF96ZXJvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBoZWFkZXJfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3Rfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwEAAAAAAAATAQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.c",
						"symkeys":
						[
							[
								8,
								19
							],
							[
								618,
								631
							],
							[
								743,
								756
							],
							[
								933,
								947
							],
							[
								1301,
								1313
							],
							[
								1451,
								1463
							],
							[
								1648,
								1661
							],
							[
								1805,
								1816
							],
							[
								2000,
								2011
							],
							[
								2086,
								2101
							],
							[
								2830,
								2845
							],
							[
								3291,
								3306
							],
							[
								3471,
								3483
							],
							[
								3601,
								3614
							],
							[
								3790,
								3806
							],
							[
								3967,
								3979
							],
							[
								4112,
								4127
							],
							[
								4277,
								4287
							],
							[
								4875,
								4887
							],
							[
								5497,
								5516
							],
							[
								5789,
								5815
							],
							[
								6792,
								6810
							],
							[
								7026,
								7045
							],
							[
								7301,
								7319
							],
							[
								8869,
								8887
							],
							[
								10217,
								10241
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉmethod_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmethod_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_format‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_alloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_dup‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromobj‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromwsi‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromurl‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_clear‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_clear_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_free_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉheader_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_from‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_from‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_wrap‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_finalizer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAAJAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					44,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.c",
						"symkeys":
						[
							[
								8,
								19
							],
							[
								618,
								631
							],
							[
								743,
								756
							],
							[
								933,
								947
							],
							[
								1301,
								1313
							],
							[
								1451,
								1463
							],
							[
								1648,
								1661
							],
							[
								1805,
								1816
							],
							[
								2000,
								2011
							],
							[
								2086,
								2101
							],
							[
								2882,
								2897
							],
							[
								3343,
								3358
							],
							[
								3523,
								3535
							],
							[
								3653,
								3666
							],
							[
								3842,
								3858
							],
							[
								4019,
								4031
							],
							[
								4164,
								4179
							],
							[
								4329,
								4339
							],
							[
								4927,
								4939
							],
							[
								5549,
								5568
							],
							[
								5841,
								5867
							],
							[
								6844,
								6862
							],
							[
								7078,
								7097
							],
							[
								7353,
								7371
							],
							[
								8921,
								8939
							],
							[
								10269,
								10293
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉmethod_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmethod_number‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_format‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_alloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_dup‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromobj‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromwsi‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_fromurl‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_clear‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_clear_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_free_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉheader_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_from‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_from‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_wrap‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_request_finalizer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAAkBQAAICAg4pOCICBfR05VX1NPVVJDRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgbWV0aG9kX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1ldGhvZF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2Zvcm1hdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9td3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tdXJsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF96ZXJvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBoZWFkZXJfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3Rfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkBQAAICAg4pOCICBfR05VX1NPVVJDRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgbWV0aG9kX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1ldGhvZF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2Zvcm1hdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9td3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tdXJsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF96ZXJvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBoZWFkZXJfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3Rfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkBQAAICAg4pOCICBfR05VX1NPVVJDRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgbWV0aG9kX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1ldGhvZF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2Zvcm1hdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9td3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tdXJsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF96ZXJvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBoZWFkZXJfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3Rfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACQEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					45,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-ringbuffer.c",
						"symkeys":
						[
							[
								108,
								111
							],
							[
								324,
								339
							],
							[
								561,
								587
							],
							[
								612,
								627
							],
							[
								945,
								959
							],
							[
								1125,
								1140
							],
							[
								1398,
								1415
							],
							[
								1549,
								1567
							],
							[
								1699,
								1714
							],
							[
								1838,
								1853
							],
							[
								1959,
								1974
							],
							[
								2095,
								2111
							],
							[
								2224,
								2239
							],
							[
								2352,
								2367
							],
							[
								2477,
								2506
							],
							[
								3816,
								3837
							],
							[
								4174,
								4196
							],
							[
								4573,
								4594
							],
							[
								5556,
								5582
							],
							[
								5710,
								5732
							],
							[
								6368,
								6395
							]
						],
						"symlist":
						[
							"‚Äî‚ìÇ‚Äì‚ÄÉMIN‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_destroy_element‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_new2‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_insert‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_consume‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_skip‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_next‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_avail‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ringbuffer_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ringbuffer_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ringbuffer_wrap‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ringbuffer_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ringbuffer_iterator‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ringbuffer_next‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ringbuffer_finalizer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAkBQAAICAg4pOCICBfR05VX1NPVVJDRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgbWV0aG9kX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1ldGhvZF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2Zvcm1hdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9td3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tdXJsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF96ZXJvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBoZWFkZXJfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9mcm9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3Rfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAKEDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					46,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-ringbuffer.c",
						"symkeys":
						[
							[
								228,
								243
							],
							[
								465,
								491
							],
							[
								516,
								531
							],
							[
								849,
								863
							],
							[
								1029,
								1044
							],
							[
								1302,
								1319
							],
							[
								1453,
								1471
							],
							[
								1603,
								1618
							],
							[
								1742,
								1757
							],
							[
								1863,
								1878
							],
							[
								1999,
								2015
							],
							[
								2128,
								2143
							],
							[
								2256,
								2271
							],
							[
								2381,
								2410
							],
							[
								3720,
								3741
							],
							[
								4078,
								4100
							],
							[
								4477,
								4498
							],
							[
								5460,
								5486
							],
							[
								5614,
								5636
							],
							[
								6272,
								6299
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_destroy_element‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_new2‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_insert‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_consume‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_skip‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_next‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_avail‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉringbuffer_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ringbuffer_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ringbuffer_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ringbuffer_wrap‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ringbuffer_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ringbuffer_iterator‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ringbuffer_next‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ringbuffer_finalizer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABzBAAA4oCU4pOC4oCTIE1JTiAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9kZXN0cm95X2VsZW1lbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfbmV3MiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfaW5zZXJ0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9jb25zdW1lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9za2lwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9zaXplICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9hdmFpbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfemVybyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yaW5nYnVmZmVyX2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yaW5nYnVmZmVyX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yaW5nYnVmZmVyX2l0ZXJhdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JpbmdidWZmZXJfbmV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yaW5nYnVmZmVyX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAIIDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKBAAA4oCU4pK74oCTIHJpbmdidWZmZXJfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfZGVzdHJveV9lbGVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX25ldzIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2luc2VydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfY29uc3VtZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfc2tpcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfbmV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfYXZhaWwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yaW5nYnVmZmVyX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yaW5nYnVmZmVyX3dyYXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9nZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9pdGVyYXRvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yaW5nYnVmZmVyX25leHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAACCAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					47,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-generator.c",
						"symkeys":
						[
							[
								128,
								131
							],
							[
								341,
								355
							],
							[
								526,
								543
							],
							[
								679,
								693
							],
							[
								957,
								970
							],
							[
								1201,
								1215
							],
							[
								1620,
								1635
							],
							[
								1987,
								2002
							],
							[
								2118,
								2133
							],
							[
								2335,
								2360
							],
							[
								2629,
								2650
							],
							[
								2889,
								2912
							]
						],
						"symlist":
						[
							"‚Äî‚ìÇ‚Äì‚ÄÉMIN‚Äâ(‚Äâ)‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro function",
							"‚Äî‚íª‚Äì‚ÄÉgenerator_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉgenerator_destroy‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉgenerator_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉgenerator_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉgenerator_next‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉgenerator_write‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉgenerator_close‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉgenerator_queue‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_generator_iterator‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_generator_next‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_generator_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABKBAAA4oCU4pK74oCTIHJpbmdidWZmZXJfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfZGVzdHJveV9lbGVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX25ldzIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2luc2VydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfY29uc3VtZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfc2tpcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfbmV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfYXZhaWwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yaW5nYnVmZmVyX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yaW5nYnVmZmVyX3dyYXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9nZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9pdGVyYXRvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yaW5nYnVmZmVyX25leHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmluZ2J1ZmZlcl9maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAD2AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					48,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-generator.c",
						"symkeys":
						[
							[
								244,
								258
							],
							[
								429,
								446
							],
							[
								582,
								596
							],
							[
								860,
								873
							],
							[
								1104,
								1118
							],
							[
								1523,
								1538
							],
							[
								1890,
								1905
							],
							[
								2021,
								2036
							],
							[
								2238,
								2263
							],
							[
								2532,
								2553
							],
							[
								2792,
								2815
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉgenerator_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉgenerator_destroy‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉgenerator_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉgenerator_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉgenerator_next‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉgenerator_write‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉgenerator_close‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉgenerator_queue‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_generator_iterator‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_generator_next‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_generator_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABuAgAA4oCU4pOC4oCTIE1JTiAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfZGVzdHJveSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX2Nsb3NlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3F1ZXVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2dlbmVyYXRvcl9pdGVyYXRvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9nZW5lcmF0b3JfbmV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9nZW5lcmF0b3JfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAA1wEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					49,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
						"symkeys":
						[
							[
								350,
								370
							],
							[
								723,
								740
							],
							[
								1267,
								1292
							],
							[
								1666,
								1687
							],
							[
								2437,
								2455
							],
							[
								2624,
								2647
							],
							[
								2989,
								3007
							],
							[
								3267,
								3279
							],
							[
								4319,
								4328
							],
							[
								6342,
								6352
							],
							[
								7538,
								7550
							],
							[
								8186,
								8196
							],
							[
								8458,
								8477
							],
							[
								10625,
								10634
							],
							[
								10813,
								10823
							],
							[
								12343,
								12363
							],
							[
								13805,
								13825
							],
							[
								15686,
								15706
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_fromentries‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_fromobj‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free_list‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find_s‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfile_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉserve_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_writable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_generate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABFAgAA4oCU4pK74oCTIGdlbmVyYXRvcl96ZXJvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX2Rlc3Ryb3kgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfbmV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl93cml0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9jbG9zZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9xdWV1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9nZW5lcmF0b3JfaXRlcmF0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZ2VuZXJhdG9yX25leHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZ2VuZXJhdG9yX2NyZWF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPgCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					50,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACsAwAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2Zyb21lbnRyaWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19mcmVlX2xpc3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZmluZF9zICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfc2VydmVyX3Jlc3BvbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmaWxlX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXJ2ZV9maWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9zZXJ2ZXJfd3JpdGFibGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3NlcnZlcl9nZW5lcmF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfc2VydmVyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					51,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
						"symkeys":
						[
							[
								350,
								370
							],
							[
								723,
								740
							],
							[
								1267,
								1292
							],
							[
								1666,
								1687
							],
							[
								2437,
								2455
							],
							[
								2624,
								2647
							],
							[
								2989,
								3007
							],
							[
								3267,
								3279
							],
							[
								4319,
								4328
							],
							[
								6342,
								6352
							],
							[
								7538,
								7550
							],
							[
								8186,
								8196
							],
							[
								8458,
								8477
							],
							[
								10625,
								10634
							],
							[
								10813,
								10823
							],
							[
								12343,
								12363
							],
							[
								13805,
								13825
							],
							[
								15686,
								15706
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_fromentries‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_fromobj‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free_list‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find_s‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfile_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉserve_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_writable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_generate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAA+AIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					52,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
						"symkeys":
						[
							[
								350,
								370
							],
							[
								723,
								740
							],
							[
								1267,
								1292
							],
							[
								1666,
								1687
							],
							[
								2437,
								2455
							],
							[
								2624,
								2647
							],
							[
								2989,
								3007
							],
							[
								3267,
								3279
							],
							[
								4319,
								4328
							],
							[
								6342,
								6352
							],
							[
								7538,
								7550
							],
							[
								8186,
								8196
							],
							[
								8458,
								8477
							],
							[
								10625,
								10634
							],
							[
								10813,
								10823
							],
							[
								12343,
								12363
							],
							[
								13805,
								13825
							],
							[
								15686,
								15706
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_fromentries‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_fromobj‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free_list‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find_s‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfile_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉserve_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_writable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_generate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACsAwAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2Zyb21lbnRyaWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19mcmVlX2xpc3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZmluZF9zICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfc2VydmVyX3Jlc3BvbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmaWxlX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXJ2ZV9maWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9zZXJ2ZXJfd3JpdGFibGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3NlcnZlcl9nZW5lcmF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfc2VydmVyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAA+AIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					53,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
						"symkeys":
						[
							[
								350,
								370
							],
							[
								723,
								740
							],
							[
								1267,
								1292
							],
							[
								1666,
								1687
							],
							[
								2437,
								2455
							],
							[
								2624,
								2647
							],
							[
								2989,
								3007
							],
							[
								3267,
								3279
							],
							[
								4319,
								4328
							],
							[
								6342,
								6352
							],
							[
								7538,
								7550
							],
							[
								8186,
								8196
							],
							[
								8458,
								8477
							],
							[
								10625,
								10634
							],
							[
								10813,
								10823
							],
							[
								12343,
								12363
							],
							[
								13805,
								13825
							],
							[
								15686,
								15706
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_fromentries‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_fromobj‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free_list‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find_s‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfile_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉserve_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_writable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_generate‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_server_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACsAwAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2Zyb21lbnRyaWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19mcmVlX2xpc3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZmluZF9zICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfc2VydmVyX3Jlc3BvbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmaWxlX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXJ2ZV9maWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9zZXJ2ZXJfd3JpdGFibGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3NlcnZlcl9nZW5lcmF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfc2VydmVyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAA+AIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwDAADigJTikrvigJMgdmhvc3Rfb3B0aW9uc19jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHZob3N0X29wdGlvbnNfZnJvbWVudHJpZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2Zyb21vYmogKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2R1bXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWVfbGlzdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHZob3N0X29wdGlvbnNfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1vdW50X2NyZWF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1vdW50X25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1vdW50X2ZpbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kX3MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9zZXJ2ZXJfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZpbGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3NlcnZlcl93cml0YWJsZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfc2VydmVyX2dlbmVyYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9zZXJ2ZXJfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAD4AgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					54,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-form-parser.c",
						"symkeys":
						[
							[
								8,
								19
							],
							[
								435,
								455
							],
							[
								1393,
								1409
							],
							[
								1969,
								1986
							],
							[
								2139,
								2154
							],
							[
								2418,
								2433
							],
							[
								2498,
								2514
							],
							[
								2669,
								2686
							],
							[
								3051,
								3071
							],
							[
								3446,
								3462
							],
							[
								3624,
								3643
							],
							[
								3811,
								3833
							],
							[
								4007,
								4030
							],
							[
								4176,
								4199
							],
							[
								4274,
								4297
							],
							[
								4506,
								4530
							],
							[
								4644,
								4663
							],
							[
								4775,
								4805
							],
							[
								6751,
								6773
							],
							[
								7067,
								7090
							],
							[
								7359,
								7381
							],
							[
								8150,
								8172
							],
							[
								9312,
								9340
							],
							[
								9485,
								9520
							],
							[
								10765,
								10806
							],
							[
								11361,
								11392
							],
							[
								11873,
								11904
							],
							[
								12892,
								12930
							],
							[
								13403,
								13426
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_alloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_dup‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_clear‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_clear_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_free_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_param_name‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_param_valid‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_param_count‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_param_index‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_param_exists‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_process‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_wrap‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_finalizer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_get_own_property‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_get_own_property_names‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_has_property‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_get_property‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_define_own_property‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACsAwAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2Zyb21lbnRyaWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19mcmVlX2xpc3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZmluZF9zICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfc2VydmVyX3Jlc3BvbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmaWxlX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXJ2ZV9maWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9zZXJ2ZXJfd3JpdGFibGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3NlcnZlcl9nZW5lcmF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfc2VydmVyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAhQUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					55,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-form-parser.h",
						"symkeys":
						[
							[
								37,
								57
							],
							[
								410,
								426
							],
							[
								434,
								450
							],
							[
								563,
								580
							],
							[
								612,
								627
							],
							[
								733,
								748
							],
							[
								774,
								790
							],
							[
								816,
								833
							],
							[
								871,
								891
							],
							[
								929,
								945
							],
							[
								983,
								1002
							],
							[
								1041,
								1063
							],
							[
								1094,
								1117
							],
							[
								1150,
								1173
							],
							[
								1198,
								1221
							],
							[
								1260,
								1284
							],
							[
								1322,
								1341
							],
							[
								1396,
								1426
							],
							[
								1493,
								1515
							],
							[
								1616,
								1639
							],
							[
								1685,
								1708
							],
							[
								2133,
								2156
							],
							[
								2269,
								2293
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMINNET_FORM_PARSER_H‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉMinnetFormParser‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_alloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_dup‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_clear‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_clear_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_free_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_param_name‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_param_valid‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_param_count‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_param_index‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_param_exists‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_process‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_wrap‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_data‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_data2‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACjBgAAICAg4pOCICBfR05VX1NPVVJDRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgZm9ybV9wYXJzZXJfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9kdXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl96ZXJvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfY2xlYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9jbGVhcl9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9mcmVlX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfcGFyYW1fbmFtZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX3BhcmFtX3ZhbGlkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfcGFyYW1fY291bnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9wYXJhbV9pbmRleCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX3BhcmFtX2V4aXN0cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX3Byb2Nlc3MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2Zvcm1fcGFyc2VyX3dyYXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2Zvcm1fcGFyc2VyX3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfZ2V0X293bl9wcm9wZXJ0eSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9nZXRfb3duX3Byb3BlcnR5X25hbWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2Zvcm1fcGFyc2VyX2hhc19wcm9wZXJ0eSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9nZXRfcHJvcGVydHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfZGVmaW5lX293bl9wcm9wZXJ0eSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9jYWxsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAHgQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					56,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-form-parser.c",
						"symkeys":
						[
							[
								8,
								19
							],
							[
								435,
								455
							],
							[
								1393,
								1409
							],
							[
								1969,
								1986
							],
							[
								2139,
								2154
							],
							[
								2418,
								2433
							],
							[
								2498,
								2514
							],
							[
								2669,
								2686
							],
							[
								3051,
								3071
							],
							[
								3446,
								3462
							],
							[
								3624,
								3643
							],
							[
								3811,
								3833
							],
							[
								4007,
								4030
							],
							[
								4176,
								4199
							],
							[
								4274,
								4297
							],
							[
								4506,
								4530
							],
							[
								4644,
								4663
							],
							[
								4775,
								4805
							],
							[
								6751,
								6773
							],
							[
								7067,
								7090
							],
							[
								7359,
								7381
							],
							[
								8150,
								8172
							],
							[
								9312,
								9340
							],
							[
								9485,
								9520
							],
							[
								10765,
								10806
							],
							[
								11361,
								11392
							],
							[
								11873,
								11904
							],
							[
								12892,
								12930
							],
							[
								13403,
								13426
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_GNU_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_alloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_dup‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_clear‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_clear_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_free_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_param_name‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_param_valid‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_param_count‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_param_index‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_param_exists‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉform_parser_process‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_wrap‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_finalizer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_get_own_property‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_get_own_property_names‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_has_property‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_get_property‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_define_own_property‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_form_parser_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD6BAAAICAg4pOCICBNSU5ORVRfRk9STV9QQVJTRVJfSCDigKYg4oCUIG1hY3JvIG9iamVjdAogICDik4kgIE1pbm5ldEZvcm1QYXJzZXIgOyDigJQgdHlwZWRlZgrigJTikrvigJMgZm9ybV9wYXJzZXJfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX2FsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfemVybyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX2NsZWFyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX3BhcmFtX25hbWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9wYXJhbV92YWxpZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX3BhcmFtX2NvdW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfcGFyYW1faW5kZXggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9wYXJhbV9leGlzdHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9wcm9jZXNzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2Zvcm1fcGFyc2VyX2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2Zvcm1fcGFyc2VyX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl93cmFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2Zvcm1fcGFyc2VyX2NhbGwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfZGF0YSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9kYXRhMiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAIUFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					57,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACjBgAAICAg4pOCICBfR05VX1NPVVJDRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgZm9ybV9wYXJzZXJfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9kdXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl96ZXJvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfY2xlYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9jbGVhcl9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9mcmVlX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfcGFyYW1fbmFtZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX3BhcmFtX3ZhbGlkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfcGFyYW1fY291bnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9wYXJhbV9pbmRleCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX3BhcmFtX2V4aXN0cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX3Byb2Nlc3MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2Zvcm1fcGFyc2VyX3dyYXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2Zvcm1fcGFyc2VyX3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfZ2V0X293bl9wcm9wZXJ0eSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9nZXRfb3duX3Byb3BlcnR5X25hbWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2Zvcm1fcGFyc2VyX2hhc19wcm9wZXJ0eSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9nZXRfcHJvcGVydHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfZGVmaW5lX293bl9wcm9wZXJ0eSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9jYWxsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					58,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					59,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					60,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					61,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					62,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					63,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					64,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					65,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					66,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					67,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					68,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					69,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					70,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					71,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					72,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					73,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					74,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					75,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					76,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					77,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					78,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					79,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "minnet-form-parser.c",
			"settings":
			{
				"buffer_size": 15237,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA6gAAAAAAAAAyAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA6gAAAAAAAAAyAQAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB4OwAAI2RlZmluZSBfR05VX1NPVVJDRQojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlICJtaW5uZXQtZm9ybS1wYXJzZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgPGN0eXBlLmg+CiNpbmNsdWRlIDxzdHJpbmdzLmg+CiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CgpUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF9mb3JtX3BhcnNlcl9jbGFzc19pZDsKVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X2Zvcm1fcGFyc2VyX3Byb3RvLCBtaW5uZXRfZm9ybV9wYXJzZXJfY3RvcjsKCmVudW0geyBGT1JNX1BBUlNFUl9QQVJBTVMsIEZPUk1fUEFSU0VSX1NPQ0tFVCwgRk9STV9QQVJTRVJfT05fT1BFTiwgRk9STV9QQVJTRVJfT05fQ09OVEVOVCwgRk9STV9QQVJTRVJfT05fQ0xPU0UgfTsKCnN0YXRpYyBpbnQKZm9ybV9wYXJzZXJfY2FsbGJhY2sodm9pZCogZGF0YSwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogZmlsZW5hbWUsIGNoYXIqIGJ1ZiwgaW50IGxlbiwgZW51bSBsd3Nfc3BhX2ZpbGV1cGxvYWRfc3RhdGVzIHN0YXRlKSB7CiAgTWlubmV0Rm9ybVBhcnNlciogZnAgPSBkYXRhOwogIE1pbm5ldENhbGxiYWNrKiBjYiA9IDA7CiAgSlNWYWx1ZSBhcmdzWzJdID0ge0pTX05VTEwsIEpTX05VTEx9OwoKICBzd2l0Y2goc3RhdGUpIHsKICAgIGNhc2UgTFdTX1VGU19DT05URU5UOgogICAgY2FzZSBMV1NfVUZTX0ZJTkFMX0NPTlRFTlQ6IHsKICAgICAgY2IgPSAmZnAtPmNiLmNvbnRlbnQ7CiAgICAgIGlmKGNiLT5jdHggJiYgbGVuID4gMCkKICAgICAgICBhcmdzWzFdID0gSlNfTmV3QXJyYXlCdWZmZXJDb3B5KGNiLT5jdHgsICh1aW50OF90KilidWYsIGxlbik7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBMV1NfVUZTX09QRU46IHsKICAgICAgY2IgPSAmZnAtPmNiLm9wZW47CiAgICAgIGlmKGNiLT5jdHggJiYgZmlsZW5hbWUpCiAgICAgICAgYXJnc1sxXSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBmaWxlbmFtZSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBMV1NfVUZTX0NMT1NFOiB7CiAgICAgIGNiID0gJmZwLT5jYi5jbG9zZTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICBpZihjYiAmJiBjYi0+Y3R4KSB7CiAgICAvLyBKU1ZhbHVlIGZvcm1fcGFyc2VyID0gbWlubmV0X2Zvcm1fcGFyc2VyX3dyYXAoY2ItPmN0eCwgZnApOwoKICAgIGlmKG5hbWUpCiAgICAgIGFyZ3NbMF0gPSBKU19OZXdTdHJpbmcoY2ItPmN0eCwgbmFtZSk7CgogICAgbWlubmV0X2VtaXQoY2IsIDIsIGFyZ3MpOwoKICAgIEpTX0ZyZWVWYWx1ZShjYi0+Y3R4LCBhcmdzWzBdKTsKICAgIEpTX0ZyZWVWYWx1ZShjYi0+Y3R4LCBhcmdzWzFdKTsKICB9CgogIHJldHVybiAwOwp9Cgp2b2lkCmZvcm1fcGFyc2VyX2luaXQoTWlubmV0Rm9ybVBhcnNlciogZnAsIE1pbm5ldFdlYnNvY2tldCogd3MsIGludCBucGFyYW1zLCBjb25zdCBjaGFyKiBjb25zdCogcGFyYW1fbmFtZXMsIHNpemVfdCBjaHVua19zaXplKSB7CiAgTWlubmV0U2Vzc2lvbiogc2Vzc2lvbjsKCiAgbWVtc2V0KCZmcC0+c3BhX2NyZWF0ZV9pbmZvLCAwLCBzaXplb2Yoc3RydWN0IGx3c19zcGFfY3JlYXRlX2luZm8pKTsKICBmcC0+d3MgPSB3c19kdXAod3MpOwogIGZwLT5zcGFfY3JlYXRlX2luZm8uY291bnRfcGFyYW1zID0gbnBhcmFtczsKICBmcC0+c3BhX2NyZWF0ZV9pbmZvLnBhcmFtX25hbWVzID0gcGFyYW1fbmFtZXM7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5tYXhfc3RvcmFnZSA9IGNodW5rX3NpemUgKyAxOwogIGZwLT5zcGFfY3JlYXRlX2luZm8ub3B0X2NiID0gJmZvcm1fcGFyc2VyX2NhbGxiYWNrOwogIGZwLT5zcGFfY3JlYXRlX2luZm8ub3B0X2RhdGEgPSBmcDsKCiAgZnAtPnNwYSA9IGx3c19zcGFfY3JlYXRlX3ZpYV9pbmZvKHdzLT5sd3NpLCAmZnAtPnNwYV9jcmVhdGVfaW5mbyk7Cn0KCk1pbm5ldEZvcm1QYXJzZXIqCmZvcm1fcGFyc2VyX2FsbG9jKEpTQ29udGV4dCogY3R4KSB7CiAgTWlubmV0Rm9ybVBhcnNlciogcmV0OwoKICByZXQgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKE1pbm5ldEZvcm1QYXJzZXIpKTsKICByZXQtPnJlZl9jb3VudCA9IDE7CiAgcmV0dXJuIHJldDsKfQoKTWlubmV0Rm9ybVBhcnNlcioKZm9ybV9wYXJzZXJfbmV3KEpTQ29udGV4dCogY3R4LCBNaW5uZXRXZWJzb2NrZXQqIHdzLCBpbnQgbnBhcmFtcywgY29uc3QgY2hhciogY29uc3QqIHBhcmFtX25hbWVzLCBzaXplX3QgY2h1bmtfc2l6ZSkgewogIE1pbm5ldEZvcm1QYXJzZXIqIGZwOwoKICBpZigoZnAgPSBmb3JtX3BhcnNlcl9hbGxvYyhjdHgpKSkKICAgIGZvcm1fcGFyc2VyX2luaXQoZnAsIHdzLCBucGFyYW1zLCBwYXJhbV9uYW1lcywgY2h1bmtfc2l6ZSk7CgogIHJldHVybiBmcDsKfQoKTWlubmV0Rm9ybVBhcnNlcioKZm9ybV9wYXJzZXJfZHVwKE1pbm5ldEZvcm1QYXJzZXIqIGZwKSB7CiAgKytmcC0+cmVmX2NvdW50OwogIHJldHVybiBmcDsKfQoKdm9pZApmb3JtX3BhcnNlcl96ZXJvKE1pbm5ldEZvcm1QYXJzZXIqIGZwKSB7CiAgZnAtPndzID0gMDsKICBmcC0+c3BhID0gMDsKICBmcC0+bHdzYWNfaGVhZCA9IDA7CiAgbWVtc2V0KCZmcC0+c3BhX2NyZWF0ZV9pbmZvLCAwLCBzaXplb2Yoc3RydWN0IGx3c19zcGFfY3JlYXRlX2luZm8pKTsKfQoKdm9pZApmb3JtX3BhcnNlcl9jbGVhcihNaW5uZXRGb3JtUGFyc2VyKiBmcCwgSlNDb250ZXh0KiBjdHgpIHsKCiAgaWYoZnAtPnNwYSkgewogICAgbHdzX3NwYV9kZXN0cm95KGZwLT5zcGEpOwogICAgZnAtPnNwYSA9IDA7CiAgfQoKICBpZihmcC0+c3BhX2NyZWF0ZV9pbmZvLnBhcmFtX25hbWVzKSB7CiAgICBqc19mcmVlKGN0eCwgKHZvaWQqKWZwLT5zcGFfY3JlYXRlX2luZm8ucGFyYW1fbmFtZXMpOwogIH0KICBtZW1zZXQoJmZwLT5zcGFfY3JlYXRlX2luZm8sIDAsIHNpemVvZihzdHJ1Y3QgbHdzX3NwYV9jcmVhdGVfaW5mbykpOwoKICBGUkVFQ0IoZnAtPmNiLmNvbnRlbnQpOwogIEZSRUVDQihmcC0+Y2Iub3Blbik7CiAgRlJFRUNCKGZwLT5jYi5jbG9zZSk7Cn0KCnZvaWQKZm9ybV9wYXJzZXJfY2xlYXJfcnQoTWlubmV0Rm9ybVBhcnNlciogZnAsIEpTUnVudGltZSogcnQpIHsKCiAgaWYoZnAtPnNwYSkgewogICAgbHdzX3NwYV9kZXN0cm95KGZwLT5zcGEpOwogICAgZnAtPnNwYSA9IDA7CiAgfQoKICBpZihmcC0+c3BhX2NyZWF0ZV9pbmZvLnBhcmFtX25hbWVzKSB7CiAgICBqc19mcmVlX3J0KHJ0LCAodm9pZCopZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lcyk7CiAgfQogIG1lbXNldCgmZnAtPnNwYV9jcmVhdGVfaW5mbywgMCwgc2l6ZW9mKHN0cnVjdCBsd3Nfc3BhX2NyZWF0ZV9pbmZvKSk7CgogIEZSRUVDQl9SVChmcC0+Y2IuY29udGVudCk7CiAgRlJFRUNCX1JUKGZwLT5jYi5vcGVuKTsKICBGUkVFQ0JfUlQoZnAtPmNiLmNsb3NlKTsKfQoKdm9pZApmb3JtX3BhcnNlcl9mcmVlKE1pbm5ldEZvcm1QYXJzZXIqIGZwLCBKU0NvbnRleHQqIGN0eCkgewogIGlmKC0tZnAtPnJlZl9jb3VudCA9PSAwKSB7CiAgICB3c19mcmVlKGN0eCwgZnAtPndzKTsKICAgIGZvcm1fcGFyc2VyX2NsZWFyKGZwLCBjdHgpOwogICAganNfZnJlZShjdHgsIGZwKTsKICB9Cn0KCnZvaWQKZm9ybV9wYXJzZXJfZnJlZV9ydChNaW5uZXRGb3JtUGFyc2VyKiBmcCwgSlNSdW50aW1lKiBydCkgewogIGlmKC0tZnAtPnJlZl9jb3VudCA9PSAwKSB7CiAgICB3c19mcmVlX3J0KHJ0LCBmcC0+d3MpOwogICAgZm9ybV9wYXJzZXJfY2xlYXJfcnQoZnAsIHJ0KTsKICAgIGpzX2ZyZWVfcnQocnQsIGZwKTsKICB9Cn0KCmNoYXIqCmZvcm1fcGFyc2VyX3BhcmFtX25hbWUoTWlubmV0Rm9ybVBhcnNlciogZnAsIGludCBpbmRleCkgewogIGlmKGluZGV4ID49IDAgJiYgaW5kZXggPCBmcC0+c3BhX2NyZWF0ZV9pbmZvLmNvdW50X3BhcmFtcykgewogICAgcmV0dXJuIGZwLT5zcGFfY3JlYXRlX2luZm8ucGFyYW1fbmFtZXNbaW5kZXhdOwogIH0KICByZXR1cm4gMDsKfQoKQk9PTApmb3JtX3BhcnNlcl9wYXJhbV92YWxpZChNaW5uZXRGb3JtUGFyc2VyKiBmcCwgaW50IGluZGV4KSB7CiAgaWYoaW5kZXggPj0gMCAmJiBpbmRleCA8IGZwLT5zcGFfY3JlYXRlX2luZm8uY291bnRfcGFyYW1zKSB7CiAgICByZXR1cm4gVFJVRTsKICB9CiAgcmV0dXJuIEZBTFNFOwp9CgpzaXplX3QKZm9ybV9wYXJzZXJfcGFyYW1fY291bnQoTWlubmV0Rm9ybVBhcnNlciogZnApIHsKICByZXR1cm4gZnAtPnNwYV9jcmVhdGVfaW5mby5jb3VudF9wYXJhbXM7Cn0KCmludApmb3JtX3BhcnNlcl9wYXJhbV9pbmRleChNaW5uZXRGb3JtUGFyc2VyKiBmcCwgY29uc3QgY2hhciogbmFtZSkgewogIGludCBpOwogIGZvcihpID0gMDsgaSA8IGZwLT5zcGFfY3JlYXRlX2luZm8uY291bnRfcGFyYW1zOyBpKyspIHsKICAgIGlmKCFzdHJjbXAoZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lc1tpXSwgbmFtZSkpCiAgICAgIHJldHVybiBpOwogIH0KICByZXR1cm4gLTE7Cn0KCkJPT0wKZm9ybV9wYXJzZXJfcGFyYW1fZXhpc3RzKE1pbm5ldEZvcm1QYXJzZXIqIGZwLCBjb25zdCBjaGFyKiBuYW1lKSB7CiAgaW50IGkgPSBmb3JtX3BhcnNlcl9wYXJhbV9pbmRleChmcCwgbmFtZSk7CgogIHJldHVybiBpICE9IC0xOwp9CgppbnQKZm9ybV9wYXJzZXJfcHJvY2VzcyhNaW5uZXRGb3JtUGFyc2VyKiBmcCwgY29uc3Qgdm9pZCogZGF0YSwgc2l6ZV90IGxlbikgewogIHJldHVybiBsd3Nfc3BhX3Byb2Nlc3MoZnAtPnNwYSwgZGF0YSwgbGVuKTsKfQoKSlNWYWx1ZQptaW5uZXRfZm9ybV9wYXJzZXJfY29uc3RydWN0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcHJvdG8sIG9iajsKICBNaW5uZXRGb3JtUGFyc2VyKiBmcDsKICBNaW5uZXRXZWJzb2NrZXQqIHdzOwogIGNoYXIqKiBwYXJhbV9uYW1lczsKICBpbnQgcGFyYW1fY291bnQ7CiAgQk9PTCBnb3RfdXJsID0gRkFMU0U7CiAgdWludDY0X3QgY2h1bmtfc2l6ZSA9IDEwMjQ7CgogIGlmKCEoZnAgPSBmb3JtX3BhcnNlcl9hbGxvYyhjdHgpKSkKICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgcHJvdG8gPSBKU19EdXBWYWx1ZShjdHgsIG1pbm5ldF9mb3JtX3BhcnNlcl9wcm90byk7CgogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywgbWlubmV0X2Zvcm1fcGFyc2VyX2NsYXNzX2lkKTsKICBKU19GcmVlVmFsdWUoY3R4LCBwcm90byk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKCiAgaWYoYXJnYyA8IDEgfHwgKHdzID0gbWlubmV0X3dzX2RhdGEoYXJndlswXSkpID09IDApIHsKICAgIEpTX1Rocm93SW50ZXJuYWxFcnJvcihjdHgsICJhcmd1bWVudCAxIG11c3QgYmUgU29ja2V0Iik7CiAgICBnb3RvIGZhaWw7CiAgfQogIGlmKGFyZ2MgPCAyIHx8IChwYXJhbV9uYW1lcyA9IGpzX2FycmF5X3RvX2FyZ3YoY3R4LCAmcGFyYW1fY291bnQsIGFyZ3ZbMV0pKSA9PSAwKSB7CiAgICBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCAiYXJndW1lbnQgMiBtdXN0IGJlIEFycmF5IG9mIHBhcmFtZXRlciBuYW1lcyIpOwogICAgZ290byBmYWlsOwogIH0KCiAgaWYoYXJnYyA+PSAzICYmIEpTX0lzT2JqZWN0KGFyZ3ZbMl0pKSB7CiAgICBKU1ZhbHVlIHRoaXNfdmFsID0gb2JqOwoKICAgIEpTVmFsdWUgY2JfY29udGVudCA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgYXJndlsyXSwgIm9uQ29udGVudCIpOwogICAgSlNWYWx1ZSBjYl9vcGVuID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBhcmd2WzJdLCAib25PcGVuIik7CiAgICBKU1ZhbHVlIGNiX2Nsb3NlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBhcmd2WzJdLCAib25DbG9zZSIpOwogICAgSlNWYWx1ZSBvcHRfY2h1bmtzeiA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgYXJndlsyXSwgImNodW5rU2l6ZSIpOwoKICAgIEdFVENCKGNiX2NvbnRlbnQsIGZwLT5jYi5jb250ZW50KQogICAgR0VUQ0IoY2Jfb3BlbiwgZnAtPmNiLm9wZW4pCiAgICBHRVRDQihjYl9jbG9zZSwgZnAtPmNiLmNsb3NlKQoKICAgIGlmKEpTX0lzTnVtYmVyKG9wdF9jaHVua3N6KSkgewogICAgICBKU19Ub0luZGV4KGN0eCwgJmNodW5rX3NpemUsIG9wdF9jaHVua3N6KTsKICAgIH0KICB9CgogIGZvcm1fcGFyc2VyX2luaXQoZnAsIHdzLCBwYXJhbV9jb3VudCwgcGFyYW1fbmFtZXMsIGNodW5rX3NpemUpOwoKICB7CiAgICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSA9IHdzX29wYXF1ZSh3cyk7CgogICAgaWYob3BhcXVlLT5mb3JtX3BhcnNlcikKICAgICAgZm9ybV9wYXJzZXJfZnJlZShvcGFxdWUtPmZvcm1fcGFyc2VyLCBjdHgpOwogICAgb3BhcXVlLT5mb3JtX3BhcnNlciA9IGZwOwogIH0KCiAgSlNfU2V0T3BhcXVlKG9iaiwgZnApOwoKICByZXR1cm4gb2JqOwoKZmFpbDoKICBqc19mcmVlKGN0eCwgZnApOwogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKSlNWYWx1ZQptaW5uZXRfZm9ybV9wYXJzZXJfbmV3KEpTQ29udGV4dCogY3R4LCBNaW5uZXRXZWJzb2NrZXQqIHdzLCBpbnQgbnBhcmFtcywgY29uc3QgY2hhciogY29uc3QqIHBhcmFtX25hbWVzLCBzaXplX3QgY2h1bmtfc2l6ZSkgewogIE1pbm5ldEZvcm1QYXJzZXIqIGZwOwoKICBpZighKGZwID0gZm9ybV9wYXJzZXJfbmV3KGN0eCwgd3MsIG5wYXJhbXMsIHBhcmFtX25hbWVzLCBjaHVua19zaXplKSkpCiAgICByZXR1cm4gSlNfVGhyb3dPdXRPZk1lbW9yeShjdHgpOwoKICByZXR1cm4gbWlubmV0X2Zvcm1fcGFyc2VyX3dyYXAoY3R4LCBmcCk7Cn0KCkpTVmFsdWUKbWlubmV0X2Zvcm1fcGFyc2VyX3dyYXAoSlNDb250ZXh0KiBjdHgsIE1pbm5ldEZvcm1QYXJzZXIqIGZwKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgbWlubmV0X2Zvcm1fcGFyc2VyX3Byb3RvLCBtaW5uZXRfZm9ybV9wYXJzZXJfY2xhc3NfaWQpOwoKICBpZihKU19Jc0V4Y2VwdGlvbihyZXQpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgSlNfU2V0T3BhcXVlKHJldCwgZm9ybV9wYXJzZXJfZHVwKGZwKSk7CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9mb3JtX3BhcnNlcl9nZXQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IG1hZ2ljKSB7CiAgTWlubmV0Rm9ybVBhcnNlciogZnA7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEoZnAgPSBtaW5uZXRfZm9ybV9wYXJzZXJfZGF0YTIoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgc3dpdGNoKG1hZ2ljKSB7CgogICAgY2FzZSBGT1JNX1BBUlNFUl9QQVJBTVM6IHsKICAgICAgcmV0ID0ganNfYXJndl90b19hcnJheShjdHgsIGZwLT5zcGFfY3JlYXRlX2luZm8ucGFyYW1fbmFtZXMpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRk9STV9QQVJTRVJfU09DS0VUOiB7CiAgICAgIHJldCA9IG1pbm5ldF93c193cmFwKGN0eCwgZnAtPndzKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIEZPUk1fUEFSU0VSX09OX09QRU46IHsKICAgICAgcmV0ID0gSlNfRHVwVmFsdWUoY3R4LCBmcC0+Y2Iub3Blbi5mdW5jX29iaik7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBGT1JNX1BBUlNFUl9PTl9DT05URU5UOiB7CiAgICAgIHJldCA9IEpTX0R1cFZhbHVlKGN0eCwgZnAtPmNiLmNvbnRlbnQuZnVuY19vYmopOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRk9STV9QQVJTRVJfT05fQ0xPU0U6IHsKICAgICAgcmV0ID0gSlNfRHVwVmFsdWUoY3R4LCBmcC0+Y2IuY2xvc2UuZnVuY19vYmopOwogICAgICBicmVhazsKICAgIH0KICB9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKbWlubmV0X2Zvcm1fcGFyc2VyX3NldChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGludCBtYWdpYykgewogIE1pbm5ldEZvcm1QYXJzZXIqIGZwOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKGZwID0gbWlubmV0X2Zvcm1fcGFyc2VyX2RhdGEyKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIHN3aXRjaChtYWdpYykgewoKICAgIGNhc2UgRk9STV9QQVJTRVJfT05fT1BFTjogewogICAgICBKU19GcmVlVmFsdWUoY3R4LCBmcC0+Y2Iub3Blbi5mdW5jX29iaik7CiAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGZwLT5jYi5vcGVuLnRoaXNfb2JqKTsKICAgICAgZnAtPmNiLm9wZW4uY3R4ID0gY3R4OwogICAgICBmcC0+Y2Iub3Blbi5mdW5jX29iaiA9IEpTX0R1cFZhbHVlKGN0eCwgdmFsdWUpOwogICAgICBmcC0+Y2Iub3Blbi50aGlzX29iaiA9IEpTX0R1cFZhbHVlKGN0eCwgdGhpc192YWwpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRk9STV9QQVJTRVJfT05fQ09OVEVOVDogewogICAgICBKU19GcmVlVmFsdWUoY3R4LCBmcC0+Y2IuY29udGVudC5mdW5jX29iaik7CiAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGZwLT5jYi5jb250ZW50LnRoaXNfb2JqKTsKICAgICAgZnAtPmNiLmNvbnRlbnQuY3R4ID0gY3R4OwogICAgICBmcC0+Y2IuY29udGVudC5mdW5jX29iaiA9IEpTX0R1cFZhbHVlKGN0eCwgdmFsdWUpOwogICAgICBmcC0+Y2IuY29udGVudC50aGlzX29iaiA9IEpTX0R1cFZhbHVlKGN0eCwgdGhpc192YWwpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRk9STV9QQVJTRVJfT05fQ0xPU0U6IHsKICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgZnAtPmNiLmNsb3NlLmZ1bmNfb2JqKTsKICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgZnAtPmNiLmNsb3NlLnRoaXNfb2JqKTsKICAgICAgZnAtPmNiLmNsb3NlLmN0eCA9IGN0eDsKICAgICAgZnAtPmNiLmNsb3NlLmZ1bmNfb2JqID0gSlNfRHVwVmFsdWUoY3R4LCB2YWx1ZSk7CiAgICAgIGZwLT5jYi5jbG9zZS50aGlzX29iaiA9IEpTX0R1cFZhbHVlKGN0eCwgdGhpc192YWwpOwogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyB2b2lkCm1pbm5ldF9mb3JtX3BhcnNlcl9maW5hbGl6ZXIoSlNSdW50aW1lKiBydCwgSlNWYWx1ZSB2YWwpIHsKICBNaW5uZXRGb3JtUGFyc2VyKiBmcDsKCiAgaWYoKGZwID0gbWlubmV0X2Zvcm1fcGFyc2VyX2RhdGEodmFsKSkpCiAgICBmb3JtX3BhcnNlcl9mcmVlX3J0KGZwLCBydCk7Cn0KCnN0YXRpYyBpbnQKbWlubmV0X2Zvcm1fcGFyc2VyX2dldF9vd25fcHJvcGVydHkoSlNDb250ZXh0KiBjdHgsIEpTUHJvcGVydHlEZXNjcmlwdG9yKiBwZGVzYywgSlNWYWx1ZUNvbnN0IG9iaiwgSlNBdG9tIHByb3ApIHsKICBNaW5uZXRGb3JtUGFyc2VyKiBmcCA9IG1pbm5ldF9mb3JtX3BhcnNlcl9kYXRhMihjdHgsIG9iaik7CgogIEpTVmFsdWUgdmFsdWUgPSBKU19VTkRFRklORUQ7CiAgaW50NjRfdCBpbmRleDsKCiAgaWYoanNfYXRvbV9pc19pbmRleChjdHgsICZpbmRleCwgcHJvcCkpIHsKICAgIGNoYXIqIHBhcmFtX25hbWU7CgogICAgaWYoZm9ybV9wYXJzZXJfcGFyYW1fdmFsaWQoZnAsIGluZGV4KSkgewoKICAgICAgcGRlc2MtPmZsYWdzID0gSlNfUFJPUF9FTlVNRVJBQkxFOwogICAgICBwZGVzYy0+dmFsdWUgPSBKU19OZXdTdHJpbmcoY3R4LCBmb3JtX3BhcnNlcl9wYXJhbV9uYW1lKGZwLCBpbmRleCkpOwogICAgICBwZGVzYy0+Z2V0dGVyID0gSlNfVU5ERUZJTkVEOwogICAgICBwZGVzYy0+c2V0dGVyID0gSlNfVU5ERUZJTkVEOwogICAgICByZXR1cm4gVFJVRTsKICAgIH0KICB9IGVsc2UgaWYoanNfYXRvbV9pc19sZW5ndGgoY3R4LCBwcm9wKSkgewogICAgcGRlc2MtPmZsYWdzID0gSlNfUFJPUF9FTlVNRVJBQkxFOwogICAgcGRlc2MtPnZhbHVlID0gSlNfTmV3VWludDMyKGN0eCwgZm9ybV9wYXJzZXJfcGFyYW1fY291bnQoZnApKTsKICAgIHBkZXNjLT5nZXR0ZXIgPSBKU19VTkRFRklORUQ7CiAgICBwZGVzYy0+c2V0dGVyID0gSlNfVU5ERUZJTkVEOwogICAgcmV0dXJuIFRSVUU7CiAgfSBlbHNlIHsKICAgIGNvbnN0IGNoYXIqIHN0ciA9IEpTX0F0b21Ub0NTdHJpbmcoY3R4LCBwcm9wKTsKICAgIEJPT0wgcmV0ID0gRkFMU0U7CiAgICBpbnQgaW5kZXg7CgogICAgaWYoKGluZGV4ID0gZm9ybV9wYXJzZXJfcGFyYW1faW5kZXgoZnAsIHN0cikpICE9IC0xKSB7CiAgICAgIHJldCA9IFRSVUU7CiAgICAgIHBkZXNjLT5mbGFncyA9IEpTX1BST1BfRU5VTUVSQUJMRTsKICAgICAgcGRlc2MtPnZhbHVlID0gSlNfTmV3U3RyaW5nTGVuKGN0eCwgbHdzX3NwYV9nZXRfc3RyaW5nKGZwLT5zcGEsIGluZGV4KSwgbHdzX3NwYV9nZXRfbGVuZ3RoKGZwLT5zcGEsIGluZGV4KSk7CiAgICAgIHBkZXNjLT5nZXR0ZXIgPSBKU19VTkRFRklORUQ7CiAgICAgIHBkZXNjLT5zZXR0ZXIgPSBKU19VTkRFRklORUQ7CiAgICB9CgogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzdHIpOwogICAgcmV0dXJuIHJldDsKICB9CgogIHJldHVybiBGQUxTRTsKfQoKc3RhdGljIGludAptaW5uZXRfZm9ybV9wYXJzZXJfZ2V0X293bl9wcm9wZXJ0eV9uYW1lcyhKU0NvbnRleHQqIGN0eCwgSlNQcm9wZXJ0eUVudW0qKiBwdGFiLCB1aW50MzJfdCogcGxlbiwgSlNWYWx1ZUNvbnN0IG9iaikgewogIE1pbm5ldEZvcm1QYXJzZXIqIGZwID0gbWlubmV0X2Zvcm1fcGFyc2VyX2RhdGEyKGN0eCwgb2JqKTsKICBKU1Byb3BlcnR5RW51bSogcHJvcHM7CiAgc2l6ZV90IGksIGxlbiA9IGZvcm1fcGFyc2VyX3BhcmFtX2NvdW50KGZwKTsKCiAgcHJvcHMgPSBqc19tYWxsb2MoY3R4LCBzaXplb2YoSlNQcm9wZXJ0eUVudW0pICogKGxlbiArIDEpKTsKCiAgZm9yKGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKICAgIHByb3BzW2ldLmlzX2VudW1lcmFibGUgPSBUUlVFOwogICAgcHJvcHNbaV0uYXRvbSA9IEpTX05ld0F0b20oY3R4LCBmb3JtX3BhcnNlcl9wYXJhbV9uYW1lKGZwLCBpKSk7CiAgfQoKICBwcm9wc1tsZW5dLmlzX2VudW1lcmFibGUgPSBUUlVFOwogIHByb3BzW2xlbl0uYXRvbSA9IEpTX05ld0F0b20oY3R4LCAibGVuZ3RoIik7CgogICpwdGFiID0gcHJvcHM7CiAgKnBsZW4gPSBsZW4gKyAxOwogIHJldHVybiAwOwp9CgpzdGF0aWMgaW50Cm1pbm5ldF9mb3JtX3BhcnNlcl9oYXNfcHJvcGVydHkoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmosIEpTQXRvbSBwcm9wKSB7CiAgTWlubmV0Rm9ybVBhcnNlciogZnAgPSBtaW5uZXRfZm9ybV9wYXJzZXJfZGF0YTIoY3R4LCBvYmopOwogIGludDY0X3QgaW5kZXg7CgogIGlmKGpzX2F0b21faXNfaW5kZXgoY3R4LCAmaW5kZXgsIHByb3ApKSB7CgogICAgcmV0dXJuIGZvcm1fcGFyc2VyX3BhcmFtX3ZhbGlkKGZwLCBpbmRleCk7CiAgfSBlbHNlIGlmKGpzX2F0b21faXNfbGVuZ3RoKGN0eCwgcHJvcCkpIHsKICAgIHJldHVybiBUUlVFOwogIH0gZWxzZSB7CiAgICBjb25zdCBjaGFyKiBzdHIgPSBKU19BdG9tVG9DU3RyaW5nKGN0eCwgcHJvcCk7CgogICAgQk9PTCByZXQgPSBmb3JtX3BhcnNlcl9wYXJhbV9leGlzdHMoZnAsIHN0cik7CgogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzdHIpOwogICAgcmV0dXJuIHJldDsKICB9CgogIHJldHVybiBGQUxTRTsKfQoKc3RhdGljIEpTVmFsdWUKbWlubmV0X2Zvcm1fcGFyc2VyX2dldF9wcm9wZXJ0eShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaiwgSlNBdG9tIHByb3AsIEpTVmFsdWVDb25zdCByZWNlaXZlcikgewogIE1pbm5ldEZvcm1QYXJzZXIqIGZwID0gbWlubmV0X2Zvcm1fcGFyc2VyX2RhdGEyKGN0eCwgb2JqKTsKICBKU1ZhbHVlIHZhbHVlID0gSlNfVU5ERUZJTkVEOwogIGludDY0X3QgaW5kZXg7CiAgaW50MzJfdCBlbnRyeTsKCiAgaWYoanNfYXRvbV9pc19pbmRleChjdHgsICZpbmRleCwgcHJvcCkpIHsKICAgIGNoYXIqIHBhcmFtX25hbWU7CgogICAgaWYoZm9ybV9wYXJzZXJfcGFyYW1fdmFsaWQoZnAsIGluZGV4KSkgewoKICAgICAgdmFsdWUgPSBKU19OZXdTdHJpbmcoY3R4LCBmb3JtX3BhcnNlcl9wYXJhbV9uYW1lKGZwLCBpbmRleCkpOwogICAgfQogIH0gZWxzZSBpZihqc19hdG9tX2lzX2xlbmd0aChjdHgsIHByb3ApKSB7CiAgICB2YWx1ZSA9IEpTX05ld1VpbnQzMihjdHgsIGZvcm1fcGFyc2VyX3BhcmFtX2NvdW50KGZwKSk7CiAgfSBlbHNlIHsKICAgIGNvbnN0IGNoYXIqIHN0ciA9IEpTX0F0b21Ub0NTdHJpbmcoY3R4LCBwcm9wKTsKCiAgICBpbnQgaW5kZXg7CgogICAgaWYoKGluZGV4ID0gZm9ybV9wYXJzZXJfcGFyYW1faW5kZXgoZnAsIHN0cikpICE9IC0xKSB7CiAgICAgIHZhbHVlID0gSlNfTmV3U3RyaW5nTGVuKGN0eCwgbHdzX3NwYV9nZXRfc3RyaW5nKGZwLT5zcGEsIGluZGV4KSwgbHdzX3NwYV9nZXRfbGVuZ3RoKGZwLT5zcGEsIGluZGV4KSk7CgogICAgfSBlbHNlIHsKICAgICAgSlNWYWx1ZSBwcm90byA9IEpTX0dldFByb3RvdHlwZShjdHgsIG9iaik7CiAgICAgIGlmKEpTX0lzT2JqZWN0KHByb3RvKSAmJiBKU19IYXNQcm9wZXJ0eShjdHgsIHByb3RvLCBwcm9wKSkKICAgICAgICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5KGN0eCwgcHJvdG8sIHByb3ApOwogICAgfQoKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgc3RyKTsKICB9CgogIHJldHVybiB2YWx1ZTsKfQoKc3RhdGljIGludAptaW5uZXRfZm9ybV9wYXJzZXJfZGVmaW5lX293bl9wcm9wZXJ0eShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfb2JqLCBKU0F0b20gcHJvcCwgSlNWYWx1ZUNvbnN0IHZhbCwgSlNWYWx1ZUNvbnN0IGdldHRlciwgSlNWYWx1ZUNvbnN0IHNldHRlciwgaW50IGZsYWdzKSB7CiAgLy8gTWlubmV0Rm9ybVBhcnNlciogZnAgPSBtaW5uZXRfZm9ybV9wYXJzZXJfZGF0YTIoY3R4LCB0aGlzX29iaik7CgogIGlmKGpzX2F0b21faXNfaW5kZXgoY3R4LCAmaW5kZXgsIHByb3ApKSB7CiAgICByZXR1cm4gVFJVRTsKICB9IGVsc2UgaWYoanNfYXRvbV9pc19sZW5ndGgoY3R4LCBwcm9wKSkgewogICAgcmV0dXJuIFRSVUU7CiAgfQoKICAvKiBydW4gdGhlIGRlZmF1bHQgZGVmaW5lIG93biBwcm9wZXJ0eSAqLwogIHJldHVybiBKU19EZWZpbmVQcm9wZXJ0eShjdHgsIHRoaXNfb2JqLCBwcm9wLCB2YWwsIGdldHRlciwgc2V0dGVyLCBmbGFncyB8IEpTX1BST1BfTk9fRVhPVElDKTsKfQoKSlNWYWx1ZQptaW5uZXRfZm9ybV9wYXJzZXJfY2FsbChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IGZ1bmNfb2JqLCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgZmxhZ3MpIHsKICBNaW5uZXRGb3JtUGFyc2VyKiBmcCA9IG1pbm5ldF9mb3JtX3BhcnNlcl9kYXRhMihjdHgsIGZ1bmNfb2JqKTsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoYXJnYyA8IDEpCiAgICByZXR1cm4gSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgImFyZ3VtZW50IDEgbXVzdCBiZSBTdHJpbmcsIEFycmF5QnVmZmVyIG9yIG51bGwiKTsKCiAgaWYoSlNfSXNOdWxsKGFyZ3ZbMF0pKSB7CiAgICByZXQgPSBKU19OZXdJbnQzMihjdHgsIGx3c19zcGFfZmluYWxpemUoZnAtPnNwYSkpOwoKICB9IGVsc2UgewogICAgSlNCdWZmZXIgYnVmOwoKICAgIGpzX2J1ZmZlcl9mcm9tKGN0eCwgJmJ1ZiwgYXJndlswXSk7CgogICAgaWYoYnVmLmRhdGEgPT0gMCkKICAgICAgcmV0dXJuIEpTX1Rocm93SW50ZXJuYWxFcnJvcihjdHgsICJhcmd1bWVudCAxIG11c3QgYmUgU3RyaW5nIG9yIEFycmF5QnVmZmVyIik7CgogICAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCBmb3JtX3BhcnNlcl9wcm9jZXNzKGZwLT5zcGEsIGJ1Zi5kYXRhLCBidWYuc2l6ZSkpOwoKICAgIGpzX2J1ZmZlcl9mcmVlKCZidWYsIGN0eCk7CiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU0NsYXNzRXhvdGljTWV0aG9kcyBtaW5uZXRfZm9ybV9wYXJzZXJfZXhvdGljX21ldGhvZHMgPSB7CiAgICAuZ2V0X293bl9wcm9wZXJ0eSA9IG1pbm5ldF9mb3JtX3BhcnNlcl9nZXRfb3duX3Byb3BlcnR5LAogICAgLmdldF9vd25fcHJvcGVydHlfbmFtZXMgPSBtaW5uZXRfZm9ybV9wYXJzZXJfZ2V0X293bl9wcm9wZXJ0eV9uYW1lcywKICAgIC8vLmhhc19wcm9wZXJ0eSA9IG1pbm5ldF9mb3JtX3BhcnNlcl9oYXNfcHJvcGVydHksCiAgICAuZGVmaW5lX293bl9wcm9wZXJ0eSA9IG1pbm5ldF9mb3JtX3BhcnNlcl9kZWZpbmVfb3duX3Byb3BlcnR5LAogICAgLy8uZ2V0X3Byb3BlcnR5ID0gbWlubmV0X2Zvcm1fcGFyc2VyX2dldF9wcm9wZXJ0eSwKICAgIC8vLnNldF9wcm9wZXJ0eSA9IG1pbm5ldF9mb3JtX3BhcnNlcl9zZXRfcHJvcGVydHksCn07CkpTQ2xhc3NEZWYgbWlubmV0X2Zvcm1fcGFyc2VyX2NsYXNzID0gewogICAgIk1pbm5ldEZvcm1QYXJzZXIiLAogICAgLmZpbmFsaXplciA9IG1pbm5ldF9mb3JtX3BhcnNlcl9maW5hbGl6ZXIsCiAgICAuZXhvdGljID0gJm1pbm5ldF9mb3JtX3BhcnNlcl9leG90aWNfbWV0aG9kcywKICAgIC5jYWxsID0gJm1pbm5ldF9mb3JtX3BhcnNlcl9jYWxsLAp9OwoKY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X2Zvcm1fcGFyc2VyX3Byb3RvX2Z1bmNzW10gPSB7CiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigic29ja2V0IiwgbWlubmV0X2Zvcm1fcGFyc2VyX2dldCwgbWlubmV0X2Zvcm1fcGFyc2VyX3NldCwgRk9STV9QQVJTRVJfU09DS0VULCAwKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJwYXJhbXMiLCBtaW5uZXRfZm9ybV9wYXJzZXJfZ2V0LCBtaW5uZXRfZm9ybV9wYXJzZXJfc2V0LCBGT1JNX1BBUlNFUl9QQVJBTVMsIDApLAogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJNaW5uZXRGb3JtUGFyc2VyIiwgSlNfUFJPUF9DT05GSUdVUkFCTEUpLAp9OwoKY29uc3Qgc2l6ZV90IG1pbm5ldF9mb3JtX3BhcnNlcl9wcm90b19mdW5jc19zaXplID0gY291bnRvZihtaW5uZXRfZm9ybV9wYXJzZXJfcHJvdG9fZnVuY3MpOwoAAAAAAAAAAHg7AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gAAAAAAAAAyAQAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA6gAAAAAAAAAyAQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					2,
					"left_delete",
					null,
					"AgAAAE4zAAAAAAAATjMAAAAAAAAFAAAAaW5kZXhNMwAAAAAAAE0zAAAAAAAAAQAAACY",
					"AQAAAAAAAAABAAAATjMAAAAAAABTMwAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "NULL"
					},
					"BAAAAE0zAAAAAAAATjMAAAAAAAAAAAAATjMAAAAAAABPMwAAAAAAAAAAAABPMwAAAAAAAFAzAAAAAAAAAAAAAFAzAAAAAAAAUTMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATTMAAAAAAABNMwAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAbTMAAAAAAACZMwAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAbjEAAAAAAABuMQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-server-http.c",
			"settings":
			{
				"buffer_size": 27246,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1401,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFJgAAAAAAAAU2AAAAAAAAAAAAAAU2AAAAAAAABTYAAAAAAAAHwAAAAKICAgICAgLyppZighaXNfaDIod3NpKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBodHRwX3NlcnZlcl9nZW5lcmF0ZSh3c2ksIGN0eCwgc2Vzc2lvbiwgb3BhcXVlLCBpbiwgbGVuKTsKICAgICAgfSov",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSYAAAAAAAAM5gAAAAAAAAAAAAAAAA8L8"
				],
				[
					1406,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANZQAAAAAAAA11AAAAAAAAAAAAAA11AAAAAAAADXUAAAAAAAAIMAAAAKICAgICAgLyoKICAgICAgICAgICAgaWYoIW9wYXF1ZS0+cmVxLT5wYXRoWzBdKQogICAgICAgICAgICAgIHBzdHJjcHkob3BhcXVlLT5yZXEtPnBhdGgsIHNpemVvZihvcGFxdWUtPnJlcS0+cGF0aCksIHBhdGgpOwogICAgICAqLw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZUQAAAAAAANZQAAAAAAAAAAAAAAAA8L8"
				],
				[
					1407,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANdQAAAAAAAA2FAAAAAAAAAAAAAA2FAAAAAAAADeUAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXUAAAAAAAANdQAAAAAAAAAAAAAAAA8L8"
				],
				[
					1415,
					1,
					"insert",
					{
						"characters": " "
					},
					"AwAAAA9NAAAAAAAAEE0AAAAAAAAAAAAAEE0AAAAAAAAQTQAAAAAAAFoAAAAvKiBlbHNlIGlmKGx3c19odHRwX3RyYW5zYWN0aW9uX2NvbXBsZXRlZCh3c2kpKSB7CiAgICAgICAgICAgcmV0dXJuIC0xOwogICAgICAgICB9CgogICAgKi9/UAAAAAAAAH9QAAAAAAAABgAAACAgICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPTQAAAAAAAGlNAAAAAAAAAAAAAAAA8L8"
				],
				[
					1416,
					2,
					"left_delete",
					null,
					"AgAAAA9NAAAAAAAAD00AAAAAAAABAAAAIA5NAAAAAAAADk0AAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQTQAAAAAAABBNAAAAAAAAAAAAAAAA8L8"
				],
				[
					1417,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAA5NAAAAAAAAD00AAAAAAAAAAAAAD00AAAAAAAAXTQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOTQAAAAAAAA5NAAAAAAAAAAAAAAAA8L8"
				],
				[
					1422,
					1,
					"insert",
					{
						"characters": " "
					},
					"AwAAAKlIAAAAAAAAqkgAAAAAAAAAAAAAqkgAAAAAAACqSAAAAAAAADgBAAAgIC8qCiAgICAgICAgICAgIGlmKCFzZXNzaW9uLT5pbl9ib2R5KSB7CiAgICAgICAgICAgICAgY2hhciB0eXBlWzY0XTsKCiAgICAgICAgICAgICAgaWYoaGVhZGVyc19jb3B5KCZyZXEtPmhlYWRlcnMsIHR5cGUsIHNpemVvZih0eXBlKSwgImNvbnRlbnQtdHlwZSIpID4gMCkgewogICAgICAgICAgICAgICAgTE9HQ0IoIkhUVFAiLCAidHlwZTogJXMiLCB0eXBlKTsKCiAgICAgICAgICAgICAgICBpZighc3RybmNtcCh0eXBlLCAibXVsdGlwYXJ0L2Zvcm0tZGF0YSIsIDE5KSkge30KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgKi/YSwAAAAAAANhLAAAAAAAACAAAACAgICAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpSAAAAAAAAOFJAAAAAAAAAAAAAAAA8L8"
				],
				[
					1429,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAHZEAAAAAAAAd0QAAAAAAAAAAAAAd0QAAAAAAAB3RAAAAAAAAHsAAAAgICAvKmNoYXIqIHVyaTsKICAgICAgICBNaW5uZXRIdHRwTWV0aG9kIG1ldGhvZDsKCiAgICAgICAgdXJpID0gbWlubmV0X3VyaV9hbmRfbWV0aG9kKGN0eCwgd3NpLCAmbWV0aG9kKTsKICAgICAgICBpZih1cmkpKi8",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2RAAAAAAAAPFEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1432,
					2,
					"left_delete",
					null,
					"AgAAAG9EAAAAAAAAb0QAAAAAAAABAAAAe25EAAAAAAAAbkQAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwRAAAAAAAAHBEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1434,
					5,
					"left_delete",
					null,
					"BQAAAK1EAAAAAAAArUQAAAAAAAABAAAAfatEAAAAAAAAq0QAAAAAAAACAAAAICCpRAAAAAAAAKlEAAAAAAAAAgAAACAgp0QAAAAAAACnRAAAAAAAAAIAAAAgIKZEAAAAAAAApkQAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuRAAAAAAAAK5EAAAAAAAAAAAAAACAa0A"
				],
				[
					1436,
					4,
					"left_delete",
					null,
					"BAAAAHNEAAAAAAAAc0QAAAAAAAACAAAAICBxRAAAAAAAAHFEAAAAAAAAAgAAACAgb0QAAAAAAABvRAAAAAAAAAIAAAAgIG5EAAAAAAAAbkQAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1RAAAAAAAAHVEAAAAAAAAAAAAAAAAfkA"
				],
				[
					1447,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvPQAAAAAAAC89AAAAAAAAAAAAAAAA8L8"
				],
				[
					1448,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvPQAAAAAAAC89AAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAALz0AAAAAAAAvPQAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"paste",
					null,
					"AQAAAHBQAAAAAAAAelAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcFAAAAAAAABwUAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-response.h",
			"settings":
			{
				"buffer_size": 2224,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACwCAAAI2lmbmRlZiBNSU5ORVRfUkVTUE9OU0VfSAojZGVmaW5lIE1JTk5FVF9SRVNQT05TRV9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8bGlzdC5oPgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCiNpbmNsdWRlICJtaW5uZXQtZ2VuZXJhdG9yLmgiCgovLyBzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwoKdHlwZWRlZiBzdHJ1Y3QgaHR0cF9yZXNwb25zZSB7CiAgaW50IHJlZl9jb3VudDsKICBCT09MIHJlYWRfb25seTsKICBNaW5uZXRVUkwgdXJsOwogIGNoYXIqIHR5cGU7CiAgaW50IHN0YXR1czsKICBjaGFyKiBzdGF0dXNfdGV4dDsKICBCT09MIG9rOwogIE1pbm5ldEJ1ZmZlciBoZWFkZXJzOwogIHVuaW9uIHsKICAgIE1pbm5ldEdlbmVyYXRvciogZ2VuZXJhdG9yOwogICAgTWlubmV0QnVmZmVyKiBib2R5OwogIH07Cn0gTWlubmV0UmVzcG9uc2U7Cgp2b2lkIHJlc3BvbnNlX2Zvcm1hdChNaW5uZXRSZXNwb25zZSBjb25zdCosIGNoYXIqLCBzaXplX3QpOwpjaGFyKiByZXNwb25zZV9kdW1wKE1pbm5ldFJlc3BvbnNlIGNvbnN0Kik7CnZvaWQgcmVzcG9uc2VfaW5pdChNaW5uZXRSZXNwb25zZSosIE1pbm5ldFVSTCwgaW50MzJfdCwgY2hhciogc3RhdHVzX3RleHQsIEJPT0wgb2ssIGNoYXIqIHR5cGUpOwpNaW5uZXRSZXNwb25zZSogcmVzcG9uc2VfZHVwKE1pbm5ldFJlc3BvbnNlKik7Ck1pbm5ldFJlc3BvbnNlKiByZXNwb25zZV9yZWRpcmVjdChNaW5uZXRSZXNwb25zZSogcmVzcCwgY29uc3QgY2hhciogbG9jYXRpb24sIEpTQ29udGV4dCogY3R4KTsKc3NpemVfdCByZXNwb25zZV93cml0ZShNaW5uZXRSZXNwb25zZSosIGNvbnN0IHZvaWQqLCBzaXplX3QsIEpTQ29udGV4dCogY3R4KTsKdm9pZCByZXNwb25zZV9jbGVhcihNaW5uZXRSZXNwb25zZSosIEpTQ29udGV4dCopOwp2b2lkIHJlc3BvbnNlX2NsZWFyX3J0KE1pbm5ldFJlc3BvbnNlKiwgSlNSdW50aW1lKik7CnZvaWQgcmVzcG9uc2VfZnJlZShNaW5uZXRSZXNwb25zZSosIEpTQ29udGV4dCopOwp2b2lkIHJlc3BvbnNlX2ZyZWVfcnQoTWlubmV0UmVzcG9uc2UqLCBKU1J1bnRpbWUqKTsKc3RhdGljIGlubGluZSBNaW5uZXRHZW5lcmF0b3IqCnJlc3BvbnNlX2dlbmVyYXRvcihNaW5uZXRSZXNwb25zZSogcmVzcCwgSlNDb250ZXh0KiBjdHgpIHsKICBpZighcmVzcC0+Z2VuZXJhdG9yKQogICAgcmVzcC0+Z2VuZXJhdG9yID0gZ2VuZXJhdG9yX25ldyhjdHgpOwogIHJldHVybiByZXNwLT5nZW5lcmF0b3I7Cn0KTWlubmV0UmVzcG9uc2UqIHJlc3BvbnNlX25ldyhKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfcmVzcG9uc2VfbmV3KEpTQ29udGV4dCosIE1pbm5ldFVSTCwgaW50LCBjaGFyKiBzdGF0dXNfdGV4dCwgQk9PTCBvaywgY29uc3QgY2hhciogdHlwZSk7CkpTVmFsdWUgbWlubmV0X3Jlc3BvbnNlX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0UmVzcG9uc2UqKTsKSlNWYWx1ZSBtaW5uZXRfcmVzcG9uc2VfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSk7CnZvaWQgbWlubmV0X3Jlc3BvbnNlX2ZpbmFsaXplcihKU1J1bnRpbWUqLCBKU1ZhbHVlKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF9yZXNwb25zZV9jbGFzc19pZDsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU1ZhbHVlIG1pbm5ldF9yZXNwb25zZV9wcm90bywgbWlubmV0X3Jlc3BvbnNlX2N0b3I7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yZXNwb25zZV9jbGFzczsKZXh0ZXJuIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF9yZXNwb25zZV9wcm90b19mdW5jc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF9yZXNwb25zZV9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBNaW5uZXRSZXNwb25zZSoKbWlubmV0X3Jlc3BvbnNlX2RhdGEoSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUob2JqLCBtaW5uZXRfcmVzcG9uc2VfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlc3BvbnNlKgptaW5uZXRfcmVzcG9uc2VfZGF0YTIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3Jlc3BvbnNlX2NsYXNzX2lkKTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9SRVNQT05TRV9IICovCgAAAAAAAAAAsAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAEAAAAAAABsAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "libwebsockets/lib/roles/http/header.c",
			"settings":
			{
				"buffer_size": 16844,
				"line_ending": "Unix"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 3843,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"mde_match_heading_hashes",
					null,
					"AgAAAOUGAAAAAAAANgcAAAAAAABTAAAAIyMjIGBtaW5uZXQuY2xpZW50KG9wdGlvbnMpYDogQ3JlYXRlIGEgV2ViU29ja2V0IGNsaWVudCBhbmQgY29ubmVjdCB0byBhIHNlcnZlci4gIAogAgAAAAAAAHECAAAAAAAAUwAAACMjIyBgbWlubmV0LnNlcnZlcihvcHRpb25zKWA6IENyZWF0ZSBhIFdlYlNvY2tldCBzZXJ2ZXIgYW5kIGxpc3RlbiB0byBob3N0OnBvcnQuICAK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "rsenn"
					},
					"BgAAAJIBAAAAAAAAkwEAAAAAAAAAAAAAkwEAAAAAAACTAQAAAAAAAAcAAABraGFuaGFzkwEAAAAAAACUAQAAAAAAAAAAAACUAQAAAAAAAJUBAAAAAAAAAAAAAJUBAAAAAAAAlgEAAAAAAAAAAAAAlgEAAAAAAACXAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSAQAAAAAAAJkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "qjs-net"
					},
					"CAAAAJgBAAAAAAAAmQEAAAAAAAAAAAAAmQEAAAAAAACZAQAAAAAAAA4AAABtaW5uZXQtcXVpY2tqc5kBAAAAAAAAmgEAAAAAAAAAAAAAmgEAAAAAAACbAQAAAAAAAAAAAACbAQAAAAAAAJwBAAAAAAAAAAAAAJwBAAAAAAAAnQEAAAAAAAAAAAAAnQEAAAAAAACeAQAAAAAAAAAAAACeAQAAAAAAAJ8BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYAQAAAAAAAKYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"paste",
					null,
					"AgAAAKMBAAAAAAAAqgEAAAAAAAAAAAAAqgEAAAAAAACqAQAAAAAAAA4AAABtaW5uZXQtcXVpY2tqcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjAQAAAAAAALEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "net"
					},
					"BAAAAO8BAAAAAAAA8AEAAAAAAAAAAAAA8AEAAAAAAADwAQAAAAAAABoAAAAuL21pbm5ldC1xdWlja2pzL21pbm5ldC5zb/ABAAAAAAAA8QEAAAAAAAAAAAAA8QEAAAAAAADyAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvAQAAAAAAAAkCAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "net"
					},
					"BAAAAOIBAAAAAAAA4wEAAAAAAAAAAAAA4wEAAAAAAADjAQAAAAAAAAYAAABtaW5uZXTjAQAAAAAAAOQBAAAAAAAAAAAAAOQBAAAAAAAA5QEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiAQAAAAAAAOgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "minnet"
					},
					"BwAAAOIBAAAAAAAA4wEAAAAAAAAAAAAA4wEAAAAAAADjAQAAAAAAAAMAAABuZXTjAQAAAAAAAOQBAAAAAAAAAAAAAOQBAAAAAAAA5QEAAAAAAAAAAAAA5QEAAAAAAADmAQAAAAAAAAAAAADmAQAAAAAAAOcBAAAAAAAAAAAAAOcBAAAAAAAA6AEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiAQAAAAAAAOUBAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "example.mjs",
			"settings":
			{
				"buffer_size": 1667,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/test-server-http.js",
			"settings":
			{
				"buffer_size": 1281,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"",
					null,
					"AQAAAC0CAAAAAAAAOwIAAAAAAAAKAAAAb25IdHRwKHJlcQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0AgAAAAAAADQCAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "tests/client.js",
			"settings":
			{
				"buffer_size": 1804,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"",
					null,
					"AgAAAAYFAAAAAAAAFAUAAAAAAAAKAAAAb25IdHRwKHJlcbAEAAAAAAAAvgQAAAAAAAAKAAAAb25IdHRwKHJlcQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsBAAAAAAAAKwEAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "tests/test-client.js",
			"settings":
			{
				"buffer_size": 2523,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"",
					null,
					"AQAAAFEIAAAAAAAAXwgAAAAAAAAKAAAAb25IdHRwKHJlcQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "minnet-response.c",
			"settings":
			{
				"buffer_size": 11748,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAjBcAAAAAAACMFwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "wscli.js",
			"settings":
			{
				"buffer_size": 9790,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"",
					null,
					"AQAAADIZAAAAAAAAQBkAAAAAAAAKAAAAb25IdHRwKHJlcQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "test-rpc.js",
			"settings":
			{
				"buffer_size": 9938,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"",
					null,
					"AQAAACMhAAAAAAAAMSEAAAAAAAAKAAAAb25IdHRwKHJlcQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "minnet-server-http.h",
			"settings":
			{
				"buffer_size": 1888,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": ",MinnetSession*"
					},
					"DwAAACQGAAAAAAAAJQYAAAAAAAAAAAAAJQYAAAAAAAAmBgAAAAAAAAAAAAAmBgAAAAAAACcGAAAAAAAAAAAAACcGAAAAAAAAKAYAAAAAAAAAAAAAKAYAAAAAAAApBgAAAAAAAAAAAAApBgAAAAAAACoGAAAAAAAAAAAAACoGAAAAAAAAKwYAAAAAAAAAAAAAKwYAAAAAAAAsBgAAAAAAAAAAAAAsBgAAAAAAAC0GAAAAAAAAAAAAAC0GAAAAAAAALgYAAAAAAAAAAAAALgYAAAAAAAAvBgAAAAAAAAAAAAAvBgAAAAAAADAGAAAAAAAAAAAAADAGAAAAAAAAMQYAAAAAAAAAAAAAMQYAAAAAAAAyBgAAAAAAAAAAAAAyBgAAAAAAADMGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkBgAAAAAAACQGAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "session"
					},
					"BwAAADMGAAAAAAAANAYAAAAAAAAAAAAANAYAAAAAAAA1BgAAAAAAAAAAAAA1BgAAAAAAADYGAAAAAAAAAAAAADYGAAAAAAAANwYAAAAAAAAAAAAANwYAAAAAAAA4BgAAAAAAAAAAAAA4BgAAAAAAADkGAAAAAAAAAAAAADkGAAAAAAAAOgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzBgAAAAAAADMGAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAADBwAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgdW5pb24gaHR0cF92aG9zdF9vcHRpb25zIHsKICBzdHJ1Y3QgbHdzX3Byb3RvY29sX3Zob3N0X29wdGlvbnMgbHdzOwogIHN0cnVjdCB7CiAgICB1bmlvbiBodHRwX3Zob3N0X29wdGlvbnMgKm5leHQsICpvcHRpb25zOwogICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogIH07Cgp9IE1pbm5ldFZob3N0T3B0aW9uczsKCnR5cGVkZWYgc3RydWN0IGh0dHBfbW91bnQgewogIHVuaW9uIHsKICAgIHN0cnVjdCB7CiAgICAgIHN0cnVjdCBodHRwX21vdW50KiBuZXh0OwogICAgICBjb25zdCBjaGFyICptbnQsICpvcmcsICpkZWYsICpwcm87CiAgICAgIHVuaW9uIGh0dHBfdmhvc3Rfb3B0aW9ucyAqY2dpZW52LCAqZXh0cmFfbWltZXR5cGVzLCAqaW50ZXJwcmV0OwogICAgfTsKICAgIHN0cnVjdCBsd3NfaHR0cF9tb3VudCBsd3M7CiAgfTsKICBNaW5uZXRDYWxsYmFjayBjYWxsYmFjazsKfSBNaW5uZXRIdHRwTW91bnQ7CgpNaW5uZXRWaG9zdE9wdGlvbnMqIHZob3N0X29wdGlvbnNfY3JlYXRlKEpTQ29udGV4dCosIGNvbnN0IGNoYXIqLCBjb25zdCBjaGFyKik7Ck1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZSk7Ck1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19mcm9tb2JqKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKTsKCnZvaWQgdmhvc3Rfb3B0aW9uc19kdW1wKE1pbm5ldFZob3N0T3B0aW9ucyogdm8pOwp2b2lkIHZob3N0X29wdGlvbnNfZnJlZV9saXN0KEpTQ29udGV4dCosIE1pbm5ldFZob3N0T3B0aW9ucyopOwp2b2lkIHZob3N0X29wdGlvbnNfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRWaG9zdE9wdGlvbnMqKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqLCBjb25zdCBjaGFyKiBkZWYsIGNvbnN0IGNoYXIqIHBybywgZW51bSBsd3NfbW91bnRfcHJvdG9jb2xzIG9yaWdpbl9wcm90byk7Ck1pbm5ldEh0dHBNb3VudCogbW91bnRfbmV3KEpTQ29udGV4dCosIEpTVmFsdWUsIGNvbnN0IGNoYXIqKTsKc3RydWN0IGh0dHBfbW91bnQqIG1vdW50X2ZpbmQoTWlubmV0SHR0cE1vdW50KiwgY29uc3QgY2hhciosIHNpemVfdCk7CnN0cnVjdCBodHRwX21vdW50KiBtb3VudF9maW5kX3MoTWlubmV0SHR0cE1vdW50KiwgY29uc3QgY2hhciopOwp2b2lkIG1vdW50X2Zyb212YWx1ZShKU0NvbnRleHQqIGN0eCwgTWlubmV0SHR0cE1vdW50KiogbSwgSlNWYWx1ZUNvbnN0IG9wdF9tb3VudHMpOwp2b2lkIG1vdW50X2ZyZWUoSlNDb250ZXh0KiwgTWlubmV0SHR0cE1vdW50IGNvbnN0Kik7CmludCBodHRwX3NlcnZlcl9yZXNwb25kKHN0cnVjdCBsd3MqLCBNaW5uZXRCdWZmZXIqLCBzdHJ1Y3QgaHR0cF9yZXNwb25zZSosIEpTQ29udGV4dCogY3R4LE1pbm5ldFNlc3Npb24qc2Vzc2lvbik7CmludCBodHRwX3NlcnZlcl93cml0YWJsZShzdHJ1Y3QgbHdzKiwgc3RydWN0IGh0dHBfcmVzcG9uc2UqLCBCT09MKTsKaW50IGh0dHBfc2VydmVyX2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zLCB2b2lkKiwgdm9pZCogaW4sIHNpemVfdCBsZW4pOwoKI2VuZGlmIC8qIE1JTk5FVF9TRVJWRVJfSFRUUF9IICovCgAAAAAAAAAABQcAAAAAAAAAAAAAAAAAAAAAAAAFBwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6BgAAAAAAADoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAFBwAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgdW5pb24gaHR0cF92aG9zdF9vcHRpb25zIHsKICBzdHJ1Y3QgbHdzX3Byb3RvY29sX3Zob3N0X29wdGlvbnMgbHdzOwogIHN0cnVjdCB7CiAgICB1bmlvbiBodHRwX3Zob3N0X29wdGlvbnMgKm5leHQsICpvcHRpb25zOwogICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogIH07Cgp9IE1pbm5ldFZob3N0T3B0aW9uczsKCnR5cGVkZWYgc3RydWN0IGh0dHBfbW91bnQgewogIHVuaW9uIHsKICAgIHN0cnVjdCB7CiAgICAgIHN0cnVjdCBodHRwX21vdW50KiBuZXh0OwogICAgICBjb25zdCBjaGFyICptbnQsICpvcmcsICpkZWYsICpwcm87CiAgICAgIHVuaW9uIGh0dHBfdmhvc3Rfb3B0aW9ucyAqY2dpZW52LCAqZXh0cmFfbWltZXR5cGVzLCAqaW50ZXJwcmV0OwogICAgfTsKICAgIHN0cnVjdCBsd3NfaHR0cF9tb3VudCBsd3M7CiAgfTsKICBNaW5uZXRDYWxsYmFjayBjYWxsYmFjazsKfSBNaW5uZXRIdHRwTW91bnQ7CgpNaW5uZXRWaG9zdE9wdGlvbnMqIHZob3N0X29wdGlvbnNfY3JlYXRlKEpTQ29udGV4dCosIGNvbnN0IGNoYXIqLCBjb25zdCBjaGFyKik7Ck1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZSk7Ck1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19mcm9tb2JqKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKTsKCnZvaWQgdmhvc3Rfb3B0aW9uc19kdW1wKE1pbm5ldFZob3N0T3B0aW9ucyogdm8pOwp2b2lkIHZob3N0X29wdGlvbnNfZnJlZV9saXN0KEpTQ29udGV4dCosIE1pbm5ldFZob3N0T3B0aW9ucyopOwp2b2lkIHZob3N0X29wdGlvbnNfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRWaG9zdE9wdGlvbnMqKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqLCBjb25zdCBjaGFyKiBkZWYsIGNvbnN0IGNoYXIqIHBybywgZW51bSBsd3NfbW91bnRfcHJvdG9jb2xzIG9yaWdpbl9wcm90byk7Ck1pbm5ldEh0dHBNb3VudCogbW91bnRfbmV3KEpTQ29udGV4dCosIEpTVmFsdWUsIGNvbnN0IGNoYXIqKTsKc3RydWN0IGh0dHBfbW91bnQqIG1vdW50X2ZpbmQoTWlubmV0SHR0cE1vdW50KiwgY29uc3QgY2hhciosIHNpemVfdCk7CnN0cnVjdCBodHRwX21vdW50KiBtb3VudF9maW5kX3MoTWlubmV0SHR0cE1vdW50KiwgY29uc3QgY2hhciopOwp2b2lkIG1vdW50X2Zyb212YWx1ZShKU0NvbnRleHQqIGN0eCwgTWlubmV0SHR0cE1vdW50KiogbSwgSlNWYWx1ZUNvbnN0IG9wdF9tb3VudHMpOwp2b2lkIG1vdW50X2ZyZWUoSlNDb250ZXh0KiwgTWlubmV0SHR0cE1vdW50IGNvbnN0Kik7CmludCBodHRwX3NlcnZlcl9yZXNwb25kKHN0cnVjdCBsd3MqLCBNaW5uZXRCdWZmZXIqLCBzdHJ1Y3QgaHR0cF9yZXNwb25zZSosIEpTQ29udGV4dCogY3R4LCBNaW5uZXRTZXNzaW9uKiBzZXNzaW9uKTsKaW50IGh0dHBfc2VydmVyX3dyaXRhYmxlKHN0cnVjdCBsd3MqLCBzdHJ1Y3QgaHR0cF9yZXNwb25zZSosIEJPT0wpOwppbnQgaHR0cF9zZXJ2ZXJfY2FsbGJhY2soc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMsIHZvaWQqLCB2b2lkKiBpbiwgc2l6ZV90IGxlbik7CgojZW5kaWYgLyogTUlOTkVUX1NFUlZFUl9IVFRQX0ggKi8KAAAAAAAAAAAFBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgYAAAAAAAA6BgAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"paste",
					null,
					"AgAAAMsFAAAAAAAAdwcAAAAAAAAAAAAAdwcAAAAAAAB3BwAAAAAAABYBAABpbnQgaHR0cF9zZXJ2ZXJfcmVzcG9uZChzdHJ1Y3QgbHdzKiwgTWlubmV0QnVmZmVyKiwgc3RydWN0IGh0dHBfcmVzcG9uc2UqLCBKU0NvbnRleHQqIGN0eCwgTWlubmV0U2Vzc2lvbiogc2Vzc2lvbik7CmludCBodHRwX3NlcnZlcl93cml0YWJsZShzdHJ1Y3QgbHdzKiwgc3RydWN0IGh0dHBfcmVzcG9uc2UqLCBCT09MKTsKaW50IGh0dHBfc2VydmVyX2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zLCB2b2lkKiwgdm9pZCogaW4sIHNpemVfdCBsZW4pOw",
					"AQAAAAAAAAABAAAA4QYAAAAAAADLBQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbBwAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgdW5pb24gaHR0cF92aG9zdF9vcHRpb25zIHsKICBzdHJ1Y3QgbHdzX3Byb3RvY29sX3Zob3N0X29wdGlvbnMgbHdzOwogIHN0cnVjdCB7CiAgICB1bmlvbiBodHRwX3Zob3N0X29wdGlvbnMgKm5leHQsICpvcHRpb25zOwogICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogIH07Cgp9IE1pbm5ldFZob3N0T3B0aW9uczsKCnR5cGVkZWYgc3RydWN0IGh0dHBfbW91bnQgewogIHVuaW9uIHsKICAgIHN0cnVjdCB7CiAgICAgIHN0cnVjdCBodHRwX21vdW50KiBuZXh0OwogICAgICBjb25zdCBjaGFyICptbnQsICpvcmcsICpkZWYsICpwcm87CiAgICAgIHVuaW9uIGh0dHBfdmhvc3Rfb3B0aW9ucyAqY2dpZW52LCAqZXh0cmFfbWltZXR5cGVzLCAqaW50ZXJwcmV0OwogICAgfTsKICAgIHN0cnVjdCBsd3NfaHR0cF9tb3VudCBsd3M7CiAgfTsKICBNaW5uZXRDYWxsYmFjayBjYWxsYmFjazsKfSBNaW5uZXRIdHRwTW91bnQ7CgpNaW5uZXRWaG9zdE9wdGlvbnMqIHZob3N0X29wdGlvbnNfY3JlYXRlKEpTQ29udGV4dCosIGNvbnN0IGNoYXIqLCBjb25zdCBjaGFyKik7Ck1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZSk7Ck1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19mcm9tb2JqKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKTsKCnZvaWQgdmhvc3Rfb3B0aW9uc19kdW1wKE1pbm5ldFZob3N0T3B0aW9ucyogdm8pOwp2b2lkIHZob3N0X29wdGlvbnNfZnJlZV9saXN0KEpTQ29udGV4dCosIE1pbm5ldFZob3N0T3B0aW9ucyopOwp2b2lkIHZob3N0X29wdGlvbnNfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRWaG9zdE9wdGlvbnMqKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9jcmVhdGUoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqLCBjb25zdCBjaGFyKiBkZWYsIGNvbnN0IGNoYXIqIHBybywgZW51bSBsd3NfbW91bnRfcHJvdG9jb2xzIG9yaWdpbl9wcm90byk7Ck1pbm5ldEh0dHBNb3VudCogbW91bnRfbmV3KEpTQ29udGV4dCosIEpTVmFsdWUsIGNvbnN0IGNoYXIqKTsKc3RydWN0IGh0dHBfbW91bnQqIG1vdW50X2ZpbmQoTWlubmV0SHR0cE1vdW50KiwgY29uc3QgY2hhciosIHNpemVfdCk7CnN0cnVjdCBodHRwX21vdW50KiBtb3VudF9maW5kX3MoTWlubmV0SHR0cE1vdW50KiwgY29uc3QgY2hhciopOwp2b2lkIG1vdW50X2Zyb212YWx1ZShKU0NvbnRleHQqIGN0eCwgTWlubmV0SHR0cE1vdW50KiogbSwgSlNWYWx1ZUNvbnN0IG9wdF9tb3VudHMpOwp2b2lkIG1vdW50X2ZyZWUoSlNDb250ZXh0KiwgTWlubmV0SHR0cE1vdW50IGNvbnN0Kik7CmludCAgICAgICAgICAgICAgICAgaHR0cF9zZXJ2ZXJfcmVzcG9uZChzdHJ1Y3QgbHdzKiwgTWlubmV0QnVmZmVyKiwgc3RydWN0IGh0dHBfcmVzcG9uc2UqLCBKU0NvbnRleHQqIGN0eCwgTWlubmV0U2Vzc2lvbiogc2Vzc2lvbik7CmludCAgICAgICAgICAgICAgICAgaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IGx3cyosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgQk9PTCk7CmludCAgICAgICAgICAgICAgICAgaHR0cF9zZXJ2ZXJfZ2VuZXJhdGUoSlNDb250ZXh0KiwgTWlubmV0U2Vzc2lvbiosIE1pbm5ldFJlc3BvbnNlKiwgQk9PTCogZG9uZV9wKTsKaW50ICAgICAgICAgICAgICAgICBodHRwX3NlcnZlcl9jYWxsYmFjayhzdHJ1Y3QgbHdzKiwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucywgdm9pZCosIHZvaWQqIGluLCBzaXplX3QgbGVuKTsKCgojZW5kaWYgLyogTUlOTkVUX1NFUlZFUl9IVFRQX0ggKi8KAAAAAAAAAABaBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwcAAAAAAAB3BwAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"paste",
					null,
					"AgAAALgGAAAAAAAAzQYAAAAAAAAAAAAAzQYAAAAAAADNBgAAAAAAAA4AAABNaW5uZXRSZXNwb25zZQ",
					"AQAAAAAAAAABAAAAuAYAAAAAAADGBgAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"right_delete",
					null,
					"AQAAAM0GAAAAAAAAzQYAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAzQYAAAAAAADNBgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-websocket.h",
			"settings":
			{
				"buffer_size": 2912,
				"line_ending": "Unix"
			}
		},
		{
			"file": "minnet-server.h",
			"settings":
			{
				"buffer_size": 874,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABqAwAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0gKI2RlZmluZSBNSU5ORVRfU0VSVkVSX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXItaHR0cC5oIgoKI2RlZmluZSBzZXJ2ZXJfZXhjZXB0aW9uKHNlcnZlciwgcmV0dmFsKSBjb250ZXh0X2V4Y2VwdGlvbigmKChzZXJ2ZXIpLT5jb250ZXh0KSwgKHJldHZhbCkpCgpzdHJ1Y3QgaHR0cF9tb3VudDsKCnR5cGVkZWYgc3RydWN0IHNlcnZlcl9jb250ZXh0IHsKICB1bmlvbiB7CiAgICBpbnQgcmVmX2NvdW50OwogICAgTWlubmV0Q29udGV4dCBjb250ZXh0OwogIH07CiAgc3RydWN0IGx3cyogd3NpOwogIE1pbm5ldENhbGxiYWNrcyBjYjsKICBNaW5uZXRWaG9zdE9wdGlvbnMqIG1pbWV0eXBlczsKICBSZXNvbHZlRnVuY3Rpb25zIHByb21pc2U7Cn0gTWlubmV0U2VydmVyOwoKc3RydWN0IHByb3h5X2Nvbm5lY3Rpb247Cgp2b2lkIHNlcnZlcl9jZXJ0aWZpY2F0ZShNaW5uZXRDb250ZXh0KiwgSlNWYWx1ZSk7CkpTVmFsdWUgbWlubmV0X3NlcnZlcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdKTsKaW50IGRlZnByb3RfY2FsbGJhY2soc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMsIHZvaWQqLCB2b2lkKiBpbiwgc2l6ZV90IGxlbik7CmludCB3c19jYWxsYmFjayhzdHJ1Y3QgbHdzKiwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucywgdm9pZCosIHZvaWQqIGluLCBzaXplX3QgbGVuKTsKCi8vIGV4dGVybiBUSFJFQURfTE9DQUwgTWlubmV0U2VydmVyIG1pbm5ldF9zZXJ2ZXI7CgojZW5kaWYgLyogTUlOTkVUX1NFUlZFUl9IICovCgAAAAAAAAAAagMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-request.h",
			"settings":
			{
				"buffer_size": 2312,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAICQAAI2lmbmRlZiBNSU5ORVRfUkVRVUVTVF9ICiNkZWZpbmUgTUlOTkVUX1JFUVVFU1RfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAianN1dGlscy5oIgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtZ2VuZXJhdG9yLmgiCgpzdHJ1Y3Qgc29ja2V0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCmNvbnN0IGNoYXIqIG1ldGhvZF9zdHJpbmcoZW51bSBodHRwX21ldGhvZCk7CmludCBtZXRob2RfbnVtYmVyKGNvbnN0IGNoYXIqKTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfcmVxdWVzdCB7CiAgaW50IHJlZl9jb3VudDsKICBCT09MIHJlYWRfb25seTsKICBlbnVtIGh0dHBfbWV0aG9kIG1ldGhvZDsKICBNaW5uZXRVUkwgdXJsOwogIE1pbm5ldEJ1ZmZlciBoZWFkZXJzOwogIE1pbm5ldEdlbmVyYXRvciogYm9keTsKfSBNaW5uZXRSZXF1ZXN0OwoKdm9pZCByZXF1ZXN0X2Zvcm1hdChNaW5uZXRSZXF1ZXN0IGNvbnN0KiwgY2hhciosIHNpemVfdCwgSlNDb250ZXh0KiBjdHgpOwpjaGFyKiByZXF1ZXN0X2R1bXAoTWlubmV0UmVxdWVzdCBjb25zdCosIEpTQ29udGV4dCopOwp2b2lkIHJlcXVlc3RfaW5pdChNaW5uZXRSZXF1ZXN0KiwgTWlubmV0VVJMLCBlbnVtIGh0dHBfbWV0aG9kKTsKTWlubmV0UmVxdWVzdCogcmVxdWVzdF9uZXcoTWlubmV0VVJMLCBNaW5uZXRIdHRwTWV0aG9kIG1ldGhvZCwgSlNDb250ZXh0Kik7Ck1pbm5ldFJlcXVlc3QqIHJlcXVlc3RfZHVwKE1pbm5ldFJlcXVlc3QqKTsKTWlubmV0UmVxdWVzdCogcmVxdWVzdF9mcm9tb2JqKEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7Ck1pbm5ldFJlcXVlc3QqIHJlcXVlc3RfZnJvbXdzaShzdHJ1Y3QgbHdzKiwgSlNDb250ZXh0Kik7Ck1pbm5ldFJlcXVlc3QqIHJlcXVlc3RfZnJvbXVybChjb25zdCBjaGFyKiB1cmksIEpTQ29udGV4dCogY3R4KTsKdm9pZCByZXF1ZXN0X3plcm8oTWlubmV0UmVxdWVzdCopOwp2b2lkIHJlcXVlc3RfY2xlYXIoTWlubmV0UmVxdWVzdCosIEpTQ29udGV4dCopOwp2b2lkIHJlcXVlc3RfY2xlYXJfcnQoTWlubmV0UmVxdWVzdCosIEpTUnVudGltZSopOwp2b2lkIHJlcXVlc3RfZnJlZShNaW5uZXRSZXF1ZXN0KiwgSlNDb250ZXh0Kik7CnZvaWQgcmVxdWVzdF9mcmVlX3J0KE1pbm5ldFJlcXVlc3QqLCBKU1J1bnRpbWUqKTsKTWlubmV0UmVxdWVzdCogcmVxdWVzdF9mcm9tKGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9mcm9tKEpTQ29udGV4dCosIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CkpTVmFsdWUgbWlubmV0X3JlcXVlc3RfbmV3KEpTQ29udGV4dCosIE1pbm5ldFVSTCwgZW51bSBodHRwX21ldGhvZCk7CkpTVmFsdWUgbWlubmV0X3JlcXVlc3Rfd3JhcChKU0NvbnRleHQqLCBNaW5uZXRSZXF1ZXN0Kik7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3JlcXVlc3RfcHJvdG8sIG1pbm5ldF9yZXF1ZXN0X2N0b3I7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfcmVxdWVzdF9jbGFzczsKZXh0ZXJuIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF9yZXF1ZXN0X3Byb3RvX2Z1bmNzW107CmV4dGVybiBjb25zdCBzaXplX3QgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3Nfc2l6ZTsKCnN0YXRpYyBpbmxpbmUgTWlubmV0UmVxdWVzdCoKbWlubmV0X3JlcXVlc3RfZGF0YShKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZShvYmosIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRSZXF1ZXN0KgptaW5uZXRfcmVxdWVzdF9kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfcmVxdWVzdF9jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgY29uc3QgY2hhcioKbWV0aG9kX25hbWUoaW50IG0pIHsKICBpZihtIDwgMCkKICAgIHJldHVybiAiLTEiOwogIHJldHVybiAoKGNvbnN0IGNoYXIqIGNvbnN0W10peyJHRVQiLCAiUE9TVCIsICJPUFRJT05TIiwgIlBVVCIsICJQQVRDSCIsICJERUxFVEUiLCAiQ09OTkVDVCIsICJIRUFEIn0pW21dOwp9CgojZW5kaWYgLyogTUlOTkVUX1JFUVVFU1RfSCAqLwoAAAAAAAAAAAgJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet.h",
			"settings":
			{
				"buffer_size": 12432,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					19,
					1,
					"left_delete",
					null,
					"AQAAAP4RAAAAAAAA/hEAAAAAAAAQAAAAICBCT09MIGluX2JvZHk7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+EQAAAAAAAA4SAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAkBEAAAAAAACjEQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-generator.c",
			"settings":
			{
				"buffer_size": 3484,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD9DQAAI2luY2x1ZGUgIm1pbm5ldC1nZW5lcmF0b3IuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGFzc2VydC5oPgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgoKI2RlZmluZSBNSU4oYXN5bmNpdGVyYXRvcl9zaGlmdCwgYikgKChhc3luY2l0ZXJhdG9yX3NoaWZ0KSA8IChiKSA/IChhc3luY2l0ZXJhdG9yX3NoaWZ0KSA6IChiKSkKClRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X2dlbmVyYXRvcl9jbGFzc19pZDsKVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X2dlbmVyYXRvcl9wcm90bywgbWlubmV0X2dlbmVyYXRvcl9jdG9yOwoKdm9pZApnZW5lcmF0b3JfemVybyhzdHJ1Y3QgZ2VuZXJhdG9yKiBnZW4pIHsKICBnZW4tPmJ1ZmZlciA9IEJVRkZFUl8wKCk7CiAgYXN5bmNpdGVyYXRvcl96ZXJvKCZnZW4tPml0ZXJhdG9yKTsKICBnZW4tPnJlZl9jb3VudCA9IDA7CiAgZ2VuLT5ieXRlc193cml0dGVuID0gMDsKICBnZW4tPmJ5dGVzX3JlYWQgPSAwOwp9Cgp2b2lkCmdlbmVyYXRvcl9kZXN0cm95KHN0cnVjdCBnZW5lcmF0b3IqKiBnZW5fcCkgewogIHN0cnVjdCBnZW5lcmF0b3IqIGdlbjsKCiAgaWYoKGdlbiA9ICpnZW5fcCkpIHsKICAgIGlmKGdlbmVyYXRvcl9mcmVlKGdlbikpCiAgICAgICpnZW5fcCA9IDA7CiAgfQp9CgpCT09MCmdlbmVyYXRvcl9mcmVlKHN0cnVjdCBnZW5lcmF0b3IqIGdlbikgewogIGlmKC0tZ2VuLT5yZWZfY291bnQgPT0gMCkgewogICAgYXN5bmNpdGVyYXRvcl9jbGVhcigmZ2VuLT5pdGVyYXRvciwgSlNfR2V0UnVudGltZShnZW4tPmN0eCkpOwogICAgYnVmZmVyX2ZyZWUoJmdlbi0+YnVmZmVyLCBKU19HZXRSdW50aW1lKGdlbi0+Y3R4KSk7CiAgICBqc19mcmVlKGdlbi0+Y3R4LCBnZW4pOwogICAgcmV0dXJuIFRSVUU7CiAgfQogIHJldHVybiBGQUxTRTsKfQoKc3RydWN0IGdlbmVyYXRvcioKZ2VuZXJhdG9yX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCBnZW5lcmF0b3IqIGdlbjsKCiAgaWYoKGdlbiA9IGpzX21hbGxvYyhjdHgsIHNpemVvZihNaW5uZXRHZW5lcmF0b3IpKSkpIHsKICAgIGdlbmVyYXRvcl96ZXJvKGdlbik7CiAgICBnZW4tPmN0eCA9IGN0eDsKICAgIGdlbi0+cmVmX2NvdW50ID0gMTsKICAgIC8vIGdlbi0+aXRlcmF0b3IuY3R4ID0gY3R4OwogIH0KICByZXR1cm4gZ2VuOwp9CgpKU1ZhbHVlCmdlbmVyYXRvcl9uZXh0KE1pbm5ldEdlbmVyYXRvciogZ2VuLCBKU0NvbnRleHQqIGN0eCkgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICByZXQgPSBhc3luY2l0ZXJhdG9yX25leHQoJmdlbi0+aXRlcmF0b3IsIGN0eCk7CgogIGlmKGJ1ZmZlcl9IRUFEKCZnZW4tPmJ1ZmZlcikpIHsKICAgIHNpemVfdCBsZW47CiAgICBpbnQ2NF90IGJ5dGVzOwogICAgSlNWYWx1ZSB2YWx1ZSA9IGJ1ZmZlcl90b2FycmF5YnVmZmVyX3NpemUoJmdlbi0+YnVmZmVyLCAmbGVuLCBjdHgpOwogICAgZ2VuLT5idWZmZXIgPSBCVUZGRVJfMCgpOwoKICAgIGFzeW5jaXRlcmF0b3JfeWllbGQoJmdlbi0+aXRlcmF0b3IsIHZhbHVlLCBjdHgpOwogICAgZ2VuLT5ieXRlc19yZWFkICs9IGxlbjsKICB9CgogIHJldHVybiByZXQ7Cn0KCnNzaXplX3QKZ2VuZXJhdG9yX3dyaXRlKE1pbm5ldEdlbmVyYXRvciogZ2VuLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3QgbGVuKSB7CiAgc3NpemVfdCByZXQgPSAtMTsKICBpZihsaXN0X2VtcHR5KCZnZW4tPml0ZXJhdG9yLnJlYWRzKSkKICAgIHJldHVybiBnZW5lcmF0b3JfcXVldWUoZ2VuLCBkYXRhLCBsZW4pOwoKICBKU1ZhbHVlIGJ1ZiA9IEpTX05ld0FycmF5QnVmZmVyQ29weShnZW4tPmN0eCwgZGF0YSwgbGVuKTsKCiAgYXN5bmNpdGVyYXRvcl95aWVsZCgmZ2VuLT5pdGVyYXRvciwgYnVmLCBnZW4tPmN0eCk7CiAgZ2VuLT5ieXRlc193cml0dGVuICs9IGxlbjsKICBnZW4tPmJ5dGVzX3JlYWQgKz0gbGVuOwoKICByZXR1cm4gcmV0Owp9CgpCT09MCmdlbmVyYXRvcl9jbG9zZShNaW5uZXRHZW5lcmF0b3IqIGdlbiwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gYXN5bmNpdGVyYXRvcl9zdG9wKCZnZW4tPml0ZXJhdG9yLCBKU19VTkRFRklORUQsIGN0eCk7Cn0KCnNzaXplX3QKZ2VuZXJhdG9yX3F1ZXVlKE1pbm5ldEdlbmVyYXRvciogZ2VuLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3QgbGVuKSB7CiAgc3NpemVfdCByZXQ7CgogIGlmKChyZXQgPSBidWZmZXJfYXBwZW5kKCZnZW4tPmJ1ZmZlciwgZGF0YSwgbGVuLCBnZW4tPmN0eCkpID4gMCkKICAgIGdlbi0+Ynl0ZXNfd3JpdHRlbiArPSBsZW47CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9nZW5lcmF0b3JfaXRlcmF0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCogYXJndikgewogIHJldHVybiBKU19EdXBWYWx1ZShjdHgsIHRoaXNfdmFsKTsKfQoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF9nZW5lcmF0b3JfZnVuY3NbMV0gPSB7CiAgICBKU19DRlVOQ19ERUYoIltTeW1ib2wuYXN5bmNJdGVyYXRvcl0iLCAwLCBtaW5uZXRfZ2VuZXJhdG9yX2l0ZXJhdG9yKSwKfTsKCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9nZW5lcmF0b3JfbmV4dChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2LCBpbnQgbWFnaWMsIHZvaWQqIG9wYXF1ZSkgewogIE1pbm5ldEdlbmVyYXRvciogZ2VuID0gKE1pbm5ldEdlbmVyYXRvciopb3BhcXVlOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICByZXQgPSBnZW5lcmF0b3JfbmV4dChnZW4sIGN0eCk7CgogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKbWlubmV0X2dlbmVyYXRvcl9jcmVhdGUoSlNDb250ZXh0KiBjdHgsIE1pbm5ldEdlbmVyYXRvcioqIGdlbl9wKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19OZXdPYmplY3QoY3R4KTsKCiAgaWYoISpnZW5fcCkKICAgICpnZW5fcCA9IGdlbmVyYXRvcl9uZXcoY3R4KTsKICBlbHNlCiAgICBnZW5lcmF0b3JfZHVwKCpnZW5fcCk7CgogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAibmV4dCIsIEpTX05ld0NDbG9zdXJlKGN0eCwgbWlubmV0X2dlbmVyYXRvcl9uZXh0LCAwLCAwLCAqZ2VuX3AsICh2b2lkKikmZ2VuZXJhdG9yX2ZyZWUpKTsKICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIHJldCwgbWlubmV0X2dlbmVyYXRvcl9mdW5jcywgY291bnRvZihtaW5uZXRfZ2VuZXJhdG9yX2Z1bmNzKSk7CgogIHJldHVybiByZXQ7Cn0KLyoKSlNWYWx1ZQptaW5uZXRfZ2VuZXJhdG9yX3dyYXAoSlNDb250ZXh0KiBjdHgsIE1pbm5ldEdlbmVyYXRvciogZ2VuKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19OZXdPYmplY3QoY3R4KTsKCiAgICArK2dlbi0+cmVmX2NvdW50OwoKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgIm5leHQiLCBKU19OZXdDQ2xvc3VyZShjdHgsIG1pbm5ldF9nZW5lcmF0b3JfbmV4dCwgMCwgMCwgZ2VuX3AsICh2b2lkKikmZ2VuZXJhdG9yX2ZyZWUpKTsKCiAgcmV0dXJuIHJldDsKfQoqLwoAAAAAAAAAAP0NAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAD9DQAAI2luY2x1ZGUgIm1pbm5ldC1nZW5lcmF0b3IuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGFzc2VydC5oPgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgoKI2RlZmluZSBNSU4oYXN5bmNpdGVyYXRvcl9zaGlmdCwgYikgKChhc3luY2l0ZXJhdG9yX3NoaWZ0KSA8IChiKSA/IChhc3luY2l0ZXJhdG9yX3NoaWZ0KSA6IChiKSkKClRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X2dlbmVyYXRvcl9jbGFzc19pZDsKVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X2dlbmVyYXRvcl9wcm90bywgbWlubmV0X2dlbmVyYXRvcl9jdG9yOwoKdm9pZApnZW5lcmF0b3JfemVybyhzdHJ1Y3QgZ2VuZXJhdG9yKiBnZW4pIHsKICBnZW4tPmJ1ZmZlciA9IEJVRkZFUl8wKCk7CiAgYXN5bmNpdGVyYXRvcl96ZXJvKCZnZW4tPml0ZXJhdG9yKTsKICBnZW4tPnJlZl9jb3VudCA9IDA7CiAgZ2VuLT5ieXRlc193cml0dGVuID0gMDsKICBnZW4tPmJ5dGVzX3JlYWQgPSAwOwp9Cgp2b2lkCmdlbmVyYXRvcl9kZXN0cm95KHN0cnVjdCBnZW5lcmF0b3IqKiBnZW5fcCkgewogIHN0cnVjdCBnZW5lcmF0b3IqIGdlbjsKCiAgaWYoKGdlbiA9ICpnZW5fcCkpIHsKICAgIGlmKGdlbmVyYXRvcl9mcmVlKGdlbikpCiAgICAgICpnZW5fcCA9IDA7CiAgfQp9CgpCT09MCmdlbmVyYXRvcl9mcmVlKHN0cnVjdCBnZW5lcmF0b3IqIGdlbikgewogIGlmKC0tZ2VuLT5yZWZfY291bnQgPT0gMCkgewogICAgYXN5bmNpdGVyYXRvcl9jbGVhcigmZ2VuLT5pdGVyYXRvciwgSlNfR2V0UnVudGltZShnZW4tPmN0eCkpOwogICAgYnVmZmVyX2ZyZWUoJmdlbi0+YnVmZmVyLCBKU19HZXRSdW50aW1lKGdlbi0+Y3R4KSk7CiAgICBqc19mcmVlKGdlbi0+Y3R4LCBnZW4pOwogICAgcmV0dXJuIFRSVUU7CiAgfQogIHJldHVybiBGQUxTRTsKfQoKc3RydWN0IGdlbmVyYXRvcioKZ2VuZXJhdG9yX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCBnZW5lcmF0b3IqIGdlbjsKCiAgaWYoKGdlbiA9IGpzX21hbGxvYyhjdHgsIHNpemVvZihNaW5uZXRHZW5lcmF0b3IpKSkpIHsKICAgIGdlbmVyYXRvcl96ZXJvKGdlbik7CiAgICBnZW4tPmN0eCA9IGN0eDsKICAgIGdlbi0+cmVmX2NvdW50ID0gMTsKICAgIC8vIGdlbi0+aXRlcmF0b3IuY3R4ID0gY3R4OwogIH0KICByZXR1cm4gZ2VuOwp9CgpKU1ZhbHVlCmdlbmVyYXRvcl9uZXh0KE1pbm5ldEdlbmVyYXRvciogZ2VuLCBKU0NvbnRleHQqIGN0eCkgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICByZXQgPSBhc3luY2l0ZXJhdG9yX25leHQoJmdlbi0+aXRlcmF0b3IsIGN0eCk7CgogIGlmKGJ1ZmZlcl9IRUFEKCZnZW4tPmJ1ZmZlcikpIHsKICAgIHNpemVfdCBsZW47CiAgICBpbnQ2NF90IGJ5dGVzOwogICAgSlNWYWx1ZSB2YWx1ZSA9IGJ1ZmZlcl90b2FycmF5YnVmZmVyX3NpemUoJmdlbi0+YnVmZmVyLCAmbGVuLCBjdHgpOwogICAgZ2VuLT5idWZmZXIgPSBCVUZGRVJfMCgpOwoKICAgIGFzeW5jaXRlcmF0b3JfeWllbGQoJmdlbi0+aXRlcmF0b3IsIHZhbHVlLCBjdHgpOwogICAgZ2VuLT5ieXRlc19yZWFkICs9IGxlbjsKICB9CgogIHJldHVybiByZXQ7Cn0KCnNzaXplX3QKZ2VuZXJhdG9yX3dyaXRlKE1pbm5ldEdlbmVyYXRvciogZ2VuLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3QgbGVuKSB7CiAgc3NpemVfdCByZXQgPSAtMTsKICBpZihsaXN0X2VtcHR5KCZnZW4tPml0ZXJhdG9yLnJlYWRzKSkKICAgIHJldHVybiBnZW5lcmF0b3JfcXVldWUoZ2VuLCBkYXRhLCBsZW4pOwoKICBKU1ZhbHVlIGJ1ZiA9IEpTX05ld0FycmF5QnVmZmVyQ29weShnZW4tPmN0eCwgZGF0YSwgbGVuKTsKCiAgYXN5bmNpdGVyYXRvcl95aWVsZCgmZ2VuLT5pdGVyYXRvciwgYnVmLCBnZW4tPmN0eCk7CiAgZ2VuLT5ieXRlc193cml0dGVuICs9IGxlbjsKICBnZW4tPmJ5dGVzX3JlYWQgKz0gbGVuOwoKICByZXR1cm4gcmV0Owp9CgpCT09MCmdlbmVyYXRvcl9jbG9zZShNaW5uZXRHZW5lcmF0b3IqIGdlbiwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gYXN5bmNpdGVyYXRvcl9zdG9wKCZnZW4tPml0ZXJhdG9yLCBKU19VTkRFRklORUQsIGN0eCk7Cn0KCnNzaXplX3QKZ2VuZXJhdG9yX3F1ZXVlKE1pbm5ldEdlbmVyYXRvciogZ2VuLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3QgbGVuKSB7CiAgc3NpemVfdCByZXQ7CgogIGlmKChyZXQgPSBidWZmZXJfYXBwZW5kKCZnZW4tPmJ1ZmZlciwgZGF0YSwgbGVuLCBnZW4tPmN0eCkpID4gMCkKICAgIGdlbi0+Ynl0ZXNfd3JpdHRlbiArPSBsZW47CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9nZW5lcmF0b3JfaXRlcmF0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCogYXJndikgewogIHJldHVybiBKU19EdXBWYWx1ZShjdHgsIHRoaXNfdmFsKTsKfQoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF9nZW5lcmF0b3JfZnVuY3NbMV0gPSB7CiAgICBKU19DRlVOQ19ERUYoIltTeW1ib2wuYXN5bmNJdGVyYXRvcl0iLCAwLCBtaW5uZXRfZ2VuZXJhdG9yX2l0ZXJhdG9yKSwKfTsKCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9nZW5lcmF0b3JfbmV4dChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2LCBpbnQgbWFnaWMsIHZvaWQqIG9wYXF1ZSkgewogIE1pbm5ldEdlbmVyYXRvciogZ2VuID0gKE1pbm5ldEdlbmVyYXRvciopb3BhcXVlOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICByZXQgPSBnZW5lcmF0b3JfbmV4dChnZW4sIGN0eCk7CgogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKbWlubmV0X2dlbmVyYXRvcl9jcmVhdGUoSlNDb250ZXh0KiBjdHgsIE1pbm5ldEdlbmVyYXRvcioqIGdlbl9wKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19OZXdPYmplY3QoY3R4KTsKCiAgaWYoISpnZW5fcCkKICAgICpnZW5fcCA9IGdlbmVyYXRvcl9uZXcoY3R4KTsKICBlbHNlCiAgICBnZW5lcmF0b3JfZHVwKCpnZW5fcCk7CgogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAibmV4dCIsIEpTX05ld0NDbG9zdXJlKGN0eCwgbWlubmV0X2dlbmVyYXRvcl9uZXh0LCAwLCAwLCAqZ2VuX3AsICh2b2lkKikmZ2VuZXJhdG9yX2ZyZWUpKTsKICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIHJldCwgbWlubmV0X2dlbmVyYXRvcl9mdW5jcywgY291bnRvZihtaW5uZXRfZ2VuZXJhdG9yX2Z1bmNzKSk7CgogIHJldHVybiByZXQ7Cn0KLyoKSlNWYWx1ZQptaW5uZXRfZ2VuZXJhdG9yX3dyYXAoSlNDb250ZXh0KiBjdHgsIE1pbm5ldEdlbmVyYXRvciogZ2VuKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19OZXdPYmplY3QoY3R4KTsKCiAgICArK2dlbi0+cmVmX2NvdW50OwoKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgIm5leHQiLCBKU19OZXdDQ2xvc3VyZShjdHgsIG1pbm5ldF9nZW5lcmF0b3JfbmV4dCwgMCwgMCwgZ2VuX3AsICh2b2lkKikmZ2VuZXJhdG9yX2ZyZWUpKTsKCiAgcmV0dXJuIHJldDsKfQoqLwoAAAAAAAAAAP0NAAAAAAAAAAAAAAAAAAAAAAAA/Q0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD9DQAAI2luY2x1ZGUgIm1pbm5ldC1nZW5lcmF0b3IuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGFzc2VydC5oPgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgoKI2RlZmluZSBNSU4oYXN5bmNpdGVyYXRvcl9zaGlmdCwgYikgKChhc3luY2l0ZXJhdG9yX3NoaWZ0KSA8IChiKSA/IChhc3luY2l0ZXJhdG9yX3NoaWZ0KSA6IChiKSkKClRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X2dlbmVyYXRvcl9jbGFzc19pZDsKVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X2dlbmVyYXRvcl9wcm90bywgbWlubmV0X2dlbmVyYXRvcl9jdG9yOwoKdm9pZApnZW5lcmF0b3JfemVybyhzdHJ1Y3QgZ2VuZXJhdG9yKiBnZW4pIHsKICBnZW4tPmJ1ZmZlciA9IEJVRkZFUl8wKCk7CiAgYXN5bmNpdGVyYXRvcl96ZXJvKCZnZW4tPml0ZXJhdG9yKTsKICBnZW4tPnJlZl9jb3VudCA9IDA7CiAgZ2VuLT5ieXRlc193cml0dGVuID0gMDsKICBnZW4tPmJ5dGVzX3JlYWQgPSAwOwp9Cgp2b2lkCmdlbmVyYXRvcl9kZXN0cm95KHN0cnVjdCBnZW5lcmF0b3IqKiBnZW5fcCkgewogIHN0cnVjdCBnZW5lcmF0b3IqIGdlbjsKCiAgaWYoKGdlbiA9ICpnZW5fcCkpIHsKICAgIGlmKGdlbmVyYXRvcl9mcmVlKGdlbikpCiAgICAgICpnZW5fcCA9IDA7CiAgfQp9CgpCT09MCmdlbmVyYXRvcl9mcmVlKHN0cnVjdCBnZW5lcmF0b3IqIGdlbikgewogIGlmKC0tZ2VuLT5yZWZfY291bnQgPT0gMCkgewogICAgYXN5bmNpdGVyYXRvcl9jbGVhcigmZ2VuLT5pdGVyYXRvciwgSlNfR2V0UnVudGltZShnZW4tPmN0eCkpOwogICAgYnVmZmVyX2ZyZWUoJmdlbi0+YnVmZmVyLCBKU19HZXRSdW50aW1lKGdlbi0+Y3R4KSk7CiAgICBqc19mcmVlKGdlbi0+Y3R4LCBnZW4pOwogICAgcmV0dXJuIFRSVUU7CiAgfQogIHJldHVybiBGQUxTRTsKfQoKc3RydWN0IGdlbmVyYXRvcioKZ2VuZXJhdG9yX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCBnZW5lcmF0b3IqIGdlbjsKCiAgaWYoKGdlbiA9IGpzX21hbGxvYyhjdHgsIHNpemVvZihNaW5uZXRHZW5lcmF0b3IpKSkpIHsKICAgIGdlbmVyYXRvcl96ZXJvKGdlbik7CiAgICBnZW4tPmN0eCA9IGN0eDsKICAgIGdlbi0+cmVmX2NvdW50ID0gMTsKICAgIC8vIGdlbi0+aXRlcmF0b3IuY3R4ID0gY3R4OwogIH0KICByZXR1cm4gZ2VuOwp9CgpKU1ZhbHVlCmdlbmVyYXRvcl9uZXh0KE1pbm5ldEdlbmVyYXRvciogZ2VuLCBKU0NvbnRleHQqIGN0eCkgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICByZXQgPSBhc3luY2l0ZXJhdG9yX25leHQoJmdlbi0+aXRlcmF0b3IsIGN0eCk7CgogIGlmKGJ1ZmZlcl9IRUFEKCZnZW4tPmJ1ZmZlcikpIHsKICAgIHNpemVfdCBsZW47CiAgICBpbnQ2NF90IGJ5dGVzOwogICAgSlNWYWx1ZSB2YWx1ZSA9IGJ1ZmZlcl90b2FycmF5YnVmZmVyX3NpemUoJmdlbi0+YnVmZmVyLCAmbGVuLCBjdHgpOwogICAgZ2VuLT5idWZmZXIgPSBCVUZGRVJfMCgpOwoKICAgIGFzeW5jaXRlcmF0b3JfeWllbGQoJmdlbi0+aXRlcmF0b3IsIHZhbHVlLCBjdHgpOwogICAgZ2VuLT5ieXRlc19yZWFkICs9IGxlbjsKICB9CgogIHJldHVybiByZXQ7Cn0KCnNzaXplX3QKZ2VuZXJhdG9yX3dyaXRlKE1pbm5ldEdlbmVyYXRvciogZ2VuLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3QgbGVuKSB7CiAgc3NpemVfdCByZXQgPSAtMTsKICBpZihsaXN0X2VtcHR5KCZnZW4tPml0ZXJhdG9yLnJlYWRzKSkKICAgIHJldHVybiBnZW5lcmF0b3JfcXVldWUoZ2VuLCBkYXRhLCBsZW4pOwoKICBKU1ZhbHVlIGJ1ZiA9IEpTX05ld0FycmF5QnVmZmVyQ29weShnZW4tPmN0eCwgZGF0YSwgbGVuKTsKCiAgYXN5bmNpdGVyYXRvcl95aWVsZCgmZ2VuLT5pdGVyYXRvciwgYnVmLCBnZW4tPmN0eCk7CiAgZ2VuLT5ieXRlc193cml0dGVuICs9IGxlbjsKICBnZW4tPmJ5dGVzX3JlYWQgKz0gbGVuOwoKICByZXR1cm4gcmV0Owp9CgpCT09MCmdlbmVyYXRvcl9jbG9zZShNaW5uZXRHZW5lcmF0b3IqIGdlbiwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gYXN5bmNpdGVyYXRvcl9zdG9wKCZnZW4tPml0ZXJhdG9yLCBKU19VTkRFRklORUQsIGN0eCk7Cn0KCnNzaXplX3QKZ2VuZXJhdG9yX3F1ZXVlKE1pbm5ldEdlbmVyYXRvciogZ2VuLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3QgbGVuKSB7CiAgc3NpemVfdCByZXQ7CgogIGlmKChyZXQgPSBidWZmZXJfYXBwZW5kKCZnZW4tPmJ1ZmZlciwgZGF0YSwgbGVuLCBnZW4tPmN0eCkpID4gMCkKICAgIGdlbi0+Ynl0ZXNfd3JpdHRlbiArPSBsZW47CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9nZW5lcmF0b3JfaXRlcmF0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCogYXJndikgewogIHJldHVybiBKU19EdXBWYWx1ZShjdHgsIHRoaXNfdmFsKTsKfQoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF9nZW5lcmF0b3JfZnVuY3NbMV0gPSB7CiAgICBKU19DRlVOQ19ERUYoIltTeW1ib2wuYXN5bmNJdGVyYXRvcl0iLCAwLCBtaW5uZXRfZ2VuZXJhdG9yX2l0ZXJhdG9yKSwKfTsKCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9nZW5lcmF0b3JfbmV4dChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2LCBpbnQgbWFnaWMsIHZvaWQqIG9wYXF1ZSkgewogIE1pbm5ldEdlbmVyYXRvciogZ2VuID0gKE1pbm5ldEdlbmVyYXRvciopb3BhcXVlOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICByZXQgPSBnZW5lcmF0b3JfbmV4dChnZW4sIGN0eCk7CgogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKbWlubmV0X2dlbmVyYXRvcl9jcmVhdGUoSlNDb250ZXh0KiBjdHgsIE1pbm5ldEdlbmVyYXRvcioqIGdlbl9wKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19OZXdPYmplY3QoY3R4KTsKCiAgaWYoISpnZW5fcCkKICAgICpnZW5fcCA9IGdlbmVyYXRvcl9uZXcoY3R4KTsKICBlbHNlCiAgICBnZW5lcmF0b3JfZHVwKCpnZW5fcCk7CgogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAibmV4dCIsIEpTX05ld0NDbG9zdXJlKGN0eCwgbWlubmV0X2dlbmVyYXRvcl9uZXh0LCAwLCAwLCAqZ2VuX3AsICh2b2lkKikmZ2VuZXJhdG9yX2ZyZWUpKTsKICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIHJldCwgbWlubmV0X2dlbmVyYXRvcl9mdW5jcywgY291bnRvZihtaW5uZXRfZ2VuZXJhdG9yX2Z1bmNzKSk7CgogIHJldHVybiByZXQ7Cn0KLyoKSlNWYWx1ZQptaW5uZXRfZ2VuZXJhdG9yX3dyYXAoSlNDb250ZXh0KiBjdHgsIE1pbm5ldEdlbmVyYXRvciogZ2VuKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19OZXdPYmplY3QoY3R4KTsKCiAgICArK2dlbi0+cmVmX2NvdW50OwoKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgIm5leHQiLCBKU19OZXdDQ2xvc3VyZShjdHgsIG1pbm5ldF9nZW5lcmF0b3JfbmV4dCwgMCwgMCwgZ2VuX3AsICh2b2lkKikmZ2VuZXJhdG9yX2ZyZWUpKTsKCiAgcmV0dXJuIHJldDsKfQoqLwoAAAAAAAAAAP0NAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					2,
					"left_delete",
					null,
					"AgAAAHgAAAAAAAAAeAAAAAAAAABgAAAAI2RlZmluZSBNSU4oYXN5bmNpdGVyYXRvcl9zaGlmdCwgYikgKChhc3luY2l0ZXJhdG9yX3NoaWZ0KSA8IChiKSA/IChhc3luY2l0ZXJhdG9yX3NoaWZ0KSA6IChiKSkKdwAAAAAAAAB3AAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAeAAAAAAAAADYAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-request.c",
			"settings":
			{
				"buffer_size": 11555,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAABB8AAAAAAABNHwAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAKcIAAAAAAAAqAgAAAAAAAAAAAAAqAgAAAAAAACqCAAAAAAAAAAAAACqCAAAAAAAAKsIAAAAAAAAAAAAAKsIAAAAAAAArQgAAAAAAAAAAAAAqAgAAAAAAACoCAAAAAAAAAIAAAAgIKsIAAAAAAAArAgAAAAAAAAAAAAArAgAAAAAAACtCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwgAAAAAAACnCAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					2,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AgAAAK0IAAAAAAAArwgAAAAAAAAAAAAArggAAAAAAACwCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQgAAAAAAACtCAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAK4IAAAAAAAArggAAAAAAAABAAAAKK4IAAAAAAAArggAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAArwgAAAAAAACvCAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAK4IAAAAAAAArwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArggAAAAAAACuCAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAK8IAAAAAAAAsQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwgAAAAAAACvCAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "req"
					},
					"AwAAALAIAAAAAAAAsQgAAAAAAAAAAAAAsQgAAAAAAACyCAAAAAAAAAAAAACyCAAAAAAAALMIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAgAAAAAAACwCAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALMIAAAAAAAAtAgAAAAAAAAAAAAAtAgAAAAAAAC1CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAswgAAAAAAACzCAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALUIAAAAAAAAtggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQgAAAAAAAC1CAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"paste",
					null,
					"AQAAALYIAAAAAAAAwwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtggAAAAAAAC2CAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMMIAAAAAAAAxQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwgAAAAAAADDCAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "ctx"
					},
					"AwAAAMQIAAAAAAAAxQgAAAAAAAAAAAAAxQgAAAAAAADGCAAAAAAAAAAAAADGCAAAAAAAAMcIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAgAAAAAAADECAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMkIAAAAAAAAyggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQgAAAAAAADJCAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CgAAAMsIAAAAAAAAzAgAAAAAAAAAAAAAzAgAAAAAAADOCAAAAAAAAAAAAADMCAAAAAAAAMwIAAAAAAAAAgAAACAgzAgAAAAAAADQCAAAAAAAAAAAAADQCAAAAAAAANEIAAAAAAAAAAAAANEIAAAAAAAA0ggAAAAAAAAAAAAA0ggAAAAAAADTCAAAAAAAAAAAAADTCAAAAAAAANQIAAAAAAAAAAAAANQIAAAAAAAA1QgAAAAAAAAAAAAA1QgAAAAAAADWCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywgAAAAAAADLCAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " req;"
					},
					"BQAAANYIAAAAAAAA1wgAAAAAAAAAAAAA1wgAAAAAAADYCAAAAAAAAAAAAADYCAAAAAAAANkIAAAAAAAAAAAAANkIAAAAAAAA2ggAAAAAAAAAAAAA2ggAAAAAAADbCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1ggAAAAAAADWCAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA2wgAAAAAAADbCAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-ringbuffer.c",
			"settings":
			{
				"buffer_size": 7415,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"left_delete",
					null,
					"AQAAAGQAAAAAAAAAZAAAAAAAAABgAAAAI2RlZmluZSBNSU4oYXN5bmNpdGVyYXRvcl9zaGlmdCwgYikgKChhc3luY2l0ZXJhdG9yX3NoaWZ0KSA8IChiKSA/IChhc3luY2l0ZXJhdG9yX3NoaWZ0KSA6IChiKSkK",
					"AQAAAAAAAAABAAAAZAAAAAAAAADEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAZAAAAAAAAABkAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-generator.h",
			"settings":
			{
				"buffer_size": 1022,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					11,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD+AwAAI2lmbmRlZiBNSU5ORVRfR0VORVJBVE9SX0gKI2RlZmluZSBNSU5ORVRfR0VORVJBVE9SX0gKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KI2luY2x1ZGUgPHB0aHJlYWQuaD4KI2luY2x1ZGUgIm1pbm5ldC1idWZmZXIuaCIKCnR5cGVkZWYgc3RydWN0IGdlbmVyYXRvciB7CiAgTWlubmV0QnVmZmVyIGJ1ZmZlcjsKICB1bmlvbiB7CiAgICBBc3luY0l0ZXJhdG9yIGl0ZXJhdG9yOwogICAgc3RydWN0IHsKICAgICAgSlNDb250ZXh0KiBjdHg7CiAgICAgIEJPT0wgY2xvc2VkLCBjbG9zaW5nOwogICAgfTsKICB9OwogIHVpbnQ2NF90IGJ5dGVzX3dyaXR0ZW4sIGJ5dGVzX3JlYWQ7CiAgaW50IHJlZl9jb3VudDsKfSBNaW5uZXRHZW5lcmF0b3I7Cgp2b2lkIGdlbmVyYXRvcl96ZXJvKHN0cnVjdCBnZW5lcmF0b3IqKTsKdm9pZCBnZW5lcmF0b3JfZGVzdHJveShzdHJ1Y3QgZ2VuZXJhdG9yKiopOwpCT09MIGdlbmVyYXRvcl9mcmVlKHN0cnVjdCBnZW5lcmF0b3IqKTsKc3RydWN0IGdlbmVyYXRvciogZ2VuZXJhdG9yX25ldyhKU0NvbnRleHQqKTsKSlNWYWx1ZSBnZW5lcmF0b3JfbmV4dChNaW5uZXRHZW5lcmF0b3IqLCBKU0NvbnRleHQqKTsKc3NpemVfdCBnZW5lcmF0b3JfcXVldWUoTWlubmV0R2VuZXJhdG9yKiwgY29uc3Qgdm9pZCosIHNpemVfdCk7CnNzaXplX3QgZ2VuZXJhdG9yX3dyaXRlKE1pbm5ldEdlbmVyYXRvciosIGNvbnN0IHZvaWQqLCBzaXplX3QpOwpCT09MIGdlbmVyYXRvcl9jbG9zZShNaW5uZXRHZW5lcmF0b3IqLCBKU0NvbnRleHQqIGN0eCk7CkpTVmFsdWUgbWlubmV0X2dlbmVyYXRvcl9jcmVhdGUoSlNDb250ZXh0KiwgTWlubmV0R2VuZXJhdG9yKiopOwoKc3RhdGljIGlubGluZSBzdHJ1Y3QgZ2VuZXJhdG9yKgpnZW5lcmF0b3JfZHVwKHN0cnVjdCBnZW5lcmF0b3IqIGdlbikgewogICsrZ2VuLT5yZWZfY291bnQ7CiAgcmV0dXJuIGdlbjsKfQoKI2VuZGlmIC8qIE1JTk5FVF9HRU5FUkFUT1JfSCAqLwoAAAAAAAAAAP4DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxAwAAAAAAAHEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAD+AwAAI2lmbmRlZiBNSU5ORVRfR0VORVJBVE9SX0gKI2RlZmluZSBNSU5ORVRfR0VORVJBVE9SX0gKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KI2luY2x1ZGUgPHB0aHJlYWQuaD4KI2luY2x1ZGUgIm1pbm5ldC1idWZmZXIuaCIKCnR5cGVkZWYgc3RydWN0IGdlbmVyYXRvciB7CiAgTWlubmV0QnVmZmVyIGJ1ZmZlcjsKICB1bmlvbiB7CiAgICBBc3luY0l0ZXJhdG9yIGl0ZXJhdG9yOwogICAgc3RydWN0IHsKICAgICAgSlNDb250ZXh0KiBjdHg7CiAgICAgIEJPT0wgY2xvc2VkLCBjbG9zaW5nOwogICAgfTsKICB9OwogIHVpbnQ2NF90IGJ5dGVzX3dyaXR0ZW4sIGJ5dGVzX3JlYWQ7CiAgaW50IHJlZl9jb3VudDsKfSBNaW5uZXRHZW5lcmF0b3I7Cgp2b2lkIGdlbmVyYXRvcl96ZXJvKHN0cnVjdCBnZW5lcmF0b3IqKTsKdm9pZCBnZW5lcmF0b3JfZGVzdHJveShzdHJ1Y3QgZ2VuZXJhdG9yKiopOwpCT09MIGdlbmVyYXRvcl9mcmVlKHN0cnVjdCBnZW5lcmF0b3IqKTsKc3RydWN0IGdlbmVyYXRvciogZ2VuZXJhdG9yX25ldyhKU0NvbnRleHQqKTsKSlNWYWx1ZSBnZW5lcmF0b3JfbmV4dChNaW5uZXRHZW5lcmF0b3IqLCBKU0NvbnRleHQqKTsKc3NpemVfdCBnZW5lcmF0b3JfcXVldWUoTWlubmV0R2VuZXJhdG9yKiwgY29uc3Qgdm9pZCosIHNpemVfdCk7CnNzaXplX3QgZ2VuZXJhdG9yX3dyaXRlKE1pbm5ldEdlbmVyYXRvciosIGNvbnN0IHZvaWQqLCBzaXplX3QpOwpCT09MIGdlbmVyYXRvcl9jbG9zZShNaW5uZXRHZW5lcmF0b3IqLCBKU0NvbnRleHQqIGN0eCk7CkpTVmFsdWUgbWlubmV0X2dlbmVyYXRvcl9jcmVhdGUoSlNDb250ZXh0KiwgTWlubmV0R2VuZXJhdG9yKiopOwoKc3RhdGljIGlubGluZSBzdHJ1Y3QgZ2VuZXJhdG9yKgpnZW5lcmF0b3JfZHVwKHN0cnVjdCBnZW5lcmF0b3IqIGdlbikgewogICsrZ2VuLT5yZWZfY291bnQ7CiAgcmV0dXJuIGdlbjsKfQoKI2VuZGlmIC8qIE1JTk5FVF9HRU5FUkFUT1JfSCAqLwoAAAAAAAAAAP4DAAAAAAAAAAAAAAAAAAAAAAAA/gMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxAwAAAAAAAHEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD+AwAAI2lmbmRlZiBNSU5ORVRfR0VORVJBVE9SX0gKI2RlZmluZSBNSU5ORVRfR0VORVJBVE9SX0gKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KI2luY2x1ZGUgPHB0aHJlYWQuaD4KI2luY2x1ZGUgIm1pbm5ldC1idWZmZXIuaCIKCnR5cGVkZWYgc3RydWN0IGdlbmVyYXRvciB7CiAgTWlubmV0QnVmZmVyIGJ1ZmZlcjsKICB1bmlvbiB7CiAgICBBc3luY0l0ZXJhdG9yIGl0ZXJhdG9yOwogICAgc3RydWN0IHsKICAgICAgSlNDb250ZXh0KiBjdHg7CiAgICAgIEJPT0wgY2xvc2VkLCBjbG9zaW5nOwogICAgfTsKICB9OwogIHVpbnQ2NF90IGJ5dGVzX3dyaXR0ZW4sIGJ5dGVzX3JlYWQ7CiAgaW50IHJlZl9jb3VudDsKfSBNaW5uZXRHZW5lcmF0b3I7Cgp2b2lkIGdlbmVyYXRvcl96ZXJvKHN0cnVjdCBnZW5lcmF0b3IqKTsKdm9pZCBnZW5lcmF0b3JfZGVzdHJveShzdHJ1Y3QgZ2VuZXJhdG9yKiopOwpCT09MIGdlbmVyYXRvcl9mcmVlKHN0cnVjdCBnZW5lcmF0b3IqKTsKc3RydWN0IGdlbmVyYXRvciogZ2VuZXJhdG9yX25ldyhKU0NvbnRleHQqKTsKSlNWYWx1ZSBnZW5lcmF0b3JfbmV4dChNaW5uZXRHZW5lcmF0b3IqLCBKU0NvbnRleHQqKTsKc3NpemVfdCBnZW5lcmF0b3JfcXVldWUoTWlubmV0R2VuZXJhdG9yKiwgY29uc3Qgdm9pZCosIHNpemVfdCk7CnNzaXplX3QgZ2VuZXJhdG9yX3dyaXRlKE1pbm5ldEdlbmVyYXRvciosIGNvbnN0IHZvaWQqLCBzaXplX3QpOwpCT09MIGdlbmVyYXRvcl9jbG9zZShNaW5uZXRHZW5lcmF0b3IqLCBKU0NvbnRleHQqIGN0eCk7CkpTVmFsdWUgbWlubmV0X2dlbmVyYXRvcl9jcmVhdGUoSlNDb250ZXh0KiwgTWlubmV0R2VuZXJhdG9yKiopOwoKc3RhdGljIGlubGluZSBzdHJ1Y3QgZ2VuZXJhdG9yKgpnZW5lcmF0b3JfZHVwKHN0cnVjdCBnZW5lcmF0b3IqIGdlbikgewogICsrZ2VuLT5yZWZfY291bnQ7CiAgcmV0dXJuIGdlbjsKfQoKI2VuZGlmIC8qIE1JTk5FVF9HRU5FUkFUT1JfSCAqLwoAAAAAAAAAAP4DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQMAAAAAAABxAwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-buffer.h",
			"settings":
			{
				"buffer_size": 3723,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACLDgAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxzdGRpbnQuaD4KI2luY2x1ZGUgPHN0ZGFyZy5oPgojaW5jbHVkZSA8c3lzL3R5cGVzLmg+CiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgewogIHVpbnQ4X3QqIHN0YXJ0OwogIHVpbnQ4X3QqIGVuZDsKfSBNaW5uZXRCeXRlczsKCiNkZWZpbmUgYmxvY2tfU0laRShiKSAoc2l6ZV90KSgoYiktPmVuZCAtIChiKS0+c3RhcnQpCiNkZWZpbmUgYmxvY2tfQkVHSU4oYikgKHZvaWQqKShiKS0+c3RhcnQKI2RlZmluZSBibG9ja19FTkQoYikgKHZvaWQqKShiKS0+ZW5kCiNkZWZpbmUgYmxvY2tfQUxMT0MoYikgKHZvaWQqKSgoYiktPnN0YXJ0ID8gKGIpLT5zdGFydCAtIExXU19QUkUgOiAwKQoKdm9pZCBibG9ja19pbml0KE1pbm5ldEJ5dGVzKiwgdWludDhfdCosIHNpemVfdCk7CnVpbnQ4X3QqIGJsb2NrX2FsbG9jKE1pbm5ldEJ5dGVzKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKdWludDhfdCogYmxvY2tfcmVhbGxvYyhNaW5uZXRCeXRlcyosIHNpemVfdCwgSlNDb250ZXh0Kik7CnZvaWQgYmxvY2tfZnJlZShNaW5uZXRCeXRlcyosIEpTUnVudGltZSopOwppbnQgYmxvY2tfZnJvbWFycmF5YnVmZmVyKE1pbm5ldEJ5dGVzKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYmxvY2tfdG9hcnJheWJ1ZmZlcihNaW5uZXRCeXRlcyosIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3Rvc3RyaW5nKE1pbm5ldEJ5dGVzIGNvbnN0KiwgSlNDb250ZXh0Kik7CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJsb2NrX2dyb3coTWlubmV0Qnl0ZXMqIGJsaywgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIGJsb2NrX3JlYWxsb2MoYmxrLCBibG9ja19TSVpFKGJsaykgKyBzaXplLCBjdHgpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldEJ5dGVzCmJsb2NrX21vdmUoTWlubmV0Qnl0ZXMqIGJsaykgewogIE1pbm5ldEJ5dGVzIHJldCA9IHtibGstPnN0YXJ0LCBibGstPmVuZH07CiAgYmxrLT5zdGFydCA9IDA7CiAgYmxrLT5lbmQgPSAwOwogIHJldHVybiByZXQ7Cn0KCnR5cGVkZWYgdW5pb24gYnl0ZV9idWZmZXIgewogIHN0cnVjdCB7CiAgICB1aW50OF90ICpzdGFydCwgKmVuZCwgKnJlYWQsICp3cml0ZSwgKmFsbG9jOwogIH07CiAgTWlubmV0Qnl0ZXMgYmxvY2s7Cn0gTWlubmV0QnVmZmVyOwoKI2RlZmluZSBCVUZGRVIoYnVmKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyBcCiAgICB7ICh1aW50OF90KikoYnVmKSArIExXU19QUkUsICh1aW50OF90KikoYnVmKSArIHNpemVvZihidWYpIC0gMSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgMCB9IFwKICB9CgojZGVmaW5lIEJVRkZFUl8wKCkgXAogIChNaW5uZXRCdWZmZXIpIHsgXAogICAgeyAwLCAwLCAwLCAwLCAwIH0gXAogIH0KCiNkZWZpbmUgQlVGRkVSX04oYnVmLCBuKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyBcCiAgICB7ICh1aW50OF90KikoYnVmKSwgKHVpbnQ4X3QqKShidWYpICsgKG4pLCAodWludDhfdCopKGJ1ZiksICh1aW50OF90KikoYnVmKSwgMCB9IFwKICB9CgojZGVmaW5lIGJ1ZmZlcl9BVkFJTChiKSAocHRyZGlmZl90KSgoYiktPmVuZCAtIChiKS0+d3JpdGUpCiNkZWZpbmUgYnVmZmVyX0JZVEVTKGIpIChwdHJkaWZmX3QpKChiKS0+d3JpdGUgLSAoYiktPnN0YXJ0KQojZGVmaW5lIGJ1ZmZlcl9SRU1BSU4oYikgKHB0cmRpZmZfdCkoKGIpLT53cml0ZSAtIChiKS0+cmVhZCkKI2RlZmluZSBidWZmZXJfSEVBRChiKSAoc2l6ZV90KSgoYiktPndyaXRlIC0gKGIpLT5zdGFydCkKI2RlZmluZSBidWZmZXJfVEFJTChiKSAoc2l6ZV90KSgoYiktPnJlYWQgLSAoYiktPnN0YXJ0KQojZGVmaW5lIGJ1ZmZlcl9BTExPQyhiKSAodm9pZCopKChiKS0+YWxsb2MpCgojZGVmaW5lIGJ1ZmZlcl9CRUdJTihiKSBibG9ja19CRUdJTigmKGIpLT5ibG9jaykKI2RlZmluZSBidWZmZXJfRU5EKGIpIGJsb2NrX0VORCgmKGIpLT5ibG9jaykKI2RlZmluZSBidWZmZXJfU0laRShiKSBibG9ja19TSVpFKCYoYiktPmJsb2NrKQoKI2RlZmluZSBidWZmZXJfemVybyhiKSBtZW1zZXQoKGIpLCAwLCBzaXplb2YoTWlubmV0QnVmZmVyKSkKCnZvaWQgYnVmZmVyX2luaXQoTWlubmV0QnVmZmVyKiwgdWludDhfdCosIHNpemVfdCk7CnVpbnQ4X3QqIGJ1ZmZlcl9hbGxvYyhNaW5uZXRCdWZmZXIqLCBzaXplX3QsIEpTQ29udGV4dCopOwpzc2l6ZV90IGJ1ZmZlcl9hcHBlbmQoTWlubmV0QnVmZmVyKiwgY29uc3Qgdm9pZCosIHNpemVfdCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIGJ1ZmZlcl9mcmVlKE1pbm5ldEJ1ZmZlciosIEpTUnVudGltZSopOwpCT09MIGJ1ZmZlcl93cml0ZShNaW5uZXRCdWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90KTsKaW50IGJ1ZmZlcl92cHJpbnRmKE1pbm5ldEJ1ZmZlciosIGNvbnN0IGNoYXIqLCB2YV9saXN0KTsKaW50IGJ1ZmZlcl9wcmludGYoTWlubmV0QnVmZmVyKiwgY29uc3QgY2hhciosIC4uLik7CnVpbnQ4X3QqIGJ1ZmZlcl9yZWFsbG9jKE1pbm5ldEJ1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbWFycmF5YnVmZmVyKE1pbm5ldEJ1ZmZlciosIEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbXZhbHVlKE1pbm5ldEJ1ZmZlciosIEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYnVmZmVyX3Rvc3RyaW5nKE1pbm5ldEJ1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwpzaXplX3QgYnVmZmVyX2VzY2FwZShNaW5uZXRCdWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CmNoYXIqIGJ1ZmZlcl9lc2NhcGVkKE1pbm5ldEJ1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwp2b2lkIGJ1ZmZlcl9maW5hbGl6ZXIoSlNSdW50aW1lKiwgdm9pZCosIHZvaWQqKTsKSlNWYWx1ZSBidWZmZXJfdG9hcnJheWJ1ZmZlcihNaW5uZXRCdWZmZXIqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBidWZmZXJfdG9hcnJheWJ1ZmZlcl9zaXplKE1pbm5ldEJ1ZmZlciogYnVmLCBzaXplX3QqIHN6LCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgYnVmZmVyX2R1bXAoY29uc3QgY2hhciosIE1pbm5ldEJ1ZmZlciBjb25zdCopOwpCT09MIGJ1ZmZlcl9jbG9uZShNaW5uZXRCdWZmZXIqLCBjb25zdCBNaW5uZXRCdWZmZXIqLCBKU0NvbnRleHQqKTsKdWludDhfdCogYnVmZmVyX3NraXAoTWlubmV0QnVmZmVyKiwgc2l6ZV90KTsKQk9PTCBidWZmZXJfcHV0Y2hhcihNaW5uZXRCdWZmZXIqLCBjaGFyKTsKTWlubmV0QnVmZmVyIGJ1ZmZlcl9tb3ZlKE1pbm5ldEJ1ZmZlciopOwp1aW50OF90KiBidWZmZXJfZ3JvdyhNaW5uZXRCdWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KTsKCnN0YXRpYyBpbmxpbmUgdm9pZApidWZmZXJfcmVzZXQoTWlubmV0QnVmZmVyKiBidWYpIHsKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0OwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0Owp9CgovKnN0YXRpYyBpbmxpbmUgdWludDhfdCoKYnVmZmVyX2dyb3coTWlubmV0QnVmZmVyKiBidWYsIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19ncm93KCZidWYtPmJsb2NrLCBzaXplLCBjdHgpOwp9Ki8KCiNlbmRpZiAvKiBNSU5ORVRfQlVGRkVSX0ggKi8KAAAAAAAAAACLDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAACLDgAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxzdGRpbnQuaD4KI2luY2x1ZGUgPHN0ZGFyZy5oPgojaW5jbHVkZSA8c3lzL3R5cGVzLmg+CiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgewogIHVpbnQ4X3QqIHN0YXJ0OwogIHVpbnQ4X3QqIGVuZDsKfSBNaW5uZXRCeXRlczsKCiNkZWZpbmUgYmxvY2tfU0laRShiKSAoc2l6ZV90KSgoYiktPmVuZCAtIChiKS0+c3RhcnQpCiNkZWZpbmUgYmxvY2tfQkVHSU4oYikgKHZvaWQqKShiKS0+c3RhcnQKI2RlZmluZSBibG9ja19FTkQoYikgKHZvaWQqKShiKS0+ZW5kCiNkZWZpbmUgYmxvY2tfQUxMT0MoYikgKHZvaWQqKSgoYiktPnN0YXJ0ID8gKGIpLT5zdGFydCAtIExXU19QUkUgOiAwKQoKdm9pZCBibG9ja19pbml0KE1pbm5ldEJ5dGVzKiwgdWludDhfdCosIHNpemVfdCk7CnVpbnQ4X3QqIGJsb2NrX2FsbG9jKE1pbm5ldEJ5dGVzKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKdWludDhfdCogYmxvY2tfcmVhbGxvYyhNaW5uZXRCeXRlcyosIHNpemVfdCwgSlNDb250ZXh0Kik7CnZvaWQgYmxvY2tfZnJlZShNaW5uZXRCeXRlcyosIEpTUnVudGltZSopOwppbnQgYmxvY2tfZnJvbWFycmF5YnVmZmVyKE1pbm5ldEJ5dGVzKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYmxvY2tfdG9hcnJheWJ1ZmZlcihNaW5uZXRCeXRlcyosIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3Rvc3RyaW5nKE1pbm5ldEJ5dGVzIGNvbnN0KiwgSlNDb250ZXh0Kik7CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJsb2NrX2dyb3coTWlubmV0Qnl0ZXMqIGJsaywgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIGJsb2NrX3JlYWxsb2MoYmxrLCBibG9ja19TSVpFKGJsaykgKyBzaXplLCBjdHgpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldEJ5dGVzCmJsb2NrX21vdmUoTWlubmV0Qnl0ZXMqIGJsaykgewogIE1pbm5ldEJ5dGVzIHJldCA9IHtibGstPnN0YXJ0LCBibGstPmVuZH07CiAgYmxrLT5zdGFydCA9IDA7CiAgYmxrLT5lbmQgPSAwOwogIHJldHVybiByZXQ7Cn0KCnR5cGVkZWYgdW5pb24gYnl0ZV9idWZmZXIgewogIHN0cnVjdCB7CiAgICB1aW50OF90ICpzdGFydCwgKmVuZCwgKnJlYWQsICp3cml0ZSwgKmFsbG9jOwogIH07CiAgTWlubmV0Qnl0ZXMgYmxvY2s7Cn0gTWlubmV0QnVmZmVyOwoKI2RlZmluZSBCVUZGRVIoYnVmKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyBcCiAgICB7ICh1aW50OF90KikoYnVmKSArIExXU19QUkUsICh1aW50OF90KikoYnVmKSArIHNpemVvZihidWYpIC0gMSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgMCB9IFwKICB9CgojZGVmaW5lIEJVRkZFUl8wKCkgXAogIChNaW5uZXRCdWZmZXIpIHsgXAogICAgeyAwLCAwLCAwLCAwLCAwIH0gXAogIH0KCiNkZWZpbmUgQlVGRkVSX04oYnVmLCBuKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyBcCiAgICB7ICh1aW50OF90KikoYnVmKSwgKHVpbnQ4X3QqKShidWYpICsgKG4pLCAodWludDhfdCopKGJ1ZiksICh1aW50OF90KikoYnVmKSwgMCB9IFwKICB9CgojZGVmaW5lIGJ1ZmZlcl9BVkFJTChiKSAocHRyZGlmZl90KSgoYiktPmVuZCAtIChiKS0+d3JpdGUpCiNkZWZpbmUgYnVmZmVyX0JZVEVTKGIpIChwdHJkaWZmX3QpKChiKS0+d3JpdGUgLSAoYiktPnN0YXJ0KQojZGVmaW5lIGJ1ZmZlcl9SRU1BSU4oYikgKHB0cmRpZmZfdCkoKGIpLT53cml0ZSAtIChiKS0+cmVhZCkKI2RlZmluZSBidWZmZXJfSEVBRChiKSAoc2l6ZV90KSgoYiktPndyaXRlIC0gKGIpLT5zdGFydCkKI2RlZmluZSBidWZmZXJfVEFJTChiKSAoc2l6ZV90KSgoYiktPnJlYWQgLSAoYiktPnN0YXJ0KQojZGVmaW5lIGJ1ZmZlcl9BTExPQyhiKSAodm9pZCopKChiKS0+YWxsb2MpCgojZGVmaW5lIGJ1ZmZlcl9CRUdJTihiKSBibG9ja19CRUdJTigmKGIpLT5ibG9jaykKI2RlZmluZSBidWZmZXJfRU5EKGIpIGJsb2NrX0VORCgmKGIpLT5ibG9jaykKI2RlZmluZSBidWZmZXJfU0laRShiKSBibG9ja19TSVpFKCYoYiktPmJsb2NrKQoKI2RlZmluZSBidWZmZXJfemVybyhiKSBtZW1zZXQoKGIpLCAwLCBzaXplb2YoTWlubmV0QnVmZmVyKSkKCnZvaWQgYnVmZmVyX2luaXQoTWlubmV0QnVmZmVyKiwgdWludDhfdCosIHNpemVfdCk7CnVpbnQ4X3QqIGJ1ZmZlcl9hbGxvYyhNaW5uZXRCdWZmZXIqLCBzaXplX3QsIEpTQ29udGV4dCopOwpzc2l6ZV90IGJ1ZmZlcl9hcHBlbmQoTWlubmV0QnVmZmVyKiwgY29uc3Qgdm9pZCosIHNpemVfdCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIGJ1ZmZlcl9mcmVlKE1pbm5ldEJ1ZmZlciosIEpTUnVudGltZSopOwpCT09MIGJ1ZmZlcl93cml0ZShNaW5uZXRCdWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90KTsKaW50IGJ1ZmZlcl92cHJpbnRmKE1pbm5ldEJ1ZmZlciosIGNvbnN0IGNoYXIqLCB2YV9saXN0KTsKaW50IGJ1ZmZlcl9wcmludGYoTWlubmV0QnVmZmVyKiwgY29uc3QgY2hhciosIC4uLik7CnVpbnQ4X3QqIGJ1ZmZlcl9yZWFsbG9jKE1pbm5ldEJ1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbWFycmF5YnVmZmVyKE1pbm5ldEJ1ZmZlciosIEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbXZhbHVlKE1pbm5ldEJ1ZmZlciosIEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYnVmZmVyX3Rvc3RyaW5nKE1pbm5ldEJ1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwpzaXplX3QgYnVmZmVyX2VzY2FwZShNaW5uZXRCdWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CmNoYXIqIGJ1ZmZlcl9lc2NhcGVkKE1pbm5ldEJ1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwp2b2lkIGJ1ZmZlcl9maW5hbGl6ZXIoSlNSdW50aW1lKiwgdm9pZCosIHZvaWQqKTsKSlNWYWx1ZSBidWZmZXJfdG9hcnJheWJ1ZmZlcihNaW5uZXRCdWZmZXIqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBidWZmZXJfdG9hcnJheWJ1ZmZlcl9zaXplKE1pbm5ldEJ1ZmZlciogYnVmLCBzaXplX3QqIHN6LCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgYnVmZmVyX2R1bXAoY29uc3QgY2hhciosIE1pbm5ldEJ1ZmZlciBjb25zdCopOwpCT09MIGJ1ZmZlcl9jbG9uZShNaW5uZXRCdWZmZXIqLCBjb25zdCBNaW5uZXRCdWZmZXIqLCBKU0NvbnRleHQqKTsKdWludDhfdCogYnVmZmVyX3NraXAoTWlubmV0QnVmZmVyKiwgc2l6ZV90KTsKQk9PTCBidWZmZXJfcHV0Y2hhcihNaW5uZXRCdWZmZXIqLCBjaGFyKTsKTWlubmV0QnVmZmVyIGJ1ZmZlcl9tb3ZlKE1pbm5ldEJ1ZmZlciopOwp1aW50OF90KiBidWZmZXJfZ3JvdyhNaW5uZXRCdWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KTsKCnN0YXRpYyBpbmxpbmUgdm9pZApidWZmZXJfcmVzZXQoTWlubmV0QnVmZmVyKiBidWYpIHsKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0OwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0Owp9CgovKnN0YXRpYyBpbmxpbmUgdWludDhfdCoKYnVmZmVyX2dyb3coTWlubmV0QnVmZmVyKiBidWYsIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19ncm93KCZidWYtPmJsb2NrLCBzaXplLCBjdHgpOwp9Ki8KCiNlbmRpZiAvKiBNSU5ORVRfQlVGRkVSX0ggKi8KAAAAAAAAAACLDgAAAAAAAAAAAAAAAAAAAAAAAIsOAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACLDgAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxzdGRpbnQuaD4KI2luY2x1ZGUgPHN0ZGFyZy5oPgojaW5jbHVkZSA8c3lzL3R5cGVzLmg+CiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgewogIHVpbnQ4X3QqIHN0YXJ0OwogIHVpbnQ4X3QqIGVuZDsKfSBNaW5uZXRCeXRlczsKCiNkZWZpbmUgYmxvY2tfU0laRShiKSAoc2l6ZV90KSgoYiktPmVuZCAtIChiKS0+c3RhcnQpCiNkZWZpbmUgYmxvY2tfQkVHSU4oYikgKHZvaWQqKShiKS0+c3RhcnQKI2RlZmluZSBibG9ja19FTkQoYikgKHZvaWQqKShiKS0+ZW5kCiNkZWZpbmUgYmxvY2tfQUxMT0MoYikgKHZvaWQqKSgoYiktPnN0YXJ0ID8gKGIpLT5zdGFydCAtIExXU19QUkUgOiAwKQoKdm9pZCBibG9ja19pbml0KE1pbm5ldEJ5dGVzKiwgdWludDhfdCosIHNpemVfdCk7CnVpbnQ4X3QqIGJsb2NrX2FsbG9jKE1pbm5ldEJ5dGVzKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKdWludDhfdCogYmxvY2tfcmVhbGxvYyhNaW5uZXRCeXRlcyosIHNpemVfdCwgSlNDb250ZXh0Kik7CnZvaWQgYmxvY2tfZnJlZShNaW5uZXRCeXRlcyosIEpTUnVudGltZSopOwppbnQgYmxvY2tfZnJvbWFycmF5YnVmZmVyKE1pbm5ldEJ5dGVzKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYmxvY2tfdG9hcnJheWJ1ZmZlcihNaW5uZXRCeXRlcyosIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3Rvc3RyaW5nKE1pbm5ldEJ5dGVzIGNvbnN0KiwgSlNDb250ZXh0Kik7CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJsb2NrX2dyb3coTWlubmV0Qnl0ZXMqIGJsaywgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIGJsb2NrX3JlYWxsb2MoYmxrLCBibG9ja19TSVpFKGJsaykgKyBzaXplLCBjdHgpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldEJ5dGVzCmJsb2NrX21vdmUoTWlubmV0Qnl0ZXMqIGJsaykgewogIE1pbm5ldEJ5dGVzIHJldCA9IHtibGstPnN0YXJ0LCBibGstPmVuZH07CiAgYmxrLT5zdGFydCA9IDA7CiAgYmxrLT5lbmQgPSAwOwogIHJldHVybiByZXQ7Cn0KCnR5cGVkZWYgdW5pb24gYnl0ZV9idWZmZXIgewogIHN0cnVjdCB7CiAgICB1aW50OF90ICpzdGFydCwgKmVuZCwgKnJlYWQsICp3cml0ZSwgKmFsbG9jOwogIH07CiAgTWlubmV0Qnl0ZXMgYmxvY2s7Cn0gTWlubmV0QnVmZmVyOwoKI2RlZmluZSBCVUZGRVIoYnVmKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyBcCiAgICB7ICh1aW50OF90KikoYnVmKSArIExXU19QUkUsICh1aW50OF90KikoYnVmKSArIHNpemVvZihidWYpIC0gMSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgMCB9IFwKICB9CgojZGVmaW5lIEJVRkZFUl8wKCkgXAogIChNaW5uZXRCdWZmZXIpIHsgXAogICAgeyAwLCAwLCAwLCAwLCAwIH0gXAogIH0KCiNkZWZpbmUgQlVGRkVSX04oYnVmLCBuKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyBcCiAgICB7ICh1aW50OF90KikoYnVmKSwgKHVpbnQ4X3QqKShidWYpICsgKG4pLCAodWludDhfdCopKGJ1ZiksICh1aW50OF90KikoYnVmKSwgMCB9IFwKICB9CgojZGVmaW5lIGJ1ZmZlcl9BVkFJTChiKSAocHRyZGlmZl90KSgoYiktPmVuZCAtIChiKS0+d3JpdGUpCiNkZWZpbmUgYnVmZmVyX0JZVEVTKGIpIChwdHJkaWZmX3QpKChiKS0+d3JpdGUgLSAoYiktPnN0YXJ0KQojZGVmaW5lIGJ1ZmZlcl9SRU1BSU4oYikgKHB0cmRpZmZfdCkoKGIpLT53cml0ZSAtIChiKS0+cmVhZCkKI2RlZmluZSBidWZmZXJfSEVBRChiKSAoc2l6ZV90KSgoYiktPndyaXRlIC0gKGIpLT5zdGFydCkKI2RlZmluZSBidWZmZXJfVEFJTChiKSAoc2l6ZV90KSgoYiktPnJlYWQgLSAoYiktPnN0YXJ0KQojZGVmaW5lIGJ1ZmZlcl9BTExPQyhiKSAodm9pZCopKChiKS0+YWxsb2MpCgojZGVmaW5lIGJ1ZmZlcl9CRUdJTihiKSBibG9ja19CRUdJTigmKGIpLT5ibG9jaykKI2RlZmluZSBidWZmZXJfRU5EKGIpIGJsb2NrX0VORCgmKGIpLT5ibG9jaykKI2RlZmluZSBidWZmZXJfU0laRShiKSBibG9ja19TSVpFKCYoYiktPmJsb2NrKQoKI2RlZmluZSBidWZmZXJfemVybyhiKSBtZW1zZXQoKGIpLCAwLCBzaXplb2YoTWlubmV0QnVmZmVyKSkKCnZvaWQgYnVmZmVyX2luaXQoTWlubmV0QnVmZmVyKiwgdWludDhfdCosIHNpemVfdCk7CnVpbnQ4X3QqIGJ1ZmZlcl9hbGxvYyhNaW5uZXRCdWZmZXIqLCBzaXplX3QsIEpTQ29udGV4dCopOwpzc2l6ZV90IGJ1ZmZlcl9hcHBlbmQoTWlubmV0QnVmZmVyKiwgY29uc3Qgdm9pZCosIHNpemVfdCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIGJ1ZmZlcl9mcmVlKE1pbm5ldEJ1ZmZlciosIEpTUnVudGltZSopOwpCT09MIGJ1ZmZlcl93cml0ZShNaW5uZXRCdWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90KTsKaW50IGJ1ZmZlcl92cHJpbnRmKE1pbm5ldEJ1ZmZlciosIGNvbnN0IGNoYXIqLCB2YV9saXN0KTsKaW50IGJ1ZmZlcl9wcmludGYoTWlubmV0QnVmZmVyKiwgY29uc3QgY2hhciosIC4uLik7CnVpbnQ4X3QqIGJ1ZmZlcl9yZWFsbG9jKE1pbm5ldEJ1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbWFycmF5YnVmZmVyKE1pbm5ldEJ1ZmZlciosIEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbXZhbHVlKE1pbm5ldEJ1ZmZlciosIEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYnVmZmVyX3Rvc3RyaW5nKE1pbm5ldEJ1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwpzaXplX3QgYnVmZmVyX2VzY2FwZShNaW5uZXRCdWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CmNoYXIqIGJ1ZmZlcl9lc2NhcGVkKE1pbm5ldEJ1ZmZlciBjb25zdCosIEpTQ29udGV4dCopOwp2b2lkIGJ1ZmZlcl9maW5hbGl6ZXIoSlNSdW50aW1lKiwgdm9pZCosIHZvaWQqKTsKSlNWYWx1ZSBidWZmZXJfdG9hcnJheWJ1ZmZlcihNaW5uZXRCdWZmZXIqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBidWZmZXJfdG9hcnJheWJ1ZmZlcl9zaXplKE1pbm5ldEJ1ZmZlciogYnVmLCBzaXplX3QqIHN6LCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgYnVmZmVyX2R1bXAoY29uc3QgY2hhciosIE1pbm5ldEJ1ZmZlciBjb25zdCopOwpCT09MIGJ1ZmZlcl9jbG9uZShNaW5uZXRCdWZmZXIqLCBjb25zdCBNaW5uZXRCdWZmZXIqLCBKU0NvbnRleHQqKTsKdWludDhfdCogYnVmZmVyX3NraXAoTWlubmV0QnVmZmVyKiwgc2l6ZV90KTsKQk9PTCBidWZmZXJfcHV0Y2hhcihNaW5uZXRCdWZmZXIqLCBjaGFyKTsKTWlubmV0QnVmZmVyIGJ1ZmZlcl9tb3ZlKE1pbm5ldEJ1ZmZlciopOwp1aW50OF90KiBidWZmZXJfZ3JvdyhNaW5uZXRCdWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KTsKCnN0YXRpYyBpbmxpbmUgdm9pZApidWZmZXJfcmVzZXQoTWlubmV0QnVmZmVyKiBidWYpIHsKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0OwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0Owp9CgovKnN0YXRpYyBpbmxpbmUgdWludDhfdCoKYnVmZmVyX2dyb3coTWlubmV0QnVmZmVyKiBidWYsIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19ncm93KCZidWYtPmJsb2NrLCBzaXplLCBjdHgpOwp9Ki8KCiNlbmRpZiAvKiBNSU5ORVRfQlVGRkVSX0ggKi8KAAAAAAAAAACLDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "#ifndef MINNET_JSUTILS_H\n#define MINNET_JSUTILS_H\n\n#include <quickjs.h>\n#include <cutils.h>\n#include <list.h>\n\ntypedef struct JSThreadState {\n  struct list_head os_rw_handlers;\n  struct list_head os_signal_handlers;\n  struct list_head os_timers;\n  struct list_head port_list;\n  int eval_script_recurse;\n  void *recv_pipe, *send_pipe;\n} JSThreadState;\n\ntypedef struct input_buffer {\n  uint8_t* data;\n  size_t size;\n  void (*free)(JSRuntime*, void* opaque, void* ptr);\n  JSValue value;\n} JSBuffer;\n\n#define JS_BUFFER(data, size, free) \\\n  (JSBuffer) { (data), (size), (free), JS_UNDEFINED }\n\ntypedef union resolve_functions {\n  JSValue array[2];\n  struct {\n    JSValue resolve, reject;\n  };\n} ResolveFunctions;\n\nstruct TimerClosure {\n  int ref_count;\n  uint32_t interval;\n  JSContext* ctx;\n  JSValueConst id, handler, callback;\n};\n\n#define JS_BIND_THIS 0x8000\n\nJSValue vector2array(JSContext*, int, JSValueConst[]);\nJSValue js_object_constructor(JSContext* ctx, JSValueConst value);\nvoid js_console_log(JSContext*, JSValueConst*, JSValueConst*);\nJSValue js_function_bound(JSContext*, JSValueConst, int, JSValueConst argv[], int magic, JSValueConst* func_data);\nJSValue js_function_bind(JSContext*, JSValueConst, int, JSValueConst argv[]);\nJSValue js_function_bind_1(JSContext*, JSValueConst, JSValueConst);\nJSValue js_function_bind_this(JSContext*, JSValueConst, JSValueConst);\nconst char* js_function_name(JSContext*, JSValueConst);\nJSValue js_iterator_next(JSContext*, JSValueConst, JSValueConst* next, BOOL* done_p, int argc, JSValueConst argv[]);\nint js_copy_properties(JSContext*, JSValueConst, JSValueConst, int flags);\nvoid js_buffer_from(JSContext*, JSBuffer*, JSValueConst);\nJSBuffer js_buffer_new(JSContext*, JSValueConst);\nvoid js_buffer_to(JSBuffer, void**, size_t*);\nvoid js_buffer_to3(JSBuffer, const char**, void**, unsigned* plen);\nBOOL js_buffer_valid(const JSBuffer*);\nJSBuffer js_buffer_clone(const JSBuffer*, JSContext*);\nvoid js_buffer_dump(const JSBuffer*, DynBuf*);\nvoid js_buffer_free(JSBuffer*, JSContext*);\nBOOL js_is_iterable(JSContext*, JSValueConst);\nBOOL js_is_iterator(JSContext*, JSValueConst);\nJSAtom js_symbol_static_atom(JSContext*, const char*);\nJSValue js_symbol_static_value(JSContext*, const char*);\nJSValue js_symbol_ctor(JSContext*);\nJSValue js_global_get(JSContext*, const char*);\nJSValue js_global_os(JSContext*);\nJSValue js_os_get(JSContext*, const char*);\nJSValue js_timer_start(JSContext*, JSValueConst, uint32_t);\nvoid js_timer_cancel(JSContext*, JSValueConst);\nvoid js_timer_free(void*);\nJSValue js_timer_callback(JSContext*, JSValueConst, int, JSValueConst* argv, int magic, void* opaque);\nstruct TimerClosure* js_timer_interval(JSContext*, JSValueConst, uint32_t);\nvoid js_timer_restart(struct TimerClosure*);\nvoid js_promise_free(JSContext*, ResolveFunctions*);\nvoid js_promise_free_rt(JSRuntime*, ResolveFunctions*);\nchar* js_tostringlen(JSContext*, size_t*, JSValueConst);\nchar* js_tostring(JSContext*, JSValueConst);\nJSValue js_invoke(JSContext*, JSValueConst, const char*, int argc, JSValueConst argv[]);\nJSValue js_promise_create(JSContext*, ResolveFunctions*);\nJSValue js_promise_resolve(JSContext*, ResolveFunctions*, JSValueConst);\nJSValue js_promise_reject(JSContext*, ResolveFunctions*, JSValueConst);\nvoid js_promise_zero(ResolveFunctions*);\nBOOL js_promise_pending(ResolveFunctions const*);\nBOOL js_promise_done(ResolveFunctions const*);\nBOOL js_is_promise(JSContext*, JSValueConst);\nJSValue js_error_new(JSContext*, const char*, ...);\nuint8_t* js_toptrsize(JSContext*, unsigned int*, JSValueConst);\nBOOL js_get_propertystr_bool(JSContext*, JSValueConst, const char*);\nint64_t js_get_propertystr_int64(JSContext*, JSValueConst, const char*);\nuint32_t js_get_propertystr_uint32(JSContext*, JSValueConst, const char*);\nstruct list_head* js_module_list(JSContext*);\nJSModuleDef* js_module_at(JSContext*, int);\nJSModuleDef* js_module_find(JSContext*, JSAtom);\nJSModuleDef* js_module_find_s(JSContext*, const char*);\nvoid* js_module_export_find(JSModuleDef*, JSAtom);\nJSValue js_module_import_meta(JSContext*, const char*);\nvoid js_error_print(JSContext*, JSValueConst);\nint64_t js_array_length(JSContext*, JSValueConst);\nchar** js_array_to_argv(JSContext*, int*, JSValueConst);\nJSValue js_argv_to_array(JSContext* ctx, const char* const* argv);\nBOOL js_atom_is_index(JSContext* ctx, int64_t* pval, JSAtom atom);\nBOOL js_atom_is_string(JSContext* ctx, JSAtom atom, const char* other);\nBOOL js_atom_is_length(JSContext* ctx, JSAtom atom);\n\nstatic inline void\njs_clear(JSContext* ctx, const void* arg) {\n  const void** ptr = (const void**)arg;\n  if(*ptr)\n    js_free(ctx, (void*)*ptr);\n  *ptr = 0;\n}\n\nstatic inline void\njs_dump_string(const char* str, size_t len, size_t maxlen) {\n  size_t i, n = 2;\nputchar('\\'');\n  for(i = 0; i < len; i++) {\n    if(str[i] == '\\n') {\n      putchar('\\\\');\n      putchar('n');\n      n += 2;\n    } else {\n      putchar(str[i]);\n      n++;\n    }\n    if(maxlen > 0 && n + 1 >= maxlen) {\n      fputs(\"'...\", stdout);\n      return;\n    }\n  }\n  putchar('\\'');\n}\n\nstatic inline char*\njs_to_string(JSContext* ctx, JSValueConst value) {\n  const char* s;\n  char* ret = 0;\n\n  if((s = JS_ToCString(ctx, value))) {\n    ret = js_strdup(ctx, s);\n    JS_FreeCString(ctx, s);\n  }\n  return ret;\n}\n\nstatic inline char*\njs_replace_string(JSContext* ctx, JSValueConst value, char** sptr) {\n  const char* s;\n\n  if(*sptr)\n    js_free(ctx, *sptr);\n\n  if((s = JS_ToCString(ctx, value))) {\n    *sptr = js_strdup(ctx, s);\n    JS_FreeCString(ctx, s);\n  }\n  return *sptr;\n}\n\nstatic inline BOOL\njs_is_nullish(JSValueConst value) {\n  return JS_IsNull(value) || JS_IsUndefined(value);\n}\n\nstatic inline void\njs_buffer_free_default(JSRuntime* rt, void* opaque, void* ptr) {\n  JSBuffer* buf = opaque;\n\n  if(JS_IsString(buf->value))\n    JS_FreeValueRT(rt, buf->value);\n  else if(!JS_IsUndefined(buf->value))\n    JS_FreeValueRT(rt, buf->value);\n}\n\nstatic inline const uint8_t*\njs_buffer_begin(const JSBuffer* in) {\n  return in->data;\n}\n\nstatic inline const uint8_t*\njs_buffer_end(const JSBuffer* in) {\n  return in->data + in->size;\n}\n\ntypedef struct async_read {\n  struct list_head link;\n  ResolveFunctions promise;\n} AsyncRead;\n\ntypedef struct value_item {\n  struct list_head link;\n  JSValue value;\n  int64_t id;\n} ValueItem;\n\ntypedef struct async_iterator {\n  JSContext* ctx;\n  BOOL closed, closing;\n  struct list_head reads;\n} AsyncIterator;\n\nvoid asynciterator_zero(AsyncIterator*);\nvoid asynciterator_clear(AsyncIterator*, JSRuntime*);\nAsyncIterator* asynciterator_new(JSContext*);\nJSValue asynciterator_next(AsyncIterator*, JSContext*);\nBOOL asynciterator_yield(AsyncIterator*, JSValueConst, JSContext*);\nBOOL asynciterator_stop(AsyncIterator*, JSValueConst, JSContext*);\nJSValue asynciterator_obj(JSValueConst value, BOOL done, JSContext*);\nBOOL asynciterator_emplace(AsyncIterator* it, JSValueConst obj, JSContext* ctx);\nBOOL asynciterator_check_closing(AsyncIterator* it, JSContext* ctx);\nint asynciterator_reject_all(AsyncIterator* it, JSValueConst value, JSContext* ctx);\n\n#endif /* MINNET_JS_UTILS_H */\n",
			"file": "jsutils.h",
			"file_size": 7067,
			"file_write_time": 133038410262219676,
			"settings":
			{
				"buffer_size": 7065,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3GAAAAAAAAAkZAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAACPGwAAI2lmbmRlZiBNSU5ORVRfSlNVVElMU19ICiNkZWZpbmUgTUlOTkVUX0pTVVRJTFNfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSA8bGlzdC5oPgoKdHlwZWRlZiBzdHJ1Y3QgSlNUaHJlYWRTdGF0ZSB7CiAgc3RydWN0IGxpc3RfaGVhZCBvc19yd19oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3NpZ25hbF9oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3RpbWVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIHBvcnRfbGlzdDsKICBpbnQgZXZhbF9zY3JpcHRfcmVjdXJzZTsKICB2b2lkICpyZWN2X3BpcGUsICpzZW5kX3BpcGU7Cn0gSlNUaHJlYWRTdGF0ZTsKCnR5cGVkZWYgc3RydWN0IGlucHV0X2J1ZmZlciB7CiAgdWludDhfdCogZGF0YTsKICBzaXplX3Qgc2l6ZTsKICB2b2lkICgqZnJlZSkoSlNSdW50aW1lKiwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpOwogIEpTVmFsdWUgdmFsdWU7Cn0gSlNCdWZmZXI7CgojZGVmaW5lIEpTX0JVRkZFUihkYXRhLCBzaXplLCBmcmVlKSBcCiAgKEpTQnVmZmVyKSB7IChkYXRhKSwgKHNpemUpLCAoZnJlZSksIEpTX1VOREVGSU5FRCB9Cgp0eXBlZGVmIHVuaW9uIHJlc29sdmVfZnVuY3Rpb25zIHsKICBKU1ZhbHVlIGFycmF5WzJdOwogIHN0cnVjdCB7CiAgICBKU1ZhbHVlIHJlc29sdmUsIHJlamVjdDsKICB9Owp9IFJlc29sdmVGdW5jdGlvbnM7CgpzdHJ1Y3QgVGltZXJDbG9zdXJlIHsKICBpbnQgcmVmX2NvdW50OwogIHVpbnQzMl90IGludGVydmFsOwogIEpTQ29udGV4dCogY3R4OwogIEpTVmFsdWVDb25zdCBpZCwgaGFuZGxlciwgY2FsbGJhY2s7Cn07CgojZGVmaW5lIEpTX0JJTkRfVEhJUyAweDgwMDAKCkpTVmFsdWUgdmVjdG9yMmFycmF5KEpTQ29udGV4dCosIGludCwgSlNWYWx1ZUNvbnN0W10pOwpKU1ZhbHVlIGpzX29iamVjdF9jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKTsKdm9pZCBqc19jb25zb2xlX2xvZyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QqLCBKU1ZhbHVlQ29uc3QqKTsKSlNWYWx1ZSBqc19mdW5jdGlvbl9ib3VuZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljLCBKU1ZhbHVlQ29uc3QqIGZ1bmNfZGF0YSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZF8xKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0KTsKSlNWYWx1ZSBqc19mdW5jdGlvbl9iaW5kX3RoaXMoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBKU1ZhbHVlQ29uc3QpOwpjb25zdCBjaGFyKiBqc19mdW5jdGlvbl9uYW1lKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkpTVmFsdWUganNfaXRlcmF0b3JfbmV4dChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIEpTVmFsdWVDb25zdCogbmV4dCwgQk9PTCogZG9uZV9wLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CmludCBqc19jb3B5X3Byb3BlcnRpZXMoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBKU1ZhbHVlQ29uc3QsIGludCBmbGFncyk7CnZvaWQganNfYnVmZmVyX2Zyb20oSlNDb250ZXh0KiwgSlNCdWZmZXIqLCBKU1ZhbHVlQ29uc3QpOwpKU0J1ZmZlciBqc19idWZmZXJfbmV3KEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CnZvaWQganNfYnVmZmVyX3RvKEpTQnVmZmVyLCB2b2lkKiosIHNpemVfdCopOwp2b2lkIGpzX2J1ZmZlcl90bzMoSlNCdWZmZXIsIGNvbnN0IGNoYXIqKiwgdm9pZCoqLCB1bnNpZ25lZCogcGxlbik7CkJPT0wganNfYnVmZmVyX3ZhbGlkKGNvbnN0IEpTQnVmZmVyKik7CkpTQnVmZmVyIGpzX2J1ZmZlcl9jbG9uZShjb25zdCBKU0J1ZmZlciosIEpTQ29udGV4dCopOwp2b2lkIGpzX2J1ZmZlcl9kdW1wKGNvbnN0IEpTQnVmZmVyKiwgRHluQnVmKik7CnZvaWQganNfYnVmZmVyX2ZyZWUoSlNCdWZmZXIqLCBKU0NvbnRleHQqKTsKQk9PTCBqc19pc19pdGVyYWJsZShKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwpCT09MIGpzX2lzX2l0ZXJhdG9yKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkpTQXRvbSBqc19zeW1ib2xfc3RhdGljX2F0b20oSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwpKU1ZhbHVlIGpzX3N5bWJvbF9zdGF0aWNfdmFsdWUoSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwpKU1ZhbHVlIGpzX3N5bWJvbF9jdG9yKEpTQ29udGV4dCopOwpKU1ZhbHVlIGpzX2dsb2JhbF9nZXQoSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwpKU1ZhbHVlIGpzX2dsb2JhbF9vcyhKU0NvbnRleHQqKTsKSlNWYWx1ZSBqc19vc19nZXQoSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwpKU1ZhbHVlIGpzX3RpbWVyX3N0YXJ0KEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgdWludDMyX3QpOwp2b2lkIGpzX3RpbWVyX2NhbmNlbChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwp2b2lkIGpzX3RpbWVyX2ZyZWUodm9pZCopOwpKU1ZhbHVlIGpzX3RpbWVyX2NhbGxiYWNrKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QqIGFyZ3YsIGludCBtYWdpYywgdm9pZCogb3BhcXVlKTsKc3RydWN0IFRpbWVyQ2xvc3VyZSoganNfdGltZXJfaW50ZXJ2YWwoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCB1aW50MzJfdCk7CnZvaWQganNfdGltZXJfcmVzdGFydChzdHJ1Y3QgVGltZXJDbG9zdXJlKik7CnZvaWQganNfcHJvbWlzZV9mcmVlKEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqKTsKdm9pZCBqc19wcm9taXNlX2ZyZWVfcnQoSlNSdW50aW1lKiwgUmVzb2x2ZUZ1bmN0aW9ucyopOwpjaGFyKiBqc190b3N0cmluZ2xlbihKU0NvbnRleHQqLCBzaXplX3QqLCBKU1ZhbHVlQ29uc3QpOwpjaGFyKiBqc190b3N0cmluZyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwpKU1ZhbHVlIGpzX2ludm9rZShKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGNvbnN0IGNoYXIqLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CkpTVmFsdWUganNfcHJvbWlzZV9jcmVhdGUoSlNDb250ZXh0KiwgUmVzb2x2ZUZ1bmN0aW9ucyopOwpKU1ZhbHVlIGpzX3Byb21pc2VfcmVzb2x2ZShKU0NvbnRleHQqLCBSZXNvbHZlRnVuY3Rpb25zKiwgSlNWYWx1ZUNvbnN0KTsKSlNWYWx1ZSBqc19wcm9taXNlX3JlamVjdChKU0NvbnRleHQqLCBSZXNvbHZlRnVuY3Rpb25zKiwgSlNWYWx1ZUNvbnN0KTsKdm9pZCBqc19wcm9taXNlX3plcm8oUmVzb2x2ZUZ1bmN0aW9ucyopOwpCT09MIGpzX3Byb21pc2VfcGVuZGluZyhSZXNvbHZlRnVuY3Rpb25zIGNvbnN0Kik7CkJPT0wganNfcHJvbWlzZV9kb25lKFJlc29sdmVGdW5jdGlvbnMgY29uc3QqKTsKQk9PTCBqc19pc19wcm9taXNlKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkpTVmFsdWUganNfZXJyb3JfbmV3KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqLCAuLi4pOwp1aW50OF90KiBqc190b3B0cnNpemUoSlNDb250ZXh0KiwgdW5zaWduZWQgaW50KiwgSlNWYWx1ZUNvbnN0KTsKQk9PTCBqc19nZXRfcHJvcGVydHlzdHJfYm9vbChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGNvbnN0IGNoYXIqKTsKaW50NjRfdCBqc19nZXRfcHJvcGVydHlzdHJfaW50NjQoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBjb25zdCBjaGFyKik7CnVpbnQzMl90IGpzX2dldF9wcm9wZXJ0eXN0cl91aW50MzIoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBjb25zdCBjaGFyKik7CnN0cnVjdCBsaXN0X2hlYWQqIGpzX21vZHVsZV9saXN0KEpTQ29udGV4dCopOwpKU01vZHVsZURlZioganNfbW9kdWxlX2F0KEpTQ29udGV4dCosIGludCk7CkpTTW9kdWxlRGVmKiBqc19tb2R1bGVfZmluZChKU0NvbnRleHQqLCBKU0F0b20pOwpKU01vZHVsZURlZioganNfbW9kdWxlX2ZpbmRfcyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CnZvaWQqIGpzX21vZHVsZV9leHBvcnRfZmluZChKU01vZHVsZURlZiosIEpTQXRvbSk7CkpTVmFsdWUganNfbW9kdWxlX2ltcG9ydF9tZXRhKEpTQ29udGV4dCosIGNvbnN0IGNoYXIqKTsKdm9pZCBqc19lcnJvcl9wcmludChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwppbnQ2NF90IGpzX2FycmF5X2xlbmd0aChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwpjaGFyKioganNfYXJyYXlfdG9fYXJndihKU0NvbnRleHQqLCBpbnQqLCBKU1ZhbHVlQ29uc3QpOwpKU1ZhbHVlIGpzX2FyZ3ZfdG9fYXJyYXkoSlNDb250ZXh0KiBjdHgsIGNoYXIqKiBhcmd2KTsKQk9PTCBqc19hdG9tX2lzX2luZGV4KEpTQ29udGV4dCogY3R4LCBpbnQ2NF90KiBwdmFsLCBKU0F0b20gYXRvbSk7CkJPT0wganNfYXRvbV9pc19zdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTQXRvbSBhdG9tLCBjb25zdCBjaGFyKiBvdGhlcik7CkJPT0wganNfYXRvbV9pc19sZW5ndGgoSlNDb250ZXh0KiBjdHgsIEpTQXRvbSBhdG9tKTsKCnN0YXRpYyBpbmxpbmUgdm9pZApqc19jbGVhcihKU0NvbnRleHQqIGN0eCwgY29uc3Qgdm9pZCogYXJnKSB7CiAgY29uc3Qgdm9pZCoqIHB0ciA9IChjb25zdCB2b2lkKiopYXJnOwogIGlmKCpwdHIpCiAgICBqc19mcmVlKGN0eCwgKHZvaWQqKSpwdHIpOwogICpwdHIgPSAwOwp9CgpzdGF0aWMgaW5saW5lIHZvaWQKanNfZHVtcF9zdHJpbmcoY29uc3QgY2hhciogc3RyLCBzaXplX3QgbGVuLCBzaXplX3QgbWF4bGVuKSB7CiAgc2l6ZV90IGksIG4gPSAyOwogIHB1dGNoYXIoJ1wnJyk7CiAgZm9yKGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKICAgIGlmKHN0cltpXSA9PSAnXG4nKSB7CiAgICAgIHB1dGNoYXIoJ1xcJyk7CiAgICAgIHB1dGNoYXIoJ24nKTsKICAgICAgbiArPSAyOwogICAgfSBlbHNlIHsKICAgICAgcHV0Y2hhcihzdHJbaV0pOwogICAgICBuKys7CiAgICB9CiAgICBpZihtYXhsZW4gPiAwICYmIG4gKyAxID49IG1heGxlbikgewogICAgICBmcHV0cygiJy4uLiIsIHN0ZG91dCk7CiAgICAgIHJldHVybjsKICAgIH0KICB9CiAgcHV0Y2hhcignXCcnKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpqc190b19zdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIGNvbnN0IGNoYXIqIHM7CiAgY2hhciogcmV0ID0gMDsKCiAgaWYoKHMgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSkpKSB7CiAgICByZXQgPSBqc19zdHJkdXAoY3R4LCBzKTsKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcyk7CiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBpbmxpbmUgY2hhcioKanNfcmVwbGFjZV9zdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSwgY2hhcioqIHNwdHIpIHsKICBjb25zdCBjaGFyKiBzOwoKICBpZigqc3B0cikKICAgIGpzX2ZyZWUoY3R4LCAqc3B0cik7CgogIGlmKChzID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpKSkgewogICAgKnNwdHIgPSBqc19zdHJkdXAoY3R4LCBzKTsKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcyk7CiAgfQogIHJldHVybiAqc3B0cjsKfQoKc3RhdGljIGlubGluZSBCT09MCmpzX2lzX251bGxpc2goSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgcmV0dXJuIEpTX0lzTnVsbCh2YWx1ZSkgfHwgSlNfSXNVbmRlZmluZWQodmFsdWUpOwp9CgpzdGF0aWMgaW5saW5lIHZvaWQKanNfYnVmZmVyX2ZyZWVfZGVmYXVsdChKU1J1bnRpbWUqIHJ0LCB2b2lkKiBvcGFxdWUsIHZvaWQqIHB0cikgewogIEpTQnVmZmVyKiBidWYgPSBvcGFxdWU7CgogIGlmKEpTX0lzU3RyaW5nKGJ1Zi0+dmFsdWUpKQogICAgSlNfRnJlZVZhbHVlUlQocnQsIGJ1Zi0+dmFsdWUpOwogIGVsc2UgaWYoIUpTX0lzVW5kZWZpbmVkKGJ1Zi0+dmFsdWUpKQogICAgSlNfRnJlZVZhbHVlUlQocnQsIGJ1Zi0+dmFsdWUpOwp9CgpzdGF0aWMgaW5saW5lIGNvbnN0IHVpbnQ4X3QqCmpzX2J1ZmZlcl9iZWdpbihjb25zdCBKU0J1ZmZlciogaW4pIHsKICByZXR1cm4gaW4tPmRhdGE7Cn0KCnN0YXRpYyBpbmxpbmUgY29uc3QgdWludDhfdCoKanNfYnVmZmVyX2VuZChjb25zdCBKU0J1ZmZlciogaW4pIHsKICByZXR1cm4gaW4tPmRhdGEgKyBpbi0+c2l6ZTsKfQoKdHlwZWRlZiBzdHJ1Y3QgYXN5bmNfcmVhZCB7CiAgc3RydWN0IGxpc3RfaGVhZCBsaW5rOwogIFJlc29sdmVGdW5jdGlvbnMgcHJvbWlzZTsKfSBBc3luY1JlYWQ7Cgp0eXBlZGVmIHN0cnVjdCB2YWx1ZV9pdGVtIHsKICBzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7CiAgSlNWYWx1ZSB2YWx1ZTsKICBpbnQ2NF90IGlkOwp9IFZhbHVlSXRlbTsKCnR5cGVkZWYgc3RydWN0IGFzeW5jX2l0ZXJhdG9yIHsKICBKU0NvbnRleHQqIGN0eDsKICBCT09MIGNsb3NlZCwgY2xvc2luZzsKICBzdHJ1Y3QgbGlzdF9oZWFkIHJlYWRzOwp9IEFzeW5jSXRlcmF0b3I7Cgp2b2lkIGFzeW5jaXRlcmF0b3JfemVybyhBc3luY0l0ZXJhdG9yKik7CnZvaWQgYXN5bmNpdGVyYXRvcl9jbGVhcihBc3luY0l0ZXJhdG9yKiwgSlNSdW50aW1lKik7CkFzeW5jSXRlcmF0b3IqIGFzeW5jaXRlcmF0b3JfbmV3KEpTQ29udGV4dCopOwpKU1ZhbHVlIGFzeW5jaXRlcmF0b3JfbmV4dChBc3luY0l0ZXJhdG9yKiwgSlNDb250ZXh0Kik7CkJPT0wgYXN5bmNpdGVyYXRvcl95aWVsZChBc3luY0l0ZXJhdG9yKiwgSlNWYWx1ZUNvbnN0LCBKU0NvbnRleHQqKTsKQk9PTCBhc3luY2l0ZXJhdG9yX3N0b3AoQXN5bmNJdGVyYXRvciosIEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYXN5bmNpdGVyYXRvcl9vYmooSlNWYWx1ZUNvbnN0IHZhbHVlLCBCT09MIGRvbmUsIEpTQ29udGV4dCopOwpCT09MIGFzeW5jaXRlcmF0b3JfZW1wbGFjZShBc3luY0l0ZXJhdG9yKiBpdCwgSlNWYWx1ZUNvbnN0IG9iaiwgSlNDb250ZXh0KiBjdHgpOwpCT09MIGFzeW5jaXRlcmF0b3JfY2hlY2tfY2xvc2luZyhBc3luY0l0ZXJhdG9yKiBpdCwgSlNDb250ZXh0KiBjdHgpOwppbnQgYXN5bmNpdGVyYXRvcl9yZWplY3RfYWxsKEFzeW5jSXRlcmF0b3IqIGl0LCBKU1ZhbHVlQ29uc3QgdmFsdWUsIEpTQ29udGV4dCogY3R4KTsKCiNlbmRpZiAvKiBNSU5ORVRfSlNfVVRJTFNfSCAqLwoAAAAAAAAAAI8bAAAAAAAAAAAAAAAAAAAAAAAAjxsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3GAAAAAAAAAkZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA9xgAAAAAAAAJGQAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "cont"
					},
					"BAAAALQQAAAAAAAAtRAAAAAAAAAAAAAAtRAAAAAAAAC2EAAAAAAAAAAAAAC2EAAAAAAAALcQAAAAAAAAAAAAALcQAAAAAAAAuBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtBAAAAAAAAC0EAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALgQAAAAAAAAuRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuBAAAAAAAAC4EAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"left_delete",
					null,
					"AQAAALgQAAAAAAAAuBAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAuRAAAAAAAAC5EAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "st"
					},
					"AgAAALgQAAAAAAAAuRAAAAAAAAAAAAAAuRAAAAAAAAC6EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuBAAAAAAAAC4EAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					3,
					"left_delete",
					null,
					"AwAAALkQAAAAAAAAuRAAAAAAAAABAAAAdLgQAAAAAAAAuBAAAAAAAAABAAAAc7cQAAAAAAAAtxAAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAuhAAAAAAAAC6EAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "st"
					},
					"AgAAALcQAAAAAAAAuBAAAAAAAAAAAAAAuBAAAAAAAAC5EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtxAAAAAAAAC3EAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALkQAAAAAAAAuhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuRAAAAAAAAC5EAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " const"
					},
					"BgAAAL8QAAAAAAAAwBAAAAAAAAAAAAAAwBAAAAAAAADBEAAAAAAAAAAAAADBEAAAAAAAAMIQAAAAAAAAAAAAAMIQAAAAAAAAwxAAAAAAAAAAAAAAwxAAAAAAAADEEAAAAAAAAAAAAADEEAAAAAAAAMUQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvxAAAAAAAAC/EAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"unindent",
					null,
					"AQAAAJISAAAAAAAAkhIAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAkhIAAAAAAACSEgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "jsutils.c",
			"settings":
			{
				"buffer_size": 22981,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					10,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BQAAACVLAAAAAAAAJksAAAAAAAAAAAAAJksAAAAAAAAoSwAAAAAAAAAAAAAoSwAAAAAAACpLAAAAAAAAAAAAACpLAAAAAAAAK0sAAAAAAAAAAAAAK0sAAAAAAAAsSwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJUsAAAAAAAAlSwAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACxLAAAAAAAALksAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALEsAAAAAAAAsSwAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "pval"
					},
					"BAAAAC1LAAAAAAAALksAAAAAAAAAAAAALksAAAAAAAAvSwAAAAAAAAAAAAAvSwAAAAAAADBLAAAAAAAAAAAAADBLAAAAAAAAMUsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALUsAAAAAAAAtSwAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "\niof"
					},
					"BwAAAMJMAAAAAAAAw0wAAAAAAAAAAAAAw0wAAAAAAADFTAAAAAAAAAAAAADDTAAAAAAAAMNMAAAAAAAAAgAAACAgw0wAAAAAAADHTAAAAAAAAAAAAADHTAAAAAAAAMhMAAAAAAAAAAAAAMhMAAAAAAAAyUwAAAAAAAAAAAAAyUwAAAAAAADKTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwkwAAAAAAADCTAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					2,
					"left_delete",
					null,
					"AgAAAMlMAAAAAAAAyUwAAAAAAAABAAAAZshMAAAAAAAAyEwAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAykwAAAAAAADKTAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAMhMAAAAAAAAyUwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyEwAAAAAAADITAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMlMAAAAAAAAy0wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyUwAAAAAAADJTAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "pval"
					},
					"BAAAAMpMAAAAAAAAy0wAAAAAAAAAAAAAy0wAAAAAAADMTAAAAAAAAAAAAADMTAAAAAAAAM1MAAAAAAAAAAAAAM1MAAAAAAAAzkwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAykwAAAAAAADKTAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAz0wAAAAAAADPTAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"paste",
					null,
					"AgAAANRJAAAAAAAA5kkAAAAAAAAAAAAA5kkAAAAAAADmSQAAAAAAAAYAAABjaGFyKio",
					"AQAAAAAAAAABAAAA1EkAAAAAAADaSQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-form-parser.h",
			"settings":
			{
				"buffer_size": 2430,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABqCQAAI2lmbmRlZiBNSU5ORVRfRk9STV9QQVJTRVJfSAojZGVmaW5lIE1JTk5FVF9GT1JNX1BBUlNFUl9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlICJqc3V0aWxzLmgiCiNpbmNsdWRlICJtaW5uZXQtZ2VuZXJhdG9yLmgiCiNpbmNsdWRlICJtaW5uZXQtd2Vic29ja2V0LmgiCgp0eXBlZGVmIHN0cnVjdCBmb3JtX3BhcnNlciB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzX3NwYV9jcmVhdGVfaW5mbyBzcGFfY3JlYXRlX2luZm87CiAgc3RydWN0IGx3c19zcGEqIHNwYTsKICBzdHJ1Y3QgbHdzYWMqIGx3c2FjX2hlYWQ7CiAgTWlubmV0V2Vic29ja2V0KiB3czsKICBzdHJ1Y3QgewogICAgTWlubmV0Q2FsbGJhY2sgY29udGVudCwgb3BlbiwgY2xvc2U7CiAgfSBjYjsKfSBNaW5uZXRGb3JtUGFyc2VyOwoKdm9pZCBmb3JtX3BhcnNlcl9pbml0KE1pbm5ldEZvcm1QYXJzZXIqLCBNaW5uZXRXZWJzb2NrZXQqLCBpbnQsIGNvbnN0IGNoYXIqIGNvbnN0KiBwYXJhbV9uYW1lcywgc2l6ZV90IGNodW5rX3NpemUpOwpNaW5uZXRGb3JtUGFyc2VyKiBmb3JtX3BhcnNlcl9hbGxvYyhKU0NvbnRleHQqKTsKTWlubmV0Rm9ybVBhcnNlciogZm9ybV9wYXJzZXJfbmV3KEpTQ29udGV4dCosIE1pbm5ldFdlYnNvY2tldCosIGludCwgY29uc3QgY2hhciogY29uc3QqIHBhcmFtX25hbWVzLCBzaXplX3QgY2h1bmtfc2l6ZSk7Ck1pbm5ldEZvcm1QYXJzZXIqIGZvcm1fcGFyc2VyX2R1cChNaW5uZXRGb3JtUGFyc2VyKik7CnZvaWQgZm9ybV9wYXJzZXJfemVybyhNaW5uZXRGb3JtUGFyc2VyKik7CnZvaWQgZm9ybV9wYXJzZXJfY2xlYXIoTWlubmV0Rm9ybVBhcnNlciosIEpTQ29udGV4dCopOwp2b2lkIGZvcm1fcGFyc2VyX2NsZWFyX3J0KE1pbm5ldEZvcm1QYXJzZXIqLCBKU1J1bnRpbWUqKTsKdm9pZCBmb3JtX3BhcnNlcl9mcmVlKE1pbm5ldEZvcm1QYXJzZXIqLCBKU0NvbnRleHQqKTsKdm9pZCBmb3JtX3BhcnNlcl9mcmVlX3J0KE1pbm5ldEZvcm1QYXJzZXIqLCBKU1J1bnRpbWUqKTsKY2hhciogZm9ybV9wYXJzZXJfcGFyYW1fbmFtZShNaW5uZXRGb3JtUGFyc2VyKiwgaW50KTsKQk9PTCBmb3JtX3BhcnNlcl9wYXJhbV92YWxpZChNaW5uZXRGb3JtUGFyc2VyKiwgaW50KTsKc2l6ZV90IGZvcm1fcGFyc2VyX3BhcmFtX2NvdW50KE1pbm5ldEZvcm1QYXJzZXIqKTsKaW50IGZvcm1fcGFyc2VyX3BhcmFtX2luZGV4KE1pbm5ldEZvcm1QYXJzZXIqLCBjb25zdCBjaGFyKik7CkJPT0wgZm9ybV9wYXJzZXJfcGFyYW1fZXhpc3RzKE1pbm5ldEZvcm1QYXJzZXIqLCBjb25zdCBjaGFyKik7CmludCBmb3JtX3BhcnNlcl9wcm9jZXNzKE1pbm5ldEZvcm1QYXJzZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90KTsKSlNWYWx1ZSBtaW5uZXRfZm9ybV9wYXJzZXJfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBpbnQsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9mb3JtX3BhcnNlcl9uZXcoSlNDb250ZXh0KiwgTWlubmV0V2Vic29ja2V0KiwgaW50LCBjb25zdCBjaGFyKiBjb25zdCogcGFyYW1fbmFtZXMsIHNpemVfdCBjaHVua19zaXplKTsKSlNWYWx1ZSBtaW5uZXRfZm9ybV9wYXJzZXJfd3JhcChKU0NvbnRleHQqLCBNaW5uZXRGb3JtUGFyc2VyKik7CkpTVmFsdWUgbWlubmV0X2Zvcm1fcGFyc2VyX2NhbGwoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBKU1ZhbHVlQ29uc3QsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgZmxhZ3MpOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU1ZhbHVlIG1pbm5ldF9mb3JtX3BhcnNlcl9wcm90bywgbWlubmV0X2Zvcm1fcGFyc2VyX2N0b3I7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF9mb3JtX3BhcnNlcl9jbGFzc19pZDsKZXh0ZXJuIEpTQ2xhc3NEZWYgbWlubmV0X2Zvcm1fcGFyc2VyX2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X2Zvcm1fcGFyc2VyX3Byb3RvX2Z1bmNzW107CmV4dGVybiBjb25zdCBzaXplX3QgbWlubmV0X2Zvcm1fcGFyc2VyX3Byb3RvX2Z1bmNzX3NpemU7CgpzdGF0aWMgaW5saW5lIE1pbm5ldEZvcm1QYXJzZXIqCm1pbm5ldF9mb3JtX3BhcnNlcl9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X2Zvcm1fcGFyc2VyX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRGb3JtUGFyc2VyKgptaW5uZXRfZm9ybV9wYXJzZXJfZGF0YTIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X2Zvcm1fcGFyc2VyX2NsYXNzX2lkKTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9GT1JNX1BBUlNFUl9IICovCgAAAAAAAAAATAkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACABAAAAAAAAIAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABMCQAAI2lmbmRlZiBNSU5ORVRfRk9STV9QQVJTRVJfSAojZGVmaW5lIE1JTk5FVF9GT1JNX1BBUlNFUl9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlICJqc3V0aWxzLmgiCiNpbmNsdWRlICJtaW5uZXQtZ2VuZXJhdG9yLmgiCiNpbmNsdWRlICJtaW5uZXQtd2Vic29ja2V0LmgiCgp0eXBlZGVmIHN0cnVjdCBmb3JtcGFyc2VyIHsKICBpbnQgcmVmX2NvdW50OwogIHN0cnVjdCBsd3Nfc3BhX2NyZWF0ZV9pbmZvIHNwYV9jcmVhdGVfaW5mbzsKICBzdHJ1Y3QgbHdzX3NwYSogc3BhOwogIHN0cnVjdCBsd3NhYyogbHdzYWNfaGVhZDsKICBNaW5uZXRXZWJzb2NrZXQqIHdzOwogIHN0cnVjdCB7CiAgICBNaW5uZXRDYWxsYmFjayBjb250ZW50LCBvcGVuLCBjbG9zZTsKICB9IGNiOwp9IE1pbm5ldEZvcm1QYXJzZXI7Cgp2b2lkIGZvcm1wYXJzZXJfaW5pdChNaW5uZXRGb3JtUGFyc2VyKiwgTWlubmV0V2Vic29ja2V0KiwgaW50LCBjb25zdCBjaGFyKiBjb25zdCogcGFyYW1fbmFtZXMsIHNpemVfdCBjaHVua19zaXplKTsKTWlubmV0Rm9ybVBhcnNlciogZm9ybXBhcnNlcl9hbGxvYyhKU0NvbnRleHQqKTsKTWlubmV0Rm9ybVBhcnNlciogZm9ybXBhcnNlcl9uZXcoSlNDb250ZXh0KiwgTWlubmV0V2Vic29ja2V0KiwgaW50LCBjb25zdCBjaGFyKiBjb25zdCogcGFyYW1fbmFtZXMsIHNpemVfdCBjaHVua19zaXplKTsKTWlubmV0Rm9ybVBhcnNlciogZm9ybXBhcnNlcl9kdXAoTWlubmV0Rm9ybVBhcnNlciopOwp2b2lkIGZvcm1wYXJzZXJfemVybyhNaW5uZXRGb3JtUGFyc2VyKik7CnZvaWQgZm9ybXBhcnNlcl9jbGVhcihNaW5uZXRGb3JtUGFyc2VyKiwgSlNDb250ZXh0Kik7CnZvaWQgZm9ybXBhcnNlcl9jbGVhcl9ydChNaW5uZXRGb3JtUGFyc2VyKiwgSlNSdW50aW1lKik7CnZvaWQgZm9ybXBhcnNlcl9mcmVlKE1pbm5ldEZvcm1QYXJzZXIqLCBKU0NvbnRleHQqKTsKdm9pZCBmb3JtcGFyc2VyX2ZyZWVfcnQoTWlubmV0Rm9ybVBhcnNlciosIEpTUnVudGltZSopOwpjaGFyKiBmb3JtcGFyc2VyX3BhcmFtX25hbWUoTWlubmV0Rm9ybVBhcnNlciosIGludCk7CkJPT0wgZm9ybXBhcnNlcl9wYXJhbV92YWxpZChNaW5uZXRGb3JtUGFyc2VyKiwgaW50KTsKc2l6ZV90IGZvcm1wYXJzZXJfcGFyYW1fY291bnQoTWlubmV0Rm9ybVBhcnNlciopOwppbnQgZm9ybXBhcnNlcl9wYXJhbV9pbmRleChNaW5uZXRGb3JtUGFyc2VyKiwgY29uc3QgY2hhciopOwpCT09MIGZvcm1wYXJzZXJfcGFyYW1fZXhpc3RzKE1pbm5ldEZvcm1QYXJzZXIqLCBjb25zdCBjaGFyKik7CmludCBmb3JtcGFyc2VyX3Byb2Nlc3MoTWlubmV0Rm9ybVBhcnNlciosIGNvbnN0IHZvaWQqLCBzaXplX3QpOwpKU1ZhbHVlIG1pbm5ldF9mb3JtcGFyc2VyX2NvbnN0cnVjdG9yKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKSlNWYWx1ZSBtaW5uZXRfZm9ybXBhcnNlcl9uZXcoSlNDb250ZXh0KiwgTWlubmV0V2Vic29ja2V0KiwgaW50LCBjb25zdCBjaGFyKiBjb25zdCogcGFyYW1fbmFtZXMsIHNpemVfdCBjaHVua19zaXplKTsKSlNWYWx1ZSBtaW5uZXRfZm9ybXBhcnNlcl93cmFwKEpTQ29udGV4dCosIE1pbm5ldEZvcm1QYXJzZXIqKTsKSlNWYWx1ZSBtaW5uZXRfZm9ybXBhcnNlcl9jYWxsKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IGZsYWdzKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfZm9ybXBhcnNlcl9wcm90bywgbWlubmV0X2Zvcm1wYXJzZXJfY3RvcjsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X2Zvcm1wYXJzZXJfY2xhc3NfaWQ7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9mb3JtcGFyc2VyX2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X2Zvcm1wYXJzZXJfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfZm9ybXBhcnNlcl9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBNaW5uZXRGb3JtUGFyc2VyKgptaW5uZXRfZm9ybXBhcnNlcl9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X2Zvcm1wYXJzZXJfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldEZvcm1QYXJzZXIqCm1pbm5ldF9mb3JtcGFyc2VyX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF9mb3JtcGFyc2VyX2NsYXNzX2lkKTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9GT1JNX1BBUlNFUl9IICovCgAAAAAAAAAAagkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZAQAAAAAAAKkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"paste",
					null,
					"AgAAAK0BAAAAAAAAwwcAAAAAAAAAAAAAwwcAAAAAAADDBwAAAAAAAD8FAAB2b2lkIGZvcm1fcGFyc2VyX2luaXQoTWlubmV0Rm9ybVBhcnNlciosIE1pbm5ldFdlYnNvY2tldCosIGludCwgY29uc3QgY2hhciogY29uc3QqIHBhcmFtX25hbWVzLCBzaXplX3QgY2h1bmtfc2l6ZSk7Ck1pbm5ldEZvcm1QYXJzZXIqIGZvcm1fcGFyc2VyX2FsbG9jKEpTQ29udGV4dCopOwpNaW5uZXRGb3JtUGFyc2VyKiBmb3JtX3BhcnNlcl9uZXcoSlNDb250ZXh0KiwgTWlubmV0V2Vic29ja2V0KiwgaW50LCBjb25zdCBjaGFyKiBjb25zdCogcGFyYW1fbmFtZXMsIHNpemVfdCBjaHVua19zaXplKTsKTWlubmV0Rm9ybVBhcnNlciogZm9ybV9wYXJzZXJfZHVwKE1pbm5ldEZvcm1QYXJzZXIqKTsKdm9pZCBmb3JtX3BhcnNlcl96ZXJvKE1pbm5ldEZvcm1QYXJzZXIqKTsKdm9pZCBmb3JtX3BhcnNlcl9jbGVhcihNaW5uZXRGb3JtUGFyc2VyKiwgSlNDb250ZXh0Kik7CnZvaWQgZm9ybV9wYXJzZXJfY2xlYXJfcnQoTWlubmV0Rm9ybVBhcnNlciosIEpTUnVudGltZSopOwp2b2lkIGZvcm1fcGFyc2VyX2ZyZWUoTWlubmV0Rm9ybVBhcnNlciosIEpTQ29udGV4dCopOwp2b2lkIGZvcm1fcGFyc2VyX2ZyZWVfcnQoTWlubmV0Rm9ybVBhcnNlciosIEpTUnVudGltZSopOwpjaGFyKiBmb3JtX3BhcnNlcl9wYXJhbV9uYW1lKE1pbm5ldEZvcm1QYXJzZXIqLCBpbnQpOwpCT09MIGZvcm1fcGFyc2VyX3BhcmFtX3ZhbGlkKE1pbm5ldEZvcm1QYXJzZXIqLCBpbnQpOwpzaXplX3QgZm9ybV9wYXJzZXJfcGFyYW1fY291bnQoTWlubmV0Rm9ybVBhcnNlciopOwppbnQgZm9ybV9wYXJzZXJfcGFyYW1faW5kZXgoTWlubmV0Rm9ybVBhcnNlciosIGNvbnN0IGNoYXIqKTsKQk9PTCBmb3JtX3BhcnNlcl9wYXJhbV9leGlzdHMoTWlubmV0Rm9ybVBhcnNlciosIGNvbnN0IGNoYXIqKTsKaW50IGZvcm1fcGFyc2VyX3Byb2Nlc3MoTWlubmV0Rm9ybVBhcnNlciosIGNvbnN0IHZvaWQqLCBzaXplX3QpOwpKU1ZhbHVlIG1pbm5ldF9mb3JtX3BhcnNlcl9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CkpTVmFsdWUgbWlubmV0X2Zvcm1fcGFyc2VyX25ldyhKU0NvbnRleHQqLCBNaW5uZXRXZWJzb2NrZXQqLCBpbnQsIGNvbnN0IGNoYXIqIGNvbnN0KiBwYXJhbV9uYW1lcywgc2l6ZV90IGNodW5rX3NpemUpOwpKU1ZhbHVlIG1pbm5ldF9mb3JtX3BhcnNlcl93cmFwKEpTQ29udGV4dCosIE1pbm5ldEZvcm1QYXJzZXIqKTsKSlNWYWx1ZSBtaW5uZXRfZm9ybV9wYXJzZXJfY2FsbChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIEpTVmFsdWVDb25zdCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBmbGFncyk7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsBgAAAAAAAK0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAABBCgAAI2lmbmRlZiBNSU5ORVRfRk9STV9QQVJTRVJfSAojZGVmaW5lIE1JTk5FVF9GT1JNX1BBUlNFUl9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlICJqc3V0aWxzLmgiCiNpbmNsdWRlICJtaW5uZXQtZ2VuZXJhdG9yLmgiCiNpbmNsdWRlICJtaW5uZXQtd2Vic29ja2V0LmgiCgp0eXBlZGVmIHN0cnVjdCBmb3JtX3BhcnNlciB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzX3NwYV9jcmVhdGVfaW5mbyBzcGFfY3JlYXRlX2luZm87CiAgc3RydWN0IGx3c19zcGEqIHNwYTsKICBzdHJ1Y3QgbHdzYWMqIGx3c2FjX2hlYWQ7CiAgTWlubmV0V2Vic29ja2V0KiB3czsKICBzdHJ1Y3QgewogICAgTWlubmV0Q2FsbGJhY2sgY29udGVudCwgb3BlbiwgY2xvc2U7CiAgfSBjYjsKfSBNaW5uZXRGb3JtUGFyc2VyOwoKdm9pZCAgICAgICAgICAgICAgZm9ybV9wYXJzZXJfaW5pdChNaW5uZXRGb3JtUGFyc2VyKiwgTWlubmV0V2Vic29ja2V0KiwgaW50LCBjb25zdCBjaGFyKiBjb25zdCogcGFyYW1fbmFtZXMsIHNpemVfdCBjaHVua19zaXplKTsKTWlubmV0Rm9ybVBhcnNlciogZm9ybV9wYXJzZXJfYWxsb2MoSlNDb250ZXh0Kik7Ck1pbm5ldEZvcm1QYXJzZXIqIGZvcm1fcGFyc2VyX25ldyhKU0NvbnRleHQqLCBNaW5uZXRXZWJzb2NrZXQqLCBpbnQsIGNvbnN0IGNoYXIqIGNvbnN0KiBwYXJhbV9uYW1lcywgc2l6ZV90IGNodW5rX3NpemUpOwpNaW5uZXRGb3JtUGFyc2VyKiBmb3JtX3BhcnNlcl9kdXAoTWlubmV0Rm9ybVBhcnNlciopOwp2b2lkICAgICAgICAgICAgICBmb3JtX3BhcnNlcl96ZXJvKE1pbm5ldEZvcm1QYXJzZXIqKTsKdm9pZCAgICAgICAgICAgICAgZm9ybV9wYXJzZXJfY2xlYXIoTWlubmV0Rm9ybVBhcnNlciosIEpTQ29udGV4dCopOwp2b2lkICAgICAgICAgICAgICBmb3JtX3BhcnNlcl9jbGVhcl9ydChNaW5uZXRGb3JtUGFyc2VyKiwgSlNSdW50aW1lKik7CnZvaWQgICAgICAgICAgICAgIGZvcm1fcGFyc2VyX2ZyZWUoTWlubmV0Rm9ybVBhcnNlciosIEpTQ29udGV4dCopOwp2b2lkICAgICAgICAgICAgICBmb3JtX3BhcnNlcl9mcmVlX3J0KE1pbm5ldEZvcm1QYXJzZXIqLCBKU1J1bnRpbWUqKTsKY2hhciogICAgICAgICAgICAgZm9ybV9wYXJzZXJfcGFyYW1fbmFtZShNaW5uZXRGb3JtUGFyc2VyKiwgaW50KTsKQk9PTCAgICAgICAgICAgICAgZm9ybV9wYXJzZXJfcGFyYW1fdmFsaWQoTWlubmV0Rm9ybVBhcnNlciosIGludCk7CnNpemVfdCAgICAgICAgICAgIGZvcm1fcGFyc2VyX3BhcmFtX2NvdW50KE1pbm5ldEZvcm1QYXJzZXIqKTsKaW50ICAgICAgICAgICAgICAgZm9ybV9wYXJzZXJfcGFyYW1faW5kZXgoTWlubmV0Rm9ybVBhcnNlciosIGNvbnN0IGNoYXIqKTsKQk9PTCAgICAgICAgICAgICAgZm9ybV9wYXJzZXJfcGFyYW1fZXhpc3RzKE1pbm5ldEZvcm1QYXJzZXIqLCBjb25zdCBjaGFyKik7CmludCAgICAgICAgICAgICAgIGZvcm1fcGFyc2VyX3Byb2Nlc3MoTWlubmV0Rm9ybVBhcnNlciosIGNvbnN0IHZvaWQqLCBzaXplX3QpOwpKU1ZhbHVlQ29uc3QgICAgICAgICAgIG1pbm5ldF9mb3JtX3BhcnNlcl9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CkpTVmFsdWVDb25zdCAgICAgICAgICAgbWlubmV0X2Zvcm1fcGFyc2VyX25ldyhKU0NvbnRleHQqLCBNaW5uZXRXZWJzb2NrZXQqLCBpbnQsIGNvbnN0IGNoYXIqIGNvbnN0KiBwYXJhbV9uYW1lcywgc2l6ZV90IGNodW5rX3NpemUpOwpKU1ZhbHVlQ29uc3QgICAgICAgICAgIG1pbm5ldF9mb3JtX3BhcnNlcl93cmFwKEpTQ29udGV4dCosIE1pbm5ldEZvcm1QYXJzZXIqKTsKSlNWYWx1ZUNvbnN0ICAgICAgICAgICBtaW5uZXRfZm9ybV9wYXJzZXJfY2FsbChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIEpTVmFsdWVDb25zdCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBmbGFncyk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X2Zvcm1fcGFyc2VyX3Byb3RvLCBtaW5uZXRfZm9ybV9wYXJzZXJfY3RvcjsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X2Zvcm1fcGFyc2VyX2NsYXNzX2lkOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfZm9ybV9wYXJzZXJfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfZm9ybV9wYXJzZXJfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfZm9ybV9wYXJzZXJfcHJvdG9fZnVuY3Nfc2l6ZTsKCnN0YXRpYyBpbmxpbmUgTWlubmV0Rm9ybVBhcnNlcioKbWlubmV0X2Zvcm1fcGFyc2VyX2RhdGEoSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUob2JqLCBtaW5uZXRfZm9ybV9wYXJzZXJfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldEZvcm1QYXJzZXIqCm1pbm5ldF9mb3JtX3BhcnNlcl9kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfZm9ybV9wYXJzZXJfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX0ZPUk1fUEFSU0VSX0ggKi8KAAAAAAAAAAB+CQAAAAAAAAAAAAAAAAAAAAAAAH4JAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDBwAAAAAAAMMHAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB+CQAAI2lmbmRlZiBNSU5ORVRfRk9STV9QQVJTRVJfSAojZGVmaW5lIE1JTk5FVF9GT1JNX1BBUlNFUl9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlICJqc3V0aWxzLmgiCiNpbmNsdWRlICJtaW5uZXQtZ2VuZXJhdG9yLmgiCiNpbmNsdWRlICJtaW5uZXQtd2Vic29ja2V0LmgiCgp0eXBlZGVmIHN0cnVjdCBmb3JtX3BhcnNlciB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzX3NwYV9jcmVhdGVfaW5mbyBzcGFfY3JlYXRlX2luZm87CiAgc3RydWN0IGx3c19zcGEqIHNwYTsKICBzdHJ1Y3QgbHdzYWMqIGx3c2FjX2hlYWQ7CiAgTWlubmV0V2Vic29ja2V0KiB3czsKICBzdHJ1Y3QgewogICAgTWlubmV0Q2FsbGJhY2sgY29udGVudCwgb3BlbiwgY2xvc2U7CiAgfSBjYjsKfSBNaW5uZXRGb3JtUGFyc2VyOwoKdm9pZCBmb3JtX3BhcnNlcl9pbml0KE1pbm5ldEZvcm1QYXJzZXIqLCBNaW5uZXRXZWJzb2NrZXQqLCBpbnQsIGNvbnN0IGNoYXIqIGNvbnN0KiBwYXJhbV9uYW1lcywgc2l6ZV90IGNodW5rX3NpemUpOwpNaW5uZXRGb3JtUGFyc2VyKiBmb3JtX3BhcnNlcl9hbGxvYyhKU0NvbnRleHQqKTsKTWlubmV0Rm9ybVBhcnNlciogZm9ybV9wYXJzZXJfbmV3KEpTQ29udGV4dCosIE1pbm5ldFdlYnNvY2tldCosIGludCwgY29uc3QgY2hhciogY29uc3QqIHBhcmFtX25hbWVzLCBzaXplX3QgY2h1bmtfc2l6ZSk7Ck1pbm5ldEZvcm1QYXJzZXIqIGZvcm1fcGFyc2VyX2R1cChNaW5uZXRGb3JtUGFyc2VyKik7CnZvaWQgZm9ybV9wYXJzZXJfemVybyhNaW5uZXRGb3JtUGFyc2VyKik7CnZvaWQgZm9ybV9wYXJzZXJfY2xlYXIoTWlubmV0Rm9ybVBhcnNlciosIEpTQ29udGV4dCopOwp2b2lkIGZvcm1fcGFyc2VyX2NsZWFyX3J0KE1pbm5ldEZvcm1QYXJzZXIqLCBKU1J1bnRpbWUqKTsKdm9pZCBmb3JtX3BhcnNlcl9mcmVlKE1pbm5ldEZvcm1QYXJzZXIqLCBKU0NvbnRleHQqKTsKdm9pZCBmb3JtX3BhcnNlcl9mcmVlX3J0KE1pbm5ldEZvcm1QYXJzZXIqLCBKU1J1bnRpbWUqKTsKY2hhciogZm9ybV9wYXJzZXJfcGFyYW1fbmFtZShNaW5uZXRGb3JtUGFyc2VyKiwgaW50KTsKQk9PTCBmb3JtX3BhcnNlcl9wYXJhbV92YWxpZChNaW5uZXRGb3JtUGFyc2VyKiwgaW50KTsKc2l6ZV90IGZvcm1fcGFyc2VyX3BhcmFtX2NvdW50KE1pbm5ldEZvcm1QYXJzZXIqKTsKaW50IGZvcm1fcGFyc2VyX3BhcmFtX2luZGV4KE1pbm5ldEZvcm1QYXJzZXIqLCBjb25zdCBjaGFyKik7CkJPT0wgZm9ybV9wYXJzZXJfcGFyYW1fZXhpc3RzKE1pbm5ldEZvcm1QYXJzZXIqLCBjb25zdCBjaGFyKik7CmludCBmb3JtX3BhcnNlcl9wcm9jZXNzKE1pbm5ldEZvcm1QYXJzZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90KTsKSlNWYWx1ZUNvbnN0IG1pbm5ldF9mb3JtX3BhcnNlcl9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CkpTVmFsdWVDb25zdCBtaW5uZXRfZm9ybV9wYXJzZXJfbmV3KEpTQ29udGV4dCosIE1pbm5ldFdlYnNvY2tldCosIGludCwgY29uc3QgY2hhciogY29uc3QqIHBhcmFtX25hbWVzLCBzaXplX3QgY2h1bmtfc2l6ZSk7CkpTVmFsdWVDb25zdCBtaW5uZXRfZm9ybV9wYXJzZXJfd3JhcChKU0NvbnRleHQqLCBNaW5uZXRGb3JtUGFyc2VyKik7CkpTVmFsdWVDb25zdCBtaW5uZXRfZm9ybV9wYXJzZXJfY2FsbChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIEpTVmFsdWVDb25zdCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBmbGFncyk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X2Zvcm1fcGFyc2VyX3Byb3RvLCBtaW5uZXRfZm9ybV9wYXJzZXJfY3RvcjsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X2Zvcm1fcGFyc2VyX2NsYXNzX2lkOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfZm9ybV9wYXJzZXJfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfZm9ybV9wYXJzZXJfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfZm9ybV9wYXJzZXJfcHJvdG9fZnVuY3Nfc2l6ZTsKCnN0YXRpYyBpbmxpbmUgTWlubmV0Rm9ybVBhcnNlcioKbWlubmV0X2Zvcm1fcGFyc2VyX2RhdGEoSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUob2JqLCBtaW5uZXRfZm9ybV9wYXJzZXJfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldEZvcm1QYXJzZXIqCm1pbm5ldF9mb3JtX3BhcnNlcl9kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfZm9ybV9wYXJzZXJfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX0ZPUk1fUEFSU0VSX0ggKi8KAAAAAAAAAAB+CQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwcAAAAAAADDBwAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"theme",
				"Schemr: Next scheme"
			],
			[
				"shell",
				"Pretty Shell: Minify"
			],
			[
				"mini",
				"Pretty Shell: Minify"
			],
			[
				"shfm",
				"Pretty Shell: Minify"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"cscope",
				"Cscope: Search using egrep pattern"
			],
			[
				"tags",
				"CTags: Show Symbols (all)"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"json",
				"Pretty JSON: Format JSON"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"inde",
				"Indentation: Detect"
			],
			[
				"add repo",
				"Package Control: Add Repository"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"cmake",
				"CMake Format: Format Selection"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"prettier",
				"Build With: prettier"
			],
			[
				"edit current",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"edit curr",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 393.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-net",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-spa.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugins/deaddrop/protocol_lws_deaddrop.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/http/server/lws-spa.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/jsutils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/jsutils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-lwsac.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-form-post-lwsac/minimal-http-server-form-post.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/example.mjs",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-generator.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-form-parser.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-proxy.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-form-parser.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-deaddrop/mount-origin/index.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-deaddrop/mount-origin/deaddrop.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-deaddrop/mount-origin/deaddrop.css",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-response.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-response.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-generator.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.sublime-project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/wsi.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-buffer.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-buffer.h",
		"/home/janos/Sources/plot-cv/quickjs/list.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/jsutils.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-generator.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-generator.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-server-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/poll.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/poll.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/assure.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-server-proxy.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/jsutils.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-server-http.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-server.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-response.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-request.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-response.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-client-http.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-request.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-fetch.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-client.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-url.h",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/minnet-server.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-buffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-buffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-profile/libwebsockets/include/libwebsockets/lws-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/http/header.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minimal-examples.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core/private-lib-core.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core/logs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/http/client/client-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-context-vhost.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-certinfo/minimal-http-client-certinfo.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-fetch.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/h2/ops-h2.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/ws/server-ws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/dummy-callback.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/http/server/server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server/mount-origin/strict-csp.svg",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server/mount-origin/example.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server-echo/minimal-ws-server-echo.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server-echo/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-broker/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server/protocol_lws_minimal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-proxy/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/tls/openssl/openssl-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-proxy/minimal-http-server-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-client.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-post/minimal-http-client-post.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-sse-ring/minimal-http-server-sse-ring.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-custom-headers/minimal-http-server-custom-headers.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-sse/minimal-http-server-sse.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-h2-long-poll/minimal-http-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-dynamic/minimal-http-server-dynamic.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/build/x86_64-linux-gnu/minimal-examples/api-tests/api-test-gencrypto/CTestTestfile.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/h2/http2.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/tls/mbedtls/mbedtls-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/private-lib-core-net.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-x509.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/test-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/curl/lib/vtls/openssl.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/libwebsockets/lws_config.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/ws/ops-ws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-write.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-multi/minimal-http-client-multi.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugins/acme-client/protocol_lws_acme_client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-jit-trust/minimal-http-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client/minimal-http-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/h2/hpack.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/curl/lib/c-hyper.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-protocols-plugins.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/libwebsockets/include/libwebsockets/lws-context-vhost.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-service.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-timeout-timer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-mbedtls/libwebsockets/include/libwebsockets/lws-writeable.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/tls/tls-network.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/tls/tls.c"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.cmake,-*/inst/*,-*/build/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.cmake,-*/inst/*,-*/build/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.cmake",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h",
			"",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/[^i]*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/i*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/[!i]*,-*/curl/*,<open files>",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/[!i]*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/[!i]*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets,*.h,*.c",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets,*.h,*.c",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets/*,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets,*.h,*.c",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets/*,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include,*.h",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include,*.h",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets*/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/libwebsockets/*,-*/brotli/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/libwebsockets/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/libwebsockets/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net.*.c,*.h,*.txt,*.cmake,-*/build/*,-*/libwebsockets/*",
			"*.c,*.h,*.txt,*.cmake,-*/build/*",
			"*.c,*.h,*.txt,*.cmakem,-*/build/*",
			"*.c,*.h,*.txt,-*/build/*",
			"*.c,*.h,-*/build/*",
			"*.c,*.h,-*/build/*,-*/libwebsockets/*",
			"*.c,*.h,-*/build/*",
			"*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/net,-*/build/*,*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/net,-*/build/*,-*/libwebsockets/*,*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/net,-*/build/*,*.c,*.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"is_index",
			"http_server_respond",
			"http_server_generate",
			"in",
			"http_server_generate",
			"lws_add_http_common_headers",
			"onHttp\\(req",
			"onHttp\\(",
			"onHttp",
			"http_server_writable",
			"LWS_UFS_CONTENT",
			"lws_urldecode_stateful",
			"http_server_callback",
			"WSI_CREATE",
			"ws_new\\(",
			"args",
			"FREECB",
			"js_atom",
			"spa_create_via",
			"spa_create",
			"struct lwsac",
			"lws_spa_create_via_info",
			"js_tostring",
			"array",
			"JS_BINDINGS_SOU",
			"add_lib",
			"LWS_CALLBACK_VHOST_CERT_AGING",
			"request_handler",
			"EPN_",
			"headers_at",
			"headers_find",
			"humanize",
			"do_upload",
			"formData",
			"FormData",
			"text",
			"do_upload",
			"param_names",
			"lws_spa_",
			"lws_spa",
			"spa_crea",
			"generator_free",
			"minnet_generator_create",
			"generator_free",
			"lws_urldecode_spa_cb",
			"opt_cb",
			"lws_spa_fileupload_cb",
			"s->state",
			"lws_spa_create",
			"asynciterator_next",
			"_zero",
			"asynciterator_zero",
			"generator_zero",
			"asynciterator_clear",
			"ref_count",
			"generator_free",
			"minnet_generator_wrap",
			"bytes_read",
			"BOOL",
			"asynciterator_emplace",
			"asynciterator_push",
			"asynciterator_tail",
			"_tail",
			"asynciterator_read",
			"asynciterator_yield",
			"asynciterator_next",
			"HTTP_BODY",
			"BODY_COM",
			"safe",
			"ValueItem",
			"\n  if((rd = asynciterator_read(it, ctx))) {\n    js_promise_resolve(ctx, &rd->promise, ",
			"asynciterator_obj",
			"closing",
			"_COMPLETION",
			"_COMPLE",
			"_COMPLETE",
			"asynciterator_close",
			"generator_write",
			"asynciterator_push",
			"POST body",
			"asynciterator_clear",
			"CALLBACK_HTTP_BODY",
			"js_clear",
			"minnet_get_sessions",
			"pvo",
			"getprop",
			"info",
			"vhost_options_new",
			"\"resp.headers",
			"^\\s*f?printf\\(",
			" printf(",
			"^\\s*f?printf\\(",
			"\"LWS_CALLBACK_HTTP_WRITEA",
			"\"LWS_CALLBACK_HTTP_WRITABLE\"",
			"\"APPEND_HA",
			"\"client->wsi",
			"\"LWS_CALLBA",
			"\"LWS_HTTP",
			"serve_file",
			"ret;",
			"ret",
			"lws_callback_http_dummy",
			"http_server_respond",
			"_HTTP:",
			"mount_find",
			"_HTTP:",
			"dummy",
			"404",
			"http_server_respond",
			"\"headers",
			"\"headers\"",
			"NEW_CLIENT",
			"NEW_CLIE",
			"LWS_CALLBACK_OPENSSL_PERFORM_SERVER_CERT_VERIFICATION",
			"SERVER_",
			"LCCF",
			"LWSM",
			"LWS_CALLBACK_OPENSSL_PERFORM_SERVER_CERT_VERIFICATION",
			"UTF8",
			"LWS_SERVER_OPTION_CREATE_VHOST_SSL_CTX",
			"LWS_WITH_PLUGINS",
			"proxied path",
			"proxy_start",
			"lws_ws_proxy",
			"lws_http_proxy_start\\(",
			"LWSMPRO_HTTPS",
			"LCCSCF_",
			"LCCSCF_ALLOW_SELFSIGNED"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"onHttp\\(ws, req",
			"generator_destroy",
			"minnet_generator_create",
			"asynciterator_yield",
			"asynciterator_shift",
			"asynciterator_tail",
			"asynciterator_next",
			"asynciterator_emplace",
			"asynciterator_pushobj",
			"asynciterator_stop",
			"<?",
			"\"SERVER-HTTP\"",
			"\\1\\2(\\3, ctx)",
			"req",
			"AsyncRead\\1",
			"AsyncIterator*",
			"AsyncRead,",
			"AsyncRead)",
			"AsyncRead",
			"AsyncIterator",
			"resp->body->",
			"resp->body",
			"gen",
			"struct async_iterator",
			"AsyncIterator",
			"MinnetGenerator",
			"MinnetRingbuffer",
			"ctx",
			"debug",
			" -",
			"LIBWEBSOCKETS_ARGS \"${LIBWEBSOCKETS_ARGS} ",
			"JS_FreeValue",
			"pathlen",
			"ctx",
			"*url",
			"url->",
			"->",
			"libressl",
			"LIBRESSL_SSL_LIB_NAME",
			"_TLS_",
			"libressl",
			"buf->",
			"info->",
			"info.",
			"info->",
			"minnet_url_data2(ctx, this_val)",
			"url_\\1(",
			"url_valid(",
			"url_format(req->url",
			"other.",
			"const MinnetURL",
			"url.",
			"const MinnetURL",
			"LIBWEBSOCKETS_LIBRARY_DIR",
			"LIBWEBSOCKETS_LIBRARIES",
			"INCLUDE_DIR",
			"LIBWEBSOCKETS_INCLUDE_DIR",
			" \\\\\\n\\t-D",
			"LIBWEBSOCKETS_",
			"LOG(\"\\1\", \"\\2\"",
			"}\\1\\n\\n\\2",
			"ZLIB_LIBRARY_",
			"MinnetBrokerMessage",
			"struct msg__broker",
			"MinnetBrokerSession",
			"MinnetBrokerPerVhostData",
			"close_status",
			"LIBWEBSOCKETS_LIBRARY",
			"ret = -1; break;",
			"break",
			"url->",
			"",
			"context->",
			"client->context.info.",
			"value",
			"minnet_request_data2(ctx, this_val)",
			"minnet_response_data2(ctx, this_val)",
			"JSValueConst argv[]",
			"}\\n\\n\\1",
			"",
			"\"",
			"JS_INDEX_STRING_DEF",
			"ca",
			"info->",
			"/\\*(sizeof\\(MinnetSession\\))\\*/0",
			"/*\\1*/",
			"/*&*/",
			"/*\\&*/",
			"/*&*/",
			"server->",
			"server",
			"server->",
			"",
			"context->info.",
			"#",
			"server",
			"client->context.error",
			"buf",
			"p",
			"pollfd",
			"pfd->",
			"opaque->pfd",
			"opaque",
			"ws->status",
			"ws->pfd",
			"opaque->pfd",
			"MinnetBlock",
			"block_SIZ",
			"blk",
			"MINNET_BUFFER_H",
			"buf->",
			"",
			"\\1fprintf(stderr,",
			"conn->",
			"reason",
			"%-38s",
			"info",
			"info->",
			".connect_info.",
			"->connect_info.",
			"args",
			"",
			"events",
			"log(`",
			"log",
			"type",
			"worker",
			"opaque->status"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": false,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": null,
							"function_name_status_row": 7,
							"outline_rename_mode": false,
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 3,
							"tabs_extra_last_activated": 1659367525.79,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "minnet-form-parser.c",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15237,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659543576.69,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "minnet-server-http.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27246,
						"regions":
						{
						},
						"selection":
						[
							[
								20604,
								20619
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 722,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659381867.35,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12723.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "minnet-response.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2224,
						"regions":
						{
						},
						"selection":
						[
							[
								364,
								364
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 19,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659323501.95,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 358.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "libwebsockets/lib/roles/http/header.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16844,
						"regions":
						{
						},
						"selection":
						[
							[
								4518,
								4518
							]
						],
						"settings":
						{
							"function_name_status_row": 181,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2887.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3843,
						"regions":
						{
						},
						"selection":
						[
							[
								488,
								488
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 23,
							"mde.match_heading_hashes": false,
							"syntax": "Packages/MarkdownEditing/syntaxes/Markdown.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1659321118.53,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 612.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "example.mjs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1667,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1659321214.88,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 714.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "tests/test-server-http.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1281,
						"regions":
						{
						},
						"selection":
						[
							[
								568,
								568
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 21,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659321252.93,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "tests/client.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1804,
						"regions":
						{
						},
						"selection":
						[
							[
								1196,
								1196
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 37,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659321257.06,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 395.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "tests/test-client.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2523,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659321386.03,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 765.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "minnet-response.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11748,
						"regions":
						{
						},
						"selection":
						[
							[
								6028,
								6028
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 238,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659321978.93,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4746.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "wscli.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9790,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "test-rpc.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9938,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "minnet-server-http.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1888,
						"regions":
						{
						},
						"selection":
						[
							[
								1301,
								1313
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 40,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659367497.3,
							"tabs_extra_last_activated_sheet_index": 12,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 344.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "minnet-websocket.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2912,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659367249.66,
							"tabs_extra_last_activated_sheet_index": 13,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 342.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "minnet-server.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 874,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659367454.89,
							"tabs_extra_last_activated_sheet_index": 14,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "minnet-request.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2312,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659367505.14,
							"tabs_extra_last_activated_sheet_index": 15,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 510.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "minnet.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12432,
						"regions":
						{
						},
						"selection":
						[
							[
								4496,
								4515
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 171,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659319966.27,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 51.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "minnet-generator.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3484,
						"regions":
						{
						},
						"selection":
						[
							[
								253,
								253
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 10,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659367590.85,
							"tabs_extra_last_activated_sheet_index": 17,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "minnet-request.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11555,
						"regions":
						{
						},
						"selection":
						[
							[
								2267,
								2267
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 102,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659367572.15,
							"tabs_extra_last_activated_sheet_index": 18,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1731.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "minnet-ringbuffer.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7415,
						"regions":
						{
						},
						"selection":
						[
							[
								100,
								100
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 5,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659367578.48,
							"tabs_extra_last_activated_sheet_index": 19,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "minnet-generator.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1022,
						"regions":
						{
						},
						"selection":
						[
							[
								817,
								881
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 30,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659314646.97,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 255.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "minnet-buffer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3723,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659314532.08,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1530.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "jsutils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7065,
						"regions":
						{
						},
						"selection":
						[
							[
								4754,
								4754
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 116,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659367502.46,
							"tabs_extra_last_activated_sheet_index": 21,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1788.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "jsutils.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22981,
						"regions":
						{
						},
						"selection":
						[
							[
								18918,
								18918
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 735,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659367453.18,
							"tabs_extra_last_activated_sheet_index": 22,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 13833.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "minnet-form-parser.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2430,
						"regions":
						{
						},
						"selection":
						[
							[
								1987,
								1987
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 43,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1659381871.06,
							"tabs_extra_last_activated_sheet_index": 24,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.73831535811,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.Protocol":
	{
		"height": 0.0
	},
	"output.Protocol(139621680568160)":
	{
		"height": 0.0
	},
	"output.Protocol(139700989541680)":
	{
		"height": 0.0
	},
	"output.Protocol(139717986943088)":
	{
		"height": 0.0
	},
	"output.Protocol(139743392670576)":
	{
		"height": 0.0
	},
	"output.Protocol(139869175665040)":
	{
		"height": 0.0
	},
	"output.Protocol(140020109820736)":
	{
		"height": 0.0
	},
	"output.Protocol(140057994913632)":
	{
		"height": 0.0
	},
	"output.Protocol(140125752776880)":
	{
		"height": 0.0
	},
	"output.Protocol(140264240552496)":
	{
		"height": 0.0
	},
	"output.Protocol(140274144495648)":
	{
		"height": 0.0
	},
	"output.Protocol(140405755060768)":
	{
		"height": 0.0
	},
	"output.Protocol(140444770975856)":
	{
		"height": 0.0
	},
	"output.Protocol(140481508534208)":
	{
		"height": 0.0
	},
	"output.Protocol(140490298804784)":
	{
		"height": 0.0
	},
	"output.Protocol(140502873587376)":
	{
		"height": 0.0
	},
	"output.Protocol(140517145605216)":
	{
		"height": 0.0
	},
	"output.Protocol(140557325395472)":
	{
		"height": 0.0
	},
	"output.Protocol(140585353889632)":
	{
		"height": 0.0
	},
	"output.Protocol(140603238031120)":
	{
		"height": 0.0
	},
	"output.Protocol(140614611112432)":
	{
		"height": 0.0
	},
	"output.Protocol(140677935927792)":
	{
		"height": 0.0
	},
	"output.coffeecompile_output":
	{
		"height": 144.0
	},
	"output.exec":
	{
		"height": 304.0
	},
	"output.find_results":
	{
		"height": 303.0
	},
	"pinned_build_system": "Rebuild CScope",
	"project": "minnet.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"minnet-req",
				"minnet-request.h"
			],
			[
				"minnet.c",
				"minnet.c"
			],
			[
				"lws-spa.c",
				"libwebsockets/lib/roles/http/server/lws-spa.c"
			],
			[
				"spa.h",
				"libwebsockets/include/libwebsockets/lws-spa.h"
			],
			[
				"spa.c",
				"libwebsockets/lib/roles/http/server/lws-spa.c"
			],
			[
				"server-ht",
				"minnet-server-http.c"
			],
			[
				"deaddrop",
				"libwebsockets/plugins/deaddrop/protocol_lws_deaddrop.c"
			],
			[
				"server-htt",
				"minnet-server-http.c"
			],
			[
				"minnet-server-ht",
				"minnet-server-http.c"
			],
			[
				"list.h",
				"/home/roman/Projects/plot-cv/quickjs/list.h"
			],
			[
				"jsutil",
				"jsutils.c"
			],
			[
				"jsutils",
				"jsutils.c"
			],
			[
				"jsut",
				"jsutils.c"
			],
			[
				"minnet-cli",
				"minnet-client.c"
			],
			[
				"minnet-server.c",
				"minnet-server.c"
			],
			[
				"client-http",
				"libwebsockets/lib/roles/http/client/client-http.c"
			],
			[
				"minnet-server",
				"minnet-server.c"
			],
			[
				"dynami",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-dynamic/minimal-http-server-dynamic.c"
			],
			[
				"jsutils.c",
				"jsutils.c"
			],
			[
				"minnet-client-htt",
				"minnet-client-http.c"
			],
			[
				"test-rpc",
				"libwebsockets/build/x86_64-linux-gnu/minimal-examples/api-tests/api-test-gencrypto/CTestTestfile.cmake"
			],
			[
				"server-http",
				"minnet-server-http.c"
			],
			[
				"certinfo",
				"libwebsockets/minimal-examples/http-client/minimal-http-client-certinfo/minimal-http-client-certinfo.c"
			],
			[
				"certinfo.c",
				"libwebsockets/minimal-examples/http-client/minimal-http-client-certinfo/minimal-http-client-certinfo.c"
			],
			[
				"minnet-resp",
				"minnet-response.c"
			],
			[
				"lws-call",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"http2.c",
				"libwebsockets/lib/roles/h2/http2.c"
			],
			[
				"response",
				"minnet-response.h"
			],
			[
				"client-po",
				"libwebsockets/minimal-examples/http-client/minimal-http-client-post/minimal-http-client-post.c"
			],
			[
				"wscli",
				"wscli.js"
			],
			[
				"minnet-clie",
				"minnet-client.c"
			],
			[
				"lws-context",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"http-clie",
				"libwebsockets/minimal-examples/http-client/minimal-http-client-certinfo/minimal-http-client-certinfo.c"
			],
			[
				"buildlib",
				"cmake/BuildLibwebsockets.cmake"
			],
			[
				"minnet-ge",
				"minnet-generator.c"
			],
			[
				"minnet.h",
				"minnet.h"
			],
			[
				"lws-ca",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"minnet-clien",
				"minnet-client-http.c"
			],
			[
				"client-htt",
				"minnet-client-http.c"
			],
			[
				"wscli.js",
				"wscli.js"
			],
			[
				"minnet-client-ht",
				"minnet-client-http.c"
			],
			[
				"wscli.",
				"wscli.js"
			],
			[
				"tls.c",
				"libwebsockets/lib/tls/tls.c"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"lws-htt",
				"libwebsockets/include/libwebsockets/lws-http.h"
			],
			[
				"lws-cli",
				"libwebsockets/include/libwebsockets/lws-client.h"
			],
			[
				"lws-pro",
				"libwebsockets/include/libwebsockets/lws-protocols-plugins.h"
			],
			[
				"minnet-server-htt",
				"minnet-server-http.c"
			],
			[
				"proxy.c",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-proxy/minimal-http-server-proxy.c"
			],
			[
				"server-ws",
				"minnet-server-ws.c"
			],
			[
				"lws-write",
				"libwebsockets/include/libwebsockets/lws-write.h"
			],
			[
				"-ws.c",
				"minnet-server-ws.c"
			],
			[
				"innet-server.c",
				"minnet-server.c"
			],
			[
				"build",
				"cmake/BuildLibwebsockets.cmake"
			],
			[
				"access-lo",
				"libwebsockets/lib/roles/http/server/access-log.c"
			],
			[
				"lws_raw_",
				"libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c"
			],
			[
				"server.c",
				"libwebsockets/lib/roles/http/server/server.c"
			],
			[
				"wsi-time",
				"libwebsockets/lib/core-net/wsi-timeout.c"
			],
			[
				"url.h",
				"minnet-url.h"
			],
			[
				"lws-vho",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"vhost",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"minnet-request",
				"minnet-request.c"
			],
			[
				"minnet-ur",
				"minnet-url.c"
			],
			[
				"minnet-url",
				"minnet-url.h"
			],
			[
				"raw_proy",
				"libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c"
			],
			[
				"inimal-http-server-pr",
				"build/x86_64-linux-debug/minimal-examples/minimal-http-server-proxy.c"
			],
			[
				"lws-conte",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"lws-con",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"uffer.h",
				"minnet-buffer.h"
			],
			[
				"ws.c",
				"minnet-server-ws.c"
			],
			[
				"openssl-server",
				"libwebsockets/lib/tls/openssl/openssl-server.c"
			],
			[
				"findlibw",
				"cmake/FindLibwebsockets.cmake"
			],
			[
				"FindLib",
				"cmake/FindLibwebsockets.cmake"
			],
			[
				"raw-proxy-fall",
				"libwebsockets/minimal-examples/raw/minimal-raw-proxy-fallback/minimal-raw-proxy-fallback.c"
			],
			[
				"build-li",
				"build-libwebsockets.sh"
			],
			[
				"extension-p",
				"libwebsockets/lib/roles/ws/ext/extension-permessage-deflate.h"
			],
			[
				"async",
				"libwebsockets/lib/system/async-dns/async-dns.c"
			],
			[
				"adopt.c",
				"libwebsockets/lib/core-net/adopt.c"
			],
			[
				"vhost.h",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"adopt.h",
				"libwebsockets/include/libwebsockets/lws-adopt.h"
			],
			[
				"adopt",
				"libwebsockets/minimal-examples/raw/minimal-raw-adopt-udp/minimal-raw-adopt-udp.c"
			],
			[
				"async-dn",
				"libwebsockets/lib/system/async-dns/async-dns.c"
			],
			[
				"lws-ad",
				"libwebsockets/include/libwebsockets/lws-adopt.h"
			],
			[
				"lws-ring",
				"libwebsockets/include/libwebsockets/lws-ring.h"
			],
			[
				"ring",
				"libwebsockets/minimal-examples/ws-server/minimal-ws-server-ring/minimal-ws-server-ring.c"
			],
			[
				"minnet-strea",
				"minnet-stream.c"
			],
			[
				"private-lib",
				"libwebsockets/lib/core/private-lib-core.h"
			],
			[
				"lws-http",
				"libwebsockets/include/libwebsockets/lws-http.h"
			],
			[
				"test-cli",
				"tests/test-client.js"
			],
			[
				"async-dns",
				"libwebsockets/lib/system/async-dns/async-dns.c"
			],
			[
				"test-fe",
				"tests/test-fetch.js"
			],
			[
				"lws-clie",
				"libwebsockets/include/libwebsockets/lws-client.h"
			],
			[
				"wscli.j",
				"wscli.js"
			],
			[
				"",
				"minnet.c"
			],
			[
				"de",
				"libwebsockets/scripts/dox-extra.css"
			],
			[
				"path.c",
				"curl/lib/curl_path.c"
			],
			[
				"minnet-buff",
				"minnet-buffer.h"
			],
			[
				"minnet-web",
				"minnet-websocket.h"
			],
			[
				"minnet-buffer",
				"minnet-buffer.h"
			],
			[
				"request",
				"minnet-request.c"
			],
			[
				"lws-cal",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"test-li",
				"tests/test-client.js"
			],
			[
				"test-client.js",
				"test-client.js.sed"
			],
			[
				"client.js",
				"tests/client.js"
			],
			[
				"buffer.h",
				"minnet-buffer.h"
			],
			[
				"minnet-ser",
				"minnet-server.c"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"server.js",
				"tests/server.js"
			],
			[
				"rpc.j",
				"rpc.js"
			],
			[
				"http-post",
				"libwebsockets/minimal-examples/http-client/minimal-http-client-post/minimal-http-client-post.c"
			],
			[
				"post",
				"libwebsockets/minimal-examples/http-client/minimal-http-client-post/minimal-http-client-post.c"
			],
			[
				"post-",
				"libwebsockets/build/x86_64-linux-gnu/bin/lws-minimal-http-server-form-post-file"
			],
			[
				"-post",
				"libwebsockets/minimal-examples/http-client/minimal-http-client-post/minimal-http-client-post.c"
			],
			[
				"rpc.js",
				"rpc.js"
			],
			[
				"ops-h1",
				"libwebsockets/lib/roles/h1/ops-h1.c"
			],
			[
				"libwebsockets.h",
				"libwebsockets/include/libwebsockets.h"
			],
			[
				"websockets.h",
				"libwebsockets/include/libwebsockets.h"
			],
			[
				"raw-netcat",
				"libwebsockets/minimal-examples/raw/minimal-raw-netcat/minimal-raw-netcat.c"
			],
			[
				"adopt-raw",
				"libwebsockets/minimal-examples/raw/minimal-raw-adopt-tcp/minimal-raw-adopt-tcp.c"
			],
			[
				"client-post",
				"libwebsockets/minimal-examples/http-client/minimal-http-client-post/minimal-http-client-post.c"
			],
			[
				"post.c",
				"curl/docs/examples/http-post.c"
			],
			[
				"client",
				"libwebsockets/lib/roles/http/client/client-http.c"
			],
			[
				"server-dead",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-deaddrop/minimal-http-server-deaddrop.c"
			],
			[
				"lws_raw_pr",
				"libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c"
			],
			[
				"poll.c",
				"poll.c"
			],
			[
				"libweb",
				"libwebsockets/include/libwebsockets.h"
			],
			[
				"output.c",
				"libwebsockets/lib/core-net/output.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 342.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
