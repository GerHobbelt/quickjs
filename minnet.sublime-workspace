{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"lws_get",
				"lws_get_opaque_user_data"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"LWS_CALLBACK_FIL",
				"LWS_CALLBACK_HTTP_FILE_COMPLETION"
			],
			[
				"opa",
				"wsi_opaque_user_data"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"Minnet",
				"MinnetSession"
			],
			[
				"OPENSSL_LIB",
				"OPENSSL_LIBRARY_DIR"
			],
			[
				"OPENSSL",
				"OPENSSL_LIBRARY_DIR"
			],
			[
				"lws_conte",
				"lws_context_creation_info"
			],
			[
				"lws_con",
				"lws_context_creation_info"
			],
			[
				"lws_proto",
				"lws_protocol_vhost_options"
			],
			[
				"lws_",
				"lws_protocol_vhost_options"
			],
			[
				"CMAKE_C",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"CMAKE_CU",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"OPENSSL_",
				"OPENSSL_LIBRARIES"
			],
			[
				"server_ssl_ca",
				"server_ssl_ca_mem_len"
			],
			[
				"server_ssl_pr",
				"server_ssl_private_key_mem_len"
			],
			[
				"LIBWE",
				"LIBWEBSOCKETS_LIBRARIES"
			],
			[
				"LIBWEBSOCKE",
				"LIBWEBSOCKETS_LIBRARY_DIR"
			],
			[
				"LIBW",
				"LIBWEBSOCKETS_DIR"
			],
			[
				"LIBWEB",
				"LIBWEBSOCKETS_FOUND"
			],
			[
				"_",
				"add_library"
			],
			[
				"BUILD_",
				"BUILD_LIBWEBSOCKETS"
			],
			[
				"eleme",
				"element_len"
			],
			[
				"JS_Throw",
				"JS_ThrowOutOfMemory"
			],
			[
				"MinnetCa",
				"MinnetCallbacks"
			],
			[
				"JS_T",
				"JS_ThrowTypeError"
			],
			[
				"client_closu",
				"client_closure_dup"
			],
			[
				"minnet_",
				"minnet_client_closure"
			],
			[
				"fetch",
				"fetch_closure_dup"
			],
			[
				"client_cl",
				"client_closure_new"
			],
			[
				"client_closure",
				"client_closure_free"
			],
			[
				"error",
				"error_closure"
			],
			[
				"fet",
				"fetch_closure"
			],
			[
				"JS_PROP_",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"LWS_CALLBACK_RAW_",
				"LWS_CALLBACK_RAW_CONNECTED"
			],
			[
				"exp",
				"expected"
			],
			[
				"getOwn",
				"getOwnPropertyNames(...)"
			],
			[
				"define",
				"defineProperty(...)"
			],
			[
				"PROTOCOL",
				"PROTOCOL_HTTP"
			],
			[
				"Minn",
				"MinnetResponse"
			],
			[
				"min",
				"minnet_url_proto_funcs"
			],
			[
				"LWS_CALL",
				"LWS_CALLBACK_PROTOCOL_INIT"
			],
			[
				"js_mall",
				"js_mallocz"
			],
			[
				"JS_FreeV",
				"JS_FreeValueRT"
			],
			[
				"vhost_",
				"vhost_options_create"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"CURL",
				"CURL_LIBRARY"
			],
			[
				"LI",
				"LIBWEBSOCKETS_LIBRARY_DIR"
			],
			[
				"target_link_",
				"target_link_directories"
			],
			[
				"CURL_",
				"CURL_LIBRARY_DEBUG"
			],
			[
				"minnet",
				"minnet_client_lws"
			],
			[
				"JS_To",
				"JS_ToCString"
			],
			[
				"JS_GetP",
				"JS_GetPropertyUint32"
			],
			[
				"OP",
				"OPENSSL_LIBRARY_DIR"
			],
			[
				"Content",
				"Content-Disposition"
			],
			[
				"MBED",
				"MBEDTLS_LIBRARY_DIR"
			],
			[
				"LIBWEBSO",
				"LIBWEBSOCKETS_LIBRARY_DIR"
			],
			[
				"CMAKE_",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"opt_P",
				"opt_private_key"
			],
			[
				"JS_FRee",
				"JS_FreeValue"
			],
			[
				"LWS_WR",
				"LWS_WRITE_HTTP_FINAL"
			],
			[
				"MBEDTLS_LIB",
				"MBEDTLS_LIBRARY_DIR"
			],
			[
				"curl_mul",
				"curl_multi_cleanup"
			],
			[
				"LWS_CALLBACK_",
				"LWS_CALLBACK_HTTP_WRITEABLE"
			],
			[
				"Event",
				"EventTarget"
			],
			[
				"http_",
				"http_response"
			],
			[
				"STREAM",
				"STREAM_TEXT"
			],
			[
				"moun",
				"mountpoint_len"
			],
			[
				"ori",
				"origin_protocol"
			],
			[
				"mount",
				"mountpoint_len"
			],
			[
				"LWS",
				"LWSMPRO_CALLBACK"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"minnet_request",
				"minnet_request_class_id"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"js_loca",
				"js_location_data"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					1306,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.c",
						"symkeys":
						[
							[
								116,
								123
							],
							[
								605,
								620
							],
							[
								811,
								826
							],
							[
								971,
								992
							],
							[
								1221,
								1236
							],
							[
								1422,
								1430
							],
							[
								1828,
								1837
							],
							[
								2588,
								2598
							],
							[
								2722,
								2731
							],
							[
								3608,
								3618
							],
							[
								4447,
								4457
							],
							[
								4801,
								4809
							],
							[
								4979,
								4990
							],
							[
								5173,
								5189
							],
							[
								5331,
								5339
							],
							[
								6724,
								6736
							],
							[
								6934,
								6943
							],
							[
								7152,
								7163
							],
							[
								7908,
								7921
							],
							[
								8337,
								8348
							],
							[
								8733,
								8741
							],
							[
								8938,
								8950
							],
							[
								9686,
								9696
							],
							[
								10761,
								10776
							],
							[
								11164,
								11171
							],
							[
								11324,
								11338
							],
							[
								11534,
								11548
							],
							[
								12363,
								12377
							],
							[
								13932,
								13949
							],
							[
								14380,
								14395
							],
							[
								14715,
								14733
							],
							[
								15674,
								15696
							],
							[
								16551,
								16571
							],
							[
								17709,
								17724
							]
						],
						"symlist":
						[
							"—Ⓕ– strlcpy ( ) { … } — function",
							"—Ⓕ– protocol_number ( ) { … } — function",
							"—Ⓕ– protocol_string ( ) { … } — function",
							"—Ⓕ– protocol_default_port ( ) { … } — function",
							"—Ⓕ– protocol_is_tls ( ) { … } — function",
							"—Ⓕ– url_init ( ) { … } — function",
							"—Ⓕ– url_parse ( ) { … } — function",
							"—Ⓕ– url_create ( ) { … } — function",
							"—Ⓕ– url_print ( ) { … } — function",
							"—Ⓕ– url_format ( ) { … } — function",
							"—Ⓕ– url_length ( ) { … } — function",
							"—Ⓕ– url_free ( ) { … } — function",
							"—Ⓕ– url_free_rt ( ) { … } — function",
							"—Ⓕ– url_set_protocol ( ) { … } — function",
							"—Ⓕ– url_info ( ) { … } — function",
							"—Ⓕ– url_location ( ) { … } — function",
							"—Ⓕ– url_query ( ) { … } — function",
							"—Ⓕ– url_fromobj ( ) { … } — function",
							"—Ⓕ– url_fromvalue ( ) { … } — function",
							"—Ⓕ– url_fromwsi ( ) { … } — function",
							"—Ⓕ– url_dump ( ) { … } — function",
							"—Ⓕ– query_object ( ) { … } — function",
							"—Ⓕ– query_from ( ) { … } — function",
							"—Ⓕ– minnet_url_wrap ( ) { … } — function",
							"—Ⓕ– url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_get ( ) { … } — function",
							"—Ⓕ– minnet_url_set ( ) { … } — function",
							"—Ⓕ– minnet_url_method ( ) { … } — function",
							"—Ⓕ– minnet_url_from ( ) { … } — function",
							"—Ⓕ– minnet_url_inspect ( ) { … } — function",
							"—Ⓕ– minnet_url_constructor ( ) { … } — function",
							"—Ⓕ– minnet_url_finalizer ( ) { … } — function",
							"—Ⓕ– minnet_url_init ( ) { … } — function"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB0BgAA4oCU4pK74oCTIHN0cmxjcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9kZWZhdWx0X3BvcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9pc190bHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2xlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc2V0X3Byb3RvY29sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2luZm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbG9jYXRpb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcXVlcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0BgAA4oCU4pK74oCTIHN0cmxjcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9kZWZhdWx0X3BvcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9pc190bHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2xlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc2V0X3Byb3RvY29sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2luZm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbG9jYXRpb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcXVlcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACAFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1307,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.c",
						"symkeys":
						[
							[
								116,
								123
							],
							[
								605,
								620
							],
							[
								811,
								826
							],
							[
								971,
								992
							],
							[
								1221,
								1236
							],
							[
								1422,
								1430
							],
							[
								1828,
								1837
							],
							[
								2588,
								2598
							],
							[
								2722,
								2731
							],
							[
								3608,
								3618
							],
							[
								4447,
								4457
							],
							[
								4801,
								4809
							],
							[
								4979,
								4990
							],
							[
								5173,
								5189
							],
							[
								5331,
								5339
							],
							[
								6724,
								6736
							],
							[
								6934,
								6943
							],
							[
								7152,
								7163
							],
							[
								7908,
								7921
							],
							[
								8337,
								8348
							],
							[
								8733,
								8741
							],
							[
								8938,
								8950
							],
							[
								9686,
								9696
							],
							[
								10761,
								10776
							],
							[
								11164,
								11171
							],
							[
								11324,
								11338
							],
							[
								11534,
								11548
							],
							[
								12363,
								12377
							],
							[
								13932,
								13949
							],
							[
								14380,
								14395
							],
							[
								14715,
								14733
							],
							[
								15674,
								15696
							],
							[
								16551,
								16571
							],
							[
								17709,
								17724
							]
						],
						"symlist":
						[
							"—Ⓕ– strlcpy ( ) { … } — function",
							"—Ⓕ– protocol_number ( ) { … } — function",
							"—Ⓕ– protocol_string ( ) { … } — function",
							"—Ⓕ– protocol_default_port ( ) { … } — function",
							"—Ⓕ– protocol_is_tls ( ) { … } — function",
							"—Ⓕ– url_init ( ) { … } — function",
							"—Ⓕ– url_parse ( ) { … } — function",
							"—Ⓕ– url_create ( ) { … } — function",
							"—Ⓕ– url_print ( ) { … } — function",
							"—Ⓕ– url_format ( ) { … } — function",
							"—Ⓕ– url_length ( ) { … } — function",
							"—Ⓕ– url_free ( ) { … } — function",
							"—Ⓕ– url_free_rt ( ) { … } — function",
							"—Ⓕ– url_set_protocol ( ) { … } — function",
							"—Ⓕ– url_info ( ) { … } — function",
							"—Ⓕ– url_location ( ) { … } — function",
							"—Ⓕ– url_query ( ) { … } — function",
							"—Ⓕ– url_fromobj ( ) { … } — function",
							"—Ⓕ– url_fromvalue ( ) { … } — function",
							"—Ⓕ– url_fromwsi ( ) { … } — function",
							"—Ⓕ– url_dump ( ) { … } — function",
							"—Ⓕ– query_object ( ) { … } — function",
							"—Ⓕ– query_from ( ) { … } — function",
							"—Ⓕ– minnet_url_wrap ( ) { … } — function",
							"—Ⓕ– url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_get ( ) { … } — function",
							"—Ⓕ– minnet_url_set ( ) { … } — function",
							"—Ⓕ– minnet_url_method ( ) { … } — function",
							"—Ⓕ– minnet_url_from ( ) { … } — function",
							"—Ⓕ– minnet_url_inspect ( ) { … } — function",
							"—Ⓕ– minnet_url_constructor ( ) { … } — function",
							"—Ⓕ– minnet_url_finalizer ( ) { … } — function",
							"—Ⓕ– minnet_url_init ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB0BgAA4oCU4pK74oCTIHN0cmxjcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9kZWZhdWx0X3BvcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9pc190bHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2xlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc2V0X3Byb3RvY29sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2luZm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbG9jYXRpb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcXVlcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACAFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1308,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.c",
						"symkeys":
						[
							[
								116,
								123
							],
							[
								605,
								620
							],
							[
								811,
								826
							],
							[
								971,
								992
							],
							[
								1221,
								1236
							],
							[
								1422,
								1430
							],
							[
								1828,
								1837
							],
							[
								2588,
								2598
							],
							[
								2722,
								2731
							],
							[
								3608,
								3618
							],
							[
								4447,
								4457
							],
							[
								4801,
								4809
							],
							[
								4979,
								4990
							],
							[
								5173,
								5189
							],
							[
								5331,
								5339
							],
							[
								6724,
								6736
							],
							[
								6934,
								6943
							],
							[
								7152,
								7163
							],
							[
								7908,
								7921
							],
							[
								8337,
								8348
							],
							[
								8733,
								8741
							],
							[
								8938,
								8950
							],
							[
								9686,
								9696
							],
							[
								10761,
								10776
							],
							[
								11164,
								11171
							],
							[
								11324,
								11338
							],
							[
								11534,
								11548
							],
							[
								12363,
								12377
							],
							[
								13932,
								13949
							],
							[
								14380,
								14395
							],
							[
								14715,
								14733
							],
							[
								15674,
								15696
							],
							[
								16551,
								16571
							],
							[
								17709,
								17724
							]
						],
						"symlist":
						[
							"—Ⓕ– strlcpy ( ) { … } — function",
							"—Ⓕ– protocol_number ( ) { … } — function",
							"—Ⓕ– protocol_string ( ) { … } — function",
							"—Ⓕ– protocol_default_port ( ) { … } — function",
							"—Ⓕ– protocol_is_tls ( ) { … } — function",
							"—Ⓕ– url_init ( ) { … } — function",
							"—Ⓕ– url_parse ( ) { … } — function",
							"—Ⓕ– url_create ( ) { … } — function",
							"—Ⓕ– url_print ( ) { … } — function",
							"—Ⓕ– url_format ( ) { … } — function",
							"—Ⓕ– url_length ( ) { … } — function",
							"—Ⓕ– url_free ( ) { … } — function",
							"—Ⓕ– url_free_rt ( ) { … } — function",
							"—Ⓕ– url_set_protocol ( ) { … } — function",
							"—Ⓕ– url_info ( ) { … } — function",
							"—Ⓕ– url_location ( ) { … } — function",
							"—Ⓕ– url_query ( ) { … } — function",
							"—Ⓕ– url_fromobj ( ) { … } — function",
							"—Ⓕ– url_fromvalue ( ) { … } — function",
							"—Ⓕ– url_fromwsi ( ) { … } — function",
							"—Ⓕ– url_dump ( ) { … } — function",
							"—Ⓕ– query_object ( ) { … } — function",
							"—Ⓕ– query_from ( ) { … } — function",
							"—Ⓕ– minnet_url_wrap ( ) { … } — function",
							"—Ⓕ– url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_get ( ) { … } — function",
							"—Ⓕ– minnet_url_set ( ) { … } — function",
							"—Ⓕ– minnet_url_method ( ) { … } — function",
							"—Ⓕ– minnet_url_from ( ) { … } — function",
							"—Ⓕ– minnet_url_inspect ( ) { … } — function",
							"—Ⓕ– minnet_url_constructor ( ) { … } — function",
							"—Ⓕ– minnet_url_finalizer ( ) { … } — function",
							"—Ⓕ– minnet_url_init ( ) { … } — function"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB0BgAA4oCU4pK74oCTIHN0cmxjcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9kZWZhdWx0X3BvcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9pc190bHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2xlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc2V0X3Byb3RvY29sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2luZm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbG9jYXRpb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcXVlcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0BgAA4oCU4pK74oCTIHN0cmxjcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9kZWZhdWx0X3BvcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9pc190bHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2xlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc2V0X3Byb3RvY29sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2luZm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbG9jYXRpb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcXVlcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACAFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1309,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.c",
						"symkeys":
						[
							[
								116,
								123
							],
							[
								605,
								620
							],
							[
								811,
								826
							],
							[
								971,
								992
							],
							[
								1221,
								1236
							],
							[
								1422,
								1430
							],
							[
								1828,
								1837
							],
							[
								2588,
								2598
							],
							[
								2722,
								2731
							],
							[
								3608,
								3618
							],
							[
								4447,
								4457
							],
							[
								4801,
								4809
							],
							[
								4979,
								4990
							],
							[
								5173,
								5189
							],
							[
								5331,
								5339
							],
							[
								6724,
								6736
							],
							[
								6934,
								6943
							],
							[
								7152,
								7163
							],
							[
								7908,
								7921
							],
							[
								8337,
								8348
							],
							[
								8801,
								8809
							],
							[
								9006,
								9018
							],
							[
								9754,
								9764
							],
							[
								10829,
								10844
							],
							[
								11232,
								11239
							],
							[
								11392,
								11406
							],
							[
								11602,
								11616
							],
							[
								12431,
								12445
							],
							[
								14000,
								14017
							],
							[
								14448,
								14463
							],
							[
								14783,
								14801
							],
							[
								15742,
								15764
							],
							[
								16619,
								16639
							],
							[
								17777,
								17792
							]
						],
						"symlist":
						[
							"—Ⓕ– strlcpy ( ) { … } — function",
							"—Ⓕ– protocol_number ( ) { … } — function",
							"—Ⓕ– protocol_string ( ) { … } — function",
							"—Ⓕ– protocol_default_port ( ) { … } — function",
							"—Ⓕ– protocol_is_tls ( ) { … } — function",
							"—Ⓕ– url_init ( ) { … } — function",
							"—Ⓕ– url_parse ( ) { … } — function",
							"—Ⓕ– url_create ( ) { … } — function",
							"—Ⓕ– url_print ( ) { … } — function",
							"—Ⓕ– url_format ( ) { … } — function",
							"—Ⓕ– url_length ( ) { … } — function",
							"—Ⓕ– url_free ( ) { … } — function",
							"—Ⓕ– url_free_rt ( ) { … } — function",
							"—Ⓕ– url_set_protocol ( ) { … } — function",
							"—Ⓕ– url_info ( ) { … } — function",
							"—Ⓕ– url_location ( ) { … } — function",
							"—Ⓕ– url_query ( ) { … } — function",
							"—Ⓕ– url_fromobj ( ) { … } — function",
							"—Ⓕ– url_fromvalue ( ) { … } — function",
							"—Ⓕ– url_fromwsi ( ) { … } — function",
							"—Ⓕ– url_dump ( ) { … } — function",
							"—Ⓕ– query_object ( ) { … } — function",
							"—Ⓕ– query_from ( ) { … } — function",
							"—Ⓕ– minnet_url_wrap ( ) { … } — function",
							"—Ⓕ– url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_get ( ) { … } — function",
							"—Ⓕ– minnet_url_set ( ) { … } — function",
							"—Ⓕ– minnet_url_method ( ) { … } — function",
							"—Ⓕ– minnet_url_from ( ) { … } — function",
							"—Ⓕ– minnet_url_inspect ( ) { … } — function",
							"—Ⓕ– minnet_url_constructor ( ) { … } — function",
							"—Ⓕ– minnet_url_finalizer ( ) { … } — function",
							"—Ⓕ– minnet_url_init ( ) { … } — function"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB0BgAA4oCU4pK74oCTIHN0cmxjcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9kZWZhdWx0X3BvcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9pc190bHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2xlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc2V0X3Byb3RvY29sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2luZm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbG9jYXRpb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcXVlcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0BgAA4oCU4pK74oCTIHN0cmxjcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9kZWZhdWx0X3BvcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9pc190bHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2xlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc2V0X3Byb3RvY29sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2luZm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbG9jYXRpb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcXVlcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACAFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1310,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.c",
						"symkeys":
						[
							[
								116,
								123
							],
							[
								605,
								620
							],
							[
								811,
								826
							],
							[
								971,
								992
							],
							[
								1221,
								1236
							],
							[
								1422,
								1430
							],
							[
								1828,
								1837
							],
							[
								2588,
								2598
							],
							[
								2722,
								2731
							],
							[
								3608,
								3618
							],
							[
								4447,
								4457
							],
							[
								4801,
								4809
							],
							[
								4979,
								4990
							],
							[
								5173,
								5189
							],
							[
								5331,
								5339
							],
							[
								6724,
								6736
							],
							[
								6934,
								6943
							],
							[
								7152,
								7163
							],
							[
								7908,
								7921
							],
							[
								8337,
								8348
							],
							[
								8836,
								8844
							],
							[
								9041,
								9053
							],
							[
								9789,
								9799
							],
							[
								10864,
								10879
							],
							[
								11267,
								11274
							],
							[
								11427,
								11441
							],
							[
								11637,
								11651
							],
							[
								12466,
								12480
							],
							[
								14035,
								14052
							],
							[
								14483,
								14498
							],
							[
								14818,
								14836
							],
							[
								15777,
								15799
							],
							[
								16654,
								16674
							],
							[
								17812,
								17827
							]
						],
						"symlist":
						[
							"—Ⓕ– strlcpy ( ) { … } — function",
							"—Ⓕ– protocol_number ( ) { … } — function",
							"—Ⓕ– protocol_string ( ) { … } — function",
							"—Ⓕ– protocol_default_port ( ) { … } — function",
							"—Ⓕ– protocol_is_tls ( ) { … } — function",
							"—Ⓕ– url_init ( ) { … } — function",
							"—Ⓕ– url_parse ( ) { … } — function",
							"—Ⓕ– url_create ( ) { … } — function",
							"—Ⓕ– url_print ( ) { … } — function",
							"—Ⓕ– url_format ( ) { … } — function",
							"—Ⓕ– url_length ( ) { … } — function",
							"—Ⓕ– url_free ( ) { … } — function",
							"—Ⓕ– url_free_rt ( ) { … } — function",
							"—Ⓕ– url_set_protocol ( ) { … } — function",
							"—Ⓕ– url_info ( ) { … } — function",
							"—Ⓕ– url_location ( ) { … } — function",
							"—Ⓕ– url_query ( ) { … } — function",
							"—Ⓕ– url_fromobj ( ) { … } — function",
							"—Ⓕ– url_fromvalue ( ) { … } — function",
							"—Ⓕ– url_fromwsi ( ) { … } — function",
							"—Ⓕ– url_dump ( ) { … } — function",
							"—Ⓕ– query_object ( ) { … } — function",
							"—Ⓕ– query_from ( ) { … } — function",
							"—Ⓕ– minnet_url_wrap ( ) { … } — function",
							"—Ⓕ– url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_get ( ) { … } — function",
							"—Ⓕ– minnet_url_set ( ) { … } — function",
							"—Ⓕ– minnet_url_method ( ) { … } — function",
							"—Ⓕ– minnet_url_from ( ) { … } — function",
							"—Ⓕ– minnet_url_inspect ( ) { … } — function",
							"—Ⓕ– minnet_url_constructor ( ) { … } — function",
							"—Ⓕ– minnet_url_finalizer ( ) { … } — function",
							"—Ⓕ– minnet_url_init ( ) { … } — function"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB0BgAA4oCU4pK74oCTIHN0cmxjcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9kZWZhdWx0X3BvcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9pc190bHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2xlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc2V0X3Byb3RvY29sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2luZm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbG9jYXRpb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcXVlcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0BgAA4oCU4pK74oCTIHN0cmxjcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9kZWZhdWx0X3BvcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9pc190bHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2xlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc2V0X3Byb3RvY29sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2luZm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbG9jYXRpb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcXVlcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACAFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1311,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.c",
						"symkeys":
						[
							[
								116,
								123
							],
							[
								605,
								620
							],
							[
								811,
								826
							],
							[
								971,
								992
							],
							[
								1221,
								1236
							],
							[
								1422,
								1430
							],
							[
								1828,
								1837
							],
							[
								2588,
								2598
							],
							[
								2722,
								2731
							],
							[
								3608,
								3618
							],
							[
								4447,
								4457
							],
							[
								4801,
								4809
							],
							[
								4979,
								4990
							],
							[
								5173,
								5189
							],
							[
								5331,
								5339
							],
							[
								6724,
								6736
							],
							[
								6934,
								6943
							],
							[
								7152,
								7163
							],
							[
								7908,
								7921
							],
							[
								8337,
								8348
							],
							[
								8899,
								8907
							],
							[
								9104,
								9116
							],
							[
								9852,
								9862
							],
							[
								10927,
								10942
							],
							[
								11330,
								11337
							],
							[
								11490,
								11504
							],
							[
								11700,
								11714
							],
							[
								12529,
								12543
							],
							[
								14098,
								14115
							],
							[
								14546,
								14561
							],
							[
								14881,
								14899
							],
							[
								15840,
								15862
							],
							[
								16717,
								16737
							],
							[
								17875,
								17890
							]
						],
						"symlist":
						[
							"—Ⓕ– strlcpy ( ) { … } — function",
							"—Ⓕ– protocol_number ( ) { … } — function",
							"—Ⓕ– protocol_string ( ) { … } — function",
							"—Ⓕ– protocol_default_port ( ) { … } — function",
							"—Ⓕ– protocol_is_tls ( ) { … } — function",
							"—Ⓕ– url_init ( ) { … } — function",
							"—Ⓕ– url_parse ( ) { … } — function",
							"—Ⓕ– url_create ( ) { … } — function",
							"—Ⓕ– url_print ( ) { … } — function",
							"—Ⓕ– url_format ( ) { … } — function",
							"—Ⓕ– url_length ( ) { … } — function",
							"—Ⓕ– url_free ( ) { … } — function",
							"—Ⓕ– url_free_rt ( ) { … } — function",
							"—Ⓕ– url_set_protocol ( ) { … } — function",
							"—Ⓕ– url_info ( ) { … } — function",
							"—Ⓕ– url_location ( ) { … } — function",
							"—Ⓕ– url_query ( ) { … } — function",
							"—Ⓕ– url_fromobj ( ) { … } — function",
							"—Ⓕ– url_fromvalue ( ) { … } — function",
							"—Ⓕ– url_fromwsi ( ) { … } — function",
							"—Ⓕ– url_dump ( ) { … } — function",
							"—Ⓕ– query_object ( ) { … } — function",
							"—Ⓕ– query_from ( ) { … } — function",
							"—Ⓕ– minnet_url_wrap ( ) { … } — function",
							"—Ⓕ– url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_get ( ) { … } — function",
							"—Ⓕ– minnet_url_set ( ) { … } — function",
							"—Ⓕ– minnet_url_method ( ) { … } — function",
							"—Ⓕ– minnet_url_from ( ) { … } — function",
							"—Ⓕ– minnet_url_inspect ( ) { … } — function",
							"—Ⓕ– minnet_url_constructor ( ) { … } — function",
							"—Ⓕ– minnet_url_finalizer ( ) { … } — function",
							"—Ⓕ– minnet_url_init ( ) { … } — function"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB0BgAA4oCU4pK74oCTIHN0cmxjcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9kZWZhdWx0X3BvcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9pc190bHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2xlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc2V0X3Byb3RvY29sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2luZm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbG9jYXRpb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcXVlcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0BgAA4oCU4pK74oCTIHN0cmxjcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9kZWZhdWx0X3BvcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9pc190bHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2xlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc2V0X3Byb3RvY29sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2luZm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbG9jYXRpb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcXVlcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACAFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1312,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.h",
						"symkeys":
						[
							[
								29,
								41
							],
							[
								282,
								296
							],
							[
								314,
								329
							],
							[
								356,
								371
							],
							[
								398,
								419
							],
							[
								442,
								457
							],
							[
								578,
								587
							],
							[
								605,
								620
							],
							[
								647,
								662
							],
							[
								689,
								710
							],
							[
								733,
								748
							],
							[
								771,
								779
							],
							[
								868,
								877
							],
							[
								926,
								936
							],
							[
								970,
								979
							],
							[
								1019,
								1029
							],
							[
								1067,
								1077
							],
							[
								1101,
								1109
							],
							[
								1140,
								1151
							],
							[
								1182,
								1190
							],
							[
								1248,
								1260
							],
							[
								1303,
								1312
							],
							[
								1336,
								1347
							],
							[
								1392,
								1405
							],
							[
								1450,
								1461
							],
							[
								1505,
								1513
							],
							[
								1561,
								1577
							],
							[
								1622,
								1634
							],
							[
								1667,
								1677
							],
							[
								1713,
								1728
							],
							[
								1765,
								1772
							],
							[
								1794,
								1808
							],
							[
								1841,
								1858
							],
							[
								1931,
								1946
							],
							[
								2003,
								2025
							],
							[
								2083,
								2098
							],
							[
								2205,
								2213
							],
							[
								2278,
								2287
							],
							[
								2374,
								2386
							],
							[
								2478,
								2485
							],
							[
								2565,
								2574
							],
							[
								2845,
								2853
							],
							[
								3105,
								3115
							],
							[
								3224,
								3239
							],
							[
								3295,
								3310
							],
							[
								3408,
								3424
							]
						],
						"symlist":
						[
							" Ⓜ  MINNET_URL_H … — macro object",
							" Ⓣ  MinnetProtocol ; — typedef",
							"—Ⓕ– protocol_number ( ) { … } — function",
							"—Ⓕ– protocol_string ( ) { … } — function",
							"—Ⓕ– protocol_default_port ( ) { … } — function",
							"—Ⓕ– protocol_is_tls ( ) { … } — function",
							" Ⓣ  MinnetURL ; — typedef",
							"—Ⓕ– protocol_number ( ) { … } — function",
							"—Ⓕ– protocol_string ( ) { … } — function",
							"—Ⓕ– protocol_default_port ( ) { … } — function",
							"—Ⓕ– protocol_is_tls ( ) { … } — function",
							"—Ⓕ– url_init ( ) { … } — function",
							"—Ⓕ– url_parse ( ) { … } — function",
							"—Ⓕ– url_create ( ) { … } — function",
							"—Ⓕ– url_print ( ) { … } — function",
							"—Ⓕ– url_format ( ) { … } — function",
							"—Ⓕ– url_length ( ) { … } — function",
							"—Ⓕ– url_free ( ) { … } — function",
							"—Ⓕ– url_free_rt ( ) { … } — function",
							"—Ⓕ– url_info ( ) { … } — function",
							"—Ⓕ– url_location ( ) { … } — function",
							"—Ⓕ– url_query ( ) { … } — function",
							"—Ⓕ– url_fromobj ( ) { … } — function",
							"—Ⓕ– url_fromvalue ( ) { … } — function",
							"—Ⓕ– url_fromwsi ( ) { … } — function",
							"—Ⓕ– url_dump ( ) { … } — function",
							"—Ⓕ– url_set_protocol ( ) { … } — function",
							"—Ⓕ– query_object ( ) { … } — function",
							"—Ⓕ– query_from ( ) { … } — function",
							"—Ⓕ– minnet_url_wrap ( ) { … } — function",
							"—Ⓕ– url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_method ( ) { … } — function",
							"—Ⓕ– minnet_url_from ( ) { … } — function",
							"—Ⓕ– minnet_url_constructor ( ) { … } — function",
							"—Ⓕ– minnet_url_init ( ) { … } — function",
							"—Ⓕ– url_path ( ) { … } — function",
							"—Ⓕ– url_valid ( ) { … } — function",
							"—Ⓕ– url_protocol ( ) { … } — function",
							"—Ⓕ– url_dup ( ) { … } — function",
							"—Ⓕ– url_clone ( ) { … } — function",
							"—Ⓕ– url_copy ( ) { … } — function",
							"—Ⓕ– url_string ( ) { … } — function",
							"—Ⓕ– minnet_url_init ( ) { … } — function",
							"—Ⓕ– minnet_url_data ( ) { … } — function",
							"—Ⓕ– minnet_url_data2 ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB0BgAA4oCU4pK74oCTIHN0cmxjcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9kZWZhdWx0X3BvcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9pc190bHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2xlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc2V0X3Byb3RvY29sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2luZm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbG9jYXRpb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcXVlcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAM4GAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1313,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.h",
						"symkeys":
						[
							[
								29,
								41
							],
							[
								282,
								296
							],
							[
								314,
								329
							],
							[
								356,
								371
							],
							[
								398,
								419
							],
							[
								442,
								457
							],
							[
								578,
								587
							],
							[
								606,
								621
							],
							[
								651,
								666
							],
							[
								699,
								720
							],
							[
								753,
								768
							],
							[
								801,
								809
							],
							[
								908,
								917
							],
							[
								971,
								981
							],
							[
								1023,
								1032
							],
							[
								1081,
								1091
							],
							[
								1137,
								1147
							],
							[
								1181,
								1189
							],
							[
								1230,
								1241
							],
							[
								1282,
								1298
							],
							[
								1340,
								1348
							],
							[
								1415,
								1427
							],
							[
								1473,
								1482
							],
							[
								1516,
								1527
							],
							[
								1582,
								1595
							],
							[
								1650,
								1661
							],
							[
								1715,
								1723
							],
							[
								1771,
								1783
							],
							[
								1825,
								1835
							],
							[
								1878,
								1893
							],
							[
								1934,
								1941
							],
							[
								1970,
								1984
							],
							[
								2024,
								2041
							],
							[
								2121,
								2136
							],
							[
								2205,
								2223
							],
							[
								2292,
								2314
							],
							[
								2383,
								2398
							],
							[
								2506,
								2514
							],
							[
								2579,
								2588
							],
							[
								2675,
								2687
							],
							[
								2779,
								2786
							],
							[
								2866,
								2875
							],
							[
								3146,
								3154
							],
							[
								3406,
								3416
							],
							[
								3525,
								3540
							],
							[
								3596,
								3611
							],
							[
								3709,
								3725
							]
						],
						"symlist":
						[
							" Ⓜ  MINNET_URL_H … — macro object",
							" Ⓣ  MinnetProtocol ; — typedef",
							"—Ⓕ– protocol_number ( ) { … } — function",
							"—Ⓕ– protocol_string ( ) { … } — function",
							"—Ⓕ– protocol_default_port ( ) { … } — function",
							"—Ⓕ– protocol_is_tls ( ) { … } — function",
							" Ⓣ  MinnetURL ; — typedef",
							"—Ⓕ– protocol_number ( ) { … } — function",
							"—Ⓕ– protocol_string ( ) { … } — function",
							"—Ⓕ– protocol_default_port ( ) { … } — function",
							"—Ⓕ– protocol_is_tls ( ) { … } — function",
							"—Ⓕ– url_init ( ) { … } — function",
							"—Ⓕ– url_parse ( ) { … } — function",
							"—Ⓕ– url_create ( ) { … } — function",
							"—Ⓕ– url_print ( ) { … } — function",
							"—Ⓕ– url_format ( ) { … } — function",
							"—Ⓕ– url_length ( ) { … } — function",
							"—Ⓕ– url_free ( ) { … } — function",
							"—Ⓕ– url_free_rt ( ) { … } — function",
							"—Ⓕ– url_set_protocol ( ) { … } — function",
							"—Ⓕ– url_info ( ) { … } — function",
							"—Ⓕ– url_location ( ) { … } — function",
							"—Ⓕ– url_query ( ) { … } — function",
							"—Ⓕ– url_fromobj ( ) { … } — function",
							"—Ⓕ– url_fromvalue ( ) { … } — function",
							"—Ⓕ– url_fromwsi ( ) { … } — function",
							"—Ⓕ– url_dump ( ) { … } — function",
							"—Ⓕ– query_object ( ) { … } — function",
							"—Ⓕ– query_from ( ) { … } — function",
							"—Ⓕ– minnet_url_wrap ( ) { … } — function",
							"—Ⓕ– url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_method ( ) { … } — function",
							"—Ⓕ– minnet_url_from ( ) { … } — function",
							"—Ⓕ– minnet_url_inspect ( ) { … } — function",
							"—Ⓕ– minnet_url_constructor ( ) { … } — function",
							"—Ⓕ– minnet_url_init ( ) { … } — function",
							"—Ⓕ– url_path ( ) { … } — function",
							"—Ⓕ– url_valid ( ) { … } — function",
							"—Ⓕ– url_protocol ( ) { … } — function",
							"—Ⓕ– url_dup ( ) { … } — function",
							"—Ⓕ– url_clone ( ) { … } — function",
							"—Ⓕ– url_copy ( ) { … } — function",
							"—Ⓕ– url_string ( ) { … } — function",
							"—Ⓕ– minnet_url_init ( ) { … } — function",
							"—Ⓕ– minnet_url_data ( ) { … } — function",
							"—Ⓕ– minnet_url_data2 ( ) { … } — function"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACKCAAAICDik4IgIE1JTk5FVF9VUkxfSCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTiSAgTWlubmV0UHJvdG9jb2wgOyDigJQgdHlwZWRlZgrigJTikrvigJMgcHJvdG9jb2xfbnVtYmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvdG9jb2xfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvdG9jb2xfZGVmYXVsdF9wb3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvdG9jb2xfaXNfdGxzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgTWlubmV0VVJMIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIHByb3RvY29sX251bWJlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3RvY29sX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3RvY29sX2RlZmF1bHRfcG9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3RvY29sX2lzX3RscyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX3BhcnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2NyZWF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wcmludCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mb3JtYXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbGVuZ3RoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9pbmZvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2xvY2F0aW9uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX3F1ZXJ5ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2Zyb21vYmogKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbXZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2Zyb213c2kgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9zZXRfcHJvdG9jb2wgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBxdWVyeV9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBxdWVyeV9mcm9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF93cmFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9tZXRob2QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2Zyb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX3BhdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfdmFsaWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJvdG9jb2wgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2Nsb25lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2NvcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9kYXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9kYXRhMiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPoGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADACAAAICDik4IgIE1JTk5FVF9VUkxfSCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTiSAgTWlubmV0UHJvdG9jb2wgOyDigJQgdHlwZWRlZgrigJTikrvigJMgcHJvdG9jb2xfbnVtYmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvdG9jb2xfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvdG9jb2xfZGVmYXVsdF9wb3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvdG9jb2xfaXNfdGxzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgTWlubmV0VVJMIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIHByb3RvY29sX251bWJlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3RvY29sX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3RvY29sX2RlZmF1bHRfcG9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3RvY29sX2lzX3RscyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX3BhcnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2NyZWF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wcmludCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mb3JtYXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbGVuZ3RoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9zZXRfcHJvdG9jb2wgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5mbyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9sb2NhdGlvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9xdWVyeSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2Zyb212YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9td3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2R1bXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBxdWVyeV9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBxdWVyeV9mcm9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF93cmFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9tZXRob2QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2Zyb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2luc3BlY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX3BhdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfdmFsaWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJvdG9jb2wgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2Nsb25lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2NvcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9kYXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9kYXRhMiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPoGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1314,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.h",
						"symkeys":
						[
							[
								29,
								41
							],
							[
								282,
								296
							],
							[
								314,
								329
							],
							[
								356,
								371
							],
							[
								398,
								419
							],
							[
								442,
								457
							],
							[
								578,
								587
							],
							[
								606,
								621
							],
							[
								651,
								666
							],
							[
								699,
								720
							],
							[
								753,
								768
							],
							[
								801,
								809
							],
							[
								908,
								917
							],
							[
								971,
								981
							],
							[
								1023,
								1032
							],
							[
								1081,
								1091
							],
							[
								1137,
								1147
							],
							[
								1181,
								1189
							],
							[
								1230,
								1241
							],
							[
								1282,
								1298
							],
							[
								1340,
								1348
							],
							[
								1415,
								1427
							],
							[
								1473,
								1482
							],
							[
								1516,
								1527
							],
							[
								1582,
								1595
							],
							[
								1650,
								1661
							],
							[
								1715,
								1723
							],
							[
								1771,
								1783
							],
							[
								1825,
								1835
							],
							[
								1878,
								1893
							],
							[
								1934,
								1941
							],
							[
								1970,
								1984
							],
							[
								2024,
								2041
							],
							[
								2121,
								2136
							],
							[
								2205,
								2223
							],
							[
								2292,
								2314
							],
							[
								2383,
								2398
							],
							[
								2506,
								2514
							],
							[
								2579,
								2588
							],
							[
								2675,
								2687
							],
							[
								2779,
								2786
							],
							[
								2866,
								2875
							],
							[
								3146,
								3154
							],
							[
								3406,
								3416
							],
							[
								3525,
								3540
							],
							[
								3596,
								3611
							],
							[
								3709,
								3725
							]
						],
						"symlist":
						[
							" Ⓜ  MINNET_URL_H … — macro object",
							" Ⓣ  MinnetProtocol ; — typedef",
							"—Ⓕ– protocol_number ( ) { … } — function",
							"—Ⓕ– protocol_string ( ) { … } — function",
							"—Ⓕ– protocol_default_port ( ) { … } — function",
							"—Ⓕ– protocol_is_tls ( ) { … } — function",
							" Ⓣ  MinnetURL ; — typedef",
							"—Ⓕ– protocol_number ( ) { … } — function",
							"—Ⓕ– protocol_string ( ) { … } — function",
							"—Ⓕ– protocol_default_port ( ) { … } — function",
							"—Ⓕ– protocol_is_tls ( ) { … } — function",
							"—Ⓕ– url_init ( ) { … } — function",
							"—Ⓕ– url_parse ( ) { … } — function",
							"—Ⓕ– url_create ( ) { … } — function",
							"—Ⓕ– url_print ( ) { … } — function",
							"—Ⓕ– url_format ( ) { … } — function",
							"—Ⓕ– url_length ( ) { … } — function",
							"—Ⓕ– url_free ( ) { … } — function",
							"—Ⓕ– url_free_rt ( ) { … } — function",
							"—Ⓕ– url_set_protocol ( ) { … } — function",
							"—Ⓕ– url_info ( ) { … } — function",
							"—Ⓕ– url_location ( ) { … } — function",
							"—Ⓕ– url_query ( ) { … } — function",
							"—Ⓕ– url_fromobj ( ) { … } — function",
							"—Ⓕ– url_fromvalue ( ) { … } — function",
							"—Ⓕ– url_fromwsi ( ) { … } — function",
							"—Ⓕ– url_dump ( ) { … } — function",
							"—Ⓕ– query_object ( ) { … } — function",
							"—Ⓕ– query_from ( ) { … } — function",
							"—Ⓕ– minnet_url_wrap ( ) { … } — function",
							"—Ⓕ– url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_method ( ) { … } — function",
							"—Ⓕ– minnet_url_from ( ) { … } — function",
							"—Ⓕ– minnet_url_inspect ( ) { … } — function",
							"—Ⓕ– minnet_url_constructor ( ) { … } — function",
							"—Ⓕ– minnet_url_init ( ) { … } — function",
							"—Ⓕ– url_path ( ) { … } — function",
							"—Ⓕ– url_valid ( ) { … } — function",
							"—Ⓕ– url_protocol ( ) { … } — function",
							"—Ⓕ– url_dup ( ) { … } — function",
							"—Ⓕ– url_clone ( ) { … } — function",
							"—Ⓕ– url_copy ( ) { … } — function",
							"—Ⓕ– url_string ( ) { … } — function",
							"—Ⓕ– minnet_url_init ( ) { … } — function",
							"—Ⓕ– minnet_url_data ( ) { … } — function",
							"—Ⓕ– minnet_url_data2 ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADACAAAICDik4IgIE1JTk5FVF9VUkxfSCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTiSAgTWlubmV0UHJvdG9jb2wgOyDigJQgdHlwZWRlZgrigJTikrvigJMgcHJvdG9jb2xfbnVtYmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvdG9jb2xfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvdG9jb2xfZGVmYXVsdF9wb3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvdG9jb2xfaXNfdGxzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgTWlubmV0VVJMIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIHByb3RvY29sX251bWJlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3RvY29sX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3RvY29sX2RlZmF1bHRfcG9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3RvY29sX2lzX3RscyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX3BhcnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2NyZWF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wcmludCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mb3JtYXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbGVuZ3RoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9zZXRfcHJvdG9jb2wgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5mbyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9sb2NhdGlvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9xdWVyeSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2Zyb212YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9td3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2R1bXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBxdWVyeV9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBxdWVyeV9mcm9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF93cmFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9tZXRob2QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2Zyb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2luc3BlY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX3BhdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfdmFsaWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJvdG9jb2wgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2Nsb25lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2NvcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9kYXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9kYXRhMiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPoGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1315,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
						"symkeys":
						[
							[
								166,
								186
							],
							[
								257,
								275
							],
							[
								300,
								311
							]
						],
						"symlist":
						[
							"—Ⓕ– http_server_callback ( ) { … } — function",
							"—Ⓕ– lws_hdr_simple_ptr ( ) { … } — function",
							"—Ⓕ– ws_callback ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADACAAAICDik4IgIE1JTk5FVF9VUkxfSCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTiSAgTWlubmV0UHJvdG9jb2wgOyDigJQgdHlwZWRlZgrigJTikrvigJMgcHJvdG9jb2xfbnVtYmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvdG9jb2xfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvdG9jb2xfZGVmYXVsdF9wb3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvdG9jb2xfaXNfdGxzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgTWlubmV0VVJMIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIHByb3RvY29sX251bWJlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3RvY29sX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3RvY29sX2RlZmF1bHRfcG9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3RvY29sX2lzX3RscyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX3BhcnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2NyZWF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wcmludCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mb3JtYXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbGVuZ3RoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9zZXRfcHJvdG9jb2wgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5mbyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9sb2NhdGlvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9xdWVyeSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2Zyb212YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9td3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2R1bXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBxdWVyeV9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBxdWVyeV9mcm9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF93cmFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9tZXRob2QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2Zyb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2luc3BlY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX3BhdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfdmFsaWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJvdG9jb2wgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2Nsb25lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2NvcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9kYXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9kYXRhMiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAH4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1316,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-proxy.h",
						"symkeys":
						[
							[
								38,
								59
							],
							[
								309,
								330
							],
							[
								337,
								361
							],
							[
								392,
								416
							],
							[
								491,
								516
							]
						],
						"symlist":
						[
							" Ⓜ  MINNET_SERVER_PROXY_H … — macro object",
							" Ⓣ  MinnetProxyConnection ; — typedef",
							"—Ⓕ– proxy_ws_raw_msg_destroy ( ) { … } — function",
							"—Ⓕ– callback_proxy_ws_server ( ) { … } — function",
							"—Ⓕ– callback_proxy_raw_client ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACcAAAA4oCU4pK74oCTIGh0dHBfc2VydmVyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzX2hkcl9zaW1wbGVfcHRyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAADpAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1317,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
						"symkeys":
						[
							[
								166,
								186
							],
							[
								257,
								275
							],
							[
								300,
								311
							]
						],
						"symlist":
						[
							"—Ⓕ– http_server_callback ( ) { … } — function",
							"—Ⓕ– lws_hdr_simple_ptr ( ) { … } — function",
							"—Ⓕ– ws_callback ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAARAQAAICDik4IgIE1JTk5FVF9TRVJWRVJfUFJPWFlfSCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTiSAgTWlubmV0UHJveHlDb25uZWN0aW9uIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIHByb3h5X3dzX3Jhd19tc2dfZGVzdHJveSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNhbGxiYWNrX3Byb3h5X3dzX3NlcnZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNhbGxiYWNrX3Byb3h5X3Jhd19jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAB+AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1318,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.h",
						"symkeys":
						[
							[
								33,
								49
							],
							[
								190,
								203
							],
							[
								227,
								240
							],
							[
								397,
								410
							],
							[
								418,
								432
							],
							[
								493,
								505
							],
							[
								546,
								558
							],
							[
								620,
								631
							],
							[
								696,
								707
							],
							[
								740,
								755
							],
							[
								798,
								813
							],
							[
								855,
								870
							],
							[
								910,
								922
							],
							[
								945,
								958
							],
							[
								993,
								1009
							],
							[
								1044,
								1056
							],
							[
								1091,
								1106
							],
							[
								1151,
								1163
							],
							[
								1216,
								1235
							],
							[
								1288,
								1314
							],
							[
								1376,
								1394
							],
							[
								1445,
								1464
							],
							[
								1808,
								1827
							],
							[
								1933,
								1953
							],
							[
								2072,
								2093
							],
							[
								2668,
								2679
							]
						],
						"symlist":
						[
							" Ⓜ  MINNET_REQUEST_H … — macro object",
							"—Ⓕ– method_string ( ) { … } — function",
							"—Ⓕ– method_number ( ) { … } — function",
							" Ⓣ  MinnetRequest ; — typedef",
							"—Ⓕ– request_format ( ) { … } — function",
							"—Ⓕ– request_dump ( ) { … } — function",
							"—Ⓕ– request_init ( ) { … } — function",
							"—Ⓕ– request_new ( ) { … } — function",
							"—Ⓕ– request_dup ( ) { … } — function",
							"—Ⓕ– request_fromobj ( ) { … } — function",
							"—Ⓕ– request_fromwsi ( ) { … } — function",
							"—Ⓕ– request_fromurl ( ) { … } — function",
							"—Ⓕ– request_zero ( ) { … } — function",
							"—Ⓕ– request_clear ( ) { … } — function",
							"—Ⓕ– request_clear_rt ( ) { … } — function",
							"—Ⓕ– request_free ( ) { … } — function",
							"—Ⓕ– request_free_rt ( ) { … } — function",
							"—Ⓕ– request_from ( ) { … } — function",
							"—Ⓕ– minnet_request_from ( ) { … } — function",
							"—Ⓕ– minnet_request_constructor ( ) { … } — function",
							"—Ⓕ– minnet_request_new ( ) { … } — function",
							"—Ⓕ– minnet_request_wrap ( ) { … } — function",
							"—Ⓕ– minnet_request_data ( ) { … } — function",
							"—Ⓕ– minnet_request_data2 ( ) { … } — function",
							"—Ⓕ– minnet_uri_and_method ( ) { … } — function",
							"—Ⓕ– method_name ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACcAAAA4oCU4pK74oCTIGh0dHBfc2VydmVyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzX2hkcl9zaW1wbGVfcHRyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAhBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1319,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
						"symkeys":
						[
							[
								166,
								186
							],
							[
								257,
								275
							],
							[
								300,
								311
							]
						],
						"symlist":
						[
							"—Ⓕ– http_server_callback ( ) { … } — function",
							"—Ⓕ– lws_hdr_simple_ptr ( ) { … } — function",
							"—Ⓕ– ws_callback ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAbBQAAICDik4IgIE1JTk5FVF9SRVFVRVNUX0gg4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIG1ldGhvZF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtZXRob2RfbnVtYmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgTWlubmV0UmVxdWVzdCA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyByZXF1ZXN0X2Zvcm1hdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9kdXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2Zyb21vYmogKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2Zyb213c2kgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2Zyb211cmwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2NsZWFyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9jbGVhcl9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2Zyb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmVxdWVzdF9jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X3dyYXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmVxdWVzdF9kYXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfZGF0YTIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJpX2FuZF9tZXRob2QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtZXRob2RfbmFtZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAH4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1320,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
						"symkeys":
						[
							[
								166,
								186
							],
							[
								257,
								275
							],
							[
								300,
								311
							]
						],
						"symlist":
						[
							"—Ⓕ– http_server_callback ( ) { … } — function",
							"—Ⓕ– lws_hdr_simple_ptr ( ) { … } — function",
							"—Ⓕ– ws_callback ( ) { … } — function"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACcAAAA4oCU4pK74oCTIGh0dHBfc2VydmVyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzX2hkcl9zaW1wbGVfcHRyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAB+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnAAAAOKAlOKSu+KAkyBodHRwX3NlcnZlcl9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGx3c19oZHJfc2ltcGxlX3B0ciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAfgAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1321,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.c",
						"symkeys":
						[
							[
								116,
								123
							],
							[
								605,
								620
							],
							[
								811,
								826
							],
							[
								971,
								992
							],
							[
								1221,
								1236
							],
							[
								1422,
								1430
							],
							[
								1828,
								1837
							],
							[
								2588,
								2598
							],
							[
								2722,
								2731
							],
							[
								3608,
								3618
							],
							[
								4447,
								4457
							],
							[
								4801,
								4809
							],
							[
								4979,
								4990
							],
							[
								5173,
								5189
							],
							[
								5331,
								5339
							],
							[
								6724,
								6736
							],
							[
								6934,
								6943
							],
							[
								7152,
								7163
							],
							[
								7908,
								7921
							],
							[
								8337,
								8348
							],
							[
								8933,
								8941
							],
							[
								9138,
								9150
							],
							[
								9886,
								9896
							],
							[
								10961,
								10976
							],
							[
								11364,
								11371
							],
							[
								11524,
								11538
							],
							[
								11734,
								11748
							],
							[
								12563,
								12577
							],
							[
								14132,
								14149
							],
							[
								14580,
								14595
							],
							[
								14915,
								14933
							],
							[
								15874,
								15896
							],
							[
								16751,
								16771
							],
							[
								17909,
								17924
							]
						],
						"symlist":
						[
							"—Ⓕ– strlcpy ( ) { … } — function",
							"—Ⓕ– protocol_number ( ) { … } — function",
							"—Ⓕ– protocol_string ( ) { … } — function",
							"—Ⓕ– protocol_default_port ( ) { … } — function",
							"—Ⓕ– protocol_is_tls ( ) { … } — function",
							"—Ⓕ– url_init ( ) { … } — function",
							"—Ⓕ– url_parse ( ) { … } — function",
							"—Ⓕ– url_create ( ) { … } — function",
							"—Ⓕ– url_print ( ) { … } — function",
							"—Ⓕ– url_format ( ) { … } — function",
							"—Ⓕ– url_length ( ) { … } — function",
							"—Ⓕ– url_free ( ) { … } — function",
							"—Ⓕ– url_free_rt ( ) { … } — function",
							"—Ⓕ– url_set_protocol ( ) { … } — function",
							"—Ⓕ– url_info ( ) { … } — function",
							"—Ⓕ– url_location ( ) { … } — function",
							"—Ⓕ– url_query ( ) { … } — function",
							"—Ⓕ– url_fromobj ( ) { … } — function",
							"—Ⓕ– url_fromvalue ( ) { … } — function",
							"—Ⓕ– url_fromwsi ( ) { … } — function",
							"—Ⓕ– url_dump ( ) { … } — function",
							"—Ⓕ– query_object ( ) { … } — function",
							"—Ⓕ– query_from ( ) { … } — function",
							"—Ⓕ– minnet_url_wrap ( ) { … } — function",
							"—Ⓕ– url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_get ( ) { … } — function",
							"—Ⓕ– minnet_url_set ( ) { … } — function",
							"—Ⓕ– minnet_url_method ( ) { … } — function",
							"—Ⓕ– minnet_url_from ( ) { … } — function",
							"—Ⓕ– minnet_url_inspect ( ) { … } — function",
							"—Ⓕ– minnet_url_constructor ( ) { … } — function",
							"—Ⓕ– minnet_url_finalizer ( ) { … } — function",
							"—Ⓕ– minnet_url_init ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACcAAAA4oCU4pK74oCTIGh0dHBfc2VydmVyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzX2hkcl9zaW1wbGVfcHRyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAgBQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1322,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.c",
						"symkeys":
						[
							[
								116,
								123
							],
							[
								605,
								620
							],
							[
								811,
								826
							],
							[
								971,
								992
							],
							[
								1221,
								1236
							],
							[
								1422,
								1430
							],
							[
								1828,
								1837
							],
							[
								2588,
								2598
							],
							[
								2722,
								2731
							],
							[
								3608,
								3618
							],
							[
								4447,
								4457
							],
							[
								4801,
								4809
							],
							[
								4979,
								4990
							],
							[
								5173,
								5189
							],
							[
								5331,
								5339
							],
							[
								6724,
								6736
							],
							[
								6934,
								6943
							],
							[
								7152,
								7163
							],
							[
								7908,
								7921
							],
							[
								8337,
								8348
							],
							[
								8933,
								8941
							],
							[
								9138,
								9150
							],
							[
								9886,
								9896
							],
							[
								10961,
								10976
							],
							[
								11364,
								11371
							],
							[
								11524,
								11538
							],
							[
								11734,
								11748
							],
							[
								12563,
								12577
							],
							[
								14132,
								14149
							],
							[
								14580,
								14595
							],
							[
								14915,
								14933
							],
							[
								15874,
								15896
							],
							[
								16751,
								16771
							],
							[
								17909,
								17924
							]
						],
						"symlist":
						[
							"—Ⓕ– strlcpy ( ) { … } — function",
							"—Ⓕ– protocol_number ( ) { … } — function",
							"—Ⓕ– protocol_string ( ) { … } — function",
							"—Ⓕ– protocol_default_port ( ) { … } — function",
							"—Ⓕ– protocol_is_tls ( ) { … } — function",
							"—Ⓕ– url_init ( ) { … } — function",
							"—Ⓕ– url_parse ( ) { … } — function",
							"—Ⓕ– url_create ( ) { … } — function",
							"—Ⓕ– url_print ( ) { … } — function",
							"—Ⓕ– url_format ( ) { … } — function",
							"—Ⓕ– url_length ( ) { … } — function",
							"—Ⓕ– url_free ( ) { … } — function",
							"—Ⓕ– url_free_rt ( ) { … } — function",
							"—Ⓕ– url_set_protocol ( ) { … } — function",
							"—Ⓕ– url_info ( ) { … } — function",
							"—Ⓕ– url_location ( ) { … } — function",
							"—Ⓕ– url_query ( ) { … } — function",
							"—Ⓕ– url_fromobj ( ) { … } — function",
							"—Ⓕ– url_fromvalue ( ) { … } — function",
							"—Ⓕ– url_fromwsi ( ) { … } — function",
							"—Ⓕ– url_dump ( ) { … } — function",
							"—Ⓕ– query_object ( ) { … } — function",
							"—Ⓕ– query_from ( ) { … } — function",
							"—Ⓕ– minnet_url_wrap ( ) { … } — function",
							"—Ⓕ– url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_get ( ) { … } — function",
							"—Ⓕ– minnet_url_set ( ) { … } — function",
							"—Ⓕ– minnet_url_method ( ) { … } — function",
							"—Ⓕ– minnet_url_from ( ) { … } — function",
							"—Ⓕ– minnet_url_inspect ( ) { … } — function",
							"—Ⓕ– minnet_url_constructor ( ) { … } — function",
							"—Ⓕ– minnet_url_finalizer ( ) { … } — function",
							"—Ⓕ– minnet_url_init ( ) { … } — function"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAB0BgAA4oCU4pK74oCTIHN0cmxjcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9kZWZhdWx0X3BvcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9pc190bHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2xlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc2V0X3Byb3RvY29sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2luZm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbG9jYXRpb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcXVlcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0BgAA4oCU4pK74oCTIHN0cmxjcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9kZWZhdWx0X3BvcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9pc190bHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2xlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc2V0X3Byb3RvY29sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2luZm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbG9jYXRpb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcXVlcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0BgAA4oCU4pK74oCTIHN0cmxjcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9kZWZhdWx0X3BvcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9pc190bHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2xlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc2V0X3Byb3RvY29sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2luZm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbG9jYXRpb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcXVlcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACAFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1323,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.h",
						"symkeys":
						[
							[
								29,
								41
							],
							[
								282,
								296
							],
							[
								314,
								329
							],
							[
								356,
								371
							],
							[
								398,
								419
							],
							[
								442,
								457
							],
							[
								578,
								587
							],
							[
								605,
								620
							],
							[
								647,
								662
							],
							[
								689,
								710
							],
							[
								733,
								748
							],
							[
								771,
								779
							],
							[
								868,
								877
							],
							[
								926,
								936
							],
							[
								970,
								979
							],
							[
								1019,
								1029
							],
							[
								1067,
								1077
							],
							[
								1101,
								1109
							],
							[
								1140,
								1151
							],
							[
								1192,
								1208
							],
							[
								1240,
								1248
							],
							[
								1306,
								1318
							],
							[
								1361,
								1370
							],
							[
								1394,
								1405
							],
							[
								1450,
								1463
							],
							[
								1508,
								1519
							],
							[
								1563,
								1571
							],
							[
								1612,
								1624
							],
							[
								1657,
								1667
							],
							[
								1703,
								1718
							],
							[
								1755,
								1762
							],
							[
								1784,
								1798
							],
							[
								1831,
								1848
							],
							[
								1921,
								1936
							],
							[
								1998,
								2016
							],
							[
								2078,
								2100
							],
							[
								2158,
								2173
							],
							[
								2280,
								2288
							],
							[
								2353,
								2362
							],
							[
								2449,
								2461
							],
							[
								2553,
								2560
							],
							[
								2640,
								2649
							],
							[
								2920,
								2928
							],
							[
								3180,
								3190
							],
							[
								3299,
								3314
							],
							[
								3370,
								3385
							],
							[
								3483,
								3499
							]
						],
						"symlist":
						[
							" Ⓜ  MINNET_URL_H … — macro object",
							" Ⓣ  MinnetProtocol ; — typedef",
							"—Ⓕ– protocol_number ( ) { … } — function",
							"—Ⓕ– protocol_string ( ) { … } — function",
							"—Ⓕ– protocol_default_port ( ) { … } — function",
							"—Ⓕ– protocol_is_tls ( ) { … } — function",
							" Ⓣ  MinnetURL ; — typedef",
							"—Ⓕ– protocol_number ( ) { … } — function",
							"—Ⓕ– protocol_string ( ) { … } — function",
							"—Ⓕ– protocol_default_port ( ) { … } — function",
							"—Ⓕ– protocol_is_tls ( ) { … } — function",
							"—Ⓕ– url_init ( ) { … } — function",
							"—Ⓕ– url_parse ( ) { … } — function",
							"—Ⓕ– url_create ( ) { … } — function",
							"—Ⓕ– url_print ( ) { … } — function",
							"—Ⓕ– url_format ( ) { … } — function",
							"—Ⓕ– url_length ( ) { … } — function",
							"—Ⓕ– url_free ( ) { … } — function",
							"—Ⓕ– url_free_rt ( ) { … } — function",
							"—Ⓕ– url_set_protocol ( ) { … } — function",
							"—Ⓕ– url_info ( ) { … } — function",
							"—Ⓕ– url_location ( ) { … } — function",
							"—Ⓕ– url_query ( ) { … } — function",
							"—Ⓕ– url_fromobj ( ) { … } — function",
							"—Ⓕ– url_fromvalue ( ) { … } — function",
							"—Ⓕ– url_fromwsi ( ) { … } — function",
							"—Ⓕ– url_dump ( ) { … } — function",
							"—Ⓕ– query_object ( ) { … } — function",
							"—Ⓕ– query_from ( ) { … } — function",
							"—Ⓕ– minnet_url_wrap ( ) { … } — function",
							"—Ⓕ– url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_method ( ) { … } — function",
							"—Ⓕ– minnet_url_from ( ) { … } — function",
							"—Ⓕ– minnet_url_inspect ( ) { … } — function",
							"—Ⓕ– minnet_url_constructor ( ) { … } — function",
							"—Ⓕ– minnet_url_init ( ) { … } — function",
							"—Ⓕ– url_path ( ) { … } — function",
							"—Ⓕ– url_valid ( ) { … } — function",
							"—Ⓕ– url_protocol ( ) { … } — function",
							"—Ⓕ– url_dup ( ) { … } — function",
							"—Ⓕ– url_clone ( ) { … } — function",
							"—Ⓕ– url_copy ( ) { … } — function",
							"—Ⓕ– url_string ( ) { … } — function",
							"—Ⓕ– minnet_url_init ( ) { … } — function",
							"—Ⓕ– minnet_url_data ( ) { … } — function",
							"—Ⓕ– minnet_url_data2 ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB0BgAA4oCU4pK74oCTIHN0cmxjcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9kZWZhdWx0X3BvcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9pc190bHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2xlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc2V0X3Byb3RvY29sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2luZm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbG9jYXRpb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcXVlcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPoGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1324,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.c",
						"symkeys":
						[
							[
								116,
								123
							],
							[
								605,
								620
							],
							[
								811,
								826
							],
							[
								971,
								992
							],
							[
								1221,
								1236
							],
							[
								1422,
								1430
							],
							[
								1828,
								1837
							],
							[
								2588,
								2598
							],
							[
								2722,
								2731
							],
							[
								3608,
								3618
							],
							[
								4447,
								4457
							],
							[
								4801,
								4809
							],
							[
								4979,
								4990
							],
							[
								5173,
								5189
							],
							[
								5331,
								5339
							],
							[
								6724,
								6736
							],
							[
								6934,
								6943
							],
							[
								7152,
								7163
							],
							[
								7908,
								7921
							],
							[
								8337,
								8348
							],
							[
								8933,
								8941
							],
							[
								9138,
								9150
							],
							[
								9886,
								9896
							],
							[
								10961,
								10976
							],
							[
								11364,
								11371
							],
							[
								11524,
								11538
							],
							[
								11734,
								11748
							],
							[
								12563,
								12577
							],
							[
								14132,
								14149
							],
							[
								14580,
								14595
							],
							[
								14915,
								14933
							],
							[
								15874,
								15896
							],
							[
								16751,
								16771
							],
							[
								17909,
								17924
							]
						],
						"symlist":
						[
							"—Ⓕ– strlcpy ( ) { … } — function",
							"—Ⓕ– protocol_number ( ) { … } — function",
							"—Ⓕ– protocol_string ( ) { … } — function",
							"—Ⓕ– protocol_default_port ( ) { … } — function",
							"—Ⓕ– protocol_is_tls ( ) { … } — function",
							"—Ⓕ– url_init ( ) { … } — function",
							"—Ⓕ– url_parse ( ) { … } — function",
							"—Ⓕ– url_create ( ) { … } — function",
							"—Ⓕ– url_print ( ) { … } — function",
							"—Ⓕ– url_format ( ) { … } — function",
							"—Ⓕ– url_length ( ) { … } — function",
							"—Ⓕ– url_free ( ) { … } — function",
							"—Ⓕ– url_free_rt ( ) { … } — function",
							"—Ⓕ– url_set_protocol ( ) { … } — function",
							"—Ⓕ– url_info ( ) { … } — function",
							"—Ⓕ– url_location ( ) { … } — function",
							"—Ⓕ– url_query ( ) { … } — function",
							"—Ⓕ– url_fromobj ( ) { … } — function",
							"—Ⓕ– url_fromvalue ( ) { … } — function",
							"—Ⓕ– url_fromwsi ( ) { … } — function",
							"—Ⓕ– url_dump ( ) { … } — function",
							"—Ⓕ– query_object ( ) { … } — function",
							"—Ⓕ– query_from ( ) { … } — function",
							"—Ⓕ– minnet_url_wrap ( ) { … } — function",
							"—Ⓕ– url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_new ( ) { … } — function",
							"—Ⓕ– minnet_url_get ( ) { … } — function",
							"—Ⓕ– minnet_url_set ( ) { … } — function",
							"—Ⓕ– minnet_url_method ( ) { … } — function",
							"—Ⓕ– minnet_url_from ( ) { … } — function",
							"—Ⓕ– minnet_url_inspect ( ) { … } — function",
							"—Ⓕ– minnet_url_constructor ( ) { … } — function",
							"—Ⓕ– minnet_url_finalizer ( ) { … } — function",
							"—Ⓕ– minnet_url_init ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADACAAAICDik4IgIE1JTk5FVF9VUkxfSCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTiSAgTWlubmV0UHJvdG9jb2wgOyDigJQgdHlwZWRlZgrigJTikrvigJMgcHJvdG9jb2xfbnVtYmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvdG9jb2xfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvdG9jb2xfZGVmYXVsdF9wb3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvdG9jb2xfaXNfdGxzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgTWlubmV0VVJMIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIHByb3RvY29sX251bWJlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3RvY29sX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3RvY29sX2RlZmF1bHRfcG9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb3RvY29sX2lzX3RscyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX3BhcnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2NyZWF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wcmludCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mb3JtYXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbGVuZ3RoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9zZXRfcHJvdG9jb2wgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5mbyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9sb2NhdGlvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9xdWVyeSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2Zyb212YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9td3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2R1bXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBxdWVyeV9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBxdWVyeV9mcm9tICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF93cmFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9tZXRob2QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2Zyb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2luc3BlY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX3BhdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfdmFsaWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJvdG9jb2wgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2Nsb25lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2NvcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9kYXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9kYXRhMiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACAFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1325,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
						"symkeys":
						[
							[
								166,
								186
							],
							[
								257,
								275
							],
							[
								300,
								311
							]
						],
						"symlist":
						[
							"—Ⓕ– http_server_callback ( ) { … } — function",
							"—Ⓕ– lws_hdr_simple_ptr ( ) { … } — function",
							"—Ⓕ– ws_callback ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB0BgAA4oCU4pK74oCTIHN0cmxjcHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9kZWZhdWx0X3BvcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm90b2NvbF9pc190bHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9wYXJzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcHJpbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZm9ybWF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2xlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfc2V0X3Byb3RvY29sICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2luZm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfbG9jYXRpb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcXVlcnkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9mcm9tdmFsdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfb2JqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVlcnlfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVybF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3VybF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX21ldGhvZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5zcGVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJsX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF91cmxfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAH4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1326,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
						"symkeys":
						[
							[
								166,
								186
							],
							[
								257,
								275
							],
							[
								300,
								311
							]
						],
						"symlist":
						[
							"—Ⓕ– http_server_callback ( ) { … } — function",
							"—Ⓕ– lws_hdr_simple_ptr ( ) { … } — function",
							"—Ⓕ– ws_callback ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACcAAAA4oCU4pK74oCTIGh0dHBfc2VydmVyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzX2hkcl9zaW1wbGVfcHRyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAB+AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1327,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
						"symkeys":
						[
							[
								166,
								186
							],
							[
								257,
								275
							],
							[
								300,
								311
							]
						],
						"symlist":
						[
							"—Ⓕ– http_server_callback ( ) { … } — function",
							"—Ⓕ– lws_hdr_simple_ptr ( ) { … } — function",
							"—Ⓕ– ws_callback ( ) { … } — function"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACcAAAA4oCU4pK74oCTIGh0dHBfc2VydmVyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzX2hkcl9zaW1wbGVfcHRyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAB+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnAAAAOKAlOKSu+KAkyBodHRwX3NlcnZlcl9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGx3c19oZHJfc2ltcGxlX3B0ciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAfgAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1328,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACcAAAA4oCU4pK74oCTIGh0dHBfc2VydmVyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzX2hkcl9zaW1wbGVfcHRyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1329,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-write.h",
						"symkeys":
						[
							[
								1357,
								1370
							],
							[
								1434,
								1447
							],
							[
								1510,
								1523
							],
							[
								1598,
								1606
							],
							[
								1731,
								1738
							],
							[
								1832,
								1859
							],
							[
								1876,
								1904
							],
							[
								1916,
								1929
							],
							[
								2095,
								2113
							],
							[
								4228,
								4246
							],
							[
								4257,
								4260
							],
							[
								8776,
								8785
							],
							[
								8930,
								8944
							],
							[
								9453,
								9471
							],
							[
								10160,
								10189
							]
						],
						"symlist":
						[
							" Ⓜ  LWS_SIZEOFPTR … — macro object",
							" Ⓜ  _LWS_PAD_SIZE … — macro object",
							" Ⓜ  _LWS_PAD_SIZE … — macro object",
							"—Ⓜ– _LWS_PAD ( ) … — macro function",
							" Ⓜ  LWS_PRE … — macro object",
							" Ⓜ  LWS_SEND_BUFFER_PRE_PADDING … — macro object",
							" Ⓜ  LWS_SEND_BUFFER_POST_PADDING … — macro object",
							" Ⓜ  LWS_WRITE_RAW … — macro object",
							"lws_write_protocol",
							"lws_write_passthru",
							"lws",
							"—Ⓕ– lws_write ( ) { … } — function",
							"—Ⓜ– lws_write_http ( ) … — macro function",
							"—Ⓕ– lws_write_ws_flags ( ) { … } — function",
							"—Ⓕ– lws_raw_transaction_completed ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAFgIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1330,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAByAgAAICDik4IgIExXU19TSVpFT0ZQVFIg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIF9MV1NfUEFEX1NJWkUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIF9MV1NfUEFEX1NJWkUg4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pOC4oCTIF9MV1NfUEFEICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCiAg4pOCICBMV1NfUFJFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBMV1NfU0VORF9CVUZGRVJfUFJFX1BBRERJTkcg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIExXU19TRU5EX0JVRkZFUl9QT1NUX1BBRERJTkcg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIExXU19XUklURV9SQVcg4oCmIOKAlCBtYWNybyBvYmplY3QKICBsd3Nfd3JpdGVfcHJvdG9jb2wKICBsd3Nfd3JpdGVfcGFzc3RocnUKICBsd3MK4oCU4pK74oCTIGx3c193cml0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pOC4oCTIGx3c193cml0ZV9odHRwICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKSu+KAkyBsd3Nfd3JpdGVfd3NfZmxhZ3MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBsd3NfcmF3X3RyYW5zYWN0aW9uX2NvbXBsZXRlZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1331,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-write.h",
						"symkeys":
						[
							[
								1357,
								1370
							],
							[
								1434,
								1447
							],
							[
								1510,
								1523
							],
							[
								1598,
								1606
							],
							[
								1731,
								1738
							],
							[
								1832,
								1859
							],
							[
								1876,
								1904
							],
							[
								1916,
								1929
							],
							[
								2095,
								2113
							],
							[
								4228,
								4246
							],
							[
								4257,
								4260
							],
							[
								8776,
								8785
							],
							[
								8930,
								8944
							],
							[
								9453,
								9471
							],
							[
								10160,
								10189
							]
						],
						"symlist":
						[
							" Ⓜ  LWS_SIZEOFPTR … — macro object",
							" Ⓜ  _LWS_PAD_SIZE … — macro object",
							" Ⓜ  _LWS_PAD_SIZE … — macro object",
							"—Ⓜ– _LWS_PAD ( ) … — macro function",
							" Ⓜ  LWS_PRE … — macro object",
							" Ⓜ  LWS_SEND_BUFFER_PRE_PADDING … — macro object",
							" Ⓜ  LWS_SEND_BUFFER_POST_PADDING … — macro object",
							" Ⓜ  LWS_WRITE_RAW … — macro object",
							"lws_write_protocol",
							"lws_write_passthru",
							"lws",
							"—Ⓕ– lws_write ( ) { … } — function",
							"—Ⓜ– lws_write_http ( ) … — macro function",
							"—Ⓕ– lws_write_ws_flags ( ) { … } — function",
							"—Ⓕ– lws_raw_transaction_completed ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAFgIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1332,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c.orig",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAByAgAAICDik4IgIExXU19TSVpFT0ZQVFIg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIF9MV1NfUEFEX1NJWkUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIF9MV1NfUEFEX1NJWkUg4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pOC4oCTIF9MV1NfUEFEICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCiAg4pOCICBMV1NfUFJFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBMV1NfU0VORF9CVUZGRVJfUFJFX1BBRERJTkcg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIExXU19TRU5EX0JVRkZFUl9QT1NUX1BBRERJTkcg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIExXU19XUklURV9SQVcg4oCmIOKAlCBtYWNybyBvYmplY3QKICBsd3Nfd3JpdGVfcHJvdG9jb2wKICBsd3Nfd3JpdGVfcGFzc3RocnUKICBsd3MK4oCU4pK74oCTIGx3c193cml0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pOC4oCTIGx3c193cml0ZV9odHRwICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKSu+KAkyBsd3Nfd3JpdGVfd3NfZmxhZ3MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBsd3NfcmF3X3RyYW5zYWN0aW9uX2NvbXBsZXRlZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1333,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								807,
								820
							],
							[
								1203,
								1209
							],
							[
								1661,
								1675
							],
							[
								2297,
								2308
							],
							[
								2418,
								2429
							],
							[
								2854,
								2862
							],
							[
								2949,
								2959
							],
							[
								3088,
								3095
							],
							[
								3233,
								3239
							],
							[
								3327,
								3337
							],
							[
								3636,
								3646
							],
							[
								4513,
								4527
							],
							[
								4761,
								4778
							],
							[
								5355,
								5369
							],
							[
								6429,
								6446
							],
							[
								8105,
								8119
							],
							[
								8763,
								8777
							],
							[
								9421,
								9436
							],
							[
								10597,
								10610
							],
							[
								13146,
								13159
							],
							[
								13506,
								13527
							],
							[
								14711,
								14730
							]
						],
						"symlist":
						[
							"—Ⓕ– minnet_ws_new ( ) { … } — function",
							"—Ⓕ– ws_new ( ) { … } — function",
							"—Ⓕ– opaque_free_rt ( ) { … } — function",
							"—Ⓕ– opaque_free ( ) { … } — function",
							"—Ⓕ– ws_clear_rt ( ) { … } — function",
							"—Ⓕ– ws_clear ( ) { … } — function",
							"—Ⓕ– ws_free_rt ( ) { … } — function",
							"—Ⓕ– ws_free ( ) { … } — function",
							"—Ⓕ– ws_dup ( ) { … } — function",
							"—Ⓕ– opaque_new ( ) { … } — function",
							"—Ⓕ– lws_opaque ( ) { … } — function",
							"—Ⓕ– minnet_ws_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ws_fromwsi ( ) { … } — function",
							"—Ⓕ– minnet_ws_send ( ) { … } — function",
							"—Ⓕ– minnet_ws_respond ( ) { … } — function",
							"—Ⓕ– minnet_ws_ping ( ) { … } — function",
							"—Ⓕ– minnet_ws_pong ( ) { … } — function",
							"—Ⓕ– minnet_ws_close ( ) { … } — function",
							"—Ⓕ– minnet_ws_get ( ) { … } — function",
							"—Ⓕ– minnet_ws_set ( ) { … } — function",
							"—Ⓕ– minnet_ws_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ws_finalizer ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAUAMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1344,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.h",
						"symkeys":
						[
							[
								33,
								49
							],
							[
								190,
								203
							],
							[
								227,
								240
							],
							[
								397,
								410
							],
							[
								418,
								432
							],
							[
								493,
								505
							],
							[
								546,
								558
							],
							[
								620,
								631
							],
							[
								696,
								707
							],
							[
								740,
								755
							],
							[
								798,
								813
							],
							[
								855,
								870
							],
							[
								910,
								922
							],
							[
								945,
								958
							],
							[
								993,
								1009
							],
							[
								1044,
								1056
							],
							[
								1091,
								1106
							],
							[
								1151,
								1163
							],
							[
								1216,
								1235
							],
							[
								1288,
								1314
							],
							[
								1376,
								1394
							],
							[
								1445,
								1464
							],
							[
								1808,
								1827
							],
							[
								1933,
								1953
							],
							[
								2072,
								2093
							],
							[
								2668,
								2679
							]
						],
						"symlist":
						[
							" Ⓜ  MINNET_REQUEST_H … — macro object",
							"—Ⓕ– method_string ( ) { … } — function",
							"—Ⓕ– method_number ( ) { … } — function",
							" Ⓣ  MinnetRequest ; — typedef",
							"—Ⓕ– request_format ( ) { … } — function",
							"—Ⓕ– request_dump ( ) { … } — function",
							"—Ⓕ– request_init ( ) { … } — function",
							"—Ⓕ– request_new ( ) { … } — function",
							"—Ⓕ– request_dup ( ) { … } — function",
							"—Ⓕ– request_fromobj ( ) { … } — function",
							"—Ⓕ– request_fromwsi ( ) { … } — function",
							"—Ⓕ– request_fromurl ( ) { … } — function",
							"—Ⓕ– request_zero ( ) { … } — function",
							"—Ⓕ– request_clear ( ) { … } — function",
							"—Ⓕ– request_clear_rt ( ) { … } — function",
							"—Ⓕ– request_free ( ) { … } — function",
							"—Ⓕ– request_free_rt ( ) { … } — function",
							"—Ⓕ– request_from ( ) { … } — function",
							"—Ⓕ– minnet_request_from ( ) { … } — function",
							"—Ⓕ– minnet_request_constructor ( ) { … } — function",
							"—Ⓕ– minnet_request_new ( ) { … } — function",
							"—Ⓕ– minnet_request_wrap ( ) { … } — function",
							"—Ⓕ– minnet_request_data ( ) { … } — function",
							"—Ⓕ– minnet_request_data2 ( ) { … } — function",
							"—Ⓕ– minnet_uri_and_method ( ) { … } — function",
							"—Ⓕ– method_name ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAsBAAA4oCU4pK74oCTIG1pbm5ldF93c19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvcGFxdWVfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG9wYXF1ZV9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgb3BhcXVlX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGx3c19vcGFxdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3Nfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19mcm9td3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3NlbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19waW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3BvbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xvc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAhBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wEAAAAAAADtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1345,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								807,
								820
							],
							[
								1203,
								1209
							],
							[
								1661,
								1675
							],
							[
								2297,
								2308
							],
							[
								2418,
								2429
							],
							[
								2854,
								2862
							],
							[
								2949,
								2959
							],
							[
								3088,
								3095
							],
							[
								3233,
								3239
							],
							[
								3327,
								3337
							],
							[
								3636,
								3646
							],
							[
								4513,
								4527
							],
							[
								4761,
								4778
							],
							[
								5355,
								5369
							],
							[
								6429,
								6446
							],
							[
								8105,
								8119
							],
							[
								8763,
								8777
							],
							[
								9421,
								9436
							],
							[
								10597,
								10610
							],
							[
								13146,
								13159
							],
							[
								13506,
								13527
							],
							[
								14711,
								14730
							]
						],
						"symlist":
						[
							"—Ⓕ– minnet_ws_new ( ) { … } — function",
							"—Ⓕ– ws_new ( ) { … } — function",
							"—Ⓕ– opaque_free_rt ( ) { … } — function",
							"—Ⓕ– opaque_free ( ) { … } — function",
							"—Ⓕ– ws_clear_rt ( ) { … } — function",
							"—Ⓕ– ws_clear ( ) { … } — function",
							"—Ⓕ– ws_free_rt ( ) { … } — function",
							"—Ⓕ– ws_free ( ) { … } — function",
							"—Ⓕ– ws_dup ( ) { … } — function",
							"—Ⓕ– opaque_new ( ) { … } — function",
							"—Ⓕ– lws_opaque ( ) { … } — function",
							"—Ⓕ– minnet_ws_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ws_fromwsi ( ) { … } — function",
							"—Ⓕ– minnet_ws_send ( ) { … } — function",
							"—Ⓕ– minnet_ws_respond ( ) { … } — function",
							"—Ⓕ– minnet_ws_ping ( ) { … } — function",
							"—Ⓕ– minnet_ws_pong ( ) { … } — function",
							"—Ⓕ– minnet_ws_close ( ) { … } — function",
							"—Ⓕ– minnet_ws_get ( ) { … } — function",
							"—Ⓕ– minnet_ws_set ( ) { … } — function",
							"—Ⓕ– minnet_ws_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ws_finalizer ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAbBQAAICDik4IgIE1JTk5FVF9SRVFVRVNUX0gg4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIG1ldGhvZF9zdHJpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtZXRob2RfbnVtYmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgTWlubmV0UmVxdWVzdCA7IOKAlCB0eXBlZGVmCuKAlOKSu+KAkyByZXF1ZXN0X2Zvcm1hdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9kdXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2Zyb21vYmogKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2Zyb213c2kgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2Zyb211cmwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2NsZWFyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9jbGVhcl9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZnJvbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X2Zyb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmVxdWVzdF9jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXF1ZXN0X3dyYXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfcmVxdWVzdF9kYXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfZGF0YTIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfdXJpX2FuZF9tZXRob2QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtZXRob2RfbmFtZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAFADAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1346,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAsBAAA4oCU4pK74oCTIG1pbm5ldF93c19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBvcGFxdWVfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG9wYXF1ZV9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2xlYXJfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgb3BhcXVlX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGx3c19vcGFxdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3Nfd3JhcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19mcm9td3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3NlbmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19waW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3BvbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xvc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1347,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								268,
								303
							],
							[
								443,
								457
							],
							[
								475,
								497
							],
							[
								606,
								610
							],
							[
								1758,
								1785
							],
							[
								1993,
								2030
							],
							[
								2096,
								2106
							],
							[
								2154,
								2164
							],
							[
								2204,
								2209
							],
							[
								2263,
								2288
							],
							[
								2837,
								2865
							],
							[
								3218,
								3221
							],
							[
								3239,
								3259
							],
							[
								3629,
								3634
							],
							[
								3802,
								3809
							],
							[
								3954,
								3960
							],
							[
								3967,
								3976
							],
							[
								4082,
								4097
							],
							[
								4282,
								4304
							],
							[
								4547,
								4557
							],
							[
								4909,
								4923
							],
							[
								5632,
								5679
							],
							[
								5893,
								5909
							],
							[
								6744,
								6756
							],
							[
								7119,
								7137
							],
							[
								7734,
								7768
							],
							[
								7971,
								7976
							],
							[
								8107,
								8124
							],
							[
								8560,
								8576
							],
							[
								8708,
								8726
							],
							[
								9089,
								9107
							],
							[
								9207,
								9224
							],
							[
								9301,
								9306
							],
							[
								9358,
								9364
							],
							[
								9410,
								9430
							]
						],
						"symlist":
						[
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>",
							"function FromDomain(buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt2)",
							"() =>",
							" str =>",
							"help()",
							"show(arg)",
							"handleCmd(data)",
							"function main(...args)",
							" (a, v) =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"function* ()",
							"onConnect(ws, req)",
							"onClose(ws, status, reason, error)",
							"() =>",
							"onHttp(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg)",
							"onError(ws, error)",
							"get connections()",
							"() =>",
							"err =>",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAMAIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1348,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								268,
								303
							],
							[
								443,
								457
							],
							[
								475,
								497
							],
							[
								606,
								610
							],
							[
								1758,
								1785
							],
							[
								1993,
								2030
							],
							[
								2096,
								2106
							],
							[
								2154,
								2164
							],
							[
								2204,
								2209
							],
							[
								2263,
								2288
							],
							[
								2837,
								2865
							],
							[
								3218,
								3221
							],
							[
								3239,
								3259
							],
							[
								3629,
								3634
							],
							[
								3802,
								3809
							],
							[
								3954,
								3960
							],
							[
								3967,
								3976
							],
							[
								4082,
								4097
							],
							[
								4282,
								4304
							],
							[
								4547,
								4557
							],
							[
								4909,
								4923
							],
							[
								5632,
								5679
							],
							[
								5893,
								5909
							],
							[
								6744,
								6756
							],
							[
								7119,
								7137
							],
							[
								7734,
								7768
							],
							[
								7971,
								7976
							],
							[
								8107,
								8124
							],
							[
								8560,
								8576
							],
							[
								8708,
								8726
							],
							[
								9089,
								9107
							],
							[
								9207,
								9224
							],
							[
								9301,
								9306
							],
							[
								9358,
								9364
							],
							[
								9410,
								9430
							]
						],
						"symlist":
						[
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>",
							"function FromDomain(buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt2)",
							"() =>",
							" str =>",
							"help()",
							"show(arg)",
							"handleCmd(data)",
							"function main(...args)",
							" (a, v) =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"function* ()",
							"onConnect(ws, req)",
							"onClose(ws, status, reason, error)",
							"() =>",
							"onHttp(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg)",
							"onError(ws, error)",
							"get connections()",
							"() =>",
							"err =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAwAgAAR2V0T3B0KG9wdGlvbnMgPSB7fSwgYXJncykKICBmaW5kT3B0ID0gYSA9PgooW29wdG5hbWUsIG9wdGlvbl0pID0+CiAgbyA9PgpGcm9tRG9tYWluKGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQyKQooKSA9PgogIHN0ciA9PgogIGhlbHAoKQogIHNob3coYXJnKQogIGhhbmRsZUNtZChkYXRhKQogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KKCkKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvbkNsb3NlKHdzLCBzdGF0dXMsIHJlYXNvbiwgZXJyb3IpCigpID0+CiAgb25IdHRwKHJlcSwgcmVzcCkKICBvbkZkKGZkLCByZCwgd3IpCiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25FcnJvcih3cywgZXJyb3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKKCkgPT4KICBlcnIgPT4KICBxdWl0KHdoeSkAAAAAAAAAADACAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1349,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								268,
								303
							],
							[
								443,
								457
							],
							[
								475,
								497
							],
							[
								606,
								610
							],
							[
								1758,
								1785
							],
							[
								1993,
								2030
							],
							[
								2096,
								2106
							],
							[
								2154,
								2164
							],
							[
								2204,
								2209
							],
							[
								2263,
								2288
							],
							[
								2837,
								2865
							],
							[
								3218,
								3221
							],
							[
								3239,
								3259
							],
							[
								3629,
								3634
							],
							[
								3802,
								3809
							],
							[
								3954,
								3960
							],
							[
								3967,
								3976
							],
							[
								4082,
								4097
							],
							[
								4282,
								4304
							],
							[
								4547,
								4557
							],
							[
								4909,
								4923
							],
							[
								5632,
								5679
							],
							[
								5893,
								5909
							],
							[
								6744,
								6756
							],
							[
								7119,
								7137
							],
							[
								7734,
								7768
							],
							[
								7971,
								7976
							],
							[
								8107,
								8124
							],
							[
								8560,
								8576
							],
							[
								8708,
								8726
							],
							[
								9089,
								9107
							],
							[
								9207,
								9224
							],
							[
								9301,
								9306
							],
							[
								9358,
								9364
							],
							[
								9410,
								9430
							]
						],
						"symlist":
						[
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>",
							"function FromDomain(buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt2)",
							"() =>",
							" str =>",
							"help()",
							"show(arg)",
							"handleCmd(data)",
							"function main(...args)",
							" (a, v) =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"function* ()",
							"onConnect(ws, req)",
							"onClose(ws, status, reason, error)",
							"() =>",
							"onHttp(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg)",
							"onError(ws, error)",
							"get connections()",
							"() =>",
							"err =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAwAgAAR2V0T3B0KG9wdGlvbnMgPSB7fSwgYXJncykKICBmaW5kT3B0ID0gYSA9PgooW29wdG5hbWUsIG9wdGlvbl0pID0+CiAgbyA9PgpGcm9tRG9tYWluKGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQyKQooKSA9PgogIHN0ciA9PgogIGhlbHAoKQogIHNob3coYXJnKQogIGhhbmRsZUNtZChkYXRhKQogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KKCkKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvbkNsb3NlKHdzLCBzdGF0dXMsIHJlYXNvbiwgZXJyb3IpCigpID0+CiAgb25IdHRwKHJlcSwgcmVzcCkKICBvbkZkKGZkLCByZCwgd3IpCiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25FcnJvcih3cywgZXJyb3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKKCkgPT4KICBlcnIgPT4KICBxdWl0KHdoeSkAAAAAAAAAADACAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1350,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAwAgAAR2V0T3B0KG9wdGlvbnMgPSB7fSwgYXJncykKICBmaW5kT3B0ID0gYSA9PgooW29wdG5hbWUsIG9wdGlvbl0pID0+CiAgbyA9PgpGcm9tRG9tYWluKGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQyKQooKSA9PgogIHN0ciA9PgogIGhlbHAoKQogIHNob3coYXJnKQogIGhhbmRsZUNtZChkYXRhKQogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KKCkKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvbkNsb3NlKHdzLCBzdGF0dXMsIHJlYXNvbiwgZXJyb3IpCigpID0+CiAgb25IdHRwKHJlcSwgcmVzcCkKICBvbkZkKGZkLCByZCwgd3IpCiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25FcnJvcih3cywgZXJyb3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKKCkgPT4KICBlcnIgPT4KICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1351,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "minnet-client.h",
			"settings":
			{
				"buffer_size": 1042,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADjBAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIE1pbm5ldENhbGxiYWNrcyBjYjsKICBKU1ZhbHVlIGhlYWRlcnMsIGJvZHksIG5leHQ7CiAgTWlubmV0VVJMIHVybDsKICBNaW5uZXRTZXNzaW9uIHNlc3Npb247CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxdWVzdDsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcG9uc2U7CiAgc3RydWN0IGx3c19jbGllbnRfY29ubmVjdF9pbmZvIGNvbm5lY3RfaW5mbzsKICBSZXNvbHZlRnVuY3Rpb25zIHByb21pc2U7Cn0gTWlubmV0Q2xpZW50OwoKc3RydWN0IGNsaWVudF9jbG9zdXJlKiBjbGllbnRfY2xvc3VyZV9uZXcoSlNDb250ZXh0Kik7CnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfZHVwKHN0cnVjdCBjbGllbnRfY2xvc3VyZSopOwp2b2lkIGNsaWVudF9mcmVlKE1pbm5ldENsaWVudCopOwpNaW5uZXRDbGllbnQqIGNsaWVudF9kdXAoTWlubmV0Q2xpZW50Kik7CkpTVmFsdWUgbWlubmV0X2NsaWVudF9jbG9zdXJlKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10sIGludCBtYWdpYywgdm9pZCogcHRyKTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50KEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwp1aW50OF90KiBzY2FuX2JhY2t3YXJkcyh1aW50OF90KiwgdWludDhfdCk7CgpzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUgewogIGludCByZWZfY291bnQ7CiAgTWlubmV0Q2xpZW50KiBjbGllbnQ7Cn07CgpzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqIGNsaWVudF9jbG9zdXJlX25ldyhKU0NvbnRleHQqKTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IGNsaWVudF9jb250ZXh0Kgpsd3NfY2xpZW50KHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfY29udGV4dF91c2VyKGx3c19nZXRfY29udGV4dCh3c2kpKTsKfQojZW5kaWYKAAAAAAAAAADjBAAAAAAAAAAAAAA",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADjBAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIE1pbm5ldENhbGxiYWNrcyBjYjsKICBKU1ZhbHVlIGhlYWRlcnMsIGJvZHksIG5leHQ7CiAgTWlubmV0VVJMIHVybDsKICBNaW5uZXRTZXNzaW9uIHNlc3Npb247CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxdWVzdDsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcG9uc2U7CiAgc3RydWN0IGx3c19jbGllbnRfY29ubmVjdF9pbmZvIGNvbm5lY3RfaW5mbzsKICBSZXNvbHZlRnVuY3Rpb25zIHByb21pc2U7Cn0gTWlubmV0Q2xpZW50OwoKc3RydWN0IGNsaWVudF9jbG9zdXJlKiBjbGllbnRfY2xvc3VyZV9uZXcoSlNDb250ZXh0Kik7CnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfZHVwKHN0cnVjdCBjbGllbnRfY2xvc3VyZSopOwp2b2lkIGNsaWVudF9mcmVlKE1pbm5ldENsaWVudCopOwpNaW5uZXRDbGllbnQqIGNsaWVudF9kdXAoTWlubmV0Q2xpZW50Kik7CkpTVmFsdWUgbWlubmV0X2NsaWVudF9jbG9zdXJlKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10sIGludCBtYWdpYywgdm9pZCogcHRyKTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50KEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwp1aW50OF90KiBzY2FuX2JhY2t3YXJkcyh1aW50OF90KiwgdWludDhfdCk7CgpzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUgewogIGludCByZWZfY291bnQ7CiAgTWlubmV0Q2xpZW50KiBjbGllbnQ7Cn07CgpzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqIGNsaWVudF9jbG9zdXJlX25ldyhKU0NvbnRleHQqKTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IGNsaWVudF9jb250ZXh0Kgpsd3NfY2xpZW50KHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfY29udGV4dF91c2VyKGx3c19nZXRfY29udGV4dCh3c2kpKTsKfQojZW5kaWYKAAAAAAAAAADjBAAAAAAAAAAAAAA",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJIBAAAAAAAAkwEAAAAAAAAAAAAAkwEAAAAAAACUAQAAAAAAAAAAAAA",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlBAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIE1pbm5ldENhbGxiYWNrcyBjYjsKICBKU1ZhbHVlIGhlYWRlcnMsIGJvZHksIG5leHQ7CiAgLy9NaW5uZXRVUkwgdXJsOwogIE1pbm5ldFNlc3Npb24gc2Vzc2lvbjsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXF1ZXN0OwogIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwb25zZTsKICBzdHJ1Y3QgbHdzX2NsaWVudF9jb25uZWN0X2luZm8gY29ubmVjdF9pbmZvOwogIFJlc29sdmVGdW5jdGlvbnMgcHJvbWlzZTsKfSBNaW5uZXRDbGllbnQ7CgpzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqIGNsaWVudF9jbG9zdXJlX25ldyhKU0NvbnRleHQqKTsKc3RydWN0IGNsaWVudF9jbG9zdXJlKiBjbGllbnRfY2xvc3VyZV9kdXAoc3RydWN0IGNsaWVudF9jbG9zdXJlKik7CnZvaWQgY2xpZW50X2ZyZWUoTWlubmV0Q2xpZW50Kik7Ck1pbm5ldENsaWVudCogY2xpZW50X2R1cChNaW5uZXRDbGllbnQqKTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50X2Nsb3N1cmUoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSwgaW50IG1hZ2ljLCB2b2lkKiBwdHIpOwpKU1ZhbHVlIG1pbm5ldF9jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSk7CnVpbnQ4X3QqIHNjYW5fYmFja3dhcmRzKHVpbnQ4X3QqLCB1aW50OF90KTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSB7CiAgaW50IHJlZl9jb3VudDsKICBNaW5uZXRDbGllbnQqIGNsaWVudDsKfTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfbmV3KEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSBzdHJ1Y3QgY2xpZW50X2NvbnRleHQqCmx3c19jbGllbnQoc3RydWN0IGx3cyogd3NpKSB7CiAgcmV0dXJuIGx3c19jb250ZXh0X3VzZXIobHdzX2dldF9jb250ZXh0KHdzaSkpOwp9CiNlbmRpZgoAAAAAAAAAAOYEAAAAAAAAAAAAAA",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmBAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIE1pbm5ldENhbGxiYWNrcyBjYjsKICBKU1ZhbHVlIGhlYWRlcnMsIGJvZHksIG5leHQ7CiAgLy8gTWlubmV0VVJMIHVybDsKICBNaW5uZXRTZXNzaW9uIHNlc3Npb247CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxdWVzdDsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcG9uc2U7CiAgc3RydWN0IGx3c19jbGllbnRfY29ubmVjdF9pbmZvIGNvbm5lY3RfaW5mbzsKICBSZXNvbHZlRnVuY3Rpb25zIHByb21pc2U7Cn0gTWlubmV0Q2xpZW50OwoKc3RydWN0IGNsaWVudF9jbG9zdXJlKiBjbGllbnRfY2xvc3VyZV9uZXcoSlNDb250ZXh0Kik7CnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfZHVwKHN0cnVjdCBjbGllbnRfY2xvc3VyZSopOwp2b2lkIGNsaWVudF9mcmVlKE1pbm5ldENsaWVudCopOwpNaW5uZXRDbGllbnQqIGNsaWVudF9kdXAoTWlubmV0Q2xpZW50Kik7CkpTVmFsdWUgbWlubmV0X2NsaWVudF9jbG9zdXJlKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10sIGludCBtYWdpYywgdm9pZCogcHRyKTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50KEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwp1aW50OF90KiBzY2FuX2JhY2t3YXJkcyh1aW50OF90KiwgdWludDhfdCk7CgpzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUgewogIGludCByZWZfY291bnQ7CiAgTWlubmV0Q2xpZW50KiBjbGllbnQ7Cn07CgpzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqIGNsaWVudF9jbG9zdXJlX25ldyhKU0NvbnRleHQqKTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IGNsaWVudF9jb250ZXh0Kgpsd3NfY2xpZW50KHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfY29udGV4dF91c2VyKGx3c19nZXRfY29udGV4dCh3c2kpKTsKfQojZW5kaWYKAAAAAAAAAADmBAAAAAAAAAAAAAA",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJABAAAAAAAAkQEAAAAAAAAAAAAAkQEAAAAAAACRAQAAAAAAAAQAAAAgIC8v",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJEBAAAAAAAAkgEAAAAAAAAAAAAAkgEAAAAAAACTAQAAAAAAAAAAAAA",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlBAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIE1pbm5ldENhbGxiYWNrcyBjYjsKICBKU1ZhbHVlIGhlYWRlcnMsIGJvZHksIG5leHQ7CiAvLyBNaW5uZXRVUkwgdXJsOwogIE1pbm5ldFNlc3Npb24gc2Vzc2lvbjsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXF1ZXN0OwogIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwb25zZTsKICBzdHJ1Y3QgbHdzX2NsaWVudF9jb25uZWN0X2luZm8gY29ubmVjdF9pbmZvOwogIFJlc29sdmVGdW5jdGlvbnMgcHJvbWlzZTsKfSBNaW5uZXRDbGllbnQ7CgpzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqIGNsaWVudF9jbG9zdXJlX25ldyhKU0NvbnRleHQqKTsKc3RydWN0IGNsaWVudF9jbG9zdXJlKiBjbGllbnRfY2xvc3VyZV9kdXAoc3RydWN0IGNsaWVudF9jbG9zdXJlKik7CnZvaWQgY2xpZW50X2ZyZWUoTWlubmV0Q2xpZW50Kik7Ck1pbm5ldENsaWVudCogY2xpZW50X2R1cChNaW5uZXRDbGllbnQqKTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50X2Nsb3N1cmUoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSwgaW50IG1hZ2ljLCB2b2lkKiBwdHIpOwpKU1ZhbHVlIG1pbm5ldF9jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSk7CnVpbnQ4X3QqIHNjYW5fYmFja3dhcmRzKHVpbnQ4X3QqLCB1aW50OF90KTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSB7CiAgaW50IHJlZl9jb3VudDsKICBNaW5uZXRDbGllbnQqIGNsaWVudDsKfTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfbmV3KEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSBzdHJ1Y3QgY2xpZW50X2NvbnRleHQqCmx3c19jbGllbnQoc3RydWN0IGx3cyogd3NpKSB7CiAgcmV0dXJuIGx3c19jb250ZXh0X3VzZXIobHdzX2dldF9jb250ZXh0KHdzaSkpOwp9CiNlbmRpZgoAAAAAAAAAAOUEAAAAAAAAAAAAAA",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"paste",
					null,
					"AQAAAB4DAAAAAAAARwMAAAAAAAAAAAAA",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					2,
					"left_delete",
					null,
					"AgAAAEYDAAAAAAAARgMAAAAAAAABAAAAe0UDAAAAAAAARQMAAAAAAAABAAAAIA",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEUDAAAAAAAARgMAAAAAAAAAAAAA",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEYDAAAAAAAARwMAAAAAAAAAAAAA",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"left_delete",
					null,
					"AQAAACMDAAAAAAAAIwMAAAAAAAABAAAACg",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACMDAAAAAAAAJAMAAAAAAAAAAAAA",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"left_delete",
					null,
					"AQAAAB0DAAAAAAAAHQMAAAAAAAABAAAACg",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAANBQAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIE1pbm5ldENhbGxiYWNrcyBjYjsKICBKU1ZhbHVlIGhlYWRlcnMsIGJvZHksIG5leHQ7CiAvLyBNaW5uZXRVUkwgdXJsOwogIE1pbm5ldFNlc3Npb24gc2Vzc2lvbjsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXF1ZXN0OwogIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwb25zZTsKICBzdHJ1Y3QgbHdzX2NsaWVudF9jb25uZWN0X2luZm8gY29ubmVjdF9pbmZvOwogIFJlc29sdmVGdW5jdGlvbnMgcHJvbWlzZTsKfSBNaW5uZXRDbGllbnQ7CgpzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqIGNsaWVudF9jbG9zdXJlX25ldyhKU0NvbnRleHQqKTsKc3RydWN0IGNsaWVudF9jbG9zdXJlKiBjbGllbnRfY2xvc3VyZV9kdXAoc3RydWN0IGNsaWVudF9jbG9zdXJlKik7CnZvaWQgY2xpZW50X2ZyZWUoTWlubmV0Q2xpZW50Kik7Ck1pbm5ldENsaWVudCogY2xpZW50X2R1cChNaW5uZXRDbGllbnQqKTsKdm9pZCBjbGllbnRfemVybyhNaW5uZXRDbGllbnQqIGNsaWVudCk7CkpTVmFsdWUgbWlubmV0X2NsaWVudF9jbG9zdXJlKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10sIGludCBtYWdpYywgdm9pZCogcHRyKTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50KEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwp1aW50OF90KiBzY2FuX2JhY2t3YXJkcyh1aW50OF90KiwgdWludDhfdCk7CgpzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUgewogIGludCByZWZfY291bnQ7CiAgTWlubmV0Q2xpZW50KiBjbGllbnQ7Cn07CgpzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqIGNsaWVudF9jbG9zdXJlX25ldyhKU0NvbnRleHQqKTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IGNsaWVudF9jb250ZXh0Kgpsd3NfY2xpZW50KHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfY29udGV4dF91c2VyKGx3c19nZXRfY29udGV4dCh3c2kpKTsKfQojZW5kaWYKAAAAAAAAAAAOBQAAAAAAAAAAAAA",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": "ib"
					},
					"AwAAAG0BAAAAAAAAbgEAAAAAAAAAAAAAbgEAAAAAAABuAQAAAAAAAAIAAABjYm4BAAAAAAAAbwEAAAAAAAAAAAAA",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					2,
					"left_delete",
					null,
					"AgAAAG4BAAAAAAAAbgEAAAAAAAABAAAAYm0BAAAAAAAAbQEAAAAAAAABAAAAaQ",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAAG0BAAAAAAAAbgEAAAAAAAAAAAAA",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAG4BAAAAAAAAbwEAAAAAAAAAAAAA",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"revert",
					null,
					"CQAAAAAAAAAAAAAAAAAAAAAAAAAOBQAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIE1pbm5ldENhbGxiYWNrcyBvbjsKICBKU1ZhbHVlIGhlYWRlcnMsIGJvZHksIG5leHQ7CiAgLy8gTWlubmV0VVJMIHVybDsKICBNaW5uZXRTZXNzaW9uIHNlc3Npb247CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxdWVzdDsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcG9uc2U7CiAgc3RydWN0IGx3c19jbGllbnRfY29ubmVjdF9pbmZvIGNvbm5lY3RfaW5mbzsKICBSZXNvbHZlRnVuY3Rpb25zIHByb21pc2U7Cn0gTWlubmV0Q2xpZW50OwoKc3RydWN0IGNsaWVudF9jbG9zdXJlKiBjbGllbnRfY2xvc3VyZV9uZXcoSlNDb250ZXh0Kik7CnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfZHVwKHN0cnVjdCBjbGllbnRfY2xvc3VyZSopOwp2b2lkIGNsaWVudF9mcmVlKE1pbm5ldENsaWVudCopOwpNaW5uZXRDbGllbnQqIGNsaWVudF9kdXAoTWlubmV0Q2xpZW50Kik7CnZvaWQgY2xpZW50X3plcm8oTWlubmV0Q2xpZW50KiBjbGllbnQpOwpKU1ZhbHVlIG1pbm5ldF9jbGllbnRfY2xvc3VyZShKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdLCBpbnQgbWFnaWMsIHZvaWQqIHB0cik7CkpTVmFsdWUgbWlubmV0X2NsaWVudChKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdKTsKdWludDhfdCogc2Nhbl9iYWNrd2FyZHModWludDhfdCosIHVpbnQ4X3QpOwoKc3RydWN0IGNsaWVudF9jbG9zdXJlIHsKICBpbnQgcmVmX2NvdW50OwogIE1pbm5ldENsaWVudCogY2xpZW50Owp9OwoKc3RydWN0IGNsaWVudF9jbG9zdXJlKiBjbGllbnRfY2xvc3VyZV9uZXcoSlNDb250ZXh0Kik7CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBjbGllbnRfY29udGV4dCoKbHdzX2NsaWVudChzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2NvbnRleHRfdXNlcihsd3NfZ2V0X2NvbnRleHQod3NpKSk7Cn0KI2VuZGlmCgAAAAAAAAAADgUAAAAAAAAAAAAAAAAAAAAAAAAOBQAAAAAAAAAAAAAAAAAAAAAAAA4FAAAAAAAAAAAAAAAAAAAAAAAADgUAAAAAAAAAAAAAAAAAAAAAAAAOBQAAAAAAAAAAAAAAAAAAAAAAAA4FAAAAAAAAAAAAAAAAAAAAAAAADgUAAAAAAAAAAAAAAAAAAAAAAAAOBQAAAAAAAAAAAAA",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1,
					1,
					"revert",
					null,
					"CwAAAAAAAAAAAAAAAAAAAAAAAAAOBQAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIE1pbm5ldENhbGxiYWNrcyBvbjsKICBKU1ZhbHVlIGhlYWRlcnMsIGJvZHksIG5leHQ7CiAgLy8gTWlubmV0VVJMIHVybDsKICBNaW5uZXRTZXNzaW9uIHNlc3Npb247CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxdWVzdDsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcG9uc2U7CiAgc3RydWN0IGx3c19jbGllbnRfY29ubmVjdF9pbmZvIGNvbm5lY3RfaW5mbzsKICBSZXNvbHZlRnVuY3Rpb25zIHByb21pc2U7Cn0gTWlubmV0Q2xpZW50OwoKc3RydWN0IGNsaWVudF9jbG9zdXJlKiBjbGllbnRfY2xvc3VyZV9uZXcoSlNDb250ZXh0Kik7CnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfZHVwKHN0cnVjdCBjbGllbnRfY2xvc3VyZSopOwp2b2lkIGNsaWVudF9mcmVlKE1pbm5ldENsaWVudCopOwpNaW5uZXRDbGllbnQqIGNsaWVudF9kdXAoTWlubmV0Q2xpZW50Kik7CnZvaWQgY2xpZW50X3plcm8oTWlubmV0Q2xpZW50KiBjbGllbnQpOwpKU1ZhbHVlIG1pbm5ldF9jbGllbnRfY2xvc3VyZShKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdLCBpbnQgbWFnaWMsIHZvaWQqIHB0cik7CkpTVmFsdWUgbWlubmV0X2NsaWVudChKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdKTsKdWludDhfdCogc2Nhbl9iYWNrd2FyZHModWludDhfdCosIHVpbnQ4X3QpOwoKc3RydWN0IGNsaWVudF9jbG9zdXJlIHsKICBpbnQgcmVmX2NvdW50OwogIE1pbm5ldENsaWVudCogY2xpZW50Owp9OwoKc3RydWN0IGNsaWVudF9jbG9zdXJlKiBjbGllbnRfY2xvc3VyZV9uZXcoSlNDb250ZXh0Kik7CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBjbGllbnRfY29udGV4dCoKbHdzX2NsaWVudChzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2NvbnRleHRfdXNlcihsd3NfZ2V0X2NvbnRleHQod3NpKSk7Cn0KI2VuZGlmCgAAAAAAAAAADgUAAAAAAAAAAAAAAAAAAAAAAAAOBQAAAAAAAAAAAAAAAAAAAAAAAA4FAAAAAAAAAAAAAAAAAAAAAAAADgUAAAAAAAAAAAAAAAAAAAAAAAAOBQAAAAAAAAAAAAAAAAAAAAAAAA4FAAAAAAAAAAAAAAAAAAAAAAAADgUAAAAAAAAAAAAAAAAAAAAAAAAOBQAAAAAAAAAAAAAAAAAAAAAAAA4FAAAAAAAAAAAAAAAAAAAAAAAADgUAAAAAAAAAAAAA",
					"EgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFoBAAAAAAAAWwEAAAAAAAAAAAAAWwEAAAAAAABdAQAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"paste",
					null,
					"AQAAAF0BAAAAAAAAbQEAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					32,
					4,
					"left_delete",
					null,
					"BAAAAGwBAAAAAAAAbAEAAAAAAAABAAAAaWsBAAAAAAAAawEAAAAAAAABAAAAc2oBAAAAAAAAagEAAAAAAAABAAAAd2kBAAAAAAAAaQEAAAAAAAABAAAAbA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "wdsi"
					},
					"BAAAAGkBAAAAAAAAagEAAAAAAAAAAAAAagEAAAAAAABrAQAAAAAAAAAAAABrAQAAAAAAAGwBAAAAAAAAAAAAAGwBAAAAAAAAbQEAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					34,
					3,
					"left_delete",
					null,
					"AwAAAGwBAAAAAAAAbAEAAAAAAAABAAAAaWsBAAAAAAAAawEAAAAAAAABAAAAc2oBAAAAAAAAagEAAAAAAAABAAAAZA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAGoBAAAAAAAAawEAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					36,
					1,
					"left_delete",
					null,
					"AQAAAGoBAAAAAAAAagEAAAAAAAABAAAAaQ",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "si;"
					},
					"AwAAAGoBAAAAAAAAawEAAAAAAAAAAAAAawEAAAAAAABsAQAAAAAAAAAAAABsAQAAAAAAAG0BAAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAhBQAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfbmV3KEpTQ29udGV4dCopOwpzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqIGNsaWVudF9jbG9zdXJlX2R1cChzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqKTsKdm9pZCBjbGllbnRfZnJlZShNaW5uZXRDbGllbnQqKTsKTWlubmV0Q2xpZW50KiBjbGllbnRfZHVwKE1pbm5ldENsaWVudCopOwp2b2lkIGNsaWVudF96ZXJvKE1pbm5ldENsaWVudCogY2xpZW50KTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50X2Nsb3N1cmUoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSwgaW50IG1hZ2ljLCB2b2lkKiBwdHIpOwpKU1ZhbHVlIG1pbm5ldF9jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSk7CnVpbnQ4X3QqIHNjYW5fYmFja3dhcmRzKHVpbnQ4X3QqLCB1aW50OF90KTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSB7CiAgaW50IHJlZl9jb3VudDsKICBNaW5uZXRDbGllbnQqIGNsaWVudDsKfTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfbmV3KEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSBzdHJ1Y3QgY2xpZW50X2NvbnRleHQqCmx3c19jbGllbnQoc3RydWN0IGx3cyogd3NpKSB7CiAgcmV0dXJuIGx3c19jb250ZXh0X3VzZXIobHdzX2dldF9jb250ZXh0KHdzaSkpOwp9CiNlbmRpZgoAAAAAAAAAACEFAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAhBQAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfbmV3KEpTQ29udGV4dCopOwpzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqIGNsaWVudF9jbG9zdXJlX2R1cChzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqKTsKdm9pZCBjbGllbnRfZnJlZShNaW5uZXRDbGllbnQqKTsKTWlubmV0Q2xpZW50KiBjbGllbnRfZHVwKE1pbm5ldENsaWVudCopOwp2b2lkIGNsaWVudF96ZXJvKE1pbm5ldENsaWVudCogY2xpZW50KTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50X2Nsb3N1cmUoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSwgaW50IG1hZ2ljLCB2b2lkKiBwdHIpOwpKU1ZhbHVlIG1pbm5ldF9jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSk7CnVpbnQ4X3QqIHNjYW5fYmFja3dhcmRzKHVpbnQ4X3QqLCB1aW50OF90KTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSB7CiAgaW50IHJlZl9jb3VudDsKICBNaW5uZXRDbGllbnQqIGNsaWVudDsKfTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfbmV3KEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSBzdHJ1Y3QgY2xpZW50X2NvbnRleHQqCmx3c19jbGllbnQoc3RydWN0IGx3cyogd3NpKSB7CiAgcmV0dXJuIGx3c19jb250ZXh0X3VzZXIobHdzX2dldF9jb250ZXh0KHdzaSkpOwp9CiNlbmRpZgoAAAAAAAAAACEFAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAhBQAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfbmV3KEpTQ29udGV4dCopOwpzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqIGNsaWVudF9jbG9zdXJlX2R1cChzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqKTsKdm9pZCBjbGllbnRfZnJlZShNaW5uZXRDbGllbnQqKTsKTWlubmV0Q2xpZW50KiBjbGllbnRfZHVwKE1pbm5ldENsaWVudCopOwp2b2lkIGNsaWVudF96ZXJvKE1pbm5ldENsaWVudCogY2xpZW50KTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50X2Nsb3N1cmUoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSwgaW50IG1hZ2ljLCB2b2lkKiBwdHIpOwpKU1ZhbHVlIG1pbm5ldF9jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSk7CnVpbnQ4X3QqIHNjYW5fYmFja3dhcmRzKHVpbnQ4X3QqLCB1aW50OF90KTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSB7CiAgaW50IHJlZl9jb3VudDsKICBNaW5uZXRDbGllbnQqIGNsaWVudDsKfTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfbmV3KEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSBzdHJ1Y3QgY2xpZW50X2NvbnRleHQqCmx3c19jbGllbnQoc3RydWN0IGx3cyogd3NpKSB7CiAgcmV0dXJuIGx3c19jb250ZXh0X3VzZXIobHdzX2dldF9jb250ZXh0KHdzaSkpOwp9CiNlbmRpZgoAAAAAAAAAACEFAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAhBQAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfbmV3KEpTQ29udGV4dCopOwpzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqIGNsaWVudF9jbG9zdXJlX2R1cChzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqKTsKdm9pZCBjbGllbnRfZnJlZShNaW5uZXRDbGllbnQqKTsKTWlubmV0Q2xpZW50KiBjbGllbnRfZHVwKE1pbm5ldENsaWVudCopOwp2b2lkIGNsaWVudF96ZXJvKE1pbm5ldENsaWVudCogY2xpZW50KTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50X2Nsb3N1cmUoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSwgaW50IG1hZ2ljLCB2b2lkKiBwdHIpOwpKU1ZhbHVlIG1pbm5ldF9jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSk7CnVpbnQ4X3QqIHNjYW5fYmFja3dhcmRzKHVpbnQ4X3QqLCB1aW50OF90KTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSB7CiAgaW50IHJlZl9jb3VudDsKICBNaW5uZXRDbGllbnQqIGNsaWVudDsKfTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfbmV3KEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSBzdHJ1Y3QgY2xpZW50X2NvbnRleHQqCmx3c19jbGllbnQoc3RydWN0IGx3cyogd3NpKSB7CiAgcmV0dXJuIGx3c19jb250ZXh0X3VzZXIobHdzX2dldF9jb250ZXh0KHdzaSkpOwp9CiNlbmRpZgoAAAAAAAAAACEFAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAhBQAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfbmV3KEpTQ29udGV4dCopOwpzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqIGNsaWVudF9jbG9zdXJlX2R1cChzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqKTsKdm9pZCBjbGllbnRfZnJlZShNaW5uZXRDbGllbnQqKTsKTWlubmV0Q2xpZW50KiBjbGllbnRfZHVwKE1pbm5ldENsaWVudCopOwp2b2lkIGNsaWVudF96ZXJvKE1pbm5ldENsaWVudCogY2xpZW50KTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50X2Nsb3N1cmUoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSwgaW50IG1hZ2ljLCB2b2lkKiBwdHIpOwpKU1ZhbHVlIG1pbm5ldF9jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSk7CnVpbnQ4X3QqIHNjYW5fYmFja3dhcmRzKHVpbnQ4X3QqLCB1aW50OF90KTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSB7CiAgaW50IHJlZl9jb3VudDsKICBNaW5uZXRDbGllbnQqIGNsaWVudDsKfTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfbmV3KEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSBzdHJ1Y3QgY2xpZW50X2NvbnRleHQqCmx3c19jbGllbnQoc3RydWN0IGx3cyogd3NpKSB7CiAgcmV0dXJuIGx3c19jb250ZXh0X3VzZXIobHdzX2dldF9jb250ZXh0KHdzaSkpOwp9CiNlbmRpZgoAAAAAAAAAACEFAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAhBQAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfbmV3KEpTQ29udGV4dCopOwpzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqIGNsaWVudF9jbG9zdXJlX2R1cChzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqKTsKdm9pZCBjbGllbnRfZnJlZShNaW5uZXRDbGllbnQqKTsKTWlubmV0Q2xpZW50KiBjbGllbnRfZHVwKE1pbm5ldENsaWVudCopOwp2b2lkIGNsaWVudF96ZXJvKE1pbm5ldENsaWVudCogY2xpZW50KTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50X2Nsb3N1cmUoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSwgaW50IG1hZ2ljLCB2b2lkKiBwdHIpOwpKU1ZhbHVlIG1pbm5ldF9jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSk7CnVpbnQ4X3QqIHNjYW5fYmFja3dhcmRzKHVpbnQ4X3QqLCB1aW50OF90KTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSB7CiAgaW50IHJlZl9jb3VudDsKICBNaW5uZXRDbGllbnQqIGNsaWVudDsKfTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfbmV3KEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSBzdHJ1Y3QgY2xpZW50X2NvbnRleHQqCmx3c19jbGllbnQoc3RydWN0IGx3cyogd3NpKSB7CiAgcmV0dXJuIGx3c19jb250ZXh0X3VzZXIobHdzX2dldF9jb250ZXh0KHdzaSkpOwp9CiNlbmRpZgoAAAAAAAAAACEFAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAhBQAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfbmV3KEpTQ29udGV4dCopOwpzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqIGNsaWVudF9jbG9zdXJlX2R1cChzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqKTsKdm9pZCBjbGllbnRfZnJlZShNaW5uZXRDbGllbnQqKTsKTWlubmV0Q2xpZW50KiBjbGllbnRfZHVwKE1pbm5ldENsaWVudCopOwp2b2lkIGNsaWVudF96ZXJvKE1pbm5ldENsaWVudCogY2xpZW50KTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50X2Nsb3N1cmUoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSwgaW50IG1hZ2ljLCB2b2lkKiBwdHIpOwpKU1ZhbHVlIG1pbm5ldF9jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSk7CnVpbnQ4X3QqIHNjYW5fYmFja3dhcmRzKHVpbnQ4X3QqLCB1aW50OF90KTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSB7CiAgaW50IHJlZl9jb3VudDsKICBNaW5uZXRDbGllbnQqIGNsaWVudDsKfTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfbmV3KEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSBzdHJ1Y3QgY2xpZW50X2NvbnRleHQqCmx3c19jbGllbnQoc3RydWN0IGx3cyogd3NpKSB7CiAgcmV0dXJuIGx3c19jb250ZXh0X3VzZXIobHdzX2dldF9jb250ZXh0KHdzaSkpOwp9CiNlbmRpZgoAAAAAAAAAACEFAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAhBQAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfbmV3KEpTQ29udGV4dCopOwpzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqIGNsaWVudF9jbG9zdXJlX2R1cChzdHJ1Y3QgY2xpZW50X2Nsb3N1cmUqKTsKdm9pZCBjbGllbnRfZnJlZShNaW5uZXRDbGllbnQqKTsKTWlubmV0Q2xpZW50KiBjbGllbnRfZHVwKE1pbm5ldENsaWVudCopOwp2b2lkIGNsaWVudF96ZXJvKE1pbm5ldENsaWVudCogY2xpZW50KTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50X2Nsb3N1cmUoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSwgaW50IG1hZ2ljLCB2b2lkKiBwdHIpOwpKU1ZhbHVlIG1pbm5ldF9jbGllbnQoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSk7CnVpbnQ4X3QqIHNjYW5fYmFja3dhcmRzKHVpbnQ4X3QqLCB1aW50OF90KTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSB7CiAgaW50IHJlZl9jb3VudDsKICBNaW5uZXRDbGllbnQqIGNsaWVudDsKfTsKCnN0cnVjdCBjbGllbnRfY2xvc3VyZSogY2xpZW50X2Nsb3N1cmVfbmV3KEpTQ29udGV4dCopOwoKc3RhdGljIGlubGluZSBzdHJ1Y3QgY2xpZW50X2NvbnRleHQqCmx3c19jbGllbnQoc3RydWN0IGx3cyogd3NpKSB7CiAgcmV0dXJuIGx3c19jb250ZXh0X3VzZXIobHdzX2dldF9jb250ZXh0KHdzaSkpOwp9CiNlbmRpZgoAAAAAAAAAAPkEAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAA4EAAAAAAAADwQAAAAAAAAAAAAADwQAAAAAAAAPBAAAAAAAAG0AAAAKTWlubmV0Q2xvc3VyZSB7CiAgaW50IHJlZl9jb3VudDsKICBNaW5uZXRDbGllbnQqIGNsaWVudDsKfTsKCk1pbm5ldENsb3N1cmUqIGNsaWVudF9jbG9zdXJlX25ldyhKU0NvbnRleHQqKTsK",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAG4CAAAAAAAAbwIAAAAAAAAAAAAAbwIAAAAAAABvAgAAAAAAAGIAAABNaW5uZXRDbG9zdXJlKiBjbGllbnRfY2xvc3VyZV9uZXcoSlNDb250ZXh0Kik7Ck1pbm5ldENsb3N1cmUqIGNsaWVudF9jbG9zdXJlX2R1cChNaW5uZXRDbG9zdXJlKik7Cg",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAsBAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCiB2b2lkIGNsaWVudF9mcmVlKE1pbm5ldENsaWVudCopOwpNaW5uZXRDbGllbnQqIGNsaWVudF9kdXAoTWlubmV0Q2xpZW50Kik7CnZvaWQgY2xpZW50X3plcm8oTWlubmV0Q2xpZW50KiBjbGllbnQpOwpKU1ZhbHVlIG1pbm5ldF9jbGllbnRfY2xvc3VyZShKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdLCBpbnQgbWFnaWMsIHZvaWQqIHB0cik7CkpTVmFsdWUgbWlubmV0X2NsaWVudChKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdKTsKdWludDhfdCogc2Nhbl9iYWNrd2FyZHModWludDhfdCosIHVpbnQ4X3QpOwogCnN0YXRpYyBpbmxpbmUgc3RydWN0IGNsaWVudF9jb250ZXh0Kgpsd3NfY2xpZW50KHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfY29udGV4dF91c2VyKGx3c19nZXRfY29udGV4dCh3c2kpKTsKfQojZW5kaWYKAAAAAAAAAAAqBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAqBAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnZvaWQgY2xpZW50X2ZyZWUoTWlubmV0Q2xpZW50Kik7Ck1pbm5ldENsaWVudCogY2xpZW50X2R1cChNaW5uZXRDbGllbnQqKTsKdm9pZCBjbGllbnRfemVybyhNaW5uZXRDbGllbnQqIGNsaWVudCk7CkpTVmFsdWUgbWlubmV0X2NsaWVudF9jbG9zdXJlKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10sIGludCBtYWdpYywgdm9pZCogcHRyKTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50KEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwp1aW50OF90KiBzY2FuX2JhY2t3YXJkcyh1aW50OF90KiwgdWludDhfdCk7CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBjbGllbnRfY29udGV4dCoKbHdzX2NsaWVudChzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2NvbnRleHRfdXNlcihsd3NfZ2V0X2NvbnRleHQod3NpKSk7Cn0KI2VuZGlmCgAAAAAAAAAAKgQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAqBAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC11cmwuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnZvaWQgY2xpZW50X2ZyZWUoTWlubmV0Q2xpZW50Kik7Ck1pbm5ldENsaWVudCogY2xpZW50X2R1cChNaW5uZXRDbGllbnQqKTsKdm9pZCBjbGllbnRfemVybyhNaW5uZXRDbGllbnQqIGNsaWVudCk7CkpTVmFsdWUgbWlubmV0X2NsaWVudF9jbG9zdXJlKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10sIGludCBtYWdpYywgdm9pZCogcHRyKTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50KEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwp1aW50OF90KiBzY2FuX2JhY2t3YXJkcyh1aW50OF90KiwgdWludDhfdCk7CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBjbGllbnRfY29udGV4dCoKbHdzX2NsaWVudChzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2NvbnRleHRfdXNlcihsd3NfZ2V0X2NvbnRleHQod3NpKSk7Cn0KI2VuZGlmCgAAAAAAAAAAEgQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAASBAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnZvaWQgY2xpZW50X2ZyZWUoTWlubmV0Q2xpZW50Kik7Ck1pbm5ldENsaWVudCogY2xpZW50X2R1cChNaW5uZXRDbGllbnQqKTsKdm9pZCBjbGllbnRfemVybyhNaW5uZXRDbGllbnQqIGNsaWVudCk7CkpTVmFsdWUgbWlubmV0X2NsaWVudF9jbG9zdXJlKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10sIGludCBtYWdpYywgdm9pZCogcHRyKTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50KEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwp1aW50OF90KiBzY2FuX2JhY2t3YXJkcyh1aW50OF90KiwgdWludDhfdCk7CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBjbGllbnRfY29udGV4dCoKbHdzX2NsaWVudChzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2NvbnRleHRfdXNlcihsd3NfZ2V0X2NvbnRleHQod3NpKSk7Cn0KI2VuZGlmCgAAAAAAAAAAEgQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAASBAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnZvaWQgY2xpZW50X2ZyZWUoTWlubmV0Q2xpZW50Kik7Ck1pbm5ldENsaWVudCogY2xpZW50X2R1cChNaW5uZXRDbGllbnQqKTsKdm9pZCBjbGllbnRfemVybyhNaW5uZXRDbGllbnQqIGNsaWVudCk7CkpTVmFsdWUgbWlubmV0X2NsaWVudF9jbG9zdXJlKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10sIGludCBtYWdpYywgdm9pZCogcHRyKTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50KEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwp1aW50OF90KiBzY2FuX2JhY2t3YXJkcyh1aW50OF90KiwgdWludDhfdCk7CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBjbGllbnRfY29udGV4dCoKbHdzX2NsaWVudChzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2NvbnRleHRfdXNlcihsd3NfZ2V0X2NvbnRleHQod3NpKSk7Cn0KI2VuZGlmCgAAAAAAAAAAEgQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAAASBAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnZvaWQgY2xpZW50X2ZyZWUoTWlubmV0Q2xpZW50Kik7Ck1pbm5ldENsaWVudCogY2xpZW50X2R1cChNaW5uZXRDbGllbnQqKTsKdm9pZCBjbGllbnRfemVybyhNaW5uZXRDbGllbnQqIGNsaWVudCk7CkpTVmFsdWUgbWlubmV0X2NsaWVudF9jbG9zdXJlKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10sIGludCBtYWdpYywgdm9pZCogcHRyKTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50KEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwp1aW50OF90KiBzY2FuX2JhY2t3YXJkcyh1aW50OF90KiwgdWludDhfdCk7CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBjbGllbnRfY29udGV4dCoKbHdzX2NsaWVudChzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2NvbnRleHRfdXNlcihsd3NfZ2V0X2NvbnRleHQod3NpKSk7Cn0KI2VuZGlmCgAAAAAAAAAAEgQAAAAAAAAAAAAAAAAAAAAAAAASBAAAAAAAAAAAAAAAAAAAAAAAABIEAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAASBAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnZvaWQgY2xpZW50X2ZyZWUoTWlubmV0Q2xpZW50Kik7Ck1pbm5ldENsaWVudCogY2xpZW50X2R1cChNaW5uZXRDbGllbnQqKTsKdm9pZCBjbGllbnRfemVybyhNaW5uZXRDbGllbnQqIGNsaWVudCk7CkpTVmFsdWUgbWlubmV0X2NsaWVudF9jbG9zdXJlKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10sIGludCBtYWdpYywgdm9pZCogcHRyKTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50KEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwp1aW50OF90KiBzY2FuX2JhY2t3YXJkcyh1aW50OF90KiwgdWludDhfdCk7CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBjbGllbnRfY29udGV4dCoKbHdzX2NsaWVudChzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2NvbnRleHRfdXNlcihsd3NfZ2V0X2NvbnRleHQod3NpKSk7Cn0KI2VuZGlmCgAAAAAAAAAAEgQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAASBAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnZvaWQgY2xpZW50X2ZyZWUoTWlubmV0Q2xpZW50Kik7Ck1pbm5ldENsaWVudCogY2xpZW50X2R1cChNaW5uZXRDbGllbnQqKTsKdm9pZCBjbGllbnRfemVybyhNaW5uZXRDbGllbnQqIGNsaWVudCk7CkpTVmFsdWUgbWlubmV0X2NsaWVudF9jbG9zdXJlKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10sIGludCBtYWdpYywgdm9pZCogcHRyKTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50KEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwp1aW50OF90KiBzY2FuX2JhY2t3YXJkcyh1aW50OF90KiwgdWludDhfdCk7CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBjbGllbnRfY29udGV4dCoKbHdzX2NsaWVudChzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2NvbnRleHRfdXNlcihsd3NfZ2V0X2NvbnRleHQod3NpKSk7Cn0KI2VuZGlmCgAAAAAAAAAAEgQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAAASBAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnZvaWQgY2xpZW50X2ZyZWUoTWlubmV0Q2xpZW50Kik7Ck1pbm5ldENsaWVudCogY2xpZW50X2R1cChNaW5uZXRDbGllbnQqKTsKdm9pZCBjbGllbnRfemVybyhNaW5uZXRDbGllbnQqIGNsaWVudCk7CkpTVmFsdWUgbWlubmV0X2NsaWVudF9jbG9zdXJlKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10sIGludCBtYWdpYywgdm9pZCogcHRyKTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50KEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwp1aW50OF90KiBzY2FuX2JhY2t3YXJkcyh1aW50OF90KiwgdWludDhfdCk7CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBjbGllbnRfY29udGV4dCoKbHdzX2NsaWVudChzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2NvbnRleHRfdXNlcihsd3NfZ2V0X2NvbnRleHQod3NpKSk7Cn0KI2VuZGlmCgAAAAAAAAAAEgQAAAAAAAAAAAAAAAAAAAAAAAASBAAAAAAAAAAAAAAAAAAAAAAAABIEAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAASBAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnZvaWQgY2xpZW50X2ZyZWUoTWlubmV0Q2xpZW50Kik7Ck1pbm5ldENsaWVudCogY2xpZW50X2R1cChNaW5uZXRDbGllbnQqKTsKdm9pZCBjbGllbnRfemVybyhNaW5uZXRDbGllbnQqIGNsaWVudCk7CkpTVmFsdWUgbWlubmV0X2NsaWVudF9jbG9zdXJlKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10sIGludCBtYWdpYywgdm9pZCogcHRyKTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50KEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwp1aW50OF90KiBzY2FuX2JhY2t3YXJkcyh1aW50OF90KiwgdWludDhfdCk7CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBjbGllbnRfY29udGV4dCoKbHdzX2NsaWVudChzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2NvbnRleHRfdXNlcihsd3NfZ2V0X2NvbnRleHQod3NpKSk7Cn0KI2VuZGlmCgAAAAAAAAAAEgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAASBAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnZvaWQgY2xpZW50X2ZyZWUoTWlubmV0Q2xpZW50Kik7Ck1pbm5ldENsaWVudCogY2xpZW50X2R1cChNaW5uZXRDbGllbnQqKTsKdm9pZCBjbGllbnRfemVybyhNaW5uZXRDbGllbnQqIGNsaWVudCk7CkpTVmFsdWUgbWlubmV0X2NsaWVudF9jbG9zdXJlKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10sIGludCBtYWdpYywgdm9pZCogcHRyKTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50KEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwp1aW50OF90KiBzY2FuX2JhY2t3YXJkcyh1aW50OF90KiwgdWludDhfdCk7CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBjbGllbnRfY29udGV4dCoKbHdzX2NsaWVudChzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2NvbnRleHRfdXNlcihsd3NfZ2V0X2NvbnRleHQod3NpKSk7Cn0KI2VuZGlmCgAAAAAAAAAAEgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAASBAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnZvaWQgY2xpZW50X2ZyZWUoTWlubmV0Q2xpZW50Kik7Ck1pbm5ldENsaWVudCogY2xpZW50X2R1cChNaW5uZXRDbGllbnQqKTsKdm9pZCBjbGllbnRfemVybyhNaW5uZXRDbGllbnQqIGNsaWVudCk7CkpTVmFsdWUgbWlubmV0X2NsaWVudF9jbG9zdXJlKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10sIGludCBtYWdpYywgdm9pZCogcHRyKTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50KEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwp1aW50OF90KiBzY2FuX2JhY2t3YXJkcyh1aW50OF90KiwgdWludDhfdCk7CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBjbGllbnRfY29udGV4dCoKbHdzX2NsaWVudChzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2NvbnRleHRfdXNlcihsd3NfZ2V0X2NvbnRleHQod3NpKSk7Cn0KI2VuZGlmCgAAAAAAAAAAEgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAASBAAAI2lmbmRlZiBNSU5ORVRfQ0xJRU5UX0gKI2RlZmluZSBNSU5ORVRfQ0xJRU5UX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCgojZGVmaW5lIGNsaWVudF9leGNlcHRpb24oY2xpZW50LCByZXR2YWwpIGNvbnRleHRfZXhjZXB0aW9uKCYoY2xpZW50LT5jb250ZXh0KSwgKHJldHZhbCkpCgp0eXBlZGVmIHN0cnVjdCBjbGllbnRfY29udGV4dCB7CiAgdW5pb24gewogICAgaW50IHJlZl9jb3VudDsKICAgIE1pbm5ldENvbnRleHQgY29udGV4dDsKICB9OwogIHN0cnVjdCBsd3MqIHdzaTsKICBNaW5uZXRDYWxsYmFja3Mgb247CiAgSlNWYWx1ZSBoZWFkZXJzLCBib2R5LCBuZXh0OwogIC8vIE1pbm5ldFVSTCB1cmw7CiAgTWlubmV0U2Vzc2lvbiBzZXNzaW9uOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcXVlc3Q7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlOwogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBjb25uZWN0X2luZm87CiAgUmVzb2x2ZUZ1bmN0aW9ucyBwcm9taXNlOwp9IE1pbm5ldENsaWVudDsKCnZvaWQgY2xpZW50X2ZyZWUoTWlubmV0Q2xpZW50Kik7Ck1pbm5ldENsaWVudCogY2xpZW50X2R1cChNaW5uZXRDbGllbnQqKTsKdm9pZCBjbGllbnRfemVybyhNaW5uZXRDbGllbnQqIGNsaWVudCk7CkpTVmFsdWUgbWlubmV0X2NsaWVudF9jbG9zdXJlKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10sIGludCBtYWdpYywgdm9pZCogcHRyKTsKSlNWYWx1ZSBtaW5uZXRfY2xpZW50KEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwp1aW50OF90KiBzY2FuX2JhY2t3YXJkcyh1aW50OF90KiwgdWludDhfdCk7CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBjbGllbnRfY29udGV4dCoKbHdzX2NsaWVudChzdHJ1Y3QgbHdzKiB3c2kpIHsKICByZXR1cm4gbHdzX2NvbnRleHRfdXNlcihsd3NfZ2V0X2NvbnRleHQod3NpKSk7Cn0KI2VuZGlmCgAAAAAAAAAAEgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "minnet-server-http.c",
			"settings":
			{
				"buffer_size": 22716,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					241,
					1,
					"insert",
					{
						"characters": "opaque"
					},
					"BgAAAORUAAAAAAAA5VQAAAAAAAAAAAAA5VQAAAAAAADmVAAAAAAAAAAAAADmVAAAAAAAAOdUAAAAAAAAAAAAAOdUAAAAAAAA6FQAAAAAAAAAAAAA6FQAAAAAAADpVAAAAAAAAAAAAADpVAAAAAAAAOpUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5FQAAAAAAADkVAAAAAAAAAAAAAAAAPC/"
				],
				[
					242,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAOpUAAAAAAAA61QAAAAAAAAAAAAA61QAAAAAAADsVAAAAAAAAAAAAADsVAAAAAAAAO1UAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6lQAAAAAAADqVAAAAAAAAAAAAAAAAPC/"
				],
				[
					243,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO1UAAAAAAAA7lQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7VQAAAAAAADtVAAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					1,
					"paste",
					null,
					"AgAAAOAwAAAAAAAA3DEAAAAAAAAAAAAA3DEAAAAAAADcMQAAAAAAAEwAAAAgIGlmKCFvcGFxdWUgJiYgc2Vzc2lvbiAmJiBjdHgpCiAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgc2Vzc2lvbiwgY3R4KTsK",
					"AQAAAAAAAAABAAAA4DAAAAAAAAAsMQAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA3DEAAAAAAADcMQAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA3DEAAAAAAADcMQAAAAAAAAAAAAAAAPC/"
				],
				[
					269,
					1,
					"paste",
					null,
					"AQAAAEFWAAAAAAAAqVYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQVYAAAAAAABBVgAAAAAAAAAAAAAAAPC/"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKlWAAAAAAAAqlYAAAAAAAAAAAAAqlYAAAAAAACuVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqVYAAAAAAACpVgAAAAAAAAAAAAAAAPC/"
				],
				[
					275,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAArlYAAAAAAACuVgAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAArlYAAAAAAACuVgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-server.h",
			"settings":
			{
				"buffer_size": 874,
				"line_ending": "Unix"
			}
		},
		{
			"file": "minnet-buffer.h",
			"settings":
			{
				"buffer_size": 3948,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABsDwAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxzdGRpbnQuaD4KI2luY2x1ZGUgPHN0ZGFyZy5oPgojaW5jbHVkZSA8c3lzL3R5cGVzLmg+CiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgewogIHVpbnQ4X3QqIHN0YXJ0OwogIHVpbnQ4X3QqIGVuZDsKfSBNaW5uZXRCeXRlczsKCiNkZWZpbmUgYmxvY2tfU0laRShiKSAoc2l6ZV90KSgoYiktPmVuZCAtIChiKS0+c3RhcnQpCiNkZWZpbmUgYmxvY2tfQkVHSU4oYikgKHZvaWQqKShiKS0+c3RhcnQKI2RlZmluZSBibG9ja19FTkQoYikgKHZvaWQqKShiKS0+ZW5kCiNkZWZpbmUgYmxvY2tfQUxMT0MoYikgKHZvaWQqKSgoYiktPnN0YXJ0ID8gKGIpLT5zdGFydCAtIExXU19QUkUgOiAwKQoKdm9pZCBibG9ja19pbml0KE1pbm5ldEJ5dGVzKiwgdWludDhfdCosIHNpemVfdCk7CnVpbnQ4X3QqIGJsb2NrX2FsbG9jKE1pbm5ldEJ5dGVzKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKdWludDhfdCogYmxvY2tfcmVhbGxvYyhNaW5uZXRCeXRlcyosIHNpemVfdCwgSlNDb250ZXh0Kik7CnZvaWQgYmxvY2tfZnJlZShNaW5uZXRCeXRlcyosIEpTUnVudGltZSopOwppbnQgYmxvY2tfZnJvbWFycmF5YnVmZmVyKE1pbm5ldEJ5dGVzKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYmxvY2tfdG9hcnJheWJ1ZmZlcihNaW5uZXRCeXRlcyosIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3Rvc3RyaW5nKE1pbm5ldEJ5dGVzIGNvbnN0KiwgSlNDb250ZXh0Kik7CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJsb2NrX2dyb3coTWlubmV0Qnl0ZXMqIGJsaywgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIGJsb2NrX3JlYWxsb2MoYmxrLCBibG9ja19TSVpFKGJsaykgKyBzaXplLCBjdHgpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldEJ5dGVzCmJsb2NrX21vdmUoTWlubmV0Qnl0ZXMqIGJsaykgewogIE1pbm5ldEJ5dGVzIHJldCA9IHtibGstPnN0YXJ0LCBibGstPmVuZH07CiAgYmxrLT5zdGFydCA9IDA7CiAgYmxrLT5lbmQgPSAwOwogIHJldHVybiByZXQ7Cn0KCnR5cGVkZWYgdW5pb24gYnl0ZV9idWZmZXIgewogIHN0cnVjdCB7CiAgICB1aW50OF90ICpzdGFydCwgKmVuZCwgKnJlYWQsICp3cml0ZSwgKmFsbG9jOwogIH07CiAgTWlubmV0Qnl0ZXMgYmxvY2s7Cn0gTWlubmV0QnVmZmVyOwoKI2RlZmluZSBCVUZGRVIoYnVmKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyBcCiAgICB7ICh1aW50OF90KikoYnVmKSArIExXU19QUkUsICh1aW50OF90KikoYnVmKSArIHNpemVvZihidWYpIC0gMSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgMCB9IFwKICB9CgojZGVmaW5lIEJVRkZFUl8wKCkgXAogIChNaW5uZXRCdWZmZXIpIHsgXAogICAgeyAwLCAwLCAwLCAwLCAwIH0gXAogIH0KCiNkZWZpbmUgQlVGRkVSX04oYnVmLCBuKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyBcCiAgICB7ICh1aW50OF90KikoYnVmKSwgKHVpbnQ4X3QqKShidWYpICsgKG4pLCAodWludDhfdCopKGJ1ZiksICh1aW50OF90KikoYnVmKSwgMCB9IFwKICB9CgojZGVmaW5lIGJ1ZmZlcl9BVkFJTChiKSAocHRyZGlmZl90KSgoYiktPmVuZCAtIChiKS0+d3JpdGUpCiNkZWZpbmUgYnVmZmVyX0JZVEVTKGIpIChwdHJkaWZmX3QpKChiKS0+d3JpdGUgLSAoYiktPnJlYWQpCiNkZWZpbmUgYnVmZmVyX0hFQUQoYikgKHNpemVfdCkoKGIpLT53cml0ZSAtIChiKS0+c3RhcnQpCiNkZWZpbmUgYnVmZmVyX1RBSUwoYikgKHNpemVfdCkoKGIpLT5yZWFkIC0gKGIpLT5zdGFydCkKI2RlZmluZSBidWZmZXJfQUxMT0MoYikgKHZvaWQqKSgoYiktPmFsbG9jKQoKI2RlZmluZSBidWZmZXJfQkVHSU4oYikgYmxvY2tfQkVHSU4oJihiKS0+YmxvY2spCiNkZWZpbmUgYnVmZmVyX0VORChiKSBibG9ja19FTkQoJihiKS0+YmxvY2spCiNkZWZpbmUgYnVmZmVyX1NJWkUoYikgYmxvY2tfU0laRSgmKGIpLT5ibG9jaykKCiNkZWZpbmUgYnVmZmVyX3plcm8oYikgbWVtc2V0KChiKSwgMCwgc2l6ZW9mKE1pbm5ldEJ1ZmZlcikpCgp2b2lkIGJsb2NrX2luaXQoTWlubmV0Qnl0ZXMqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYmxvY2tfYWxsb2MoTWlubmV0Qnl0ZXMqLCBzaXplX3QsIEpTQ29udGV4dCopOwp1aW50OF90KiBibG9ja19yZWFsbG9jKE1pbm5ldEJ5dGVzKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKdm9pZCBibG9ja19mcmVlKE1pbm5ldEJ5dGVzKiwgSlNSdW50aW1lKik7CmludCBibG9ja19mcm9tYXJyYXlidWZmZXIoTWlubmV0Qnl0ZXMqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b2FycmF5YnVmZmVyKE1pbm5ldEJ5dGVzKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYmxvY2tfdG9zdHJpbmcoTWlubmV0Qnl0ZXMgY29uc3QqLCBKU0NvbnRleHQqKTsKdm9pZCBidWZmZXJfaW5pdChNaW5uZXRCdWZmZXIqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYnVmZmVyX2FsbG9jKE1pbm5ldEJ1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CnNzaXplX3QgYnVmZmVyX2FwcGVuZChNaW5uZXRCdWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgYnVmZmVyX2ZyZWUoTWlubmV0QnVmZmVyKiwgSlNSdW50aW1lKik7CkJPT0wgYnVmZmVyX3dyaXRlKE1pbm5ldEJ1ZmZlciosIGNvbnN0IHZvaWQqLCBzaXplX3QpOwppbnQgYnVmZmVyX3ZwcmludGYoTWlubmV0QnVmZmVyKiwgY29uc3QgY2hhciosIHZhX2xpc3QpOwppbnQgYnVmZmVyX3ByaW50ZihNaW5uZXRCdWZmZXIqLCBjb25zdCBjaGFyKiwgLi4uKTsKdWludDhfdCogYnVmZmVyX3JlYWxsb2MoTWlubmV0QnVmZmVyKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKaW50IGJ1ZmZlcl9mcm9tYXJyYXlidWZmZXIoTWlubmV0QnVmZmVyKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbXZhbHVlKE1pbm5ldEJ1ZmZlciosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJ1ZmZlcl90b3N0cmluZyhNaW5uZXRCdWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKc2l6ZV90IGJ1ZmZlcl9lc2NhcGUoTWlubmV0QnVmZmVyKiwgY29uc3Qgdm9pZCosIHNpemVfdCwgSlNDb250ZXh0KiBjdHgpOwpjaGFyKiBidWZmZXJfZXNjYXBlZChNaW5uZXRCdWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKdm9pZCBidWZmZXJfZmluYWxpemVyKEpTUnVudGltZSosIHZvaWQqLCB2b2lkKik7CkpTVmFsdWUgYnVmZmVyX3RvYXJyYXlidWZmZXIoTWlubmV0QnVmZmVyKiwgSlNDb250ZXh0Kik7CnZvaWQgYnVmZmVyX2R1bXAoY29uc3QgY2hhciosIE1pbm5ldEJ1ZmZlciBjb25zdCopOwpCT09MIGJ1ZmZlcl9jbG9uZShNaW5uZXRCdWZmZXIqLCBjb25zdCBNaW5uZXRCdWZmZXIqLCBKU0NvbnRleHQqKTsKdWludDhfdCogYnVmZmVyX3NraXAoTWlubmV0QnVmZmVyKiwgc2l6ZV90KTsKQk9PTCBidWZmZXJfcHV0Y2hhcihNaW5uZXRCdWZmZXIqLCBjaGFyKTsKTWlubmV0QnVmZmVyIGJ1ZmZlcl9tb3ZlKE1pbm5ldEJ1ZmZlciopOwp1aW50OF90KiBidWZmZXJfZ3JvdyhNaW5uZXRCdWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KTsKCnN0YXRpYyBpbmxpbmUgdm9pZApidWZmZXJfcmVzZXQoTWlubmV0QnVmZmVyKiBidWYpIHsKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0OwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0Owp9CgovKnN0YXRpYyBpbmxpbmUgdWludDhfdCoKYnVmZmVyX2dyb3coTWlubmV0QnVmZmVyKiBidWYsIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19ncm93KCZidWYtPmJsb2NrLCBzaXplLCBjdHgpOwp9Ki8KCiNlbmRpZiAvKiBNSU5ORVRfQlVGRkVSX0ggKi8KAAAAAAAAAABsDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwYAAAAAAACfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABsDwAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxzdGRpbnQuaD4KI2luY2x1ZGUgPHN0ZGFyZy5oPgojaW5jbHVkZSA8c3lzL3R5cGVzLmg+CiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgewogIHVpbnQ4X3QqIHN0YXJ0OwogIHVpbnQ4X3QqIGVuZDsKfSBNaW5uZXRCeXRlczsKCiNkZWZpbmUgYmxvY2tfU0laRShiKSAoc2l6ZV90KSgoYiktPmVuZCAtIChiKS0+c3RhcnQpCiNkZWZpbmUgYmxvY2tfQkVHSU4oYikgKHZvaWQqKShiKS0+c3RhcnQKI2RlZmluZSBibG9ja19FTkQoYikgKHZvaWQqKShiKS0+ZW5kCiNkZWZpbmUgYmxvY2tfQUxMT0MoYikgKHZvaWQqKSgoYiktPnN0YXJ0ID8gKGIpLT5zdGFydCAtIExXU19QUkUgOiAwKQoKdm9pZCBibG9ja19pbml0KE1pbm5ldEJ5dGVzKiwgdWludDhfdCosIHNpemVfdCk7CnVpbnQ4X3QqIGJsb2NrX2FsbG9jKE1pbm5ldEJ5dGVzKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKdWludDhfdCogYmxvY2tfcmVhbGxvYyhNaW5uZXRCeXRlcyosIHNpemVfdCwgSlNDb250ZXh0Kik7CnZvaWQgYmxvY2tfZnJlZShNaW5uZXRCeXRlcyosIEpTUnVudGltZSopOwppbnQgYmxvY2tfZnJvbWFycmF5YnVmZmVyKE1pbm5ldEJ5dGVzKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYmxvY2tfdG9hcnJheWJ1ZmZlcihNaW5uZXRCeXRlcyosIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3Rvc3RyaW5nKE1pbm5ldEJ5dGVzIGNvbnN0KiwgSlNDb250ZXh0Kik7CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJsb2NrX2dyb3coTWlubmV0Qnl0ZXMqIGJsaywgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIGJsb2NrX3JlYWxsb2MoYmxrLCBibG9ja19TSVpFKGJsaykgKyBzaXplLCBjdHgpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldEJ5dGVzCmJsb2NrX21vdmUoTWlubmV0Qnl0ZXMqIGJsaykgewogIE1pbm5ldEJ5dGVzIHJldCA9IHtibGstPnN0YXJ0LCBibGstPmVuZH07CiAgYmxrLT5zdGFydCA9IDA7CiAgYmxrLT5lbmQgPSAwOwogIHJldHVybiByZXQ7Cn0KCnR5cGVkZWYgdW5pb24gYnl0ZV9idWZmZXIgewogIHN0cnVjdCB7CiAgICB1aW50OF90ICpzdGFydCwgKmVuZCwgKnJlYWQsICp3cml0ZSwgKmFsbG9jOwogIH07CiAgTWlubmV0Qnl0ZXMgYmxvY2s7Cn0gTWlubmV0QnVmZmVyOwoKI2RlZmluZSBCVUZGRVIoYnVmKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyBcCiAgICB7ICh1aW50OF90KikoYnVmKSArIExXU19QUkUsICh1aW50OF90KikoYnVmKSArIHNpemVvZihidWYpIC0gMSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgMCB9IFwKICB9CgojZGVmaW5lIEJVRkZFUl8wKCkgXAogIChNaW5uZXRCdWZmZXIpIHsgXAogICAgeyAwLCAwLCAwLCAwLCAwIH0gXAogIH0KCiNkZWZpbmUgQlVGRkVSX04oYnVmLCBuKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyBcCiAgICB7ICh1aW50OF90KikoYnVmKSwgKHVpbnQ4X3QqKShidWYpICsgKG4pLCAodWludDhfdCopKGJ1ZiksICh1aW50OF90KikoYnVmKSwgMCB9IFwKICB9CgojZGVmaW5lIGJ1ZmZlcl9BVkFJTChiKSAocHRyZGlmZl90KSgoYiktPmVuZCAtIChiKS0+d3JpdGUpCiNkZWZpbmUgYnVmZmVyX0JZVEVTKGIpIChwdHJkaWZmX3QpKChiKS0+d3JpdGUgLSAoYiktPnJlYWQpCiNkZWZpbmUgYnVmZmVyX0hFQUQoYikgKHNpemVfdCkoKGIpLT53cml0ZSAtIChiKS0+c3RhcnQpCiNkZWZpbmUgYnVmZmVyX1RBSUwoYikgKHNpemVfdCkoKGIpLT5yZWFkIC0gKGIpLT5zdGFydCkKI2RlZmluZSBidWZmZXJfQUxMT0MoYikgKHZvaWQqKSgoYiktPmFsbG9jKQoKI2RlZmluZSBidWZmZXJfQkVHSU4oYikgYmxvY2tfQkVHSU4oJihiKS0+YmxvY2spCiNkZWZpbmUgYnVmZmVyX0VORChiKSBibG9ja19FTkQoJihiKS0+YmxvY2spCiNkZWZpbmUgYnVmZmVyX1NJWkUoYikgYmxvY2tfU0laRSgmKGIpLT5ibG9jaykKCiNkZWZpbmUgYnVmZmVyX3plcm8oYikgbWVtc2V0KChiKSwgMCwgc2l6ZW9mKE1pbm5ldEJ1ZmZlcikpCgp2b2lkIGJsb2NrX2luaXQoTWlubmV0Qnl0ZXMqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYmxvY2tfYWxsb2MoTWlubmV0Qnl0ZXMqLCBzaXplX3QsIEpTQ29udGV4dCopOwp1aW50OF90KiBibG9ja19yZWFsbG9jKE1pbm5ldEJ5dGVzKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKdm9pZCBibG9ja19mcmVlKE1pbm5ldEJ5dGVzKiwgSlNSdW50aW1lKik7CmludCBibG9ja19mcm9tYXJyYXlidWZmZXIoTWlubmV0Qnl0ZXMqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b2FycmF5YnVmZmVyKE1pbm5ldEJ5dGVzKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYmxvY2tfdG9zdHJpbmcoTWlubmV0Qnl0ZXMgY29uc3QqLCBKU0NvbnRleHQqKTsKdm9pZCBidWZmZXJfaW5pdChNaW5uZXRCdWZmZXIqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYnVmZmVyX2FsbG9jKE1pbm5ldEJ1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CnNzaXplX3QgYnVmZmVyX2FwcGVuZChNaW5uZXRCdWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgYnVmZmVyX2ZyZWUoTWlubmV0QnVmZmVyKiwgSlNSdW50aW1lKik7CkJPT0wgYnVmZmVyX3dyaXRlKE1pbm5ldEJ1ZmZlciosIGNvbnN0IHZvaWQqLCBzaXplX3QpOwppbnQgYnVmZmVyX3ZwcmludGYoTWlubmV0QnVmZmVyKiwgY29uc3QgY2hhciosIHZhX2xpc3QpOwppbnQgYnVmZmVyX3ByaW50ZihNaW5uZXRCdWZmZXIqLCBjb25zdCBjaGFyKiwgLi4uKTsKdWludDhfdCogYnVmZmVyX3JlYWxsb2MoTWlubmV0QnVmZmVyKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKaW50IGJ1ZmZlcl9mcm9tYXJyYXlidWZmZXIoTWlubmV0QnVmZmVyKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbXZhbHVlKE1pbm5ldEJ1ZmZlciosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJ1ZmZlcl90b3N0cmluZyhNaW5uZXRCdWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKc2l6ZV90IGJ1ZmZlcl9lc2NhcGUoTWlubmV0QnVmZmVyKiwgY29uc3Qgdm9pZCosIHNpemVfdCwgSlNDb250ZXh0KiBjdHgpOwpjaGFyKiBidWZmZXJfZXNjYXBlZChNaW5uZXRCdWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKdm9pZCBidWZmZXJfZmluYWxpemVyKEpTUnVudGltZSosIHZvaWQqLCB2b2lkKik7CkpTVmFsdWUgYnVmZmVyX3RvYXJyYXlidWZmZXIoTWlubmV0QnVmZmVyKiwgSlNDb250ZXh0Kik7CnZvaWQgYnVmZmVyX2R1bXAoY29uc3QgY2hhciosIE1pbm5ldEJ1ZmZlciBjb25zdCopOwpCT09MIGJ1ZmZlcl9jbG9uZShNaW5uZXRCdWZmZXIqLCBjb25zdCBNaW5uZXRCdWZmZXIqLCBKU0NvbnRleHQqKTsKdWludDhfdCogYnVmZmVyX3NraXAoTWlubmV0QnVmZmVyKiwgc2l6ZV90KTsKQk9PTCBidWZmZXJfcHV0Y2hhcihNaW5uZXRCdWZmZXIqLCBjaGFyKTsKTWlubmV0QnVmZmVyIGJ1ZmZlcl9tb3ZlKE1pbm5ldEJ1ZmZlciopOwp1aW50OF90KiBidWZmZXJfZ3JvdyhNaW5uZXRCdWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KTsKCnN0YXRpYyBpbmxpbmUgdm9pZApidWZmZXJfcmVzZXQoTWlubmV0QnVmZmVyKiBidWYpIHsKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0OwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0Owp9CgovKnN0YXRpYyBpbmxpbmUgdWludDhfdCoKYnVmZmVyX2dyb3coTWlubmV0QnVmZmVyKiBidWYsIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19ncm93KCZidWYtPmJsb2NrLCBzaXplLCBjdHgpOwp9Ki8KCiNlbmRpZiAvKiBNSU5ORVRfQlVGRkVSX0ggKi8KAAAAAAAAAABsDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwYAAAAAAACfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABsDwAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxzdGRpbnQuaD4KI2luY2x1ZGUgPHN0ZGFyZy5oPgojaW5jbHVkZSA8c3lzL3R5cGVzLmg+CiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgewogIHVpbnQ4X3QqIHN0YXJ0OwogIHVpbnQ4X3QqIGVuZDsKfSBNaW5uZXRCeXRlczsKCiNkZWZpbmUgYmxvY2tfU0laRShiKSAoc2l6ZV90KSgoYiktPmVuZCAtIChiKS0+c3RhcnQpCiNkZWZpbmUgYmxvY2tfQkVHSU4oYikgKHZvaWQqKShiKS0+c3RhcnQKI2RlZmluZSBibG9ja19FTkQoYikgKHZvaWQqKShiKS0+ZW5kCiNkZWZpbmUgYmxvY2tfQUxMT0MoYikgKHZvaWQqKSgoYiktPnN0YXJ0ID8gKGIpLT5zdGFydCAtIExXU19QUkUgOiAwKQoKdm9pZCBibG9ja19pbml0KE1pbm5ldEJ5dGVzKiwgdWludDhfdCosIHNpemVfdCk7CnVpbnQ4X3QqIGJsb2NrX2FsbG9jKE1pbm5ldEJ5dGVzKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKdWludDhfdCogYmxvY2tfcmVhbGxvYyhNaW5uZXRCeXRlcyosIHNpemVfdCwgSlNDb250ZXh0Kik7CnZvaWQgYmxvY2tfZnJlZShNaW5uZXRCeXRlcyosIEpTUnVudGltZSopOwppbnQgYmxvY2tfZnJvbWFycmF5YnVmZmVyKE1pbm5ldEJ5dGVzKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYmxvY2tfdG9hcnJheWJ1ZmZlcihNaW5uZXRCeXRlcyosIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3Rvc3RyaW5nKE1pbm5ldEJ5dGVzIGNvbnN0KiwgSlNDb250ZXh0Kik7CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJsb2NrX2dyb3coTWlubmV0Qnl0ZXMqIGJsaywgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIGJsb2NrX3JlYWxsb2MoYmxrLCBibG9ja19TSVpFKGJsaykgKyBzaXplLCBjdHgpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldEJ5dGVzCmJsb2NrX21vdmUoTWlubmV0Qnl0ZXMqIGJsaykgewogIE1pbm5ldEJ5dGVzIHJldCA9IHtibGstPnN0YXJ0LCBibGstPmVuZH07CiAgYmxrLT5zdGFydCA9IDA7CiAgYmxrLT5lbmQgPSAwOwogIHJldHVybiByZXQ7Cn0KCnR5cGVkZWYgdW5pb24gYnl0ZV9idWZmZXIgewogIHN0cnVjdCB7CiAgICB1aW50OF90ICpzdGFydCwgKmVuZCwgKnJlYWQsICp3cml0ZSwgKmFsbG9jOwogIH07CiAgTWlubmV0Qnl0ZXMgYmxvY2s7Cn0gTWlubmV0QnVmZmVyOwoKI2RlZmluZSBCVUZGRVIoYnVmKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyBcCiAgICB7ICh1aW50OF90KikoYnVmKSArIExXU19QUkUsICh1aW50OF90KikoYnVmKSArIHNpemVvZihidWYpIC0gMSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgMCB9IFwKICB9CgojZGVmaW5lIEJVRkZFUl8wKCkgXAogIChNaW5uZXRCdWZmZXIpIHsgXAogICAgeyAwLCAwLCAwLCAwLCAwIH0gXAogIH0KCiNkZWZpbmUgQlVGRkVSX04oYnVmLCBuKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyBcCiAgICB7ICh1aW50OF90KikoYnVmKSwgKHVpbnQ4X3QqKShidWYpICsgKG4pLCAodWludDhfdCopKGJ1ZiksICh1aW50OF90KikoYnVmKSwgMCB9IFwKICB9CgojZGVmaW5lIGJ1ZmZlcl9BVkFJTChiKSAocHRyZGlmZl90KSgoYiktPmVuZCAtIChiKS0+d3JpdGUpCiNkZWZpbmUgYnVmZmVyX0JZVEVTKGIpIChwdHJkaWZmX3QpKChiKS0+d3JpdGUgLSAoYiktPnJlYWQpCiNkZWZpbmUgYnVmZmVyX0hFQUQoYikgKHNpemVfdCkoKGIpLT53cml0ZSAtIChiKS0+c3RhcnQpCiNkZWZpbmUgYnVmZmVyX1RBSUwoYikgKHNpemVfdCkoKGIpLT5yZWFkIC0gKGIpLT5zdGFydCkKI2RlZmluZSBidWZmZXJfQUxMT0MoYikgKHZvaWQqKSgoYiktPmFsbG9jKQoKI2RlZmluZSBidWZmZXJfQkVHSU4oYikgYmxvY2tfQkVHSU4oJihiKS0+YmxvY2spCiNkZWZpbmUgYnVmZmVyX0VORChiKSBibG9ja19FTkQoJihiKS0+YmxvY2spCiNkZWZpbmUgYnVmZmVyX1NJWkUoYikgYmxvY2tfU0laRSgmKGIpLT5ibG9jaykKCiNkZWZpbmUgYnVmZmVyX3plcm8oYikgbWVtc2V0KChiKSwgMCwgc2l6ZW9mKE1pbm5ldEJ1ZmZlcikpCgp2b2lkIGJsb2NrX2luaXQoTWlubmV0Qnl0ZXMqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYmxvY2tfYWxsb2MoTWlubmV0Qnl0ZXMqLCBzaXplX3QsIEpTQ29udGV4dCopOwp1aW50OF90KiBibG9ja19yZWFsbG9jKE1pbm5ldEJ5dGVzKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKdm9pZCBibG9ja19mcmVlKE1pbm5ldEJ5dGVzKiwgSlNSdW50aW1lKik7CmludCBibG9ja19mcm9tYXJyYXlidWZmZXIoTWlubmV0Qnl0ZXMqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b2FycmF5YnVmZmVyKE1pbm5ldEJ5dGVzKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYmxvY2tfdG9zdHJpbmcoTWlubmV0Qnl0ZXMgY29uc3QqLCBKU0NvbnRleHQqKTsKdm9pZCBidWZmZXJfaW5pdChNaW5uZXRCdWZmZXIqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYnVmZmVyX2FsbG9jKE1pbm5ldEJ1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CnNzaXplX3QgYnVmZmVyX2FwcGVuZChNaW5uZXRCdWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgYnVmZmVyX2ZyZWUoTWlubmV0QnVmZmVyKiwgSlNSdW50aW1lKik7CkJPT0wgYnVmZmVyX3dyaXRlKE1pbm5ldEJ1ZmZlciosIGNvbnN0IHZvaWQqLCBzaXplX3QpOwppbnQgYnVmZmVyX3ZwcmludGYoTWlubmV0QnVmZmVyKiwgY29uc3QgY2hhciosIHZhX2xpc3QpOwppbnQgYnVmZmVyX3ByaW50ZihNaW5uZXRCdWZmZXIqLCBjb25zdCBjaGFyKiwgLi4uKTsKdWludDhfdCogYnVmZmVyX3JlYWxsb2MoTWlubmV0QnVmZmVyKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKaW50IGJ1ZmZlcl9mcm9tYXJyYXlidWZmZXIoTWlubmV0QnVmZmVyKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbXZhbHVlKE1pbm5ldEJ1ZmZlciosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJ1ZmZlcl90b3N0cmluZyhNaW5uZXRCdWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKc2l6ZV90IGJ1ZmZlcl9lc2NhcGUoTWlubmV0QnVmZmVyKiwgY29uc3Qgdm9pZCosIHNpemVfdCwgSlNDb250ZXh0KiBjdHgpOwpjaGFyKiBidWZmZXJfZXNjYXBlZChNaW5uZXRCdWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKdm9pZCBidWZmZXJfZmluYWxpemVyKEpTUnVudGltZSosIHZvaWQqLCB2b2lkKik7CkpTVmFsdWUgYnVmZmVyX3RvYXJyYXlidWZmZXIoTWlubmV0QnVmZmVyKiwgSlNDb250ZXh0Kik7CnZvaWQgYnVmZmVyX2R1bXAoY29uc3QgY2hhciosIE1pbm5ldEJ1ZmZlciBjb25zdCopOwpCT09MIGJ1ZmZlcl9jbG9uZShNaW5uZXRCdWZmZXIqLCBjb25zdCBNaW5uZXRCdWZmZXIqLCBKU0NvbnRleHQqKTsKdWludDhfdCogYnVmZmVyX3NraXAoTWlubmV0QnVmZmVyKiwgc2l6ZV90KTsKQk9PTCBidWZmZXJfcHV0Y2hhcihNaW5uZXRCdWZmZXIqLCBjaGFyKTsKTWlubmV0QnVmZmVyIGJ1ZmZlcl9tb3ZlKE1pbm5ldEJ1ZmZlciopOwp1aW50OF90KiBidWZmZXJfZ3JvdyhNaW5uZXRCdWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KTsKCnN0YXRpYyBpbmxpbmUgdm9pZApidWZmZXJfcmVzZXQoTWlubmV0QnVmZmVyKiBidWYpIHsKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0OwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0Owp9CgovKnN0YXRpYyBpbmxpbmUgdWludDhfdCoKYnVmZmVyX2dyb3coTWlubmV0QnVmZmVyKiBidWYsIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19ncm93KCZidWYtPmJsb2NrLCBzaXplLCBjdHgpOwp9Ki8KCiNlbmRpZiAvKiBNSU5ORVRfQlVGRkVSX0ggKi8KAAAAAAAAAABsDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwYAAAAAAACfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABsDwAAI2lmbmRlZiBNSU5ORVRfQlVGRkVSX0gKI2RlZmluZSBNSU5ORVRfQlVGRkVSX0gKCiNpbmNsdWRlIDxzdGRpbnQuaD4KI2luY2x1ZGUgPHN0ZGFyZy5oPgojaW5jbHVkZSA8c3lzL3R5cGVzLmg+CiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KCnR5cGVkZWYgc3RydWN0IGJ5dGVfYmxvY2sgewogIHVpbnQ4X3QqIHN0YXJ0OwogIHVpbnQ4X3QqIGVuZDsKfSBNaW5uZXRCeXRlczsKCiNkZWZpbmUgYmxvY2tfU0laRShiKSAoc2l6ZV90KSgoYiktPmVuZCAtIChiKS0+c3RhcnQpCiNkZWZpbmUgYmxvY2tfQkVHSU4oYikgKHZvaWQqKShiKS0+c3RhcnQKI2RlZmluZSBibG9ja19FTkQoYikgKHZvaWQqKShiKS0+ZW5kCiNkZWZpbmUgYmxvY2tfQUxMT0MoYikgKHZvaWQqKSgoYiktPnN0YXJ0ID8gKGIpLT5zdGFydCAtIExXU19QUkUgOiAwKQoKdm9pZCBibG9ja19pbml0KE1pbm5ldEJ5dGVzKiwgdWludDhfdCosIHNpemVfdCk7CnVpbnQ4X3QqIGJsb2NrX2FsbG9jKE1pbm5ldEJ5dGVzKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKdWludDhfdCogYmxvY2tfcmVhbGxvYyhNaW5uZXRCeXRlcyosIHNpemVfdCwgSlNDb250ZXh0Kik7CnZvaWQgYmxvY2tfZnJlZShNaW5uZXRCeXRlcyosIEpTUnVudGltZSopOwppbnQgYmxvY2tfZnJvbWFycmF5YnVmZmVyKE1pbm5ldEJ5dGVzKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYmxvY2tfdG9hcnJheWJ1ZmZlcihNaW5uZXRCeXRlcyosIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJsb2NrX3Rvc3RyaW5nKE1pbm5ldEJ5dGVzIGNvbnN0KiwgSlNDb250ZXh0Kik7CgpzdGF0aWMgaW5saW5lIHVpbnQ4X3QqCmJsb2NrX2dyb3coTWlubmV0Qnl0ZXMqIGJsaywgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIGJsb2NrX3JlYWxsb2MoYmxrLCBibG9ja19TSVpFKGJsaykgKyBzaXplLCBjdHgpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldEJ5dGVzCmJsb2NrX21vdmUoTWlubmV0Qnl0ZXMqIGJsaykgewogIE1pbm5ldEJ5dGVzIHJldCA9IHtibGstPnN0YXJ0LCBibGstPmVuZH07CiAgYmxrLT5zdGFydCA9IDA7CiAgYmxrLT5lbmQgPSAwOwogIHJldHVybiByZXQ7Cn0KCnR5cGVkZWYgdW5pb24gYnl0ZV9idWZmZXIgewogIHN0cnVjdCB7CiAgICB1aW50OF90ICpzdGFydCwgKmVuZCwgKnJlYWQsICp3cml0ZSwgKmFsbG9jOwogIH07CiAgTWlubmV0Qnl0ZXMgYmxvY2s7Cn0gTWlubmV0QnVmZmVyOwoKI2RlZmluZSBCVUZGRVIoYnVmKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyBcCiAgICB7ICh1aW50OF90KikoYnVmKSArIExXU19QUkUsICh1aW50OF90KikoYnVmKSArIHNpemVvZihidWYpIC0gMSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgKHVpbnQ4X3QqKShidWYpICsgTFdTX1BSRSwgMCB9IFwKICB9CgojZGVmaW5lIEJVRkZFUl8wKCkgXAogIChNaW5uZXRCdWZmZXIpIHsgXAogICAgeyAwLCAwLCAwLCAwLCAwIH0gXAogIH0KCiNkZWZpbmUgQlVGRkVSX04oYnVmLCBuKSBcCiAgKE1pbm5ldEJ1ZmZlcikgeyBcCiAgICB7ICh1aW50OF90KikoYnVmKSwgKHVpbnQ4X3QqKShidWYpICsgKG4pLCAodWludDhfdCopKGJ1ZiksICh1aW50OF90KikoYnVmKSwgMCB9IFwKICB9CgojZGVmaW5lIGJ1ZmZlcl9BVkFJTChiKSAocHRyZGlmZl90KSgoYiktPmVuZCAtIChiKS0+d3JpdGUpCiNkZWZpbmUgYnVmZmVyX0JZVEVTKGIpIChwdHJkaWZmX3QpKChiKS0+d3JpdGUgLSAoYiktPnJlYWQpCiNkZWZpbmUgYnVmZmVyX0hFQUQoYikgKHNpemVfdCkoKGIpLT53cml0ZSAtIChiKS0+c3RhcnQpCiNkZWZpbmUgYnVmZmVyX1RBSUwoYikgKHNpemVfdCkoKGIpLT5yZWFkIC0gKGIpLT5zdGFydCkKI2RlZmluZSBidWZmZXJfQUxMT0MoYikgKHZvaWQqKSgoYiktPmFsbG9jKQoKI2RlZmluZSBidWZmZXJfQkVHSU4oYikgYmxvY2tfQkVHSU4oJihiKS0+YmxvY2spCiNkZWZpbmUgYnVmZmVyX0VORChiKSBibG9ja19FTkQoJihiKS0+YmxvY2spCiNkZWZpbmUgYnVmZmVyX1NJWkUoYikgYmxvY2tfU0laRSgmKGIpLT5ibG9jaykKCiNkZWZpbmUgYnVmZmVyX3plcm8oYikgbWVtc2V0KChiKSwgMCwgc2l6ZW9mKE1pbm5ldEJ1ZmZlcikpCgp2b2lkIGJsb2NrX2luaXQoTWlubmV0Qnl0ZXMqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYmxvY2tfYWxsb2MoTWlubmV0Qnl0ZXMqLCBzaXplX3QsIEpTQ29udGV4dCopOwp1aW50OF90KiBibG9ja19yZWFsbG9jKE1pbm5ldEJ5dGVzKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKdm9pZCBibG9ja19mcmVlKE1pbm5ldEJ5dGVzKiwgSlNSdW50aW1lKik7CmludCBibG9ja19mcm9tYXJyYXlidWZmZXIoTWlubmV0Qnl0ZXMqLCBKU1ZhbHVlLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBibG9ja190b2FycmF5YnVmZmVyKE1pbm5ldEJ5dGVzKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgYmxvY2tfdG9zdHJpbmcoTWlubmV0Qnl0ZXMgY29uc3QqLCBKU0NvbnRleHQqKTsKdm9pZCBidWZmZXJfaW5pdChNaW5uZXRCdWZmZXIqLCB1aW50OF90Kiwgc2l6ZV90KTsKdWludDhfdCogYnVmZmVyX2FsbG9jKE1pbm5ldEJ1ZmZlciosIHNpemVfdCwgSlNDb250ZXh0Kik7CnNzaXplX3QgYnVmZmVyX2FwcGVuZChNaW5uZXRCdWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgYnVmZmVyX2ZyZWUoTWlubmV0QnVmZmVyKiwgSlNSdW50aW1lKik7CkJPT0wgYnVmZmVyX3dyaXRlKE1pbm5ldEJ1ZmZlciosIGNvbnN0IHZvaWQqLCBzaXplX3QpOwppbnQgYnVmZmVyX3ZwcmludGYoTWlubmV0QnVmZmVyKiwgY29uc3QgY2hhciosIHZhX2xpc3QpOwppbnQgYnVmZmVyX3ByaW50ZihNaW5uZXRCdWZmZXIqLCBjb25zdCBjaGFyKiwgLi4uKTsKdWludDhfdCogYnVmZmVyX3JlYWxsb2MoTWlubmV0QnVmZmVyKiwgc2l6ZV90LCBKU0NvbnRleHQqKTsKaW50IGJ1ZmZlcl9mcm9tYXJyYXlidWZmZXIoTWlubmV0QnVmZmVyKiwgSlNWYWx1ZSwgSlNDb250ZXh0Kik7CmludCBidWZmZXJfZnJvbXZhbHVlKE1pbm5ldEJ1ZmZlciosIEpTVmFsdWUsIEpTQ29udGV4dCopOwpKU1ZhbHVlIGJ1ZmZlcl90b3N0cmluZyhNaW5uZXRCdWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKc2l6ZV90IGJ1ZmZlcl9lc2NhcGUoTWlubmV0QnVmZmVyKiwgY29uc3Qgdm9pZCosIHNpemVfdCwgSlNDb250ZXh0KiBjdHgpOwpjaGFyKiBidWZmZXJfZXNjYXBlZChNaW5uZXRCdWZmZXIgY29uc3QqLCBKU0NvbnRleHQqKTsKdm9pZCBidWZmZXJfZmluYWxpemVyKEpTUnVudGltZSosIHZvaWQqLCB2b2lkKik7CkpTVmFsdWUgYnVmZmVyX3RvYXJyYXlidWZmZXIoTWlubmV0QnVmZmVyKiwgSlNDb250ZXh0Kik7CnZvaWQgYnVmZmVyX2R1bXAoY29uc3QgY2hhciosIE1pbm5ldEJ1ZmZlciBjb25zdCopOwpCT09MIGJ1ZmZlcl9jbG9uZShNaW5uZXRCdWZmZXIqLCBjb25zdCBNaW5uZXRCdWZmZXIqLCBKU0NvbnRleHQqKTsKdWludDhfdCogYnVmZmVyX3NraXAoTWlubmV0QnVmZmVyKiwgc2l6ZV90KTsKQk9PTCBidWZmZXJfcHV0Y2hhcihNaW5uZXRCdWZmZXIqLCBjaGFyKTsKTWlubmV0QnVmZmVyIGJ1ZmZlcl9tb3ZlKE1pbm5ldEJ1ZmZlciopOwp1aW50OF90KiBidWZmZXJfZ3JvdyhNaW5uZXRCdWZmZXIqIGJ1Ziwgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KTsKCnN0YXRpYyBpbmxpbmUgdm9pZApidWZmZXJfcmVzZXQoTWlubmV0QnVmZmVyKiBidWYpIHsKICBidWYtPnJlYWQgPSBidWYtPnN0YXJ0OwogIGJ1Zi0+d3JpdGUgPSBidWYtPnN0YXJ0Owp9CgovKnN0YXRpYyBpbmxpbmUgdWludDhfdCoKYnVmZmVyX2dyb3coTWlubmV0QnVmZmVyKiBidWYsIHNpemVfdCBzaXplLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiBibG9ja19ncm93KCZidWYtPmJsb2NrLCBzaXplLCBjdHgpOwp9Ki8KCiNlbmRpZiAvKiBNSU5ORVRfQlVGRkVSX0ggKi8KAAAAAAAAAABsDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwYAAAAAAACfBgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "libwebsockets/lib/core-net/wsi-timeout.c",
			"settings":
			{
				"buffer_size": 8699,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libwebsockets/include/libwebsockets/lws-logs.h",
			"settings":
			{
				"buffer_size": 24350,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libwebsockets/lib/core/context.c",
			"settings":
			{
				"buffer_size": 59750,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libwebsockets/include/libwebsockets/lws-callbacks.h",
			"settings":
			{
				"buffer_size": 37291,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "libwebsockets/lib/roles/h2/ops-h2.c",
			"settings":
			{
				"buffer_size": 39157,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libwebsockets/lib/roles/http/server/server.c",
			"settings":
			{
				"buffer_size": 88080,
				"line_ending": "Unix"
			}
		},
		{
			"file": "minnet-server-proxy.c",
			"settings":
			{
				"buffer_size": 5374,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAAD+FAAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXItcHJveHkuaCIKI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KCnR5cGVkZWYgc3RydWN0IHByb3h5X21zZyB7CiAgbHdzX2RsbDJfdCBsaXN0OwogIHNpemVfdCBsZW47Cgp9IHByb3h5X21zZ190OwoKdHlwZWRlZiBzdHJ1Y3QgcHJveHlfY29ubiB7CiAgc3RydWN0IGx3cyogd3NpX3dzOwogIHN0cnVjdCBsd3MqIHdzaV9yYXc7CgogIGx3c19kbGwyX293bmVyX3QgcGVuZGluZ19tc2dfdG9fd3M7CiAgbHdzX2RsbDJfb3duZXJfdCBwZW5kaW5nX21zZ190b19yYXc7Cn0gcHJveHlfY29ubl90OwoKaW50CnByb3h5X3dzX3Jhd19tc2dfZGVzdHJveShzdHJ1Y3QgbHdzX2RsbDIqIGQsIHZvaWQqIHVzZXIpIHsKICBwcm94eV9tc2dfdCogbXNnID0gbHdzX2NvbnRhaW5lcl9vZihkLCBwcm94eV9tc2dfdCwgbGlzdCk7CgogIGx3c19kbGwyX3JlbW92ZShkKTsKICBmcmVlKG1zZyk7CgogIHJldHVybiAwOwp9CgpzdGF0aWMgcHJveHlfY29ubl90Kgpwcm94eV9uZXcoKSB7CiAgcHJveHlfY29ubl90KiBwYzsKICBpZigocGMgPSBtYWxsb2Moc2l6ZW9mKCpwYykpKSkKICAgIG1lbXNldChwYywgMCwgc2l6ZW9mKCpwYykpOwoKICByZXR1cm4gcGM7Cn0KCmludApjYWxsYmFja19wcm94eV93c19zZXJ2ZXIoc3RydWN0IGx3cyogd3NpLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pIHsKICBwcm94eV9jb25uX3QqIHBjID0gKHByb3h5X2Nvbm5fdCopbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX0VTVEFCTElTSEVEOiB7CiAgICAgIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBpbmZvOwoKICAgICAgcGMgPSBwcm94eV9uZXcoKTsKICAgICAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgcGMpOwoKICAgICAgcGMtPndzaV93cyA9IHdzaTsKCiAgICAgIG1lbXNldCgmaW5mbywgMCwgc2l6ZW9mKGluZm8pKTsKCiAgICAgIGluZm8ubWV0aG9kID0gIlJBVyI7CiAgICAgIGluZm8uY29udGV4dCA9IGx3c19nZXRfY29udGV4dCh3c2kpOwogICAgICBpbmZvLnBvcnQgPSAxMjM0OwogICAgICBpbmZvLmFkZHJlc3MgPSAiMTI3LjAuMC4xIjsKICAgICAgaW5mby5zc2xfY29ubmVjdGlvbiA9IDA7CiAgICAgIGluZm8ubG9jYWxfcHJvdG9jb2xfbmFtZSA9ICJsd3Mtd3MtcmF3LXJhdyI7CgogICAgICBpbmZvLm9wYXF1ZV91c2VyX2RhdGEgPSBwYzsKCiAgICAgIGluZm8ucHdzaSA9ICZwYy0+d3NpX3JhdzsKCiAgICAgIGlmKCFsd3NfY2xpZW50X2Nvbm5lY3RfdmlhX2luZm8oJmluZm8pKSB7CiAgICAgICAgbHdzbF93YXJuKCIlczogb253YXJkIGNvbm5lY3Rpb24gZmFpbGVkXG4iLCBfX2Z1bmNfXyk7CiAgICAgICAgcmV0dXJuIC0xOwogICAgICB9CgogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMT1NFRDogewogICAgICBsd3NfZGxsMl9mb3JlYWNoX3NhZmUoJnBjLT5wZW5kaW5nX21zZ190b193cywgTlVMTCwgcHJveHlfd3NfcmF3X21zZ19kZXN0cm95KTsKICAgICAgcGMtPndzaV93cyA9IE5VTEw7CiAgICAgIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIE5VTEwpOwogICAgICBpZighcGMtPndzaV9yYXcpIHsKICAgICAgICBmcmVlKHBjKTsKICAgICAgICBicmVhazsKICAgICAgfQogICAgICBpZihwYy0+cGVuZGluZ19tc2dfdG9fcmF3LmNvdW50KSB7CiAgICAgICAgbHdzX3NldF90aW1lb3V0KHBjLT53c2lfcmF3LCBQRU5ESU5HX1RJTUVPVVRfS0lMTEVEX0JZX1BST1hZX0NMSUVOVF9DTE9TRSwgMyk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgbHdzX3dzaV9jbG9zZShwYy0+d3NpX3JhdywgTFdTX1RPX0tJTExfQVNZTkMpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9XUklURUFCTEU6IHsKICAgICAgcHJveHlfbXNnX3QqIG1zZzsKICAgICAgdWludDhfdCogZGF0YTsKICAgICAgaW50IG0sIGE7CgogICAgICBpZighcGMgfHwgIXBjLT5wZW5kaW5nX21zZ190b193cy5jb3VudCkKICAgICAgICBicmVhazsKCiAgICAgIG1zZyA9IGx3c19jb250YWluZXJfb2YocGMtPnBlbmRpbmdfbXNnX3RvX3dzLmhlYWQsIHByb3h5X21zZ190LCBsaXN0KTsKICAgICAgZGF0YSA9ICh1aW50OF90KikmbXNnWzFdICsgTFdTX1BSRTsKCiAgICAgIG0gPSBsd3Nfd3JpdGUod3NpLCBkYXRhLCBtc2ctPmxlbiwgTFdTX1dSSVRFX1RFWFQpOwogICAgICBhID0gKGludCltc2ctPmxlbjsKICAgICAgbHdzX2RsbDJfcmVtb3ZlKCZtc2ctPmxpc3QpOwogICAgICBmcmVlKG1zZyk7CgogICAgICBpZihtIDwgYSkgewogICAgICAgIGx3c2xfZXJyKCJFUlJPUiAlZCB3cml0aW5nIHRvIHdzXG4iLCBtKTsKICAgICAgICByZXR1cm4gLTE7CiAgICAgIH0KCiAgICAgIGlmKHBjLT5wZW5kaW5nX21zZ190b193cy5jb3VudCkKICAgICAgICBsd3NfY2FsbGJhY2tfb25fd3JpdGFibGUod3NpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFOiB7CiAgICAgIHByb3h5X21zZ190KiBtc2c7CiAgICAgIHVpbnQ4X3QqIGRhdGE7CgogICAgICBpZighcGMgfHwgIXBjLT53c2lfcmF3KQogICAgICAgIGJyZWFrOwoKICAgICAgbXNnID0gKHByb3h5X21zZ190KiltYWxsb2Moc2l6ZW9mKCptc2cpICsgTFdTX1BSRSArIGxlbik7CiAgICAgIGRhdGEgPSAodWludDhfdCopJm1zZ1sxXSArIExXU19QUkU7CgogICAgICBpZighbXNnKSB7CiAgICAgICAgbHdzbF91c2VyKCJPT006IGRyb3BwaW5nXG4iKTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgbWVtc2V0KG1zZywgMCwgc2l6ZW9mKCptc2cpKTsKICAgICAgbXNnLT5sZW4gPSBsZW47CiAgICAgIG1lbWNweShkYXRhLCBpbiwgbGVuKTsKCiAgICAgIGx3c19kbGwyX2FkZF90YWlsKCZtc2ctPmxpc3QsICZwYy0+cGVuZGluZ19tc2dfdG9fcmF3KTsKCiAgICAgIGx3c19jYWxsYmFja19vbl93cml0YWJsZShwYy0+d3NpX3Jhdyk7CiAgICAgIGJyZWFrOwogICAgfQogICAgZGVmYXVsdDogewogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiAwOwp9CgppbnQKY2FsbGJhY2tfcHJveHlfcmF3X2NsaWVudChzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIHByb3h5X2Nvbm5fdCogcGMgPSAocHJveHlfY29ubl90Kilsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKTsKICBwcm94eV9tc2dfdCogbXNnOwogIHVpbnQ4X3QqIGRhdGE7CiAgaW50IG0sIGE7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMSUVOVF9DT05ORUNUSU9OX0VSUk9SOgogICAgICBsd3NsX3dhcm4oIiVzOiBvbndhcmQgcmF3IGNvbm5lY3Rpb24gZmFpbGVkXG4iLCBfX2Z1bmNfXyk7CiAgICAgIHBjLT53c2lfcmF3ID0gTlVMTDsKICAgICAgYnJlYWs7CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkFXX0FET1BUOgogICAgICBsd3NsX3VzZXIoIkxXU19DQUxMQkFDS19SQVdfQURPUFRcbiIpOwogICAgICBwYy0+d3NpX3JhdyA9IHdzaTsKICAgICAgbHdzX2NhbGxiYWNrX29uX3dyaXRhYmxlKHdzaSk7CiAgICAgIGJyZWFrOwoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1JBV19DTE9TRToKICAgICAgbHdzbF91c2VyKCJMV1NfQ0FMTEJBQ0tfUkFXX0NMT1NFXG4iKTsKCiAgICAgIGx3c19kbGwyX2ZvcmVhY2hfc2FmZSgmcGMtPnBlbmRpbmdfbXNnX3RvX3JhdywgTlVMTCwgcHJveHlfd3NfcmF3X21zZ19kZXN0cm95KTsKCiAgICAgIHBjLT53c2lfcmF3ID0gTlVMTDsKICAgICAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgTlVMTCk7CgogICAgICBpZighcGMtPndzaV93cykgewoKICAgICAgICBmcmVlKHBjKTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgaWYocGMtPnBlbmRpbmdfbXNnX3RvX3dzLmNvdW50KSB7CgogICAgICAgIGx3c19zZXRfdGltZW91dChwYy0+d3NpX3dzLCBQRU5ESU5HX1RJTUVPVVRfS0lMTEVEX0JZX1BST1hZX0NMSUVOVF9DTE9TRSwgMyk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIGx3c193c2lfY2xvc2UocGMtPndzaV93cywgTFdTX1RPX0tJTExfQVNZTkMpOwogICAgICBicmVhazsKCiAgICBjYXNlIExXU19DQUxMQkFDS19SQVdfUlg6CiAgICAgIGx3c2xfdXNlcigiTFdTX0NBTExCQUNLX1JBV19SWCAoJWQpXG4iLCAoaW50KWxlbik7CiAgICAgIGlmKCFwYyB8fCAhcGMtPndzaV93cykKICAgICAgICBicmVhazsKCiAgICAgIG1zZyA9IChwcm94eV9tc2dfdCopbWFsbG9jKHNpemVvZigqbXNnKSArIExXU19QUkUgKyBsZW4pOwogICAgICBkYXRhID0gKHVpbnQ4X3QqKSZtc2dbMV0gKyBMV1NfUFJFOwoKICAgICAgaWYoIW1zZykgewogICAgICAgIGx3c2xfdXNlcigiT09NOiBkcm9wcGluZ1xuIik7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIG1lbXNldChtc2csIDAsIHNpemVvZigqbXNnKSk7CiAgICAgIG1zZy0+bGVuID0gbGVuOwogICAgICBtZW1jcHkoZGF0YSwgaW4sIGxlbik7CgogICAgICBsd3NfZGxsMl9hZGRfdGFpbCgmbXNnLT5saXN0LCAmcGMtPnBlbmRpbmdfbXNnX3RvX3dzKTsKCiAgICAgIGx3c19jYWxsYmFja19vbl93cml0YWJsZShwYy0+d3NpX3dzKTsKICAgICAgYnJlYWs7CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkFXX1dSSVRFQUJMRToKICAgICAgbHdzbF91c2VyKCJMV1NfQ0FMTEJBQ0tfUkFXX1dSSVRFQUJMRVxuIik7CiAgICAgIGlmKCFwYyB8fCAhcGMtPnBlbmRpbmdfbXNnX3RvX3Jhdy5jb3VudCkKICAgICAgICBicmVhazsKCiAgICAgIG1zZyA9IGx3c19jb250YWluZXJfb2YocGMtPnBlbmRpbmdfbXNnX3RvX3Jhdy5oZWFkLCBwcm94eV9tc2dfdCwgbGlzdCk7CiAgICAgIGRhdGEgPSAodWludDhfdCopJm1zZ1sxXSArIExXU19QUkU7CgogICAgICBtID0gbHdzX3dyaXRlKHdzaSwgZGF0YSwgbXNnLT5sZW4sIExXU19XUklURV9URVhUKTsKICAgICAgYSA9IChpbnQpbXNnLT5sZW47CiAgICAgIGx3c19kbGwyX3JlbW92ZSgmbXNnLT5saXN0KTsKICAgICAgZnJlZShtc2cpOwoKICAgICAgaWYobSA8IGEpIHsKICAgICAgICBsd3NsX2VycigiRVJST1IgJWQgd3JpdGluZyB0byByYXdcbiIsIG0pOwogICAgICAgIHJldHVybiAtMTsKICAgICAgfQoKICAgICAgaWYocGMtPnBlbmRpbmdfbXNnX3RvX3Jhdy5jb3VudCkKICAgICAgICBsd3NfY2FsbGJhY2tfb25fd3JpdGFibGUod3NpKTsKICAgICAgYnJlYWs7CiAgICBkZWZhdWx0OiBicmVhazsKICB9CgogIHJldHVybiAwOwp9CgAAAAAAAAAA/hQAAAAAAAAAAAAAAAAAAAAAAAD+FAAAAAAAAAAAAAAAAAAAAAAAAP4UAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD+FAAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXItcHJveHkuaCIKI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KCnR5cGVkZWYgc3RydWN0IHByb3h5X21zZyB7CiAgbHdzX2RsbDJfdCBsaXN0OwogIHNpemVfdCBsZW47Cgp9IHByb3h5X21zZ190OwoKdHlwZWRlZiBzdHJ1Y3QgcHJveHlfY29ubiB7CiAgc3RydWN0IGx3cyogd3NpX3dzOwogIHN0cnVjdCBsd3MqIHdzaV9yYXc7CgogIGx3c19kbGwyX293bmVyX3QgcGVuZGluZ19tc2dfdG9fd3M7CiAgbHdzX2RsbDJfb3duZXJfdCBwZW5kaW5nX21zZ190b19yYXc7Cn0gcHJveHlfY29ubl90OwoKaW50CnByb3h5X3dzX3Jhd19tc2dfZGVzdHJveShzdHJ1Y3QgbHdzX2RsbDIqIGQsIHZvaWQqIHVzZXIpIHsKICBwcm94eV9tc2dfdCogbXNnID0gbHdzX2NvbnRhaW5lcl9vZihkLCBwcm94eV9tc2dfdCwgbGlzdCk7CgogIGx3c19kbGwyX3JlbW92ZShkKTsKICBmcmVlKG1zZyk7CgogIHJldHVybiAwOwp9CgpzdGF0aWMgcHJveHlfY29ubl90Kgpwcm94eV9uZXcoKSB7CiAgcHJveHlfY29ubl90KiBwYzsKICBpZigocGMgPSBtYWxsb2Moc2l6ZW9mKCpwYykpKSkKICAgIG1lbXNldChwYywgMCwgc2l6ZW9mKCpwYykpOwoKICByZXR1cm4gcGM7Cn0KCmludApjYWxsYmFja19wcm94eV93c19zZXJ2ZXIoc3RydWN0IGx3cyogd3NpLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pIHsKICBwcm94eV9jb25uX3QqIHBjID0gKHByb3h5X2Nvbm5fdCopbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX0VTVEFCTElTSEVEOiB7CiAgICAgIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBpbmZvOwoKICAgICAgcGMgPSBwcm94eV9uZXcoKTsKICAgICAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgcGMpOwoKICAgICAgcGMtPndzaV93cyA9IHdzaTsKCiAgICAgIG1lbXNldCgmaW5mbywgMCwgc2l6ZW9mKGluZm8pKTsKCiAgICAgIGluZm8ubWV0aG9kID0gIlJBVyI7CiAgICAgIGluZm8uY29udGV4dCA9IGx3c19nZXRfY29udGV4dCh3c2kpOwogICAgICBpbmZvLnBvcnQgPSAxMjM0OwogICAgICBpbmZvLmFkZHJlc3MgPSAiMTI3LjAuMC4xIjsKICAgICAgaW5mby5zc2xfY29ubmVjdGlvbiA9IDA7CiAgICAgIGluZm8ubG9jYWxfcHJvdG9jb2xfbmFtZSA9ICJsd3Mtd3MtcmF3LXJhdyI7CgogICAgICBpbmZvLm9wYXF1ZV91c2VyX2RhdGEgPSBwYzsKCiAgICAgIGluZm8ucHdzaSA9ICZwYy0+d3NpX3JhdzsKCiAgICAgIGlmKCFsd3NfY2xpZW50X2Nvbm5lY3RfdmlhX2luZm8oJmluZm8pKSB7CiAgICAgICAgbHdzbF93YXJuKCIlczogb253YXJkIGNvbm5lY3Rpb24gZmFpbGVkXG4iLCBfX2Z1bmNfXyk7CiAgICAgICAgcmV0dXJuIC0xOwogICAgICB9CgogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMT1NFRDogewogICAgICBsd3NfZGxsMl9mb3JlYWNoX3NhZmUoJnBjLT5wZW5kaW5nX21zZ190b193cywgTlVMTCwgcHJveHlfd3NfcmF3X21zZ19kZXN0cm95KTsKICAgICAgcGMtPndzaV93cyA9IE5VTEw7CiAgICAgIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIE5VTEwpOwogICAgICBpZighcGMtPndzaV9yYXcpIHsKICAgICAgICBmcmVlKHBjKTsKICAgICAgICBicmVhazsKICAgICAgfQogICAgICBpZihwYy0+cGVuZGluZ19tc2dfdG9fcmF3LmNvdW50KSB7CiAgICAgICAgbHdzX3NldF90aW1lb3V0KHBjLT53c2lfcmF3LCBQRU5ESU5HX1RJTUVPVVRfS0lMTEVEX0JZX1BST1hZX0NMSUVOVF9DTE9TRSwgMyk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgbHdzX3dzaV9jbG9zZShwYy0+d3NpX3JhdywgTFdTX1RPX0tJTExfQVNZTkMpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9XUklURUFCTEU6IHsKICAgICAgcHJveHlfbXNnX3QqIG1zZzsKICAgICAgdWludDhfdCogZGF0YTsKICAgICAgaW50IG0sIGE7CgogICAgICBpZighcGMgfHwgIXBjLT5wZW5kaW5nX21zZ190b193cy5jb3VudCkKICAgICAgICBicmVhazsKCiAgICAgIG1zZyA9IGx3c19jb250YWluZXJfb2YocGMtPnBlbmRpbmdfbXNnX3RvX3dzLmhlYWQsIHByb3h5X21zZ190LCBsaXN0KTsKICAgICAgZGF0YSA9ICh1aW50OF90KikmbXNnWzFdICsgTFdTX1BSRTsKCiAgICAgIG0gPSBsd3Nfd3JpdGUod3NpLCBkYXRhLCBtc2ctPmxlbiwgTFdTX1dSSVRFX1RFWFQpOwogICAgICBhID0gKGludCltc2ctPmxlbjsKICAgICAgbHdzX2RsbDJfcmVtb3ZlKCZtc2ctPmxpc3QpOwogICAgICBmcmVlKG1zZyk7CgogICAgICBpZihtIDwgYSkgewogICAgICAgIGx3c2xfZXJyKCJFUlJPUiAlZCB3cml0aW5nIHRvIHdzXG4iLCBtKTsKICAgICAgICByZXR1cm4gLTE7CiAgICAgIH0KCiAgICAgIGlmKHBjLT5wZW5kaW5nX21zZ190b193cy5jb3VudCkKICAgICAgICBsd3NfY2FsbGJhY2tfb25fd3JpdGFibGUod3NpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFOiB7CiAgICAgIHByb3h5X21zZ190KiBtc2c7CiAgICAgIHVpbnQ4X3QqIGRhdGE7CgogICAgICBpZighcGMgfHwgIXBjLT53c2lfcmF3KQogICAgICAgIGJyZWFrOwoKICAgICAgbXNnID0gKHByb3h5X21zZ190KiltYWxsb2Moc2l6ZW9mKCptc2cpICsgTFdTX1BSRSArIGxlbik7CiAgICAgIGRhdGEgPSAodWludDhfdCopJm1zZ1sxXSArIExXU19QUkU7CgogICAgICBpZighbXNnKSB7CiAgICAgICAgbHdzbF91c2VyKCJPT006IGRyb3BwaW5nXG4iKTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgbWVtc2V0KG1zZywgMCwgc2l6ZW9mKCptc2cpKTsKICAgICAgbXNnLT5sZW4gPSBsZW47CiAgICAgIG1lbWNweShkYXRhLCBpbiwgbGVuKTsKCiAgICAgIGx3c19kbGwyX2FkZF90YWlsKCZtc2ctPmxpc3QsICZwYy0+cGVuZGluZ19tc2dfdG9fcmF3KTsKCiAgICAgIGx3c19jYWxsYmFja19vbl93cml0YWJsZShwYy0+d3NpX3Jhdyk7CiAgICAgIGJyZWFrOwogICAgfQogICAgZGVmYXVsdDogewogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiAwOwp9CgppbnQKY2FsbGJhY2tfcHJveHlfcmF3X2NsaWVudChzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIHByb3h5X2Nvbm5fdCogcGMgPSAocHJveHlfY29ubl90Kilsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKTsKICBwcm94eV9tc2dfdCogbXNnOwogIHVpbnQ4X3QqIGRhdGE7CiAgaW50IG0sIGE7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMSUVOVF9DT05ORUNUSU9OX0VSUk9SOgogICAgICBsd3NsX3dhcm4oIiVzOiBvbndhcmQgcmF3IGNvbm5lY3Rpb24gZmFpbGVkXG4iLCBfX2Z1bmNfXyk7CiAgICAgIHBjLT53c2lfcmF3ID0gTlVMTDsKICAgICAgYnJlYWs7CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkFXX0FET1BUOgogICAgICBsd3NsX3VzZXIoIkxXU19DQUxMQkFDS19SQVdfQURPUFRcbiIpOwogICAgICBwYy0+d3NpX3JhdyA9IHdzaTsKICAgICAgbHdzX2NhbGxiYWNrX29uX3dyaXRhYmxlKHdzaSk7CiAgICAgIGJyZWFrOwoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1JBV19DTE9TRToKICAgICAgbHdzbF91c2VyKCJMV1NfQ0FMTEJBQ0tfUkFXX0NMT1NFXG4iKTsKCiAgICAgIGx3c19kbGwyX2ZvcmVhY2hfc2FmZSgmcGMtPnBlbmRpbmdfbXNnX3RvX3JhdywgTlVMTCwgcHJveHlfd3NfcmF3X21zZ19kZXN0cm95KTsKCiAgICAgIHBjLT53c2lfcmF3ID0gTlVMTDsKICAgICAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgTlVMTCk7CgogICAgICBpZighcGMtPndzaV93cykgewoKICAgICAgICBmcmVlKHBjKTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgaWYocGMtPnBlbmRpbmdfbXNnX3RvX3dzLmNvdW50KSB7CgogICAgICAgIGx3c19zZXRfdGltZW91dChwYy0+d3NpX3dzLCBQRU5ESU5HX1RJTUVPVVRfS0lMTEVEX0JZX1BST1hZX0NMSUVOVF9DTE9TRSwgMyk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIGx3c193c2lfY2xvc2UocGMtPndzaV93cywgTFdTX1RPX0tJTExfQVNZTkMpOwogICAgICBicmVhazsKCiAgICBjYXNlIExXU19DQUxMQkFDS19SQVdfUlg6CiAgICAgIGx3c2xfdXNlcigiTFdTX0NBTExCQUNLX1JBV19SWCAoJWQpXG4iLCAoaW50KWxlbik7CiAgICAgIGlmKCFwYyB8fCAhcGMtPndzaV93cykKICAgICAgICBicmVhazsKCiAgICAgIG1zZyA9IChwcm94eV9tc2dfdCopbWFsbG9jKHNpemVvZigqbXNnKSArIExXU19QUkUgKyBsZW4pOwogICAgICBkYXRhID0gKHVpbnQ4X3QqKSZtc2dbMV0gKyBMV1NfUFJFOwoKICAgICAgaWYoIW1zZykgewogICAgICAgIGx3c2xfdXNlcigiT09NOiBkcm9wcGluZ1xuIik7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIG1lbXNldChtc2csIDAsIHNpemVvZigqbXNnKSk7CiAgICAgIG1zZy0+bGVuID0gbGVuOwogICAgICBtZW1jcHkoZGF0YSwgaW4sIGxlbik7CgogICAgICBsd3NfZGxsMl9hZGRfdGFpbCgmbXNnLT5saXN0LCAmcGMtPnBlbmRpbmdfbXNnX3RvX3dzKTsKCiAgICAgIGx3c19jYWxsYmFja19vbl93cml0YWJsZShwYy0+d3NpX3dzKTsKICAgICAgYnJlYWs7CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkFXX1dSSVRFQUJMRToKICAgICAgbHdzbF91c2VyKCJMV1NfQ0FMTEJBQ0tfUkFXX1dSSVRFQUJMRVxuIik7CiAgICAgIGlmKCFwYyB8fCAhcGMtPnBlbmRpbmdfbXNnX3RvX3Jhdy5jb3VudCkKICAgICAgICBicmVhazsKCiAgICAgIG1zZyA9IGx3c19jb250YWluZXJfb2YocGMtPnBlbmRpbmdfbXNnX3RvX3Jhdy5oZWFkLCBwcm94eV9tc2dfdCwgbGlzdCk7CiAgICAgIGRhdGEgPSAodWludDhfdCopJm1zZ1sxXSArIExXU19QUkU7CgogICAgICBtID0gbHdzX3dyaXRlKHdzaSwgZGF0YSwgbXNnLT5sZW4sIExXU19XUklURV9URVhUKTsKICAgICAgYSA9IChpbnQpbXNnLT5sZW47CiAgICAgIGx3c19kbGwyX3JlbW92ZSgmbXNnLT5saXN0KTsKICAgICAgZnJlZShtc2cpOwoKICAgICAgaWYobSA8IGEpIHsKICAgICAgICBsd3NsX2VycigiRVJST1IgJWQgd3JpdGluZyB0byByYXdcbiIsIG0pOwogICAgICAgIHJldHVybiAtMTsKICAgICAgfQoKICAgICAgaWYocGMtPnBlbmRpbmdfbXNnX3RvX3Jhdy5jb3VudCkKICAgICAgICBsd3NfY2FsbGJhY2tfb25fd3JpdGFibGUod3NpKTsKICAgICAgYnJlYWs7CiAgICBkZWZhdWx0OiBicmVhazsKICB9CgogIHJldHVybiAwOwp9CgAAAAAAAAAA/hQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD+FAAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXItcHJveHkuaCIKI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KCnR5cGVkZWYgc3RydWN0IHByb3h5X21zZyB7CiAgbHdzX2RsbDJfdCBsaXN0OwogIHNpemVfdCBsZW47Cgp9IHByb3h5X21zZ190OwoKdHlwZWRlZiBzdHJ1Y3QgcHJveHlfY29ubiB7CiAgc3RydWN0IGx3cyogd3NpX3dzOwogIHN0cnVjdCBsd3MqIHdzaV9yYXc7CgogIGx3c19kbGwyX293bmVyX3QgcGVuZGluZ19tc2dfdG9fd3M7CiAgbHdzX2RsbDJfb3duZXJfdCBwZW5kaW5nX21zZ190b19yYXc7Cn0gcHJveHlfY29ubl90OwoKaW50CnByb3h5X3dzX3Jhd19tc2dfZGVzdHJveShzdHJ1Y3QgbHdzX2RsbDIqIGQsIHZvaWQqIHVzZXIpIHsKICBwcm94eV9tc2dfdCogbXNnID0gbHdzX2NvbnRhaW5lcl9vZihkLCBwcm94eV9tc2dfdCwgbGlzdCk7CgogIGx3c19kbGwyX3JlbW92ZShkKTsKICBmcmVlKG1zZyk7CgogIHJldHVybiAwOwp9CgpzdGF0aWMgcHJveHlfY29ubl90Kgpwcm94eV9uZXcoKSB7CiAgcHJveHlfY29ubl90KiBwYzsKICBpZigocGMgPSBtYWxsb2Moc2l6ZW9mKCpwYykpKSkKICAgIG1lbXNldChwYywgMCwgc2l6ZW9mKCpwYykpOwoKICByZXR1cm4gcGM7Cn0KCmludApjYWxsYmFja19wcm94eV93c19zZXJ2ZXIoc3RydWN0IGx3cyogd3NpLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pIHsKICBwcm94eV9jb25uX3QqIHBjID0gKHByb3h5X2Nvbm5fdCopbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX0VTVEFCTElTSEVEOiB7CiAgICAgIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBpbmZvOwoKICAgICAgcGMgPSBwcm94eV9uZXcoKTsKICAgICAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgcGMpOwoKICAgICAgcGMtPndzaV93cyA9IHdzaTsKCiAgICAgIG1lbXNldCgmaW5mbywgMCwgc2l6ZW9mKGluZm8pKTsKCiAgICAgIGluZm8ubWV0aG9kID0gIlJBVyI7CiAgICAgIGluZm8uY29udGV4dCA9IGx3c19nZXRfY29udGV4dCh3c2kpOwogICAgICBpbmZvLnBvcnQgPSAxMjM0OwogICAgICBpbmZvLmFkZHJlc3MgPSAiMTI3LjAuMC4xIjsKICAgICAgaW5mby5zc2xfY29ubmVjdGlvbiA9IDA7CiAgICAgIGluZm8ubG9jYWxfcHJvdG9jb2xfbmFtZSA9ICJsd3Mtd3MtcmF3LXJhdyI7CgogICAgICBpbmZvLm9wYXF1ZV91c2VyX2RhdGEgPSBwYzsKCiAgICAgIGluZm8ucHdzaSA9ICZwYy0+d3NpX3JhdzsKCiAgICAgIGlmKCFsd3NfY2xpZW50X2Nvbm5lY3RfdmlhX2luZm8oJmluZm8pKSB7CiAgICAgICAgbHdzbF93YXJuKCIlczogb253YXJkIGNvbm5lY3Rpb24gZmFpbGVkXG4iLCBfX2Z1bmNfXyk7CiAgICAgICAgcmV0dXJuIC0xOwogICAgICB9CgogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMT1NFRDogewogICAgICBsd3NfZGxsMl9mb3JlYWNoX3NhZmUoJnBjLT5wZW5kaW5nX21zZ190b193cywgTlVMTCwgcHJveHlfd3NfcmF3X21zZ19kZXN0cm95KTsKICAgICAgcGMtPndzaV93cyA9IE5VTEw7CiAgICAgIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIE5VTEwpOwogICAgICBpZighcGMtPndzaV9yYXcpIHsKICAgICAgICBmcmVlKHBjKTsKICAgICAgICBicmVhazsKICAgICAgfQogICAgICBpZihwYy0+cGVuZGluZ19tc2dfdG9fcmF3LmNvdW50KSB7CiAgICAgICAgbHdzX3NldF90aW1lb3V0KHBjLT53c2lfcmF3LCBQRU5ESU5HX1RJTUVPVVRfS0lMTEVEX0JZX1BST1hZX0NMSUVOVF9DTE9TRSwgMyk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgbHdzX3dzaV9jbG9zZShwYy0+d3NpX3JhdywgTFdTX1RPX0tJTExfQVNZTkMpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9XUklURUFCTEU6IHsKICAgICAgcHJveHlfbXNnX3QqIG1zZzsKICAgICAgdWludDhfdCogZGF0YTsKICAgICAgaW50IG0sIGE7CgogICAgICBpZighcGMgfHwgIXBjLT5wZW5kaW5nX21zZ190b193cy5jb3VudCkKICAgICAgICBicmVhazsKCiAgICAgIG1zZyA9IGx3c19jb250YWluZXJfb2YocGMtPnBlbmRpbmdfbXNnX3RvX3dzLmhlYWQsIHByb3h5X21zZ190LCBsaXN0KTsKICAgICAgZGF0YSA9ICh1aW50OF90KikmbXNnWzFdICsgTFdTX1BSRTsKCiAgICAgIG0gPSBsd3Nfd3JpdGUod3NpLCBkYXRhLCBtc2ctPmxlbiwgTFdTX1dSSVRFX1RFWFQpOwogICAgICBhID0gKGludCltc2ctPmxlbjsKICAgICAgbHdzX2RsbDJfcmVtb3ZlKCZtc2ctPmxpc3QpOwogICAgICBmcmVlKG1zZyk7CgogICAgICBpZihtIDwgYSkgewogICAgICAgIGx3c2xfZXJyKCJFUlJPUiAlZCB3cml0aW5nIHRvIHdzXG4iLCBtKTsKICAgICAgICByZXR1cm4gLTE7CiAgICAgIH0KCiAgICAgIGlmKHBjLT5wZW5kaW5nX21zZ190b193cy5jb3VudCkKICAgICAgICBsd3NfY2FsbGJhY2tfb25fd3JpdGFibGUod3NpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFOiB7CiAgICAgIHByb3h5X21zZ190KiBtc2c7CiAgICAgIHVpbnQ4X3QqIGRhdGE7CgogICAgICBpZighcGMgfHwgIXBjLT53c2lfcmF3KQogICAgICAgIGJyZWFrOwoKICAgICAgbXNnID0gKHByb3h5X21zZ190KiltYWxsb2Moc2l6ZW9mKCptc2cpICsgTFdTX1BSRSArIGxlbik7CiAgICAgIGRhdGEgPSAodWludDhfdCopJm1zZ1sxXSArIExXU19QUkU7CgogICAgICBpZighbXNnKSB7CiAgICAgICAgbHdzbF91c2VyKCJPT006IGRyb3BwaW5nXG4iKTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgbWVtc2V0KG1zZywgMCwgc2l6ZW9mKCptc2cpKTsKICAgICAgbXNnLT5sZW4gPSBsZW47CiAgICAgIG1lbWNweShkYXRhLCBpbiwgbGVuKTsKCiAgICAgIGx3c19kbGwyX2FkZF90YWlsKCZtc2ctPmxpc3QsICZwYy0+cGVuZGluZ19tc2dfdG9fcmF3KTsKCiAgICAgIGx3c19jYWxsYmFja19vbl93cml0YWJsZShwYy0+d3NpX3Jhdyk7CiAgICAgIGJyZWFrOwogICAgfQogICAgZGVmYXVsdDogewogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiAwOwp9CgppbnQKY2FsbGJhY2tfcHJveHlfcmF3X2NsaWVudChzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIHByb3h5X2Nvbm5fdCogcGMgPSAocHJveHlfY29ubl90Kilsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKTsKICBwcm94eV9tc2dfdCogbXNnOwogIHVpbnQ4X3QqIGRhdGE7CiAgaW50IG0sIGE7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMSUVOVF9DT05ORUNUSU9OX0VSUk9SOgogICAgICBsd3NsX3dhcm4oIiVzOiBvbndhcmQgcmF3IGNvbm5lY3Rpb24gZmFpbGVkXG4iLCBfX2Z1bmNfXyk7CiAgICAgIHBjLT53c2lfcmF3ID0gTlVMTDsKICAgICAgYnJlYWs7CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkFXX0FET1BUOgogICAgICBsd3NsX3VzZXIoIkxXU19DQUxMQkFDS19SQVdfQURPUFRcbiIpOwogICAgICBwYy0+d3NpX3JhdyA9IHdzaTsKICAgICAgbHdzX2NhbGxiYWNrX29uX3dyaXRhYmxlKHdzaSk7CiAgICAgIGJyZWFrOwoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1JBV19DTE9TRToKICAgICAgbHdzbF91c2VyKCJMV1NfQ0FMTEJBQ0tfUkFXX0NMT1NFXG4iKTsKCiAgICAgIGx3c19kbGwyX2ZvcmVhY2hfc2FmZSgmcGMtPnBlbmRpbmdfbXNnX3RvX3JhdywgTlVMTCwgcHJveHlfd3NfcmF3X21zZ19kZXN0cm95KTsKCiAgICAgIHBjLT53c2lfcmF3ID0gTlVMTDsKICAgICAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgTlVMTCk7CgogICAgICBpZighcGMtPndzaV93cykgewoKICAgICAgICBmcmVlKHBjKTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgaWYocGMtPnBlbmRpbmdfbXNnX3RvX3dzLmNvdW50KSB7CgogICAgICAgIGx3c19zZXRfdGltZW91dChwYy0+d3NpX3dzLCBQRU5ESU5HX1RJTUVPVVRfS0lMTEVEX0JZX1BST1hZX0NMSUVOVF9DTE9TRSwgMyk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIGx3c193c2lfY2xvc2UocGMtPndzaV93cywgTFdTX1RPX0tJTExfQVNZTkMpOwogICAgICBicmVhazsKCiAgICBjYXNlIExXU19DQUxMQkFDS19SQVdfUlg6CiAgICAgIGx3c2xfdXNlcigiTFdTX0NBTExCQUNLX1JBV19SWCAoJWQpXG4iLCAoaW50KWxlbik7CiAgICAgIGlmKCFwYyB8fCAhcGMtPndzaV93cykKICAgICAgICBicmVhazsKCiAgICAgIG1zZyA9IChwcm94eV9tc2dfdCopbWFsbG9jKHNpemVvZigqbXNnKSArIExXU19QUkUgKyBsZW4pOwogICAgICBkYXRhID0gKHVpbnQ4X3QqKSZtc2dbMV0gKyBMV1NfUFJFOwoKICAgICAgaWYoIW1zZykgewogICAgICAgIGx3c2xfdXNlcigiT09NOiBkcm9wcGluZ1xuIik7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIG1lbXNldChtc2csIDAsIHNpemVvZigqbXNnKSk7CiAgICAgIG1zZy0+bGVuID0gbGVuOwogICAgICBtZW1jcHkoZGF0YSwgaW4sIGxlbik7CgogICAgICBsd3NfZGxsMl9hZGRfdGFpbCgmbXNnLT5saXN0LCAmcGMtPnBlbmRpbmdfbXNnX3RvX3dzKTsKCiAgICAgIGx3c19jYWxsYmFja19vbl93cml0YWJsZShwYy0+d3NpX3dzKTsKICAgICAgYnJlYWs7CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkFXX1dSSVRFQUJMRToKICAgICAgbHdzbF91c2VyKCJMV1NfQ0FMTEJBQ0tfUkFXX1dSSVRFQUJMRVxuIik7CiAgICAgIGlmKCFwYyB8fCAhcGMtPnBlbmRpbmdfbXNnX3RvX3Jhdy5jb3VudCkKICAgICAgICBicmVhazsKCiAgICAgIG1zZyA9IGx3c19jb250YWluZXJfb2YocGMtPnBlbmRpbmdfbXNnX3RvX3Jhdy5oZWFkLCBwcm94eV9tc2dfdCwgbGlzdCk7CiAgICAgIGRhdGEgPSAodWludDhfdCopJm1zZ1sxXSArIExXU19QUkU7CgogICAgICBtID0gbHdzX3dyaXRlKHdzaSwgZGF0YSwgbXNnLT5sZW4sIExXU19XUklURV9URVhUKTsKICAgICAgYSA9IChpbnQpbXNnLT5sZW47CiAgICAgIGx3c19kbGwyX3JlbW92ZSgmbXNnLT5saXN0KTsKICAgICAgZnJlZShtc2cpOwoKICAgICAgaWYobSA8IGEpIHsKICAgICAgICBsd3NsX2VycigiRVJST1IgJWQgd3JpdGluZyB0byByYXdcbiIsIG0pOwogICAgICAgIHJldHVybiAtMTsKICAgICAgfQoKICAgICAgaWYocGMtPnBlbmRpbmdfbXNnX3RvX3Jhdy5jb3VudCkKICAgICAgICBsd3NfY2FsbGJhY2tfb25fd3JpdGFibGUod3NpKTsKICAgICAgYnJlYWs7CiAgICBkZWZhdWx0OiBicmVhazsKICB9CgogIHJldHVybiAwOwp9CgAAAAAAAAAA/hQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD+FAAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXItcHJveHkuaCIKI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KCnR5cGVkZWYgc3RydWN0IHByb3h5X21zZyB7CiAgbHdzX2RsbDJfdCBsaXN0OwogIHNpemVfdCBsZW47Cgp9IHByb3h5X21zZ190OwoKdHlwZWRlZiBzdHJ1Y3QgcHJveHlfY29ubiB7CiAgc3RydWN0IGx3cyogd3NpX3dzOwogIHN0cnVjdCBsd3MqIHdzaV9yYXc7CgogIGx3c19kbGwyX293bmVyX3QgcGVuZGluZ19tc2dfdG9fd3M7CiAgbHdzX2RsbDJfb3duZXJfdCBwZW5kaW5nX21zZ190b19yYXc7Cn0gcHJveHlfY29ubl90OwoKaW50CnByb3h5X3dzX3Jhd19tc2dfZGVzdHJveShzdHJ1Y3QgbHdzX2RsbDIqIGQsIHZvaWQqIHVzZXIpIHsKICBwcm94eV9tc2dfdCogbXNnID0gbHdzX2NvbnRhaW5lcl9vZihkLCBwcm94eV9tc2dfdCwgbGlzdCk7CgogIGx3c19kbGwyX3JlbW92ZShkKTsKICBmcmVlKG1zZyk7CgogIHJldHVybiAwOwp9CgpzdGF0aWMgcHJveHlfY29ubl90Kgpwcm94eV9uZXcoKSB7CiAgcHJveHlfY29ubl90KiBwYzsKICBpZigocGMgPSBtYWxsb2Moc2l6ZW9mKCpwYykpKSkKICAgIG1lbXNldChwYywgMCwgc2l6ZW9mKCpwYykpOwoKICByZXR1cm4gcGM7Cn0KCmludApjYWxsYmFja19wcm94eV93c19zZXJ2ZXIoc3RydWN0IGx3cyogd3NpLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pIHsKICBwcm94eV9jb25uX3QqIHBjID0gKHByb3h5X2Nvbm5fdCopbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX0VTVEFCTElTSEVEOiB7CiAgICAgIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBpbmZvOwoKICAgICAgcGMgPSBwcm94eV9uZXcoKTsKICAgICAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgcGMpOwoKICAgICAgcGMtPndzaV93cyA9IHdzaTsKCiAgICAgIG1lbXNldCgmaW5mbywgMCwgc2l6ZW9mKGluZm8pKTsKCiAgICAgIGluZm8ubWV0aG9kID0gIlJBVyI7CiAgICAgIGluZm8uY29udGV4dCA9IGx3c19nZXRfY29udGV4dCh3c2kpOwogICAgICBpbmZvLnBvcnQgPSAxMjM0OwogICAgICBpbmZvLmFkZHJlc3MgPSAiMTI3LjAuMC4xIjsKICAgICAgaW5mby5zc2xfY29ubmVjdGlvbiA9IDA7CiAgICAgIGluZm8ubG9jYWxfcHJvdG9jb2xfbmFtZSA9ICJsd3Mtd3MtcmF3LXJhdyI7CgogICAgICBpbmZvLm9wYXF1ZV91c2VyX2RhdGEgPSBwYzsKCiAgICAgIGluZm8ucHdzaSA9ICZwYy0+d3NpX3JhdzsKCiAgICAgIGlmKCFsd3NfY2xpZW50X2Nvbm5lY3RfdmlhX2luZm8oJmluZm8pKSB7CiAgICAgICAgbHdzbF93YXJuKCIlczogb253YXJkIGNvbm5lY3Rpb24gZmFpbGVkXG4iLCBfX2Z1bmNfXyk7CiAgICAgICAgcmV0dXJuIC0xOwogICAgICB9CgogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMT1NFRDogewogICAgICBsd3NfZGxsMl9mb3JlYWNoX3NhZmUoJnBjLT5wZW5kaW5nX21zZ190b193cywgTlVMTCwgcHJveHlfd3NfcmF3X21zZ19kZXN0cm95KTsKICAgICAgcGMtPndzaV93cyA9IE5VTEw7CiAgICAgIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIE5VTEwpOwogICAgICBpZighcGMtPndzaV9yYXcpIHsKICAgICAgICBmcmVlKHBjKTsKICAgICAgICBicmVhazsKICAgICAgfQogICAgICBpZihwYy0+cGVuZGluZ19tc2dfdG9fcmF3LmNvdW50KSB7CiAgICAgICAgbHdzX3NldF90aW1lb3V0KHBjLT53c2lfcmF3LCBQRU5ESU5HX1RJTUVPVVRfS0lMTEVEX0JZX1BST1hZX0NMSUVOVF9DTE9TRSwgMyk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgbHdzX3dzaV9jbG9zZShwYy0+d3NpX3JhdywgTFdTX1RPX0tJTExfQVNZTkMpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9XUklURUFCTEU6IHsKICAgICAgcHJveHlfbXNnX3QqIG1zZzsKICAgICAgdWludDhfdCogZGF0YTsKICAgICAgaW50IG0sIGE7CgogICAgICBpZighcGMgfHwgIXBjLT5wZW5kaW5nX21zZ190b193cy5jb3VudCkKICAgICAgICBicmVhazsKCiAgICAgIG1zZyA9IGx3c19jb250YWluZXJfb2YocGMtPnBlbmRpbmdfbXNnX3RvX3dzLmhlYWQsIHByb3h5X21zZ190LCBsaXN0KTsKICAgICAgZGF0YSA9ICh1aW50OF90KikmbXNnWzFdICsgTFdTX1BSRTsKCiAgICAgIG0gPSBsd3Nfd3JpdGUod3NpLCBkYXRhLCBtc2ctPmxlbiwgTFdTX1dSSVRFX1RFWFQpOwogICAgICBhID0gKGludCltc2ctPmxlbjsKICAgICAgbHdzX2RsbDJfcmVtb3ZlKCZtc2ctPmxpc3QpOwogICAgICBmcmVlKG1zZyk7CgogICAgICBpZihtIDwgYSkgewogICAgICAgIGx3c2xfZXJyKCJFUlJPUiAlZCB3cml0aW5nIHRvIHdzXG4iLCBtKTsKICAgICAgICByZXR1cm4gLTE7CiAgICAgIH0KCiAgICAgIGlmKHBjLT5wZW5kaW5nX21zZ190b193cy5jb3VudCkKICAgICAgICBsd3NfY2FsbGJhY2tfb25fd3JpdGFibGUod3NpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFOiB7CiAgICAgIHByb3h5X21zZ190KiBtc2c7CiAgICAgIHVpbnQ4X3QqIGRhdGE7CgogICAgICBpZighcGMgfHwgIXBjLT53c2lfcmF3KQogICAgICAgIGJyZWFrOwoKICAgICAgbXNnID0gKHByb3h5X21zZ190KiltYWxsb2Moc2l6ZW9mKCptc2cpICsgTFdTX1BSRSArIGxlbik7CiAgICAgIGRhdGEgPSAodWludDhfdCopJm1zZ1sxXSArIExXU19QUkU7CgogICAgICBpZighbXNnKSB7CiAgICAgICAgbHdzbF91c2VyKCJPT006IGRyb3BwaW5nXG4iKTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgbWVtc2V0KG1zZywgMCwgc2l6ZW9mKCptc2cpKTsKICAgICAgbXNnLT5sZW4gPSBsZW47CiAgICAgIG1lbWNweShkYXRhLCBpbiwgbGVuKTsKCiAgICAgIGx3c19kbGwyX2FkZF90YWlsKCZtc2ctPmxpc3QsICZwYy0+cGVuZGluZ19tc2dfdG9fcmF3KTsKCiAgICAgIGx3c19jYWxsYmFja19vbl93cml0YWJsZShwYy0+d3NpX3Jhdyk7CiAgICAgIGJyZWFrOwogICAgfQogICAgZGVmYXVsdDogewogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiAwOwp9CgppbnQKY2FsbGJhY2tfcHJveHlfcmF3X2NsaWVudChzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIHByb3h5X2Nvbm5fdCogcGMgPSAocHJveHlfY29ubl90Kilsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKTsKICBwcm94eV9tc2dfdCogbXNnOwogIHVpbnQ4X3QqIGRhdGE7CiAgaW50IG0sIGE7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMSUVOVF9DT05ORUNUSU9OX0VSUk9SOgogICAgICBsd3NsX3dhcm4oIiVzOiBvbndhcmQgcmF3IGNvbm5lY3Rpb24gZmFpbGVkXG4iLCBfX2Z1bmNfXyk7CiAgICAgIHBjLT53c2lfcmF3ID0gTlVMTDsKICAgICAgYnJlYWs7CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkFXX0FET1BUOgogICAgICBsd3NsX3VzZXIoIkxXU19DQUxMQkFDS19SQVdfQURPUFRcbiIpOwogICAgICBwYy0+d3NpX3JhdyA9IHdzaTsKICAgICAgbHdzX2NhbGxiYWNrX29uX3dyaXRhYmxlKHdzaSk7CiAgICAgIGJyZWFrOwoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1JBV19DTE9TRToKICAgICAgbHdzbF91c2VyKCJMV1NfQ0FMTEJBQ0tfUkFXX0NMT1NFXG4iKTsKCiAgICAgIGx3c19kbGwyX2ZvcmVhY2hfc2FmZSgmcGMtPnBlbmRpbmdfbXNnX3RvX3JhdywgTlVMTCwgcHJveHlfd3NfcmF3X21zZ19kZXN0cm95KTsKCiAgICAgIHBjLT53c2lfcmF3ID0gTlVMTDsKICAgICAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgTlVMTCk7CgogICAgICBpZighcGMtPndzaV93cykgewoKICAgICAgICBmcmVlKHBjKTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgaWYocGMtPnBlbmRpbmdfbXNnX3RvX3dzLmNvdW50KSB7CgogICAgICAgIGx3c19zZXRfdGltZW91dChwYy0+d3NpX3dzLCBQRU5ESU5HX1RJTUVPVVRfS0lMTEVEX0JZX1BST1hZX0NMSUVOVF9DTE9TRSwgMyk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIGx3c193c2lfY2xvc2UocGMtPndzaV93cywgTFdTX1RPX0tJTExfQVNZTkMpOwogICAgICBicmVhazsKCiAgICBjYXNlIExXU19DQUxMQkFDS19SQVdfUlg6CiAgICAgIGx3c2xfdXNlcigiTFdTX0NBTExCQUNLX1JBV19SWCAoJWQpXG4iLCAoaW50KWxlbik7CiAgICAgIGlmKCFwYyB8fCAhcGMtPndzaV93cykKICAgICAgICBicmVhazsKCiAgICAgIG1zZyA9IChwcm94eV9tc2dfdCopbWFsbG9jKHNpemVvZigqbXNnKSArIExXU19QUkUgKyBsZW4pOwogICAgICBkYXRhID0gKHVpbnQ4X3QqKSZtc2dbMV0gKyBMV1NfUFJFOwoKICAgICAgaWYoIW1zZykgewogICAgICAgIGx3c2xfdXNlcigiT09NOiBkcm9wcGluZ1xuIik7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIG1lbXNldChtc2csIDAsIHNpemVvZigqbXNnKSk7CiAgICAgIG1zZy0+bGVuID0gbGVuOwogICAgICBtZW1jcHkoZGF0YSwgaW4sIGxlbik7CgogICAgICBsd3NfZGxsMl9hZGRfdGFpbCgmbXNnLT5saXN0LCAmcGMtPnBlbmRpbmdfbXNnX3RvX3dzKTsKCiAgICAgIGx3c19jYWxsYmFja19vbl93cml0YWJsZShwYy0+d3NpX3dzKTsKICAgICAgYnJlYWs7CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkFXX1dSSVRFQUJMRToKICAgICAgbHdzbF91c2VyKCJMV1NfQ0FMTEJBQ0tfUkFXX1dSSVRFQUJMRVxuIik7CiAgICAgIGlmKCFwYyB8fCAhcGMtPnBlbmRpbmdfbXNnX3RvX3Jhdy5jb3VudCkKICAgICAgICBicmVhazsKCiAgICAgIG1zZyA9IGx3c19jb250YWluZXJfb2YocGMtPnBlbmRpbmdfbXNnX3RvX3Jhdy5oZWFkLCBwcm94eV9tc2dfdCwgbGlzdCk7CiAgICAgIGRhdGEgPSAodWludDhfdCopJm1zZ1sxXSArIExXU19QUkU7CgogICAgICBtID0gbHdzX3dyaXRlKHdzaSwgZGF0YSwgbXNnLT5sZW4sIExXU19XUklURV9URVhUKTsKICAgICAgYSA9IChpbnQpbXNnLT5sZW47CiAgICAgIGx3c19kbGwyX3JlbW92ZSgmbXNnLT5saXN0KTsKICAgICAgZnJlZShtc2cpOwoKICAgICAgaWYobSA8IGEpIHsKICAgICAgICBsd3NsX2VycigiRVJST1IgJWQgd3JpdGluZyB0byByYXdcbiIsIG0pOwogICAgICAgIHJldHVybiAtMTsKICAgICAgfQoKICAgICAgaWYocGMtPnBlbmRpbmdfbXNnX3RvX3Jhdy5jb3VudCkKICAgICAgICBsd3NfY2FsbGJhY2tfb25fd3JpdGFibGUod3NpKTsKICAgICAgYnJlYWs7CiAgICBkZWZhdWx0OiBicmVhazsKICB9CgogIHJldHVybiAwOwp9CgAAAAAAAAAA/hQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD+FAAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXItcHJveHkuaCIKI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KCnR5cGVkZWYgc3RydWN0IHByb3h5X21zZyB7CiAgbHdzX2RsbDJfdCBsaXN0OwogIHNpemVfdCBsZW47Cgp9IHByb3h5X21zZ190OwoKdHlwZWRlZiBzdHJ1Y3QgcHJveHlfY29ubiB7CiAgc3RydWN0IGx3cyogd3NpX3dzOwogIHN0cnVjdCBsd3MqIHdzaV9yYXc7CgogIGx3c19kbGwyX293bmVyX3QgcGVuZGluZ19tc2dfdG9fd3M7CiAgbHdzX2RsbDJfb3duZXJfdCBwZW5kaW5nX21zZ190b19yYXc7Cn0gcHJveHlfY29ubl90OwoKaW50CnByb3h5X3dzX3Jhd19tc2dfZGVzdHJveShzdHJ1Y3QgbHdzX2RsbDIqIGQsIHZvaWQqIHVzZXIpIHsKICBwcm94eV9tc2dfdCogbXNnID0gbHdzX2NvbnRhaW5lcl9vZihkLCBwcm94eV9tc2dfdCwgbGlzdCk7CgogIGx3c19kbGwyX3JlbW92ZShkKTsKICBmcmVlKG1zZyk7CgogIHJldHVybiAwOwp9CgpzdGF0aWMgcHJveHlfY29ubl90Kgpwcm94eV9uZXcoKSB7CiAgcHJveHlfY29ubl90KiBwYzsKICBpZigocGMgPSBtYWxsb2Moc2l6ZW9mKCpwYykpKSkKICAgIG1lbXNldChwYywgMCwgc2l6ZW9mKCpwYykpOwoKICByZXR1cm4gcGM7Cn0KCmludApjYWxsYmFja19wcm94eV93c19zZXJ2ZXIoc3RydWN0IGx3cyogd3NpLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pIHsKICBwcm94eV9jb25uX3QqIHBjID0gKHByb3h5X2Nvbm5fdCopbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX0VTVEFCTElTSEVEOiB7CiAgICAgIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBpbmZvOwoKICAgICAgcGMgPSBwcm94eV9uZXcoKTsKICAgICAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgcGMpOwoKICAgICAgcGMtPndzaV93cyA9IHdzaTsKCiAgICAgIG1lbXNldCgmaW5mbywgMCwgc2l6ZW9mKGluZm8pKTsKCiAgICAgIGluZm8ubWV0aG9kID0gIlJBVyI7CiAgICAgIGluZm8uY29udGV4dCA9IGx3c19nZXRfY29udGV4dCh3c2kpOwogICAgICBpbmZvLnBvcnQgPSAxMjM0OwogICAgICBpbmZvLmFkZHJlc3MgPSAiMTI3LjAuMC4xIjsKICAgICAgaW5mby5zc2xfY29ubmVjdGlvbiA9IDA7CiAgICAgIGluZm8ubG9jYWxfcHJvdG9jb2xfbmFtZSA9ICJsd3Mtd3MtcmF3LXJhdyI7CgogICAgICBpbmZvLm9wYXF1ZV91c2VyX2RhdGEgPSBwYzsKCiAgICAgIGluZm8ucHdzaSA9ICZwYy0+d3NpX3JhdzsKCiAgICAgIGlmKCFsd3NfY2xpZW50X2Nvbm5lY3RfdmlhX2luZm8oJmluZm8pKSB7CiAgICAgICAgbHdzbF93YXJuKCIlczogb253YXJkIGNvbm5lY3Rpb24gZmFpbGVkXG4iLCBfX2Z1bmNfXyk7CiAgICAgICAgcmV0dXJuIC0xOwogICAgICB9CgogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMT1NFRDogewogICAgICBsd3NfZGxsMl9mb3JlYWNoX3NhZmUoJnBjLT5wZW5kaW5nX21zZ190b193cywgTlVMTCwgcHJveHlfd3NfcmF3X21zZ19kZXN0cm95KTsKICAgICAgcGMtPndzaV93cyA9IE5VTEw7CiAgICAgIGx3c19zZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2ksIE5VTEwpOwogICAgICBpZighcGMtPndzaV9yYXcpIHsKICAgICAgICBmcmVlKHBjKTsKICAgICAgICBicmVhazsKICAgICAgfQogICAgICBpZihwYy0+cGVuZGluZ19tc2dfdG9fcmF3LmNvdW50KSB7CiAgICAgICAgbHdzX3NldF90aW1lb3V0KHBjLT53c2lfcmF3LCBQRU5ESU5HX1RJTUVPVVRfS0lMTEVEX0JZX1BST1hZX0NMSUVOVF9DTE9TRSwgMyk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgbHdzX3dzaV9jbG9zZShwYy0+d3NpX3JhdywgTFdTX1RPX0tJTExfQVNZTkMpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX1NFUlZFUl9XUklURUFCTEU6IHsKICAgICAgcHJveHlfbXNnX3QqIG1zZzsKICAgICAgdWludDhfdCogZGF0YTsKICAgICAgaW50IG0sIGE7CgogICAgICBpZighcGMgfHwgIXBjLT5wZW5kaW5nX21zZ190b193cy5jb3VudCkKICAgICAgICBicmVhazsKCiAgICAgIG1zZyA9IGx3c19jb250YWluZXJfb2YocGMtPnBlbmRpbmdfbXNnX3RvX3dzLmhlYWQsIHByb3h5X21zZ190LCBsaXN0KTsKICAgICAgZGF0YSA9ICh1aW50OF90KikmbXNnWzFdICsgTFdTX1BSRTsKCiAgICAgIG0gPSBsd3Nfd3JpdGUod3NpLCBkYXRhLCBtc2ctPmxlbiwgTFdTX1dSSVRFX1RFWFQpOwogICAgICBhID0gKGludCltc2ctPmxlbjsKICAgICAgbHdzX2RsbDJfcmVtb3ZlKCZtc2ctPmxpc3QpOwogICAgICBmcmVlKG1zZyk7CgogICAgICBpZihtIDwgYSkgewogICAgICAgIGx3c2xfZXJyKCJFUlJPUiAlZCB3cml0aW5nIHRvIHdzXG4iLCBtKTsKICAgICAgICByZXR1cm4gLTE7CiAgICAgIH0KCiAgICAgIGlmKHBjLT5wZW5kaW5nX21zZ190b193cy5jb3VudCkKICAgICAgICBsd3NfY2FsbGJhY2tfb25fd3JpdGFibGUod3NpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFOiB7CiAgICAgIHByb3h5X21zZ190KiBtc2c7CiAgICAgIHVpbnQ4X3QqIGRhdGE7CgogICAgICBpZighcGMgfHwgIXBjLT53c2lfcmF3KQogICAgICAgIGJyZWFrOwoKICAgICAgbXNnID0gKHByb3h5X21zZ190KiltYWxsb2Moc2l6ZW9mKCptc2cpICsgTFdTX1BSRSArIGxlbik7CiAgICAgIGRhdGEgPSAodWludDhfdCopJm1zZ1sxXSArIExXU19QUkU7CgogICAgICBpZighbXNnKSB7CiAgICAgICAgbHdzbF91c2VyKCJPT006IGRyb3BwaW5nXG4iKTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgbWVtc2V0KG1zZywgMCwgc2l6ZW9mKCptc2cpKTsKICAgICAgbXNnLT5sZW4gPSBsZW47CiAgICAgIG1lbWNweShkYXRhLCBpbiwgbGVuKTsKCiAgICAgIGx3c19kbGwyX2FkZF90YWlsKCZtc2ctPmxpc3QsICZwYy0+cGVuZGluZ19tc2dfdG9fcmF3KTsKCiAgICAgIGx3c19jYWxsYmFja19vbl93cml0YWJsZShwYy0+d3NpX3Jhdyk7CiAgICAgIGJyZWFrOwogICAgfQogICAgZGVmYXVsdDogewogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiAwOwp9CgppbnQKY2FsbGJhY2tfcHJveHlfcmF3X2NsaWVudChzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIHByb3h5X2Nvbm5fdCogcGMgPSAocHJveHlfY29ubl90Kilsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKTsKICBwcm94eV9tc2dfdCogbXNnOwogIHVpbnQ4X3QqIGRhdGE7CiAgaW50IG0sIGE7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMSUVOVF9DT05ORUNUSU9OX0VSUk9SOgogICAgICBsd3NsX3dhcm4oIiVzOiBvbndhcmQgcmF3IGNvbm5lY3Rpb24gZmFpbGVkXG4iLCBfX2Z1bmNfXyk7CiAgICAgIHBjLT53c2lfcmF3ID0gTlVMTDsKICAgICAgYnJlYWs7CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkFXX0FET1BUOgogICAgICBsd3NsX3VzZXIoIkxXU19DQUxMQkFDS19SQVdfQURPUFRcbiIpOwogICAgICBwYy0+d3NpX3JhdyA9IHdzaTsKICAgICAgbHdzX2NhbGxiYWNrX29uX3dyaXRhYmxlKHdzaSk7CiAgICAgIGJyZWFrOwoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1JBV19DTE9TRToKICAgICAgbHdzbF91c2VyKCJMV1NfQ0FMTEJBQ0tfUkFXX0NMT1NFXG4iKTsKCiAgICAgIGx3c19kbGwyX2ZvcmVhY2hfc2FmZSgmcGMtPnBlbmRpbmdfbXNnX3RvX3JhdywgTlVMTCwgcHJveHlfd3NfcmF3X21zZ19kZXN0cm95KTsKCiAgICAgIHBjLT53c2lfcmF3ID0gTlVMTDsKICAgICAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgTlVMTCk7CgogICAgICBpZighcGMtPndzaV93cykgewoKICAgICAgICBmcmVlKHBjKTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgaWYocGMtPnBlbmRpbmdfbXNnX3RvX3dzLmNvdW50KSB7CgogICAgICAgIGx3c19zZXRfdGltZW91dChwYy0+d3NpX3dzLCBQRU5ESU5HX1RJTUVPVVRfS0lMTEVEX0JZX1BST1hZX0NMSUVOVF9DTE9TRSwgMyk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIGx3c193c2lfY2xvc2UocGMtPndzaV93cywgTFdTX1RPX0tJTExfQVNZTkMpOwogICAgICBicmVhazsKCiAgICBjYXNlIExXU19DQUxMQkFDS19SQVdfUlg6CiAgICAgIGx3c2xfdXNlcigiTFdTX0NBTExCQUNLX1JBV19SWCAoJWQpXG4iLCAoaW50KWxlbik7CiAgICAgIGlmKCFwYyB8fCAhcGMtPndzaV93cykKICAgICAgICBicmVhazsKCiAgICAgIG1zZyA9IChwcm94eV9tc2dfdCopbWFsbG9jKHNpemVvZigqbXNnKSArIExXU19QUkUgKyBsZW4pOwogICAgICBkYXRhID0gKHVpbnQ4X3QqKSZtc2dbMV0gKyBMV1NfUFJFOwoKICAgICAgaWYoIW1zZykgewogICAgICAgIGx3c2xfdXNlcigiT09NOiBkcm9wcGluZ1xuIik7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIG1lbXNldChtc2csIDAsIHNpemVvZigqbXNnKSk7CiAgICAgIG1zZy0+bGVuID0gbGVuOwogICAgICBtZW1jcHkoZGF0YSwgaW4sIGxlbik7CgogICAgICBsd3NfZGxsMl9hZGRfdGFpbCgmbXNnLT5saXN0LCAmcGMtPnBlbmRpbmdfbXNnX3RvX3dzKTsKCiAgICAgIGx3c19jYWxsYmFja19vbl93cml0YWJsZShwYy0+d3NpX3dzKTsKICAgICAgYnJlYWs7CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkFXX1dSSVRFQUJMRToKICAgICAgbHdzbF91c2VyKCJMV1NfQ0FMTEJBQ0tfUkFXX1dSSVRFQUJMRVxuIik7CiAgICAgIGlmKCFwYyB8fCAhcGMtPnBlbmRpbmdfbXNnX3RvX3Jhdy5jb3VudCkKICAgICAgICBicmVhazsKCiAgICAgIG1zZyA9IGx3c19jb250YWluZXJfb2YocGMtPnBlbmRpbmdfbXNnX3RvX3Jhdy5oZWFkLCBwcm94eV9tc2dfdCwgbGlzdCk7CiAgICAgIGRhdGEgPSAodWludDhfdCopJm1zZ1sxXSArIExXU19QUkU7CgogICAgICBtID0gbHdzX3dyaXRlKHdzaSwgZGF0YSwgbXNnLT5sZW4sIExXU19XUklURV9URVhUKTsKICAgICAgYSA9IChpbnQpbXNnLT5sZW47CiAgICAgIGx3c19kbGwyX3JlbW92ZSgmbXNnLT5saXN0KTsKICAgICAgZnJlZShtc2cpOwoKICAgICAgaWYobSA8IGEpIHsKICAgICAgICBsd3NsX2VycigiRVJST1IgJWQgd3JpdGluZyB0byByYXdcbiIsIG0pOwogICAgICAgIHJldHVybiAtMTsKICAgICAgfQoKICAgICAgaWYocGMtPnBlbmRpbmdfbXNnX3RvX3Jhdy5jb3VudCkKICAgICAgICBsd3NfY2FsbGJhY2tfb25fd3JpdGFibGUod3NpKTsKICAgICAgYnJlYWs7CiAgICBkZWZhdWx0OiBicmVhazsKICB9CgogIHJldHVybiAwOwp9CgAAAAAAAAAA/hQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "libwebsockets/lib/core/private-lib-core.h",
			"settings":
			{
				"buffer_size": 24455,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libwebsockets/test-apps/test-server.c",
			"settings":
			{
				"buffer_size": 19417,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "libwebsockets/minimal-examples/http-client/minimal-http-client-hugeurl/minimal-http-client-hugeurl.c",
			"settings":
			{
				"buffer_size": 6594,
				"line_ending": "Unix"
			}
		},
		{
			"file": "minnet-server-ws.c",
			"settings":
			{
				"buffer_size": 6867,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					358,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKsMAAAAAAAArQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwwAAAAAAACrDAAAAAAAAAAAAAAAAPC/"
				],
				[
					359,
					1,
					"insert",
					{
						"characters": "opaque->ws"
					},
					"CgAAAKwMAAAAAAAArQwAAAAAAAAAAAAArQwAAAAAAACuDAAAAAAAAAAAAACuDAAAAAAAAK8MAAAAAAAAAAAAAK8MAAAAAAAAsAwAAAAAAAAAAAAAsAwAAAAAAACxDAAAAAAAAAAAAACxDAAAAAAAALIMAAAAAAAAAAAAALIMAAAAAAAAswwAAAAAAAAAAAAAswwAAAAAAAC0DAAAAAAAAAAAAAC0DAAAAAAAALUMAAAAAAAAAAAAALUMAAAAAAAAtgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAwAAAAAAACsDAAAAAAAAAAAAAAAAPC/"
				],
				[
					361,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALcMAAAAAAAAuAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwwAAAAAAAC3DAAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					1,
					"cut",
					null,
					"AQAAAKUMAAAAAAAApQwAAAAAAAAUAAAAYXNzZXJ0KG9wYXF1ZS0+d3MpOwo",
					"AQAAAAAAAAABAAAAuQwAAAAAAAClDAAAAAAAAAAAAAAAAAAA"
				],
				[
					365,
					2,
					"paste",
					null,
					"AgAAAKUMAAAAAAAAuQwAAAAAAAAAAAAAuQwAAAAAAADNDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQwAAAAAAAClDAAAAAAAAAAAAAAAAPC/"
				],
				[
					369,
					3,
					"left_delete",
					null,
					"AwAAALUMAAAAAAAAtQwAAAAAAAABAAAAc7QMAAAAAAAAtAwAAAAAAAABAAAAd7MMAAAAAAAAswwAAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAAtgwAAAAAAAC2DAAAAAAAAAAAAAAAAPC/"
				],
				[
					372,
					1,
					"left_delete",
					null,
					"AQAAALIMAAAAAAAAsgwAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAswwAAAAAAACzDAAAAAAAAAAAAAAAgGFA"
				],
				[
					377,
					1,
					"cut",
					null,
					"AQAAAH8MAAAAAAAAfwwAAAAAAAAmAAAAYXNzZXJ0KEpTX0lzT2JqZWN0KHNlc3Npb24tPndzX29iaikpOwo",
					"AQAAAAAAAAABAAAAfwwAAAAAAAClDAAAAAAAAAAAAAAAAAAA"
				],
				[
					378,
					2,
					"paste",
					null,
					"AgAAAH8MAAAAAAAApQwAAAAAAAAAAAAApQwAAAAAAADLDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwwAAAAAAAB/DAAAAAAAAAAAAAAAAPC/"
				],
				[
					382,
					9,
					"left_delete",
					null,
					"CQAAAKEMAAAAAAAAoQwAAAAAAAABAAAAKaAMAAAAAAAAoAwAAAAAAAABAAAAap8MAAAAAAAAnwwAAAAAAAABAAAAYp4MAAAAAAAAngwAAAAAAAABAAAAb50MAAAAAAAAnQwAAAAAAAABAAAAX5wMAAAAAAAAnAwAAAAAAAABAAAAc5sMAAAAAAAAmwwAAAAAAAABAAAAd5oMAAAAAAAAmgwAAAAAAAABAAAAPpkMAAAAAAAAmQwAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAogwAAAAAAACiDAAAAAAAAAAAAAAAAPC/"
				],
				[
					384,
					13,
					"left_delete",
					null,
					"DQAAAJIMAAAAAAAAkgwAAAAAAAABAAAAc5EMAAAAAAAAkQwAAAAAAAABAAAAKJAMAAAAAAAAkAwAAAAAAAABAAAAdI8MAAAAAAAAjwwAAAAAAAABAAAAY44MAAAAAAAAjgwAAAAAAAABAAAAZY0MAAAAAAAAjQwAAAAAAAABAAAAaowMAAAAAAAAjAwAAAAAAAABAAAAYosMAAAAAAAAiwwAAAAAAAABAAAAT4oMAAAAAAAAigwAAAAAAAABAAAAc4kMAAAAAAAAiQwAAAAAAAABAAAASYgMAAAAAAAAiAwAAAAAAAABAAAAX4cMAAAAAAAAhwwAAAAAAAABAAAAU4YMAAAAAAAAhgwAAAAAAAABAAAASg",
					"AQAAAAAAAAABAAAAkwwAAAAAAACTDAAAAAAAAAAAAAAAAPC/"
				],
				[
					385,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAIYMAAAAAAAAhwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgwAAAAAAACGDAAAAAAAAAAAAAAAAPC/"
				],
				[
					388,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAhwwAAAAAAACHDAAAAAAAAAAAAAAAAPC/"
				],
				[
					416,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFoCAAAAAAAAWwIAAAAAAAAAAAAAWwIAAAAAAABbAgAAAAAAAAMAAAAgd3M",
					"AQAAAAAAAAABAAAAWgIAAAAAAABdAgAAAAAAAAAAAAAAAPC/"
				],
				[
					417,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAFsCAAAAAAAAXAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwIAAAAAAABbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					418,
					1,
					"left_delete",
					null,
					"AQAAAFsCAAAAAAAAWwIAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAXAIAAAAAAABcAgAAAAAAAAAAAAAAAPC/"
				],
				[
					419,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AgAAAFsCAAAAAAAAXAIAAAAAAAAAAAAAXAIAAAAAAABdAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwIAAAAAAABbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					422,
					1,
					"cut",
					null,
					"AQAAAFsCAAAAAAAAWwIAAAAAAAAeAAAAd3NfZnJvbXdzaSh3c2ksIHNlc3Npb24sIGN0eCk7",
					"AQAAAAAAAAABAAAAWwIAAAAAAAB5AgAAAAAAAP///////+9/"
				],
				[
					425,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAE0CAAAAAAAATgIAAAAAAAAAAAAATgIAAAAAAABQAgAAAAAAAAAAAABQAgAAAAAAAFICAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQIAAAAAAABNAgAAAAAAAP///////+9/"
				],
				[
					426,
					1,
					"paste",
					null,
					"AQAAAFICAAAAAAAAcAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgIAAAAAAABSAgAAAAAAAAAAAAAAAPC/"
				],
				[
					435,
					1,
					"paste",
					null,
					"AQAAAH4CAAAAAAAAnAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgIAAAAAAAB+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					448,
					1,
					"cut",
					null,
					"AQAAACQCAAAAAAAAJAIAAAAAAACtAAAACiAgaWYoIW9wYXF1ZSAmJiB3c2kgJiYgc2Vzc2lvbiAmJiBjdHgpIHsKICAgIHdzX2Zyb213c2kod3NpLCBzZXNzaW9uLCBjdHgpOwogICAgb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CiAgICBhc3NlcnQob3BhcXVlKTsKICAgIG9wYXF1ZS0+c2VzcyA9IHNlc3Npb247CiAgfQo",
					"AQAAAAAAAAABAAAAJAIAAAAAAADRAgAAAAAAAAAAAAAAAPC/"
				],
				[
					449,
					1,
					"paste",
					null,
					"AQAAACQCAAAAAAAA0QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAIAAAAAAAAkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					459,
					1,
					"paste",
					null,
					"AgAAACQCAAAAAAAAtQIAAAAAAAAAAAAAtQIAAAAAAAC1AgAAAAAAAK0AAAAKICBpZighb3BhcXVlICYmIHdzaSAmJiBzZXNzaW9uICYmIGN0eCkgewogICAgd3NfZnJvbXdzaSh3c2ksIHNlc3Npb24sIGN0eCk7CiAgICBvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKTsKICAgIGFzc2VydChvcGFxdWUpOwogICAgb3BhcXVlLT5zZXNzID0gc2Vzc2lvbjsKICB9Cg",
					"AQAAAAAAAAABAAAA0QIAAAAAAAAkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					460,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALUCAAAAAAAAtgIAAAAAAAAAAAAAtgIAAAAAAAC5AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQIAAAAAAAC1AgAAAAAAAAAAAAAAAPC/"
				],
				[
					476,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA3QEAAAAAAAAkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					477,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA3QEAAAAAAAAkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					480,
					1,
					"cut",
					null,
					"AQAAAAIXAAAAAAAAAhcAAAAAAABFAAAAICBjYXNlIExXU19DQUxMQkFDS19XU19TRVJWRVJfRFJPUF9QUk9UT0NPTDogewogICAgICByZXR1cm4gMDsKICAgIH0K",
					"AQAAAAAAAAABAAAAAhcAAAAAAABHFwAAAAAAAAAAAAAAAPC/"
				],
				[
					481,
					2,
					"paste",
					null,
					"AgAAAAIXAAAAAAAARxcAAAAAAAAAAAAARxcAAAAAAACMFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAhcAAAAAAAACFwAAAAAAAAAAAAAAAPC/"
				],
				[
					484,
					1,
					"insert",
					{
						"characters": "GET"
					},
					"BAAAAFsXAAAAAAAAXBcAAAAAAAAAAAAAXBcAAAAAAABcFwAAAAAAABcAAABXU19TRVJWRVJfRFJPUF9QUk9UT0NPTFwXAAAAAAAAXRcAAAAAAAAAAAAAXRcAAAAAAABeFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWxcAAAAAAAByFwAAAAAAAAAAAAAAAPC/"
				],
				[
					485,
					1,
					"insert_completion",
					{
						"completion": "LWS_CALLBACK_GET_THREAD_ID",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "LWS_CALLBACK_GET_THREAD_ID"
					},
					"AgAAAE4XAAAAAAAAThcAAAAAAAAQAAAATFdTX0NBTExCQUNLX0dFVE4XAAAAAAAAaBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXhcAAAAAAABeFwAAAAAAAAAAAAAAAPC/"
				],
				[
					492,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAeRcAAAAAAAB5FwAAAAAAAAAAAAAAAPC/"
				],
				[
					499,
					1,
					"cut",
					null,
					"AQAAAEcXAAAAAAAARxcAAAAAAAAnAAAAICAgIGNhc2UgTFdTX0NBTExCQUNLX0dFVF9USFJFQURfSUQ6IHsK",
					"AQAAAAAAAAABAAAARxcAAAAAAABuFwAAAAAAAAAAAAAAAPC/"
				],
				[
					500,
					2,
					"paste",
					null,
					"AgAAAEcXAAAAAAAAbhcAAAAAAAAAAAAAbhcAAAAAAACVFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARxcAAAAAAABHFwAAAAAAAAAAAAAAAPC/"
				],
				[
					507,
					1,
					"paste",
					null,
					"AgAAAFAXAAAAAAAAcRcAAAAAAAAAAAAAcRcAAAAAAABxFwAAAAAAABoAAABMV1NfQ0FMTEJBQ0tfR0VUX1RIUkVBRF9JRA",
					"AQAAAAAAAAABAAAAUBcAAAAAAABqFwAAAAAAAAAAAAAAAPC/"
				],
				[
					510,
					1,
					"left_delete",
					null,
					"AQAAAHMXAAAAAAAAcxcAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAAdBcAAAAAAAB0FwAAAAAAAAAAAAAAAPC/"
				],
				[
					524,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAEAIAAAAAAAAQQgAAAAAAAAAAAAAQQgAAAAAAABCCAAAAAAAAAAAAABCCAAAAAAAAEMIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAgAAAAAAABACAAAAAAAAAAAAAAAAPC/"
				],
				[
					525,
					1,
					"insert",
					{
						"characters": " c"
					},
					"AgAAAEMIAAAAAAAARAgAAAAAAAAAAAAARAgAAAAAAABFCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwgAAAAAAABDCAAAAAAAAAAAAAAAAPC/"
				],
				[
					526,
					1,
					"insert",
					{
						"characters": "tx"
					},
					"AgAAAEUIAAAAAAAARggAAAAAAAAAAAAARggAAAAAAABHCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQgAAAAAAABFCAAAAAAAAAAAAAAAAPC/"
				],
				[
					527,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEcIAAAAAAAASAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwgAAAAAAABHCAAAAAAAAAAAAAAAAPC/"
				],
				[
					528,
					4,
					"left_delete",
					null,
					"BAAAAEcIAAAAAAAARwgAAAAAAAABAAAAIEYIAAAAAAAARggAAAAAAAABAAAAeEUIAAAAAAAARQgAAAAAAAABAAAAdEQIAAAAAAAARAgAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAASAgAAAAAAABICAAAAAAAAAAAAAAAAPC/"
				],
				[
					529,
					1,
					"insert",
					{
						"characters": "session"
					},
					"BwAAAEQIAAAAAAAARQgAAAAAAAAAAAAARQgAAAAAAABGCAAAAAAAAAAAAABGCAAAAAAAAEcIAAAAAAAAAAAAAEcIAAAAAAAASAgAAAAAAAAAAAAASAgAAAAAAABJCAAAAAAAAAAAAABJCAAAAAAAAEoIAAAAAAAAAAAAAEoIAAAAAAAASwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAgAAAAAAABECAAAAAAAAAAAAAAAAPC/"
				],
				[
					530,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAEsIAAAAAAAATAgAAAAAAAAAAAAATAgAAAAAAABNCAAAAAAAAAAAAABNCAAAAAAAAE4IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwgAAAAAAABLCAAAAAAAAAAAAAAAAPC/"
				],
				[
					531,
					1,
					"insert",
					{
						"characters": " ctx"
					},
					"BAAAAE4IAAAAAAAATwgAAAAAAAAAAAAATwgAAAAAAABQCAAAAAAAAAAAAABQCAAAAAAAAFEIAAAAAAAAAAAAAFEIAAAAAAAAUggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATggAAAAAAABOCAAAAAAAAAAAAAAAAPC/"
				],
				[
					536,
					1,
					"insert",
					{
						"characters": "session,"
					},
					"CAAAAHUIAAAAAAAAdggAAAAAAAAAAAAAdggAAAAAAAB3CAAAAAAAAAAAAAB3CAAAAAAAAHgIAAAAAAAAAAAAAHgIAAAAAAAAeQgAAAAAAAAAAAAAeQgAAAAAAAB6CAAAAAAAAAAAAAB6CAAAAAAAAHsIAAAAAAAAAAAAAHsIAAAAAAAAfAgAAAAAAAAAAAAAfAgAAAAAAAB9CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQgAAAAAAAB1CAAAAAAAAAAAAAAAAPC/"
				],
				[
					537,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAH0IAAAAAAAAfggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQgAAAAAAAB9CAAAAAAAAAAAAAAAAPC/"
				],
				[
					587,
					1,
					"insert",
					{
						"characters": "session,"
					},
					"CAAAAO8MAAAAAAAA8AwAAAAAAAAAAAAA8AwAAAAAAADxDAAAAAAAAAAAAADxDAAAAAAAAPIMAAAAAAAAAAAAAPIMAAAAAAAA8wwAAAAAAAAAAAAA8wwAAAAAAAD0DAAAAAAAAAAAAAD0DAAAAAAAAPUMAAAAAAAAAAAAAPUMAAAAAAAA9gwAAAAAAAAAAAAA9gwAAAAAAAD3DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wwAAAAAAADvDAAAAAAAAAAAAAAAAPC/"
				],
				[
					597,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANQCAAAAAAAA1QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AIAAAAAAADUAgAAAAAAAAAAAAAAAPC/"
				],
				[
					598,
					1,
					"paste",
					null,
					"AQAAANUCAAAAAAAAIQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QIAAAAAAADVAgAAAAAAAAAAAAAAAPC/"
				],
				[
					601,
					1,
					"cut",
					null,
					"AQAAANYCAAAAAAAA1gIAAAAAAABMAAAAICBpZighb3BhcXVlICYmIHNlc3Npb24gJiYgY3R4KQogICAgb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksc2Vzc2lvbiwgY3R4KTsKCg",
					"AQAAAAAAAAABAAAA1gIAAAAAAAAiAwAAAAAAAAAAAAAAAAAA"
				],
				[
					604,
					1,
					"paste",
					null,
					"AQAAANUCAAAAAAAAIQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QIAAAAAAADVAgAAAAAAAAAAAAAAAAAA"
				],
				[
					609,
					1,
					"left_delete",
					null,
					"AQAAACADAAAAAAAAIAMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAIQMAAAAAAAAhAwAAAAAAAAAAAAAAAPC/"
				],
				[
					614,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"AwAAANQCAAAAAAAA1QIAAAAAAAAAAAAA1QIAAAAAAADWAgAAAAAAAAAAAADWAgAAAAAAANcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AIAAAAAAADUAgAAAAAAAAAAAAAAAPC/"
				],
				[
					615,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANcCAAAAAAAA2QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wIAAAAAAADXAgAAAAAAAAAAAAAAAPC/"
				],
				[
					616,
					1,
					"insert",
					{
						"characters": "reason"
					},
					"BgAAANgCAAAAAAAA2QIAAAAAAAAAAAAA2QIAAAAAAADaAgAAAAAAAAAAAADaAgAAAAAAANsCAAAAAAAAAAAAANsCAAAAAAAA3AIAAAAAAAAAAAAA3AIAAAAAAADdAgAAAAAAAAAAAADdAgAAAAAAAN4CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AIAAAAAAADYAgAAAAAAAAAAAAAAAPC/"
				],
				[
					617,
					1,
					"insert",
					{
						"characters": " !="
					},
					"AwAAAN4CAAAAAAAA3wIAAAAAAAAAAAAA3wIAAAAAAADgAgAAAAAAAAAAAADgAgAAAAAAAOECAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gIAAAAAAADeAgAAAAAAAAAAAAAAAPC/"
				],
				[
					618,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOECAAAAAAAA4gIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QIAAAAAAADhAgAAAAAAAAAAAAAAAPC/"
				],
				[
					619,
					1,
					"paste",
					null,
					"AQAAAOICAAAAAAAAFQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gIAAAAAAADiAgAAAAAAAAAAAAAAAPC/"
				],
				[
					621,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABYDAAAAAAAAFwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgMAAAAAAAAWAwAAAAAAAAAAAAAAAPC/"
				],
				[
					630,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAABUDAAAAAAAAFgMAAAAAAAAAAAAAFgMAAAAAAAAXAwAAAAAAAAAAAAAXAwAAAAAAABgDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQMAAAAAAAAVAwAAAAAAAAAAAAAAAPC/"
				],
				[
					631,
					1,
					"insert",
					{
						"characters": " reason"
					},
					"BwAAABgDAAAAAAAAGQMAAAAAAAAAAAAAGQMAAAAAAAAaAwAAAAAAAAAAAAAaAwAAAAAAABsDAAAAAAAAAAAAABsDAAAAAAAAHAMAAAAAAAAAAAAAHAMAAAAAAAAdAwAAAAAAAAAAAAAdAwAAAAAAAB4DAAAAAAAAAAAAAB4DAAAAAAAAHwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAMAAAAAAAAYAwAAAAAAAAAAAAAAAPC/"
				],
				[
					632,
					1,
					"insert",
					{
						"characters": " !"
					},
					"AgAAAB8DAAAAAAAAIAMAAAAAAAAAAAAAIAMAAAAAAAAhAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwMAAAAAAAAfAwAAAAAAAAAAAAAAAPC/"
				],
				[
					634,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAACIDAAAAAAAAIwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgMAAAAAAAAiAwAAAAAAAAAAAAAAAPC/"
				],
				[
					635,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACMDAAAAAAAAJAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwMAAAAAAAAjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					636,
					3,
					"left_delete",
					null,
					"AwAAACMDAAAAAAAAIwMAAAAAAAABAAAAICIDAAAAAAAAIgMAAAAAAAABAAAAPSEDAAAAAAAAIQMAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAJAMAAAAAAAAkAwAAAAAAAAAAAAAAAPC/"
				],
				[
					637,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAACEDAAAAAAAAIgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQMAAAAAAAAhAwAAAAAAAAAAAAAAAPC/"
				],
				[
					638,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACIDAAAAAAAAIwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgMAAAAAAAAiAwAAAAAAAAAAAAAAAPC/"
				],
				[
					639,
					1,
					"paste",
					null,
					"AQAAACMDAAAAAAAAVgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwMAAAAAAAAjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					640,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAFYDAAAAAAAAVwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgMAAAAAAABWAwAAAAAAAAAAAAAAAPC/"
				],
				[
					643,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAVwMAAAAAAABXAwAAAAAAAAAAAAAAAPC/"
				],
				[
					654,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFkDAAAAAAAAWgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQMAAAAAAABZAwAAAAAAAP///////+9/"
				],
				[
					655,
					1,
					"wrap_block",
					{
						"begin": "{",
						"end": "}"
					},
					"AgAAAFoDAAAAAAAAWwMAAAAAAAAAAAAArAMAAAAAAACwAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgMAAAAAAABaAwAAAAAAAAAAAAAAAPC/"
				],
				[
					656,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAFsDAAAAAAAAXAMAAAAAAAAAAAAAXAMAAAAAAABeAwAAAAAAAAAAAABeAwAAAAAAAGADAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwMAAAAAAABbAwAAAAAAAAAAAAAAAPC/"
				],
				[
					657,
					1,
					"paste",
					null,
					"AQAAAGADAAAAAAAAzQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAMAAAAAAABgAwAAAAAAAAAAAAAAAPC/"
				],
				[
					659,
					1,
					"left_delete",
					null,
					"AQAAAM0DAAAAAAAAzQMAAAAAAABRAAAACiAgICBpZighb3BhcXVlICYmIHNlc3Npb24gJiYgY3R4KQogICAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgc2Vzc2lvbiwgY3R4KTsK",
					"AQAAAAAAAAABAAAAzQMAAAAAAAAeBAAAAAAAAAAAAAAAAAAA"
				],
				[
					672,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA1AIAAAAAAADQAwAAAAAAAAAAAAAAAPC/"
				],
				[
					715,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAL0BAAAAAAAAvgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQEAAAAAAAC9AQAAAAAAAAAAAAAAAPC/"
				],
				[
					716,
					1,
					"left_delete",
					null,
					"AQAAAL0BAAAAAAAAvQEAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAvgEAAAAAAAC+AQAAAAAAAAAAAAAAAPC/"
				],
				[
					718,
					1,
					"insert",
					{
						"characters": "server"
					},
					"BgAAALwBAAAAAAAAvQEAAAAAAAAAAAAAvQEAAAAAAAC+AQAAAAAAAAAAAAC+AQAAAAAAAL8BAAAAAAAAAAAAAL8BAAAAAAAAwAEAAAAAAAAAAAAAwAEAAAAAAADBAQAAAAAAAAAAAADBAQAAAAAAAMIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAEAAAAAAAC8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					719,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAMIBAAAAAAAAwwEAAAAAAAAAAAAAwwEAAAAAAADEAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgEAAAAAAADCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					720,
					1,
					"insert",
					{
						"characters": " server->c"
					},
					"CgAAAMQBAAAAAAAAxQEAAAAAAAAAAAAAxQEAAAAAAADGAQAAAAAAAAAAAADGAQAAAAAAAMcBAAAAAAAAAAAAAMcBAAAAAAAAyAEAAAAAAAAAAAAAyAEAAAAAAADJAQAAAAAAAAAAAADJAQAAAAAAAMoBAAAAAAAAAAAAAMoBAAAAAAAAywEAAAAAAAAAAAAAywEAAAAAAADMAQAAAAAAAAAAAADMAQAAAAAAAM0BAAAAAAAAAAAAAM0BAAAAAAAAzgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAEAAAAAAADEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					721,
					9,
					"left_delete",
					null,
					"CQAAAM0BAAAAAAAAzQEAAAAAAAABAAAAY8wBAAAAAAAAzAEAAAAAAAABAAAAPssBAAAAAAAAywEAAAAAAAABAAAALcoBAAAAAAAAygEAAAAAAAABAAAAcskBAAAAAAAAyQEAAAAAAAABAAAAZcgBAAAAAAAAyAEAAAAAAAABAAAAdscBAAAAAAAAxwEAAAAAAAABAAAAcsYBAAAAAAAAxgEAAAAAAAABAAAAZcUBAAAAAAAAxQEAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAzgEAAAAAAADOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					724,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAANcBAAAAAAAA2AEAAAAAAAAAAAAA2AEAAAAAAADZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wEAAAAAAADXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					725,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAANkBAAAAAAAA2gEAAAAAAAAAAAAA2gEAAAAAAADbAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QEAAAAAAADZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					743,
					1,
					"paste",
					null,
					"AgAAANcUAAAAAAAA7xQAAAAAAAAAAAAA7xQAAAAAAADvFAAAAAAAAA8AAABvcGFxdWUtPmJpbmFyeSA",
					"AQAAAAAAAAABAAAA1xQAAAAAAADmFAAAAAAAAAAAAAAAAPC/"
				],
				[
					744,
					1,
					"left_delete",
					null,
					"AQAAAO4UAAAAAAAA7hQAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA7xQAAAAAAADvFAAAAAAAAAAAAAAAAPC/"
				],
				[
					745,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO4UAAAAAAAA7xQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7hQAAAAAAADuFAAAAAAAAAAAAAAAAPC/"
				],
				[
					747,
					1,
					"insert",
					{
						"characters": "wsi"
					},
					"AwAAAO0UAAAAAAAA7hQAAAAAAAAAAAAA7hQAAAAAAADvFAAAAAAAAAAAAADvFAAAAAAAAPAUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7RQAAAAAAADtFAAAAAAAAAAAAAAAAPC/"
				],
				[
					749,
					2,
					"left_delete",
					null,
					"AgAAANgUAAAAAAAA2BQAAAAAAAABAAAAINcUAAAAAAAA1xQAAAAAAAADAAAA4peG",
					"AQAAAAAAAAABAAAA2RQAAAAAAADZFAAAAAAAAAAAAAAAAPC/"
				],
				[
					755,
					1,
					"left_delete",
					null,
					"AQAAAIQUAAAAAAAAhBQAAAAAAABFAAAATWlubmV0V2Vic29ja2V0KiB3cyA9IG1pbm5ldF93c19kYXRhMihjdHgsIHNlc3Npb24tPndzX29iaik7CiAgICAgICAg",
					"AQAAAAAAAAABAAAAhBQAAAAAAADJFAAAAAAAAAAAAAAAAPC/"
				],
				[
					769,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAqhcAAAAAAACqFwAAAAAAAAAAAAAAAFRA"
				],
				[
					770,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABjGQAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJtaW5uZXQtcmVzcG9uc2UuaCIKI2luY2x1ZGUgPGFzc2VydC5oPgoKaW50IGh0dHBfc2VydmVyX2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zLCB2b2lkKiwgdm9pZCosIHNpemVfdCk7CgppbnQKd3NfY2FsbGJhY2soc3RydWN0IGx3cyogd3NpLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pIHsKICBNaW5uZXRTZXNzaW9uKiBzZXNzaW9uID0gdXNlcjsKICBNaW5uZXRTZXJ2ZXIqIHNlcnZlciA9IGx3c19jb250ZXh0X3VzZXIobHdzX2dldF9jb250ZXh0KHdzaSkpOwogIEpTQ29udGV4dCogY3R4ID0gc2VydmVyLT5jb250ZXh0LmpzOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIGlmKGx3c19pc19wb2xsX2NhbGxiYWNrKHJlYXNvbikpCiAgICByZXR1cm4gZmRfY2FsbGJhY2sod3NpLCByZWFzb24sICZzZXJ2ZXItPmNiLmZkLCBpbik7CiAgaWYobHdzX2lzX2h0dHBfY2FsbGJhY2socmVhc29uKSkKICAgIHJldHVybiBodHRwX3NlcnZlcl9jYWxsYmFjayh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CgogIExPRygiV1MiLCAiZmQ9JWQsICVzJXNpbj0nJS4qcycgc2Vzc2lvbiMlaSIsIGx3c19nZXRfc29ja2V0X2ZkKHdzaSksIGlzX2gyKHdzaSkgPyAiaDIsICIgOiAiIiwgbHdzX2lzX3NzbCh3c2kpID8gInNzbCwgIiA6ICIiLCAoaW50KWxlbiwgaW4sIHNlc3Npb24gPyBzZXNzaW9uLT5zZXJpYWwgOiAwKTsKCiAgc3dpdGNoKHJlYXNvbikgewogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRklMVEVSX05FVFdPUktfQ09OTkVDVElPTjoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0ZJTFRFUl9QUk9UT0NPTF9DT05ORUNUSU9OOgogICAgICBpZighb3BhcXVlLT5yZXEpCiAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X2Zyb213c2koY3R4LCB3c2kpOwoKICAgICAgYnJlYWs7CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUFJPVE9DT0xfSU5JVDogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0RFU1RST1k6IHsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX1NFUlZFUl9WRVJJRllfQ0VSVFM6CiAgICBjYXNlIExXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfQ0xJRU5UX1ZFUklGWV9DRVJUUzogewogICAgICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfU0VSVkVSX05FV19DTElFTlRfSU5TVEFOVElBVEVEOiB7CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9DUkVBVEU6IHsKICAgICAgLy8gb3BhcXVlLT53cyA9IHdzX25ldyh3c2ksIGN0eCk7CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9ERVNUUk9ZOiB7CiAgICAgIC8qICAgaWYob3BhcXVlICYmIG9wYXF1ZS0+d3MpIHsKICAgICAgICAgICB3c19mcmVlKG9wYXF1ZS0+d3MsIGN0eCk7CiAgICAgICAgICAgb3BhcXVlLT53cyA9IDA7CiAgICAgICAgIH0qLwogICAgICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKSB7CiAgICAgICAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgMCk7CiAgICAgICAgb3BhcXVlX2ZyZWUob3BhcXVlLCBjdHgpOwogICAgICB9CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0hUVFBfQ09ORklSTV9VUEdSQURFOiB7CiAgICAgIGlmKCFsd3NfaXNfc3NsKHdzaSkgJiYgIXN0cmNtcChpbiwgImgyYyIpKQogICAgICAgIHJldHVybiAtMTsKCiAgICAgIC8qcmV0dXJuIGh0dHBfc2VydmVyX2NhbGxiYWNrKHdzaSwgcmVhc29uLCB1c2VyLCBpbiwgbGVuKTsqLwogICAgICBpZighb3BhcXVlKQogICAgICAgIG9wYXF1ZSA9IGx3c19vcGFxdWUod3NpLCBjdHgpOwogICAgICBhc3NlcnQob3BhcXVlKTsKCiAgICAgIGlmKCFvcGFxdWUtPnJlcSkKICAgICAgICBvcGFxdWUtPnJlcSA9IHJlcXVlc3RfZnJvbXdzaShjdHgsIHdzaSk7CgogICAgICAvLyBpbnQgbnVtX2hkciA9IGhlYWRlcnNfZ2V0KGN0eCwgJm9wYXF1ZS0+cmVxLT5oZWFkZXJzLCB3c2kpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19FU1RBQkxJU0hFRDogewogICAgICAvLyBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSA9IGx3c19vcGFxdWUod3NpLCBjdHgpOwogICAgICBpbnQgc3RhdHVzOwogICAgICBzdGF0dXMgPSBsd3NfaHR0cF9jbGllbnRfaHR0cF9yZXNwb25zZSh3c2kpOwogICAgICBNaW5uZXRIdHRwTW91bnQqIG1vdW50ID0gMDsKICAgICAgTWlubmV0VVJMKiB1cmw7CgogICAgICBpZighb3BhcXVlLT5yZXEpCiAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X2Zyb213c2koY3R4LCB3c2kpOwoKICAgICAgaWYob3BhcXVlLT5yZXEpIHsKICAgICAgICB1cmwgPSAmb3BhcXVlLT5yZXEtPnVybDsKCiAgICAgICAgaWYoKG1vdW50ID0gbW91bnRfZmluZF9zKHNlcnZlci0+Y29udGV4dC5pbmZvLm1vdW50cywgdXJsLT5wYXRoKSkpIHsKICAgICAgICAgIC8vIHByaW50ZigiZm91bmQgbW91bnQgbW50PSVzIG9yZz0lcyBkZWY9JXMgcHJvPSVzXG4iLCBtb3VudC0+bW50LCBtb3VudC0+b3JnLCBtb3VudC0+ZGVmLCBtb3VudC0+cHJvKTsKICAgICAgICB9CgogICAgICAgIGlmKCFKU19Jc09iamVjdChzZXNzaW9uLT5yZXFfb2JqKSkKICAgICAgICAgIHNlc3Npb24tPnJlcV9vYmogPSBtaW5uZXRfcmVxdWVzdF93cmFwKGN0eCwgb3BhcXVlLT5yZXEpOwoKICAgICAgICBzZXNzaW9uLT5yZXNwX29iaiA9IG1pbm5ldF9yZXNwb25zZV9uZXcoY3R4LCBvcGFxdWUtPnJlcS0+dXJsLCBzdGF0dXMsIDAsIFRSVUUsICJ0ZXh0L2h0bWwiKTsKICAgICAgfQoKICAgICAgb3BhcXVlLT5zdGF0dXMgPSBPUEVOOwoKICAgICAgaWYoc2VydmVyLT5jYi5jb25uZWN0LmN0eCkgewoKICAgICAgICBpZighSlNfSXNPYmplY3Qoc2Vzc2lvbi0+d3Nfb2JqKSkKICAgICAgICAgIHNlc3Npb24tPndzX29iaiA9IG1pbm5ldF93c19mcm9td3NpKGN0eCwgd3NpKTsKCiAgICAgICAgaWYoIW9wYXF1ZS0+d3MpCiAgICAgICAgICBvcGFxdWUtPndzID0gbWlubmV0X3dzX2RhdGEoc2Vzc2lvbi0+d3Nfb2JqKTsKCiAgICAgICAgTE9HKCJ3cyIsICJ3c2kjJSIgUFJJZDY0ICIgcmVxPSVwIiwgb3BhcXVlLT5zZXJpYWwsIG9wYXF1ZS0+cmVxKTsKICAgICAgICBzZXJ2ZXJfZXhjZXB0aW9uKHNlcnZlciwgbWlubmV0X2VtaXRfdGhpcygmc2VydmVyLT5jYi5jb25uZWN0LCBzZXNzaW9uLT53c19vYmosIDIsICZzZXNzaW9uLT53c19vYmopKTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19XU19QRUVSX0lOSVRJQVRFRF9DTE9TRToKICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMT1NFRDogewogICAgICBpZihvcGFxdWUtPnN0YXR1cyA8IENMT1NJTkcpIHsKICAgICAgICBKU1ZhbHVlIHdoeSA9IEpTX1VOREVGSU5FRDsKICAgICAgICBpbnQgY29kZSA9IC0xOwoKICAgICAgICBpZihpbikgewogICAgICAgICAgdWludDhfdCogY29kZXAgPSBpbjsKICAgICAgICAgIGNvZGUgPSAoY29kZXBbMF0gPDwgOCkgKyBjb2RlcFsxXTsKICAgICAgICAgIGlmKGxlbiAtIDIgPiAwKQogICAgICAgICAgICB3aHkgPSBKU19OZXdTdHJpbmdMZW4oc2VydmVyLT5jb250ZXh0LmpzLCAoY2hhciopaW4gKyAyLCBsZW4gLSAyKTsKICAgICAgICB9CgogICAgICAgIG9wYXF1ZS0+c3RhdHVzID0gQ0xPU0lORzsKCiAgICAgICAgTE9HKCJ3cyIsICJmZD0lZCwgc3RhdHVzPSVkIiwgbHdzX2dldF9zb2NrZXRfZmQod3NpKSwgb3BhcXVlLT5zdGF0dXMpOwoKICAgICAgICBpZihjdHgpIHsKICAgICAgICAgIEpTVmFsdWUgY2JfYXJndlszXSA9IHtzZXNzaW9uLT53c19vYmosIGNvZGUgIT0gLTEgPyBKU19OZXdJbnQzMihjdHgsIGNvZGUpIDogSlNfVU5ERUZJTkVELCB3aHl9OwogICAgICAgICAgc2VydmVyX2V4Y2VwdGlvbihzZXJ2ZXIsIG1pbm5ldF9lbWl0KCZzZXJ2ZXItPmNiLmNsb3NlLCBjb2RlICE9IC0xID8gMyA6IDEsIGNiX2FyZ3YpKTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICAgIH0KICAgICAgICBKU19GcmVlVmFsdWUoc2VydmVyLT5jb250ZXh0LmpzLCB3aHkpOwogICAgICAgIC8qSlNfRnJlZVZhbHVlKHNlcnZlci0+Y29udGV4dC5qcywgc2Vzc2lvbi0+d3Nfb2JqKTsKICAgICAgICBzZXNzaW9uLT53c19vYmogPSBKU19OVUxMOyovCiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfU0VSVkVSX1dSSVRFQUJMRTogewogICAgICBmcHJpbnRmKHN0ZGVyciwgIlx4MWJbMTszM213cml0YWJsZVx4MWJbMG0gJXMgZmQ9JWRcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQod3NpKSk7CgogICAgICBNaW5uZXRCdWZmZXIqIGJ1ZiA9ICZzZXNzaW9uLT5zZW5kX2J1ZjsKICAgICAgZnByaW50ZihzdGRlcnIsICJceDFiWzE7MzNtd3JpdGFibGVceDFiWzBtICVzIGJ1Zj0lc1xuIiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBidWZmZXJfZXNjYXBlZChidWYsIGN0eCkpOwoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRTogewogICAgICBpZihjdHgpIHsKICAgICAgICBNaW5uZXRXZWJzb2NrZXQqIHdzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzc2lvbi0+d3Nfb2JqKTsKICAgICAgICBKU1ZhbHVlIG1zZyA9IG9wYXF1ZS0+YmluYXJ5ID8gSlNfTmV3QXJyYXlCdWZmZXJDb3B5KGN0eCwgaW4sIGxlbikgOiBKU19OZXdTdHJpbmdMZW4oY3R4LCBpbiwgbGVuKTsKICAgICAgICBKU1ZhbHVlIGNiX2FyZ3ZbMl0gPSB7SlNfRHVwVmFsdWUoY3R4LCBzZXNzaW9uLT53c19vYmopLCBtc2d9OwogICAgICAgIHNlcnZlcl9leGNlcHRpb24oc2VydmVyLCBtaW5uZXRfZW1pdCgmc2VydmVyLT5jYi5tZXNzYWdlLCAyLCBjYl9hcmd2KSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlsxXSk7CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFX1BPTkc6IHsKICAgICAgaWYoc2VydmVyLT5jYi5wb25nLmN0eCkgewogICAgICAgIC8vIHdzX29iaiA9IG1pbm5ldF93c19mcm9td3NpKHNlcnZlci0+Y2IucG9uZy5jdHgsIHdzaSk7CiAgICAgICAgSlNWYWx1ZSBtc2cgPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkoc2VydmVyLT5jYi5wb25nLmN0eCwgaW4sIGxlbik7CiAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzJdID0ge0pTX0R1cFZhbHVlKHNlcnZlci0+Y2IucG9uZy5jdHgsIHNlc3Npb24tPndzX29iaiksIG1zZ307CiAgICAgICAgc2VydmVyX2V4Y2VwdGlvbihzZXJ2ZXIsIG1pbm5ldF9lbWl0KCZzZXJ2ZXItPmNiLnBvbmcsIDIsIGNiX2FyZ3YpKTsKICAgICAgICBKU19GcmVlVmFsdWUoc2VydmVyLT5jYi5wb25nLmN0eCwgY2JfYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKHNlcnZlci0+Y2IucG9uZy5jdHgsIGNiX2FyZ3ZbMV0pOwogICAgICB9CiAgICAgIHJldHVybiAwOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfU0VSVkVSX0RST1BfUFJPVE9DT0w6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgZGVmYXVsdDogewogICAgICAvLyBwcmludGYoIndzX2NhbGxiYWNrICVzICVwICVwICV6dVxuIiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSwgdXNlciwgaW4sIGxlbik7CiAgICAgIG1pbm5ldF9sd3NfdW5oYW5kbGVkKF9fZnVuY19fLCByZWFzb24pOwogICAgICBicmVhazsKICAgIH0KICB9CgogIC8vIGx3c2xfdXNlcigid3MgICAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBmZD0lZCB1cmw9JyVzJyBpbj0nJS4qcydcbiIsIDIyICsgKHJlYXNvbiAqIDIpLCBsd3NfY2FsbGJhY2tfbmFtZShyZWFzb24pICsgMTMsIGx3c19nZXRfc29ja2V0X2ZkKHdzaSksIGx3c19nZXRfdXJpKHdzaSwgc2VydmVyLT5jb250ZXh0LmpzLCAvLwogIC8vIFdTSV9UT0tFTl9HRVRfVVJJKSwgKGludClsZW4sIChjaGFyKilpbik7CgogIGlmKG9wYXF1ZSAmJiBvcGFxdWUtPnN0YXR1cyA+PSBDTE9TSU5HKQogICAgcmV0dXJuIC0xOwoKICByZXR1cm4gMDsgLy8gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwp9CgAAAAAAAAAAzBkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqhcAAAAAAACqFwAAAAAAAAAAAAAAAPC/"
				],
				[
					833,
					1,
					"wrap_block",
					{
						"begin": "{",
						"end": "}"
					},
					"AgAAAJYIAAAAAAAAlwgAAAAAAAAAAAAAyQgAAAAAAADRCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlggAAAAAAACWCAAAAAAAAAAAAAAAAPC/"
				],
				[
					836,
					1,
					"insert",
					{
						"characters": "\nopaque->s"
					},
					"CwAAAMgIAAAAAAAAyQgAAAAAAAAAAAAAyQgAAAAAAADRCAAAAAAAAAAAAADRCAAAAAAAANIIAAAAAAAAAAAAANIIAAAAAAAA0wgAAAAAAAAAAAAA0wgAAAAAAADUCAAAAAAAAAAAAADUCAAAAAAAANUIAAAAAAAAAAAAANUIAAAAAAAA1ggAAAAAAAAAAAAA1ggAAAAAAADXCAAAAAAAAAAAAADXCAAAAAAAANgIAAAAAAAAAAAAANgIAAAAAAAA2QgAAAAAAAAAAAAA2QgAAAAAAADaCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAgAAAAAAADICAAAAAAAAP///////+9/"
				],
				[
					837,
					1,
					"insert",
					{
						"characters": "ess"
					},
					"AwAAANoIAAAAAAAA2wgAAAAAAAAAAAAA2wgAAAAAAADcCAAAAAAAAAAAAADcCAAAAAAAAN0IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2ggAAAAAAADaCAAAAAAAAAAAAAAAAPC/"
				],
				[
					838,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN0IAAAAAAAA3ggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QgAAAAAAADdCAAAAAAAAAAAAAAAAPC/"
				],
				[
					839,
					1,
					"left_delete",
					null,
					"AQAAAN0IAAAAAAAA3QgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA3ggAAAAAAADeCAAAAAAAAAAAAAAAAPC/"
				],
				[
					840,
					1,
					"insert",
					{
						"characters": "->req_"
					},
					"BgAAAN0IAAAAAAAA3ggAAAAAAAAAAAAA3ggAAAAAAADfCAAAAAAAAAAAAADfCAAAAAAAAOAIAAAAAAAAAAAAAOAIAAAAAAAA4QgAAAAAAAAAAAAA4QgAAAAAAADiCAAAAAAAAAAAAADiCAAAAAAAAOMIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QgAAAAAAADdCAAAAAAAAAAAAAAAAPC/"
				],
				[
					841,
					1,
					"paste",
					null,
					"AQAAAOMIAAAAAAAA9AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wgAAAAAAADjCAAAAAAAAAAAAAAAAPC/"
				],
				[
					843,
					1,
					"insert",
					{
						"characters": "session>"
					},
					"CQAAANEIAAAAAAAA0ggAAAAAAAAAAAAA0ggAAAAAAADSCAAAAAAAACMAAABvcGFxdWUtPnNlc3MtPnJlcV9XU0lfVE9LRU5fR0VUX1VSSdIIAAAAAAAA0wgAAAAAAAAAAAAA0wgAAAAAAADUCAAAAAAAAAAAAADUCAAAAAAAANUIAAAAAAAAAAAAANUIAAAAAAAA1ggAAAAAAAAAAAAA1ggAAAAAAADXCAAAAAAAAAAAAADXCAAAAAAAANgIAAAAAAAAAAAAANgIAAAAAAAA2QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AgAAAAAAADRCAAAAAAAAAAAAAAAAFRA"
				],
				[
					844,
					1,
					"left_delete",
					null,
					"AQAAANgIAAAAAAAA2AgAAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAA2QgAAAAAAADZCAAAAAAAAAAAAAAAAPC/"
				],
				[
					845,
					1,
					"insert",
					{
						"characters": "->reqo"
					},
					"BgAAANgIAAAAAAAA2QgAAAAAAAAAAAAA2QgAAAAAAADaCAAAAAAAAAAAAADaCAAAAAAAANsIAAAAAAAAAAAAANsIAAAAAAAA3AgAAAAAAAAAAAAA3AgAAAAAAADdCAAAAAAAAAAAAADdCAAAAAAAAN4IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AgAAAAAAADYCAAAAAAAAAAAAAAAAPC/"
				],
				[
					846,
					1,
					"left_delete",
					null,
					"AQAAAN0IAAAAAAAA3QgAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAA3ggAAAAAAADeCAAAAAAAAAAAAAAAAPC/"
				],
				[
					847,
					1,
					"insert",
					{
						"characters": "_obj"
					},
					"BAAAAN0IAAAAAAAA3ggAAAAAAAAAAAAA3ggAAAAAAADfCAAAAAAAAAAAAADfCAAAAAAAAOAIAAAAAAAAAAAAAOAIAAAAAAAA4QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QgAAAAAAADdCAAAAAAAAAAAAAAAAPC/"
				],
				[
					848,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAOEIAAAAAAAA4ggAAAAAAAAAAAAA4ggAAAAAAADjCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QgAAAAAAADhCAAAAAAAAAAAAAAAAPC/"
				],
				[
					849,
					1,
					"insert",
					{
						"characters": " minnet_request_wrap"
					},
					"FAAAAOMIAAAAAAAA5AgAAAAAAAAAAAAA5AgAAAAAAADlCAAAAAAAAAAAAADlCAAAAAAAAOYIAAAAAAAAAAAAAOYIAAAAAAAA5wgAAAAAAAAAAAAA5wgAAAAAAADoCAAAAAAAAAAAAADoCAAAAAAAAOkIAAAAAAAAAAAAAOkIAAAAAAAA6ggAAAAAAAAAAAAA6ggAAAAAAADrCAAAAAAAAAAAAADrCAAAAAAAAOwIAAAAAAAAAAAAAOwIAAAAAAAA7QgAAAAAAAAAAAAA7QgAAAAAAADuCAAAAAAAAAAAAADuCAAAAAAAAO8IAAAAAAAAAAAAAO8IAAAAAAAA8AgAAAAAAAAAAAAA8AgAAAAAAADxCAAAAAAAAAAAAADxCAAAAAAAAPIIAAAAAAAAAAAAAPIIAAAAAAAA8wgAAAAAAAAAAAAA8wgAAAAAAAD0CAAAAAAAAAAAAAD0CAAAAAAAAPUIAAAAAAAAAAAAAPUIAAAAAAAA9ggAAAAAAAAAAAAA9ggAAAAAAAD3CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wgAAAAAAADjCAAAAAAAAAAAAAAAAPC/"
				],
				[
					850,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPcIAAAAAAAA+QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wgAAAAAAAD3CAAAAAAAAAAAAAAAAPC/"
				],
				[
					851,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAPgIAAAAAAAA+QgAAAAAAAAAAAAA+QgAAAAAAAD6CAAAAAAAAAAAAAD6CAAAAAAAAPsIAAAAAAAAAAAAAPsIAAAAAAAA/AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+AgAAAAAAAD4CAAAAAAAAAAAAAAAAPC/"
				],
				[
					852,
					1,
					"insert",
					{
						"characters": " opaque->req"
					},
					"DAAAAPwIAAAAAAAA/QgAAAAAAAAAAAAA/QgAAAAAAAD+CAAAAAAAAAAAAAD+CAAAAAAAAP8IAAAAAAAAAAAAAP8IAAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAABCQAAAAAAAAAAAAABCQAAAAAAAAIJAAAAAAAAAAAAAAIJAAAAAAAAAwkAAAAAAAAAAAAAAwkAAAAAAAAECQAAAAAAAAAAAAAECQAAAAAAAAUJAAAAAAAAAAAAAAUJAAAAAAAABgkAAAAAAAAAAAAABgkAAAAAAAAHCQAAAAAAAAAAAAAHCQAAAAAAAAgJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AgAAAAAAAD8CAAAAAAAAAAAAAAAAPC/"
				],
				[
					854,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAkJAAAAAAAACgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQkAAAAAAAAJCQAAAAAAAAAAAAAAAPC/"
				],
				[
					870,
					1,
					"paste",
					null,
					"AgAAAK4IAAAAAAAAvQgAAAAAAAAAAAAAvQgAAAAAAAC9CAAAAAAAAA8AAAByZXF1ZXN0X2Zyb213c2k",
					"AQAAAAAAAAABAAAArggAAAAAAAC9CAAAAAAAAAAAAAAAAPC/"
				],
				[
					882,
					1,
					"paste",
					null,
					"AgAAAMMIAAAAAAAA7ggAAAAAAAAAAAAA7ggAAAAAAADuCAAAAAAAAAMAAAB3c2k",
					"AQAAAAAAAAABAAAAwwgAAAAAAADGCAAAAAAAAAAAAAAAAPC/"
				],
				[
					893,
					1,
					"cut",
					null,
					"AQAAAMIIAAAAAAAAwggAAAAAAAAsAAAAIGx3c19oZHJfc2ltcGxlX3B0ciAod3NpLCBXU0lfVE9LRU5fR0VUX1VSSSk",
					"AQAAAAAAAAABAAAA7ggAAAAAAADCCAAAAAAAAAAAAAAAAPC/"
				],
				[
					894,
					1,
					"insert",
					{
						"characters": " url"
					},
					"BAAAAMIIAAAAAAAAwwgAAAAAAAAAAAAAwwgAAAAAAADECAAAAAAAAAAAAADECAAAAAAAAMUIAAAAAAAAAAAAAMUIAAAAAAAAxggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwggAAAAAAADCCAAAAAAAAAAAAAAAAPC/"
				],
				[
					896,
					1,
					"insert",
					{
						"characters": "\ncont"
					},
					"BwAAAJcIAAAAAAAAmAgAAAAAAAAAAAAAmAgAAAAAAACeCAAAAAAAAAAAAACeCAAAAAAAAKAIAAAAAAAAAAAAAKAIAAAAAAAAoQgAAAAAAAAAAAAAoQgAAAAAAACiCAAAAAAAAAAAAACiCAAAAAAAAKMIAAAAAAAAAAAAAKMIAAAAAAAApAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwgAAAAAAACXCAAAAAAAAAAAAAAAwHxA"
				],
				[
					897,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKQIAAAAAAAApQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAgAAAAAAACkCAAAAAAAAAAAAAAAAPC/"
				],
				[
					898,
					2,
					"left_delete",
					null,
					"AgAAAKQIAAAAAAAApAgAAAAAAAABAAAAIKMIAAAAAAAAowgAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAApQgAAAAAAAClCAAAAAAAAAAAAAAAAPC/"
				],
				[
					899,
					1,
					"insert",
					{
						"characters": "st"
					},
					"AgAAAKMIAAAAAAAApAgAAAAAAAAAAAAApAgAAAAAAAClCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowgAAAAAAACjCAAAAAAAAAAAAAAAAPC/"
				],
				[
					900,
					1,
					"insert",
					{
						"characters": " char*"
					},
					"BgAAAKUIAAAAAAAApggAAAAAAAAAAAAApggAAAAAAACnCAAAAAAAAAAAAACnCAAAAAAAAKgIAAAAAAAAAAAAAKgIAAAAAAAAqQgAAAAAAAAAAAAAqQgAAAAAAACqCAAAAAAAAAAAAACqCAAAAAAAAKsIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQgAAAAAAAClCAAAAAAAAAAAAAAAAPC/"
				],
				[
					901,
					1,
					"insert",
					{
						"characters": " url"
					},
					"BAAAAKsIAAAAAAAArAgAAAAAAAAAAAAArAgAAAAAAACtCAAAAAAAAAAAAACtCAAAAAAAAK4IAAAAAAAAAAAAAK4IAAAAAAAArwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwgAAAAAAACrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					902,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAK8IAAAAAAAAsAgAAAAAAAAAAAAAsAgAAAAAAACxCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwgAAAAAAACvCAAAAAAAAAAAAAAAAPC/"
				],
				[
					903,
					1,
					"paste",
					null,
					"AQAAALEIAAAAAAAA3QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQgAAAAAAACxCAAAAAAAAAAAAAAAAPC/"
				],
				[
					904,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAN0IAAAAAAAA3ggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QgAAAAAAADdCAAAAAAAAAAAAAAAAPC/"
				],
				[
					912,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAQkAAAAAAAABCQAAAAAAAAAAAAAAAPC/"
				],
				[
					920,
					1,
					"cut",
					null,
					"AQAAAHIAAAAAAAAAcgAAAAAAAAAUAAAAI2luY2x1ZGUgPGFzc2VydC5oPgo",
					"AQAAAAAAAAABAAAAcgAAAAAAAACGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					921,
					2,
					"paste",
					null,
					"AgAAAHIAAAAAAAAAhgAAAAAAAAAAAAAAhgAAAAAAAACaAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgAAAAAAAAByAAAAAAAAAAAAAAAAAPC/"
				],
				[
					926,
					1,
					"insert",
					{
						"characters": "libwebsockets"
					},
					"DgAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACRAAAAAAAAAAYAAABhc3NlcnSRAAAAAAAAAJIAAAAAAAAAAAAAAJIAAAAAAAAAkwAAAAAAAAAAAAAAkwAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJUAAAAAAAAAAAAAAJUAAAAAAAAAlgAAAAAAAAAAAAAAlgAAAAAAAACXAAAAAAAAAAAAAACXAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAmQAAAAAAAAAAAAAAmQAAAAAAAACaAAAAAAAAAAAAAACaAAAAAAAAAJsAAAAAAAAAAAAAAJsAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACdAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAAAAAAAAACWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1034,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA+wAAAAAAAAD8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gAAAAAAAAD6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					1036,
					1,
					"insert",
					{
						"characters": "extermn"
					},
					"BwAAAPsAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAAD9AAAAAAAAAAAAAAD9AAAAAAAAAP4AAAAAAAAAAAAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA/wAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAEBAAAAAAAAAAAAAAEBAAAAAAAAAgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wAAAAAAAAD7AAAAAAAAAAAAAAAAAAAA"
				],
				[
					1037,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAIBAAAAAAAAAwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgEAAAAAAAACAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1038,
					8,
					"left_delete",
					null,
					"CAAAAAIBAAAAAAAAAgEAAAAAAAABAAAAIAEBAAAAAAAAAQEAAAAAAAABAAAAbgABAAAAAAAAAAEAAAAAAAABAAAAbf8AAAAAAAAA/wAAAAAAAAABAAAAcv4AAAAAAAAA/gAAAAAAAAABAAAAZf0AAAAAAAAA/QAAAAAAAAABAAAAdPwAAAAAAAAA/AAAAAAAAAABAAAAePsAAAAAAAAA+wAAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAAwEAAAAAAAADAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1039,
					1,
					"insert",
					{
						"characters": "char*"
					},
					"BQAAAPsAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAAD9AAAAAAAAAAAAAAD9AAAAAAAAAP4AAAAAAAAAAAAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA/wAAAAAAAAAAAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wAAAAAAAAD7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					1040,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAABAAAAAAAAAQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1041,
					1,
					"paste",
					null,
					"AQAAAAEBAAAAAAAAEwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQEAAAAAAAABAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1042,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABMBAAAAAAAAFQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwEAAAAAAAATAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1043,
					1,
					"insert",
					{
						"characters": "struct"
					},
					"BgAAABQBAAAAAAAAFQEAAAAAAAAAAAAAFQEAAAAAAAAWAQAAAAAAAAAAAAAWAQAAAAAAABcBAAAAAAAAAAAAABcBAAAAAAAAGAEAAAAAAAAAAAAAGAEAAAAAAAAZAQAAAAAAAAAAAAAZAQAAAAAAABoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAEAAAAAAAAUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1044,
					1,
					"insert",
					{
						"characters": " lws*"
					},
					"BQAAABoBAAAAAAAAGwEAAAAAAAAAAAAAGwEAAAAAAAAcAQAAAAAAAAAAAAAcAQAAAAAAAB0BAAAAAAAAAAAAAB0BAAAAAAAAHgEAAAAAAAAAAAAAHgEAAAAAAAAfAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgEAAAAAAAAaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1045,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAB8BAAAAAAAAIAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwEAAAAAAAAfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1046,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACABAAAAAAAAIQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAEAAAAAAAAgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1047,
					1,
					"insert",
					{
						"characters": "int"
					},
					"AwAAACEBAAAAAAAAIgEAAAAAAAAAAAAAIgEAAAAAAAAjAQAAAAAAAAAAAAAjAQAAAAAAACQBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQEAAAAAAAAhAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1048,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACQBAAAAAAAAJQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAEAAAAAAAAkAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1049,
					1,
					"left_delete",
					null,
					"AQAAACQBAAAAAAAAJAEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAJQEAAAAAAAAlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1051,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACUBAAAAAAAAJgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQEAAAAAAAAlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1052,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACYBAAAAAAAAJwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgEAAAAAAAAmAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1073,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAkAAAAAAAAHCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1101,
					1,
					"insert",
					{
						"characters": "MinnetURL"
					},
					"CgAAAOgIAAAAAAAA6QgAAAAAAAAAAAAA6QgAAAAAAADpCAAAAAAAAD4AAAAgY29uc3QgY2hhciogdXJsID0gbHdzX2hkcl9zaW1wbGVfcHRyKHdzaSwgV1NJX1RPS0VOX0dFVF9VUkkpO+kIAAAAAAAA6ggAAAAAAAAAAAAA6ggAAAAAAADrCAAAAAAAAAAAAADrCAAAAAAAAOwIAAAAAAAAAAAAAOwIAAAAAAAA7QgAAAAAAAAAAAAA7QgAAAAAAADuCAAAAAAAAAAAAADuCAAAAAAAAO8IAAAAAAAAAAAAAO8IAAAAAAAA8AgAAAAAAAAAAAAA8AgAAAAAAADxCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AgAAAAAAAAmCQAAAAAAAP///////+9/"
				],
				[
					1102,
					1,
					"insert",
					{
						"characters": " url="
					},
					"BQAAAPEIAAAAAAAA8ggAAAAAAAAAAAAA8ggAAAAAAADzCAAAAAAAAAAAAADzCAAAAAAAAPQIAAAAAAAAAAAAAPQIAAAAAAAA9QgAAAAAAAAAAAAA9QgAAAAAAAD2CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QgAAAAAAADxCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1103,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPYIAAAAAAAA+AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9ggAAAAAAAD2CAAAAAAAAAAAAAAAAPC/"
				],
				[
					1104,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAPcIAAAAAAAA+AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wgAAAAAAAD3CAAAAAAAAAAAAAAAAPC/"
				],
				[
					1106,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPkIAAAAAAAA+ggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QgAAAAAAAD5CAAAAAAAAAAAAAAAAPC/"
				],
				[
					1107,
					1,
					"insert",
					{
						"characters": "\nurl_fromr"
					},
					"CwAAAPoIAAAAAAAA+wgAAAAAAAAAAAAA+wgAAAAAAAACCQAAAAAAAAAAAAACCQAAAAAAAAMJAAAAAAAAAAAAAAMJAAAAAAAABAkAAAAAAAAAAAAABAkAAAAAAAAFCQAAAAAAAAAAAAAFCQAAAAAAAAYJAAAAAAAAAAAAAAYJAAAAAAAABwkAAAAAAAAAAAAABwkAAAAAAAAICQAAAAAAAAAAAAAICQAAAAAAAAkJAAAAAAAAAAAAAAkJAAAAAAAACgkAAAAAAAAAAAAACgkAAAAAAAALCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+ggAAAAAAAD6CAAAAAAAAAAAAAAAAPC/"
				],
				[
					1108,
					1,
					"left_delete",
					null,
					"AQAAAAoJAAAAAAAACgkAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAACwkAAAAAAAALCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1109,
					1,
					"insert",
					{
						"characters": "wsi"
					},
					"AwAAAAoJAAAAAAAACwkAAAAAAAAAAAAACwkAAAAAAAAMCQAAAAAAAAAAAAAMCQAAAAAAAA0JAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgkAAAAAAAAKCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1110,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAA0JAAAAAAAADwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQkAAAAAAAANCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1111,
					1,
					"insert",
					{
						"characters": "&url,"
					},
					"BQAAAA4JAAAAAAAADwkAAAAAAAAAAAAADwkAAAAAAAAQCQAAAAAAAAAAAAAQCQAAAAAAABEJAAAAAAAAAAAAABEJAAAAAAAAEgkAAAAAAAAAAAAAEgkAAAAAAAATCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgkAAAAAAAAOCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1112,
					1,
					"insert",
					{
						"characters": " wsi,"
					},
					"BQAAABMJAAAAAAAAFAkAAAAAAAAAAAAAFAkAAAAAAAAVCQAAAAAAAAAAAAAVCQAAAAAAABYJAAAAAAAAAAAAABYJAAAAAAAAFwkAAAAAAAAAAAAAFwkAAAAAAAAYCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwkAAAAAAAATCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1113,
					1,
					"insert",
					{
						"characters": " ctx"
					},
					"BAAAABgJAAAAAAAAGQkAAAAAAAAAAAAAGQkAAAAAAAAaCQAAAAAAAAAAAAAaCQAAAAAAABsJAAAAAAAAAAAAABsJAAAAAAAAHAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAkAAAAAAAAYCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1115,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAB0JAAAAAAAAHgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQkAAAAAAAAdCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1118,
					7,
					"left_delete",
					null,
					"BwAAAEMJAAAAAAAAQwkAAAAAAAABAAAAbEIJAAAAAAAAQgkAAAAAAAABAAAAckEJAAAAAAAAQQkAAAAAAAABAAAAdUAJAAAAAAAAQAkAAAAAAAABAAAAbT8JAAAAAAAAPwkAAAAAAAABAAAAbz4JAAAAAAAAPgkAAAAAAAABAAAAcj0JAAAAAAAAPQkAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAARAkAAAAAAABECQAAAAAAAAAAAAAAAPC/"
				],
				[
					1119,
					1,
					"insert",
					{
						"characters": "nerw"
					},
					"BAAAAD0JAAAAAAAAPgkAAAAAAAAAAAAAPgkAAAAAAAA/CQAAAAAAAAAAAAA/CQAAAAAAAEAJAAAAAAAAAAAAAEAJAAAAAAAAQQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQkAAAAAAAA9CQAAAAAAAAAAAAAAAPC/"
				],
				[
					1122,
					1,
					"insert",
					{
						"characters": "w"
					},
					"AgAAAD8JAAAAAAAAQAkAAAAAAAAAAAAAQAkAAAAAAABACQAAAAAAAAIAAABydw",
					"AQAAAAAAAAABAAAAPwkAAAAAAABBCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1128,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEkJAAAAAAAASgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQkAAAAAAABJCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1129,
					1,
					"insert",
					{
						"characters": " METHOD_GET"
					},
					"CwAAAEoJAAAAAAAASwkAAAAAAAAAAAAASwkAAAAAAABMCQAAAAAAAAAAAABMCQAAAAAAAE0JAAAAAAAAAAAAAE0JAAAAAAAATgkAAAAAAAAAAAAATgkAAAAAAABPCQAAAAAAAAAAAABPCQAAAAAAAFAJAAAAAAAAAAAAAFAJAAAAAAAAUQkAAAAAAAAAAAAAUQkAAAAAAABSCQAAAAAAAAAAAABSCQAAAAAAAFMJAAAAAAAAAAAAAFMJAAAAAAAAVAkAAAAAAAAAAAAAVAkAAAAAAABVCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgkAAAAAAABKCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1140,
					1,
					"insert",
					{
						"characters": ".protocol="
					},
					"CgAAAPcIAAAAAAAA+AgAAAAAAAAAAAAA+AgAAAAAAAD5CAAAAAAAAAAAAAD5CAAAAAAAAPoIAAAAAAAAAAAAAPoIAAAAAAAA+wgAAAAAAAAAAAAA+wgAAAAAAAD8CAAAAAAAAAAAAAD8CAAAAAAAAP0IAAAAAAAAAAAAAP0IAAAAAAAA/ggAAAAAAAAAAAAA/ggAAAAAAAD/CAAAAAAAAAAAAAD/CAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wgAAAAAAAD3CAAAAAAAAAAAAAAAAPC/"
				],
				[
					1141,
					1,
					"paste",
					null,
					"AQAAAAEJAAAAAAAAEAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQkAAAAAAAABCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1142,
					1,
					"right_delete",
					null,
					"AQAAABAJAAAAAAAAEAkAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAEAkAAAAAAAAQCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1143,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABAJAAAAAAAAEgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAkAAAAAAAAQCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1144,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAABEJAAAAAAAAEwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQkAAAAAAAARCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1145,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAABEJAAAAAAAAEQkAAAAAAAABAAAAIhEJAAAAAAAAEQkAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAEgkAAAAAAAASCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1146,
					1,
					"insert",
					{
						"characters": "PROTOCOL_WS"
					},
					"CwAAABEJAAAAAAAAEgkAAAAAAAAAAAAAEgkAAAAAAAATCQAAAAAAAAAAAAATCQAAAAAAABQJAAAAAAAAAAAAABQJAAAAAAAAFQkAAAAAAAAAAAAAFQkAAAAAAAAWCQAAAAAAAAAAAAAWCQAAAAAAABcJAAAAAAAAAAAAABcJAAAAAAAAGAkAAAAAAAAAAAAAGAkAAAAAAAAZCQAAAAAAAAAAAAAZCQAAAAAAABoJAAAAAAAAAAAAABoJAAAAAAAAGwkAAAAAAAAAAAAAGwkAAAAAAAAcCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQkAAAAAAAARCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1150,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADLGgAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJtaW5uZXQtcmVzcG9uc2UuaCIKI2luY2x1ZGUgPGFzc2VydC5oPgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgoKaW50IGh0dHBfc2VydmVyX2NhbGxiYWNrKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zLCB2b2lkKiwgdm9pZCosIHNpemVfdCk7CgpjaGFyKiBsd3NfaGRyX3NpbXBsZV9wdHIoc3RydWN0IGx3cyosIGludCk7CgppbnQKd3NfY2FsbGJhY2soc3RydWN0IGx3cyogd3NpLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pIHsKICBNaW5uZXRTZXNzaW9uKiBzZXNzaW9uID0gdXNlcjsKICBNaW5uZXRTZXJ2ZXIqIHNlcnZlciA9IGx3c19jb250ZXh0X3VzZXIobHdzX2dldF9jb250ZXh0KHdzaSkpOwogIEpTQ29udGV4dCogY3R4ID0gc2VydmVyLT5jb250ZXh0LmpzOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CgogIGlmKGx3c19pc19wb2xsX2NhbGxiYWNrKHJlYXNvbikpCiAgICByZXR1cm4gZmRfY2FsbGJhY2sod3NpLCByZWFzb24sICZzZXJ2ZXItPmNiLmZkLCBpbik7CiAgaWYobHdzX2lzX2h0dHBfY2FsbGJhY2socmVhc29uKSkKICAgIHJldHVybiBodHRwX3NlcnZlcl9jYWxsYmFjayh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CgogIExPRygiV1MiLCAiZmQ9JWQsICVzJXNpbj0nJS4qcycgc2Vzc2lvbiMlaSIsIGx3c19nZXRfc29ja2V0X2ZkKHdzaSksIGlzX2gyKHdzaSkgPyAiaDIsICIgOiAiIiwgbHdzX2lzX3NzbCh3c2kpID8gInNzbCwgIiA6ICIiLCAoaW50KWxlbiwgaW4sIHNlc3Npb24gPyBzZXNzaW9uLT5zZXJpYWwgOiAwKTsKCiAgc3dpdGNoKHJlYXNvbikgewogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRklMVEVSX05FVFdPUktfQ09OTkVDVElPTjoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0ZJTFRFUl9QUk9UT0NPTF9DT05ORUNUSU9OOgogICAgICBpZighb3BhcXVlLT5yZXEpCiAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X2Zyb213c2koY3R4LCB3c2kpOwoKICAgICAgYnJlYWs7CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUFJPVE9DT0xfSU5JVDogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0RFU1RST1k6IHsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX1NFUlZFUl9WRVJJRllfQ0VSVFM6CiAgICBjYXNlIExXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfQ0xJRU5UX1ZFUklGWV9DRVJUUzogewogICAgICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfU0VSVkVSX05FV19DTElFTlRfSU5TVEFOVElBVEVEOiB7CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9DUkVBVEU6IHsKICAgICAgLy8gb3BhcXVlLT53cyA9IHdzX25ldyh3c2ksIGN0eCk7CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9ERVNUUk9ZOiB7CiAgICAgIC8qICAgaWYob3BhcXVlICYmIG9wYXF1ZS0+d3MpIHsKICAgICAgICAgICB3c19mcmVlKG9wYXF1ZS0+d3MsIGN0eCk7CiAgICAgICAgICAgb3BhcXVlLT53cyA9IDA7CiAgICAgICAgIH0qLwogICAgICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKSB7CiAgICAgICAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgMCk7CiAgICAgICAgb3BhcXVlX2ZyZWUob3BhcXVlLCBjdHgpOwogICAgICB9CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0hUVFBfQ09ORklSTV9VUEdSQURFOiB7CiAgICAgIGlmKCFsd3NfaXNfc3NsKHdzaSkgJiYgIXN0cmNtcChpbiwgImgyYyIpKQogICAgICAgIHJldHVybiAtMTsKCiAgICAgIC8qcmV0dXJuIGh0dHBfc2VydmVyX2NhbGxiYWNrKHdzaSwgcmVhc29uLCB1c2VyLCBpbiwgbGVuKTsqLwogICAgICBpZighb3BhcXVlKQogICAgICAgIG9wYXF1ZSA9IGx3c19vcGFxdWUod3NpLCBjdHgpOwogICAgICBhc3NlcnQob3BhcXVlKTsKCiAgICAgIGlmKCFvcGFxdWUtPnJlcSkgewogICAgICAgTWlubmV0VVJMIHVybD17LnByb3RvY29sPXByb3RvY29sX3N0cmluZyhQUk9UT0NPTF9XUyl9OwogICAgICAgdXJsX2Zyb213c2koJnVybCwgd3NpLCBjdHgpOwogICAgICAgIG9wYXF1ZS0+cmVxID0gcmVxdWVzdF9uZXcoY3R4LCB1cmwsIE1FVEhPRF9HRVQpOwogICAgICAgIHNlc3Npb24tPnJlcV9vYmogPSBtaW5uZXRfcmVxdWVzdF93cmFwKGN0eCwgb3BhcXVlLT5yZXEpOwogICAgICB9CgogICAgICAvLyBpbnQgbnVtX2hkciA9IGhlYWRlcnNfZ2V0KGN0eCwgJm9wYXF1ZS0+cmVxLT5oZWFkZXJzLCB3c2kpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19FU1RBQkxJU0hFRDogewogICAgICAvLyBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSA9IGx3c19vcGFxdWUod3NpLCBjdHgpOwogICAgICBpbnQgc3RhdHVzOwogICAgICBzdGF0dXMgPSBsd3NfaHR0cF9jbGllbnRfaHR0cF9yZXNwb25zZSh3c2kpOwogICAgICBNaW5uZXRIdHRwTW91bnQqIG1vdW50ID0gMDsKICAgICAgTWlubmV0VVJMKiB1cmw7CgogICAgICBpZighb3BhcXVlLT5yZXEpCiAgICAgICAgb3BhcXVlLT5yZXEgPSByZXF1ZXN0X2Zyb213c2koY3R4LCB3c2kpOwoKICAgICAgaWYob3BhcXVlLT5yZXEpIHsKICAgICAgICB1cmwgPSAmb3BhcXVlLT5yZXEtPnVybDsKCiAgICAgICAgaWYoKG1vdW50ID0gbW91bnRfZmluZF9zKHNlcnZlci0+Y29udGV4dC5pbmZvLm1vdW50cywgdXJsLT5wYXRoKSkpIHsKICAgICAgICAgIC8vIHByaW50ZigiZm91bmQgbW91bnQgbW50PSVzIG9yZz0lcyBkZWY9JXMgcHJvPSVzXG4iLCBtb3VudC0+bW50LCBtb3VudC0+b3JnLCBtb3VudC0+ZGVmLCBtb3VudC0+cHJvKTsKICAgICAgICB9CgogICAgICAgIGlmKCFKU19Jc09iamVjdChzZXNzaW9uLT5yZXFfb2JqKSkKICAgICAgICAgIHNlc3Npb24tPnJlcV9vYmogPSBtaW5uZXRfcmVxdWVzdF93cmFwKGN0eCwgb3BhcXVlLT5yZXEpOwoKICAgICAgICBzZXNzaW9uLT5yZXNwX29iaiA9IG1pbm5ldF9yZXNwb25zZV9uZXcoY3R4LCBvcGFxdWUtPnJlcS0+dXJsLCBzdGF0dXMsIDAsIFRSVUUsICJ0ZXh0L2h0bWwiKTsKICAgICAgfQoKICAgICAgb3BhcXVlLT5zdGF0dXMgPSBPUEVOOwoKICAgICAgaWYoc2VydmVyLT5jYi5jb25uZWN0LmN0eCkgewoKICAgICAgICBpZighSlNfSXNPYmplY3Qoc2Vzc2lvbi0+d3Nfb2JqKSkKICAgICAgICAgIHNlc3Npb24tPndzX29iaiA9IG1pbm5ldF93c19mcm9td3NpKGN0eCwgd3NpKTsKCiAgICAgICAgaWYoIW9wYXF1ZS0+d3MpCiAgICAgICAgICBvcGFxdWUtPndzID0gbWlubmV0X3dzX2RhdGEoc2Vzc2lvbi0+d3Nfb2JqKTsKCiAgICAgICAgTE9HKCJ3cyIsICJ3c2kjJSIgUFJJZDY0ICIgcmVxPSVwIiwgb3BhcXVlLT5zZXJpYWwsIG9wYXF1ZS0+cmVxKTsKICAgICAgICBzZXJ2ZXJfZXhjZXB0aW9uKHNlcnZlciwgbWlubmV0X2VtaXRfdGhpcygmc2VydmVyLT5jYi5jb25uZWN0LCBzZXNzaW9uLT53c19vYmosIDIsICZzZXNzaW9uLT53c19vYmopKTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19XU19QRUVSX0lOSVRJQVRFRF9DTE9TRToKICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMT1NFRDogewogICAgICBpZihvcGFxdWUtPnN0YXR1cyA8IENMT1NJTkcpIHsKICAgICAgICBKU1ZhbHVlIHdoeSA9IEpTX1VOREVGSU5FRDsKICAgICAgICBpbnQgY29kZSA9IC0xOwoKICAgICAgICBpZihpbikgewogICAgICAgICAgdWludDhfdCogY29kZXAgPSBpbjsKICAgICAgICAgIGNvZGUgPSAoY29kZXBbMF0gPDwgOCkgKyBjb2RlcFsxXTsKICAgICAgICAgIGlmKGxlbiAtIDIgPiAwKQogICAgICAgICAgICB3aHkgPSBKU19OZXdTdHJpbmdMZW4oc2VydmVyLT5jb250ZXh0LmpzLCAoY2hhciopaW4gKyAyLCBsZW4gLSAyKTsKICAgICAgICB9CgogICAgICAgIG9wYXF1ZS0+c3RhdHVzID0gQ0xPU0lORzsKCiAgICAgICAgTE9HKCJ3cyIsICJmZD0lZCwgc3RhdHVzPSVkIiwgbHdzX2dldF9zb2NrZXRfZmQod3NpKSwgb3BhcXVlLT5zdGF0dXMpOwoKICAgICAgICBpZihjdHgpIHsKICAgICAgICAgIEpTVmFsdWUgY2JfYXJndlszXSA9IHtzZXNzaW9uLT53c19vYmosIGNvZGUgIT0gLTEgPyBKU19OZXdJbnQzMihjdHgsIGNvZGUpIDogSlNfVU5ERUZJTkVELCB3aHl9OwogICAgICAgICAgc2VydmVyX2V4Y2VwdGlvbihzZXJ2ZXIsIG1pbm5ldF9lbWl0KCZzZXJ2ZXItPmNiLmNsb3NlLCBjb2RlICE9IC0xID8gMyA6IDEsIGNiX2FyZ3YpKTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX2FyZ3ZbMV0pOwogICAgICAgIH0KICAgICAgICBKU19GcmVlVmFsdWUoc2VydmVyLT5jb250ZXh0LmpzLCB3aHkpOwogICAgICAgIC8qSlNfRnJlZVZhbHVlKHNlcnZlci0+Y29udGV4dC5qcywgc2Vzc2lvbi0+d3Nfb2JqKTsKICAgICAgICBzZXNzaW9uLT53c19vYmogPSBKU19OVUxMOyovCiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfU0VSVkVSX1dSSVRFQUJMRTogewogICAgICBmcHJpbnRmKHN0ZGVyciwgIlx4MWJbMTszM213cml0YWJsZVx4MWJbMG0gJXMgZmQ9JWRcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQod3NpKSk7CgogICAgICBNaW5uZXRCdWZmZXIqIGJ1ZiA9ICZzZXNzaW9uLT5zZW5kX2J1ZjsKICAgICAgZnByaW50ZihzdGRlcnIsICJceDFiWzE7MzNtd3JpdGFibGVceDFiWzBtICVzIGJ1Zj0lc1xuIiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBidWZmZXJfZXNjYXBlZChidWYsIGN0eCkpOwoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRTogewogICAgICBpZihjdHgpIHsKICAgICAgICBNaW5uZXRXZWJzb2NrZXQqIHdzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgc2Vzc2lvbi0+d3Nfb2JqKTsKICAgICAgICBKU1ZhbHVlIG1zZyA9IG9wYXF1ZS0+YmluYXJ5ID8gSlNfTmV3QXJyYXlCdWZmZXJDb3B5KGN0eCwgaW4sIGxlbikgOiBKU19OZXdTdHJpbmdMZW4oY3R4LCBpbiwgbGVuKTsKICAgICAgICBKU1ZhbHVlIGNiX2FyZ3ZbMl0gPSB7SlNfRHVwVmFsdWUoY3R4LCBzZXNzaW9uLT53c19vYmopLCBtc2d9OwogICAgICAgIHNlcnZlcl9leGNlcHRpb24oc2VydmVyLCBtaW5uZXRfZW1pdCgmc2VydmVyLT5jYi5tZXNzYWdlLCAyLCBjYl9hcmd2KSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlsxXSk7CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFX1BPTkc6IHsKICAgICAgaWYoc2VydmVyLT5jYi5wb25nLmN0eCkgewogICAgICAgIC8vIHdzX29iaiA9IG1pbm5ldF93c19mcm9td3NpKHNlcnZlci0+Y2IucG9uZy5jdHgsIHdzaSk7CiAgICAgICAgSlNWYWx1ZSBtc2cgPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkoc2VydmVyLT5jYi5wb25nLmN0eCwgaW4sIGxlbik7CiAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzJdID0ge0pTX0R1cFZhbHVlKHNlcnZlci0+Y2IucG9uZy5jdHgsIHNlc3Npb24tPndzX29iaiksIG1zZ307CiAgICAgICAgc2VydmVyX2V4Y2VwdGlvbihzZXJ2ZXIsIG1pbm5ldF9lbWl0KCZzZXJ2ZXItPmNiLnBvbmcsIDIsIGNiX2FyZ3YpKTsKICAgICAgICBKU19GcmVlVmFsdWUoc2VydmVyLT5jYi5wb25nLmN0eCwgY2JfYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKHNlcnZlci0+Y2IucG9uZy5jdHgsIGNiX2FyZ3ZbMV0pOwogICAgICB9CiAgICAgIHJldHVybiAwOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfU0VSVkVSX0RST1BfUFJPVE9DT0w6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19FVkVOVF9XQUlUX0NBTkNFTExFRDoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0dFVF9USFJFQURfSUQ6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgZGVmYXVsdDogewogICAgICAvLyBwcmludGYoIndzX2NhbGxiYWNrICVzICVwICVwICV6dVxuIiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSwgdXNlciwgaW4sIGxlbik7CiAgICAgIG1pbm5ldF9sd3NfdW5oYW5kbGVkKF9fZnVuY19fLCByZWFzb24pOwogICAgICBicmVhazsKICAgIH0KICB9CgogIC8vIGx3c2xfdXNlcigid3MgICAiIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBmZD0lZCB1cmw9JyVzJyBpbj0nJS4qcydcbiIsIDIyICsgKHJlYXNvbiAqIDIpLCBsd3NfY2FsbGJhY2tfbmFtZShyZWFzb24pICsgMTMsIGx3c19nZXRfc29ja2V0X2ZkKHdzaSksIGx3c19nZXRfdXJpKHdzaSwgc2VydmVyLT5jb250ZXh0LmpzLCAvLwogIC8vIFdTSV9UT0tFTl9HRVRfVVJJKSwgKGludClsZW4sIChjaGFyKilpbik7CgogIGlmKG9wYXF1ZSAmJiBvcGFxdWUtPnN0YXR1cyA+PSBDTE9TSU5HKQogICAgcmV0dXJuIC0xOwoKICByZXR1cm4gMDsgLy8gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwp9CgAAAAAAAAAA0RoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQkAAAAAAAAdCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1156,
					1,
					"insert",
					{
						"characters": "&/&"
					},
					"AwAAAIsJAAAAAAAAjAkAAAAAAAAAAAAAjAkAAAAAAACNCQAAAAAAAAAAAACNCQAAAAAAAI4JAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwkAAAAAAACLCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1157,
					3,
					"left_delete",
					null,
					"AwAAAI0JAAAAAAAAjQkAAAAAAAABAAAAJowJAAAAAAAAjAkAAAAAAAABAAAAL4sJAAAAAAAAiwkAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAjgkAAAAAAACOCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1158,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAIsJAAAAAAAAjAkAAAAAAAAAAAAAjAkAAAAAAACNCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwkAAAAAAACLCQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "libwebsockets/include/libwebsockets/lws-write.h",
			"settings":
			{
				"buffer_size": 10215,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "minnet-server-proxy.h",
			"settings":
			{
				"buffer_size": 623,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c",
			"settings":
			{
				"buffer_size": 14937,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "minnet-ringbuffer.h",
			"settings":
			{
				"buffer_size": 1969,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACxBwAAI2lmbmRlZiBNSU5ORVRfUklOR0JVRkZFUl9ICiNkZWZpbmUgTUlOTkVUX1JJTkdCVUZGRVJfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlIDxwdGhyZWFkLmg+Cgp0eXBlZGVmIHN0cnVjdCByaW5nYnVmZmVyIHsKICBzaXplX3QgcmVmX2NvdW50OwogIGNoYXIgdHlwZVsyNTZdOwoKICBzdHJ1Y3QgbHdzX3JpbmcqIHJpbmc7CiAgcHRocmVhZF9tdXRleF90IGxvY2tfcmluZzsgLyogc2VyaWFsaXplIGFjY2VzcyB0byB0aGUgcmluZyBidWZmZXIgKi8KfSBNaW5uZXRSaW5nQnVmZmVyOwoKdm9pZCByaW5nYnVmZmVyX2R1bXAoc3RydWN0IHJpbmdidWZmZXIgY29uc3QqKTsKdm9pZCByaW5nYnVmZmVyX2luaXQoc3RydWN0IHJpbmdidWZmZXIqLCBzaXplX3QsIHNpemVfdCwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4pOwpzdHJ1Y3QgcmluZ2J1ZmZlciogcmluZ2J1ZmZlcl9uZXcoSlNDb250ZXh0Kik7CnN0cnVjdCByaW5nYnVmZmVyKiByaW5nYnVmZmVyX25ldzIoc2l6ZV90LCBzaXplX3QsIEpTQ29udGV4dCopOwpzaXplX3QgcmluZ2J1ZmZlcl9pbnNlcnQoc3RydWN0IHJpbmdidWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90KTsKc2l6ZV90IHJpbmdidWZmZXJfY29uc3VtZShzdHJ1Y3QgcmluZ2J1ZmZlciosIHZvaWQqLCBzaXplX3QpOwpzaXplX3QgcmluZ2J1ZmZlcl9za2lwKHN0cnVjdCByaW5nYnVmZmVyKiwgc2l6ZV90KTsKY29uc3Qgdm9pZCogcmluZ2J1ZmZlcl9uZXh0KHN0cnVjdCByaW5nYnVmZmVyKik7CnNpemVfdCByaW5nYnVmZmVyX3NpemUoc3RydWN0IHJpbmdidWZmZXIqKTsKc2l6ZV90IHJpbmdidWZmZXJfYXZhaWwoc3RydWN0IHJpbmdidWZmZXIqKTsKdm9pZCByaW5nYnVmZmVyX3plcm8oc3RydWN0IHJpbmdidWZmZXIqKTsKdm9pZCByaW5nYnVmZmVyX2ZyZWUoc3RydWN0IHJpbmdidWZmZXIqLCBKU1J1bnRpbWUqKTsKSlNWYWx1ZSBtaW5uZXRfcmluZ2J1ZmZlcl9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdKTsKSlNWYWx1ZSBtaW5uZXRfcmluZ2J1ZmZlcl9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIHNpemVfdCwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IG4pOwpKU1ZhbHVlIG1pbm5ldF9yaW5nYnVmZmVyX3dyYXAoSlNDb250ZXh0Kiwgc3RydWN0IHJpbmdidWZmZXIqKTsKCmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yaW5nYnVmZmVyX2NsYXNzOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3JpbmdidWZmZXJfcHJvdG8sIG1pbm5ldF9yaW5nYnVmZmVyX2N0b3I7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF9yaW5nYnVmZmVyX2NsYXNzX2lkOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JpbmdidWZmZXJfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmluZ2J1ZmZlcl9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBpbnQKcmluZ2J1ZmZlcl9sb2NrKHN0cnVjdCByaW5nYnVmZmVyKiBzdHJtKSB7CiAgcmV0dXJuIHB0aHJlYWRfbXV0ZXhfbG9jaygmc3RybS0+bG9ja19yaW5nKTsKfQoKc3RhdGljIGlubGluZSBpbnQKcmluZ2J1ZmZlcl91bmxvY2soc3RydWN0IHJpbmdidWZmZXIqIHN0cm0pIHsKICByZXR1cm4gcHRocmVhZF9tdXRleF91bmxvY2soJnN0cm0tPmxvY2tfcmluZyk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0UmluZ0J1ZmZlcioKbWlubmV0X3JpbmdidWZmZXJfZGF0YShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfcmluZ2J1ZmZlcl9jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfUklOR0JVRkZFUl9IICovCgAAAAAAAAAAsQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAACxBwAAI2lmbmRlZiBNSU5ORVRfUklOR0JVRkZFUl9ICiNkZWZpbmUgTUlOTkVUX1JJTkdCVUZGRVJfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlIDxwdGhyZWFkLmg+Cgp0eXBlZGVmIHN0cnVjdCByaW5nYnVmZmVyIHsKICBzaXplX3QgcmVmX2NvdW50OwogIGNoYXIgdHlwZVsyNTZdOwoKICBzdHJ1Y3QgbHdzX3JpbmcqIHJpbmc7CiAgcHRocmVhZF9tdXRleF90IGxvY2tfcmluZzsgLyogc2VyaWFsaXplIGFjY2VzcyB0byB0aGUgcmluZyBidWZmZXIgKi8KfSBNaW5uZXRSaW5nQnVmZmVyOwoKdm9pZCByaW5nYnVmZmVyX2R1bXAoc3RydWN0IHJpbmdidWZmZXIgY29uc3QqKTsKdm9pZCByaW5nYnVmZmVyX2luaXQoc3RydWN0IHJpbmdidWZmZXIqLCBzaXplX3QsIHNpemVfdCwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4pOwpzdHJ1Y3QgcmluZ2J1ZmZlciogcmluZ2J1ZmZlcl9uZXcoSlNDb250ZXh0Kik7CnN0cnVjdCByaW5nYnVmZmVyKiByaW5nYnVmZmVyX25ldzIoc2l6ZV90LCBzaXplX3QsIEpTQ29udGV4dCopOwpzaXplX3QgcmluZ2J1ZmZlcl9pbnNlcnQoc3RydWN0IHJpbmdidWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90KTsKc2l6ZV90IHJpbmdidWZmZXJfY29uc3VtZShzdHJ1Y3QgcmluZ2J1ZmZlciosIHZvaWQqLCBzaXplX3QpOwpzaXplX3QgcmluZ2J1ZmZlcl9za2lwKHN0cnVjdCByaW5nYnVmZmVyKiwgc2l6ZV90KTsKY29uc3Qgdm9pZCogcmluZ2J1ZmZlcl9uZXh0KHN0cnVjdCByaW5nYnVmZmVyKik7CnNpemVfdCByaW5nYnVmZmVyX3NpemUoc3RydWN0IHJpbmdidWZmZXIqKTsKc2l6ZV90IHJpbmdidWZmZXJfYXZhaWwoc3RydWN0IHJpbmdidWZmZXIqKTsKdm9pZCByaW5nYnVmZmVyX3plcm8oc3RydWN0IHJpbmdidWZmZXIqKTsKdm9pZCByaW5nYnVmZmVyX2ZyZWUoc3RydWN0IHJpbmdidWZmZXIqLCBKU1J1bnRpbWUqKTsKSlNWYWx1ZSBtaW5uZXRfcmluZ2J1ZmZlcl9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdKTsKSlNWYWx1ZSBtaW5uZXRfcmluZ2J1ZmZlcl9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIHNpemVfdCwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IG4pOwpKU1ZhbHVlIG1pbm5ldF9yaW5nYnVmZmVyX3dyYXAoSlNDb250ZXh0Kiwgc3RydWN0IHJpbmdidWZmZXIqKTsKCmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yaW5nYnVmZmVyX2NsYXNzOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3JpbmdidWZmZXJfcHJvdG8sIG1pbm5ldF9yaW5nYnVmZmVyX2N0b3I7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF9yaW5nYnVmZmVyX2NsYXNzX2lkOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JpbmdidWZmZXJfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmluZ2J1ZmZlcl9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBpbnQKcmluZ2J1ZmZlcl9sb2NrKHN0cnVjdCByaW5nYnVmZmVyKiBzdHJtKSB7CiAgcmV0dXJuIHB0aHJlYWRfbXV0ZXhfbG9jaygmc3RybS0+bG9ja19yaW5nKTsKfQoKc3RhdGljIGlubGluZSBpbnQKcmluZ2J1ZmZlcl91bmxvY2soc3RydWN0IHJpbmdidWZmZXIqIHN0cm0pIHsKICByZXR1cm4gcHRocmVhZF9tdXRleF91bmxvY2soJnN0cm0tPmxvY2tfcmluZyk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0UmluZ0J1ZmZlcioKbWlubmV0X3JpbmdidWZmZXJfZGF0YShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfcmluZ2J1ZmZlcl9jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfUklOR0JVRkZFUl9IICovCgAAAAAAAAAAsQcAAAAAAAAAAAAAAAAAAAAAAACxBwAAAAAAAAAAAAAAAAAAAAAAALEHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACxBwAAI2lmbmRlZiBNSU5ORVRfUklOR0JVRkZFUl9ICiNkZWZpbmUgTUlOTkVUX1JJTkdCVUZGRVJfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlIDxwdGhyZWFkLmg+Cgp0eXBlZGVmIHN0cnVjdCByaW5nYnVmZmVyIHsKICBzaXplX3QgcmVmX2NvdW50OwogIGNoYXIgdHlwZVsyNTZdOwoKICBzdHJ1Y3QgbHdzX3JpbmcqIHJpbmc7CiAgcHRocmVhZF9tdXRleF90IGxvY2tfcmluZzsgLyogc2VyaWFsaXplIGFjY2VzcyB0byB0aGUgcmluZyBidWZmZXIgKi8KfSBNaW5uZXRSaW5nQnVmZmVyOwoKdm9pZCByaW5nYnVmZmVyX2R1bXAoc3RydWN0IHJpbmdidWZmZXIgY29uc3QqKTsKdm9pZCByaW5nYnVmZmVyX2luaXQoc3RydWN0IHJpbmdidWZmZXIqLCBzaXplX3QsIHNpemVfdCwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4pOwpzdHJ1Y3QgcmluZ2J1ZmZlciogcmluZ2J1ZmZlcl9uZXcoSlNDb250ZXh0Kik7CnN0cnVjdCByaW5nYnVmZmVyKiByaW5nYnVmZmVyX25ldzIoc2l6ZV90LCBzaXplX3QsIEpTQ29udGV4dCopOwpzaXplX3QgcmluZ2J1ZmZlcl9pbnNlcnQoc3RydWN0IHJpbmdidWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90KTsKc2l6ZV90IHJpbmdidWZmZXJfY29uc3VtZShzdHJ1Y3QgcmluZ2J1ZmZlciosIHZvaWQqLCBzaXplX3QpOwpzaXplX3QgcmluZ2J1ZmZlcl9za2lwKHN0cnVjdCByaW5nYnVmZmVyKiwgc2l6ZV90KTsKY29uc3Qgdm9pZCogcmluZ2J1ZmZlcl9uZXh0KHN0cnVjdCByaW5nYnVmZmVyKik7CnNpemVfdCByaW5nYnVmZmVyX3NpemUoc3RydWN0IHJpbmdidWZmZXIqKTsKc2l6ZV90IHJpbmdidWZmZXJfYXZhaWwoc3RydWN0IHJpbmdidWZmZXIqKTsKdm9pZCByaW5nYnVmZmVyX3plcm8oc3RydWN0IHJpbmdidWZmZXIqKTsKdm9pZCByaW5nYnVmZmVyX2ZyZWUoc3RydWN0IHJpbmdidWZmZXIqLCBKU1J1bnRpbWUqKTsKSlNWYWx1ZSBtaW5uZXRfcmluZ2J1ZmZlcl9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdKTsKSlNWYWx1ZSBtaW5uZXRfcmluZ2J1ZmZlcl9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIHNpemVfdCwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IG4pOwpKU1ZhbHVlIG1pbm5ldF9yaW5nYnVmZmVyX3dyYXAoSlNDb250ZXh0Kiwgc3RydWN0IHJpbmdidWZmZXIqKTsKCmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yaW5nYnVmZmVyX2NsYXNzOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3JpbmdidWZmZXJfcHJvdG8sIG1pbm5ldF9yaW5nYnVmZmVyX2N0b3I7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF9yaW5nYnVmZmVyX2NsYXNzX2lkOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JpbmdidWZmZXJfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmluZ2J1ZmZlcl9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBpbnQKcmluZ2J1ZmZlcl9sb2NrKHN0cnVjdCByaW5nYnVmZmVyKiBzdHJtKSB7CiAgcmV0dXJuIHB0aHJlYWRfbXV0ZXhfbG9jaygmc3RybS0+bG9ja19yaW5nKTsKfQoKc3RhdGljIGlubGluZSBpbnQKcmluZ2J1ZmZlcl91bmxvY2soc3RydWN0IHJpbmdidWZmZXIqIHN0cm0pIHsKICByZXR1cm4gcHRocmVhZF9tdXRleF91bmxvY2soJnN0cm0tPmxvY2tfcmluZyk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0UmluZ0J1ZmZlcioKbWlubmV0X3JpbmdidWZmZXJfZGF0YShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfcmluZ2J1ZmZlcl9jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfUklOR0JVRkZFUl9IICovCgAAAAAAAAAAsQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACxBwAAI2lmbmRlZiBNSU5ORVRfUklOR0JVRkZFUl9ICiNkZWZpbmUgTUlOTkVUX1JJTkdCVUZGRVJfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlIDxwdGhyZWFkLmg+Cgp0eXBlZGVmIHN0cnVjdCByaW5nYnVmZmVyIHsKICBzaXplX3QgcmVmX2NvdW50OwogIGNoYXIgdHlwZVsyNTZdOwoKICBzdHJ1Y3QgbHdzX3JpbmcqIHJpbmc7CiAgcHRocmVhZF9tdXRleF90IGxvY2tfcmluZzsgLyogc2VyaWFsaXplIGFjY2VzcyB0byB0aGUgcmluZyBidWZmZXIgKi8KfSBNaW5uZXRSaW5nQnVmZmVyOwoKdm9pZCByaW5nYnVmZmVyX2R1bXAoc3RydWN0IHJpbmdidWZmZXIgY29uc3QqKTsKdm9pZCByaW5nYnVmZmVyX2luaXQoc3RydWN0IHJpbmdidWZmZXIqLCBzaXplX3QsIHNpemVfdCwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4pOwpzdHJ1Y3QgcmluZ2J1ZmZlciogcmluZ2J1ZmZlcl9uZXcoSlNDb250ZXh0Kik7CnN0cnVjdCByaW5nYnVmZmVyKiByaW5nYnVmZmVyX25ldzIoc2l6ZV90LCBzaXplX3QsIEpTQ29udGV4dCopOwpzaXplX3QgcmluZ2J1ZmZlcl9pbnNlcnQoc3RydWN0IHJpbmdidWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90KTsKc2l6ZV90IHJpbmdidWZmZXJfY29uc3VtZShzdHJ1Y3QgcmluZ2J1ZmZlciosIHZvaWQqLCBzaXplX3QpOwpzaXplX3QgcmluZ2J1ZmZlcl9za2lwKHN0cnVjdCByaW5nYnVmZmVyKiwgc2l6ZV90KTsKY29uc3Qgdm9pZCogcmluZ2J1ZmZlcl9uZXh0KHN0cnVjdCByaW5nYnVmZmVyKik7CnNpemVfdCByaW5nYnVmZmVyX3NpemUoc3RydWN0IHJpbmdidWZmZXIqKTsKc2l6ZV90IHJpbmdidWZmZXJfYXZhaWwoc3RydWN0IHJpbmdidWZmZXIqKTsKdm9pZCByaW5nYnVmZmVyX3plcm8oc3RydWN0IHJpbmdidWZmZXIqKTsKdm9pZCByaW5nYnVmZmVyX2ZyZWUoc3RydWN0IHJpbmdidWZmZXIqLCBKU1J1bnRpbWUqKTsKSlNWYWx1ZSBtaW5uZXRfcmluZ2J1ZmZlcl9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdKTsKSlNWYWx1ZSBtaW5uZXRfcmluZ2J1ZmZlcl9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIHNpemVfdCwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IG4pOwpKU1ZhbHVlIG1pbm5ldF9yaW5nYnVmZmVyX3dyYXAoSlNDb250ZXh0Kiwgc3RydWN0IHJpbmdidWZmZXIqKTsKCmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yaW5nYnVmZmVyX2NsYXNzOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3JpbmdidWZmZXJfcHJvdG8sIG1pbm5ldF9yaW5nYnVmZmVyX2N0b3I7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF9yaW5nYnVmZmVyX2NsYXNzX2lkOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JpbmdidWZmZXJfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmluZ2J1ZmZlcl9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBpbnQKcmluZ2J1ZmZlcl9sb2NrKHN0cnVjdCByaW5nYnVmZmVyKiBzdHJtKSB7CiAgcmV0dXJuIHB0aHJlYWRfbXV0ZXhfbG9jaygmc3RybS0+bG9ja19yaW5nKTsKfQoKc3RhdGljIGlubGluZSBpbnQKcmluZ2J1ZmZlcl91bmxvY2soc3RydWN0IHJpbmdidWZmZXIqIHN0cm0pIHsKICByZXR1cm4gcHRocmVhZF9tdXRleF91bmxvY2soJnN0cm0tPmxvY2tfcmluZyk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0UmluZ0J1ZmZlcioKbWlubmV0X3JpbmdidWZmZXJfZGF0YShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfcmluZ2J1ZmZlcl9jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfUklOR0JVRkZFUl9IICovCgAAAAAAAAAAsQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACxBwAAI2lmbmRlZiBNSU5ORVRfUklOR0JVRkZFUl9ICiNkZWZpbmUgTUlOTkVUX1JJTkdCVUZGRVJfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlIDxwdGhyZWFkLmg+Cgp0eXBlZGVmIHN0cnVjdCByaW5nYnVmZmVyIHsKICBzaXplX3QgcmVmX2NvdW50OwogIGNoYXIgdHlwZVsyNTZdOwoKICBzdHJ1Y3QgbHdzX3JpbmcqIHJpbmc7CiAgcHRocmVhZF9tdXRleF90IGxvY2tfcmluZzsgLyogc2VyaWFsaXplIGFjY2VzcyB0byB0aGUgcmluZyBidWZmZXIgKi8KfSBNaW5uZXRSaW5nQnVmZmVyOwoKdm9pZCByaW5nYnVmZmVyX2R1bXAoc3RydWN0IHJpbmdidWZmZXIgY29uc3QqKTsKdm9pZCByaW5nYnVmZmVyX2luaXQoc3RydWN0IHJpbmdidWZmZXIqLCBzaXplX3QsIHNpemVfdCwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4pOwpzdHJ1Y3QgcmluZ2J1ZmZlciogcmluZ2J1ZmZlcl9uZXcoSlNDb250ZXh0Kik7CnN0cnVjdCByaW5nYnVmZmVyKiByaW5nYnVmZmVyX25ldzIoc2l6ZV90LCBzaXplX3QsIEpTQ29udGV4dCopOwpzaXplX3QgcmluZ2J1ZmZlcl9pbnNlcnQoc3RydWN0IHJpbmdidWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90KTsKc2l6ZV90IHJpbmdidWZmZXJfY29uc3VtZShzdHJ1Y3QgcmluZ2J1ZmZlciosIHZvaWQqLCBzaXplX3QpOwpzaXplX3QgcmluZ2J1ZmZlcl9za2lwKHN0cnVjdCByaW5nYnVmZmVyKiwgc2l6ZV90KTsKY29uc3Qgdm9pZCogcmluZ2J1ZmZlcl9uZXh0KHN0cnVjdCByaW5nYnVmZmVyKik7CnNpemVfdCByaW5nYnVmZmVyX3NpemUoc3RydWN0IHJpbmdidWZmZXIqKTsKc2l6ZV90IHJpbmdidWZmZXJfYXZhaWwoc3RydWN0IHJpbmdidWZmZXIqKTsKdm9pZCByaW5nYnVmZmVyX3plcm8oc3RydWN0IHJpbmdidWZmZXIqKTsKdm9pZCByaW5nYnVmZmVyX2ZyZWUoc3RydWN0IHJpbmdidWZmZXIqLCBKU1J1bnRpbWUqKTsKSlNWYWx1ZSBtaW5uZXRfcmluZ2J1ZmZlcl9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdKTsKSlNWYWx1ZSBtaW5uZXRfcmluZ2J1ZmZlcl9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIHNpemVfdCwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IG4pOwpKU1ZhbHVlIG1pbm5ldF9yaW5nYnVmZmVyX3dyYXAoSlNDb250ZXh0Kiwgc3RydWN0IHJpbmdidWZmZXIqKTsKCmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yaW5nYnVmZmVyX2NsYXNzOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3JpbmdidWZmZXJfcHJvdG8sIG1pbm5ldF9yaW5nYnVmZmVyX2N0b3I7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF9yaW5nYnVmZmVyX2NsYXNzX2lkOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JpbmdidWZmZXJfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmluZ2J1ZmZlcl9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBpbnQKcmluZ2J1ZmZlcl9sb2NrKHN0cnVjdCByaW5nYnVmZmVyKiBzdHJtKSB7CiAgcmV0dXJuIHB0aHJlYWRfbXV0ZXhfbG9jaygmc3RybS0+bG9ja19yaW5nKTsKfQoKc3RhdGljIGlubGluZSBpbnQKcmluZ2J1ZmZlcl91bmxvY2soc3RydWN0IHJpbmdidWZmZXIqIHN0cm0pIHsKICByZXR1cm4gcHRocmVhZF9tdXRleF91bmxvY2soJnN0cm0tPmxvY2tfcmluZyk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0UmluZ0J1ZmZlcioKbWlubmV0X3JpbmdidWZmZXJfZGF0YShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfcmluZ2J1ZmZlcl9jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfUklOR0JVRkZFUl9IICovCgAAAAAAAAAAsQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACxBwAAI2lmbmRlZiBNSU5ORVRfUklOR0JVRkZFUl9ICiNkZWZpbmUgTUlOTkVUX1JJTkdCVUZGRVJfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlIDxwdGhyZWFkLmg+Cgp0eXBlZGVmIHN0cnVjdCByaW5nYnVmZmVyIHsKICBzaXplX3QgcmVmX2NvdW50OwogIGNoYXIgdHlwZVsyNTZdOwoKICBzdHJ1Y3QgbHdzX3JpbmcqIHJpbmc7CiAgcHRocmVhZF9tdXRleF90IGxvY2tfcmluZzsgLyogc2VyaWFsaXplIGFjY2VzcyB0byB0aGUgcmluZyBidWZmZXIgKi8KfSBNaW5uZXRSaW5nQnVmZmVyOwoKdm9pZCByaW5nYnVmZmVyX2R1bXAoc3RydWN0IHJpbmdidWZmZXIgY29uc3QqKTsKdm9pZCByaW5nYnVmZmVyX2luaXQoc3RydWN0IHJpbmdidWZmZXIqLCBzaXplX3QsIHNpemVfdCwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4pOwpzdHJ1Y3QgcmluZ2J1ZmZlciogcmluZ2J1ZmZlcl9uZXcoSlNDb250ZXh0Kik7CnN0cnVjdCByaW5nYnVmZmVyKiByaW5nYnVmZmVyX25ldzIoc2l6ZV90LCBzaXplX3QsIEpTQ29udGV4dCopOwpzaXplX3QgcmluZ2J1ZmZlcl9pbnNlcnQoc3RydWN0IHJpbmdidWZmZXIqLCBjb25zdCB2b2lkKiwgc2l6ZV90KTsKc2l6ZV90IHJpbmdidWZmZXJfY29uc3VtZShzdHJ1Y3QgcmluZ2J1ZmZlciosIHZvaWQqLCBzaXplX3QpOwpzaXplX3QgcmluZ2J1ZmZlcl9za2lwKHN0cnVjdCByaW5nYnVmZmVyKiwgc2l6ZV90KTsKY29uc3Qgdm9pZCogcmluZ2J1ZmZlcl9uZXh0KHN0cnVjdCByaW5nYnVmZmVyKik7CnNpemVfdCByaW5nYnVmZmVyX3NpemUoc3RydWN0IHJpbmdidWZmZXIqKTsKc2l6ZV90IHJpbmdidWZmZXJfYXZhaWwoc3RydWN0IHJpbmdidWZmZXIqKTsKdm9pZCByaW5nYnVmZmVyX3plcm8oc3RydWN0IHJpbmdidWZmZXIqKTsKdm9pZCByaW5nYnVmZmVyX2ZyZWUoc3RydWN0IHJpbmdidWZmZXIqLCBKU1J1bnRpbWUqKTsKSlNWYWx1ZSBtaW5uZXRfcmluZ2J1ZmZlcl9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdKTsKSlNWYWx1ZSBtaW5uZXRfcmluZ2J1ZmZlcl9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIHNpemVfdCwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IG4pOwpKU1ZhbHVlIG1pbm5ldF9yaW5nYnVmZmVyX3dyYXAoSlNDb250ZXh0Kiwgc3RydWN0IHJpbmdidWZmZXIqKTsKCmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yaW5nYnVmZmVyX2NsYXNzOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3JpbmdidWZmZXJfcHJvdG8sIG1pbm5ldF9yaW5nYnVmZmVyX2N0b3I7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF9yaW5nYnVmZmVyX2NsYXNzX2lkOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JpbmdidWZmZXJfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmluZ2J1ZmZlcl9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBpbnQKcmluZ2J1ZmZlcl9sb2NrKHN0cnVjdCByaW5nYnVmZmVyKiBzdHJtKSB7CiAgcmV0dXJuIHB0aHJlYWRfbXV0ZXhfbG9jaygmc3RybS0+bG9ja19yaW5nKTsKfQoKc3RhdGljIGlubGluZSBpbnQKcmluZ2J1ZmZlcl91bmxvY2soc3RydWN0IHJpbmdidWZmZXIqIHN0cm0pIHsKICByZXR1cm4gcHRocmVhZF9tdXRleF91bmxvY2soJnN0cm0tPmxvY2tfcmluZyk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0UmluZ0J1ZmZlcioKbWlubmV0X3JpbmdidWZmZXJfZGF0YShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfcmluZ2J1ZmZlcl9jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfUklOR0JVRkZFUl9IICovCgAAAAAAAAAAsQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-server-http.h",
			"settings":
			{
				"buffer_size": 1734,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADGBgAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgdW5pb24gaHR0cF92aG9zdF9vcHRpb25zIHsKICBzdHJ1Y3QgbHdzX3Byb3RvY29sX3Zob3N0X29wdGlvbnMgbHdzOwogIHN0cnVjdCB7CiAgICB1bmlvbiBodHRwX3Zob3N0X29wdGlvbnMgKm5leHQsICpvcHRpb25zOwogICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogIH07Cgp9IE1pbm5ldFZob3N0T3B0aW9uczsKCnR5cGVkZWYgc3RydWN0IGh0dHBfbW91bnQgewogIHVuaW9uIHsKICAgIHN0cnVjdCB7CiAgICAgIHN0cnVjdCBodHRwX21vdW50KiBuZXh0OwogICAgICBjb25zdCBjaGFyICptbnQsICpvcmcsICpkZWYsICpwcm87CiAgICAgIHVuaW9uIGh0dHBfdmhvc3Rfb3B0aW9ucyAqY2dpZW52LCAqZXh0cmFfbWltZXR5cGVzLCAqaW50ZXJwcmV0OwogICAgfTsKICAgIHN0cnVjdCBsd3NfaHR0cF9tb3VudCBsd3M7CiAgfTsKICBNaW5uZXRDYWxsYmFjayBjYWxsYmFjazsKfSBNaW5uZXRIdHRwTW91bnQ7CgpNaW5uZXRWaG9zdE9wdGlvbnMqIHZob3N0X29wdGlvbnNfY3JlYXRlKEpTQ29udGV4dCosIGNvbnN0IGNoYXIqLCBjb25zdCBjaGFyKik7Ck1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZSk7CnZvaWQgdmhvc3Rfb3B0aW9uc19mcmVlX2xpc3QoSlNDb250ZXh0KiwgTWlubmV0Vmhvc3RPcHRpb25zKik7CnZvaWQgdmhvc3Rfb3B0aW9uc19mcmVlKEpTQ29udGV4dCosIE1pbm5ldFZob3N0T3B0aW9ucyopOwpNaW5uZXRIdHRwTW91bnQqIG1vdW50X2NyZWF0ZShKU0NvbnRleHQqLCBjb25zdCBjaGFyKiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqIGRlZiwgY29uc3QgY2hhciogcHJvLCBlbnVtIGx3c19tb3VudF9wcm90b2NvbHMgb3JpZ2luX3Byb3RvKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZSwgY29uc3QgY2hhciopOwpzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnRfZmluZChNaW5uZXRIdHRwTW91bnQqLCBjb25zdCBjaGFyKiwgc2l6ZV90KTsKc3RydWN0IGh0dHBfbW91bnQqIG1vdW50X2ZpbmRfcyhNaW5uZXRIdHRwTW91bnQqLCBjb25zdCBjaGFyKik7CnZvaWQgbW91bnRfZnJvbXZhbHVlKEpTQ29udGV4dCogY3R4LCBNaW5uZXRIdHRwTW91bnQqKiBtLCBKU1ZhbHVlQ29uc3Qgb3B0X21vdW50cyk7CnZvaWQgbW91bnRfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRIdHRwTW91bnQgY29uc3QqKTsKaW50IGh0dHBfc2VydmVyX3Jlc3BvbmQoc3RydWN0IGx3cyosIE1pbm5ldEJ1ZmZlciosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgSlNDb250ZXh0KiBjdHgpOwppbnQgaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IGx3cyosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgQk9PTCk7CmludCBodHRwX3NlcnZlcl9jYWxsYmFjayhzdHJ1Y3QgbHdzKiwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucywgdm9pZCosIHZvaWQqIGluLCBzaXplX3QgbGVuKTsKCnN0YXRpYyBpbmxpbmUgaW50CmlzX2gyKHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfZ2V0X25ldHdvcmtfd3NpKHdzaSkgIT0gd3NpOwp9CgojZW5kaWYgLyogTUlOTkVUX1NFUlZFUl9IVFRQX0ggKi8KAAAAAAAAAADGBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADGBgAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgdW5pb24gaHR0cF92aG9zdF9vcHRpb25zIHsKICBzdHJ1Y3QgbHdzX3Byb3RvY29sX3Zob3N0X29wdGlvbnMgbHdzOwogIHN0cnVjdCB7CiAgICB1bmlvbiBodHRwX3Zob3N0X29wdGlvbnMgKm5leHQsICpvcHRpb25zOwogICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogIH07Cgp9IE1pbm5ldFZob3N0T3B0aW9uczsKCnR5cGVkZWYgc3RydWN0IGh0dHBfbW91bnQgewogIHVuaW9uIHsKICAgIHN0cnVjdCB7CiAgICAgIHN0cnVjdCBodHRwX21vdW50KiBuZXh0OwogICAgICBjb25zdCBjaGFyICptbnQsICpvcmcsICpkZWYsICpwcm87CiAgICAgIHVuaW9uIGh0dHBfdmhvc3Rfb3B0aW9ucyAqY2dpZW52LCAqZXh0cmFfbWltZXR5cGVzLCAqaW50ZXJwcmV0OwogICAgfTsKICAgIHN0cnVjdCBsd3NfaHR0cF9tb3VudCBsd3M7CiAgfTsKICBNaW5uZXRDYWxsYmFjayBjYWxsYmFjazsKfSBNaW5uZXRIdHRwTW91bnQ7CgpNaW5uZXRWaG9zdE9wdGlvbnMqIHZob3N0X29wdGlvbnNfY3JlYXRlKEpTQ29udGV4dCosIGNvbnN0IGNoYXIqLCBjb25zdCBjaGFyKik7Ck1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZSk7CnZvaWQgdmhvc3Rfb3B0aW9uc19mcmVlX2xpc3QoSlNDb250ZXh0KiwgTWlubmV0Vmhvc3RPcHRpb25zKik7CnZvaWQgdmhvc3Rfb3B0aW9uc19mcmVlKEpTQ29udGV4dCosIE1pbm5ldFZob3N0T3B0aW9ucyopOwpNaW5uZXRIdHRwTW91bnQqIG1vdW50X2NyZWF0ZShKU0NvbnRleHQqLCBjb25zdCBjaGFyKiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqIGRlZiwgY29uc3QgY2hhciogcHJvLCBlbnVtIGx3c19tb3VudF9wcm90b2NvbHMgb3JpZ2luX3Byb3RvKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZSwgY29uc3QgY2hhciopOwpzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnRfZmluZChNaW5uZXRIdHRwTW91bnQqLCBjb25zdCBjaGFyKiwgc2l6ZV90KTsKc3RydWN0IGh0dHBfbW91bnQqIG1vdW50X2ZpbmRfcyhNaW5uZXRIdHRwTW91bnQqLCBjb25zdCBjaGFyKik7CnZvaWQgbW91bnRfZnJvbXZhbHVlKEpTQ29udGV4dCogY3R4LCBNaW5uZXRIdHRwTW91bnQqKiBtLCBKU1ZhbHVlQ29uc3Qgb3B0X21vdW50cyk7CnZvaWQgbW91bnRfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRIdHRwTW91bnQgY29uc3QqKTsKaW50IGh0dHBfc2VydmVyX3Jlc3BvbmQoc3RydWN0IGx3cyosIE1pbm5ldEJ1ZmZlciosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgSlNDb250ZXh0KiBjdHgpOwppbnQgaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IGx3cyosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgQk9PTCk7CmludCBodHRwX3NlcnZlcl9jYWxsYmFjayhzdHJ1Y3QgbHdzKiwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucywgdm9pZCosIHZvaWQqIGluLCBzaXplX3QgbGVuKTsKCnN0YXRpYyBpbmxpbmUgaW50CmlzX2gyKHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfZ2V0X25ldHdvcmtfd3NpKHdzaSkgIT0gd3NpOwp9CgojZW5kaWYgLyogTUlOTkVUX1NFUlZFUl9IVFRQX0ggKi8KAAAAAAAAAADGBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAADGBgAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgdW5pb24gaHR0cF92aG9zdF9vcHRpb25zIHsKICBzdHJ1Y3QgbHdzX3Byb3RvY29sX3Zob3N0X29wdGlvbnMgbHdzOwogIHN0cnVjdCB7CiAgICB1bmlvbiBodHRwX3Zob3N0X29wdGlvbnMgKm5leHQsICpvcHRpb25zOwogICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogIH07Cgp9IE1pbm5ldFZob3N0T3B0aW9uczsKCnR5cGVkZWYgc3RydWN0IGh0dHBfbW91bnQgewogIHVuaW9uIHsKICAgIHN0cnVjdCB7CiAgICAgIHN0cnVjdCBodHRwX21vdW50KiBuZXh0OwogICAgICBjb25zdCBjaGFyICptbnQsICpvcmcsICpkZWYsICpwcm87CiAgICAgIHVuaW9uIGh0dHBfdmhvc3Rfb3B0aW9ucyAqY2dpZW52LCAqZXh0cmFfbWltZXR5cGVzLCAqaW50ZXJwcmV0OwogICAgfTsKICAgIHN0cnVjdCBsd3NfaHR0cF9tb3VudCBsd3M7CiAgfTsKICBNaW5uZXRDYWxsYmFjayBjYWxsYmFjazsKfSBNaW5uZXRIdHRwTW91bnQ7CgpNaW5uZXRWaG9zdE9wdGlvbnMqIHZob3N0X29wdGlvbnNfY3JlYXRlKEpTQ29udGV4dCosIGNvbnN0IGNoYXIqLCBjb25zdCBjaGFyKik7Ck1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZSk7CnZvaWQgdmhvc3Rfb3B0aW9uc19mcmVlX2xpc3QoSlNDb250ZXh0KiwgTWlubmV0Vmhvc3RPcHRpb25zKik7CnZvaWQgdmhvc3Rfb3B0aW9uc19mcmVlKEpTQ29udGV4dCosIE1pbm5ldFZob3N0T3B0aW9ucyopOwpNaW5uZXRIdHRwTW91bnQqIG1vdW50X2NyZWF0ZShKU0NvbnRleHQqLCBjb25zdCBjaGFyKiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqIGRlZiwgY29uc3QgY2hhciogcHJvLCBlbnVtIGx3c19tb3VudF9wcm90b2NvbHMgb3JpZ2luX3Byb3RvKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZSwgY29uc3QgY2hhciopOwpzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnRfZmluZChNaW5uZXRIdHRwTW91bnQqLCBjb25zdCBjaGFyKiwgc2l6ZV90KTsKc3RydWN0IGh0dHBfbW91bnQqIG1vdW50X2ZpbmRfcyhNaW5uZXRIdHRwTW91bnQqLCBjb25zdCBjaGFyKik7CnZvaWQgbW91bnRfZnJvbXZhbHVlKEpTQ29udGV4dCogY3R4LCBNaW5uZXRIdHRwTW91bnQqKiBtLCBKU1ZhbHVlQ29uc3Qgb3B0X21vdW50cyk7CnZvaWQgbW91bnRfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRIdHRwTW91bnQgY29uc3QqKTsKaW50IGh0dHBfc2VydmVyX3Jlc3BvbmQoc3RydWN0IGx3cyosIE1pbm5ldEJ1ZmZlciosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgSlNDb250ZXh0KiBjdHgpOwppbnQgaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IGx3cyosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgQk9PTCk7CmludCBodHRwX3NlcnZlcl9jYWxsYmFjayhzdHJ1Y3QgbHdzKiwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucywgdm9pZCosIHZvaWQqIGluLCBzaXplX3QgbGVuKTsKCnN0YXRpYyBpbmxpbmUgaW50CmlzX2gyKHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfZ2V0X25ldHdvcmtfd3NpKHdzaSkgIT0gd3NpOwp9CgojZW5kaWYgLyogTUlOTkVUX1NFUlZFUl9IVFRQX0ggKi8KAAAAAAAAAADGBgAAAAAAAAAAAAAAAAAAAAAAAMYGAAAAAAAAAAAAAAAAAAAAAAAAxgYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADGBgAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgdW5pb24gaHR0cF92aG9zdF9vcHRpb25zIHsKICBzdHJ1Y3QgbHdzX3Byb3RvY29sX3Zob3N0X29wdGlvbnMgbHdzOwogIHN0cnVjdCB7CiAgICB1bmlvbiBodHRwX3Zob3N0X29wdGlvbnMgKm5leHQsICpvcHRpb25zOwogICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogIH07Cgp9IE1pbm5ldFZob3N0T3B0aW9uczsKCnR5cGVkZWYgc3RydWN0IGh0dHBfbW91bnQgewogIHVuaW9uIHsKICAgIHN0cnVjdCB7CiAgICAgIHN0cnVjdCBodHRwX21vdW50KiBuZXh0OwogICAgICBjb25zdCBjaGFyICptbnQsICpvcmcsICpkZWYsICpwcm87CiAgICAgIHVuaW9uIGh0dHBfdmhvc3Rfb3B0aW9ucyAqY2dpZW52LCAqZXh0cmFfbWltZXR5cGVzLCAqaW50ZXJwcmV0OwogICAgfTsKICAgIHN0cnVjdCBsd3NfaHR0cF9tb3VudCBsd3M7CiAgfTsKICBNaW5uZXRDYWxsYmFjayBjYWxsYmFjazsKfSBNaW5uZXRIdHRwTW91bnQ7CgpNaW5uZXRWaG9zdE9wdGlvbnMqIHZob3N0X29wdGlvbnNfY3JlYXRlKEpTQ29udGV4dCosIGNvbnN0IGNoYXIqLCBjb25zdCBjaGFyKik7Ck1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZSk7CnZvaWQgdmhvc3Rfb3B0aW9uc19mcmVlX2xpc3QoSlNDb250ZXh0KiwgTWlubmV0Vmhvc3RPcHRpb25zKik7CnZvaWQgdmhvc3Rfb3B0aW9uc19mcmVlKEpTQ29udGV4dCosIE1pbm5ldFZob3N0T3B0aW9ucyopOwpNaW5uZXRIdHRwTW91bnQqIG1vdW50X2NyZWF0ZShKU0NvbnRleHQqLCBjb25zdCBjaGFyKiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqIGRlZiwgY29uc3QgY2hhciogcHJvLCBlbnVtIGx3c19tb3VudF9wcm90b2NvbHMgb3JpZ2luX3Byb3RvKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZSwgY29uc3QgY2hhciopOwpzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnRfZmluZChNaW5uZXRIdHRwTW91bnQqLCBjb25zdCBjaGFyKiwgc2l6ZV90KTsKc3RydWN0IGh0dHBfbW91bnQqIG1vdW50X2ZpbmRfcyhNaW5uZXRIdHRwTW91bnQqLCBjb25zdCBjaGFyKik7CnZvaWQgbW91bnRfZnJvbXZhbHVlKEpTQ29udGV4dCogY3R4LCBNaW5uZXRIdHRwTW91bnQqKiBtLCBKU1ZhbHVlQ29uc3Qgb3B0X21vdW50cyk7CnZvaWQgbW91bnRfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRIdHRwTW91bnQgY29uc3QqKTsKaW50IGh0dHBfc2VydmVyX3Jlc3BvbmQoc3RydWN0IGx3cyosIE1pbm5ldEJ1ZmZlciosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgSlNDb250ZXh0KiBjdHgpOwppbnQgaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IGx3cyosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgQk9PTCk7CmludCBodHRwX3NlcnZlcl9jYWxsYmFjayhzdHJ1Y3QgbHdzKiwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucywgdm9pZCosIHZvaWQqIGluLCBzaXplX3QgbGVuKTsKCnN0YXRpYyBpbmxpbmUgaW50CmlzX2gyKHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfZ2V0X25ldHdvcmtfd3NpKHdzaSkgIT0gd3NpOwp9CgojZW5kaWYgLyogTUlOTkVUX1NFUlZFUl9IVFRQX0ggKi8KAAAAAAAAAADGBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAUAAAAAAACWBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADGBgAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgdW5pb24gaHR0cF92aG9zdF9vcHRpb25zIHsKICBzdHJ1Y3QgbHdzX3Byb3RvY29sX3Zob3N0X29wdGlvbnMgbHdzOwogIHN0cnVjdCB7CiAgICB1bmlvbiBodHRwX3Zob3N0X29wdGlvbnMgKm5leHQsICpvcHRpb25zOwogICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogIH07Cgp9IE1pbm5ldFZob3N0T3B0aW9uczsKCnR5cGVkZWYgc3RydWN0IGh0dHBfbW91bnQgewogIHVuaW9uIHsKICAgIHN0cnVjdCB7CiAgICAgIHN0cnVjdCBodHRwX21vdW50KiBuZXh0OwogICAgICBjb25zdCBjaGFyICptbnQsICpvcmcsICpkZWYsICpwcm87CiAgICAgIHVuaW9uIGh0dHBfdmhvc3Rfb3B0aW9ucyAqY2dpZW52LCAqZXh0cmFfbWltZXR5cGVzLCAqaW50ZXJwcmV0OwogICAgfTsKICAgIHN0cnVjdCBsd3NfaHR0cF9tb3VudCBsd3M7CiAgfTsKICBNaW5uZXRDYWxsYmFjayBjYWxsYmFjazsKfSBNaW5uZXRIdHRwTW91bnQ7CgpNaW5uZXRWaG9zdE9wdGlvbnMqIHZob3N0X29wdGlvbnNfY3JlYXRlKEpTQ29udGV4dCosIGNvbnN0IGNoYXIqLCBjb25zdCBjaGFyKik7Ck1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZSk7CnZvaWQgdmhvc3Rfb3B0aW9uc19mcmVlX2xpc3QoSlNDb250ZXh0KiwgTWlubmV0Vmhvc3RPcHRpb25zKik7CnZvaWQgdmhvc3Rfb3B0aW9uc19mcmVlKEpTQ29udGV4dCosIE1pbm5ldFZob3N0T3B0aW9ucyopOwpNaW5uZXRIdHRwTW91bnQqIG1vdW50X2NyZWF0ZShKU0NvbnRleHQqLCBjb25zdCBjaGFyKiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqIGRlZiwgY29uc3QgY2hhciogcHJvLCBlbnVtIGx3c19tb3VudF9wcm90b2NvbHMgb3JpZ2luX3Byb3RvKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZSwgY29uc3QgY2hhciopOwpzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnRfZmluZChNaW5uZXRIdHRwTW91bnQqLCBjb25zdCBjaGFyKiwgc2l6ZV90KTsKc3RydWN0IGh0dHBfbW91bnQqIG1vdW50X2ZpbmRfcyhNaW5uZXRIdHRwTW91bnQqLCBjb25zdCBjaGFyKik7CnZvaWQgbW91bnRfZnJvbXZhbHVlKEpTQ29udGV4dCogY3R4LCBNaW5uZXRIdHRwTW91bnQqKiBtLCBKU1ZhbHVlQ29uc3Qgb3B0X21vdW50cyk7CnZvaWQgbW91bnRfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRIdHRwTW91bnQgY29uc3QqKTsKaW50IGh0dHBfc2VydmVyX3Jlc3BvbmQoc3RydWN0IGx3cyosIE1pbm5ldEJ1ZmZlciosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgSlNDb250ZXh0KiBjdHgpOwppbnQgaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IGx3cyosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgQk9PTCk7CmludCBodHRwX3NlcnZlcl9jYWxsYmFjayhzdHJ1Y3QgbHdzKiwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucywgdm9pZCosIHZvaWQqIGluLCBzaXplX3QgbGVuKTsKCnN0YXRpYyBpbmxpbmUgaW50CmlzX2gyKHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfZ2V0X25ldHdvcmtfd3NpKHdzaSkgIT0gd3NpOwp9CgojZW5kaWYgLyogTUlOTkVUX1NFUlZFUl9IVFRQX0ggKi8KAAAAAAAAAADGBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAUAAAAAAACWBQAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADGBgAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgdW5pb24gaHR0cF92aG9zdF9vcHRpb25zIHsKICBzdHJ1Y3QgbHdzX3Byb3RvY29sX3Zob3N0X29wdGlvbnMgbHdzOwogIHN0cnVjdCB7CiAgICB1bmlvbiBodHRwX3Zob3N0X29wdGlvbnMgKm5leHQsICpvcHRpb25zOwogICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogIH07Cgp9IE1pbm5ldFZob3N0T3B0aW9uczsKCnR5cGVkZWYgc3RydWN0IGh0dHBfbW91bnQgewogIHVuaW9uIHsKICAgIHN0cnVjdCB7CiAgICAgIHN0cnVjdCBodHRwX21vdW50KiBuZXh0OwogICAgICBjb25zdCBjaGFyICptbnQsICpvcmcsICpkZWYsICpwcm87CiAgICAgIHVuaW9uIGh0dHBfdmhvc3Rfb3B0aW9ucyAqY2dpZW52LCAqZXh0cmFfbWltZXR5cGVzLCAqaW50ZXJwcmV0OwogICAgfTsKICAgIHN0cnVjdCBsd3NfaHR0cF9tb3VudCBsd3M7CiAgfTsKICBNaW5uZXRDYWxsYmFjayBjYWxsYmFjazsKfSBNaW5uZXRIdHRwTW91bnQ7CgpNaW5uZXRWaG9zdE9wdGlvbnMqIHZob3N0X29wdGlvbnNfY3JlYXRlKEpTQ29udGV4dCosIGNvbnN0IGNoYXIqLCBjb25zdCBjaGFyKik7Ck1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZSk7CnZvaWQgdmhvc3Rfb3B0aW9uc19mcmVlX2xpc3QoSlNDb250ZXh0KiwgTWlubmV0Vmhvc3RPcHRpb25zKik7CnZvaWQgdmhvc3Rfb3B0aW9uc19mcmVlKEpTQ29udGV4dCosIE1pbm5ldFZob3N0T3B0aW9ucyopOwpNaW5uZXRIdHRwTW91bnQqIG1vdW50X2NyZWF0ZShKU0NvbnRleHQqLCBjb25zdCBjaGFyKiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqIGRlZiwgY29uc3QgY2hhciogcHJvLCBlbnVtIGx3c19tb3VudF9wcm90b2NvbHMgb3JpZ2luX3Byb3RvKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZSwgY29uc3QgY2hhciopOwpzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnRfZmluZChNaW5uZXRIdHRwTW91bnQqLCBjb25zdCBjaGFyKiwgc2l6ZV90KTsKc3RydWN0IGh0dHBfbW91bnQqIG1vdW50X2ZpbmRfcyhNaW5uZXRIdHRwTW91bnQqLCBjb25zdCBjaGFyKik7CnZvaWQgbW91bnRfZnJvbXZhbHVlKEpTQ29udGV4dCogY3R4LCBNaW5uZXRIdHRwTW91bnQqKiBtLCBKU1ZhbHVlQ29uc3Qgb3B0X21vdW50cyk7CnZvaWQgbW91bnRfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRIdHRwTW91bnQgY29uc3QqKTsKaW50IGh0dHBfc2VydmVyX3Jlc3BvbmQoc3RydWN0IGx3cyosIE1pbm5ldEJ1ZmZlciosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgSlNDb250ZXh0KiBjdHgpOwppbnQgaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IGx3cyosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgQk9PTCk7CmludCBodHRwX3NlcnZlcl9jYWxsYmFjayhzdHJ1Y3QgbHdzKiwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucywgdm9pZCosIHZvaWQqIGluLCBzaXplX3QgbGVuKTsKCnN0YXRpYyBpbmxpbmUgaW50CmlzX2gyKHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfZ2V0X25ldHdvcmtfd3NpKHdzaSkgIT0gd3NpOwp9CgojZW5kaWYgLyogTUlOTkVUX1NFUlZFUl9IVFRQX0ggKi8KAAAAAAAAAADGBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAUAAAAAAACWBQAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADGBgAAI2lmbmRlZiBNSU5ORVRfU0VSVkVSX0hUVFBfSAojZGVmaW5lIE1JTk5FVF9TRVJWRVJfSFRUUF9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSAibWlubmV0LmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCnR5cGVkZWYgdW5pb24gaHR0cF92aG9zdF9vcHRpb25zIHsKICBzdHJ1Y3QgbHdzX3Byb3RvY29sX3Zob3N0X29wdGlvbnMgbHdzOwogIHN0cnVjdCB7CiAgICB1bmlvbiBodHRwX3Zob3N0X29wdGlvbnMgKm5leHQsICpvcHRpb25zOwogICAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogIH07Cgp9IE1pbm5ldFZob3N0T3B0aW9uczsKCnR5cGVkZWYgc3RydWN0IGh0dHBfbW91bnQgewogIHVuaW9uIHsKICAgIHN0cnVjdCB7CiAgICAgIHN0cnVjdCBodHRwX21vdW50KiBuZXh0OwogICAgICBjb25zdCBjaGFyICptbnQsICpvcmcsICpkZWYsICpwcm87CiAgICAgIHVuaW9uIGh0dHBfdmhvc3Rfb3B0aW9ucyAqY2dpZW52LCAqZXh0cmFfbWltZXR5cGVzLCAqaW50ZXJwcmV0OwogICAgfTsKICAgIHN0cnVjdCBsd3NfaHR0cF9tb3VudCBsd3M7CiAgfTsKICBNaW5uZXRDYWxsYmFjayBjYWxsYmFjazsKfSBNaW5uZXRIdHRwTW91bnQ7CgpNaW5uZXRWaG9zdE9wdGlvbnMqIHZob3N0X29wdGlvbnNfY3JlYXRlKEpTQ29udGV4dCosIGNvbnN0IGNoYXIqLCBjb25zdCBjaGFyKik7Ck1pbm5ldFZob3N0T3B0aW9ucyogdmhvc3Rfb3B0aW9uc19uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZSk7CnZvaWQgdmhvc3Rfb3B0aW9uc19mcmVlX2xpc3QoSlNDb250ZXh0KiwgTWlubmV0Vmhvc3RPcHRpb25zKik7CnZvaWQgdmhvc3Rfb3B0aW9uc19mcmVlKEpTQ29udGV4dCosIE1pbm5ldFZob3N0T3B0aW9ucyopOwpNaW5uZXRIdHRwTW91bnQqIG1vdW50X2NyZWF0ZShKU0NvbnRleHQqLCBjb25zdCBjaGFyKiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqIGRlZiwgY29uc3QgY2hhciogcHJvLCBlbnVtIGx3c19tb3VudF9wcm90b2NvbHMgb3JpZ2luX3Byb3RvKTsKTWlubmV0SHR0cE1vdW50KiBtb3VudF9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZSwgY29uc3QgY2hhciopOwpzdHJ1Y3QgaHR0cF9tb3VudCogbW91bnRfZmluZChNaW5uZXRIdHRwTW91bnQqLCBjb25zdCBjaGFyKiwgc2l6ZV90KTsKc3RydWN0IGh0dHBfbW91bnQqIG1vdW50X2ZpbmRfcyhNaW5uZXRIdHRwTW91bnQqLCBjb25zdCBjaGFyKik7CnZvaWQgbW91bnRfZnJvbXZhbHVlKEpTQ29udGV4dCogY3R4LCBNaW5uZXRIdHRwTW91bnQqKiBtLCBKU1ZhbHVlQ29uc3Qgb3B0X21vdW50cyk7CnZvaWQgbW91bnRfZnJlZShKU0NvbnRleHQqLCBNaW5uZXRIdHRwTW91bnQgY29uc3QqKTsKaW50IGh0dHBfc2VydmVyX3Jlc3BvbmQoc3RydWN0IGx3cyosIE1pbm5ldEJ1ZmZlciosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgSlNDb250ZXh0KiBjdHgpOwppbnQgaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IGx3cyosIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgQk9PTCk7CmludCBodHRwX3NlcnZlcl9jYWxsYmFjayhzdHJ1Y3QgbHdzKiwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucywgdm9pZCosIHZvaWQqIGluLCBzaXplX3QgbGVuKTsKCnN0YXRpYyBpbmxpbmUgaW50CmlzX2gyKHN0cnVjdCBsd3MqIHdzaSkgewogIHJldHVybiBsd3NfZ2V0X25ldHdvcmtfd3NpKHdzaSkgIT0gd3NpOwp9CgojZW5kaWYgLyogTUlOTkVUX1NFUlZFUl9IVFRQX0ggKi8KAAAAAAAAAADGBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAUAAAAAAACWBQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-server.c",
			"settings":
			{
				"buffer_size": 16839,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAWAEAAAAAAABbAQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "opaque"
					},
					"BgAAAII6AAAAAAAAgzoAAAAAAAAAAAAAgzoAAAAAAACEOgAAAAAAAAAAAACEOgAAAAAAAIU6AAAAAAAAAAAAAIU6AAAAAAAAhjoAAAAAAAAAAAAAhjoAAAAAAACHOgAAAAAAAAAAAACHOgAAAAAAAIg6AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgjoAAAAAAACCOgAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIg6AAAAAAAAiToAAAAAAAAAAAAAiToAAAAAAACKOgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiDoAAAAAAACIOgAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " lws_opauq"
					},
					"CgAAAIo6AAAAAAAAizoAAAAAAAAAAAAAizoAAAAAAACMOgAAAAAAAAAAAACMOgAAAAAAAI06AAAAAAAAAAAAAI06AAAAAAAAjjoAAAAAAAAAAAAAjjoAAAAAAACPOgAAAAAAAAAAAACPOgAAAAAAAJA6AAAAAAAAAAAAAJA6AAAAAAAAkToAAAAAAAAAAAAAkToAAAAAAACSOgAAAAAAAAAAAACSOgAAAAAAAJM6AAAAAAAAAAAAAJM6AAAAAAAAlDoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAijoAAAAAAACKOgAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					2,
					"left_delete",
					null,
					"AgAAAJM6AAAAAAAAkzoAAAAAAAABAAAAcZI6AAAAAAAAkjoAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAlDoAAAAAAACUOgAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "que"
					},
					"AwAAAJI6AAAAAAAAkzoAAAAAAAAAAAAAkzoAAAAAAACUOgAAAAAAAAAAAACUOgAAAAAAAJU6AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkjoAAAAAAACSOgAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					11,
					"right_delete",
					null,
					"CwAAAJU6AAAAAAAAlToAAAAAAAABAAAAd5U6AAAAAAAAlToAAAAAAAABAAAAc5U6AAAAAAAAlToAAAAAAAABAAAAX5U6AAAAAAAAlToAAAAAAAABAAAAZpU6AAAAAAAAlToAAAAAAAABAAAAcpU6AAAAAAAAlToAAAAAAAABAAAAb5U6AAAAAAAAlToAAAAAAAABAAAAbZU6AAAAAAAAlToAAAAAAAABAAAAd5U6AAAAAAAAlToAAAAAAAABAAAAc5U6AAAAAAAAlToAAAAAAAABAAAAaZU6AAAAAAAAlToAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAlToAAAAAAACVOgAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAJU6AAAAAAAAljoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlToAAAAAAACVOgAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"cut",
					null,
					"AQAAAK46AAAAAAAArjoAAAAAAAAsAAAAb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CiAgICA",
					"AQAAAAAAAAABAAAArjoAAAAAAADaOgAAAAAAAAAAAAAAAERA"
				],
				[
					73,
					1,
					"paste",
					null,
					"AgAAAFU6AAAAAAAAUTsAAAAAAAAAAAAAUTsAAAAAAABROwAAAAAAAG0AAAAgIGlmKCFvcGFxdWUgJiYgd3NpICYmIHNlc3Npb24gJiYgY3R4KSB7CiAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgc2Vzc2lvbiwgY3R4KTsKICAgIGFzc2VydChvcGFxdWUpOwogIH0K",
					"AQAAAAAAAAABAAAAVToAAAAAAADCOgAAAAAAAAAAAAAAAAAA"
				],
				[
					78,
					1,
					"left_delete",
					null,
					"AQAAAFQ6AAAAAAAAVDoAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAVToAAAAAAABVOgAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAVDoAAAAAAABUOgAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAVDoAAAAAAABUOgAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"paste",
					null,
					"AQAAABNBAAAAAAAAe0EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAE0EAAAAAAAATQQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAe0EAAAAAAAB7QQAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"cut",
					null,
					"AQAAANEaAAAAAAAA0RoAAAAAAAA6AAAAICAgICAgcHJpbnRmKCJuZXdfaW50ZXJ2YWwgJSIgUFJJdTMyICJcbiIsIG5ld19pbnRlcnZhbCk7Cg",
					"AQAAAAAAAAABAAAA0RoAAAAAAAALGwAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"paste",
					null,
					"AQAAAEYbAAAAAAAAgBsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARhsAAAAAAABGGwAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAACoaAAAAAAAAKxoAAAAAAAAAAAAAKxoAAAAAAAAsGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKhoAAAAAAAAqGgAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAE4bAAAAAAAATxsAAAAAAAAAAAAATxsAAAAAAABQGwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAThsAAAAAAABOGwAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAOAbAAAAAAAA4RsAAAAAAAAAAAAA4RsAAAAAAADiGwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4BsAAAAAAADgGwAAAAAAAAAAAAAAADRA"
				],
				[
					159,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA4hsAAAAAAADiGwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "libwebsockets/include/libwebsockets/lws-timeout-timer.h",
			"settings":
			{
				"buffer_size": 11652,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libwebsockets/include/libwebsockets/lws-service.h",
			"settings":
			{
				"buffer_size": 7679,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "build/x86_64-linux-debug/libwebsockets/include/libwebsockets/lws-context-vhost.h",
			"settings":
			{
				"buffer_size": 56539,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAVjMAAAAAAABjMwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "libwebsockets/include/libwebsockets/lws-protocols-plugins.h",
			"settings":
			{
				"buffer_size": 14480,
				"line_ending": "Unix"
			}
		},
		{
			"file": "minnet.c",
			"settings":
			{
				"buffer_size": 26107,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					567,
					1,
					"left_delete",
					null,
					"AQAAADIyAAAAAAAAMjIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAMzIAAAAAAAAzMgAAAAAAAAAAAAAAAPC/"
				],
				[
					568,
					2,
					"insert_snippet",
					{
						"contents": "\n${TM_CURRENT_LINE/^\\s*((?:#|\\/\\/[\\/!]?)\\s*).*/$1/}"
					},
					"AgAAADIyAAAAAAAAOjIAAAAAAAAAAAAAOjIAAAAAAABCMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMjIAAAAAAAAyMgAAAAAAAAAAAAAAAPC/"
				],
				[
					569,
					3,
					"left_delete",
					null,
					"AwAAAEEyAAAAAAAAQTIAAAAAAAABAAAAIEAyAAAAAAAAQDIAAAAAAAABAAAALz8yAAAAAAAAPzIAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAQjIAAAAAAABCMgAAAAAAAAAAAAAAAPC/"
				],
				[
					570,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAD8yAAAAAAAAQDIAAAAAAAAAAAAAQDIAAAAAAABEMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPzIAAAAAAAA/MgAAAAAAAAAAAAAAAPC/"
				],
				[
					572,
					1,
					"insert",
					{
						"characters": "rintf"
					},
					"BgAAAD8yAAAAAAAAQDIAAAAAAAAAAAAAQTIAAAAAAABBMgAAAAAAAAQAAAAgICAgQDIAAAAAAABBMgAAAAAAAAAAAABBMgAAAAAAAEIyAAAAAAAAAAAAAEIyAAAAAAAAQzIAAAAAAAAAAAAAQzIAAAAAAABEMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPzIAAAAAAAA/MgAAAAAAAAAAAAAAAERA"
				],
				[
					573,
					5,
					"left_delete",
					null,
					"BQAAAEMyAAAAAAAAQzIAAAAAAAABAAAAZkIyAAAAAAAAQjIAAAAAAAABAAAAdEEyAAAAAAAAQTIAAAAAAAABAAAAbkAyAAAAAAAAQDIAAAAAAAABAAAAaT8yAAAAAAAAPzIAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAARDIAAAAAAABEMgAAAAAAAAAAAAAAAPC/"
				],
				[
					574,
					1,
					"insert",
					{
						"characters": "printf"
					},
					"BgAAAD8yAAAAAAAAQDIAAAAAAAAAAAAAQDIAAAAAAABBMgAAAAAAAAAAAABBMgAAAAAAAEIyAAAAAAAAAAAAAEIyAAAAAAAAQzIAAAAAAAAAAAAAQzIAAAAAAABEMgAAAAAAAAAAAABEMgAAAAAAAEUyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPzIAAAAAAAA/MgAAAAAAAAAAAAAAAPC/"
				],
				[
					575,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEUyAAAAAAAARzIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARTIAAAAAAABFMgAAAAAAAAAAAAAAAPC/"
				],
				[
					576,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAEYyAAAAAAAASDIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARjIAAAAAAABGMgAAAAAAAAAAAAAAAPC/"
				],
				[
					577,
					1,
					"insert",
					{
						"characters": "%s:"
					},
					"AwAAAEcyAAAAAAAASDIAAAAAAAAAAAAASDIAAAAAAABJMgAAAAAAAAAAAABJMgAAAAAAAEoyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARzIAAAAAAABHMgAAAAAAAAAAAAAAAPC/"
				],
				[
					578,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAEoyAAAAAAAASzIAAAAAAAAAAAAASzIAAAAAAABMMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASjIAAAAAAABKMgAAAAAAAAAAAAAAAPC/"
				],
				[
					579,
					1,
					"left_delete",
					null,
					"AQAAAEsyAAAAAAAASzIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAATDIAAAAAAABMMgAAAAAAAAAAAAAAAPC/"
				],
				[
					580,
					1,
					"insert",
					{
						"characters": "fd"
					},
					"AgAAAEsyAAAAAAAATDIAAAAAAAAAAAAATDIAAAAAAABNMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASzIAAAAAAABLMgAAAAAAAAAAAAAAAPC/"
				],
				[
					581,
					2,
					"left_delete",
					null,
					"AgAAAEwyAAAAAAAATDIAAAAAAAABAAAAZEsyAAAAAAAASzIAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAATTIAAAAAAABNMgAAAAAAAAAAAAAAAPC/"
				],
				[
					582,
					1,
					"insert",
					{
						"characters": "fd=%d"
					},
					"BQAAAEsyAAAAAAAATDIAAAAAAAAAAAAATDIAAAAAAABNMgAAAAAAAAAAAABNMgAAAAAAAE4yAAAAAAAAAAAAAE4yAAAAAAAATzIAAAAAAAAAAAAATzIAAAAAAABQMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASzIAAAAAAABLMgAAAAAAAAAAAAAAAPC/"
				],
				[
					583,
					1,
					"insert",
					{
						"characters": " even"
					},
					"BQAAAFAyAAAAAAAAUTIAAAAAAAAAAAAAUTIAAAAAAABSMgAAAAAAAAAAAABSMgAAAAAAAFMyAAAAAAAAAAAAAFMyAAAAAAAAVDIAAAAAAAAAAAAAVDIAAAAAAABVMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUDIAAAAAAABQMgAAAAAAAAAAAAAAAPC/"
				],
				[
					584,
					3,
					"left_delete",
					null,
					"AwAAAFQyAAAAAAAAVDIAAAAAAAABAAAAblMyAAAAAAAAUzIAAAAAAAABAAAAZVIyAAAAAAAAUjIAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAAVTIAAAAAAABVMgAAAAAAAAAAAAAAAPC/"
				],
				[
					585,
					1,
					"insert",
					{
						"characters": "re"
					},
					"AgAAAFIyAAAAAAAAUzIAAAAAAAAAAAAAUzIAAAAAAABUMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUjIAAAAAAABSMgAAAAAAAAAAAAAAAPC/"
				],
				[
					586,
					3,
					"left_delete",
					null,
					"AwAAAFMyAAAAAAAAUzIAAAAAAAABAAAAZVIyAAAAAAAAUjIAAAAAAAABAAAAclEyAAAAAAAAUTIAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAVDIAAAAAAABUMgAAAAAAAAAAAAAAAPC/"
				],
				[
					587,
					1,
					"insert",
					{
						"characters": "revents%"
					},
					"CAAAAFEyAAAAAAAAUjIAAAAAAAAAAAAAUjIAAAAAAABTMgAAAAAAAAAAAABTMgAAAAAAAFQyAAAAAAAAAAAAAFQyAAAAAAAAVTIAAAAAAAAAAAAAVTIAAAAAAABWMgAAAAAAAAAAAABWMgAAAAAAAFcyAAAAAAAAAAAAAFcyAAAAAAAAWDIAAAAAAAAAAAAAWDIAAAAAAABZMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUTIAAAAAAABRMgAAAAAAAAAAAAAAAPC/"
				],
				[
					588,
					1,
					"left_delete",
					null,
					"AQAAAFgyAAAAAAAAWDIAAAAAAAABAAAAJQ",
					"AQAAAAAAAAABAAAAWTIAAAAAAABZMgAAAAAAAAAAAAAAAPC/"
				],
				[
					589,
					1,
					"insert",
					{
						"characters": "=%d\\n"
					},
					"BQAAAFgyAAAAAAAAWTIAAAAAAAAAAAAAWTIAAAAAAABaMgAAAAAAAAAAAABaMgAAAAAAAFsyAAAAAAAAAAAAAFsyAAAAAAAAXDIAAAAAAAAAAAAAXDIAAAAAAABdMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWDIAAAAAAABYMgAAAAAAAAAAAAAAAPC/"
				],
				[
					591,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAF4yAAAAAAAAXzIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXjIAAAAAAABeMgAAAAAAAAAAAAAAAPC/"
				],
				[
					592,
					1,
					"insert",
					{
						"characters": " __func_"
					},
					"CAAAAF8yAAAAAAAAYDIAAAAAAAAAAAAAYDIAAAAAAABhMgAAAAAAAAAAAABhMgAAAAAAAGIyAAAAAAAAAAAAAGIyAAAAAAAAYzIAAAAAAAAAAAAAYzIAAAAAAABkMgAAAAAAAAAAAABkMgAAAAAAAGUyAAAAAAAAAAAAAGUyAAAAAAAAZjIAAAAAAAAAAAAAZjIAAAAAAABnMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXzIAAAAAAABfMgAAAAAAAAAAAAAAAPC/"
				],
				[
					593,
					1,
					"insert",
					{
						"characters": "_,x.fd"
					},
					"BgAAAGcyAAAAAAAAaDIAAAAAAAAAAAAAaDIAAAAAAABpMgAAAAAAAAAAAABpMgAAAAAAAGoyAAAAAAAAAAAAAGoyAAAAAAAAazIAAAAAAAAAAAAAazIAAAAAAABsMgAAAAAAAAAAAABsMgAAAAAAAG0yAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZzIAAAAAAABnMgAAAAAAAAAAAAAAAPC/"
				],
				[
					594,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAG0yAAAAAAAAbjIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbTIAAAAAAABtMgAAAAAAAAAAAAAAAPC/"
				],
				[
					595,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAG4yAAAAAAAAbzIAAAAAAAAAAAAAbzIAAAAAAABwMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbjIAAAAAAABuMgAAAAAAAAAAAAAAAPC/"
				],
				[
					597,
					1,
					"insert",
					{
						"characters": "x.revents);"
					},
					"CwAAAG8yAAAAAAAAcDIAAAAAAAAAAAAAcDIAAAAAAABxMgAAAAAAAAAAAABxMgAAAAAAAHIyAAAAAAAAAAAAAHIyAAAAAAAAczIAAAAAAAAAAAAAczIAAAAAAAB0MgAAAAAAAAAAAAB0MgAAAAAAAHUyAAAAAAAAAAAAAHUyAAAAAAAAdjIAAAAAAAAAAAAAdjIAAAAAAAB3MgAAAAAAAAAAAAB3MgAAAAAAAHgyAAAAAAAAAAAAAHgyAAAAAAAAeTIAAAAAAAAAAAAAeTIAAAAAAAB6MgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbzIAAAAAAABvMgAAAAAAAAAAAAAAAPC/"
				],
				[
					599,
					1,
					"cut",
					null,
					"AQAAAHoyAAAAAAAAejIAAAAAAAACAAAAICk",
					"AQAAAAAAAAABAAAAejIAAAAAAAB8MgAAAAAAAP///////+9/"
				],
				[
					607,
					1,
					"insert",
					{
						"characters": " wds"
					},
					"BAAAAFsyAAAAAAAAXDIAAAAAAAAAAAAAXDIAAAAAAABdMgAAAAAAAAAAAABdMgAAAAAAAF4yAAAAAAAAAAAAAF4yAAAAAAAAXzIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWzIAAAAAAABbMgAAAAAAAAAAAAAAAPC/"
				],
				[
					608,
					2,
					"left_delete",
					null,
					"AgAAAF4yAAAAAAAAXjIAAAAAAAABAAAAc10yAAAAAAAAXTIAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAXzIAAAAAAABfMgAAAAAAAAAAAAAAAPC/"
				],
				[
					609,
					1,
					"insert",
					{
						"characters": "s=%p"
					},
					"BAAAAF0yAAAAAAAAXjIAAAAAAAAAAAAAXjIAAAAAAABfMgAAAAAAAAAAAABfMgAAAAAAAGAyAAAAAAAAAAAAAGAyAAAAAAAAYTIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXTIAAAAAAABdMgAAAAAAAAAAAAAAAPC/"
				],
				[
					612,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAH4yAAAAAAAAfzIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfjIAAAAAAAB+MgAAAAAAAAAAAAAAAPC/"
				],
				[
					613,
					1,
					"insert",
					{
						"characters": " closure->op"
					},
					"DAAAAH8yAAAAAAAAgDIAAAAAAAAAAAAAgDIAAAAAAACBMgAAAAAAAAAAAACBMgAAAAAAAIIyAAAAAAAAAAAAAIIyAAAAAAAAgzIAAAAAAAAAAAAAgzIAAAAAAACEMgAAAAAAAAAAAACEMgAAAAAAAIUyAAAAAAAAAAAAAIUyAAAAAAAAhjIAAAAAAAAAAAAAhjIAAAAAAACHMgAAAAAAAAAAAACHMgAAAAAAAIgyAAAAAAAAAAAAAIgyAAAAAAAAiTIAAAAAAAAAAAAAiTIAAAAAAACKMgAAAAAAAAAAAACKMgAAAAAAAIsyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfzIAAAAAAAB/MgAAAAAAAAAAAAAAAPC/"
				],
				[
					614,
					1,
					"insert",
					{
						"characters": "aque->ws"
					},
					"CAAAAIsyAAAAAAAAjDIAAAAAAAAAAAAAjDIAAAAAAACNMgAAAAAAAAAAAACNMgAAAAAAAI4yAAAAAAAAAAAAAI4yAAAAAAAAjzIAAAAAAAAAAAAAjzIAAAAAAACQMgAAAAAAAAAAAACQMgAAAAAAAJEyAAAAAAAAAAAAAJEyAAAAAAAAkjIAAAAAAAAAAAAAkjIAAAAAAACTMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAizIAAAAAAACLMgAAAAAAAAAAAAAAAPC/"
				],
				[
					621,
					1,
					"insert",
					{
						"characters": "io_events("
					},
					"CgAAAHUyAAAAAAAAdjIAAAAAAAAAAAAAdjIAAAAAAAB3MgAAAAAAAAAAAAB3MgAAAAAAAHgyAAAAAAAAAAAAAHgyAAAAAAAAeTIAAAAAAAAAAAAAeTIAAAAAAAB6MgAAAAAAAAAAAAB6MgAAAAAAAHsyAAAAAAAAAAAAAHsyAAAAAAAAfDIAAAAAAAAAAAAAfDIAAAAAAAB9MgAAAAAAAAAAAAB9MgAAAAAAAH4yAAAAAAAAAAAAAH4yAAAAAAAAfzIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdTIAAAAAAAB1MgAAAAAAAAAAAAAAAPC/"
				],
				[
					623,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAIgyAAAAAAAAiTIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiDIAAAAAAACIMgAAAAAAAAAAAAAAAPC/"
				],
				[
					640,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANosAAAAAAAA2ywAAAAAAAAAAAAA2ywAAAAAAADbLAAAAAAAAAIAAAAvKg",
					"AQAAAAAAAAABAAAA3CwAAAAAAADaLAAAAAAAAAAAAAAAAPC/"
				],
				[
					643,
					2,
					"left_delete",
					null,
					"AgAAAGEuAAAAAAAAYS4AAAAAAAABAAAAL2AuAAAAAAAAYC4AAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAYi4AAAAAAABiLgAAAAAAAAAAAAAAAPC/"
				],
				[
					646,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAYC4AAAAAAABgLgAAAAAAAAAAAAAAAPC/"
				],
				[
					660,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AgAAAE8yAAAAAAAAUDIAAAAAAAAAAAAAUDIAAAAAAABQMgAAAAAAAAEAAABk",
					"AQAAAAAAAAABAAAATzIAAAAAAABQMgAAAAAAAAAAAAAAAPC/"
				],
				[
					669,
					1,
					"insert",
					{
						"characters": " opaque=%p"
					},
					"CgAAAFYyAAAAAAAAVzIAAAAAAAAAAAAAVzIAAAAAAABYMgAAAAAAAAAAAABYMgAAAAAAAFkyAAAAAAAAAAAAAFkyAAAAAAAAWjIAAAAAAAAAAAAAWjIAAAAAAABbMgAAAAAAAAAAAABbMgAAAAAAAFwyAAAAAAAAAAAAAFwyAAAAAAAAXTIAAAAAAAAAAAAAXTIAAAAAAABeMgAAAAAAAAAAAABeMgAAAAAAAF8yAAAAAAAAAAAAAF8yAAAAAAAAYDIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVjIAAAAAAABWMgAAAAAAAAAAAAAAAPC/"
				],
				[
					676,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJ4yAAAAAAAAnzIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnjIAAAAAAACeMgAAAAAAAAAAAAAAAPC/"
				],
				[
					677,
					1,
					"insert",
					{
						"characters": " clsou"
					},
					"BgAAAJ8yAAAAAAAAoDIAAAAAAAAAAAAAoDIAAAAAAAChMgAAAAAAAAAAAAChMgAAAAAAAKIyAAAAAAAAAAAAAKIyAAAAAAAAozIAAAAAAAAAAAAAozIAAAAAAACkMgAAAAAAAAAAAACkMgAAAAAAAKUyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnzIAAAAAAACfMgAAAAAAAAAAAAAAAPC/"
				],
				[
					678,
					3,
					"left_delete",
					null,
					"AwAAAKQyAAAAAAAApDIAAAAAAAABAAAAdaMyAAAAAAAAozIAAAAAAAABAAAAb6IyAAAAAAAAojIAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAApTIAAAAAAAClMgAAAAAAAAAAAAAAAPC/"
				],
				[
					679,
					1,
					"insert",
					{
						"characters": "ois"
					},
					"AwAAAKIyAAAAAAAAozIAAAAAAAAAAAAAozIAAAAAAACkMgAAAAAAAAAAAACkMgAAAAAAAKUyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAojIAAAAAAACiMgAAAAAAAAAAAAAAAPC/"
				],
				[
					680,
					2,
					"left_delete",
					null,
					"AgAAAKQyAAAAAAAApDIAAAAAAAABAAAAc6MyAAAAAAAAozIAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAApTIAAAAAAAClMgAAAAAAAAAAAAAAAPC/"
				],
				[
					681,
					1,
					"insert",
					{
						"characters": "sure->opaque"
					},
					"DAAAAKMyAAAAAAAApDIAAAAAAAAAAAAApDIAAAAAAAClMgAAAAAAAAAAAAClMgAAAAAAAKYyAAAAAAAAAAAAAKYyAAAAAAAApzIAAAAAAAAAAAAApzIAAAAAAACoMgAAAAAAAAAAAACoMgAAAAAAAKkyAAAAAAAAAAAAAKkyAAAAAAAAqjIAAAAAAAAAAAAAqjIAAAAAAACrMgAAAAAAAAAAAACrMgAAAAAAAKwyAAAAAAAAAAAAAKwyAAAAAAAArTIAAAAAAAAAAAAArTIAAAAAAACuMgAAAAAAAAAAAACuMgAAAAAAAK8yAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAozIAAAAAAACjMgAAAAAAAAAAAAAAAPC/"
				],
				[
					692,
					1,
					"insert",
					{
						"characters": "\nstruct"
					},
					"CAAAAFkwAAAAAAAAWjAAAAAAAAAAAAAAWjAAAAAAAABcMAAAAAAAAAAAAABcMAAAAAAAAF0wAAAAAAAAAAAAAF0wAAAAAAAAXjAAAAAAAAAAAAAAXjAAAAAAAABfMAAAAAAAAAAAAABfMAAAAAAAAGAwAAAAAAAAAAAAAGAwAAAAAAAAYTAAAAAAAAAAAAAAYTAAAAAAAABiMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWTAAAAAAAABZMAAAAAAAAAAAAAAAAPC/"
				],
				[
					693,
					1,
					"insert",
					{
						"characters": " wsi_"
					},
					"BQAAAGIwAAAAAAAAYzAAAAAAAAAAAAAAYzAAAAAAAABkMAAAAAAAAAAAAABkMAAAAAAAAGUwAAAAAAAAAAAAAGUwAAAAAAAAZjAAAAAAAAAAAAAAZjAAAAAAAABnMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYjAAAAAAAABiMAAAAAAAAAAAAAAAAPC/"
				],
				[
					694,
					5,
					"left_delete",
					null,
					"BQAAAGYwAAAAAAAAZjAAAAAAAAABAAAAX2UwAAAAAAAAZTAAAAAAAAABAAAAaWQwAAAAAAAAZDAAAAAAAAABAAAAc2MwAAAAAAAAYzAAAAAAAAABAAAAd2IwAAAAAAAAYjAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAZzAAAAAAAABnMAAAAAAAAAAAAAAAAPC/"
				],
				[
					695,
					1,
					"insert",
					{
						"characters": " wsi_opa"
					},
					"CAAAAGIwAAAAAAAAYzAAAAAAAAAAAAAAYzAAAAAAAABkMAAAAAAAAAAAAABkMAAAAAAAAGUwAAAAAAAAAAAAAGUwAAAAAAAAZjAAAAAAAAAAAAAAZjAAAAAAAABnMAAAAAAAAAAAAABnMAAAAAAAAGgwAAAAAAAAAAAAAGgwAAAAAAAAaTAAAAAAAAAAAAAAaTAAAAAAAABqMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYjAAAAAAAABiMAAAAAAAAAAAAAAAAPC/"
				],
				[
					696,
					1,
					"insert",
					{
						"characters": "que_user_dat"
					},
					"DAAAAGowAAAAAAAAazAAAAAAAAAAAAAAazAAAAAAAABsMAAAAAAAAAAAAABsMAAAAAAAAG0wAAAAAAAAAAAAAG0wAAAAAAAAbjAAAAAAAAAAAAAAbjAAAAAAAABvMAAAAAAAAAAAAABvMAAAAAAAAHAwAAAAAAAAAAAAAHAwAAAAAAAAcTAAAAAAAAAAAAAAcTAAAAAAAAByMAAAAAAAAAAAAAByMAAAAAAAAHMwAAAAAAAAAAAAAHMwAAAAAAAAdDAAAAAAAAAAAAAAdDAAAAAAAAB1MAAAAAAAAAAAAAB1MAAAAAAAAHYwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAajAAAAAAAABqMAAAAAAAAAAAAAAAAPC/"
				],
				[
					697,
					1,
					"insert",
					{
						"characters": "a*"
					},
					"AgAAAHYwAAAAAAAAdzAAAAAAAAAAAAAAdzAAAAAAAAB4MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdjAAAAAAAAB2MAAAAAAAAAAAAAAAAPC/"
				],
				[
					698,
					1,
					"insert",
					{
						"characters": " opaque"
					},
					"BwAAAHgwAAAAAAAAeTAAAAAAAAAAAAAAeTAAAAAAAAB6MAAAAAAAAAAAAAB6MAAAAAAAAHswAAAAAAAAAAAAAHswAAAAAAAAfDAAAAAAAAAAAAAAfDAAAAAAAAB9MAAAAAAAAAAAAAB9MAAAAAAAAH4wAAAAAAAAAAAAAH4wAAAAAAAAfzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeDAAAAAAAAB4MAAAAAAAAAAAAAAAAPC/"
				],
				[
					699,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAH8wAAAAAAAAgDAAAAAAAAAAAAAAgDAAAAAAAACBMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfzAAAAAAAAB/MAAAAAAAAAAAAAAAAPC/"
				],
				[
					700,
					1,
					"insert",
					{
						"characters": " &"
					},
					"AgAAAIEwAAAAAAAAgjAAAAAAAAAAAAAAgjAAAAAAAACDMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgTAAAAAAAACBMAAAAAAAAAAAAAAAAPC/"
				],
				[
					701,
					1,
					"left_delete",
					null,
					"AQAAAIIwAAAAAAAAgjAAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAgzAAAAAAAACDMAAAAAAAAAAAAAAAAPC/"
				],
				[
					702,
					1,
					"insert",
					{
						"characters": "closure->opqaue"
					},
					"DwAAAIIwAAAAAAAAgzAAAAAAAAAAAAAAgzAAAAAAAACEMAAAAAAAAAAAAACEMAAAAAAAAIUwAAAAAAAAAAAAAIUwAAAAAAAAhjAAAAAAAAAAAAAAhjAAAAAAAACHMAAAAAAAAAAAAACHMAAAAAAAAIgwAAAAAAAAAAAAAIgwAAAAAAAAiTAAAAAAAAAAAAAAiTAAAAAAAACKMAAAAAAAAAAAAACKMAAAAAAAAIswAAAAAAAAAAAAAIswAAAAAAAAjDAAAAAAAAAAAAAAjDAAAAAAAACNMAAAAAAAAAAAAACNMAAAAAAAAI4wAAAAAAAAAAAAAI4wAAAAAAAAjzAAAAAAAAAAAAAAjzAAAAAAAACQMAAAAAAAAAAAAACQMAAAAAAAAJEwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgjAAAAAAAACCMAAAAAAAAAAAAAAAAPC/"
				],
				[
					703,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJEwAAAAAAAAkjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkTAAAAAAAACRMAAAAAAAAAAAAAAAAPC/"
				],
				[
					704,
					5,
					"left_delete",
					null,
					"BQAAAJEwAAAAAAAAkTAAAAAAAAABAAAAIJAwAAAAAAAAkDAAAAAAAAABAAAAZY8wAAAAAAAAjzAAAAAAAAABAAAAdY4wAAAAAAAAjjAAAAAAAAABAAAAYY0wAAAAAAAAjTAAAAAAAAABAAAAcQ",
					"AQAAAAAAAAABAAAAkjAAAAAAAACSMAAAAAAAAAAAAAAAAPC/"
				],
				[
					705,
					1,
					"insert",
					{
						"characters": "aque"
					},
					"BAAAAI0wAAAAAAAAjjAAAAAAAAAAAAAAjjAAAAAAAACPMAAAAAAAAAAAAACPMAAAAAAAAJAwAAAAAAAAAAAAAJAwAAAAAAAAkTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjTAAAAAAAACNMAAAAAAAAAAAAAAAAPC/"
				],
				[
					707,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIIwAAAAAAAAgzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgjAAAAAAAACCMAAAAAAAAAAAAAAAAPC/"
				],
				[
					709,
					1,
					"insert",
					{
						"characters": "lws_get"
					},
					"BwAAAIIwAAAAAAAAgzAAAAAAAAAAAAAAgzAAAAAAAACEMAAAAAAAAAAAAACEMAAAAAAAAIUwAAAAAAAAAAAAAIUwAAAAAAAAhjAAAAAAAAAAAAAAhjAAAAAAAACHMAAAAAAAAAAAAACHMAAAAAAAAIgwAAAAAAAAAAAAAIgwAAAAAAAAiTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgjAAAAAAAACCMAAAAAAAAAAAAAAAAPC/"
				],
				[
					710,
					1,
					"insert_completion",
					{
						"completion": "lws_get_opaque_user_data",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "lws_get_opaque_user_data"
					},
					"AgAAAIIwAAAAAAAAgjAAAAAAAAAHAAAAbHdzX2dldIIwAAAAAAAAmjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiTAAAAAAAACJMAAAAAAAAAAAAAAAAPC/"
				],
				[
					711,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJowAAAAAAAAnDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmjAAAAAAAACaMAAAAAAAAAAAAAAAAPC/"
				],
				[
					712,
					1,
					"insert",
					{
						"characters": "closure->lwsi"
					},
					"DQAAAJswAAAAAAAAnDAAAAAAAAAAAAAAnDAAAAAAAACdMAAAAAAAAAAAAACdMAAAAAAAAJ4wAAAAAAAAAAAAAJ4wAAAAAAAAnzAAAAAAAAAAAAAAnzAAAAAAAACgMAAAAAAAAAAAAACgMAAAAAAAAKEwAAAAAAAAAAAAAKEwAAAAAAAAojAAAAAAAAAAAAAAojAAAAAAAACjMAAAAAAAAAAAAACjMAAAAAAAAKQwAAAAAAAAAAAAAKQwAAAAAAAApTAAAAAAAAAAAAAApTAAAAAAAACmMAAAAAAAAAAAAACmMAAAAAAAAKcwAAAAAAAAAAAAAKcwAAAAAAAAqDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmzAAAAAAAACbMAAAAAAAAAAAAAAAAPC/"
				],
				[
					714,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAKkwAAAAAAAAqjAAAAAAAAAAAAAAqjAAAAAAAACrMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqTAAAAAAAACpMAAAAAAAAAAAAAAAAPC/"
				],
				[
					715,
					2,
					"left_delete",
					null,
					"AgAAAKowAAAAAAAAqjAAAAAAAAABAAAAIKkwAAAAAAAAqTAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAqzAAAAAAAACrMAAAAAAAAAAAAAAAAPC/"
				],
				[
					716,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKkwAAAAAAAAqjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqTAAAAAAAACpMAAAAAAAAAAAAAAAAPC/"
				],
				[
					717,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAKowAAAAAAAAqzAAAAAAAAAAAAAAqzAAAAAAAACtMAAAAAAAAAAAAACtMAAAAAAAAK4wAAAAAAAAAAAAAK4wAAAAAAAAsDAAAAAAAAAAAAAAqzAAAAAAAACrMAAAAAAAAAIAAAAgIK4wAAAAAAAArzAAAAAAAAAAAAAArzAAAAAAAACwMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqjAAAAAAAACqMAAAAAAAAAAAAAAAAPC/"
				],
				[
					718,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALAwAAAAAAAAsjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsDAAAAAAAACwMAAAAAAAAAAAAAAAAPC/"
				],
				[
					719,
					1,
					"insert",
					{
						"characters": "!opaque"
					},
					"BwAAALEwAAAAAAAAsjAAAAAAAAAAAAAAsjAAAAAAAACzMAAAAAAAAAAAAACzMAAAAAAAALQwAAAAAAAAAAAAALQwAAAAAAAAtTAAAAAAAAAAAAAAtTAAAAAAAAC2MAAAAAAAAAAAAAC2MAAAAAAAALcwAAAAAAAAAAAAALcwAAAAAAAAuDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsTAAAAAAAACxMAAAAAAAAAAAAAAAAPC/"
				],
				[
					723,
					1,
					"insert",
					{
						"characters": "opaque="
					},
					"BwAAALowAAAAAAAAuzAAAAAAAAAAAAAAuzAAAAAAAAC8MAAAAAAAAAAAAAC8MAAAAAAAAL0wAAAAAAAAAAAAAL0wAAAAAAAAvjAAAAAAAAAAAAAAvjAAAAAAAAC/MAAAAAAAAAAAAAC/MAAAAAAAAMAwAAAAAAAAAAAAAMAwAAAAAAAAwTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAujAAAAAAAAC6MAAAAAAAAAAAAAAAAPC/"
				],
				[
					725,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANAwAAAAAAAA0TAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0DAAAAAAAADQMAAAAAAAAP///////+9/"
				],
				[
					727,
					1,
					"left_delete",
					null,
					"AQAAAKowAAAAAAAAqjAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAqzAAAAAAAACrMAAAAAAAAAAAAAAAIHdA"
				],
				[
					736,
					3,
					"right_delete",
					null,
					"AwAAAAIzAAAAAAAAAjMAAAAAAAAHAAAAY2xvc3VyZQIzAAAAAAAAAjMAAAAAAAABAAAALQIzAAAAAAAAAjMAAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAAAjMAAAAAAAAJMwAAAAAAAAAAAAAAAPC/"
				],
				[
					739,
					9,
					"left_delete",
					null,
					"CQAAABYzAAAAAAAAFjMAAAAAAAABAAAAPhUzAAAAAAAAFTMAAAAAAAABAAAALRQzAAAAAAAAFDMAAAAAAAABAAAAZRMzAAAAAAAAEzMAAAAAAAABAAAAchIzAAAAAAAAEjMAAAAAAAABAAAAdREzAAAAAAAAETMAAAAAAAABAAAAcxAzAAAAAAAAEDMAAAAAAAABAAAAbw8zAAAAAAAADzMAAAAAAAABAAAAbA4zAAAAAAAADjMAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAFzMAAAAAAAAXMwAAAAAAAAAAAAAAAPC/"
				],
				[
					742,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHZgAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC1jbGllbnQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCiNpbmNsdWRlICJtaW5uZXQtcmVzcG9uc2UuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yaW5nYnVmZmVyLmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGVycm5vLmg+CiNpbmNsdWRlIDxzdHJpbmcuaD4KI2luY2x1ZGUgPGN0eXBlLmg+CiNpbmNsdWRlIDxzeXMvdGltZS5oPgoKLyojaWZkZWYgX1dJTjMyCiNpbmNsdWRlICJwb2xsLmgiCiNlbmRpZiovCgojaWZuZGVmIFBPTExJTgojZGVmaW5lIFBPTExJTiAxCiNlbmRpZgojaWZuZGVmIFBPTExPVVQKI2RlZmluZSBQT0xMT1VUIDQKI2VuZGlmCiNpZm5kZWYgUE9MTEVSUgojZGVmaW5lIFBPTExFUlIgOAojZW5kaWYKI2lmbmRlZiBQT0xMSFVQCiNkZWZpbmUgUE9MTEhVUCAxNgojZW5kaWYKLyoKI2lmZGVmIEpTX1NIQVJFRF9MSUJSQVJZCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGUKI2Vsc2UKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZV9taW5uZXQKI2VuZGlmCiovCiNkZWZpbmUgUElPIChQT0xMSU4gfCBQT0xMT1VUIHwgUE9MTEVSUikKCnN0cnVjdCBoYW5kbGVyX2Nsb3N1cmUgewogIEpTQ29udGV4dCogY3R4OwogIHN0cnVjdCBsd3MqIGx3c2k7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7Cn07CgpKU1ZhbHVlIG1pbm5ldF9mZXRjaChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0Kik7CgovLyBUSFJFQURfTE9DQUwgc3RydWN0IGx3c19jb250ZXh0KiBtaW5uZXRfbHdzX2NvbnRleHQgPSAwOwoKc3RhdGljIFRIUkVBRF9MT0NBTCBKU1ZhbHVlIG1pbm5ldF9sb2dfY2IsIG1pbm5ldF9sb2dfdGhpczsKVEhSRUFEX0xPQ0FMIGludDMyX3QgbWlubmV0X2xvZ19sZXZlbCA9IDA7ClRIUkVBRF9MT0NBTCBKU0NvbnRleHQqIG1pbm5ldF9sb2dfY3R4ID0gMDsKVEhSRUFEX0xPQ0FMIHN0cnVjdCBsaXN0X2hlYWQgbWlubmV0X3NvY2tldHMgPSB7MCwgMH07CnN0YXRpYyBUSFJFQURfTE9DQUwgdWludDMyX3Qgc2Vzc2lvbl9zZXJpYWwgPSAwOwovLyBUSFJFQURfTE9DQUwgQk9PTCBtaW5uZXRfZXhjZXB0aW9uID0gRkFMU0U7CgppbnQKc29ja2V0X2dldGVycm9yKGludCBmZCkgewogIGludCBlOwogIHNvY2tsZW5fdCBzbCA9IHNpemVvZihlKTsKCiAgaWYoIWdldHNvY2tvcHQoZmQsIFNPTF9TT0NLRVQsIFNPX0VSUk9SLCAmZSwgJnNsKSkgewogICAgc2V0c29ja29wdChmZCwgU09MX1NPQ0tFVCwgU09fRVJST1IsICZlLCBzbCk7CiAgICByZXR1cm4gZTsKICB9CgogIHJldHVybiAtMTsKfQoKdm9pZApzZXNzaW9uX3plcm8oTWlubmV0U2Vzc2lvbiogc2Vzc2lvbikgewogIG1lbXNldChzZXNzaW9uLCAwLCBzaXplb2YoTWlubmV0U2Vzc2lvbikpOwogIHNlc3Npb24tPnNlcmlhbCA9IC0xOwogIHNlc3Npb24tPndzX29iaiA9IEpTX05VTEw7CiAgc2Vzc2lvbi0+cmVxX29iaiA9IEpTX05VTEw7CiAgc2Vzc2lvbi0+cmVzcF9vYmogPSBKU19OVUxMOwogIHNlc3Npb24tPmdlbmVyYXRvciA9IEpTX05VTEw7CiAgc2Vzc2lvbi0+bmV4dCA9IEpTX05VTEw7CgogIHNlc3Npb24tPnNlcmlhbCA9ICsrc2Vzc2lvbl9zZXJpYWw7CgogIC8vIGxpc3RfYWRkKCZzZXNzaW9uLT5saW5rLCAmbWlubmV0X3Nlc3Npb25zKTsKCiAgLy8gcHJpbnRmKCIlcyAjJWkgJXBcbiIsIF9fZnVuY19fLCBzZXNzaW9uLT5zZXJpYWwsIHNlc3Npb24pOwp9Cgp2b2lkCnNlc3Npb25fY2xlYXIoTWlubmV0U2Vzc2lvbiogc2Vzc2lvbiwgSlNDb250ZXh0KiBjdHgpIHsKICAvLyBsaXN0X2RlbCgmc2Vzc2lvbi0+bGluayk7CgogIEpTX0ZyZWVWYWx1ZShjdHgsIHNlc3Npb24tPndzX29iaik7CiAgSlNfRnJlZVZhbHVlKGN0eCwgc2Vzc2lvbi0+cmVxX29iaik7CiAgSlNfRnJlZVZhbHVlKGN0eCwgc2Vzc2lvbi0+cmVzcF9vYmopOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHNlc3Npb24tPmdlbmVyYXRvcik7CiAgSlNfRnJlZVZhbHVlKGN0eCwgc2Vzc2lvbi0+bmV4dCk7CgogIGJ1ZmZlcl9mcmVlKCZzZXNzaW9uLT5zZW5kX2J1ZiwgSlNfR2V0UnVudGltZShjdHgpKTsKCiAgLy8gcHJpbnRmKCIlcyAjJWkgJXBcbiIsIF9fZnVuY19fLCBzZXNzaW9uLT5zZXJpYWwsIHNlc3Npb24pOwp9CgpKU1ZhbHVlCnNlc3Npb25fb2JqZWN0KHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlLCBKU0NvbnRleHQqIGN0eCkgewogIEpTVmFsdWUgcmV0OwogIHJldCA9IEpTX05ld0FycmF5KGN0eCk7CgogIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgcmV0LCAwLCBvcGFxdWUtPnNlcmlhbCA/IEpTX05ld0ludDMyKGN0eCwgb3BhcXVlLT5zZXJpYWwpIDogSlNfTlVMTCk7CgogIGlmKG9wYXF1ZS0+c2VzcykgewogICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCByZXQsIDEsIEpTX0R1cFZhbHVlKGN0eCwgb3BhcXVlLT5zZXNzLT53c19vYmopKTsKICAgIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgcmV0LCAyLCBKU19EdXBWYWx1ZShjdHgsIG9wYXF1ZS0+c2Vzcy0+cmVxX29iaikpOwogICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCByZXQsIDMsIEpTX0R1cFZhbHVlKGN0eCwgb3BhcXVlLT5zZXNzLT5yZXNwX29iaikpOwogIH0KICByZXR1cm4gcmV0Owp9CgpCT09MCmNvbnRleHRfZXhjZXB0aW9uKE1pbm5ldENvbnRleHQqIGNvbnRleHQsIEpTVmFsdWUgcmV0dmFsKSB7CiAgaWYoSlNfSXNFeGNlcHRpb24ocmV0dmFsKSkgewogICAgY29udGV4dC0+ZXhjZXB0aW9uID0gVFJVRTsKICAgIEpTVmFsdWUgZXhjZXB0aW9uID0gSlNfR2V0RXhjZXB0aW9uKGNvbnRleHQtPmpzKTsKICAgIEpTVmFsdWUgc3RhY2sgPSBKU19HZXRQcm9wZXJ0eVN0cihjb250ZXh0LT5qcywgZXhjZXB0aW9uLCAic3RhY2siKTsKICAgIGNvbnN0IGNoYXIqIGVyciA9IEpTX1RvQ1N0cmluZyhjb250ZXh0LT5qcywgZXhjZXB0aW9uKTsKICAgIGNvbnN0IGNoYXIqIHN0ayA9IEpTX1RvQ1N0cmluZyhjb250ZXh0LT5qcywgc3RhY2spOwogICAgLy8gcHJpbnRmKCJHb3QgZXhjZXB0aW9uOiAlc1xuJXNcbiIsIGVyciwgc3RrKTsKICAgIEpTX0ZyZWVDU3RyaW5nKGNvbnRleHQtPmpzLCBlcnIpOwogICAgSlNfRnJlZUNTdHJpbmcoY29udGV4dC0+anMsIHN0ayk7CiAgICBKU19GcmVlVmFsdWUoY29udGV4dC0+anMsIHN0YWNrKTsKICAgIEpTX1Rocm93KGNvbnRleHQtPmpzLCBleGNlcHRpb24pOwogIH0KCiAgcmV0dXJuIGNvbnRleHQtPmV4Y2VwdGlvbjsKfQoKdm9pZApjb250ZXh0X2NsZWFyKE1pbm5ldENvbnRleHQqIGNvbnRleHQpIHsKICBKU0NvbnRleHQqIGN0eCA9IGNvbnRleHQtPmpzOwoKICBsd3NfY29udGV4dF9kZXN0cm95KGNvbnRleHQtPmx3cyk7CgogIEpTX0ZyZWVWYWx1ZShjdHgsIGNvbnRleHQtPmNydCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgY29udGV4dC0+a2V5KTsKICBKU19GcmVlVmFsdWUoY3R4LCBjb250ZXh0LT5jYSk7CgogIEpTX0ZyZWVWYWx1ZShjdHgsIGNvbnRleHQtPmVycm9yKTsKfQoKTWlubmV0Q2xvc3VyZSoKY2xvc3VyZV9uZXcoSlNDb250ZXh0KiBjdHgpIHsKICBNaW5uZXRDbG9zdXJlKiBjbG9zdXJlOwoKICBpZigoY2xvc3VyZSA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2YoTWlubmV0Q2xvc3VyZSkpKSkKICAgIGNsb3N1cmUtPnJlZl9jb3VudCA9IDE7CgogIHJldHVybiBjbG9zdXJlOwp9CgpNaW5uZXRDbG9zdXJlKgpjbG9zdXJlX2R1cChNaW5uZXRDbG9zdXJlKiBjKSB7CiAgKytjLT5yZWZfY291bnQ7CiAgcmV0dXJuIGM7Cn0KCnZvaWQKY2xvc3VyZV9mcmVlKHZvaWQqIHB0cikgewogIE1pbm5ldENsb3N1cmUqIGNsb3N1cmUgPSBwdHI7CgogIGlmKC0tY2xvc3VyZS0+cmVmX2NvdW50ID09IDApIHsKICAgIGlmKGNsb3N1cmUtPnNlcnZlcikgewogICAgICBKU0NvbnRleHQqIGN0eCA9IGNsb3N1cmUtPmNvbnRleHQtPmpzOwogICAgICAvLyBwcmludGYoIiVzIHNlcnZlcj0lcFxuIiwgX19mdW5jX18sIGNsb3N1cmUtPnNlcnZlcik7CiAgICAgIGlmKGNsb3N1cmUtPmZyZWVfZnVuYykKICAgICAgICBjbG9zdXJlLT5mcmVlX2Z1bmMoY2xvc3VyZS0+Y29udGV4dCk7CgogICAgICBqc19mcmVlKGN0eCwgY2xvc3VyZSk7CiAgICB9CiAgfQp9CgpzdGF0aWMgdm9pZApsd3NfbG9nX2NhbGxiYWNrKGludCBsZXZlbCwgY29uc3QgY2hhciogbGluZSkgewogIGlmKG1pbm5ldF9sb2dfY3R4KSB7CiAgICBpZihKU19Jc0Z1bmN0aW9uKG1pbm5ldF9sb2dfY3R4LCBtaW5uZXRfbG9nX2NiKSkgewogICAgICBzaXplX3QgbiA9IDAsIGxlbiA9IHN0cmxlbihsaW5lKTsKCiAgICAgIGlmKGxlbiA+IDAgJiYgbGluZVswXSA9PSAnWycpIHsKICAgICAgICBpZigobiA9IGJ5dGVfY2hyKGxpbmUsIGxlbiwgJ10nKSkgPCBsZW4pCiAgICAgICAgICBuKys7CiAgICAgICAgd2hpbGUobiA8IGxlbiAmJiBpc3NwYWNlKGxpbmVbbl0pKSBuKys7CiAgICAgICAgaWYobiArIDEgPCBsZW4gJiYgbGluZVtuICsgMV0gPT0gJzonKQogICAgICAgICAgbiArPSAyOwogICAgICAgIHdoaWxlKG4gPCBsZW4gJiYgKGlzc3BhY2UobGluZVtuXSkgfHwgbGluZVtuXSA9PSAnLScpKSBuKys7CiAgICAgIH0KICAgICAgaWYobGVuID4gMCAmJiBsaW5lW2xlbiAtIDFdID09ICdcbicpCiAgICAgICAgbGVuLS07CgogICAgICBKU1ZhbHVlQ29uc3QgYXJndlsyXSA9IHsKICAgICAgICAgIEpTX05ld0ludDMyKG1pbm5ldF9sb2dfY3R4LCBsZXZlbCksCiAgICAgICAgICBKU19OZXdTdHJpbmdMZW4obWlubmV0X2xvZ19jdHgsIGxpbmUgKyBuLCBsZW4gLSBuKSwKICAgICAgfTsKICAgICAgSlNWYWx1ZSByZXQgPSBKU19DYWxsKG1pbm5ldF9sb2dfY3R4LCBtaW5uZXRfbG9nX2NiLCBtaW5uZXRfbG9nX3RoaXMsIDIsIGFyZ3YpOwoKICAgICAgaWYoSlNfSXNFeGNlcHRpb24ocmV0KSkgewogICAgICAgIEpTVmFsdWUgZXhjZXB0aW9uID0gSlNfR2V0RXhjZXB0aW9uKG1pbm5ldF9sb2dfY3R4KTsKICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X2xvZ19jdHgsIGV4Y2VwdGlvbik7CiAgICAgIH0KCiAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfbG9nX2N0eCwgYXJndlswXSk7CiAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfbG9nX2N0eCwgYXJndlsxXSk7CiAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfbG9nX2N0eCwgcmV0KTsKICAgIH0gZWxzZSB7CiAgICAgIGpzX2NvbnNvbGVfbG9nKG1pbm5ldF9sb2dfY3R4LCAmbWlubmV0X2xvZ190aGlzLCAmbWlubmV0X2xvZ19jYik7CiAgICB9CiAgfQp9CgppbnQKbWlubmV0X2x3c191bmhhbmRsZWQoY29uc3QgY2hhciogaGFuZGxlciwgaW50IHJlYXNvbikgewogIGx3c2xfd2FybigiVW5oYW5kbGVkIFx4MWJbMTszMW0lc1x4MWJbMG0gZXZlbnQ6ICVpICVzXG4iLCBoYW5kbGVyLCByZWFzb24sIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikpOwogIGFzc2VydCgwKTsKICByZXR1cm4gLTE7Cn0KCi8qc3RhdGljIEpTVmFsdWUKZ2V0X2xvZyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsKSB7CiAgcmV0dXJuIEpTX0R1cFZhbHVlKGN0eCwgbWlubmV0X2xvZ19jYik7Cn0qLwoKc3RhdGljIEpTVmFsdWUKc2V0X2xvZyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIEpTVmFsdWVDb25zdCB0aGlzT2JqKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19WQUxVRV9HRVRfVEFHKG1pbm5ldF9sb2dfY2IpID09IDAgPyBKU19VTkRFRklORUQgOiBtaW5uZXRfbG9nX2NiOwoKICBtaW5uZXRfbG9nX2N0eCA9IGN0eDsKICBtaW5uZXRfbG9nX2NiID0gSlNfRHVwVmFsdWUoY3R4LCB2YWx1ZSk7CgogIGlmKCFKU19Jc1VuZGVmaW5lZChtaW5uZXRfbG9nX3RoaXMpICYmICFKU19Jc051bGwobWlubmV0X2xvZ190aGlzKSAmJiBKU19WQUxVRV9HRVRfVEFHKG1pbm5ldF9sb2dfdGhpcykgIT0gMCkKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIG1pbm5ldF9sb2dfdGhpcyk7CgogIG1pbm5ldF9sb2dfdGhpcyA9IEpTX0R1cFZhbHVlKGN0eCwgdGhpc09iaik7CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9zZXRfbG9nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSByZXQ7CiAgaWYoYXJnYyA+PSAxICYmIEpTX0lzTnVtYmVyKGFyZ3ZbMF0pKSB7CiAgICBKU19Ub0ludDMyKGN0eCwgJm1pbm5ldF9sb2dfbGV2ZWwsIGFyZ3ZbMF0pOwogICAgYXJnYy0tOwogICAgYXJndisrOwogIH0KCiAgcmV0ID0gc2V0X2xvZyhjdHgsIHRoaXNfdmFsLCBhcmd2WzBdLCBhcmdjID4gMSA/IGFyZ3ZbMV0gOiBKU19OVUxMKTsKICBsd3Nfc2V0X2xvZ19sZXZlbCgoKHVuc2lnbmVkKW1pbm5ldF9sb2dfbGV2ZWwgJiAoKDF1IDw8IExMTF9DT1VOVCkgLSAxKSksIGx3c19sb2dfY2FsbGJhY2spOwogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKaGVhZGVyc19vYmplY3QoSlNDb250ZXh0KiBjdHgsIGNvbnN0IHZvaWQqIHN0YXJ0LCBjb25zdCB2b2lkKiBlKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19OZXdPYmplY3QoY3R4KTsKICBzaXplX3QgbGVuLCBuYW1lbGVuLCBuOwogIGNvbnN0IHVpbnQ4X3QgKngsICplbmQ7CiAgZm9yKHggPSBzdGFydCwgZW5kID0gZTsgeCA8IGVuZDsgeCArPSBsZW4gKyAxKSB7CiAgICBsZW4gPSBieXRlX2NocnMoeCwgZW5kIC0geCwgIlxyXG4iLCAyKTsKICAgIGlmKGxlbiA+IChuID0gYnl0ZV9jaHIoeCwgbGVuLCAnOicpKSkgewogICAgICBjb25zdCBjaGFyKiBwcm9wID0gKG5hbWVsZW4gPSBuKSA/IGpzX3N0cm5kdXAoY3R4LCAoY29uc3QgY2hhciopeCwgbmFtZWxlbikgOiAwOwogICAgICBpZih4W25dID09ICc6JykKICAgICAgICBuKys7CiAgICAgIGlmKGlzc3BhY2UoeFtuXSkpCiAgICAgICAgbisrOwogICAgICBpZihwcm9wKSB7CiAgICAgICAgSlNfRGVmaW5lUHJvcGVydHlWYWx1ZVN0cihjdHgsIHJldCwgcHJvcCwgSlNfTmV3U3RyaW5nTGVuKGN0eCwgKGNvbnN0IGNoYXIqKSZ4W25dLCBsZW4gLSBuKSwgSlNfUFJPUF9FTlVNRVJBQkxFKTsKICAgICAgICBqc19mcmVlKGN0eCwgKHZvaWQqKXByb3ApOwogICAgICB9CiAgICB9CiAgfQogIHJldHVybiByZXQ7Cn0KCmNoYXIqCmhlYWRlcnNfYXRvbShKU0F0b20gYXRvbSwgSlNDb250ZXh0KiBjdHgpIHsKICBjaGFyKiByZXQ7CiAgY29uc3QgY2hhciogc3RyID0gSlNfQXRvbVRvQ1N0cmluZyhjdHgsIGF0b20pOwogIHNpemVfdCBsZW4gPSBzdHJsZW4oc3RyKTsKCiAgaWYoKHJldCA9IGpzX21hbGxvYyhjdHgsIGxlbiArIDIpKSkgewogICAgc3RyY3B5KHJldCwgc3RyKTsKICAgIHJldFtsZW5dID0gJzonOwogICAgcmV0W2xlbiArIDFdID0gJ1wwJzsKICB9CiAgcmV0dXJuIHJldDsKfQoKaW50CmhlYWRlcnNfYWRkKE1pbm5ldEJ1ZmZlciogYnVmZmVyLCBzdHJ1Y3QgbHdzKiB3c2ksIEpTVmFsdWVDb25zdCBvYmosIEpTQ29udGV4dCogY3R4KSB7CiAgSlNQcm9wZXJ0eUVudW0qIHRhYjsKICB1aW50MzJfdCB0YWJfbGVuLCBpOwoKICBpZihKU19HZXRPd25Qcm9wZXJ0eU5hbWVzKGN0eCwgJnRhYiwgJnRhYl9sZW4sIG9iaiwgSlNfR1BOX0VOVU1fT05MWSB8IEpTX0dQTl9TVFJJTkdfTUFTSykpCiAgICByZXR1cm4gMDsKCiAgZm9yKGkgPSAwOyBpIDwgdGFiX2xlbjsgaSsrKSB7CiAgICBKU1ZhbHVlIHZhbHVlID0gSlNfR2V0UHJvcGVydHkoY3R4LCBvYmosIHRhYltpXS5hdG9tKTsKICAgIHNpemVfdCBsZW47CiAgICB2b2lkKiBwcm9wOwogICAgY29uc3Qgdm9pZCogc3RyOwogICAgaW50IHJldDsKCiAgICBzdHIgPSBKU19Ub0NTdHJpbmdMZW4oY3R4LCAmbGVuLCB2YWx1ZSk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CgogICAgcHJvcCA9IGhlYWRlcnNfYXRvbSh0YWJbaV0uYXRvbSwgY3R4KTsKCiAgICByZXQgPSBsd3NfYWRkX2h0dHBfaGVhZGVyX2J5X25hbWUod3NpLCBwcm9wLCBzdHIsIGxlbiwgJmJ1ZmZlci0+d3JpdGUsIGJ1ZmZlci0+ZW5kKTsKCiAgICBqc19mcmVlKGN0eCwgcHJvcCk7CiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHN0cik7CgogICAgaWYocmV0KQogICAgICByZXR1cm4gLTE7CiAgfQoKICBqc19mcmVlKGN0eCwgdGFiKTsKICByZXR1cm4gMDsKfQoKaW50CmhlYWRlcnNfZnJvbW9iaihNaW5uZXRCdWZmZXIqIGJ1ZmZlciwgSlNWYWx1ZUNvbnN0IG9iaiwgSlNDb250ZXh0KiBjdHgpIHsKICBKU1Byb3BlcnR5RW51bSogdGFiOwogIHVpbnQzMl90IHRhYl9sZW4sIGk7CgogIGlmKEpTX0dldE93blByb3BlcnR5TmFtZXMoY3R4LCAmdGFiLCAmdGFiX2xlbiwgb2JqLCBKU19HUE5fRU5VTV9PTkxZIHwgSlNfR1BOX1NUUklOR19NQVNLKSkKICAgIHJldHVybiAwOwoKICBmb3IoaSA9IDA7IGkgPCB0YWJfbGVuOyBpKyspIHsKICAgIEpTVmFsdWUganN2YWwgPSBKU19HZXRQcm9wZXJ0eShjdHgsIG9iaiwgdGFiW2ldLmF0b20pOwogICAgc2l6ZV90IHZhbHVlX2xlbiwgcHJvcF9sZW47CiAgICBjb25zdCBjaGFyICp2YWx1ZSwgKnByb3A7CgogICAgdmFsdWUgPSBKU19Ub0NTdHJpbmdMZW4oY3R4LCAmdmFsdWVfbGVuLCBqc3ZhbCk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCBqc3ZhbCk7CgogICAgcHJvcCA9IEpTX0F0b21Ub0NTdHJpbmcoY3R4LCB0YWJbaV0uYXRvbSk7CiAgICBwcm9wX2xlbiA9IHN0cmxlbihwcm9wKTsKCiAgICBidWZmZXJfZ3JvdyhidWZmZXIsIHByb3BfbGVuICsgMiArIHZhbHVlX2xlbiArIDIsIGN0eCk7CgogICAgYnVmZmVyX3dyaXRlKGJ1ZmZlciwgcHJvcCwgcHJvcF9sZW4pOwogICAgYnVmZmVyX3dyaXRlKGJ1ZmZlciwgIjogIiwgMik7CiAgICBidWZmZXJfd3JpdGUoYnVmZmVyLCB2YWx1ZSwgdmFsdWVfbGVuKTsKICAgIGJ1ZmZlcl93cml0ZShidWZmZXIsICJcclxuIiwgMik7CgogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBwcm9wKTsKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgdmFsdWUpOwogIH0KCiAganNfZnJlZShjdHgsIHRhYik7CiAgcmV0dXJuIGk7Cn0KCnNzaXplX3QKaGVhZGVyc19zZXQoSlNDb250ZXh0KiBjdHgsIE1pbm5ldEJ1ZmZlciogYnVmZmVyLCBjb25zdCBjaGFyKiBuYW1lLCBjb25zdCBjaGFyKiB2YWx1ZSkgewogIHNpemVfdCBuYW1lbGVuID0gc3RybGVuKG5hbWUpLCB2YWx1ZWxlbiA9IHN0cmxlbih2YWx1ZSk7CiAgc2l6ZV90IGxlbiA9IG5hbWVsZW4gKyAyICsgdmFsdWVsZW4gKyAyOwoKICBidWZmZXJfZ3JvdyhidWZmZXIsIGxlbiwgY3R4KTsKICBidWZmZXJfd3JpdGUoYnVmZmVyLCBuYW1lLCBuYW1lbGVuKTsKICBidWZmZXJfd3JpdGUoYnVmZmVyLCAiOiAiLCAyKTsKICBidWZmZXJfd3JpdGUoYnVmZmVyLCB2YWx1ZSwgdmFsdWVsZW4pOwogIGJ1ZmZlcl93cml0ZShidWZmZXIsICJcclxuIiwgMik7CgogIHJldHVybiBsZW47Cn0KCmludApoZWFkZXJzX2dldChKU0NvbnRleHQqIGN0eCwgTWlubmV0QnVmZmVyKiBoZWFkZXJzLCBzdHJ1Y3QgbHdzKiB3c2kpIHsKICBpbnQgdG9rLCBsZW4sIGNvdW50ID0gMDsKCiAgaWYoIWhlYWRlcnMtPnN0YXJ0KQogICAgYnVmZmVyX2FsbG9jKGhlYWRlcnMsIDEwMjQsIGN0eCk7CgogIGZvcih0b2sgPSBXU0lfVE9LRU5fSE9TVDsgdG9rIDwgV1NJX1RPS0VOX0NPVU5UOyB0b2srKykgewogICAgaWYodG9rID09IFdTSV9UT0tFTl9IVFRQIHx8IHRvayA9PSBXU0lfVE9LRU5fSFRUUF9VUklfQVJHUykKICAgICAgY29udGludWU7CgogICAgaWYoKGxlbiA9IGx3c19oZHJfdG90YWxfbGVuZ3RoKHdzaSwgdG9rKSkgPiAwKSB7CiAgICAgIGNoYXIgaGRyW2xlbiArIDFdOwogICAgICBjb25zdCBjaGFyKiBuYW1lOwoKICAgICAgaWYoKG5hbWUgPSAoY29uc3QgY2hhciopbHdzX3Rva2VuX3RvX3N0cmluZyh0b2spKSkgewogICAgICAgIGludCBuYW1lbGVuID0gYnl0ZV9jaHIobmFtZSwgc3RybGVuKG5hbWUpLCAnOicpOwogICAgICAgIGx3c19oZHJfY29weSh3c2ksIGhkciwgbGVuICsgMSwgdG9rKTsKICAgICAgICBoZHJbbGVuXSA9ICdcMCc7CgogICAgICAgIC8vIHByaW50ZigiaGVhZGVycyAlaSAlLipzICclcydcbiIsIHRvaywgbmFtZWxlbiwgbmFtZSwgaGRyKTsKCiAgICAgICAgaWYoIWhlYWRlcnMtPmFsbG9jKQogICAgICAgICAgYnVmZmVyX2FsbG9jKGhlYWRlcnMsIDEwMjQsIGN0eCk7CgogICAgICAgIHdoaWxlKCFidWZmZXJfcHJpbnRmKGhlYWRlcnMsICIlLipzOiAlc1xuIiwgbmFtZWxlbiwgbmFtZSwgaGRyKSkgeyBidWZmZXJfZ3JvdyhoZWFkZXJzLCAxMDI0LCBjdHgpOyB9CiAgICAgICAgKytjb3VudDsKICAgICAgfQogICAgfQogIH0KICByZXR1cm4gY291bnQ7Cn0KCmludApmZF9oYW5kbGVyKHN0cnVjdCBsd3MqIHdzaSwgTWlubmV0Q2FsbGJhY2sqIGNiLCBzdHJ1Y3QgbHdzX3BvbGxhcmdzIGFyZ3MpIHsKICBKU1ZhbHVlIGFyZ3ZbM10gPSB7SlNfTmV3SW50MzIoY2ItPmN0eCwgYXJncy5mZCl9OwoKICBtaW5uZXRfaGFuZGxlcnMoY2ItPmN0eCwgd3NpLCBhcmdzLCAmYXJndlsxXSk7CiAgbWlubmV0X2VtaXQoY2IsIDMsIGFyZ3YpOwoKICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgYXJndlswXSk7CiAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIGFyZ3ZbMV0pOwogIEpTX0ZyZWVWYWx1ZShjYi0+Y3R4LCBhcmd2WzJdKTsKICByZXR1cm4gMDsKfQoKaW50CmZkX2NhbGxiYWNrKHN0cnVjdCBsd3MqIHdzaSwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucyByZWFzb24sIE1pbm5ldENhbGxiYWNrKiBjYiwgc3RydWN0IGx3c19wb2xsYXJncyogYXJncykgewoKICBzd2l0Y2gocmVhc29uKSB7CiAgICBjYXNlIExXU19DQUxMQkFDS19MT0NLX1BPTEw6CiAgICBjYXNlIExXU19DQUxMQkFDS19VTkxPQ0tfUE9MTDogcmV0dXJuIDA7CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfQUREX1BPTExfRkQ6IHsKCiAgICAgIGlmKGNiLT5jdHgpIHsKICAgICAgICBmZF9oYW5kbGVyKHdzaSwgY2IsICphcmdzKTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0RFTF9QT0xMX0ZEOiB7CgogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgZmRfaGFuZGxlcih3c2ksIGNiLCAqYXJncyk7CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19DSEFOR0VfTU9ERV9QT0xMX0ZEOiB7CiAgICAgIGlmKGNiLT5jdHgpIHsKICAgICAgICBpZihhcmdzLT5ldmVudHMgIT0gYXJncy0+cHJldl9ldmVudHMpIHsKICAgICAgICAgIGZkX2hhbmRsZXIod3NpLCBjYiwgKmFyZ3MpOwogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KCiAgICBkZWZhdWx0OiB7CiAgICAgIHJldHVybiAtMTsKICAgIH0KICB9Cn0KCnN0YXRpYyBjb25zdCBjaGFyKgppb19ldmVudHMoaW50IGV2ZW50cykgewogIHN3aXRjaChldmVudHMpIHsKICAgIGNhc2UgUE9MTE9VVCB8IFBPTExIVVA6IHJldHVybiAiT1VUfEhVUCI7CiAgICBjYXNlIFBPTExJTiB8IFBPTExPVVQgfCBQT0xMSFVQIHwgUE9MTEVSUjogcmV0dXJuICJJTnxPVVR8SFVQfEVSUiI7CiAgICBjYXNlIFBPTExPVVQgfCBQT0xMSFVQIHwgUE9MTEVSUjogcmV0dXJuICJPVVR8SFVQfEVSUiI7CiAgICBjYXNlIFBPTExJTiB8IFBPTExPVVQ6IHJldHVybiAiSU58T1VUIjsKICAgIGNhc2UgUE9MTElOOiByZXR1cm4gIklOIjsKICAgIGNhc2UgUE9MTE9VVDogcmV0dXJuICJPVVQiOwogIH0KICBhc3NlcnQoIWV2ZW50cyk7CiAgcmV0dXJuICIiOwp9CgovKnN0YXRpYyBpbnQKaW9fcGFyc2VfZXZlbnRzKGNvbnN0IGNoYXIqIHN0cikgewogIGludCBldmVudHMgPSAwOwoKICBpZihzdHJzdHIoc3RyLCAiSU4iKSkKICAgIGV2ZW50cyB8PSBQT0xMSU47CiAgaWYoc3Ryc3RyKHN0ciwgIk9VVCIpKQogICAgZXZlbnRzIHw9IFBPTExPVVQ7CiAgaWYoc3Ryc3RyKHN0ciwgIkhVUCIpKQogICAgZXZlbnRzIHw9IFBPTExIVVA7CiAgaWYoc3Ryc3RyKHN0ciwgIkVSUiIpKQogICAgZXZlbnRzIHw9IFBPTExFUlI7CiAgcmV0dXJuIGV2ZW50czsKfSovCgpzdGF0aWMgSlNWYWx1ZQptaW5uZXRfaW9faGFuZGxlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljLCB2b2lkKiBwdHIpIHsKICBzdHJ1Y3QgaGFuZGxlcl9jbG9zdXJlKiBjbG9zdXJlID0gcHRyOwogIHN0cnVjdCBwb2xsZmQqIHA7CiAgaW50MzJfdCB3cjsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YShjbG9zdXJlLT5sd3NpKTsKICBpZighb3BhcXVlKSBvcGFxdWU9Y2xvc3VyZS0+b3BhcXVlOwoKICBhc3NlcnQoY2xvc3VyZS0+b3BhcXVlKTsKICBwID0gJmNsb3N1cmUtPm9wYXF1ZS0+cG9sbDsKCiAgSlNfVG9JbnQzMihjdHgsICZ3ciwgYXJndlswXSk7CgogIHAtPnJldmVudHMgPSBtYWdpYyAmICh3ciA9PSBXUklURV9IQU5ETEVSID8gUE9MTE9VVCA6IFBPTExJTik7CgogIGlmKChwLT5yZXZlbnRzICYgUElPKSAhPSBtYWdpYykgewogICAgaWYocG9sbChwLCAxLCAwKSA8IDApCiAgICAgIGx3c2xfZXJyKCJwb2xsIGVycm9yOiAlc1xuIiwgc3RyZXJyb3IoZXJybm8pKTsKICB9CgogIGlmKHAtPnJldmVudHMgJiBQSU8pIHsKICAgIHN0cnVjdCBsd3NfcG9sbGZkIHggPSB7cC0+ZmQsIG1hZ2ljLCBwLT5yZXZlbnRzICYgUElPfTsKCiAgICBpZihwLT5yZXZlbnRzICYgKFBPTExFUlIgfCBQT0xMSFVQKSkKICAgICAgY2xvc3VyZS0+b3BhcXVlLT5lcnJvciA9IGVycm5vOwoKICAgIC8vIGVycm5vID0gMDsKICAgIC8vCiAgICBwcmludGYoIiVzOiBmZD0lZCByZXZlbnRzPSVzIHdzPSVwIG9wYXF1ZT0lcFxuIiwgX19mdW5jX18sIHguZmQsIGlvX2V2ZW50cyh4LnJldmVudHMpLCBvcGFxdWUtPndzLCBvcGFxdWUpOwoKICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgbHdzX3NlcnZpY2VfZmQobHdzX2dldF9jb250ZXh0KGNsb3N1cmUtPmx3c2kpLCAmeCkpOwogIH0KCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIHZvaWQKZnJlZV9oYW5kbGVyX2Nsb3N1cmUodm9pZCogcHRyKSB7CiAgc3RydWN0IGhhbmRsZXJfY2xvc3VyZSogY2xvc3VyZSA9IHB0cjsKICBKU0NvbnRleHQqIGN0eCA9IGNsb3N1cmUtPmN0eDsKICBqc19mcmVlKGN0eCwgY2xvc3VyZSk7Cn07CgpzdGF0aWMgSlNWYWx1ZQptYWtlX2hhbmRsZXIoSlNDb250ZXh0KiBjdHgsIGludCBmZCwgaW50IGV2ZW50cywgc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IGhhbmRsZXJfY2xvc3VyZSogY2xvc3VyZTsKCiAgaWYoIShjbG9zdXJlID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3QgaGFuZGxlcl9jbG9zdXJlKSkpKQogICAgcmV0dXJuIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgKmNsb3N1cmUgPSAoc3RydWN0IGhhbmRsZXJfY2xvc3VyZSl7Y3R4LCB3c2ksIGx3c19vcGFxdWUod3NpLCAwLCBjdHgpfTsKCiAgY2xvc3VyZS0+b3BhcXVlLT5wb2xsID0gKHN0cnVjdCBwb2xsZmQpe2ZkLCBldmVudHMsIDB9OwoKICByZXR1cm4gSlNfTmV3Q0Nsb3N1cmUoY3R4LCBtaW5uZXRfaW9faGFuZGxlciwgMSwgZXZlbnRzLCBjbG9zdXJlLCBmcmVlX2hhbmRsZXJfY2xvc3VyZSk7Cn0KCkpTVmFsdWUKbWlubmV0X2dldF9zZXNzaW9ucyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsKSB7CiAgc3RydWN0IGxpc3RfaGVhZCogZWw7CiAgSlNWYWx1ZSByZXQ7CiAgdWludDMyX3QgaSA9IDA7CgogIHJldCA9IEpTX05ld0FycmF5KGN0eCk7CgogIGxpc3RfZm9yX2VhY2goZWwsICZtaW5uZXRfc29ja2V0cykgewogICAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBzZXNzaW9uID0gbGlzdF9lbnRyeShlbCwgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhLCBsaW5rKTsKICAgIC8vIHByaW50ZigiJXMgQCV1ICMlaSAlcFxuIiwgX19mdW5jX18sIGksIHNlc3Npb24tPnNlcmlhbCwgc2Vzc2lvbik7CgogICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCByZXQsIGkrKywgc2Vzc2lvbl9vYmplY3Qoc2Vzc2lvbiwgY3R4KSk7CiAgfQogIHJldHVybiByZXQ7Cn0KCnZvaWQKbWlubmV0X2hhbmRsZXJzKEpTQ29udGV4dCogY3R4LCBzdHJ1Y3QgbHdzKiB3c2ksIHN0cnVjdCBsd3NfcG9sbGFyZ3MgYXJncywgSlNWYWx1ZSBvdXRbMl0pIHsKICBKU1ZhbHVlIGZ1bmM7CiAgaW50IGV2ZW50cyA9IGFyZ3MuZXZlbnRzICYgKFBPTExJTiB8IFBPTExPVVQpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSpvcGFxdWUgPWx3c19vcGFxdWUod3NpLCBjdHgpOwoKICBpZihldmVudHMpCiAgICBmdW5jID0gbWFrZV9oYW5kbGVyKGN0eCwgYXJncy5mZCwgZXZlbnRzLCB3c2kpOwoKICBvdXRbMF0gPSAoZXZlbnRzICYgUE9MTElOKSA/IGpzX2Z1bmN0aW9uX2JpbmRfMShjdHgsIGZ1bmMsIEpTX05ld0ludDMyKGN0eCwgUkVBRF9IQU5ETEVSKSkgOiBKU19OVUxMOwogIG91dFsxXSA9IChldmVudHMgJiBQT0xMT1VUKSA/IGpzX2Z1bmN0aW9uX2JpbmRfMShjdHgsIGZ1bmMsIEpTX05ld0ludDMyKGN0eCwgV1JJVEVfSEFORExFUikpIDogSlNfTlVMTDsKCiAgaWYoZXZlbnRzKQogICAgSlNfRnJlZVZhbHVlKGN0eCwgZnVuYyk7Cn0KCkpTVmFsdWUKbWlubmV0X2VtaXRfdGhpcyhjb25zdCBzdHJ1Y3Qgd3NfY2FsbGJhY2sqIGNiLCBKU1ZhbHVlQ29uc3QgdGhpc19vYmosIGludCBhcmdjLCBKU1ZhbHVlKiBhcmd2KSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKGNiLT5jdHgpIHsKICAgIHNpemVfdCBsZW47CiAgICBjb25zdCBjaGFyKiBzdHI7CiAgICBzdHIgPSBKU19Ub0NTdHJpbmdMZW4oY2ItPmN0eCwgJmxlbiwgY2ItPmZ1bmNfb2JqKTsKICAgIC8vIHByaW50ZigiZW1pdCAlcyBbJWRdIFwiJS4qc1wiXG4iLCBjYi0+bmFtZSwgYXJnYywgKGludCkoKGNvbnN0IGNoYXIqKW1lbWNocihzdHIsICd7JywgbGVuKSAtIHN0ciksIHN0cik7CiAgICBKU19GcmVlQ1N0cmluZyhjYi0+Y3R4LCBzdHIpOwoKICAgIHJldCA9IEpTX0NhbGwoY2ItPmN0eCwgY2ItPmZ1bmNfb2JqLCB0aGlzX29iaiwgYXJnYywgYXJndik7CiAgfQoKICAvKmlmKEpTX0lzRXhjZXB0aW9uKHJldCkpCiAgICBtaW5uZXRfZXhjZXB0aW9uID0gVFJVRTsgKi8KCiAgcmV0dXJuIHJldDsKfQoKSlNWYWx1ZQptaW5uZXRfZW1pdChjb25zdCBzdHJ1Y3Qgd3NfY2FsbGJhY2sqIGNiLCBpbnQgYXJnYywgSlNWYWx1ZSogYXJndikgewogIHJldHVybiBtaW5uZXRfZW1pdF90aGlzKGNiLCBjYi0+dGhpc19vYmogLyogPyAqY2ItPnRoaXNfb2JqIDogSlNfTlVMTCovLCBhcmdjLCBhcmd2KTsKfQoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF9sb2dsZXZlbHNbXSA9IHsKICAgIEpTX0lOREVYX1NUUklOR19ERUYoMSwgIkVSUiIpLAogICAgSlNfSU5ERVhfU1RSSU5HX0RFRigyLCAiV0FSTiIpLAogICAgSlNfSU5ERVhfU1RSSU5HX0RFRig0LCAiTk9USUNFIiksCiAgICBKU19JTkRFWF9TVFJJTkdfREVGKDgsICJJTkZPIiksCiAgICBKU19JTkRFWF9TVFJJTkdfREVGKDE2LCAiREVCVUciKSwKICAgIEpTX0lOREVYX1NUUklOR19ERUYoMzIsICJQQVJTRVIiKSwKICAgIEpTX0lOREVYX1NUUklOR19ERUYoNjQsICJIRUFERVIiKSwKICAgIEpTX0lOREVYX1NUUklOR19ERUYoMTI4LCAiRVhUIiksCiAgICBKU19JTkRFWF9TVFJJTkdfREVGKDI1NiwgIkNMSUVOVCIpLAogICAgSlNfSU5ERVhfU1RSSU5HX0RFRig1MTIsICJMQVRFTkNZIiksCiAgICBKU19JTkRFWF9TVFJJTkdfREVGKDEwMjQsICJVU0VSIiksCiAgICBKU19JTkRFWF9TVFJJTkdfREVGKDIwNDgsICJUSFJFQUQiKSwKICAgIEpTX0lOREVYX1NUUklOR19ERUYoNDA5NSwgIkFMTCIpLAp9OwoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF9mdW5jc1tdID0gewogICAgSlNfQ0ZVTkNfREVGKCJzZXJ2ZXIiLCAxLCBtaW5uZXRfc2VydmVyKSwKICAgIEpTX0NGVU5DX0RFRigiY2xpZW50IiwgMSwgbWlubmV0X2NsaWVudCksCiAgICBKU19DRlVOQ19ERUYoImZldGNoIiwgMSwgbWlubmV0X2ZldGNoKSwKICAgIEpTX0NGVU5DX1NQRUNJQUxfREVGKCJzb2NrZXQiLCAxLCBjb25zdHJ1Y3RvciwgbWlubmV0X3dzX2NvbnN0cnVjdG9yKSwKICAgIEpTX0NGVU5DX1NQRUNJQUxfREVGKCJ1cmwiLCAxLCBjb25zdHJ1Y3RvciwgbWlubmV0X3VybF9jb25zdHJ1Y3RvciksCiAgICAvLyBKU19DR0VUU0VUX0RFRigibG9nIiwgZ2V0X2xvZywgc2V0X2xvZyksCiAgICAvLyBKU19DR0VUU0VUX0RFRigic2Vzc2lvbnMiLCBtaW5uZXRfZ2V0X3Nlc3Npb25zLCAwKSwKICAgIEpTX0NGVU5DX0RFRigiZ2V0U2Vzc2lvbnMiLCAwLCBtaW5uZXRfZ2V0X3Nlc3Npb25zKSwKICAgIEpTX0NGVU5DX0RFRigic2V0TG9nIiwgMSwgbWlubmV0X3NldF9sb2cpLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIk1FVEhPRF9HRVQiLCBNRVRIT0RfR0VULCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJNRVRIT0RfUE9TVCIsIE1FVEhPRF9QT1NULCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJNRVRIT0RfT1BUSU9OUyIsIE1FVEhPRF9PUFRJT05TLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJNRVRIT0RfUFVUIiwgTUVUSE9EX1BVVCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTUVUSE9EX1BBVENIIiwgTUVUSE9EX1BBVENILCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJNRVRIT0RfREVMRVRFIiwgTUVUSE9EX0RFTEVURSwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTUVUSE9EX0NPTk5FQ1QiLCBNRVRIT0RfQ09OTkVDVCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTUVUSE9EX0hFQUQiLCBNRVRIT0RfSEVBRCwgMCksCgogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkxMTF9FUlIiLCBMTExfRVJSLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJMTExfV0FSTiIsIExMTF9XQVJOLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJMTExfTk9USUNFIiwgTExMX05PVElDRSwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTExMX0lORk8iLCBMTExfSU5GTywgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTExMX0RFQlVHIiwgTExMX0RFQlVHLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJMTExfUEFSU0VSIiwgTExMX1BBUlNFUiwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTExMX0hFQURFUiIsIExMTF9IRUFERVIsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkxMTF9FWFQiLCBMTExfRVhULCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJMTExfQ0xJRU5UIiwgTExMX0NMSUVOVCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTExMX0xBVEVOQ1kiLCBMTExfTEFURU5DWSwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTExMX1VTRVIiLCBMTExfVVNFUiwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTExMX1RIUkVBRCIsIExMTF9USFJFQUQsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIkxMTF9BTEwiLCB+KCh+MHUpIDw8IExMTF9DT1VOVCksIDApLAogICAgSlNfT0JKRUNUX0RFRigibG9nTGV2ZWxzIiwgbWlubmV0X2xvZ2xldmVscywgY291bnRvZihtaW5uZXRfbG9nbGV2ZWxzKSwgSlNfUFJPUF9DT05GSUdVUkFCTEUpLAp9OwoKdm9pZAp2YWx1ZV9kdW1wKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBuLCBKU1ZhbHVlQ29uc3QgY29uc3QqIHYpIHsKICBjb25zdCBjaGFyKiBzdHIgPSBKU19Ub0NTdHJpbmcoY3R4LCAqdik7CiAgbHdzbF91c2VyKCIlcyA9ICclcydcbiIsIG4sIHN0cik7CiAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzdHIpOwp9CgpzdGF0aWMgaW50CmpzX21pbm5ldF9pbml0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewogIC8qICBtaW5uZXRfbG9nX2NiID0gSlNfVU5ERUZJTkVEOwogICAgbWlubmV0X2xvZ190aGlzID0gSlNfVU5ERUZJTkVEOyovCgogIGluaXRfbGlzdF9oZWFkKCZtaW5uZXRfc29ja2V0cyk7CgogIEpTX1NldE1vZHVsZUV4cG9ydExpc3QoY3R4LCBtLCBtaW5uZXRfZnVuY3MsIGNvdW50b2YobWlubmV0X2Z1bmNzKSk7CgogIC8vIEFkZCBjbGFzcyBSZXNwb25zZQogIEpTX05ld0NsYXNzSUQoJm1pbm5ldF9yZXNwb25zZV9jbGFzc19pZCk7CiAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBtaW5uZXRfcmVzcG9uc2VfY2xhc3NfaWQsICZtaW5uZXRfcmVzcG9uc2VfY2xhc3MpOwoKICBtaW5uZXRfcmVzcG9uc2VfcHJvdG8gPSBKU19OZXdPYmplY3QoY3R4KTsKICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIG1pbm5ldF9yZXNwb25zZV9wcm90bywgbWlubmV0X3Jlc3BvbnNlX3Byb3RvX2Z1bmNzLCBtaW5uZXRfcmVzcG9uc2VfcHJvdG9fZnVuY3Nfc2l6ZSk7CiAgSlNfU2V0Q2xhc3NQcm90byhjdHgsIG1pbm5ldF9yZXNwb25zZV9jbGFzc19pZCwgbWlubmV0X3Jlc3BvbnNlX3Byb3RvKTsKCiAgbWlubmV0X3Jlc3BvbnNlX2N0b3IgPSBKU19OZXdDRnVuY3Rpb24yKGN0eCwgbWlubmV0X3Jlc3BvbnNlX2NvbnN0cnVjdG9yLCAiTWlubmV0UmVzcG9uc2UiLCAwLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CiAgSlNfU2V0Q29uc3RydWN0b3IoY3R4LCBtaW5uZXRfcmVzcG9uc2VfY3RvciwgbWlubmV0X3Jlc3BvbnNlX3Byb3RvKTsKCiAgaWYobSkKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJSZXNwb25zZSIsIG1pbm5ldF9yZXNwb25zZV9jdG9yKTsKCiAgLy8gQWRkIGNsYXNzIFJlcXVlc3QKICBKU19OZXdDbGFzc0lEKCZtaW5uZXRfcmVxdWVzdF9jbGFzc19pZCk7CgogIEpTX05ld0NsYXNzKEpTX0dldFJ1bnRpbWUoY3R4KSwgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQsICZtaW5uZXRfcmVxdWVzdF9jbGFzcyk7CiAgbWlubmV0X3JlcXVlc3RfcHJvdG8gPSBKU19OZXdPYmplY3QoY3R4KTsKICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIG1pbm5ldF9yZXF1ZXN0X3Byb3RvLCBtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jcywgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3Nfc2l6ZSk7CiAgSlNfU2V0Q2xhc3NQcm90byhjdHgsIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkLCBtaW5uZXRfcmVxdWVzdF9wcm90byk7CgogIG1pbm5ldF9yZXF1ZXN0X2N0b3IgPSBKU19OZXdDRnVuY3Rpb24yKGN0eCwgbWlubmV0X3JlcXVlc3RfY29uc3RydWN0b3IsICJNaW5uZXRSZXF1ZXN0IiwgMCwgSlNfQ0ZVTkNfY29uc3RydWN0b3IsIDApOwogIEpTX1NldENvbnN0cnVjdG9yKGN0eCwgbWlubmV0X3JlcXVlc3RfY3RvciwgbWlubmV0X3JlcXVlc3RfcHJvdG8pOwoKICBpZihtKQogICAgSlNfU2V0TW9kdWxlRXhwb3J0KGN0eCwgbSwgIlJlcXVlc3QiLCBtaW5uZXRfcmVxdWVzdF9jdG9yKTsKCiAgLy8gQWRkIGNsYXNzIFN0cmVhbQogIEpTX05ld0NsYXNzSUQoJm1pbm5ldF9yaW5nYnVmZmVyX2NsYXNzX2lkKTsKCiAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBtaW5uZXRfcmluZ2J1ZmZlcl9jbGFzc19pZCwgJm1pbm5ldF9yaW5nYnVmZmVyX2NsYXNzKTsKICBtaW5uZXRfcmluZ2J1ZmZlcl9wcm90byA9IEpTX05ld09iamVjdChjdHgpOwogIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgbWlubmV0X3JpbmdidWZmZXJfcHJvdG8sIG1pbm5ldF9yaW5nYnVmZmVyX3Byb3RvX2Z1bmNzLCBtaW5uZXRfcmluZ2J1ZmZlcl9wcm90b19mdW5jc19zaXplKTsKICBKU19TZXRDbGFzc1Byb3RvKGN0eCwgbWlubmV0X3JpbmdidWZmZXJfY2xhc3NfaWQsIG1pbm5ldF9yaW5nYnVmZmVyX3Byb3RvKTsKCiAgbWlubmV0X3JpbmdidWZmZXJfY3RvciA9IEpTX05ld0NGdW5jdGlvbjIoY3R4LCBtaW5uZXRfcmluZ2J1ZmZlcl9jb25zdHJ1Y3RvciwgIk1pbm5ldFJpbmdCdWZmZXIiLCAwLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CiAgSlNfU2V0Q29uc3RydWN0b3IoY3R4LCBtaW5uZXRfcmluZ2J1ZmZlcl9jdG9yLCBtaW5uZXRfcmluZ2J1ZmZlcl9wcm90byk7CgogIGlmKG0pCiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiU3RyZWFtIiwgbWlubmV0X3JpbmdidWZmZXJfY3Rvcik7CgogIC8vIEFkZCBjbGFzcyBVUkwKICBtaW5uZXRfdXJsX2luaXQoY3R4LCBtKTsKCiAgLy8gQWRkIGNsYXNzIFdlYlNvY2tldAogIEpTX05ld0NsYXNzSUQoJm1pbm5ldF93c19jbGFzc19pZCk7CiAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBtaW5uZXRfd3NfY2xhc3NfaWQsICZtaW5uZXRfd3NfY2xhc3MpOwogIG1pbm5ldF93c19wcm90byA9IEpTX05ld09iamVjdChjdHgpOwogIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgbWlubmV0X3dzX3Byb3RvLCBtaW5uZXRfd3NfcHJvdG9fZnVuY3MsIG1pbm5ldF93c19wcm90b19mdW5jc19zaXplKTsKICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIG1pbm5ldF93c19wcm90bywgbWlubmV0X3dzX3Byb3RvX2RlZnMsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemUpOwoKICBtaW5uZXRfd3NfY3RvciA9IEpTX05ld0NGdW5jdGlvbjIoY3R4LCBtaW5uZXRfd3NfY29uc3RydWN0b3IsICJNaW5uZXRXZWJzb2NrZXQiLCAwLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CiAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBtaW5uZXRfd3NfY3RvciwgbWlubmV0X3dzX3N0YXRpY19mdW5jcywgbWlubmV0X3dzX3N0YXRpY19mdW5jc19zaXplKTsKCiAgSlNfU2V0Q29uc3RydWN0b3IoY3R4LCBtaW5uZXRfd3NfY3RvciwgbWlubmV0X3dzX3Byb3RvKTsKCiAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBtaW5uZXRfd3NfY3RvciwgbWlubmV0X3dzX3Byb3RvX2RlZnMsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemUpOwoKICBpZihtKQogICAgSlNfU2V0TW9kdWxlRXhwb3J0KGN0eCwgbSwgIlNvY2tldCIsIG1pbm5ldF93c19jdG9yKTsKCiAgewogICAgSlNWYWx1ZSBtaW5uZXRfZGVmYXVsdCA9IEpTX05ld09iamVjdChjdHgpOwogICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBtaW5uZXRfZGVmYXVsdCwgbWlubmV0X2Z1bmNzLCBjb3VudG9mKG1pbm5ldF9mdW5jcykpOwogICAgSlNfU2V0TW9kdWxlRXhwb3J0KGN0eCwgbSwgImRlZmF1bHQiLCBtaW5uZXRfZGVmYXVsdCk7CiAgfQoKICByZXR1cm4gMDsKfQoKX19hdHRyaWJ1dGVfXygodmlzaWJpbGl0eSgiZGVmYXVsdCIpKSkgSlNNb2R1bGVEZWYqCkpTX0lOSVRfTU9EVUxFKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSkgewogIEpTTW9kdWxlRGVmKiBtOwogIG0gPSBKU19OZXdDTW9kdWxlKGN0eCwgbW9kdWxlX25hbWUsIGpzX21pbm5ldF9pbml0KTsKICBpZighbSkKICAgIHJldHVybiBOVUxMOwogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJSZXNwb25zZSIpOwogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJSZXF1ZXN0Iik7CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIlN0cmVhbSIpOwogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJTb2NrZXQiKTsKICBKU19BZGRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiVVJMIik7CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgImRlZmF1bHQiKTsKICBKU19BZGRNb2R1bGVFeHBvcnRMaXN0KGN0eCwgbSwgbWlubmV0X2Z1bmNzLCBjb3VudG9mKG1pbm5ldF9mdW5jcykpOwoKICBtaW5uZXRfbG9nX2N0eCA9IGN0eDsKCiAgbHdzX3NldF9sb2dfbGV2ZWwobWlubmV0X2xvZ19sZXZlbCwgbHdzX2xvZ19jYWxsYmFjayk7CgogIHJldHVybiBtOwp9Cgpjb25zdCBjaGFyKgpsd3NfY2FsbGJhY2tfbmFtZShpbnQgcmVhc29uKSB7CiAgcmV0dXJuICgoY29uc3QgY2hhciogY29uc3RbXSl7CiAgICAgICJMV1NfQ0FMTEJBQ0tfRVNUQUJMSVNIRUQiLAogICAgICAiTFdTX0NBTExCQUNLX0NMSUVOVF9DT05ORUNUSU9OX0VSUk9SIiwKICAgICAgIkxXU19DQUxMQkFDS19DTElFTlRfRklMVEVSX1BSRV9FU1RBQkxJU0giLAogICAgICAiTFdTX0NBTExCQUNLX0NMSUVOVF9FU1RBQkxJU0hFRCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfQ0xPU0VEIiwKICAgICAgIkxXU19DQUxMQkFDS19DTE9TRURfSFRUUCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkVDRUlWRSIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkVDRUlWRV9QT05HIiwKICAgICAgIkxXU19DQUxMQkFDS19DTElFTlRfUkVDRUlWRSIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfQ0xJRU5UX1JFQ0VJVkVfUE9ORyIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfQ0xJRU5UX1dSSVRFQUJMRSIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfU0VSVkVSX1dSSVRFQUJMRSIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfSFRUUCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfSFRUUF9CT0RZIiwKICAgICAgIkxXU19DQUxMQkFDS19IVFRQX0JPRFlfQ09NUExFVElPTiIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfSFRUUF9GSUxFX0NPTVBMRVRJT04iLAogICAgICAiTFdTX0NBTExCQUNLX0hUVFBfV1JJVEVBQkxFIiwKICAgICAgIkxXU19DQUxMQkFDS19GSUxURVJfTkVUV09SS19DT05ORUNUSU9OIiwKICAgICAgIkxXU19DQUxMQkFDS19GSUxURVJfSFRUUF9DT05ORUNUSU9OIiwKICAgICAgIkxXU19DQUxMQkFDS19TRVJWRVJfTkVXX0NMSUVOVF9JTlNUQU5USUFURUQiLAogICAgICAiTFdTX0NBTExCQUNLX0ZJTFRFUl9QUk9UT0NPTF9DT05ORUNUSU9OIiwKICAgICAgIkxXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfQ0xJRU5UX1ZFUklGWV9DRVJUUyIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX1NFUlZFUl9WRVJJRllfQ0VSVFMiLAogICAgICAiTFdTX0NBTExCQUNLX09QRU5TU0xfUEVSRk9STV9DTElFTlRfQ0VSVF9WRVJJRklDQVRJT04iLAogICAgICAiTFdTX0NBTExCQUNLX0NMSUVOVF9BUFBFTkRfSEFORFNIQUtFX0hFQURFUiIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfQ09ORklSTV9FWFRFTlNJT05fT0tBWSIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfQ0xJRU5UX0NPTkZJUk1fRVhURU5TSU9OX1NVUFBPUlRFRCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUFJPVE9DT0xfSU5JVCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUFJPVE9DT0xfREVTVFJPWSIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfV1NJX0NSRUFURSIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfV1NJX0RFU1RST1kiLAogICAgICAiTFdTX0NBTExCQUNLX0dFVF9USFJFQURfSUQiLAogICAgICAiTFdTX0NBTExCQUNLX0FERF9QT0xMX0ZEIiwKICAgICAgIkxXU19DQUxMQkFDS19ERUxfUE9MTF9GRCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfQ0hBTkdFX01PREVfUE9MTF9GRCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfTE9DS19QT0xMIiwKICAgICAgIkxXU19DQUxMQkFDS19VTkxPQ0tfUE9MTCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9DT05URVhUX1JFUVVJUkVTX1BSSVZBVEVfS0VZIiwKICAgICAgIkxXU19DQUxMQkFDS19XU19QRUVSX0lOSVRJQVRFRF9DTE9TRSIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfV1NfRVhUX0RFRkFVTFRTIiwKICAgICAgIkxXU19DQUxMQkFDS19DR0kiLAogICAgICAiTFdTX0NBTExCQUNLX0NHSV9URVJNSU5BVEVEIiwKICAgICAgIkxXU19DQUxMQkFDS19DR0lfU1RESU5fREFUQSIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfQ0dJX1NURElOX0NPTVBMRVRFRCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfRVNUQUJMSVNIRURfQ0xJRU5UX0hUVFAiLAogICAgICAiTFdTX0NBTExCQUNLX0NMT1NFRF9DTElFTlRfSFRUUCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkVDRUlWRV9DTElFTlRfSFRUUCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfQ09NUExFVEVEX0NMSUVOVF9IVFRQIiwKICAgICAgIkxXU19DQUxMQkFDS19SRUNFSVZFX0NMSUVOVF9IVFRQX1JFQUQiLAogICAgICAiTFdTX0NBTExCQUNLX0hUVFBfQklORF9QUk9UT0NPTCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfSFRUUF9EUk9QX1BST1RPQ09MIiwKICAgICAgIkxXU19DQUxMQkFDS19DSEVDS19BQ0NFU1NfUklHSFRTIiwKICAgICAgIkxXU19DQUxMQkFDS19QUk9DRVNTX0hUTUwiLAogICAgICAiTFdTX0NBTExCQUNLX0FERF9IRUFERVJTIiwKICAgICAgIkxXU19DQUxMQkFDS19TRVNTSU9OX0lORk8iLAogICAgICAiTFdTX0NBTExCQUNLX0dTX0VWRU5UIiwKICAgICAgIkxXU19DQUxMQkFDS19IVFRQX1BNTyIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfQ0xJRU5UX0hUVFBfV1JJVEVBQkxFIiwKICAgICAgIkxXU19DQUxMQkFDS19PUEVOU1NMX1BFUkZPUk1fU0VSVkVSX0NFUlRfVkVSSUZJQ0FUSU9OIiwKICAgICAgIkxXU19DQUxMQkFDS19SQVdfUlgiLAogICAgICAiTFdTX0NBTExCQUNLX1JBV19DTE9TRSIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkFXX1dSSVRFQUJMRSIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkFXX0FET1BUIiwKICAgICAgIkxXU19DQUxMQkFDS19SQVdfQURPUFRfRklMRSIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkFXX1JYX0ZJTEUiLAogICAgICAiTFdTX0NBTExCQUNLX1JBV19XUklURUFCTEVfRklMRSIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkFXX0NMT1NFX0ZJTEUiLAogICAgICAiTFdTX0NBTExCQUNLX1NTTF9JTkZPIiwKICAgICAgMCwKICAgICAgIkxXU19DQUxMQkFDS19DSElMRF9DTE9TSU5HIiwKICAgICAgIkxXU19DQUxMQkFDS19DR0lfUFJPQ0VTU19BVFRBQ0giLAogICAgICAiTFdTX0NBTExCQUNLX0VWRU5UX1dBSVRfQ0FOQ0VMTEVEIiwKICAgICAgIkxXU19DQUxMQkFDS19WSE9TVF9DRVJUX0FHSU5HIiwKICAgICAgIkxXU19DQUxMQkFDS19USU1FUiIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfVkhPU1RfQ0VSVF9VUERBVEUiLAogICAgICAiTFdTX0NBTExCQUNLX0NMSUVOVF9DTE9TRUQiLAogICAgICAiTFdTX0NBTExCQUNLX0NMSUVOVF9IVFRQX0RST1BfUFJPVE9DT0wiLAogICAgICAiTFdTX0NBTExCQUNLX1dTX1NFUlZFUl9CSU5EX1BST1RPQ09MIiwKICAgICAgIkxXU19DQUxMQkFDS19XU19TRVJWRVJfRFJPUF9QUk9UT0NPTCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfV1NfQ0xJRU5UX0JJTkRfUFJPVE9DT0wiLAogICAgICAiTFdTX0NBTExCQUNLX1dTX0NMSUVOVF9EUk9QX1BST1RPQ09MIiwKICAgICAgIkxXU19DQUxMQkFDS19SQVdfU0tUX0JJTkRfUFJPVE9DT0wiLAogICAgICAiTFdTX0NBTExCQUNLX1JBV19TS1RfRFJPUF9QUk9UT0NPTCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkFXX0ZJTEVfQklORF9QUk9UT0NPTCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkFXX0ZJTEVfRFJPUF9QUk9UT0NPTCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfQ0xJRU5UX0hUVFBfQklORF9QUk9UT0NPTCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfSFRUUF9DT05GSVJNX1VQR1JBREUiLAogICAgICAwLAogICAgICAwLAogICAgICAiTFdTX0NBTExCQUNLX1JBV19QUk9YWV9DTElfUlgiLAogICAgICAiTFdTX0NBTExCQUNLX1JBV19QUk9YWV9TUlZfUlgiLAogICAgICAiTFdTX0NBTExCQUNLX1JBV19QUk9YWV9DTElfQ0xPU0UiLAogICAgICAiTFdTX0NBTExCQUNLX1JBV19QUk9YWV9TUlZfQ0xPU0UiLAogICAgICAiTFdTX0NBTExCQUNLX1JBV19QUk9YWV9DTElfV1JJVEVBQkxFIiwKICAgICAgIkxXU19DQUxMQkFDS19SQVdfUFJPWFlfU1JWX1dSSVRFQUJMRSIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkFXX1BST1hZX0NMSV9BRE9QVCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkFXX1BST1hZX1NSVl9BRE9QVCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkFXX1BST1hZX0NMSV9CSU5EX1BST1RPQ09MIiwKICAgICAgIkxXU19DQUxMQkFDS19SQVdfUFJPWFlfU1JWX0JJTkRfUFJPVE9DT0wiLAogICAgICAiTFdTX0NBTExCQUNLX1JBV19QUk9YWV9DTElfRFJPUF9QUk9UT0NPTCIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfUkFXX1BST1hZX1NSVl9EUk9QX1BST1RPQ09MIiwKICAgICAgIkxXU19DQUxMQkFDS19SQVdfQ09OTkVDVEVEIiwKICAgICAgIkxXU19DQUxMQkFDS19WRVJJRllfQkFTSUNfQVVUSE9SSVpBVElPTiIsCiAgICAgICJMV1NfQ0FMTEJBQ0tfV1NJX1RYX0NSRURJVF9HRVQiLAogICAgICAiTFdTX0NBTExCQUNLX0NMSUVOVF9IVFRQX1JFRElSRUNUIiwKICAgICAgIkxXU19DQUxMQkFDS19DT05ORUNUSU5HIiwKICB9KVtyZWFzb25dOwp9CgAAAAAAAAAA4GUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADjMAAAAAAAAOMwAAAAAAAAAAAAAAAPC/"
				],
				[
					748,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAtDUAAAAAAAC0NQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "libwebsockets/include/libwebsockets/lws-http.h",
			"settings":
			{
				"buffer_size": 36626,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "minnet-fetch.c",
			"settings":
			{
				"buffer_size": 10250,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					36,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA+wcAAAAAAAB5CAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA+wcAAAAAAAB5CAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA+wcAAAAAAAB5CAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA+wcAAAAAAAB5CAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet.h",
			"settings":
			{
				"buffer_size": 8334,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					22,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABERAAAAAAAAEhEAAAAAAAAAAAAAEhEAAAAAAAASEQAAAAAAAAEAAAAq",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIRAAAAAAAAEREAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					1,
					"left_delete",
					null,
					"AQAAABERAAAAAAAAEREAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIRAAAAAAAAEhEAAAAAAAAAAAAAAADwvw"
				],
				[
					64,
					1,
					"cut",
					null,
					"AQAAAP8QAAAAAAAA/xAAAAAAAAAZAAAAICBzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP8QAAAAAAAAGBEAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "ockets"
					},
					"BwAAAOsTAAAAAAAA7BMAAAAAAAAAAAAA7BMAAAAAAADsEwAAAAAAAAcAAABlc3Npb25z7BMAAAAAAADtEwAAAAAAAAAAAADtEwAAAAAAAO4TAAAAAAAAAAAAAO4TAAAAAAAA7xMAAAAAAAAAAAAA7xMAAAAAAADwEwAAAAAAAAAAAADwEwAAAAAAAPETAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsTAAAAAAAA8hMAAAAAAAAAAAAAAADwvw"
				],
				[
					104,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgaAAAAAAAAcxoAAAAAAAAAAAAAAADwvw"
				],
				[
					105,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgaAAAAAAAAcxoAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAwhYAAAAAAADMFgAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAwhYAAAAAAADMFgAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAwhYAAAAAAADMFgAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "\nstruct"
					},
					"CAAAACMTAAAAAAAAJBMAAAAAAAAAAAAAJBMAAAAAAAAmEwAAAAAAAAAAAAAmEwAAAAAAACcTAAAAAAAAAAAAACcTAAAAAAAAKBMAAAAAAAAAAAAAKBMAAAAAAAApEwAAAAAAAAAAAAApEwAAAAAAACoTAAAAAAAAAAAAACoTAAAAAAAAKxMAAAAAAAAAAAAAKxMAAAAAAAAsEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIxMAAAAAAAAjEwAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " TimerClosure"
					},
					"DQAAACwTAAAAAAAALRMAAAAAAAAAAAAALRMAAAAAAAAuEwAAAAAAAAAAAAAuEwAAAAAAAC8TAAAAAAAAAAAAAC8TAAAAAAAAMBMAAAAAAAAAAAAAMBMAAAAAAAAxEwAAAAAAAAAAAAAxEwAAAAAAADITAAAAAAAAAAAAADITAAAAAAAAMxMAAAAAAAAAAAAAMxMAAAAAAAA0EwAAAAAAAAAAAAA0EwAAAAAAADUTAAAAAAAAAAAAADUTAAAAAAAANhMAAAAAAAAAAAAANhMAAAAAAAA3EwAAAAAAAAAAAAA3EwAAAAAAADgTAAAAAAAAAAAAADgTAAAAAAAAORMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALBMAAAAAAAAsEwAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAADkTAAAAAAAAOhMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAORMAAAAAAAA5EwAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " timer;"
					},
					"BwAAADoTAAAAAAAAOxMAAAAAAAAAAAAAOxMAAAAAAAA8EwAAAAAAAAAAAAA8EwAAAAAAAD0TAAAAAAAAAAAAAD0TAAAAAAAAPhMAAAAAAAAAAAAAPhMAAAAAAAA/EwAAAAAAAAAAAAA/EwAAAAAAAEATAAAAAAAAAAAAAEATAAAAAAAAQRMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOhMAAAAAAAA6EwAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA5hAAAAAAAAD/EAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-response.h",
			"settings":
			{
				"buffer_size": 1977,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD3BwAAI2lmbmRlZiBNSU5ORVRfUkVTUE9OU0VfSAojZGVmaW5lIE1JTk5FVF9SRVNQT05TRV9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8bGlzdC5oPgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwoKLyogY2xhc3MgTWlubmV0UmVzcG9uc2UgKi8KCi8qdHlwZWRlZiBzdHJ1Y3QgaHR0cF9oZWFkZXIgewogIGNoYXIgKm5hbWUsICp2YWx1ZTsKICBzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7Cn0gTWlubmV0SHR0cEhlYWRlcjsqLwoKdHlwZWRlZiBzdHJ1Y3QgaHR0cF9yZXNwb25zZSB7CiAgaW50IHJlZl9jb3VudDsKICBCT09MIHJlYWRfb25seTsKICBNaW5uZXRVUkwgdXJsOwogIGNoYXIqIHR5cGU7CiAgaW50IHN0YXR1czsKICBjaGFyKiBzdGF0dXNfdGV4dDsKICBCT09MIG9rOwogIE1pbm5ldEJ1ZmZlciBoZWFkZXJzLCBib2R5Owp9IE1pbm5ldFJlc3BvbnNlOwoKdm9pZCByZXNwb25zZV9mb3JtYXQoTWlubmV0UmVzcG9uc2UgY29uc3QqLCBjaGFyKiwgc2l6ZV90KTsKY2hhciogcmVzcG9uc2VfZHVtcChNaW5uZXRSZXNwb25zZSBjb25zdCopOwp2b2lkIHJlc3BvbnNlX3plcm8oTWlubmV0UmVzcG9uc2UqKTsKdm9pZCByZXNwb25zZV9pbml0KE1pbm5ldFJlc3BvbnNlKiwgTWlubmV0VVJMLCBpbnQgc3RhdHVzLCBjaGFyKiBzdGF0dXNfdGV4dCwgQk9PTCBvaywgY2hhciogdHlwZSk7Ck1pbm5ldFJlc3BvbnNlKiByZXNwb25zZV9kdXAoTWlubmV0UmVzcG9uc2UqKTsKc3NpemVfdCByZXNwb25zZV93cml0ZShNaW5uZXRSZXNwb25zZSosIGNvbnN0IHZvaWQqLCBzaXplX3QsIEpTQ29udGV4dCogY3R4KTsKdm9pZCByZXNwb25zZV9jbGVhcihNaW5uZXRSZXNwb25zZSosIEpTQ29udGV4dCopOwp2b2lkIHJlc3BvbnNlX2NsZWFyX3J0KE1pbm5ldFJlc3BvbnNlKiwgSlNSdW50aW1lKik7CnZvaWQgcmVzcG9uc2VfZnJlZShNaW5uZXRSZXNwb25zZSosIEpTQ29udGV4dCopOwp2b2lkIHJlc3BvbnNlX2ZyZWVfcnQoTWlubmV0UmVzcG9uc2UqLCBKU1J1bnRpbWUqKTsKTWlubmV0UmVzcG9uc2UqIHJlc3BvbnNlX25ldyhKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfcmVzcG9uc2VfbmV3KEpTQ29udGV4dCosIE1pbm5ldFVSTCwgaW50IHN0YXR1cywgY2hhciogc3RhdHVzX3RleHQsIEJPT0wgb2ssIGNvbnN0IGNoYXIqIHR5cGUpOwpKU1ZhbHVlIG1pbm5ldF9yZXNwb25zZV93cmFwKEpTQ29udGV4dCosIE1pbm5ldFJlc3BvbnNlKik7CkpTVmFsdWUgbWlubmV0X3Jlc3BvbnNlX2NvbnN0cnVjdG9yKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKdm9pZCBtaW5uZXRfcmVzcG9uc2VfZmluYWxpemVyKEpTUnVudGltZSosIEpTVmFsdWVDb25zdCk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfcmVzcG9uc2VfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVzcG9uc2VfcHJvdG8sIG1pbm5ldF9yZXNwb25zZV9jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfcmVzcG9uc2VfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfcmVzcG9uc2VfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmVzcG9uc2VfcHJvdG9fZnVuY3Nfc2l6ZTsKCnN0YXRpYyBpbmxpbmUgTWlubmV0UmVzcG9uc2UqCm1pbm5ldF9yZXNwb25zZV9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3Jlc3BvbnNlX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRSZXNwb25zZSoKbWlubmV0X3Jlc3BvbnNlX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF9yZXNwb25zZV9jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfUkVTUE9OU0VfSCAqLwoAAAAAAAAAAPcHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"paste",
					null,
					"AgAAAP4BAAAAAAAA1wUAAAAAAAAAAAAA1wUAAAAAAADXBQAAAAAAAJ8DAAB2b2lkIHJlc3BvbnNlX2Zvcm1hdChNaW5uZXRSZXNwb25zZSBjb25zdCosIGNoYXIqLCBzaXplX3QpOwpjaGFyKiByZXNwb25zZV9kdW1wKE1pbm5ldFJlc3BvbnNlIGNvbnN0Kik7CnZvaWQgcmVzcG9uc2VfemVybyhNaW5uZXRSZXNwb25zZSopOwp2b2lkIHJlc3BvbnNlX2luaXQoTWlubmV0UmVzcG9uc2UqLCBNaW5uZXRVUkwsIGludCBzdGF0dXMsIGNoYXIqIHN0YXR1c190ZXh0LCBCT09MIG9rLCBjaGFyKiB0eXBlKTsKTWlubmV0UmVzcG9uc2UqIHJlc3BvbnNlX2R1cChNaW5uZXRSZXNwb25zZSopOwpzc2l6ZV90IHJlc3BvbnNlX3dyaXRlKE1pbm5ldFJlc3BvbnNlKiwgY29uc3Qgdm9pZCosIHNpemVfdCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIHJlc3BvbnNlX2NsZWFyKE1pbm5ldFJlc3BvbnNlKiwgSlNDb250ZXh0Kik7CnZvaWQgcmVzcG9uc2VfY2xlYXJfcnQoTWlubmV0UmVzcG9uc2UqLCBKU1J1bnRpbWUqKTsKdm9pZCByZXNwb25zZV9mcmVlKE1pbm5ldFJlc3BvbnNlKiwgSlNDb250ZXh0Kik7CnZvaWQgcmVzcG9uc2VfZnJlZV9ydChNaW5uZXRSZXNwb25zZSosIEpTUnVudGltZSopOwpNaW5uZXRSZXNwb25zZSogcmVzcG9uc2VfbmV3KEpTQ29udGV4dCopOwpKU1ZhbHVlIG1pbm5ldF9yZXNwb25zZV9uZXcoSlNDb250ZXh0KiwgTWlubmV0VVJMLCBpbnQgc3RhdHVzLCBjaGFyKiBzdGF0dXNfdGV4dCwgQk9PTCBvaywgY29uc3QgY2hhciogdHlwZSk7CkpTVmFsdWUgbWlubmV0X3Jlc3BvbnNlX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0UmVzcG9uc2UqKTsKSlNWYWx1ZSBtaW5uZXRfcmVzcG9uc2VfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBpbnQsIEpTVmFsdWVDb25zdCBhcmd2W10pOwp2b2lkIG1pbm5ldF9yZXNwb25zZV9maW5hbGl6ZXIoSlNSdW50aW1lKiwgSlNWYWx1ZUNvbnN0KTs",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0FAAAAAAAA/gEAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAxCAAAI2lmbmRlZiBNSU5ORVRfUkVTUE9OU0VfSAojZGVmaW5lIE1JTk5FVF9SRVNQT05TRV9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8bGlzdC5oPgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwoKLyogY2xhc3MgTWlubmV0UmVzcG9uc2UgKi8KCi8qdHlwZWRlZiBzdHJ1Y3QgaHR0cF9oZWFkZXIgewogIGNoYXIgKm5hbWUsICp2YWx1ZTsKICBzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7Cn0gTWlubmV0SHR0cEhlYWRlcjsqLwoKdHlwZWRlZiBzdHJ1Y3QgaHR0cF9yZXNwb25zZSB7CiAgaW50IHJlZl9jb3VudDsKICBCT09MIHJlYWRfb25seTsKICBNaW5uZXRVUkwgdXJsOwogIGNoYXIqIHR5cGU7CiAgaW50IHN0YXR1czsKICBjaGFyKiBzdGF0dXNfdGV4dDsKICBCT09MIG9rOwogIE1pbm5ldEJ1ZmZlciBoZWFkZXJzLCBib2R5Owp9IE1pbm5ldFJlc3BvbnNlOwoKdm9pZCAgICAgICAgICAgIHJlc3BvbnNlX2Zvcm1hdChNaW5uZXRSZXNwb25zZSBjb25zdCosIGNoYXIqLCBzaXplX3QpOwpjaGFyKiAgICAgICAgICAgcmVzcG9uc2VfZHVtcChNaW5uZXRSZXNwb25zZSBjb25zdCopOwp2b2lkICAgICAgICAgICAgcmVzcG9uc2VfaW5pdChNaW5uZXRSZXNwb25zZSosIE1pbm5ldFVSTCwgaW50MzJfdCwgY2hhciogc3RhdHVzX3RleHQsIEJPT0wgb2ssIGNoYXIqIHR5cGUpOwpNaW5uZXRSZXNwb25zZSogcmVzcG9uc2VfZHVwKE1pbm5ldFJlc3BvbnNlKik7CnNzaXplX3QgICAgICAgICByZXNwb25zZV93cml0ZShNaW5uZXRSZXNwb25zZSosIGNvbnN0IHZvaWQqLCBzaXplX3QsIEpTQ29udGV4dCogY3R4KTsKdm9pZCAgICAgICAgICAgIHJlc3BvbnNlX2NsZWFyKE1pbm5ldFJlc3BvbnNlKiwgSlNDb250ZXh0Kik7CnZvaWQgICAgICAgICAgICByZXNwb25zZV9jbGVhcl9ydChNaW5uZXRSZXNwb25zZSosIEpTUnVudGltZSopOwp2b2lkICAgICAgICAgICAgcmVzcG9uc2VfZnJlZShNaW5uZXRSZXNwb25zZSosIEpTQ29udGV4dCopOwp2b2lkICAgICAgICAgICAgcmVzcG9uc2VfZnJlZV9ydChNaW5uZXRSZXNwb25zZSosIEpTUnVudGltZSopOwpNaW5uZXRSZXNwb25zZSogcmVzcG9uc2VfbmV3KEpTQ29udGV4dCopOwpKU1ZhbHVlICAgICAgICAgbWlubmV0X3Jlc3BvbnNlX25ldyhKU0NvbnRleHQqLCBNaW5uZXRVUkwsIGludCwgY2hhciogc3RhdHVzX3RleHQsIEJPT0wgb2ssIGNvbnN0IGNoYXIqIHR5cGUpOwpKU1ZhbHVlICAgICAgICAgbWlubmV0X3Jlc3BvbnNlX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0UmVzcG9uc2UqKTsKSlNWYWx1ZSAgICAgICAgIG1pbm5ldF9yZXNwb25zZV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdKTsKdm9pZCAgICAgICAgICAgIG1pbm5ldF9yZXNwb25zZV9maW5hbGl6ZXIoSlNSdW50aW1lKiwgSlNWYWx1ZSk7CgoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3Jlc3BvbnNlX2NsYXNzX2lkOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3Jlc3BvbnNlX3Byb3RvLCBtaW5uZXRfcmVzcG9uc2VfY3RvcjsKZXh0ZXJuIEpTQ2xhc3NEZWYgbWlubmV0X3Jlc3BvbnNlX2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3Jlc3BvbnNlX3Byb3RvX2Z1bmNzW107CmV4dGVybiBjb25zdCBzaXplX3QgbWlubmV0X3Jlc3BvbnNlX3Byb3RvX2Z1bmNzX3NpemU7CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlc3BvbnNlKgptaW5uZXRfcmVzcG9uc2VfZGF0YShKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZShvYmosIG1pbm5ldF9yZXNwb25zZV9jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0UmVzcG9uc2UqCm1pbm5ldF9yZXNwb25zZV9kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfcmVzcG9uc2VfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1JFU1BPTlNFX0ggKi8KAAAAAAAAAAC5BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wUAAAAAAADXBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC5BwAAI2lmbmRlZiBNSU5ORVRfUkVTUE9OU0VfSAojZGVmaW5lIE1JTk5FVF9SRVNQT05TRV9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8bGlzdC5oPgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwoKLyogY2xhc3MgTWlubmV0UmVzcG9uc2UgKi8KCi8qdHlwZWRlZiBzdHJ1Y3QgaHR0cF9oZWFkZXIgewogIGNoYXIgKm5hbWUsICp2YWx1ZTsKICBzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7Cn0gTWlubmV0SHR0cEhlYWRlcjsqLwoKdHlwZWRlZiBzdHJ1Y3QgaHR0cF9yZXNwb25zZSB7CiAgaW50IHJlZl9jb3VudDsKICBCT09MIHJlYWRfb25seTsKICBNaW5uZXRVUkwgdXJsOwogIGNoYXIqIHR5cGU7CiAgaW50IHN0YXR1czsKICBjaGFyKiBzdGF0dXNfdGV4dDsKICBCT09MIG9rOwogIE1pbm5ldEJ1ZmZlciBoZWFkZXJzLCBib2R5Owp9IE1pbm5ldFJlc3BvbnNlOwoKdm9pZCByZXNwb25zZV9mb3JtYXQoTWlubmV0UmVzcG9uc2UgY29uc3QqLCBjaGFyKiwgc2l6ZV90KTsKY2hhciogcmVzcG9uc2VfZHVtcChNaW5uZXRSZXNwb25zZSBjb25zdCopOwp2b2lkIHJlc3BvbnNlX2luaXQoTWlubmV0UmVzcG9uc2UqLCBNaW5uZXRVUkwsIGludDMyX3QsIGNoYXIqIHN0YXR1c190ZXh0LCBCT09MIG9rLCBjaGFyKiB0eXBlKTsKTWlubmV0UmVzcG9uc2UqIHJlc3BvbnNlX2R1cChNaW5uZXRSZXNwb25zZSopOwpzc2l6ZV90IHJlc3BvbnNlX3dyaXRlKE1pbm5ldFJlc3BvbnNlKiwgY29uc3Qgdm9pZCosIHNpemVfdCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIHJlc3BvbnNlX2NsZWFyKE1pbm5ldFJlc3BvbnNlKiwgSlNDb250ZXh0Kik7CnZvaWQgcmVzcG9uc2VfY2xlYXJfcnQoTWlubmV0UmVzcG9uc2UqLCBKU1J1bnRpbWUqKTsKdm9pZCByZXNwb25zZV9mcmVlKE1pbm5ldFJlc3BvbnNlKiwgSlNDb250ZXh0Kik7CnZvaWQgcmVzcG9uc2VfZnJlZV9ydChNaW5uZXRSZXNwb25zZSosIEpTUnVudGltZSopOwpNaW5uZXRSZXNwb25zZSogcmVzcG9uc2VfbmV3KEpTQ29udGV4dCopOwpKU1ZhbHVlIG1pbm5ldF9yZXNwb25zZV9uZXcoSlNDb250ZXh0KiwgTWlubmV0VVJMLCBpbnQsIGNoYXIqIHN0YXR1c190ZXh0LCBCT09MIG9rLCBjb25zdCBjaGFyKiB0eXBlKTsKSlNWYWx1ZSBtaW5uZXRfcmVzcG9uc2Vfd3JhcChKU0NvbnRleHQqLCBNaW5uZXRSZXNwb25zZSopOwpKU1ZhbHVlIG1pbm5ldF9yZXNwb25zZV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdKTsKdm9pZCBtaW5uZXRfcmVzcG9uc2VfZmluYWxpemVyKEpTUnVudGltZSosIEpTVmFsdWUpOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3Jlc3BvbnNlX2NsYXNzX2lkOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3Jlc3BvbnNlX3Byb3RvLCBtaW5uZXRfcmVzcG9uc2VfY3RvcjsKZXh0ZXJuIEpTQ2xhc3NEZWYgbWlubmV0X3Jlc3BvbnNlX2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3Jlc3BvbnNlX3Byb3RvX2Z1bmNzW107CmV4dGVybiBjb25zdCBzaXplX3QgbWlubmV0X3Jlc3BvbnNlX3Byb3RvX2Z1bmNzX3NpemU7CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlc3BvbnNlKgptaW5uZXRfcmVzcG9uc2VfZGF0YShKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZShvYmosIG1pbm5ldF9yZXNwb25zZV9jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0UmVzcG9uc2UqCm1pbm5ldF9yZXNwb25zZV9kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfcmVzcG9uc2VfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1JFU1BPTlNFX0ggKi8KAAAAAAAAAAC5BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wUAAAAAAADXBQAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC5BwAAI2lmbmRlZiBNSU5ORVRfUkVTUE9OU0VfSAojZGVmaW5lIE1JTk5FVF9SRVNQT05TRV9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8bGlzdC5oPgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwoKLyogY2xhc3MgTWlubmV0UmVzcG9uc2UgKi8KCi8qdHlwZWRlZiBzdHJ1Y3QgaHR0cF9oZWFkZXIgewogIGNoYXIgKm5hbWUsICp2YWx1ZTsKICBzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7Cn0gTWlubmV0SHR0cEhlYWRlcjsqLwoKdHlwZWRlZiBzdHJ1Y3QgaHR0cF9yZXNwb25zZSB7CiAgaW50IHJlZl9jb3VudDsKICBCT09MIHJlYWRfb25seTsKICBNaW5uZXRVUkwgdXJsOwogIGNoYXIqIHR5cGU7CiAgaW50IHN0YXR1czsKICBjaGFyKiBzdGF0dXNfdGV4dDsKICBCT09MIG9rOwogIE1pbm5ldEJ1ZmZlciBoZWFkZXJzLCBib2R5Owp9IE1pbm5ldFJlc3BvbnNlOwoKdm9pZCByZXNwb25zZV9mb3JtYXQoTWlubmV0UmVzcG9uc2UgY29uc3QqLCBjaGFyKiwgc2l6ZV90KTsKY2hhciogcmVzcG9uc2VfZHVtcChNaW5uZXRSZXNwb25zZSBjb25zdCopOwp2b2lkIHJlc3BvbnNlX2luaXQoTWlubmV0UmVzcG9uc2UqLCBNaW5uZXRVUkwsIGludDMyX3QsIGNoYXIqIHN0YXR1c190ZXh0LCBCT09MIG9rLCBjaGFyKiB0eXBlKTsKTWlubmV0UmVzcG9uc2UqIHJlc3BvbnNlX2R1cChNaW5uZXRSZXNwb25zZSopOwpzc2l6ZV90IHJlc3BvbnNlX3dyaXRlKE1pbm5ldFJlc3BvbnNlKiwgY29uc3Qgdm9pZCosIHNpemVfdCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIHJlc3BvbnNlX2NsZWFyKE1pbm5ldFJlc3BvbnNlKiwgSlNDb250ZXh0Kik7CnZvaWQgcmVzcG9uc2VfY2xlYXJfcnQoTWlubmV0UmVzcG9uc2UqLCBKU1J1bnRpbWUqKTsKdm9pZCByZXNwb25zZV9mcmVlKE1pbm5ldFJlc3BvbnNlKiwgSlNDb250ZXh0Kik7CnZvaWQgcmVzcG9uc2VfZnJlZV9ydChNaW5uZXRSZXNwb25zZSosIEpTUnVudGltZSopOwpNaW5uZXRSZXNwb25zZSogcmVzcG9uc2VfbmV3KEpTQ29udGV4dCopOwpKU1ZhbHVlIG1pbm5ldF9yZXNwb25zZV9uZXcoSlNDb250ZXh0KiwgTWlubmV0VVJMLCBpbnQsIGNoYXIqIHN0YXR1c190ZXh0LCBCT09MIG9rLCBjb25zdCBjaGFyKiB0eXBlKTsKSlNWYWx1ZSBtaW5uZXRfcmVzcG9uc2Vfd3JhcChKU0NvbnRleHQqLCBNaW5uZXRSZXNwb25zZSopOwpKU1ZhbHVlIG1pbm5ldF9yZXNwb25zZV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdKTsKdm9pZCBtaW5uZXRfcmVzcG9uc2VfZmluYWxpemVyKEpTUnVudGltZSosIEpTVmFsdWUpOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3Jlc3BvbnNlX2NsYXNzX2lkOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3Jlc3BvbnNlX3Byb3RvLCBtaW5uZXRfcmVzcG9uc2VfY3RvcjsKZXh0ZXJuIEpTQ2xhc3NEZWYgbWlubmV0X3Jlc3BvbnNlX2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3Jlc3BvbnNlX3Byb3RvX2Z1bmNzW107CmV4dGVybiBjb25zdCBzaXplX3QgbWlubmV0X3Jlc3BvbnNlX3Byb3RvX2Z1bmNzX3NpemU7CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlc3BvbnNlKgptaW5uZXRfcmVzcG9uc2VfZGF0YShKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZShvYmosIG1pbm5ldF9yZXNwb25zZV9jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0UmVzcG9uc2UqCm1pbm5ldF9yZXNwb25zZV9kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfcmVzcG9uc2VfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1JFU1BPTlNFX0ggKi8KAAAAAAAAAAC5BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wUAAAAAAADXBQAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC5BwAAI2lmbmRlZiBNSU5ORVRfUkVTUE9OU0VfSAojZGVmaW5lIE1JTk5FVF9SRVNQT05TRV9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8bGlzdC5oPgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwoKLyogY2xhc3MgTWlubmV0UmVzcG9uc2UgKi8KCi8qdHlwZWRlZiBzdHJ1Y3QgaHR0cF9oZWFkZXIgewogIGNoYXIgKm5hbWUsICp2YWx1ZTsKICBzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7Cn0gTWlubmV0SHR0cEhlYWRlcjsqLwoKdHlwZWRlZiBzdHJ1Y3QgaHR0cF9yZXNwb25zZSB7CiAgaW50IHJlZl9jb3VudDsKICBCT09MIHJlYWRfb25seTsKICBNaW5uZXRVUkwgdXJsOwogIGNoYXIqIHR5cGU7CiAgaW50IHN0YXR1czsKICBjaGFyKiBzdGF0dXNfdGV4dDsKICBCT09MIG9rOwogIE1pbm5ldEJ1ZmZlciBoZWFkZXJzLCBib2R5Owp9IE1pbm5ldFJlc3BvbnNlOwoKdm9pZCByZXNwb25zZV9mb3JtYXQoTWlubmV0UmVzcG9uc2UgY29uc3QqLCBjaGFyKiwgc2l6ZV90KTsKY2hhciogcmVzcG9uc2VfZHVtcChNaW5uZXRSZXNwb25zZSBjb25zdCopOwp2b2lkIHJlc3BvbnNlX2luaXQoTWlubmV0UmVzcG9uc2UqLCBNaW5uZXRVUkwsIGludDMyX3QsIGNoYXIqIHN0YXR1c190ZXh0LCBCT09MIG9rLCBjaGFyKiB0eXBlKTsKTWlubmV0UmVzcG9uc2UqIHJlc3BvbnNlX2R1cChNaW5uZXRSZXNwb25zZSopOwpzc2l6ZV90IHJlc3BvbnNlX3dyaXRlKE1pbm5ldFJlc3BvbnNlKiwgY29uc3Qgdm9pZCosIHNpemVfdCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIHJlc3BvbnNlX2NsZWFyKE1pbm5ldFJlc3BvbnNlKiwgSlNDb250ZXh0Kik7CnZvaWQgcmVzcG9uc2VfY2xlYXJfcnQoTWlubmV0UmVzcG9uc2UqLCBKU1J1bnRpbWUqKTsKdm9pZCByZXNwb25zZV9mcmVlKE1pbm5ldFJlc3BvbnNlKiwgSlNDb250ZXh0Kik7CnZvaWQgcmVzcG9uc2VfZnJlZV9ydChNaW5uZXRSZXNwb25zZSosIEpTUnVudGltZSopOwpNaW5uZXRSZXNwb25zZSogcmVzcG9uc2VfbmV3KEpTQ29udGV4dCopOwpKU1ZhbHVlIG1pbm5ldF9yZXNwb25zZV9uZXcoSlNDb250ZXh0KiwgTWlubmV0VVJMLCBpbnQsIGNoYXIqIHN0YXR1c190ZXh0LCBCT09MIG9rLCBjb25zdCBjaGFyKiB0eXBlKTsKSlNWYWx1ZSBtaW5uZXRfcmVzcG9uc2Vfd3JhcChKU0NvbnRleHQqLCBNaW5uZXRSZXNwb25zZSopOwpKU1ZhbHVlIG1pbm5ldF9yZXNwb25zZV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdKTsKdm9pZCBtaW5uZXRfcmVzcG9uc2VfZmluYWxpemVyKEpTUnVudGltZSosIEpTVmFsdWUpOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3Jlc3BvbnNlX2NsYXNzX2lkOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3Jlc3BvbnNlX3Byb3RvLCBtaW5uZXRfcmVzcG9uc2VfY3RvcjsKZXh0ZXJuIEpTQ2xhc3NEZWYgbWlubmV0X3Jlc3BvbnNlX2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3Jlc3BvbnNlX3Byb3RvX2Z1bmNzW107CmV4dGVybiBjb25zdCBzaXplX3QgbWlubmV0X3Jlc3BvbnNlX3Byb3RvX2Z1bmNzX3NpemU7CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlc3BvbnNlKgptaW5uZXRfcmVzcG9uc2VfZGF0YShKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZShvYmosIG1pbm5ldF9yZXNwb25zZV9jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0UmVzcG9uc2UqCm1pbm5ldF9yZXNwb25zZV9kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfcmVzcG9uc2VfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1JFU1BPTlNFX0ggKi8KAAAAAAAAAAC5BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wUAAAAAAADXBQAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC5BwAAI2lmbmRlZiBNSU5ORVRfUkVTUE9OU0VfSAojZGVmaW5lIE1JTk5FVF9SRVNQT05TRV9ICgojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8bGlzdC5oPgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwoKLyogY2xhc3MgTWlubmV0UmVzcG9uc2UgKi8KCi8qdHlwZWRlZiBzdHJ1Y3QgaHR0cF9oZWFkZXIgewogIGNoYXIgKm5hbWUsICp2YWx1ZTsKICBzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7Cn0gTWlubmV0SHR0cEhlYWRlcjsqLwoKdHlwZWRlZiBzdHJ1Y3QgaHR0cF9yZXNwb25zZSB7CiAgaW50IHJlZl9jb3VudDsKICBCT09MIHJlYWRfb25seTsKICBNaW5uZXRVUkwgdXJsOwogIGNoYXIqIHR5cGU7CiAgaW50IHN0YXR1czsKICBjaGFyKiBzdGF0dXNfdGV4dDsKICBCT09MIG9rOwogIE1pbm5ldEJ1ZmZlciBoZWFkZXJzLCBib2R5Owp9IE1pbm5ldFJlc3BvbnNlOwoKdm9pZCByZXNwb25zZV9mb3JtYXQoTWlubmV0UmVzcG9uc2UgY29uc3QqLCBjaGFyKiwgc2l6ZV90KTsKY2hhciogcmVzcG9uc2VfZHVtcChNaW5uZXRSZXNwb25zZSBjb25zdCopOwp2b2lkIHJlc3BvbnNlX2luaXQoTWlubmV0UmVzcG9uc2UqLCBNaW5uZXRVUkwsIGludDMyX3QsIGNoYXIqIHN0YXR1c190ZXh0LCBCT09MIG9rLCBjaGFyKiB0eXBlKTsKTWlubmV0UmVzcG9uc2UqIHJlc3BvbnNlX2R1cChNaW5uZXRSZXNwb25zZSopOwpzc2l6ZV90IHJlc3BvbnNlX3dyaXRlKE1pbm5ldFJlc3BvbnNlKiwgY29uc3Qgdm9pZCosIHNpemVfdCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIHJlc3BvbnNlX2NsZWFyKE1pbm5ldFJlc3BvbnNlKiwgSlNDb250ZXh0Kik7CnZvaWQgcmVzcG9uc2VfY2xlYXJfcnQoTWlubmV0UmVzcG9uc2UqLCBKU1J1bnRpbWUqKTsKdm9pZCByZXNwb25zZV9mcmVlKE1pbm5ldFJlc3BvbnNlKiwgSlNDb250ZXh0Kik7CnZvaWQgcmVzcG9uc2VfZnJlZV9ydChNaW5uZXRSZXNwb25zZSosIEpTUnVudGltZSopOwpNaW5uZXRSZXNwb25zZSogcmVzcG9uc2VfbmV3KEpTQ29udGV4dCopOwpKU1ZhbHVlIG1pbm5ldF9yZXNwb25zZV9uZXcoSlNDb250ZXh0KiwgTWlubmV0VVJMLCBpbnQsIGNoYXIqIHN0YXR1c190ZXh0LCBCT09MIG9rLCBjb25zdCBjaGFyKiB0eXBlKTsKSlNWYWx1ZSBtaW5uZXRfcmVzcG9uc2Vfd3JhcChKU0NvbnRleHQqLCBNaW5uZXRSZXNwb25zZSopOwpKU1ZhbHVlIG1pbm5ldF9yZXNwb25zZV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdKTsKdm9pZCBtaW5uZXRfcmVzcG9uc2VfZmluYWxpemVyKEpTUnVudGltZSosIEpTVmFsdWUpOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3Jlc3BvbnNlX2NsYXNzX2lkOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3Jlc3BvbnNlX3Byb3RvLCBtaW5uZXRfcmVzcG9uc2VfY3RvcjsKZXh0ZXJuIEpTQ2xhc3NEZWYgbWlubmV0X3Jlc3BvbnNlX2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3Jlc3BvbnNlX3Byb3RvX2Z1bmNzW107CmV4dGVybiBjb25zdCBzaXplX3QgbWlubmV0X3Jlc3BvbnNlX3Byb3RvX2Z1bmNzX3NpemU7CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlc3BvbnNlKgptaW5uZXRfcmVzcG9uc2VfZGF0YShKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZShvYmosIG1pbm5ldF9yZXNwb25zZV9jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0UmVzcG9uc2UqCm1pbm5ldF9yZXNwb25zZV9kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfcmVzcG9uc2VfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1JFU1BPTlNFX0ggKi8KAAAAAAAAAAC5BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wUAAAAAAADXBQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-websocket.h",
			"settings":
			{
				"buffer_size": 2851,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					54,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEkGAAAAAAAASgYAAAAAAAAAAAAASgYAAAAAAABMBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkGAAAAAAAASQYAAAAAAAAAAAAAAADwvw"
				],
				[
					55,
					1,
					"paste",
					null,
					"AQAAAEwGAAAAAAAAZQYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwGAAAAAAAATAYAAAAAAAAAAAAAAADwvw"
				],
				[
					56,
					1,
					"left_delete",
					null,
					"AQAAAGQGAAAAAAAAZAYAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUGAAAAAAAAZQYAAAAAAAAAAAAAAADwvw"
				],
				[
					87,
					1,
					"cut",
					null,
					"AQAAAKMFAAAAAAAAowUAAAAAAAAcAAAAICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMFAAAAAAAAvwUAAAAAAAAAAAAAAADwvw"
				],
				[
					88,
					2,
					"paste",
					null,
					"AgAAAKMFAAAAAAAAvwUAAAAAAAAAAAAAvwUAAAAAAADbBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMFAAAAAAAAowUAAAAAAAAAAAAAAADwvw"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "response"
					},
					"CQAAAM0FAAAAAAAAzgUAAAAAAAAAAAAAzgUAAAAAAADOBQAAAAAAAAcAAAByZXF1ZXN0zgUAAAAAAADPBQAAAAAAAAAAAADPBQAAAAAAANAFAAAAAAAAAAAAANAFAAAAAAAA0QUAAAAAAAAAAAAA0QUAAAAAAADSBQAAAAAAAAAAAADSBQAAAAAAANMFAAAAAAAAAAAAANMFAAAAAAAA1AUAAAAAAAAAAAAA1AUAAAAAAADVBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0FAAAAAAAA1AUAAAAAAAAAAAAAAADwvw"
				],
				[
					93,
					1,
					"right_delete",
					null,
					"AQAAANkFAAAAAAAA2QUAAAAAAAABAAAAcQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkFAAAAAAAA2QUAAAAAAAAAAAAAAADwvw"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "sp"
					},
					"AgAAANkFAAAAAAAA2gUAAAAAAAAAAAAA2gUAAAAAAADbBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkFAAAAAAAA2QUAAAAAAAAAAAAAAADwvw"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJQCAAAAAAAAlQIAAAAAAAAAAAAAlQIAAAAAAACWAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQCAAAAAAAAlAIAAAAAAAAAAAAAAADwvw"
				],
				[
					124,
					1,
					"left_delete",
					null,
					"AQAAAJQCAAAAAAAAlAIAAAAAAAA6AAAALy9NaW5uZXRXZWJzb2NrZXQqIHdzX2Zyb21fd3NpMihzdHJ1Y3QgbHdzKiwgSlNDb250ZXh0Kik7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQCAAAAAAAAzgIAAAAAAAAAAAAAAAAAAA"
				],
				[
					133,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACTCgAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgc2l6ZV90IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCk1pbm5ldFdlYnNvY2tldCogd3NfbmV3KHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpOwpKU1ZhbHVlIG1pbm5ldF93c19uZXcoSlNDb250ZXh0KiBjdHgsIHN0cnVjdCBsd3MqIHdzaSk7CkpTVmFsdWUgbWlubmV0X3dzX29iamVjdChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CkpTVmFsdWUgbWlubmV0X3dzX3dyYXAoSlNDb250ZXh0Kiwgc3RydWN0IGx3cyopOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIEpTT2JqZWN0KiBvYmo7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgSlNWYWx1ZSBoYW5kbGVyOwogIGludDY0X3Qgc2VyaWFsOwogIE1pbm5ldFN0YXR1cyBzdGF0dXM7CiAgc3RydWN0IHBvbGxmZCBwb2xsOwogIGludCBlcnJvcjsKICBCT09MIGJpbmFyeTsKICAgIHN0cnVjdCBsaXN0X2hlYWQgbGluazsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKbHdzX3Nlc3Npb24oc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CgogIGlmKChvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSkpCiAgICByZXR1cm4gb3BhcXVlLT5zZXNzOwoKICByZXR1cm4gMDsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCndzX29wYXF1ZShNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiAgcmV0dXJuIGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSk7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKd3Nfc2Vzc2lvbihNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiAgcmV0dXJuIGx3c19zZXNzaW9uKHdzLT5sd3NpKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCndzX2Zyb21fd3NpKHN0cnVjdCBsd3MqIHdzaSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwogIHJldHVybiAob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpID8gb3BhcXVlLT53cyA6IDA7Cn0KCi8qCnN0YXRpYyBpbmxpbmUgaW50CndzX2x3cyhjb25zdCBNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiByZXR1cm4gd3MtPmx3c2k7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSk7Cn0qLwoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAlgoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEDAAAAAAAAXwMAAAAAAAAAAAAAAADwvw"
				],
				[
					144,
					1,
					"paste",
					null,
					"AQAAAEkDAAAAAAAAlAMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkDAAAAAAAASQMAAAAAAAAAAAAAAADwvw"
				],
				[
					149,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADhCgAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgc2l6ZV90IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCk1pbm5ldFdlYnNvY2tldCogd3NfbmV3KHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpOwpKU1ZhbHVlIG1pbm5ldF93c19uZXcoSlNDb250ZXh0KiBjdHgsIHN0cnVjdCBsd3MqIHdzaSk7CkpTVmFsdWUgbWlubmV0X3dzX29iamVjdChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CkpTVmFsdWUgICAgICAgICAgICAgICAgICAgICAgbWlubmV0X3dzX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0V2Vic29ja2V0Kik7CkpTVmFsdWUgbWlubmV0X3dzX2Zyb213c2koSlNDb250ZXh0Kiwgc3RydWN0IGx3cyopOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIEpTT2JqZWN0KiBvYmo7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgSlNWYWx1ZSBoYW5kbGVyOwogIGludDY0X3Qgc2VyaWFsOwogIE1pbm5ldFN0YXR1cyBzdGF0dXM7CiAgc3RydWN0IHBvbGxmZCBwb2xsOwogIGludCBlcnJvcjsKICBCT09MIGJpbmFyeTsKICAgIHN0cnVjdCBsaXN0X2hlYWQgbGluazsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKbHdzX3Nlc3Npb24oc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CgogIGlmKChvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSkpCiAgICByZXR1cm4gb3BhcXVlLT5zZXNzOwoKICByZXR1cm4gMDsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCndzX29wYXF1ZShNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiAgcmV0dXJuIGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSk7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKd3Nfc2Vzc2lvbihNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiAgcmV0dXJuIGx3c19zZXNzaW9uKHdzLT5sd3NpKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCndzX2Zyb21fd3NpKHN0cnVjdCBsd3MqIHdzaSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwogIHJldHVybiAob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpID8gb3BhcXVlLT53cyA6IDA7Cn0KCi8qCnN0YXRpYyBpbmxpbmUgaW50CndzX2x3cyhjb25zdCBNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiByZXR1cm4gd3MtPmx3c2k7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSk7Cn0qLwoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAygoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQDAAAAAAAAlAMAAAAAAAAAAAAAAADwvw"
				],
				[
					150,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADKCgAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgc2l6ZV90IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCk1pbm5ldFdlYnNvY2tldCogd3NfbmV3KHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpOwpKU1ZhbHVlIG1pbm5ldF93c19uZXcoSlNDb250ZXh0KiBjdHgsIHN0cnVjdCBsd3MqIHdzaSk7CkpTVmFsdWUgbWlubmV0X3dzX29iamVjdChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CkpTVmFsdWUgbWlubmV0X3dzX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0V2Vic29ja2V0Kik7CkpTVmFsdWUgbWlubmV0X3dzX2Zyb213c2koSlNDb250ZXh0Kiwgc3RydWN0IGx3cyopOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIEpTT2JqZWN0KiBvYmo7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgSlNWYWx1ZSBoYW5kbGVyOwogIGludDY0X3Qgc2VyaWFsOwogIE1pbm5ldFN0YXR1cyBzdGF0dXM7CiAgc3RydWN0IHBvbGxmZCBwb2xsOwogIGludCBlcnJvcjsKICBCT09MIGJpbmFyeTsKICBzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7Cn07CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBzZXNzaW9uX2RhdGEqCmx3c19zZXNzaW9uKHN0cnVjdCBsd3MqIHdzaSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZS0+c2VzczsKCiAgcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoTWlubmV0V2Vic29ja2V0KiB3cykgewogIHJldHVybiBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3MtPmx3c2kpOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBzZXNzaW9uX2RhdGEqCndzX3Nlc3Npb24oTWlubmV0V2Vic29ja2V0KiB3cykgewogIHJldHVybiBsd3Nfc2Vzc2lvbih3cy0+bHdzaSk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0Kgp3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKICByZXR1cm4gKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSA/IG9wYXF1ZS0+d3MgOiAwOwp9CgovKgpzdGF0aWMgaW5saW5lIGludAp3c19sd3MoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIHdzLT5sd3NpOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKd3Nfb3BhcXVlKGNvbnN0IE1pbm5ldFdlYnNvY2tldCogd3MpIHsKIHJldHVybiBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3MtPmx3c2kpOwp9Ki8KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0KgptaW5uZXRfd3NfZGF0YShKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZShvYmosIG1pbm5ldF93c19jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0KgptaW5uZXRfd3NfZGF0YTIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9XRUJTT0NLRVRfSCAqLwoAAAAAAAAAAMoKAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQDAAAAAAAAlAMAAAAAAAAAAAAAAADwvw"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": "wd"
					},
					"AgAAAJ0HAAAAAAAAngcAAAAAAAAAAAAAngcAAAAAAACfBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0HAAAAAAAAnQcAAAAAAAAAAAAAAADwvw"
				],
				[
					195,
					2,
					"left_delete",
					null,
					"AgAAAJ4HAAAAAAAAngcAAAAAAAABAAAAZJ0HAAAAAAAAnQcAAAAAAAABAAAAdw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8HAAAAAAAAnwcAAAAAAAAAAAAAAADwvw"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": "ws->lwsi"
					},
					"CAAAAJ0HAAAAAAAAngcAAAAAAAAAAAAAngcAAAAAAACfBwAAAAAAAAAAAACfBwAAAAAAAKAHAAAAAAAAAAAAAKAHAAAAAAAAoQcAAAAAAAAAAAAAoQcAAAAAAACiBwAAAAAAAAAAAACiBwAAAAAAAKMHAAAAAAAAAAAAAKMHAAAAAAAApAcAAAAAAAAAAAAApAcAAAAAAAClBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0HAAAAAAAAnQcAAAAAAAAAAAAAAADwvw"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAKUHAAAAAAAApgcAAAAAAAAAAAAApgcAAAAAAACnBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKUHAAAAAAAApQcAAAAAAAAAAAAAAADwvw"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKcHAAAAAAAAqAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcHAAAAAAAApwcAAAAAAAAAAAAAAADwvw"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": " :;"
					},
					"AwAAAMoHAAAAAAAAywcAAAAAAAAAAAAAywcAAAAAAADMBwAAAAAAAAAAAADMBwAAAAAAAM0HAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoHAAAAAAAAygcAAAAAAAAAAAAAAADwvw"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM0HAAAAAAAAzgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0HAAAAAAAAzQcAAAAAAAAAAAAAAADwvw"
				],
				[
					203,
					2,
					"left_delete",
					null,
					"AgAAAM0HAAAAAAAAzQcAAAAAAAABAAAAIMwHAAAAAAAAzAcAAAAAAAABAAAAOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4HAAAAAAAAzgcAAAAAAAAAAAAAAADwvw"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAMwHAAAAAAAAzQcAAAAAAAAAAAAAzQcAAAAAAADOBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwHAAAAAAAAzAcAAAAAAAAAAAAAAADwvw"
				],
				[
					218,
					1,
					"paste",
					null,
					"AQAAACEIAAAAAAAALAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEIAAAAAAAAIQgAAAAAAAAAAAAAAADwvw"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAEEIAAAAAAAAQggAAAAAAAAAAAAAQggAAAAAAABDCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEIAAAAAAAAQQgAAAAAAAAAAAAAAADwvw"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAEMIAAAAAAAARAgAAAAAAAAAAAAARAgAAAAAAABFCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMIAAAAAAAAQwgAAAAAAAAAAAAAAADwvw"
				],
				[
					235,
					2,
					"left_delete",
					null,
					"AgAAAPUIAAAAAAAA9QgAAAAAAADRAAAACi8qCnN0YXRpYyBpbmxpbmUgaW50CndzX2x3cyhjb25zdCBNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiByZXR1cm4gd3MtPmx3c2k7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoY29uc3QgTWlubmV0V2Vic29ja2V0KiB3cykgewogcmV0dXJuIGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSk7Cn0qLwr0CAAAAAAAAPQIAAAAAAAAAQAAAAo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUIAAAAAAAAxgkAAAAAAAAAAAAAAADwvw"
				],
				[
					236,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPQIAAAAAAAA9QgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPQIAAAAAAAA9AgAAAAAAAAAAAAAAADwvw"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAH8FAAAAAAAAgAUAAAAAAAAAAAAAgAUAAAAAAACBBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8FAAAAAAAAfwUAAAAAAAAAAAAAAADwvw"
				],
				[
					273,
					1,
					"cut",
					null,
					"AQAAAEkHAAAAAAAASQcAAAAAAACKAAAACnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoTWlubmV0V2Vic29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSkgOiAwOwp9",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkHAAAAAAAA0wcAAAAAAAAAAAAAAADwvw"
				],
				[
					274,
					2,
					"paste",
					null,
					"AgAAAEkHAAAAAAAA0wcAAAAAAAAAAAAA0wcAAAAAAABdCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkHAAAAAAAASQcAAAAAAAAAAAAAAADwvw"
				],
				[
					278,
					1,
					"insert",
					{
						"characters": "dup"
					},
					"BAAAAHgHAAAAAAAAeQcAAAAAAAAAAAAAeQcAAAAAAAB5BwAAAAAAAAYAAABvcGFxdWV5BwAAAAAAAHoHAAAAAAAAAAAAAHoHAAAAAAAAewcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgHAAAAAAAAfgcAAAAAAAAAAAAAAADwvw"
				],
				[
					286,
					1,
					"paste",
					null,
					"AgAAAFgHAAAAAAAAaQcAAAAAAAAAAAAAaQcAAAAAAABpBwAAAAAAABwAAABzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEq",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgHAAAAAAAAdAcAAAAAAAAAAAAAAADwvw"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": "\nws->ref"
					},
					"CQAAAIcHAAAAAAAAiAcAAAAAAAAAAAAAiAcAAAAAAACKBwAAAAAAAAAAAACKBwAAAAAAAIsHAAAAAAAAAAAAAIsHAAAAAAAAjAcAAAAAAAAAAAAAjAcAAAAAAACNBwAAAAAAAAAAAACNBwAAAAAAAI4HAAAAAAAAAAAAAI4HAAAAAAAAjwcAAAAAAAAAAAAAjwcAAAAAAACQBwAAAAAAAAAAAACQBwAAAAAAAJEHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcHAAAAAAAAhwcAAAAAAAAAAAAAAADwvw"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": "_count+"
					},
					"BwAAAJEHAAAAAAAAkgcAAAAAAAAAAAAAkgcAAAAAAACTBwAAAAAAAAAAAACTBwAAAAAAAJQHAAAAAAAAAAAAAJQHAAAAAAAAlQcAAAAAAAAAAAAAlQcAAAAAAACWBwAAAAAAAAAAAACWBwAAAAAAAJcHAAAAAAAAAAAAAJcHAAAAAAAAmAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJEHAAAAAAAAkQcAAAAAAAAAAAAAAADwvw"
				],
				[
					291,
					1,
					"left_delete",
					null,
					"AQAAAJcHAAAAAAAAlwcAAAAAAAABAAAAKw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgHAAAAAAAAmAcAAAAAAAAAAAAAAADwvw"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAJcHAAAAAAAAmAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJcHAAAAAAAAlwcAAAAAAAAAAAAAAADwvw"
				],
				[
					293,
					1,
					"left_delete",
					null,
					"AQAAAJcHAAAAAAAAlwcAAAAAAAABAAAAKw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgHAAAAAAAAmAcAAAAAAAAAAAAAAADwvw"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": "++"
					},
					"AgAAAIoHAAAAAAAAiwcAAAAAAAAAAAAAiwcAAAAAAACMBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoHAAAAAAAAigcAAAAAAAAAAAAAAAA0QA"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJkHAAAAAAAAmgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkHAAAAAAAAmQcAAAAAAAD////////vfw"
				],
				[
					298,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAAJoHAAAAAAAAmwcAAAAAAAAAAAAAmwcAAAAAAACdBwAAAAAAAAAAAACdBwAAAAAAAJ4HAAAAAAAAAAAAAJ4HAAAAAAAAnwcAAAAAAAAAAAAAnwcAAAAAAACgBwAAAAAAAAAAAACgBwAAAAAAAKEHAAAAAAAAAAAAAKEHAAAAAAAAogcAAAAAAAAAAAAAogcAAAAAAACjBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoHAAAAAAAAmgcAAAAAAAAAAAAAAADwvw"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": " ws;"
					},
					"BAAAAKMHAAAAAAAApAcAAAAAAAAAAAAApAcAAAAAAAClBwAAAAAAAAAAAAClBwAAAAAAAKYHAAAAAAAAAAAAAKYHAAAAAAAApwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMHAAAAAAAAowcAAAAAAAAAAAAAAADwvw"
				],
				[
					303,
					1,
					"cut",
					null,
					"AQAAAKcHAAAAAAAApwcAAAAAAAA8AAAACiAgcmV0dXJuIHdzLT5sd3NpID8gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzLT5sd3NpKSA6IDA7",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcHAAAAAAAA4wcAAAAAAAD////////vfw"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKkHAAAAAAAAqgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkHAAAAAAAAqQcAAAAAAAAAAAAAAABeQA"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": "int"
					},
					"BAAAAOMBAAAAAAAA5AEAAAAAAAAAAAAA5AEAAAAAAADkAQAAAAAAAAYAAABzaXplX3TkAQAAAAAAAOUBAAAAAAAAAAAAAOUBAAAAAAAA5gEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMBAAAAAAAA6QEAAAAAAAAAAAAAAADwvw"
				],
				[
					324,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB3CgAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCk1pbm5ldFdlYnNvY2tldCogd3NfbmV3KHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpOwpKU1ZhbHVlIG1pbm5ldF93c19uZXcoSlNDb250ZXh0KiBjdHgsIHN0cnVjdCBsd3MqIHdzaSk7CkpTVmFsdWUgbWlubmV0X3dzX29iamVjdChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CkpTVmFsdWUgbWlubmV0X3dzX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0V2Vic29ja2V0Kik7CkpTVmFsdWUgbWlubmV0X3dzX2Zyb213c2koSlNDb250ZXh0Kiwgc3RydWN0IGx3cyopOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogLy8gSlNPYmplY3QqIG9iajsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3A7CiAgc3RydWN0IHNlc3Npb25fZGF0YSogc2VzczsKICBKU1ZhbHVlIGhhbmRsZXI7CiAgaW50NjRfdCBzZXJpYWw7CiAgTWlubmV0U3RhdHVzIHN0YXR1czsKICBzdHJ1Y3QgcG9sbGZkIHBvbGw7CiAgaW50IGVycm9yOwogIEJPT0wgYmluYXJ5OwogIHN0cnVjdCBsaXN0X2hlYWQgbGluazsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKbHdzX3Nlc3Npb24oc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CgogIGlmKChvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSkpCiAgICByZXR1cm4gb3BhcXVlLT5zZXNzOwoKICByZXR1cm4gMDsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqIAp3c19kdXAoTWlubmV0V2Vic29ja2V0KiB3cykgewogICsrd3MtPnJlZl9jb3VudDsKICByZXR1cm4gd3M7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoTWlubmV0V2Vic29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSkgOiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBzZXNzaW9uX2RhdGEqCndzX3Nlc3Npb24oTWlubmV0V2Vic29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19zZXNzaW9uKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0Kgp3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKICByZXR1cm4gKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSA/IG9wYXF1ZS0+d3MgOiAwOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKbWlubmV0X3dzX2RhdGEoSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUob2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKbWlubmV0X3dzX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF93c19jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfV0VCU09DS0VUX0ggKi8KAAAAAAAAAAB3CgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4CAAAAAAAArgIAAAAAAAAAAAAAAADwvw"
				],
				[
					328,
					1,
					"cut",
					null,
					"AQAAAEcHAAAAAAAARwcAAAAAAABgAAAACnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0Kgp3c19kdXAoTWlubmV0V2Vic29ja2V0KiB3cykgewogICsrd3MtPnJlZl9jb3VudDsKICByZXR1cm4gd3M7Cn0K",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcHAAAAAAAApwcAAAAAAAAAAAAAAADwvw"
				],
				[
					339,
					1,
					"paste",
					null,
					"AgAAAF8CAAAAAAAAkQQAAAAAAAAAAAAAkQQAAAAAAACRBAAAAAAAAJQBAABNaW5uZXRXZWJzb2NrZXQqIHdzX25ldyhzdHJ1Y3QgbHdzKiwgSlNDb250ZXh0Kik7CnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogbHdzX29wYXF1ZShzdHJ1Y3QgbHdzKiB3c2ksIEpTQ29udGV4dCogY3R4KTsKSlNWYWx1ZSBtaW5uZXRfd3NfbmV3KEpTQ29udGV4dCogY3R4LCBzdHJ1Y3QgbHdzKiB3c2kpOwpKU1ZhbHVlIG1pbm5ldF93c19vYmplY3QoSlNDb250ZXh0Kiwgc3RydWN0IGx3cyopOwpKU1ZhbHVlIG1pbm5ldF93c193cmFwKEpTQ29udGV4dCosIE1pbm5ldFdlYnNvY2tldCopOwpKU1ZhbHVlIG1pbm5ldF93c19mcm9td3NpKEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3NfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlW10pOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMDAAAAAAAAXwIAAAAAAAAAAAAAAADwvw"
				],
				[
					344,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC1CgAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCkpTVmFsdWUgICAgICAgICAgICAgICAgICAgICAgbWlubmV0X3dzX25ldyhKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogICAgICAgICAgICAgd3NfbmV3KHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKdm9pZCAgICAgICAgICAgICAgICAgICAgICAgICB3c19mcmVlKE1pbm5ldFdlYnNvY2tldCosIEpTUnVudGltZSopOwpNaW5uZXRXZWJzb2NrZXQqICAgICAgICAgICAgIHdzX2R1cChNaW5uZXRXZWJzb2NrZXQqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSAgICAgICAgICAgICAgICAgICAgICBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBNaW5uZXRXZWJzb2NrZXQqKTsKSlNWYWx1ZSAgICAgICAgICAgICAgICAgICAgICBtaW5uZXRfd3NfZnJvbXdzaShKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CkpTVmFsdWUgICAgICAgICAgICAgICAgICAgICAgbWlubmV0X3dzX2NvbnN0cnVjdG9yKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwoKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF93c19jbGFzc19pZDsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU1ZhbHVlIG1pbm5ldF93c19wcm90bywgbWlubmV0X3dzX2N0b3I7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF93c19jbGFzczsKZXh0ZXJuIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF93c19wcm90b19mdW5jc1tdLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzW10sIG1pbm5ldF93c19wcm90b19kZWZzW107CmV4dGVybiBjb25zdCBzaXplX3QgbWlubmV0X3dzX3Byb3RvX2Z1bmNzX3NpemUsIG1pbm5ldF93c19zdGF0aWNfZnVuY3Nfc2l6ZSwgbWlubmV0X3dzX3Byb3RvX2RlZnNfc2l6ZTsKCnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSB7CiAgLy8gSlNPYmplY3QqIG9iajsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3A7CiAgc3RydWN0IHNlc3Npb25fZGF0YSogc2VzczsKICBKU1ZhbHVlIGhhbmRsZXI7CiAgaW50NjRfdCBzZXJpYWw7CiAgTWlubmV0U3RhdHVzIHN0YXR1czsKICBzdHJ1Y3QgcG9sbGZkIHBvbGw7CiAgaW50IGVycm9yOwogIEJPT0wgYmluYXJ5OwogIHN0cnVjdCBsaXN0X2hlYWQgbGluazsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKbHdzX3Nlc3Npb24oc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CgogIGlmKChvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSkpCiAgICByZXR1cm4gb3BhcXVlLT5zZXNzOwoKICByZXR1cm4gMDsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCndzX29wYXF1ZShNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiAgcmV0dXJuIHdzLT5sd3NpID8gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKd3Nfc2Vzc2lvbihNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiAgcmV0dXJuIHdzLT5sd3NpID8gbHdzX3Nlc3Npb24od3MtPmx3c2kpIDogMDsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCndzX2Zyb21fd3NpKHN0cnVjdCBsd3MqIHdzaSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwogIHJldHVybiAob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpID8gb3BhcXVlLT53cyA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0KgptaW5uZXRfd3NfZGF0YShKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZShvYmosIG1pbm5ldF93c19jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0KgptaW5uZXRfd3NfZGF0YTIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9XRUJTT0NLRVRfSCAqLwoAAAAAAAAAADAKAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJEEAAAAAAAAkQQAAAAAAAAAAAAAAADwvw"
				],
				[
					351,
					1,
					"left_delete",
					null,
					"AQAAAJQFAAAAAAAAlAUAAAAAAAAUAAAAICAvLyBKU09iamVjdCogb2JqOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQFAAAAAAAAqAUAAAAAAAAAAAAAAADwvw"
				],
				[
					369,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMACAAAAAAAAwQIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMACAAAAAAAAwAIAAAAAAAAAAAAAAADwvw"
				],
				[
					370,
					1,
					"paste",
					null,
					"AQAAAMECAAAAAAAABgMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMECAAAAAAAAwQIAAAAAAAAAAAAAAADwvw"
				],
				[
					371,
					1,
					"left_delete",
					null,
					"AQAAAAUDAAAAAAAABQMAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYDAAAAAAAABgMAAAAAAAAAAAAAAADwvw"
				],
				[
					376,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABhCgAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCkpTVmFsdWUgbWlubmV0X3dzX25ldyhKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogd3NfbmV3KHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKdm9pZCAgICAgICAgICAgICAgICAgICAgICAgICB3c19jbGVhcihNaW5uZXRXZWJzb2NrZXQqLCBKU1J1bnRpbWUqKTsKdm9pZCB3c19mcmVlKE1pbm5ldFdlYnNvY2tldCosIEpTUnVudGltZSopOwpNaW5uZXRXZWJzb2NrZXQqIHdzX2R1cChNaW5uZXRXZWJzb2NrZXQqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBNaW5uZXRXZWJzb2NrZXQqKTsKSlNWYWx1ZSBtaW5uZXRfd3NfZnJvbXdzaShKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CkpTVmFsdWUgbWlubmV0X3dzX2NvbnN0cnVjdG9yKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3dzX2NsYXNzX2lkOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3dzX3Byb3RvLCBtaW5uZXRfd3NfY3RvcjsKZXh0ZXJuIEpTQ2xhc3NEZWYgbWlubmV0X3dzX2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3dzX3Byb3RvX2Z1bmNzW10sIG1pbm5ldF93c19zdGF0aWNfZnVuY3NbXSwgbWlubmV0X3dzX3Byb3RvX2RlZnNbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfd3NfcHJvdG9fZnVuY3Nfc2l6ZSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc19zaXplLCBtaW5uZXRfd3NfcHJvdG9fZGVmc19zaXplOwoKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3A7CiAgc3RydWN0IHNlc3Npb25fZGF0YSogc2VzczsKICBKU1ZhbHVlIGhhbmRsZXI7CiAgaW50NjRfdCBzZXJpYWw7CiAgTWlubmV0U3RhdHVzIHN0YXR1czsKICBzdHJ1Y3QgcG9sbGZkIHBvbGw7CiAgaW50IGVycm9yOwogIEJPT0wgYmluYXJ5OwogIHN0cnVjdCBsaXN0X2hlYWQgbGluazsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKbHdzX3Nlc3Npb24oc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CgogIGlmKChvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSkpCiAgICByZXR1cm4gb3BhcXVlLT5zZXNzOwoKICByZXR1cm4gMDsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCndzX29wYXF1ZShNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiAgcmV0dXJuIHdzLT5sd3NpID8gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKd3Nfc2Vzc2lvbihNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiAgcmV0dXJuIHdzLT5sd3NpID8gbHdzX3Nlc3Npb24od3MtPmx3c2kpIDogMDsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCndzX2Zyb21fd3NpKHN0cnVjdCBsd3MqIHdzaSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwogIHJldHVybiAob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpID8gb3BhcXVlLT53cyA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0KgptaW5uZXRfd3NfZGF0YShKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZShvYmosIG1pbm5ldF93c19jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0KgptaW5uZXRfd3NfZGF0YTIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9XRUJTT0NLRVRfSCAqLwoAAAAAAAAAAEkKAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUDAAAAAAAABQMAAAAAAAAAAAAAAADwvw"
				],
				[
					381,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABJCgAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCkpTVmFsdWUgbWlubmV0X3dzX25ldyhKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogd3NfbmV3KHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKdm9pZCB3c19jbGVhcihNaW5uZXRXZWJzb2NrZXQqLCBKU1J1bnRpbWUqKTsKdm9pZCB3c19mcmVlKE1pbm5ldFdlYnNvY2tldCosIEpTUnVudGltZSopOwpNaW5uZXRXZWJzb2NrZXQqIHdzX2R1cChNaW5uZXRXZWJzb2NrZXQqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBNaW5uZXRXZWJzb2NrZXQqKTsKSlNWYWx1ZSBtaW5uZXRfd3NfZnJvbXdzaShKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CkpTVmFsdWUgbWlubmV0X3dzX2NvbnN0cnVjdG9yKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3dzX2NsYXNzX2lkOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3dzX3Byb3RvLCBtaW5uZXRfd3NfY3RvcjsKZXh0ZXJuIEpTQ2xhc3NEZWYgbWlubmV0X3dzX2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3dzX3Byb3RvX2Z1bmNzW10sIG1pbm5ldF93c19zdGF0aWNfZnVuY3NbXSwgbWlubmV0X3dzX3Byb3RvX2RlZnNbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfd3NfcHJvdG9fZnVuY3Nfc2l6ZSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc19zaXplLCBtaW5uZXRfd3NfcHJvdG9fZGVmc19zaXplOwoKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3A7CiAgc3RydWN0IHNlc3Npb25fZGF0YSogc2VzczsKICBKU1ZhbHVlIGhhbmRsZXI7CiAgaW50NjRfdCBzZXJpYWw7CiAgTWlubmV0U3RhdHVzIHN0YXR1czsKICBzdHJ1Y3QgcG9sbGZkIHBvbGw7CiAgaW50IGVycm9yOwogIEJPT0wgYmluYXJ5OwogIHN0cnVjdCBsaXN0X2hlYWQgbGluazsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKbHdzX3Nlc3Npb24oc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CgogIGlmKChvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSkpCiAgICByZXR1cm4gb3BhcXVlLT5zZXNzOwoKICByZXR1cm4gMDsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCndzX29wYXF1ZShNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiAgcmV0dXJuIHdzLT5sd3NpID8gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKd3Nfc2Vzc2lvbihNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiAgcmV0dXJuIHdzLT5sd3NpID8gbHdzX3Nlc3Npb24od3MtPmx3c2kpIDogMDsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCndzX2Zyb21fd3NpKHN0cnVjdCBsd3MqIHdzaSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwogIHJldHVybiAob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpID8gb3BhcXVlLT53cyA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0KgptaW5uZXRfd3NfZGF0YShKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZShvYmosIG1pbm5ldF93c19jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0KgptaW5uZXRfd3NfZGF0YTIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9XRUJTT0NLRVRfSCAqLwoAAAAAAAAAAE8KAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMYCAAAAAAAAxgIAAAAAAAAAAAAAAADwvw"
				],
				[
					388,
					1,
					"paste",
					null,
					"AgAAAF8CAAAAAAAAZQUAAAAAAAAAAAAAZQUAAAAAAABlBQAAAAAAAOABAABKU1ZhbHVlIG1pbm5ldF93c19uZXcoSlNDb250ZXh0Kiwgc3RydWN0IGx3cyopOwpNaW5uZXRXZWJzb2NrZXQqIHdzX25ldyhzdHJ1Y3QgbHdzKiwgSlNDb250ZXh0Kik7CnZvaWQgd3NfY2xlYXJfcnQoTWlubmV0V2Vic29ja2V0KiwgSlNSdW50aW1lKik7CnZvaWQgd3NfZnJlZV9ydChNaW5uZXRXZWJzb2NrZXQqLCBKU1J1bnRpbWUqKTsKTWlubmV0V2Vic29ja2V0KiB3c19kdXAoTWlubmV0V2Vic29ja2V0Kik7CnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogbHdzX29wYXF1ZShzdHJ1Y3QgbHdzKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgbWlubmV0X3dzX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0V2Vic29ja2V0Kik7CkpTVmFsdWUgbWlubmV0X3dzX2Zyb213c2koSlNDb250ZXh0Kiwgc3RydWN0IGx3cyopOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdKTs",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8EAAAAAAAAXwIAAAAAAAAAAAAAAADwvw"
				],
				[
					393,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB1CwAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCkpTVmFsdWUgICAgICAgICAgICAgICAgICAgICAgbWlubmV0X3dzX25ldyhKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogICAgICAgICAgICAgd3NfbmV3KHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKdm9pZCAgICAgICAgICAgICAgICAgICAgICAgICB3c19jbGVhcl9ydChNaW5uZXRXZWJzb2NrZXQqLCBKU1J1bnRpbWUqKTsKdm9pZCAgICAgICAgICAgICAgICAgICAgICAgICB3c19jbGVhcihNaW5uZXRXZWJzb2NrZXQqLCBKU0NvbnRleHQqKTsKdm9pZCAgICAgICAgICAgICAgICAgICAgICAgICB3c19mcmVlX3J0KE1pbm5ldFdlYnNvY2tldCosIEpTUnVudGltZSopOwp2b2lkICAgICAgICAgICAgICAgICAgICAgICAgIHdzX2ZyZWUoTWlubmV0V2Vic29ja2V0KiwgSlNDb250ZXh0Kik7Ck1pbm5ldFdlYnNvY2tldCogICAgICAgICAgICAgd3NfZHVwKE1pbm5ldFdlYnNvY2tldCopOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIGx3c19vcGFxdWUoc3RydWN0IGx3cyosIEpTQ29udGV4dCopOwpKU1ZhbHVlICAgICAgICAgICAgICAgICAgICAgIG1pbm5ldF93c193cmFwKEpTQ29udGV4dCosIE1pbm5ldFdlYnNvY2tldCopOwpKU1ZhbHVlICAgICAgICAgICAgICAgICAgICAgIG1pbm5ldF93c19mcm9td3NpKEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSAgICAgICAgICAgICAgICAgICAgICBtaW5uZXRfd3NfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSk7CgoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3dzX2NsYXNzX2lkOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3dzX3Byb3RvLCBtaW5uZXRfd3NfY3RvcjsKZXh0ZXJuIEpTQ2xhc3NEZWYgbWlubmV0X3dzX2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3dzX3Byb3RvX2Z1bmNzW10sIG1pbm5ldF93c19zdGF0aWNfZnVuY3NbXSwgbWlubmV0X3dzX3Byb3RvX2RlZnNbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfd3NfcHJvdG9fZnVuY3Nfc2l6ZSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc19zaXplLCBtaW5uZXRfd3NfcHJvdG9fZGVmc19zaXplOwoKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3A7CiAgc3RydWN0IHNlc3Npb25fZGF0YSogc2VzczsKICBKU1ZhbHVlIGhhbmRsZXI7CiAgaW50NjRfdCBzZXJpYWw7CiAgTWlubmV0U3RhdHVzIHN0YXR1czsKICBzdHJ1Y3QgcG9sbGZkIHBvbGw7CiAgaW50IGVycm9yOwogIEJPT0wgYmluYXJ5OwogIHN0cnVjdCBsaXN0X2hlYWQgbGluazsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKbHdzX3Nlc3Npb24oc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CgogIGlmKChvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSkpCiAgICByZXR1cm4gb3BhcXVlLT5zZXNzOwoKICByZXR1cm4gMDsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCndzX29wYXF1ZShNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiAgcmV0dXJuIHdzLT5sd3NpID8gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKd3Nfc2Vzc2lvbihNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiAgcmV0dXJuIHdzLT5sd3NpID8gbHdzX3Nlc3Npb24od3MtPmx3c2kpIDogMDsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCndzX2Zyb21fd3NpKHN0cnVjdCBsd3MqIHdzaSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwogIHJldHVybiAob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpID8gb3BhcXVlLT53cyA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0KgptaW5uZXRfd3NfZGF0YShKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZShvYmosIG1pbm5ldF93c19jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0KgptaW5uZXRfd3NfZGF0YTIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9XRUJTT0NLRVRfSCAqLwoAAAAAAAAAAKgKAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUFAAAAAAAAZQUAAAAAAAAAAAAAAADwvw"
				],
				[
					398,
					1,
					"paste",
					null,
					"AQAAAF8CAAAAAAAACgMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8CAAAAAAAAXwIAAAAAAAAAAAAAAADwvw"
				],
				[
					403,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAABTCwAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCnZvaWQgICAgICAgICAgICAgICAgICAgICAgICAgb3BhcXVlX2ZyZWVfcnQoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNSdW50aW1lKik7CnZvaWQgICAgICAgICAgICAgICAgICAgICAgICAgb3BhcXVlX2ZyZWUoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgbWlubmV0X3dzX25ldyhKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogd3NfbmV3KHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKdm9pZCB3c19jbGVhcl9ydChNaW5uZXRXZWJzb2NrZXQqLCBKU1J1bnRpbWUqKTsKdm9pZCB3c19jbGVhcihNaW5uZXRXZWJzb2NrZXQqLCBKU0NvbnRleHQqKTsKdm9pZCB3c19mcmVlX3J0KE1pbm5ldFdlYnNvY2tldCosIEpTUnVudGltZSopOwp2b2lkIHdzX2ZyZWUoTWlubmV0V2Vic29ja2V0KiwgSlNDb250ZXh0Kik7Ck1pbm5ldFdlYnNvY2tldCogd3NfZHVwKE1pbm5ldFdlYnNvY2tldCopOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIGx3c19vcGFxdWUoc3RydWN0IGx3cyosIEpTQ29udGV4dCopOwpKU1ZhbHVlIG1pbm5ldF93c193cmFwKEpTQ29udGV4dCosIE1pbm5ldFdlYnNvY2tldCopOwpKU1ZhbHVlIG1pbm5ldF93c19mcm9td3NpKEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3NfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIHN0cnVjdCBzb2NrZXQqIHdzOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcTsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcDsKICBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiBzZXNzOwogIEpTVmFsdWUgaGFuZGxlcjsKICBpbnQ2NF90IHNlcmlhbDsKICBNaW5uZXRTdGF0dXMgc3RhdHVzOwogIHN0cnVjdCBwb2xsZmQgcG9sbDsKICBpbnQgZXJyb3I7CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IGxpc3RfaGVhZCBsaW5rOwp9OwoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKd3Nfb3BhcXVlKE1pbm5ldFdlYnNvY2tldCogd3MpIHsKICByZXR1cm4gd3MtPmx3c2kgPyBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3MtPmx3c2kpIDogMDsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgp3c19zZXNzaW9uKE1pbm5ldFdlYnNvY2tldCogd3MpIHsKICByZXR1cm4gd3MtPmx3c2kgPyBsd3Nfc2Vzc2lvbih3cy0+bHdzaSkgOiAwOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKd3NfZnJvbV93c2koc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CiAgcmV0dXJuIChvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSkgPyBvcGFxdWUtPndzIDogMDsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAIwsAAAAAAAAAAAAAAAAAAAAAAAAjCwAAAAAAAAAAAAAAAAAAAAAAACMLAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoDAAAAAAAACgMAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAjCwAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCnZvaWQgb3BhcXVlX2ZyZWVfcnQoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNSdW50aW1lKik7CnZvaWQgb3BhcXVlX2ZyZWUoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgbWlubmV0X3dzX25ldyhKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogd3NfbmV3KHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKdm9pZCB3c19jbGVhcl9ydChNaW5uZXRXZWJzb2NrZXQqLCBKU1J1bnRpbWUqKTsKdm9pZCB3c19jbGVhcihNaW5uZXRXZWJzb2NrZXQqLCBKU0NvbnRleHQqKTsKdm9pZCB3c19mcmVlX3J0KE1pbm5ldFdlYnNvY2tldCosIEpTUnVudGltZSopOwp2b2lkIHdzX2ZyZWUoTWlubmV0V2Vic29ja2V0KiwgSlNDb250ZXh0Kik7Ck1pbm5ldFdlYnNvY2tldCogd3NfZHVwKE1pbm5ldFdlYnNvY2tldCopOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIGx3c19vcGFxdWUoc3RydWN0IGx3cyosIEpTQ29udGV4dCopOwpKU1ZhbHVlIG1pbm5ldF93c193cmFwKEpTQ29udGV4dCosIE1pbm5ldFdlYnNvY2tldCopOwpKU1ZhbHVlIG1pbm5ldF93c19mcm9td3NpKEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3NfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIHN0cnVjdCBzb2NrZXQqIHdzOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcTsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcDsKICBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiBzZXNzOwogIEpTVmFsdWUgaGFuZGxlcjsKICBpbnQ2NF90IHNlcmlhbDsKICBNaW5uZXRTdGF0dXMgc3RhdHVzOwogIHN0cnVjdCBwb2xsZmQgcG9sbDsKICBpbnQgZXJyb3I7CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IGxpc3RfaGVhZCBsaW5rOwp9OwoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKd3Nfb3BhcXVlKE1pbm5ldFdlYnNvY2tldCogd3MpIHsKICByZXR1cm4gd3MtPmx3c2kgPyBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3MtPmx3c2kpIDogMDsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgp3c19zZXNzaW9uKE1pbm5ldFdlYnNvY2tldCogd3MpIHsKICByZXR1cm4gd3MtPmx3c2kgPyBsd3Nfc2Vzc2lvbih3cy0+bHdzaSkgOiAwOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKd3NfZnJvbV93c2koc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CiAgcmV0dXJuIChvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSkgPyBvcGFxdWUtPndzIDogMDsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAIwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAQAAAAAAAA8BAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAjCwAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCnZvaWQgb3BhcXVlX2ZyZWVfcnQoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNSdW50aW1lKik7CnZvaWQgb3BhcXVlX2ZyZWUoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgbWlubmV0X3dzX25ldyhKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogd3NfbmV3KHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKdm9pZCB3c19jbGVhcl9ydChNaW5uZXRXZWJzb2NrZXQqLCBKU1J1bnRpbWUqKTsKdm9pZCB3c19jbGVhcihNaW5uZXRXZWJzb2NrZXQqLCBKU0NvbnRleHQqKTsKdm9pZCB3c19mcmVlX3J0KE1pbm5ldFdlYnNvY2tldCosIEpTUnVudGltZSopOwp2b2lkIHdzX2ZyZWUoTWlubmV0V2Vic29ja2V0KiwgSlNDb250ZXh0Kik7Ck1pbm5ldFdlYnNvY2tldCogd3NfZHVwKE1pbm5ldFdlYnNvY2tldCopOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIGx3c19vcGFxdWUoc3RydWN0IGx3cyosIEpTQ29udGV4dCopOwpKU1ZhbHVlIG1pbm5ldF93c193cmFwKEpTQ29udGV4dCosIE1pbm5ldFdlYnNvY2tldCopOwpKU1ZhbHVlIG1pbm5ldF93c19mcm9td3NpKEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3NfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIHN0cnVjdCBzb2NrZXQqIHdzOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcTsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcDsKICBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiBzZXNzOwogIEpTVmFsdWUgaGFuZGxlcjsKICBpbnQ2NF90IHNlcmlhbDsKICBNaW5uZXRTdGF0dXMgc3RhdHVzOwogIHN0cnVjdCBwb2xsZmQgcG9sbDsKICBpbnQgZXJyb3I7CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IGxpc3RfaGVhZCBsaW5rOwp9OwoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKd3Nfb3BhcXVlKE1pbm5ldFdlYnNvY2tldCogd3MpIHsKICByZXR1cm4gd3MtPmx3c2kgPyBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3MtPmx3c2kpIDogMDsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgp3c19zZXNzaW9uKE1pbm5ldFdlYnNvY2tldCogd3MpIHsKICByZXR1cm4gd3MtPmx3c2kgPyBsd3Nfc2Vzc2lvbih3cy0+bHdzaSkgOiAwOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKd3NfZnJvbV93c2koc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CiAgcmV0dXJuIChvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSkgPyBvcGFxdWUtPndzIDogMDsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAIwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAQAAAAAAAA8BAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAjCwAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCnZvaWQgb3BhcXVlX2ZyZWVfcnQoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNSdW50aW1lKik7CnZvaWQgb3BhcXVlX2ZyZWUoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgbWlubmV0X3dzX25ldyhKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogd3NfbmV3KHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKdm9pZCB3c19jbGVhcl9ydChNaW5uZXRXZWJzb2NrZXQqLCBKU1J1bnRpbWUqKTsKdm9pZCB3c19jbGVhcihNaW5uZXRXZWJzb2NrZXQqLCBKU0NvbnRleHQqKTsKdm9pZCB3c19mcmVlX3J0KE1pbm5ldFdlYnNvY2tldCosIEpTUnVudGltZSopOwp2b2lkIHdzX2ZyZWUoTWlubmV0V2Vic29ja2V0KiwgSlNDb250ZXh0Kik7Ck1pbm5ldFdlYnNvY2tldCogd3NfZHVwKE1pbm5ldFdlYnNvY2tldCopOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIGx3c19vcGFxdWUoc3RydWN0IGx3cyosIEpTQ29udGV4dCopOwpKU1ZhbHVlIG1pbm5ldF93c193cmFwKEpTQ29udGV4dCosIE1pbm5ldFdlYnNvY2tldCopOwpKU1ZhbHVlIG1pbm5ldF93c19mcm9td3NpKEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKSlNWYWx1ZSBtaW5uZXRfd3NfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlIGFyZ3ZbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIHN0cnVjdCBzb2NrZXQqIHdzOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcTsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcDsKICBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiBzZXNzOwogIEpTVmFsdWUgaGFuZGxlcjsKICBpbnQ2NF90IHNlcmlhbDsKICBNaW5uZXRTdGF0dXMgc3RhdHVzOwogIHN0cnVjdCBwb2xsZmQgcG9sbDsKICBpbnQgZXJyb3I7CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IGxpc3RfaGVhZCBsaW5rOwp9OwoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKd3Nfb3BhcXVlKE1pbm5ldFdlYnNvY2tldCogd3MpIHsKICByZXR1cm4gd3MtPmx3c2kgPyBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3MtPmx3c2kpIDogMDsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgp3c19zZXNzaW9uKE1pbm5ldFdlYnNvY2tldCogd3MpIHsKICByZXR1cm4gd3MtPmx3c2kgPyBsd3Nfc2Vzc2lvbih3cy0+bHdzaSkgOiAwOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKd3NfZnJvbV93c2koc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CiAgcmV0dXJuIChvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSkgPyBvcGFxdWUtPndzIDogMDsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAIwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAQAAAAAAAA8BAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "struct"
					},
					"BgAAAC8DAAAAAAAAMAMAAAAAAAAAAAAAMAMAAAAAAAAxAwAAAAAAAAAAAAAxAwAAAAAAADIDAAAAAAAAAAAAADIDAAAAAAAAMwMAAAAAAAAAAAAAMwMAAAAAAAA0AwAAAAAAAAAAAAA0AwAAAAAAADUDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwMAAAAAAAAvAwAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADUDAAAAAAAANgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQMAAAAAAAA1AwAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADUDAAAAAAAANgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQMAAAAAAAA1AwAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					7,
					"left_delete",
					null,
					"BwAAADUDAAAAAAAANQMAAAAAAAABAAAAIDQDAAAAAAAANAMAAAAAAAABAAAAdDMDAAAAAAAAMwMAAAAAAAABAAAAYzIDAAAAAAAAMgMAAAAAAAABAAAAdTEDAAAAAAAAMQMAAAAAAAABAAAAcjADAAAAAAAAMAMAAAAAAAABAAAAdC8DAAAAAAAALwMAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAANgMAAAAAAAA2AwAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "MinnetSession*ses"
					},
					"EQAAAC8DAAAAAAAAMAMAAAAAAAAAAAAAMAMAAAAAAAAxAwAAAAAAAAAAAAAxAwAAAAAAADIDAAAAAAAAAAAAADIDAAAAAAAAMwMAAAAAAAAAAAAAMwMAAAAAAAA0AwAAAAAAAAAAAAA0AwAAAAAAADUDAAAAAAAAAAAAADUDAAAAAAAANgMAAAAAAAAAAAAANgMAAAAAAAA3AwAAAAAAAAAAAAA3AwAAAAAAADgDAAAAAAAAAAAAADgDAAAAAAAAOQMAAAAAAAAAAAAAOQMAAAAAAAA6AwAAAAAAAAAAAAA6AwAAAAAAADsDAAAAAAAAAAAAADsDAAAAAAAAPAMAAAAAAAAAAAAAPAMAAAAAAAA9AwAAAAAAAAAAAAA9AwAAAAAAAD4DAAAAAAAAAAAAAD4DAAAAAAAAPwMAAAAAAAAAAAAAPwMAAAAAAABAAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwMAAAAAAAAvAwAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "s,"
					},
					"AgAAAEADAAAAAAAAQQMAAAAAAAAAAAAAQQMAAAAAAABCAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAMAAAAAAABAAwAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAcDAAAAAAAACAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwMAAAAAAAAHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"paste",
					null,
					"AQAAAAgDAAAAAAAAGgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAMAAAAAAAAIAwAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					4,
					"left_delete",
					null,
					"BAAAABkDAAAAAAAAGQMAAAAAAAABAAAAcxgDAAAAAAAAGAMAAAAAAAABAAAAcxcDAAAAAAAAFwMAAAAAAAABAAAAZRYDAAAAAAAAFgMAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAGgMAAAAAAAAaAwAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"paste",
					null,
					"AQAAAOsEAAAAAAAA+gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wQAAAAAAADrBAAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABVCwAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCnZvaWQgb3BhcXVlX2ZyZWVfcnQoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNSdW50aW1lKik7CnZvaWQgb3BhcXVlX2ZyZWUoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgbWlubmV0X3dzX25ldyhKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKixNaW5uZXRTZXNzaW9uKik7Ck1pbm5ldFdlYnNvY2tldCogd3NfbmV3KHN0cnVjdCBsd3MqLCBNaW5uZXRTZXNzaW9uKnNlc3MsIEpTQ29udGV4dCopOwp2b2lkIHdzX2NsZWFyX3J0KE1pbm5ldFdlYnNvY2tldCosIEpTUnVudGltZSopOwp2b2lkIHdzX2NsZWFyKE1pbm5ldFdlYnNvY2tldCosIEpTQ29udGV4dCopOwp2b2lkIHdzX2ZyZWVfcnQoTWlubmV0V2Vic29ja2V0KiwgSlNSdW50aW1lKik7CnZvaWQgd3NfZnJlZShNaW5uZXRXZWJzb2NrZXQqLCBKU0NvbnRleHQqKTsKTWlubmV0V2Vic29ja2V0KiB3c19kdXAoTWlubmV0V2Vic29ja2V0Kik7CnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogbHdzX29wYXF1ZShzdHJ1Y3QgbHdzKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgbWlubmV0X3dzX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0V2Vic29ja2V0Kik7CkpTVmFsdWUgbWlubmV0X3dzX2Zyb213c2koSlNDb250ZXh0Kiwgc3RydWN0IGx3cyosTWlubmV0U2Vzc2lvbiopOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF93c19jbGFzc19pZDsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU1ZhbHVlIG1pbm5ldF93c19wcm90bywgbWlubmV0X3dzX2N0b3I7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF93c19jbGFzczsKZXh0ZXJuIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF93c19wcm90b19mdW5jc1tdLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzW10sIG1pbm5ldF93c19wcm90b19kZWZzW107CmV4dGVybiBjb25zdCBzaXplX3QgbWlubmV0X3dzX3Byb3RvX2Z1bmNzX3NpemUsIG1pbm5ldF93c19zdGF0aWNfZnVuY3Nfc2l6ZSwgbWlubmV0X3dzX3Byb3RvX2RlZnNfc2l6ZTsKCnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSB7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgSlNWYWx1ZSBoYW5kbGVyOwogIGludDY0X3Qgc2VyaWFsOwogIE1pbm5ldFN0YXR1cyBzdGF0dXM7CiAgc3RydWN0IHBvbGxmZCBwb2xsOwogIGludCBlcnJvcjsKICBCT09MIGJpbmFyeTsKICBzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7Cn07CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBzZXNzaW9uX2RhdGEqCmx3c19zZXNzaW9uKHN0cnVjdCBsd3MqIHdzaSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZS0+c2VzczsKCiAgcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoTWlubmV0V2Vic29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSkgOiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBzZXNzaW9uX2RhdGEqCndzX3Nlc3Npb24oTWlubmV0V2Vic29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19zZXNzaW9uKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0Kgp3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKICByZXR1cm4gKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSA/IG9wYXF1ZS0+d3MgOiAwOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKbWlubmV0X3dzX2RhdGEoSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUob2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKbWlubmV0X3dzX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF93c19jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfV0VCU09DS0VUX0ggKi8KAAAAAAAAAABYCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gQAAAAAAAD6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"cut",
					null,
					"AQAAAAAKAAAAAAAAAAoAAAAAAAAgAAAAID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk",
					"AQAAAAAAAAABAAAAAAoAAAAAAAAgCgAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"paste",
					null,
					"AQAAAO4JAAAAAAAADgoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gkAAAAAAADuCQAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"left_delete",
					null,
					"AQAAABkKAAAAAAAAGQoAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAGgoAAAAAAAAaCgAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"left_delete",
					null,
					"AQAAAB8KAAAAAAAAHwoAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAIAoAAAAAAAAgCgAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABWCwAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCnZvaWQgb3BhcXVlX2ZyZWVfcnQoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNSdW50aW1lKik7CnZvaWQgb3BhcXVlX2ZyZWUoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgbWlubmV0X3dzX25ldyhKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKiwgTWlubmV0U2Vzc2lvbiopOwpNaW5uZXRXZWJzb2NrZXQqIHdzX25ldyhzdHJ1Y3QgbHdzKiwgTWlubmV0U2Vzc2lvbiogc2VzcywgSlNDb250ZXh0Kik7CnZvaWQgd3NfY2xlYXJfcnQoTWlubmV0V2Vic29ja2V0KiwgSlNSdW50aW1lKik7CnZvaWQgd3NfY2xlYXIoTWlubmV0V2Vic29ja2V0KiwgSlNDb250ZXh0Kik7CnZvaWQgd3NfZnJlZV9ydChNaW5uZXRXZWJzb2NrZXQqLCBKU1J1bnRpbWUqKTsKdm9pZCB3c19mcmVlKE1pbm5ldFdlYnNvY2tldCosIEpTQ29udGV4dCopOwpNaW5uZXRXZWJzb2NrZXQqIHdzX2R1cChNaW5uZXRXZWJzb2NrZXQqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBNaW5uZXRXZWJzb2NrZXQqKTsKSlNWYWx1ZSBtaW5uZXRfd3NfZnJvbXdzaShKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKiwgTWlubmV0U2Vzc2lvbiopOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWUgYXJndltdKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF93c19jbGFzc19pZDsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU1ZhbHVlIG1pbm5ldF93c19wcm90bywgbWlubmV0X3dzX2N0b3I7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF93c19jbGFzczsKZXh0ZXJuIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF93c19wcm90b19mdW5jc1tdLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzW10sIG1pbm5ldF93c19wcm90b19kZWZzW107CmV4dGVybiBjb25zdCBzaXplX3QgbWlubmV0X3dzX3Byb3RvX2Z1bmNzX3NpemUsIG1pbm5ldF93c19zdGF0aWNfZnVuY3Nfc2l6ZSwgbWlubmV0X3dzX3Byb3RvX2RlZnNfc2l6ZTsKCnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSB7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgSlNWYWx1ZSBoYW5kbGVyOwogIGludDY0X3Qgc2VyaWFsOwogIE1pbm5ldFN0YXR1cyBzdGF0dXM7CiAgc3RydWN0IHBvbGxmZCBwb2xsOwogIGludCBlcnJvcjsKICBCT09MIGJpbmFyeTsKICBzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7Cn07CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBzZXNzaW9uX2RhdGEqCmx3c19zZXNzaW9uKHN0cnVjdCBsd3MqIHdzaSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZS0+c2VzczsKCiAgcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoTWlubmV0V2Vic29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSkgOiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBzZXNzaW9uX2RhdGEqCndzX3Nlc3Npb24oTWlubmV0V2Vic29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19zZXNzaW9uKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0Kgp3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpOwogIHJldHVybiBvcGFxdWUgPyBvcGFxdWUtPndzIDogMDsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAWgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwMAAAAAAAAxAwAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"paste",
					null,
					"AgAAAF8CAAAAAAAAgwYAAAAAAAAAAAAAgwYAAAAAAACDBgAAAAAAAO0CAAB2b2lkIG9wYXF1ZV9mcmVlX3J0KHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSosIEpTUnVudGltZSopOwp2b2lkIG9wYXF1ZV9mcmVlKHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSosIEpTQ29udGV4dCopOwpKU1ZhbHVlIG1pbm5ldF93c19uZXcoSlNDb250ZXh0Kiwgc3RydWN0IGx3cyosIE1pbm5ldFNlc3Npb24qKTsKTWlubmV0V2Vic29ja2V0KiB3c19mcm9td3NpKHN0cnVjdCBsd3MqLCBNaW5uZXRTZXNzaW9uKiBzZXNzLCBKU0NvbnRleHQqKTsKdm9pZCB3c19jbGVhcl9ydChNaW5uZXRXZWJzb2NrZXQqLCBKU1J1bnRpbWUqKTsKdm9pZCB3c19jbGVhcihNaW5uZXRXZWJzb2NrZXQqLCBKU0NvbnRleHQqKTsKdm9pZCB3c19mcmVlX3J0KE1pbm5ldFdlYnNvY2tldCosIEpTUnVudGltZSopOwp2b2lkIHdzX2ZyZWUoTWlubmV0V2Vic29ja2V0KiwgSlNDb250ZXh0Kik7Ck1pbm5ldFdlYnNvY2tldCogd3NfZHVwKE1pbm5ldFdlYnNvY2tldCopOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIGx3c19vcGFxdWUoc3RydWN0IGx3cyosIEpTQ29udGV4dCopOwpKU1ZhbHVlIG1pbm5ldF93c193cmFwKEpTQ29udGV4dCosIE1pbm5ldFdlYnNvY2tldCopOwpKU1ZhbHVlIG1pbm5ldF93c19mcm9td3NpKEpTQ29udGV4dCosIHN0cnVjdCBsd3MqLCBNaW5uZXRTZXNzaW9uKik7CkpTVmFsdWUgbWlubmV0X3dzX2NvbnN0cnVjdG9yKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOw",
					"AQAAAAAAAAABAAAATAUAAAAAAABfAgAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACRDAAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCkpTVmFsdWUgICAgICAgICAgICAgICAgICAgICAgbWlubmV0X3dzX25ldyhKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKiwgTWlubmV0U2Vzc2lvbiopOwpNaW5uZXRXZWJzb2NrZXQqICAgICAgICAgICAgIHdzX2Zyb213c2koc3RydWN0IGx3cyosIE1pbm5ldFNlc3Npb24qLCBKU0NvbnRleHQqKTsKdm9pZCAgICAgICAgICAgICAgICAgICAgICAgICBvcGFxdWVfZnJlZV9ydChzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqLCBKU1J1bnRpbWUqKTsKdm9pZCAgICAgICAgICAgICAgICAgICAgICAgICBvcGFxdWVfZnJlZShzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqLCBKU0NvbnRleHQqKTsKdm9pZCAgICAgICAgICAgICAgICAgICAgICAgICB3c19jbGVhcl9ydChNaW5uZXRXZWJzb2NrZXQqLCBKU1J1bnRpbWUqKTsKdm9pZCAgICAgICAgICAgICAgICAgICAgICAgICB3c19jbGVhcihNaW5uZXRXZWJzb2NrZXQqLCBKU0NvbnRleHQqKTsKdm9pZCAgICAgICAgICAgICAgICAgICAgICAgICB3c19mcmVlX3J0KE1pbm5ldFdlYnNvY2tldCosIEpTUnVudGltZSopOwp2b2lkICAgICAgICAgICAgICAgICAgICAgICAgIHdzX2ZyZWUoTWlubmV0V2Vic29ja2V0KiwgSlNDb250ZXh0Kik7Ck1pbm5ldFdlYnNvY2tldCogICAgICAgICAgICAgd3NfZHVwKE1pbm5ldFdlYnNvY2tldCopOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZV9uZXcoSlNDb250ZXh0Kik7CnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogbHdzX29wYXF1ZShzdHJ1Y3QgbHdzKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgICAgICAgICAgICAgICAgICAgICAgbWlubmV0X3dzX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0V2Vic29ja2V0Kik7CkpTVmFsdWUgICAgICAgICAgICAgICAgICAgICAgbWlubmV0X3dzX2Zyb213c2koSlNDb250ZXh0Kiwgc3RydWN0IGx3cyosIE1pbm5ldFNlc3Npb24qKTsKSlNWYWx1ZSAgICAgICAgICAgICAgICAgICAgICBtaW5uZXRfd3NfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBpbnQsIEpTVmFsdWVDb25zdCBhcmd2W10pOwoKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF93c19jbGFzc19pZDsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU1ZhbHVlIG1pbm5ldF93c19wcm90bywgbWlubmV0X3dzX2N0b3I7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF93c19jbGFzczsKZXh0ZXJuIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF93c19wcm90b19mdW5jc1tdLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzW10sIG1pbm5ldF93c19wcm90b19kZWZzW107CmV4dGVybiBjb25zdCBzaXplX3QgbWlubmV0X3dzX3Byb3RvX2Z1bmNzX3NpemUsIG1pbm5ldF93c19zdGF0aWNfZnVuY3Nfc2l6ZSwgbWlubmV0X3dzX3Byb3RvX2RlZnNfc2l6ZTsKCnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSB7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgSlNWYWx1ZSBoYW5kbGVyOwogIGludDY0X3Qgc2VyaWFsOwogIE1pbm5ldFN0YXR1cyBzdGF0dXM7CiAgc3RydWN0IHBvbGxmZCBwb2xsOwogIGludCBlcnJvcjsKICBCT09MIGJpbmFyeTsKICBzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7Cn07CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBzZXNzaW9uX2RhdGEqCmx3c19zZXNzaW9uKHN0cnVjdCBsd3MqIHdzaSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZS0+c2VzczsKCiAgcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoTWlubmV0V2Vic29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSkgOiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBzZXNzaW9uX2RhdGEqCndzX3Nlc3Npb24oTWlubmV0V2Vic29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19zZXNzaW9uKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0Kgp3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpOwogIHJldHVybiBvcGFxdWUgPyBvcGFxdWUtPndzIDogMDsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAlAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwYAAAAAAACDBgAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"left_delete",
					null,
					"AQAAAF8CAAAAAAAAXwIAAAAAAABAAAAASlNWYWx1ZSBtaW5uZXRfd3NfbmV3KEpTQ29udGV4dCosIHN0cnVjdCBsd3MqLCBNaW5uZXRTZXNzaW9uKik7Cg",
					"AQAAAAAAAAABAAAAXwIAAAAAAACfAgAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"paste",
					null,
					"AQAAAJ0EAAAAAAAAsQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQQAAAAAAACdBAAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALEEAAAAAAAAsgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQQAAAAAAACxBAAAAAAAAAAAAAAAAPC/"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJ0EAAAAAAAAngQAAAAAAAAAAAAAngQAAAAAAACeBAAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAAnQQAAAAAAACeBAAAAAAAAAAAAAAAAPC/"
				],
				[
					249,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABpCwAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCk1pbm5ldFdlYnNvY2tldCogd3NfZnJvbXdzaShzdHJ1Y3QgbHdzKiwgTWlubmV0U2Vzc2lvbiosIEpTQ29udGV4dCopOwp2b2lkIG9wYXF1ZV9mcmVlX3J0KHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSosIEpTUnVudGltZSopOwp2b2lkIG9wYXF1ZV9mcmVlKHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSosIEpTQ29udGV4dCopOwp2b2lkIHdzX2NsZWFyX3J0KE1pbm5ldFdlYnNvY2tldCosIEpTUnVudGltZSopOwp2b2lkIHdzX2NsZWFyKE1pbm5ldFdlYnNvY2tldCosIEpTQ29udGV4dCopOwp2b2lkIHdzX2ZyZWVfcnQoTWlubmV0V2Vic29ja2V0KiwgSlNSdW50aW1lKik7CnZvaWQgd3NfZnJlZShNaW5uZXRXZWJzb2NrZXQqLCBKU0NvbnRleHQqKTsKTWlubmV0V2Vic29ja2V0KiB3c19kdXAoTWlubmV0V2Vic29ja2V0Kik7CnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlX25ldyhKU0NvbnRleHQqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCAgIEpTVmFsdWVDb25zdCBwcm90byxNaW5uZXRXZWJzb2NrZXQqKTsKSlNWYWx1ZSBtaW5uZXRfd3NfZnJvbXdzaShKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKiwgTWlubmV0U2Vzc2lvbiopOwpKU1ZhbHVlIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfd3NfcHJvdG8sIG1pbm5ldF93c19jdG9yOwpleHRlcm4gSlNDbGFzc0RlZiBtaW5uZXRfd3NfY2xhc3M7CmV4dGVybiBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfd3NfcHJvdG9fZnVuY3NbXSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc1tdLCBtaW5uZXRfd3NfcHJvdG9fZGVmc1tdOwpleHRlcm4gY29uc3Qgc2l6ZV90IG1pbm5ldF93c19wcm90b19mdW5jc19zaXplLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzX3NpemUsIG1pbm5ldF93c19wcm90b19kZWZzX3NpemU7CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEgewogIHN0cnVjdCBzb2NrZXQqIHdzOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcTsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcDsKICBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiBzZXNzOwogIEpTVmFsdWUgaGFuZGxlcjsKICBpbnQ2NF90IHNlcmlhbDsKICBNaW5uZXRTdGF0dXMgc3RhdHVzOwogIHN0cnVjdCBwb2xsZmQgcG9sbDsKICBpbnQgZXJyb3I7CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IGxpc3RfaGVhZCBsaW5rOwp9OwoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKd3Nfb3BhcXVlKE1pbm5ldFdlYnNvY2tldCogd3MpIHsKICByZXR1cm4gd3MtPmx3c2kgPyBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3MtPmx3c2kpIDogMDsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgp3c19zZXNzaW9uKE1pbm5ldFdlYnNvY2tldCogd3MpIHsKICByZXR1cm4gd3MtPmx3c2kgPyBsd3Nfc2Vzc2lvbih3cy0+bHdzaSkgOiAwOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKd3NfZnJvbV93c2koc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKTsKICByZXR1cm4gb3BhcXVlID8gb3BhcXVlLT53cyA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0KgptaW5uZXRfd3NfZGF0YShKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZShvYmosIG1pbm5ldF93c19jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0KgptaW5uZXRfd3NfZGF0YTIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9XRUJTT0NLRVRfSCAqLwoAAAAAAAAAAGgLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQQAAAAAAABfBAAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABoCwAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCk1pbm5ldFdlYnNvY2tldCogd3NfZnJvbXdzaShzdHJ1Y3QgbHdzKiwgTWlubmV0U2Vzc2lvbiosIEpTQ29udGV4dCopOwp2b2lkIG9wYXF1ZV9mcmVlX3J0KHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSosIEpTUnVudGltZSopOwp2b2lkIG9wYXF1ZV9mcmVlKHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSosIEpTQ29udGV4dCopOwp2b2lkIHdzX2NsZWFyX3J0KE1pbm5ldFdlYnNvY2tldCosIEpTUnVudGltZSopOwp2b2lkIHdzX2NsZWFyKE1pbm5ldFdlYnNvY2tldCosIEpTQ29udGV4dCopOwp2b2lkIHdzX2ZyZWVfcnQoTWlubmV0V2Vic29ja2V0KiwgSlNSdW50aW1lKik7CnZvaWQgd3NfZnJlZShNaW5uZXRXZWJzb2NrZXQqLCBKU0NvbnRleHQqKTsKTWlubmV0V2Vic29ja2V0KiB3c19kdXAoTWlubmV0V2Vic29ja2V0Kik7CnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlX25ldyhKU0NvbnRleHQqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QgcHJvdG8sIE1pbm5ldFdlYnNvY2tldCopOwpKU1ZhbHVlIG1pbm5ldF93c19mcm9td3NpKEpTQ29udGV4dCosIHN0cnVjdCBsd3MqLCBNaW5uZXRTZXNzaW9uKik7CkpTVmFsdWUgbWlubmV0X3dzX2NvbnN0cnVjdG9yKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF93c19jbGFzc19pZDsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU1ZhbHVlIG1pbm5ldF93c19wcm90bywgbWlubmV0X3dzX2N0b3I7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF93c19jbGFzczsKZXh0ZXJuIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF93c19wcm90b19mdW5jc1tdLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzW10sIG1pbm5ldF93c19wcm90b19kZWZzW107CmV4dGVybiBjb25zdCBzaXplX3QgbWlubmV0X3dzX3Byb3RvX2Z1bmNzX3NpemUsIG1pbm5ldF93c19zdGF0aWNfZnVuY3Nfc2l6ZSwgbWlubmV0X3dzX3Byb3RvX2RlZnNfc2l6ZTsKCnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSB7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgSlNWYWx1ZSBoYW5kbGVyOwogIGludDY0X3Qgc2VyaWFsOwogIE1pbm5ldFN0YXR1cyBzdGF0dXM7CiAgc3RydWN0IHBvbGxmZCBwb2xsOwogIGludCBlcnJvcjsKICBCT09MIGJpbmFyeTsKICBzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7Cn07CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBzZXNzaW9uX2RhdGEqCmx3c19zZXNzaW9uKHN0cnVjdCBsd3MqIHdzaSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZS0+c2VzczsKCiAgcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoTWlubmV0V2Vic29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSkgOiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBzZXNzaW9uX2RhdGEqCndzX3Nlc3Npb24oTWlubmV0V2Vic29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19zZXNzaW9uKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0Kgp3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpOwogIHJldHVybiBvcGFxdWUgPyBvcGFxdWUtPndzIDogMDsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAIQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQQAAAAAAABfBAAAAAAAAAAAAAAAAPC/"
				],
				[
					255,
					1,
					"paste",
					null,
					"AQAAAFIEAAAAAAAAbwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgQAAAAAAABSBAAAAAAAAAAAAAAAAPC/"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFIEAAAAAAAAUwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgQAAAAAAABSBAAAAAAAAAAAAAAAAPC/"
				],
				[
					271,
					1,
					"paste",
					null,
					"AgAAAF8CAAAAAAAANgYAAAAAAAAAAAAANgYAAAAAAAA2BgAAAAAAANICAAB2b2lkIG9wYXF1ZV9mcmVlX3J0KHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSosIEpTUnVudGltZSopOwp2b2lkIG9wYXF1ZV9mcmVlKHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSosIEpTQ29udGV4dCopOwpKU1ZhbHVlIG1pbm5ldF93c19uZXcoSlNDb250ZXh0Kiwgc3RydWN0IGx3cyopOwpNaW5uZXRXZWJzb2NrZXQqIHdzX25ldyhzdHJ1Y3QgbHdzKiwgSlNDb250ZXh0Kik7CnZvaWQgd3NfY2xlYXJfcnQoTWlubmV0V2Vic29ja2V0KiwgSlNSdW50aW1lKik7CnZvaWQgd3NfY2xlYXIoTWlubmV0V2Vic29ja2V0KiwgSlNDb250ZXh0Kik7CnZvaWQgd3NfZnJlZV9ydChNaW5uZXRXZWJzb2NrZXQqLCBKU1J1bnRpbWUqKTsKdm9pZCB3c19mcmVlKE1pbm5ldFdlYnNvY2tldCosIEpTQ29udGV4dCopOwpNaW5uZXRXZWJzb2NrZXQqIHdzX2R1cChNaW5uZXRXZWJzb2NrZXQqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqLHN0cnVjdCBzZXNzaW9uX2RhdGEgKiBzZXNzaW9uLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBNaW5uZXRXZWJzb2NrZXQqKTsKSlNWYWx1ZSBtaW5uZXRfd3NfZnJvbXdzaShKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKik7CkpTVmFsdWUgbWlubmV0X3dzX2NvbnN0cnVjdG9yKEpTQ29udGV4dCosIEpTVmFsdWUsIGludCwgSlNWYWx1ZSBhcmd2W10pOw",
					"AQAAAAAAAAABAAAAMQUAAAAAAABfAgAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"paste",
					null,
					"AgAAAF8CAAAAAAAATAYAAAAAAAAAAAAATAYAAAAAAABMBgAAAAAAANYDAABNaW5uZXRXZWJzb2NrZXQqICAgICAgICAgICAgIHdzX25ldyhzdHJ1Y3QgbHdzKiwgSlNDb250ZXh0Kik7CnZvaWQgICAgICAgICAgICAgICAgICAgICAgICAgb3BhcXVlX2ZyZWVfcnQoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNSdW50aW1lKik7CnZvaWQgICAgICAgICAgICAgICAgICAgICAgICAgb3BhcXVlX2ZyZWUoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNDb250ZXh0Kik7CnZvaWQgICAgICAgICAgICAgICAgICAgICAgICAgd3NfY2xlYXJfcnQoTWlubmV0V2Vic29ja2V0KiwgSlNSdW50aW1lKik7CnZvaWQgICAgICAgICAgICAgICAgICAgICAgICAgd3NfY2xlYXIoTWlubmV0V2Vic29ja2V0KiwgSlNDb250ZXh0Kik7CnZvaWQgICAgICAgICAgICAgICAgICAgICAgICAgd3NfZnJlZV9ydChNaW5uZXRXZWJzb2NrZXQqLCBKU1J1bnRpbWUqKTsKdm9pZCAgICAgICAgICAgICAgICAgICAgICAgICB3c19mcmVlKE1pbm5ldFdlYnNvY2tldCosIEpTQ29udGV4dCopOwpNaW5uZXRXZWJzb2NrZXQqICAgICAgICAgICAgIHdzX2R1cChNaW5uZXRXZWJzb2NrZXQqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWVfbmV3KEpTQ29udGV4dCosIHN0cnVjdCBzZXNzaW9uX2RhdGEqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqLCBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgICAgICAgICAgICAgICAgICAgICAgbWlubmV0X3dzX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0V2Vic29ja2V0Kik7CkpTVmFsdWUgICAgICAgICAgICAgICAgICAgICAgbWlubmV0X3dzX2Zyb213c2koSlNDb250ZXh0Kiwgc3RydWN0IGx3cyopOwpKU1ZhbHVlICAgICAgICAgICAgICAgICAgICAgIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7",
					"AQAAAAAAAAABAAAANQYAAAAAAABfAgAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					1,
					"cut",
					null,
					"AQAAAOEEAAAAAAAA4QQAAAAAAAAUAAAAc3RydWN0IHNlc3Npb25fZGF0YSo",
					"AQAAAAAAAAABAAAA4QQAAAAAAAD1BAAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"paste",
					null,
					"AQAAANUEAAAAAAAA6QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QQAAAAAAADVBAAAAAAAAAAAAAAAAPC/"
				],
				[
					325,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOkEAAAAAAAA6gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QQAAAAAAADpBAAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					2,
					"left_delete",
					null,
					"AgAAAPUEAAAAAAAA9QQAAAAAAAABAAAAIPQEAAAAAAAA9AQAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA9gQAAAAAAAD2BAAAAAAAAAAAAAAAAPC/"
				],
				[
					333,
					1,
					"paste",
					null,
					"AQAAAOAFAAAAAAAA+gUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AUAAAAAAADgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					338,
					4,
					"left_delete",
					null,
					"BAAAAPkFAAAAAAAA+QUAAAAAAAABAAAAc/gFAAAAAAAA+AUAAAAAAAABAAAAc/cFAAAAAAAA9wUAAAAAAAABAAAAZfYFAAAAAAAA9gUAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA+gUAAAAAAAD6BQAAAAAAAAAAAAAAAPC/"
				],
				[
					343,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABwDAAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCk1pbm5ldFdlYnNvY2tldCogICAgICAgICAgICAgd3NfbmV3KHN0cnVjdCBsd3MqLCBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiwgSlNDb250ZXh0Kik7CnZvaWQgICAgICAgICAgICAgICAgICAgICAgICAgb3BhcXVlX2ZyZWVfcnQoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNSdW50aW1lKik7CnZvaWQgICAgICAgICAgICAgICAgICAgICAgICAgb3BhcXVlX2ZyZWUoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNDb250ZXh0Kik7CnZvaWQgICAgICAgICAgICAgICAgICAgICAgICAgd3NfY2xlYXJfcnQoTWlubmV0V2Vic29ja2V0KiwgSlNSdW50aW1lKik7CnZvaWQgICAgICAgICAgICAgICAgICAgICAgICAgd3NfY2xlYXIoTWlubmV0V2Vic29ja2V0KiwgSlNDb250ZXh0Kik7CnZvaWQgICAgICAgICAgICAgICAgICAgICAgICAgd3NfZnJlZV9ydChNaW5uZXRXZWJzb2NrZXQqLCBKU1J1bnRpbWUqKTsKdm9pZCAgICAgICAgICAgICAgICAgICAgICAgICB3c19mcmVlKE1pbm5ldFdlYnNvY2tldCosIEpTQ29udGV4dCopOwpNaW5uZXRXZWJzb2NrZXQqICAgICAgICAgICAgIHdzX2R1cChNaW5uZXRXZWJzb2NrZXQqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWVfbmV3KHN0cnVjdCBzZXNzaW9uX2RhdGEqLEpTQ29udGV4dCopOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIGx3c19vcGFxdWUoc3RydWN0IGx3cyosIHN0cnVjdCBzZXNzaW9uX2RhdGEqLCBKU0NvbnRleHQqKTsKSlNWYWx1ZSAgICAgICAgICAgICAgICAgICAgICBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBNaW5uZXRXZWJzb2NrZXQqKTsKSlNWYWx1ZSAgICAgICAgICAgICAgICAgICAgICBtaW5uZXRfd3NfZnJvbXdzaShKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzKiwgc3RydWN0IHNlc3Npb25fZGF0YSopOwpKU1ZhbHVlICAgICAgICAgICAgICAgICAgICAgIG1pbm5ldF93c19jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CgoKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF93c19jbGFzc19pZDsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU1ZhbHVlIG1pbm5ldF93c19wcm90bywgbWlubmV0X3dzX2N0b3I7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF93c19jbGFzczsKZXh0ZXJuIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF93c19wcm90b19mdW5jc1tdLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzW10sIG1pbm5ldF93c19wcm90b19kZWZzW107CmV4dGVybiBjb25zdCBzaXplX3QgbWlubmV0X3dzX3Byb3RvX2Z1bmNzX3NpemUsIG1pbm5ldF93c19zdGF0aWNfZnVuY3Nfc2l6ZSwgbWlubmV0X3dzX3Byb3RvX2RlZnNfc2l6ZTsKCnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSB7CiAgc3RydWN0IHNvY2tldCogd3M7CiAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxOwogIHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3M7CiAgSlNWYWx1ZSBoYW5kbGVyOwogIGludDY0X3Qgc2VyaWFsOwogIE1pbm5ldFN0YXR1cyBzdGF0dXM7CiAgc3RydWN0IHBvbGxmZCBwb2xsOwogIGludCBlcnJvcjsKICBCT09MIGJpbmFyeTsKICBzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7Cn07CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBzZXNzaW9uX2RhdGEqCmx3c19zZXNzaW9uKHN0cnVjdCBsd3MqIHdzaSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZS0+c2VzczsKCiAgcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgp3c19vcGFxdWUoTWlubmV0V2Vic29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3cy0+bHdzaSkgOiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCBzZXNzaW9uX2RhdGEqCndzX3Nlc3Npb24oTWlubmV0V2Vic29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19zZXNzaW9uKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0V2Vic29ja2V0Kgp3c19mcm9tX3dzaShzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpOwogIHJldHVybiBvcGFxdWUgPyBvcGFxdWUtPndzIDogMDsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCm1pbm5ldF93c19kYXRhMihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgb2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1dFQlNPQ0tFVF9IICovCgAAAAAAAAAAiAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gUAAAAAAAD2BQAAAAAAAAAAAAAAAPC/"
				],
				[
					344,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACICwAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCk1pbm5ldFdlYnNvY2tldCogd3NfbmV3KHN0cnVjdCBsd3MqLCBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiwgSlNDb250ZXh0Kik7CnZvaWQgb3BhcXVlX2ZyZWVfcnQoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNSdW50aW1lKik7CnZvaWQgb3BhcXVlX2ZyZWUoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNDb250ZXh0Kik7CnZvaWQgd3NfY2xlYXJfcnQoTWlubmV0V2Vic29ja2V0KiwgSlNSdW50aW1lKik7CnZvaWQgd3NfY2xlYXIoTWlubmV0V2Vic29ja2V0KiwgSlNDb250ZXh0Kik7CnZvaWQgd3NfZnJlZV9ydChNaW5uZXRXZWJzb2NrZXQqLCBKU1J1bnRpbWUqKTsKdm9pZCB3c19mcmVlKE1pbm5ldFdlYnNvY2tldCosIEpTQ29udGV4dCopOwpNaW5uZXRXZWJzb2NrZXQqIHdzX2R1cChNaW5uZXRXZWJzb2NrZXQqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWVfbmV3KHN0cnVjdCBzZXNzaW9uX2RhdGEqLCBKU0NvbnRleHQqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqLCBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgbWlubmV0X3dzX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0V2Vic29ja2V0Kik7CkpTVmFsdWUgbWlubmV0X3dzX2Zyb213c2koSlNDb250ZXh0Kiwgc3RydWN0IGx3cyosIHN0cnVjdCBzZXNzaW9uX2RhdGEqKTsKSlNWYWx1ZSBtaW5uZXRfd3NfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBpbnQsIEpTVmFsdWVDb25zdCBhcmd2W10pOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3dzX2NsYXNzX2lkOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3dzX3Byb3RvLCBtaW5uZXRfd3NfY3RvcjsKZXh0ZXJuIEpTQ2xhc3NEZWYgbWlubmV0X3dzX2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3dzX3Byb3RvX2Z1bmNzW10sIG1pbm5ldF93c19zdGF0aWNfZnVuY3NbXSwgbWlubmV0X3dzX3Byb3RvX2RlZnNbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfd3NfcHJvdG9fZnVuY3Nfc2l6ZSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc19zaXplLCBtaW5uZXRfd3NfcHJvdG9fZGVmc19zaXplOwoKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3A7CiAgc3RydWN0IHNlc3Npb25fZGF0YSogc2VzczsKICBKU1ZhbHVlIGhhbmRsZXI7CiAgaW50NjRfdCBzZXJpYWw7CiAgTWlubmV0U3RhdHVzIHN0YXR1czsKICBzdHJ1Y3QgcG9sbGZkIHBvbGw7CiAgaW50IGVycm9yOwogIEJPT0wgYmluYXJ5OwogIHN0cnVjdCBsaXN0X2hlYWQgbGluazsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKbHdzX3Nlc3Npb24oc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CgogIGlmKChvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSkpCiAgICByZXR1cm4gb3BhcXVlLT5zZXNzOwoKICByZXR1cm4gMDsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCndzX29wYXF1ZShNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiAgcmV0dXJuIHdzLT5sd3NpID8gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKd3Nfc2Vzc2lvbihNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiAgcmV0dXJuIHdzLT5sd3NpID8gbHdzX3Nlc3Npb24od3MtPmx3c2kpIDogMDsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCndzX2Zyb21fd3NpKHN0cnVjdCBsd3MqIHdzaSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CiAgcmV0dXJuIG9wYXF1ZSA/IG9wYXF1ZS0+d3MgOiAwOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKbWlubmV0X3dzX2RhdGEoSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUob2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKbWlubmV0X3dzX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF93c19jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfV0VCU09DS0VUX0ggKi8KAAAAAAAAAACICwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gUAAAAAAAD2BQAAAAAAAAAAAAAAAPC/"
				],
				[
					350,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACICwAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpZihkZWZpbmVkKEhBVkVfV0lOU09DSzJfSCkgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChXSU42NCkgfHwgZGVmaW5lZChfX01JTkdXMzJfXykgfHwgZGVmaW5lZChfX01JTkdXNjRfXykpICYmICFkZWZpbmVkKF9fTVNZU19fKQoKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNpZiAwCnN0cnVjdCBwb2xsZmQgewogIGludCBmZDsKICBzaG9ydCBldmVudHMsIHJldmVudHM7Cn07CiNlbmRpZgojZW5kaWYKCiNpbmNsdWRlICJtaW5uZXQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KCnN0cnVjdCBsd3M7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CnN0cnVjdCBodHRwX3Jlc3BvbnNlOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGE7CgovKiBjbGFzcyBXZWJTb2NrZXQgKi8KCnR5cGVkZWYgc3RydWN0IHNvY2tldCB7CiAgaW50IHJlZl9jb3VudDsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8vIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwp9IE1pbm5ldFdlYnNvY2tldDsKCmV4dGVybiBpbnQ2NF90IHdzX3NlcmlhbDsKCk1pbm5ldFdlYnNvY2tldCogd3NfbmV3KHN0cnVjdCBsd3MqLCBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiwgSlNDb250ZXh0Kik7CnZvaWQgb3BhcXVlX2ZyZWVfcnQoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNSdW50aW1lKik7CnZvaWQgb3BhcXVlX2ZyZWUoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNDb250ZXh0Kik7CnZvaWQgd3NfY2xlYXJfcnQoTWlubmV0V2Vic29ja2V0KiwgSlNSdW50aW1lKik7CnZvaWQgd3NfY2xlYXIoTWlubmV0V2Vic29ja2V0KiwgSlNDb250ZXh0Kik7CnZvaWQgd3NfZnJlZV9ydChNaW5uZXRXZWJzb2NrZXQqLCBKU1J1bnRpbWUqKTsKdm9pZCB3c19mcmVlKE1pbm5ldFdlYnNvY2tldCosIEpTQ29udGV4dCopOwpNaW5uZXRXZWJzb2NrZXQqIHdzX2R1cChNaW5uZXRXZWJzb2NrZXQqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWVfbmV3KHN0cnVjdCBzZXNzaW9uX2RhdGEqLCBKU0NvbnRleHQqKTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBsd3Nfb3BhcXVlKHN0cnVjdCBsd3MqLCBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiwgSlNDb250ZXh0Kik7CkpTVmFsdWUgbWlubmV0X3dzX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0V2Vic29ja2V0Kik7CkpTVmFsdWUgbWlubmV0X3dzX2Zyb213c2koSlNDb250ZXh0Kiwgc3RydWN0IGx3cyosIHN0cnVjdCBzZXNzaW9uX2RhdGEqKTsKSlNWYWx1ZSBtaW5uZXRfd3NfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBpbnQsIEpTVmFsdWVDb25zdCBhcmd2W10pOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3dzX2NsYXNzX2lkOwpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3dzX3Byb3RvLCBtaW5uZXRfd3NfY3RvcjsKZXh0ZXJuIEpTQ2xhc3NEZWYgbWlubmV0X3dzX2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3dzX3Byb3RvX2Z1bmNzW10sIG1pbm5ldF93c19zdGF0aWNfZnVuY3NbXSwgbWlubmV0X3dzX3Byb3RvX2RlZnNbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfd3NfcHJvdG9fZnVuY3Nfc2l6ZSwgbWlubmV0X3dzX3N0YXRpY19mdW5jc19zaXplLCBtaW5uZXRfd3NfcHJvdG9fZGVmc19zaXplOwoKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKICBzdHJ1Y3QgaHR0cF9yZXF1ZXN0KiByZXE7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3A7CiAgc3RydWN0IHNlc3Npb25fZGF0YSogc2VzczsKICBKU1ZhbHVlIGhhbmRsZXI7CiAgaW50NjRfdCBzZXJpYWw7CiAgTWlubmV0U3RhdHVzIHN0YXR1czsKICBzdHJ1Y3QgcG9sbGZkIHBvbGw7CiAgaW50IGVycm9yOwogIEJPT0wgYmluYXJ5OwogIHN0cnVjdCBsaXN0X2hlYWQgbGluazsKfTsKCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKbHdzX3Nlc3Npb24oc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CgogIGlmKChvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEod3NpKSkpCiAgICByZXR1cm4gb3BhcXVlLT5zZXNzOwoKICByZXR1cm4gMDsKfQoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCndzX29wYXF1ZShNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiAgcmV0dXJuIHdzLT5sd3NpID8gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKd3Nfc2Vzc2lvbihNaW5uZXRXZWJzb2NrZXQqIHdzKSB7CiAgcmV0dXJuIHdzLT5sd3NpID8gbHdzX3Nlc3Npb24od3MtPmx3c2kpIDogMDsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRXZWJzb2NrZXQqCndzX2Zyb21fd3NpKHN0cnVjdCBsd3MqIHdzaSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSk7CiAgcmV0dXJuIG9wYXF1ZSA/IG9wYXF1ZS0+d3MgOiAwOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKbWlubmV0X3dzX2RhdGEoSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUob2JqLCBtaW5uZXRfd3NfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKbWlubmV0X3dzX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF93c19jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfV0VCU09DS0VUX0ggKi8KAAAAAAAAAAAjCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAUAAAAAAABFBQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-client.c",
			"settings":
			{
				"buffer_size": 16692,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					76,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAzjUAAAAAAADONQAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "session,"
					},
					"CAAAAIgjAAAAAAAAiSMAAAAAAAAAAAAAiSMAAAAAAACKIwAAAAAAAAAAAACKIwAAAAAAAIsjAAAAAAAAAAAAAIsjAAAAAAAAjCMAAAAAAAAAAAAAjCMAAAAAAACNIwAAAAAAAAAAAACNIwAAAAAAAI4jAAAAAAAAAAAAAI4jAAAAAAAAjyMAAAAAAAAAAAAAjyMAAAAAAACQIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiCMAAAAAAACIIwAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJAjAAAAAAAAkSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkCMAAAAAAACQIwAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "session,"
					},
					"CAAAALYqAAAAAAAAtyoAAAAAAAAAAAAAtyoAAAAAAAC4KgAAAAAAAAAAAAC4KgAAAAAAALkqAAAAAAAAAAAAALkqAAAAAAAAuioAAAAAAAAAAAAAuioAAAAAAAC7KgAAAAAAAAAAAAC7KgAAAAAAALwqAAAAAAAAAAAAALwqAAAAAAAAvSoAAAAAAAAAAAAAvSoAAAAAAAC+KgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtioAAAAAAAC2KgAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL4qAAAAAAAAvyoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvioAAAAAAAC+KgAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					7,
					"left_delete",
					null,
					"BwAAALwqAAAAAAAAvCoAAAAAAAABAAAAbrsqAAAAAAAAuyoAAAAAAAABAAAAb7oqAAAAAAAAuioAAAAAAAABAAAAabkqAAAAAAAAuSoAAAAAAAABAAAAc7gqAAAAAAAAuCoAAAAAAAABAAAAc7cqAAAAAAAAtyoAAAAAAAABAAAAZbYqAAAAAAAAtioAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAvSoAAAAAAAC9KgAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "user"
					},
					"BAAAALYqAAAAAAAAtyoAAAAAAAAAAAAAtyoAAAAAAAC4KgAAAAAAAAAAAAC4KgAAAAAAALkqAAAAAAAAAAAAALkqAAAAAAAAuioAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtioAAAAAAAC2KgAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "user"
					},
					"BQAAAIgjAAAAAAAAiSMAAAAAAAAAAAAAiSMAAAAAAACJIwAAAAAAAAcAAABzZXNzaW9uiSMAAAAAAACKIwAAAAAAAAAAAACKIwAAAAAAAIsjAAAAAAAAAAAAAIsjAAAAAAAAjCMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiCMAAAAAAACPIwAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAL0jAAAAAAAAvyMAAAAAAAAAAAAAZyMAAAAAAABpIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZyMAAAAAAAC9IwAAAAAAAP///////+9/"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "session,"
					},
					"CAAAALU1AAAAAAAAtjUAAAAAAAAAAAAAtjUAAAAAAAC3NQAAAAAAAAAAAAC3NQAAAAAAALg1AAAAAAAAAAAAALg1AAAAAAAAuTUAAAAAAAAAAAAAuTUAAAAAAAC6NQAAAAAAAAAAAAC6NQAAAAAAALs1AAAAAAAAAAAAALs1AAAAAAAAvDUAAAAAAAAAAAAAvDUAAAAAAAC9NQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtTUAAAAAAAC1NQAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "client"
					},
					"BgAAALU1AAAAAAAAtjUAAAAAAAAAAAAAtjUAAAAAAAC3NQAAAAAAAAAAAAC3NQAAAAAAALg1AAAAAAAAAAAAALg1AAAAAAAAuTUAAAAAAAAAAAAAuTUAAAAAAAC6NQAAAAAAAAAAAAC6NQAAAAAAALs1AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtTUAAAAAAAC1NQAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": "->"
					},
					"AgAAALs1AAAAAAAAvDUAAAAAAAAAAAAAvDUAAAAAAAC9NQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuzUAAAAAAAC7NQAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": "user"
					},
					"BQAAALU1AAAAAAAAtjUAAAAAAAAAAAAAtjUAAAAAAAC2NQAAAAAAAA8AAABjbGllbnQtPnNlc3Npb262NQAAAAAAALc1AAAAAAAAAAAAALc1AAAAAAAAuDUAAAAAAAAAAAAAuDUAAAAAAAC5NQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtTUAAAAAAADENQAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAfDUAAAAAAADBNQAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAfDUAAAAAAADBNQAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAfDUAAAAAAADBNQAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAfDUAAAAAAADBNQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-request.h",
			"settings":
			{
				"buffer_size": 2859,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					14,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAAArCwAAI2lmbmRlZiBNSU5ORVRfUkVRVUVTVF9ICiNkZWZpbmUgTUlOTkVUX1JFUVVFU1RfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3Qgc29ja2V0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCmNvbnN0IGNoYXIqIG1ldGhvZF9zdHJpbmcoZW51bSBodHRwX21ldGhvZCk7CmludCBtZXRob2RfbnVtYmVyKGNvbnN0IGNoYXIqKTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfcmVxdWVzdCB7CiAgaW50IHJlZl9jb3VudDsKICBCT09MIHJlYWRfb25seTsKICBlbnVtIGh0dHBfbWV0aG9kIG1ldGhvZDsKICBNaW5uZXRVUkwgdXJsOwogIE1pbm5ldEJ1ZmZlciBoZWFkZXJzLCBib2R5Owp9IE1pbm5ldFJlcXVlc3Q7Cgp2b2lkIHJlcXVlc3RfZm9ybWF0KE1pbm5ldFJlcXVlc3QgY29uc3QqLCBjaGFyKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CmNoYXIqIHJlcXVlc3RfZHVtcChNaW5uZXRSZXF1ZXN0IGNvbnN0KiwgSlNDb250ZXh0Kik7CnZvaWQgcmVxdWVzdF9pbml0KE1pbm5ldFJlcXVlc3QqLCBNaW5uZXRVUkwsIGVudW0gaHR0cF9tZXRob2QpOwpNaW5uZXRSZXF1ZXN0KiByZXF1ZXN0X25ldyhKU0NvbnRleHQqLCBNaW5uZXRVUkwsIE1pbm5ldEh0dHBNZXRob2QgbWV0aG9kKTsKTWlubmV0UmVxdWVzdCogcmVxdWVzdF9kdXAoTWlubmV0UmVxdWVzdCopOwpNaW5uZXRSZXF1ZXN0KiByZXF1ZXN0X2Zyb21vYmooSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKTWlubmV0UmVxdWVzdCogcmVxdWVzdF9mcm9td3NpKEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKTWlubmV0UmVxdWVzdCogcmVxdWVzdF9mcm9tdXJsKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiB1cmkpOwp2b2lkIHJlcXVlc3RfemVybyhNaW5uZXRSZXF1ZXN0Kik7CnZvaWQgcmVxdWVzdF9jbGVhcihNaW5uZXRSZXF1ZXN0KiwgSlNDb250ZXh0Kik7CnZvaWQgcmVxdWVzdF9jbGVhcl9ydChNaW5uZXRSZXF1ZXN0KiwgSlNSdW50aW1lKik7CnZvaWQgcmVxdWVzdF9mcmVlKE1pbm5ldFJlcXVlc3QqLCBKU0NvbnRleHQqKTsKdm9pZCByZXF1ZXN0X2ZyZWVfcnQoTWlubmV0UmVxdWVzdCosIEpTUnVudGltZSopOwpNaW5uZXRSZXF1ZXN0KiByZXF1ZXN0X2Zyb20oSlNDb250ZXh0KiwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X2Zyb20oSlNDb250ZXh0KiwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X2NvbnN0cnVjdG9yKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9uZXcoSlNDb250ZXh0KiwgTWlubmV0VVJMLCBlbnVtIGh0dHBfbWV0aG9kKTsKSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF93cmFwKEpTQ29udGV4dCosIE1pbm5ldFJlcXVlc3QqKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfY3RvcjsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQ7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yZXF1ZXN0X2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBNaW5uZXRSZXF1ZXN0KgptaW5uZXRfcmVxdWVzdF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlcXVlc3QqCm1pbm5ldF9yZXF1ZXN0X2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgptaW5uZXRfdXJpX2FuZF9tZXRob2Qoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCwgTWlubmV0SHR0cE1ldGhvZCogbWV0aG9kKSB7CiAgY2hhciogdXJsOwoKICBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9QT1NUX1VSSSkpKQogICAgaWYobWV0aG9kKQogICAgICAqbWV0aG9kID0gTUVUSE9EX1BPU1Q7CiAgICBlbHNlIGlmKCh1cmwgPSBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpKSkKICAgICAgaWYobWV0aG9kKQogICAgICAgICptZXRob2QgPSBNRVRIT0RfR0VUOwogICAgICBlbHNlIGlmKCh1cmwgPSBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0hFQURfVVJJKSkpCiAgICAgICAgaWYobWV0aG9kKQogICAgICAgICAgKm1ldGhvZCA9IE1FVEhPRF9IRUFEOwogICAgICAgIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fT1BUSU9OU19VUkkpKSkKICAgICAgICAgIGlmKG1ldGhvZCkKICAgICAgICAgICAgKm1ldGhvZCA9IE1FVEhPRF9PUFRJT05TOwoKICByZXR1cm4gdXJsOwp9CgpzdGF0aWMgaW5saW5lIGNvbnN0IGNoYXIqCm1ldGhvZF9uYW1lKGludCBtKSB7CiAgaWYobSA8IDApCiAgICByZXR1cm4gIi0xIjsKICByZXR1cm4gKChjb25zdCBjaGFyKiBjb25zdFtdKXsiR0VUIiwgIlBPU1QiLCAiT1BUSU9OUyIsICJQVVQiLCAiUEFUQ0giLCAiREVMRVRFIiwgIkNPTk5FQ1QiLCAiSEVBRCJ9KVttXTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9SRVFVRVNUX0ggKi8KAAAAAAAAAAArCwAAAAAAAAAAAAAAAAAAAAAAACsLAAAAAAAAAAAAAAAAAAAAAAAAKwsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgCAAAAAAAAwwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArCwAAI2lmbmRlZiBNSU5ORVRfUkVRVUVTVF9ICiNkZWZpbmUgTUlOTkVUX1JFUVVFU1RfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3Qgc29ja2V0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCmNvbnN0IGNoYXIqIG1ldGhvZF9zdHJpbmcoZW51bSBodHRwX21ldGhvZCk7CmludCBtZXRob2RfbnVtYmVyKGNvbnN0IGNoYXIqKTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfcmVxdWVzdCB7CiAgaW50IHJlZl9jb3VudDsKICBCT09MIHJlYWRfb25seTsKICBlbnVtIGh0dHBfbWV0aG9kIG1ldGhvZDsKICBNaW5uZXRVUkwgdXJsOwogIE1pbm5ldEJ1ZmZlciBoZWFkZXJzLCBib2R5Owp9IE1pbm5ldFJlcXVlc3Q7Cgp2b2lkIHJlcXVlc3RfZm9ybWF0KE1pbm5ldFJlcXVlc3QgY29uc3QqLCBjaGFyKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CmNoYXIqIHJlcXVlc3RfZHVtcChNaW5uZXRSZXF1ZXN0IGNvbnN0KiwgSlNDb250ZXh0Kik7CnZvaWQgcmVxdWVzdF9pbml0KE1pbm5ldFJlcXVlc3QqLCBNaW5uZXRVUkwsIGVudW0gaHR0cF9tZXRob2QpOwpNaW5uZXRSZXF1ZXN0KiByZXF1ZXN0X25ldyhKU0NvbnRleHQqLCBNaW5uZXRVUkwsIE1pbm5ldEh0dHBNZXRob2QgbWV0aG9kKTsKTWlubmV0UmVxdWVzdCogcmVxdWVzdF9kdXAoTWlubmV0UmVxdWVzdCopOwpNaW5uZXRSZXF1ZXN0KiByZXF1ZXN0X2Zyb21vYmooSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKTWlubmV0UmVxdWVzdCogcmVxdWVzdF9mcm9td3NpKEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKTWlubmV0UmVxdWVzdCogcmVxdWVzdF9mcm9tdXJsKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiB1cmkpOwp2b2lkIHJlcXVlc3RfemVybyhNaW5uZXRSZXF1ZXN0Kik7CnZvaWQgcmVxdWVzdF9jbGVhcihNaW5uZXRSZXF1ZXN0KiwgSlNDb250ZXh0Kik7CnZvaWQgcmVxdWVzdF9jbGVhcl9ydChNaW5uZXRSZXF1ZXN0KiwgSlNSdW50aW1lKik7CnZvaWQgcmVxdWVzdF9mcmVlKE1pbm5ldFJlcXVlc3QqLCBKU0NvbnRleHQqKTsKdm9pZCByZXF1ZXN0X2ZyZWVfcnQoTWlubmV0UmVxdWVzdCosIEpTUnVudGltZSopOwpNaW5uZXRSZXF1ZXN0KiByZXF1ZXN0X2Zyb20oSlNDb250ZXh0KiwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X2Zyb20oSlNDb250ZXh0KiwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X2NvbnN0cnVjdG9yKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9uZXcoSlNDb250ZXh0KiwgTWlubmV0VVJMLCBlbnVtIGh0dHBfbWV0aG9kKTsKSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF93cmFwKEpTQ29udGV4dCosIE1pbm5ldFJlcXVlc3QqKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfY3RvcjsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQ7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yZXF1ZXN0X2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBNaW5uZXRSZXF1ZXN0KgptaW5uZXRfcmVxdWVzdF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlcXVlc3QqCm1pbm5ldF9yZXF1ZXN0X2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgptaW5uZXRfdXJpX2FuZF9tZXRob2Qoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCwgTWlubmV0SHR0cE1ldGhvZCogbWV0aG9kKSB7CiAgY2hhciogdXJsOwoKICBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9QT1NUX1VSSSkpKQogICAgaWYobWV0aG9kKQogICAgICAqbWV0aG9kID0gTUVUSE9EX1BPU1Q7CiAgICBlbHNlIGlmKCh1cmwgPSBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpKSkKICAgICAgaWYobWV0aG9kKQogICAgICAgICptZXRob2QgPSBNRVRIT0RfR0VUOwogICAgICBlbHNlIGlmKCh1cmwgPSBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0hFQURfVVJJKSkpCiAgICAgICAgaWYobWV0aG9kKQogICAgICAgICAgKm1ldGhvZCA9IE1FVEhPRF9IRUFEOwogICAgICAgIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fT1BUSU9OU19VUkkpKSkKICAgICAgICAgIGlmKG1ldGhvZCkKICAgICAgICAgICAgKm1ldGhvZCA9IE1FVEhPRF9PUFRJT05TOwoKICByZXR1cm4gdXJsOwp9CgpzdGF0aWMgaW5saW5lIGNvbnN0IGNoYXIqCm1ldGhvZF9uYW1lKGludCBtKSB7CiAgaWYobSA8IDApCiAgICByZXR1cm4gIi0xIjsKICByZXR1cm4gKChjb25zdCBjaGFyKiBjb25zdFtdKXsiR0VUIiwgIlBPU1QiLCAiT1BUSU9OUyIsICJQVVQiLCAiUEFUQ0giLCAiREVMRVRFIiwgIkNPTk5FQ1QiLCAiSEVBRCJ9KVttXTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9SRVFVRVNUX0ggKi8KAAAAAAAAAAArCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAIAAAAAAADDAgAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArCwAAI2lmbmRlZiBNSU5ORVRfUkVRVUVTVF9ICiNkZWZpbmUgTUlOTkVUX1JFUVVFU1RfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3Qgc29ja2V0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCmNvbnN0IGNoYXIqIG1ldGhvZF9zdHJpbmcoZW51bSBodHRwX21ldGhvZCk7CmludCBtZXRob2RfbnVtYmVyKGNvbnN0IGNoYXIqKTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfcmVxdWVzdCB7CiAgaW50IHJlZl9jb3VudDsKICBCT09MIHJlYWRfb25seTsKICBlbnVtIGh0dHBfbWV0aG9kIG1ldGhvZDsKICBNaW5uZXRVUkwgdXJsOwogIE1pbm5ldEJ1ZmZlciBoZWFkZXJzLCBib2R5Owp9IE1pbm5ldFJlcXVlc3Q7Cgp2b2lkIHJlcXVlc3RfZm9ybWF0KE1pbm5ldFJlcXVlc3QgY29uc3QqLCBjaGFyKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CmNoYXIqIHJlcXVlc3RfZHVtcChNaW5uZXRSZXF1ZXN0IGNvbnN0KiwgSlNDb250ZXh0Kik7CnZvaWQgcmVxdWVzdF9pbml0KE1pbm5ldFJlcXVlc3QqLCBNaW5uZXRVUkwsIGVudW0gaHR0cF9tZXRob2QpOwpNaW5uZXRSZXF1ZXN0KiByZXF1ZXN0X25ldyhKU0NvbnRleHQqLCBNaW5uZXRVUkwsIE1pbm5ldEh0dHBNZXRob2QgbWV0aG9kKTsKTWlubmV0UmVxdWVzdCogcmVxdWVzdF9kdXAoTWlubmV0UmVxdWVzdCopOwpNaW5uZXRSZXF1ZXN0KiByZXF1ZXN0X2Zyb21vYmooSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKTWlubmV0UmVxdWVzdCogcmVxdWVzdF9mcm9td3NpKEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKTWlubmV0UmVxdWVzdCogcmVxdWVzdF9mcm9tdXJsKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiB1cmkpOwp2b2lkIHJlcXVlc3RfemVybyhNaW5uZXRSZXF1ZXN0Kik7CnZvaWQgcmVxdWVzdF9jbGVhcihNaW5uZXRSZXF1ZXN0KiwgSlNDb250ZXh0Kik7CnZvaWQgcmVxdWVzdF9jbGVhcl9ydChNaW5uZXRSZXF1ZXN0KiwgSlNSdW50aW1lKik7CnZvaWQgcmVxdWVzdF9mcmVlKE1pbm5ldFJlcXVlc3QqLCBKU0NvbnRleHQqKTsKdm9pZCByZXF1ZXN0X2ZyZWVfcnQoTWlubmV0UmVxdWVzdCosIEpTUnVudGltZSopOwpNaW5uZXRSZXF1ZXN0KiByZXF1ZXN0X2Zyb20oSlNDb250ZXh0KiwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X2Zyb20oSlNDb250ZXh0KiwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X2NvbnN0cnVjdG9yKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9uZXcoSlNDb250ZXh0KiwgTWlubmV0VVJMLCBlbnVtIGh0dHBfbWV0aG9kKTsKSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF93cmFwKEpTQ29udGV4dCosIE1pbm5ldFJlcXVlc3QqKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfY3RvcjsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQ7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yZXF1ZXN0X2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBNaW5uZXRSZXF1ZXN0KgptaW5uZXRfcmVxdWVzdF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlcXVlc3QqCm1pbm5ldF9yZXF1ZXN0X2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgptaW5uZXRfdXJpX2FuZF9tZXRob2Qoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCwgTWlubmV0SHR0cE1ldGhvZCogbWV0aG9kKSB7CiAgY2hhciogdXJsOwoKICBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9QT1NUX1VSSSkpKQogICAgaWYobWV0aG9kKQogICAgICAqbWV0aG9kID0gTUVUSE9EX1BPU1Q7CiAgICBlbHNlIGlmKCh1cmwgPSBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpKSkKICAgICAgaWYobWV0aG9kKQogICAgICAgICptZXRob2QgPSBNRVRIT0RfR0VUOwogICAgICBlbHNlIGlmKCh1cmwgPSBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0hFQURfVVJJKSkpCiAgICAgICAgaWYobWV0aG9kKQogICAgICAgICAgKm1ldGhvZCA9IE1FVEhPRF9IRUFEOwogICAgICAgIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fT1BUSU9OU19VUkkpKSkKICAgICAgICAgIGlmKG1ldGhvZCkKICAgICAgICAgICAgKm1ldGhvZCA9IE1FVEhPRF9PUFRJT05TOwoKICByZXR1cm4gdXJsOwp9CgpzdGF0aWMgaW5saW5lIGNvbnN0IGNoYXIqCm1ldGhvZF9uYW1lKGludCBtKSB7CiAgaWYobSA8IDApCiAgICByZXR1cm4gIi0xIjsKICByZXR1cm4gKChjb25zdCBjaGFyKiBjb25zdFtdKXsiR0VUIiwgIlBPU1QiLCAiT1BUSU9OUyIsICJQVVQiLCAiUEFUQ0giLCAiREVMRVRFIiwgIkNPTk5FQ1QiLCAiSEVBRCJ9KVttXTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9SRVFVRVNUX0ggKi8KAAAAAAAAAAArCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAIAAAAAAADDAgAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArCwAAI2lmbmRlZiBNSU5ORVRfUkVRVUVTVF9ICiNkZWZpbmUgTUlOTkVUX1JFUVVFU1RfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3Qgc29ja2V0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCmNvbnN0IGNoYXIqIG1ldGhvZF9zdHJpbmcoZW51bSBodHRwX21ldGhvZCk7CmludCBtZXRob2RfbnVtYmVyKGNvbnN0IGNoYXIqKTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfcmVxdWVzdCB7CiAgaW50IHJlZl9jb3VudDsKICBCT09MIHJlYWRfb25seTsKICBlbnVtIGh0dHBfbWV0aG9kIG1ldGhvZDsKICBNaW5uZXRVUkwgdXJsOwogIE1pbm5ldEJ1ZmZlciBoZWFkZXJzLCBib2R5Owp9IE1pbm5ldFJlcXVlc3Q7Cgp2b2lkIHJlcXVlc3RfZm9ybWF0KE1pbm5ldFJlcXVlc3QgY29uc3QqLCBjaGFyKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CmNoYXIqIHJlcXVlc3RfZHVtcChNaW5uZXRSZXF1ZXN0IGNvbnN0KiwgSlNDb250ZXh0Kik7CnZvaWQgcmVxdWVzdF9pbml0KE1pbm5ldFJlcXVlc3QqLCBNaW5uZXRVUkwsIGVudW0gaHR0cF9tZXRob2QpOwpNaW5uZXRSZXF1ZXN0KiByZXF1ZXN0X25ldyhKU0NvbnRleHQqLCBNaW5uZXRVUkwsIE1pbm5ldEh0dHBNZXRob2QgbWV0aG9kKTsKTWlubmV0UmVxdWVzdCogcmVxdWVzdF9kdXAoTWlubmV0UmVxdWVzdCopOwpNaW5uZXRSZXF1ZXN0KiByZXF1ZXN0X2Zyb21vYmooSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKTWlubmV0UmVxdWVzdCogcmVxdWVzdF9mcm9td3NpKEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKTWlubmV0UmVxdWVzdCogcmVxdWVzdF9mcm9tdXJsKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiB1cmkpOwp2b2lkIHJlcXVlc3RfemVybyhNaW5uZXRSZXF1ZXN0Kik7CnZvaWQgcmVxdWVzdF9jbGVhcihNaW5uZXRSZXF1ZXN0KiwgSlNDb250ZXh0Kik7CnZvaWQgcmVxdWVzdF9jbGVhcl9ydChNaW5uZXRSZXF1ZXN0KiwgSlNSdW50aW1lKik7CnZvaWQgcmVxdWVzdF9mcmVlKE1pbm5ldFJlcXVlc3QqLCBKU0NvbnRleHQqKTsKdm9pZCByZXF1ZXN0X2ZyZWVfcnQoTWlubmV0UmVxdWVzdCosIEpTUnVudGltZSopOwpNaW5uZXRSZXF1ZXN0KiByZXF1ZXN0X2Zyb20oSlNDb250ZXh0KiwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X2Zyb20oSlNDb250ZXh0KiwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X2NvbnN0cnVjdG9yKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9uZXcoSlNDb250ZXh0KiwgTWlubmV0VVJMLCBlbnVtIGh0dHBfbWV0aG9kKTsKSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF93cmFwKEpTQ29udGV4dCosIE1pbm5ldFJlcXVlc3QqKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfY3RvcjsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQ7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yZXF1ZXN0X2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBNaW5uZXRSZXF1ZXN0KgptaW5uZXRfcmVxdWVzdF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlcXVlc3QqCm1pbm5ldF9yZXF1ZXN0X2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgptaW5uZXRfdXJpX2FuZF9tZXRob2Qoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCwgTWlubmV0SHR0cE1ldGhvZCogbWV0aG9kKSB7CiAgY2hhciogdXJsOwoKICBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9QT1NUX1VSSSkpKQogICAgaWYobWV0aG9kKQogICAgICAqbWV0aG9kID0gTUVUSE9EX1BPU1Q7CiAgICBlbHNlIGlmKCh1cmwgPSBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpKSkKICAgICAgaWYobWV0aG9kKQogICAgICAgICptZXRob2QgPSBNRVRIT0RfR0VUOwogICAgICBlbHNlIGlmKCh1cmwgPSBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0hFQURfVVJJKSkpCiAgICAgICAgaWYobWV0aG9kKQogICAgICAgICAgKm1ldGhvZCA9IE1FVEhPRF9IRUFEOwogICAgICAgIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fT1BUSU9OU19VUkkpKSkKICAgICAgICAgIGlmKG1ldGhvZCkKICAgICAgICAgICAgKm1ldGhvZCA9IE1FVEhPRF9PUFRJT05TOwoKICByZXR1cm4gdXJsOwp9CgpzdGF0aWMgaW5saW5lIGNvbnN0IGNoYXIqCm1ldGhvZF9uYW1lKGludCBtKSB7CiAgaWYobSA8IDApCiAgICByZXR1cm4gIi0xIjsKICByZXR1cm4gKChjb25zdCBjaGFyKiBjb25zdFtdKXsiR0VUIiwgIlBPU1QiLCAiT1BUSU9OUyIsICJQVVQiLCAiUEFUQ0giLCAiREVMRVRFIiwgIkNPTk5FQ1QiLCAiSEVBRCJ9KVttXTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9SRVFVRVNUX0ggKi8KAAAAAAAAAAArCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAIAAAAAAADDAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArCwAAI2lmbmRlZiBNSU5ORVRfUkVRVUVTVF9ICiNkZWZpbmUgTUlOTkVUX1JFUVVFU1RfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSAibWlubmV0LmgiCiNpbmNsdWRlICJtaW5uZXQtYnVmZmVyLmgiCgpzdHJ1Y3Qgc29ja2V0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCmNvbnN0IGNoYXIqIG1ldGhvZF9zdHJpbmcoZW51bSBodHRwX21ldGhvZCk7CmludCBtZXRob2RfbnVtYmVyKGNvbnN0IGNoYXIqKTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfcmVxdWVzdCB7CiAgaW50IHJlZl9jb3VudDsKICBCT09MIHJlYWRfb25seTsKICBlbnVtIGh0dHBfbWV0aG9kIG1ldGhvZDsKICBNaW5uZXRVUkwgdXJsOwogIE1pbm5ldEJ1ZmZlciBoZWFkZXJzLCBib2R5Owp9IE1pbm5ldFJlcXVlc3Q7Cgp2b2lkIHJlcXVlc3RfZm9ybWF0KE1pbm5ldFJlcXVlc3QgY29uc3QqLCBjaGFyKiwgc2l6ZV90LCBKU0NvbnRleHQqIGN0eCk7CmNoYXIqIHJlcXVlc3RfZHVtcChNaW5uZXRSZXF1ZXN0IGNvbnN0KiwgSlNDb250ZXh0Kik7CnZvaWQgcmVxdWVzdF9pbml0KE1pbm5ldFJlcXVlc3QqLCBNaW5uZXRVUkwsIGVudW0gaHR0cF9tZXRob2QpOwpNaW5uZXRSZXF1ZXN0KiByZXF1ZXN0X25ldyhKU0NvbnRleHQqLCBNaW5uZXRVUkwsIE1pbm5ldEh0dHBNZXRob2QgbWV0aG9kKTsKTWlubmV0UmVxdWVzdCogcmVxdWVzdF9kdXAoTWlubmV0UmVxdWVzdCopOwpNaW5uZXRSZXF1ZXN0KiByZXF1ZXN0X2Zyb21vYmooSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKTWlubmV0UmVxdWVzdCogcmVxdWVzdF9mcm9td3NpKEpTQ29udGV4dCosIHN0cnVjdCBsd3MqKTsKTWlubmV0UmVxdWVzdCogcmVxdWVzdF9mcm9tdXJsKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiB1cmkpOwp2b2lkIHJlcXVlc3RfemVybyhNaW5uZXRSZXF1ZXN0Kik7CnZvaWQgcmVxdWVzdF9jbGVhcihNaW5uZXRSZXF1ZXN0KiwgSlNDb250ZXh0Kik7CnZvaWQgcmVxdWVzdF9jbGVhcl9ydChNaW5uZXRSZXF1ZXN0KiwgSlNSdW50aW1lKik7CnZvaWQgcmVxdWVzdF9mcmVlKE1pbm5ldFJlcXVlc3QqLCBKU0NvbnRleHQqKTsKdm9pZCByZXF1ZXN0X2ZyZWVfcnQoTWlubmV0UmVxdWVzdCosIEpTUnVudGltZSopOwpNaW5uZXRSZXF1ZXN0KiByZXF1ZXN0X2Zyb20oSlNDb250ZXh0KiwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X2Zyb20oSlNDb250ZXh0KiwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF9yZXF1ZXN0X2NvbnN0cnVjdG9yKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9uZXcoSlNDb250ZXh0KiwgTWlubmV0VVJMLCBlbnVtIGh0dHBfbWV0aG9kKTsKSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF93cmFwKEpTQ29udGV4dCosIE1pbm5ldFJlcXVlc3QqKTsKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfY3RvcjsKZXh0ZXJuIFRIUkVBRF9MT0NBTCBKU0NsYXNzSUQgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQ7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF9yZXF1ZXN0X2NsYXNzOwpleHRlcm4gY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3NbXTsKZXh0ZXJuIGNvbnN0IHNpemVfdCBtaW5uZXRfcmVxdWVzdF9wcm90b19mdW5jc19zaXplOwoKc3RhdGljIGlubGluZSBNaW5uZXRSZXF1ZXN0KgptaW5uZXRfcmVxdWVzdF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3JlcXVlc3RfY2xhc3NfaWQpOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFJlcXVlc3QqCm1pbm5ldF9yZXF1ZXN0X2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgptaW5uZXRfdXJpX2FuZF9tZXRob2Qoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCwgTWlubmV0SHR0cE1ldGhvZCogbWV0aG9kKSB7CiAgY2hhciogdXJsOwoKICBpZigodXJsID0gbHdzX2dldF91cmkod3NpLCBjdHgsIFdTSV9UT0tFTl9QT1NUX1VSSSkpKQogICAgaWYobWV0aG9kKQogICAgICAqbWV0aG9kID0gTUVUSE9EX1BPU1Q7CiAgICBlbHNlIGlmKCh1cmwgPSBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0dFVF9VUkkpKSkKICAgICAgaWYobWV0aG9kKQogICAgICAgICptZXRob2QgPSBNRVRIT0RfR0VUOwogICAgICBlbHNlIGlmKCh1cmwgPSBsd3NfZ2V0X3VyaSh3c2ksIGN0eCwgV1NJX1RPS0VOX0hFQURfVVJJKSkpCiAgICAgICAgaWYobWV0aG9kKQogICAgICAgICAgKm1ldGhvZCA9IE1FVEhPRF9IRUFEOwogICAgICAgIGVsc2UgaWYoKHVybCA9IGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fT1BUSU9OU19VUkkpKSkKICAgICAgICAgIGlmKG1ldGhvZCkKICAgICAgICAgICAgKm1ldGhvZCA9IE1FVEhPRF9PUFRJT05TOwoKICByZXR1cm4gdXJsOwp9CgpzdGF0aWMgaW5saW5lIGNvbnN0IGNoYXIqCm1ldGhvZF9uYW1lKGludCBtKSB7CiAgaWYobSA8IDApCiAgICByZXR1cm4gIi0xIjsKICByZXR1cm4gKChjb25zdCBjaGFyKiBjb25zdFtdKXsiR0VUIiwgIlBPU1QiLCAiT1BUSU9OUyIsICJQVVQiLCAiUEFUQ0giLCAiREVMRVRFIiwgIkNPTk5FQ1QiLCAiSEVBRCJ9KVttXTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9SRVFVRVNUX0ggKi8KAAAAAAAAAAArCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAIAAAAAAADDAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-websocket.c",
			"settings":
			{
				"buffer_size": 21410,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2036,
					1,
					"insert",
					{
						"characters": " ws_new("
					},
					"CAAAAKkFAAAAAAAAqgUAAAAAAAAAAAAAqgUAAAAAAACrBQAAAAAAAAAAAACrBQAAAAAAAKwFAAAAAAAAAAAAAKwFAAAAAAAArQUAAAAAAAAAAAAArQUAAAAAAACuBQAAAAAAAAAAAACuBQAAAAAAAK8FAAAAAAAAAAAAAK8FAAAAAAAAsAUAAAAAAAAAAAAAsAUAAAAAAACxBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQUAAAAAAACpBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2037,
					1,
					"insert",
					{
						"characters": "%p,"
					},
					"AwAAALEFAAAAAAAAsgUAAAAAAAAAAAAAsgUAAAAAAACzBQAAAAAAAAAAAACzBQAAAAAAALQFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQUAAAAAAACxBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2038,
					1,
					"insert",
					{
						"characters": " %p)"
					},
					"BAAAALQFAAAAAAAAtQUAAAAAAAAAAAAAtQUAAAAAAAC2BQAAAAAAAAAAAAC2BQAAAAAAALcFAAAAAAAAAAAAALcFAAAAAAAAuAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAUAAAAAAAC0BQAAAAAAAAAAAAAAAPC/"
				],
				[
					2041,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMkFAAAAAAAAygUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQUAAAAAAADJBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2042,
					1,
					"insert",
					{
						"characters": " wsi,session"
					},
					"DAAAAMoFAAAAAAAAywUAAAAAAAAAAAAAywUAAAAAAADMBQAAAAAAAAAAAADMBQAAAAAAAM0FAAAAAAAAAAAAAM0FAAAAAAAAzgUAAAAAAAAAAAAAzgUAAAAAAADPBQAAAAAAAAAAAADPBQAAAAAAANAFAAAAAAAAAAAAANAFAAAAAAAA0QUAAAAAAAAAAAAA0QUAAAAAAADSBQAAAAAAAAAAAADSBQAAAAAAANMFAAAAAAAAAAAAANMFAAAAAAAA1AUAAAAAAAAAAAAA1AUAAAAAAADVBQAAAAAAAAAAAADVBQAAAAAAANYFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygUAAAAAAADKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2047,
					1,
					"cut",
					null,
					"AQAAAIQFAAAAAAAAhAUAAAAAAABVAAAAICBwcmludGYoIiVzOiBuZXcgTWlubmV0V2Vic29ja2V0OiAlcCB3c19uZXcoJXAsICVwKVxuIiwgX19mdW5jX18sIHdzLCB3c2ksc2Vzc2lvbik7Cg",
					"AQAAAAAAAAABAAAAhAUAAAAAAADZBQAAAAAAAAAAAAAAAAAA"
				],
				[
					2048,
					1,
					"paste",
					null,
					"AQAAAIQFAAAAAAAA2QUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAUAAAAAAACEBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2063,
					1,
					"insert",
					{
						"characters": "\n\n\nif"
					},
					"CgAAAAMVAAAAAAAABBUAAAAAAAAAAAAABBUAAAAAAAAGFQAAAAAAAAAAAAAGFQAAAAAAAAcVAAAAAAAAAAAAAAcVAAAAAAAACRUAAAAAAAAAAAAABBUAAAAAAAAEFQAAAAAAAAIAAAAgIAcVAAAAAAAACBUAAAAAAAAAAAAACBUAAAAAAAAKFQAAAAAAAAAAAAAFFQAAAAAAAAUVAAAAAAAAAgAAACAgCBUAAAAAAAAJFQAAAAAAAAAAAAAJFQAAAAAAAAoVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAxUAAAAAAAADFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2064,
					2,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AgAAAAoVAAAAAAAADBUAAAAAAAAAAAAACxUAAAAAAAANFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAChUAAAAAAAAKFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2065,
					1,
					"insert",
					{
						"characters": "opaque=lws"
					},
					"CgAAAAwVAAAAAAAADRUAAAAAAAAAAAAADRUAAAAAAAAOFQAAAAAAAAAAAAAOFQAAAAAAAA8VAAAAAAAAAAAAAA8VAAAAAAAAEBUAAAAAAAAAAAAAEBUAAAAAAAARFQAAAAAAAAAAAAARFQAAAAAAABIVAAAAAAAAAAAAABIVAAAAAAAAExUAAAAAAAAAAAAAExUAAAAAAAAUFQAAAAAAAAAAAAAUFQAAAAAAABUVAAAAAAAAAAAAABUVAAAAAAAAFhUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADBUAAAAAAAAMFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2066,
					1,
					"insert",
					{
						"characters": "_get_opa"
					},
					"CAAAABYVAAAAAAAAFxUAAAAAAAAAAAAAFxUAAAAAAAAYFQAAAAAAAAAAAAAYFQAAAAAAABkVAAAAAAAAAAAAABkVAAAAAAAAGhUAAAAAAAAAAAAAGhUAAAAAAAAbFQAAAAAAAAAAAAAbFQAAAAAAABwVAAAAAAAAAAAAABwVAAAAAAAAHRUAAAAAAAAAAAAAHRUAAAAAAAAeFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFhUAAAAAAAAWFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2067,
					1,
					"insert_completion",
					{
						"completion": "lws_get_opaque_user_data",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "lws_get_opaque_user_data"
					},
					"AgAAABMVAAAAAAAAExUAAAAAAAALAAAAbHdzX2dldF9vcGETFQAAAAAAACsVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHhUAAAAAAAAeFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2068,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACsVAAAAAAAALRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKxUAAAAAAAArFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2069,
					1,
					"insert",
					{
						"characters": "wsi"
					},
					"AwAAACwVAAAAAAAALRUAAAAAAAAAAAAALRUAAAAAAAAuFQAAAAAAAAAAAAAuFQAAAAAAAC8VAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALBUAAAAAAAAsFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2071,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADIVAAAAAAAAMxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMhUAAAAAAAAyFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2072,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADMVAAAAAAAANRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMxUAAAAAAAAzFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2073,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAADQVAAAAAAAANRUAAAAAAAAAAAAANRUAAAAAAAA3FQAAAAAAAAAAAAA3FQAAAAAAADgVAAAAAAAAAAAAADgVAAAAAAAAOhUAAAAAAAAAAAAANRUAAAAAAAA1FQAAAAAAAAIAAAAgIDUVAAAAAAAAORUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANBUAAAAAAAA0FQAAAAAAAAAAAAAAAPC/"
				],
				[
					2074,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAADkVAAAAAAAAOhUAAAAAAAAAAAAAOhUAAAAAAAA7FQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAORUAAAAAAAA5FQAAAAAAAAAAAAAAAPC/"
				],
				[
					2075,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADsVAAAAAAAAPRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxUAAAAAAAA7FQAAAAAAAAAAAAAAAPC/"
				],
				[
					2076,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AgAAADwVAAAAAAAAPRUAAAAAAAAAAAAAPRUAAAAAAAA+FQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPBUAAAAAAAA8FQAAAAAAAAAAAAAAAPC/"
				],
				[
					2077,
					2,
					"left_delete",
					null,
					"AgAAAD0VAAAAAAAAPRUAAAAAAAABAAAAczwVAAAAAAAAPBUAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAPhUAAAAAAAA+FQAAAAAAAAAAAAAAAPC/"
				],
				[
					2078,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADwVAAAAAAAAPhUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPBUAAAAAAAA8FQAAAAAAAAAAAAAAAPC/"
				],
				[
					2079,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AgAAAD0VAAAAAAAAPhUAAAAAAAAAAAAAPhUAAAAAAAA/FQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPRUAAAAAAAA9FQAAAAAAAAAAAAAAAPC/"
				],
				[
					2080,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAD8VAAAAAAAAQBUAAAAAAAAAAAAAQBUAAAAAAABBFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPxUAAAAAAAA/FQAAAAAAAAAAAAAAAPC/"
				],
				[
					2081,
					1,
					"insert",
					{
						"characters": " opq"
					},
					"BAAAAEEVAAAAAAAAQhUAAAAAAAAAAAAAQhUAAAAAAABDFQAAAAAAAAAAAABDFQAAAAAAAEQVAAAAAAAAAAAAAEQVAAAAAAAARRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQRUAAAAAAABBFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2082,
					1,
					"left_delete",
					null,
					"AQAAAEQVAAAAAAAARBUAAAAAAAABAAAAcQ",
					"AQAAAAAAAAABAAAARRUAAAAAAABFFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2083,
					1,
					"insert",
					{
						"characters": "aque->ws"
					},
					"CAAAAEQVAAAAAAAARRUAAAAAAAAAAAAARRUAAAAAAABGFQAAAAAAAAAAAABGFQAAAAAAAEcVAAAAAAAAAAAAAEcVAAAAAAAASBUAAAAAAAAAAAAASBUAAAAAAABJFQAAAAAAAAAAAABJFQAAAAAAAEoVAAAAAAAAAAAAAEoVAAAAAAAASxUAAAAAAAAAAAAASxUAAAAAAABMFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARBUAAAAAAABEFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2085,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CgAAAE4VAAAAAAAATxUAAAAAAAAAAAAATxUAAAAAAABTFQAAAAAAAAAAAABPFQAAAAAAAE8VAAAAAAAABAAAACAgICBPFQAAAAAAAFUVAAAAAAAAAAAAAFUVAAAAAAAAVhUAAAAAAAAAAAAAVhUAAAAAAABXFQAAAAAAAAAAAABXFQAAAAAAAFgVAAAAAAAAAAAAAFgVAAAAAAAAWRUAAAAAAAAAAAAAWRUAAAAAAABaFQAAAAAAAAAAAABaFQAAAAAAAFsVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAThUAAAAAAABOFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2086,
					1,
					"insert",
					{
						"characters": " minnet_ws_wrap"
					},
					"DwAAAFsVAAAAAAAAXBUAAAAAAAAAAAAAXBUAAAAAAABdFQAAAAAAAAAAAABdFQAAAAAAAF4VAAAAAAAAAAAAAF4VAAAAAAAAXxUAAAAAAAAAAAAAXxUAAAAAAABgFQAAAAAAAAAAAABgFQAAAAAAAGEVAAAAAAAAAAAAAGEVAAAAAAAAYhUAAAAAAAAAAAAAYhUAAAAAAABjFQAAAAAAAAAAAABjFQAAAAAAAGQVAAAAAAAAAAAAAGQVAAAAAAAAZRUAAAAAAAAAAAAAZRUAAAAAAABmFQAAAAAAAAAAAABmFQAAAAAAAGcVAAAAAAAAAAAAAGcVAAAAAAAAaBUAAAAAAAAAAAAAaBUAAAAAAABpFQAAAAAAAAAAAABpFQAAAAAAAGoVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWxUAAAAAAABbFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2087,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGoVAAAAAAAAbBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAahUAAAAAAABqFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2088,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAGsVAAAAAAAAbBUAAAAAAAAAAAAAbBUAAAAAAABtFQAAAAAAAAAAAABtFQAAAAAAAG4VAAAAAAAAAAAAAG4VAAAAAAAAbxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaxUAAAAAAABrFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2089,
					1,
					"insert",
					{
						"characters": " ws"
					},
					"AwAAAG8VAAAAAAAAcBUAAAAAAAAAAAAAcBUAAAAAAABxFQAAAAAAAAAAAABxFQAAAAAAAHIVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbxUAAAAAAABvFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2091,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHMVAAAAAAAAdBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcxUAAAAAAABzFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2097,
					1,
					"insert",
					{
						"characters": "sw"
					},
					"AgAAAHAVAAAAAAAAcRUAAAAAAAAAAAAAcRUAAAAAAAByFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcBUAAAAAAABwFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2098,
					2,
					"left_delete",
					null,
					"AgAAAHEVAAAAAAAAcRUAAAAAAAABAAAAd3AVAAAAAAAAcBUAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAchUAAAAAAAByFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2099,
					1,
					"insert",
					{
						"characters": "ws_dup("
					},
					"BwAAAHAVAAAAAAAAcRUAAAAAAAAAAAAAcRUAAAAAAAByFQAAAAAAAAAAAAByFQAAAAAAAHMVAAAAAAAAAAAAAHMVAAAAAAAAdBUAAAAAAAAAAAAAdBUAAAAAAAB1FQAAAAAAAAAAAAB1FQAAAAAAAHYVAAAAAAAAAAAAAHYVAAAAAAAAdxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcBUAAAAAAABwFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2101,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAHoVAAAAAAAAexUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAehUAAAAAAAB6FQAAAAAAAAAAAAAAAPC/"
				],
				[
					2110,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAexUAAAAAAAB7FQAAAAAAAAAAAAAAAPC/"
				],
				[
					2133,
					1,
					"cut",
					null,
					"AQAAAL4IAAAAAAAAvggAAAAAAAAcAAAAICAgIG9wYXF1ZS0+c2VzcyA9IHNlc3Npb247Cg",
					"AQAAAAAAAAABAAAAvggAAAAAAADaCAAAAAAAAAAAAAAAAPC/"
				],
				[
					2134,
					2,
					"paste",
					null,
					"AgAAAL4IAAAAAAAA2ggAAAAAAAAAAAAA2ggAAAAAAAD2CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvggAAAAAAAC+CAAAAAAAAAAAAAAAAPC/"
				],
				[
					2139,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AwAAAOYIAAAAAAAA5wgAAAAAAAAAAAAA5wgAAAAAAADnCAAAAAAAAAQAAABzZXNz5wgAAAAAAADoCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5ggAAAAAAADqCAAAAAAAAAAAAAAAAPC/"
				],
				[
					2148,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAAOsIAAAAAAAA7AgAAAAAAAAAAAAA7AgAAAAAAADsCAAAAAAAAAcAAABzZXNzaW9u",
					"AQAAAAAAAAABAAAA6wgAAAAAAADyCAAAAAAAAAAAAAAAAPC/"
				],
				[
					2157,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADIIAAAAAAAAMwgAAAAAAAAAAAAAMwgAAAAAAAA1CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMggAAAAAAAAyCAAAAAAAAAAAAAAAAPC/"
				],
				[
					2192,
					1,
					"cut",
					null,
					"AQAAAJwGAAAAAAAAnAYAAAAAAABTAAAAICAgIG9wYXF1ZS0+d3MgPSB3c19kdXAod3MpOwogICAgb3BhcXVlLT5zdGF0dXMgPSAwOwogICAgb3BhcXVlLT5oYW5kbGVyID0gSlNfTlVMTDs",
					"AQAAAAAAAAABAAAAnAYAAAAAAADvBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2195,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAAOwGAAAAAAAA7QYAAAAAAAAAAAAA4QcAAAAAAADhBwAAAAAAAAIAAAAgIO0GAAAAAAAA7gYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AYAAAAAAADsBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2197,
					1,
					"paste",
					null,
					"AQAAAO0GAAAAAAAAQAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QYAAAAAAADtBgAAAAAAAAAAAAAAAAAA"
				],
				[
					2199,
					1,
					"insert",
					{
						"characters": "\n\nassert"
					},
					"CwAAAOsGAAAAAAAA7AYAAAAAAAAAAAAA7AYAAAAAAADuBgAAAAAAAAAAAADuBgAAAAAAAO8GAAAAAAAAAAAAAO8GAAAAAAAA8QYAAAAAAAAAAAAA7AYAAAAAAADsBgAAAAAAAAIAAAAgIO8GAAAAAAAA8AYAAAAAAAAAAAAA8AYAAAAAAADxBgAAAAAAAAAAAADxBgAAAAAAAPIGAAAAAAAAAAAAAPIGAAAAAAAA8wYAAAAAAAAAAAAA8wYAAAAAAAD0BgAAAAAAAAAAAAD0BgAAAAAAAPUGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wYAAAAAAADrBgAAAAAAAAAAAAAAwHJA"
				],
				[
					2200,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPUGAAAAAAAA9wYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QYAAAAAAAD1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					2201,
					1,
					"insert",
					{
						"characters": "!opaque_>ws"
					},
					"CwAAAPYGAAAAAAAA9wYAAAAAAAAAAAAA9wYAAAAAAAD4BgAAAAAAAAAAAAD4BgAAAAAAAPkGAAAAAAAAAAAAAPkGAAAAAAAA+gYAAAAAAAAAAAAA+gYAAAAAAAD7BgAAAAAAAAAAAAD7BgAAAAAAAPwGAAAAAAAAAAAAAPwGAAAAAAAA/QYAAAAAAAAAAAAA/QYAAAAAAAD+BgAAAAAAAAAAAAD+BgAAAAAAAP8GAAAAAAAAAAAAAP8GAAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAABBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gYAAAAAAAD2BgAAAAAAAAAAAAAAAPC/"
				],
				[
					2203,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAIHAAAAAAAAAwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgcAAAAAAAACBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2209,
					1,
					"left_delete",
					null,
					"AQAAAP0GAAAAAAAA/QYAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAA/gYAAAAAAAD+BgAAAAAAAAAAAAAAAPC/"
				],
				[
					2210,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAP0GAAAAAAAA/gYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QYAAAAAAAD9BgAAAAAAAAAAAAAAAPC/"
				],
				[
					2244,
					2,
					"right_delete",
					null,
					"AgAAAOEWAAAAAAAA4RYAAAAAAAABAAAAKuEWAAAAAAAA4RYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA4RYAAAAAAADhFgAAAAAAAAAAAAAAAPC/"
				],
				[
					2245,
					1,
					"left_delete",
					null,
					"AQAAAOAWAAAAAAAA4BYAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAA4RYAAAAAAADhFgAAAAAAAAAAAAAAAPC/"
				],
				[
					2248,
					2,
					"left_delete",
					null,
					"AgAAAPQWAAAAAAAA9BYAAAAAAAABAAAAL/MWAAAAAAAA8xYAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAA9RYAAAAAAAD1FgAAAAAAAAAAAAAAAPC/"
				],
				[
					2261,
					2,
					"right_delete",
					null,
					"AgAAAKEVAAAAAAAAoRUAAAAAAAAGAAAAd3NfZHVwoRUAAAAAAAChFQAAAAAAAAEAAAAo",
					"AQAAAAAAAAABAAAAoRUAAAAAAACnFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2264,
					1,
					"left_delete",
					null,
					"AQAAAKQVAAAAAAAApBUAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAApRUAAAAAAAClFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2283,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BQAAAGUVAAAAAAAAZhUAAAAAAAAAAAAAZhUAAAAAAABoFQAAAAAAAAAAAABoFQAAAAAAAGoVAAAAAAAAAAAAAGoVAAAAAAAAaxUAAAAAAAAAAAAAaxUAAAAAAABsFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZRUAAAAAAABlFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2284,
					5,
					"left_delete",
					null,
					"BQAAAGsVAAAAAAAAaxUAAAAAAAABAAAAZmoVAAAAAAAAahUAAAAAAAABAAAAaWgVAAAAAAAAaBUAAAAAAAACAAAAICBmFQAAAAAAAGYVAAAAAAAAAgAAACAgZRUAAAAAAABlFQAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAbBUAAAAAAABsFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2290,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAKkVAAAAAAAAqxUAAAAAAAAAAAAANRUAAAAAAAA3FQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANRUAAAAAAACpFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2297,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"AwAAADQVAAAAAAAANRUAAAAAAAAAAAAANRUAAAAAAAA2FQAAAAAAAAAAAAA2FQAAAAAAADcVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANBUAAAAAAAA0FQAAAAAAAAAAAAAAAAAA"
				],
				[
					2298,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADcVAAAAAAAAORUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxUAAAAAAAA3FQAAAAAAAAAAAAAAAPC/"
				],
				[
					2299,
					1,
					"insert",
					{
						"characters": "sess"
					},
					"BAAAADgVAAAAAAAAORUAAAAAAAAAAAAAORUAAAAAAAA6FQAAAAAAAAAAAAA6FQAAAAAAADsVAAAAAAAAAAAAADsVAAAAAAAAPBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOBUAAAAAAAA4FQAAAAAAAAAAAAAAAPC/"
				],
				[
					2301,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD0VAAAAAAAAPhUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPRUAAAAAAAA9FQAAAAAAAAAAAAAAAPC/"
				],
				[
					2302,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAD4VAAAAAAAAQBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPhUAAAAAAAA+FQAAAAAAAAAAAAAAAPC/"
				],
				[
					2303,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAD8VAAAAAAAAQBUAAAAAAAAAAAAAQBUAAAAAAABBFQAAAAAAAAAAAABAFQAAAAAAAEIVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPxUAAAAAAAA/FQAAAAAAAAAAAAAAAPC/"
				],
				[
					2304,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAEIVAAAAAAAAQxUAAAAAAAAAAAAAQxUAAAAAAABEFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQhUAAAAAAABCFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2305,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEQVAAAAAAAARhUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARBUAAAAAAABEFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2306,
					1,
					"insert",
					{
						"characters": "IsObject8"
					},
					"CQAAAEUVAAAAAAAARhUAAAAAAAAAAAAARhUAAAAAAABHFQAAAAAAAAAAAABHFQAAAAAAAEgVAAAAAAAAAAAAAEgVAAAAAAAASRUAAAAAAAAAAAAASRUAAAAAAABKFQAAAAAAAAAAAABKFQAAAAAAAEsVAAAAAAAAAAAAAEsVAAAAAAAATBUAAAAAAAAAAAAATBUAAAAAAABNFQAAAAAAAAAAAABNFQAAAAAAAE4VAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARRUAAAAAAABFFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2307,
					1,
					"left_delete",
					null,
					"AQAAAE0VAAAAAAAATRUAAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAAThUAAAAAAABOFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2308,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAE0VAAAAAAAATxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATRUAAAAAAABNFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2309,
					1,
					"insert",
					{
						"characters": "sess->ws_obj"
					},
					"DAAAAE4VAAAAAAAATxUAAAAAAAAAAAAATxUAAAAAAABQFQAAAAAAAAAAAABQFQAAAAAAAFEVAAAAAAAAAAAAAFEVAAAAAAAAUhUAAAAAAAAAAAAAUhUAAAAAAABTFQAAAAAAAAAAAABTFQAAAAAAAFQVAAAAAAAAAAAAAFQVAAAAAAAAVRUAAAAAAAAAAAAAVRUAAAAAAABWFQAAAAAAAAAAAABWFQAAAAAAAFcVAAAAAAAAAAAAAFcVAAAAAAAAWBUAAAAAAAAAAAAAWBUAAAAAAABZFQAAAAAAAAAAAABZFQAAAAAAAFoVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAThUAAAAAAABOFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2311,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CgAAAFwVAAAAAAAAXRUAAAAAAAAAAAAAXRUAAAAAAABfFQAAAAAAAAAAAABdFQAAAAAAAF0VAAAAAAAAAgAAACAgXRUAAAAAAABhFQAAAAAAAAAAAABhFQAAAAAAAGIVAAAAAAAAAAAAAGIVAAAAAAAAYxUAAAAAAAAAAAAAYxUAAAAAAABkFQAAAAAAAAAAAABkFQAAAAAAAGUVAAAAAAAAAAAAAGUVAAAAAAAAZhUAAAAAAAAAAAAAZhUAAAAAAABnFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXBUAAAAAAABcFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2312,
					1,
					"insert",
					{
						"characters": " JS_DuPValu"
					},
					"CwAAAGcVAAAAAAAAaBUAAAAAAAAAAAAAaBUAAAAAAABpFQAAAAAAAAAAAABpFQAAAAAAAGoVAAAAAAAAAAAAAGoVAAAAAAAAaxUAAAAAAAAAAAAAaxUAAAAAAABsFQAAAAAAAAAAAABsFQAAAAAAAG0VAAAAAAAAAAAAAG0VAAAAAAAAbhUAAAAAAAAAAAAAbhUAAAAAAABvFQAAAAAAAAAAAABvFQAAAAAAAHAVAAAAAAAAAAAAAHAVAAAAAAAAcRUAAAAAAAAAAAAAcRUAAAAAAAByFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZxUAAAAAAABnFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2313,
					5,
					"left_delete",
					null,
					"BQAAAHEVAAAAAAAAcRUAAAAAAAABAAAAdXAVAAAAAAAAcBUAAAAAAAABAAAAbG8VAAAAAAAAbxUAAAAAAAABAAAAYW4VAAAAAAAAbhUAAAAAAAABAAAAVm0VAAAAAAAAbRUAAAAAAAABAAAAUA",
					"AQAAAAAAAAABAAAAchUAAAAAAAByFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2314,
					1,
					"insert",
					{
						"characters": "pValue"
					},
					"BgAAAG0VAAAAAAAAbhUAAAAAAAAAAAAAbhUAAAAAAABvFQAAAAAAAAAAAABvFQAAAAAAAHAVAAAAAAAAAAAAAHAVAAAAAAAAcRUAAAAAAAAAAAAAcRUAAAAAAAByFQAAAAAAAAAAAAByFQAAAAAAAHMVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbRUAAAAAAABtFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2315,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHMVAAAAAAAAdRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcxUAAAAAAABzFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2316,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAHQVAAAAAAAAdRUAAAAAAAAAAAAAdRUAAAAAAAB2FQAAAAAAAAAAAAB2FQAAAAAAAHcVAAAAAAAAAAAAAHcVAAAAAAAAeBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdBUAAAAAAAB0FQAAAAAAAAAAAAAAAPC/"
				],
				[
					2317,
					1,
					"insert",
					{
						"characters": " ses"
					},
					"BAAAAHgVAAAAAAAAeRUAAAAAAAAAAAAAeRUAAAAAAAB6FQAAAAAAAAAAAAB6FQAAAAAAAHsVAAAAAAAAAAAAAHsVAAAAAAAAfBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeBUAAAAAAAB4FQAAAAAAAAAAAAAAAPC/"
				],
				[
					2318,
					3,
					"left_delete",
					null,
					"AwAAAHsVAAAAAAAAexUAAAAAAAABAAAAc3oVAAAAAAAAehUAAAAAAAABAAAAZXkVAAAAAAAAeRUAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAfBUAAAAAAAB8FQAAAAAAAAAAAAAAAPC/"
				],
				[
					2319,
					1,
					"insert",
					{
						"characters": "sess->ws_obj"
					},
					"DAAAAHkVAAAAAAAAehUAAAAAAAAAAAAAehUAAAAAAAB7FQAAAAAAAAAAAAB7FQAAAAAAAHwVAAAAAAAAAAAAAHwVAAAAAAAAfRUAAAAAAAAAAAAAfRUAAAAAAAB+FQAAAAAAAAAAAAB+FQAAAAAAAH8VAAAAAAAAAAAAAH8VAAAAAAAAgBUAAAAAAAAAAAAAgBUAAAAAAACBFQAAAAAAAAAAAACBFQAAAAAAAIIVAAAAAAAAAAAAAIIVAAAAAAAAgxUAAAAAAAAAAAAAgxUAAAAAAACEFQAAAAAAAAAAAACEFQAAAAAAAIUVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeRUAAAAAAAB5FQAAAAAAAAAAAAAAAPC/"
				],
				[
					2321,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIYVAAAAAAAAhxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhhUAAAAAAACGFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2334,
					1,
					"insert",
					{
						"characters": "JS_"
					},
					"AwAAAEUVAAAAAAAARhUAAAAAAAAAAAAARhUAAAAAAABHFQAAAAAAAAAAAABHFQAAAAAAAEgVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARRUAAAAAAABFFQAAAAAAAAAAAAAAAPC/"
				],
				[
					2364,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAATQUAAAAAAABqBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2367,
					1,
					"insert",
					{
						"characters": "wsi="
					},
					"BAAAALEFAAAAAAAAsgUAAAAAAAAAAAAAsgUAAAAAAACzBQAAAAAAAAAAAACzBQAAAAAAALQFAAAAAAAAAAAAALQFAAAAAAAAtQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQUAAAAAAACxBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2369,
					1,
					"insert",
					{
						"characters": "session="
					},
					"CAAAALkFAAAAAAAAugUAAAAAAAAAAAAAugUAAAAAAAC7BQAAAAAAAAAAAAC7BQAAAAAAALwFAAAAAAAAAAAAALwFAAAAAAAAvQUAAAAAAAAAAAAAvQUAAAAAAAC+BQAAAAAAAAAAAAC+BQAAAAAAAL8FAAAAAAAAAAAAAL8FAAAAAAAAwAUAAAAAAAAAAAAAwAUAAAAAAADBBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQUAAAAAAAC5BQAAAAAAAAAAAAAAAPC/"
				],
				[
					2371,
					1,
					"insert",
					{
						"characters": "ws="
					},
					"AwAAAKcFAAAAAAAAqAUAAAAAAAAAAAAAqAUAAAAAAACpBQAAAAAAAAAAAACpBQAAAAAAAKoFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwUAAAAAAACnBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2375,
					1,
					"insert",
					{
						"characters": " opaque=%p"
					},
					"CgAAAKwFAAAAAAAArQUAAAAAAAAAAAAArQUAAAAAAACuBQAAAAAAAAAAAACuBQAAAAAAAK8FAAAAAAAAAAAAAK8FAAAAAAAAsAUAAAAAAAAAAAAAsAUAAAAAAACxBQAAAAAAAAAAAACxBQAAAAAAALIFAAAAAAAAAAAAALIFAAAAAAAAswUAAAAAAAAAAAAAswUAAAAAAAC0BQAAAAAAAAAAAAC0BQAAAAAAALUFAAAAAAAAAAAAALUFAAAAAAAAtgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAUAAAAAAACsBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2379,
					1,
					"insert",
					{
						"characters": "opaque,"
					},
					"BwAAAOQFAAAAAAAA5QUAAAAAAAAAAAAA5QUAAAAAAADmBQAAAAAAAAAAAADmBQAAAAAAAOcFAAAAAAAAAAAAAOcFAAAAAAAA6AUAAAAAAAAAAAAA6AUAAAAAAADpBQAAAAAAAAAAAADpBQAAAAAAAOoFAAAAAAAAAAAAAOoFAAAAAAAA6wUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AUAAAAAAADkBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2380,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOsFAAAAAAAA7AUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wUAAAAAAADrBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2384,
					1,
					"cut",
					null,
					"AQAAAIQFAAAAAAAAhAUAAAAAAAB4AAAAICBwcmludGYoIiVzOiBuZXcgTWlubmV0V2Vic29ja2V0OiB3cz0lcCBvcGFxdWU9JXAgd3NfbmV3KHdzaT0lcCwgc2Vzc2lvbj0lcClcbiIsIF9fZnVuY19fLCB3cywgb3BhcXVlLCB3c2ksIHNlc3Npb24pOwoK",
					"AQAAAAAAAAABAAAAhAUAAAAAAAD8BQAAAAAAAAAAAAAAAAAA"
				],
				[
					2387,
					1,
					"paste",
					null,
					"AQAAAJQGAAAAAAAADAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAYAAAAAAACUBgAAAAAAAAAAAAAAAAAA"
				],
				[
					2393,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAACwcAAAAAAAALBwAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "wscli.js",
			"settings":
			{
				"buffer_size": 9685,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "minnet-client-http.c",
			"settings":
			{
				"buffer_size": 7522,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABHHQAAI2luY2x1ZGUgIm1pbm5ldC1jbGllbnQuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXNwb25zZS5oIgojaW5jbHVkZSAianN1dGlscy5oIgoKaW50Cmh0dHBfY2xpZW50X2NhbGxiYWNrKHN0cnVjdCBsd3MqIHdzaSwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucyByZWFzb24sIHZvaWQqIHVzZXIsIHZvaWQqIGluLCBzaXplX3QgbGVuKSB7CgogIGlmKHJlYXNvbiA9PSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX0NMSUVOVF9WRVJJRllfQ0VSVFMpCiAgICByZXR1cm4gMDsKCiAgTWlubmV0Q2xpZW50KiBjbGllbnQgPSBsd3NfY2xpZW50KHdzaSk7CiAgTWlubmV0U2Vzc2lvbiogc2Vzc2lvbiA9ICZjbGllbnQtPnNlc3Npb247CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CgogIGlmKGx3c19pc19wb2xsX2NhbGxiYWNrKHJlYXNvbikpCiAgICByZXR1cm4gZmRfY2FsbGJhY2sod3NpLCByZWFzb24sICZjbGllbnQtPm9uLmZkLCBpbik7CgogIGlmKChvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY2xpZW50LT5jb250ZXh0LmpzKSkpIHsKICAgIGlmKCFvcGFxdWUtPnNlc3MgJiYgc2Vzc2lvbikKICAgICAgb3BhcXVlLT5zZXNzID0gc2Vzc2lvbjsKICB9CgogIGx3c2xfdXNlcigiY2xpZW50LWh0dHAgIiBGRygiJWQiKSAiJS0zOHMiIE5DICIgaXNfc3NsPSVpIGxlbj0lenUgaW49JyUuKnMnXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfaXNfc3NsKHdzaSksIGxlbiwgKGludClNSU4obGVuLCAzMiksIChjaGFyKilpbik7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMSUVOVF9GSUxURVJfUFJFX0VTVEFCTElTSDogewogICAgICBpZihqc19pc19udWxsaXNoKHNlc3Npb24tPnJlcV9vYmopKQogICAgICAgIHNlc3Npb24tPnJlcV9vYmogPSBtaW5uZXRfcmVxdWVzdF93cmFwKGNsaWVudC0+Y29udGV4dC5qcywgY2xpZW50LT5yZXF1ZXN0KTsKICAgICAgaWYoanNfaXNfbnVsbGlzaChzZXNzaW9uLT5yZXNwX29iaikpCiAgICAgICAgc2Vzc2lvbi0+cmVzcF9vYmogPSBtaW5uZXRfcmVzcG9uc2Vfd3JhcChjbGllbnQtPmNvbnRleHQuanMsIGNsaWVudC0+cmVzcG9uc2UpOwoKICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19TRVJWRVJfTkVXX0NMSUVOVF9JTlNUQU5USUFURUQ6CiAgICBjYXNlIExXU19DQUxMQkFDS19XU0lfQ1JFQVRFOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfQ09OTkVDVElORzogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQ6IHsKICAgICAgc2Vzc2lvbl96ZXJvKHNlc3Npb24pOwogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMSUVOVF9DT05ORUNUSU9OX0VSUk9SOiB7CiAgICAgIGlmKGpzX3Byb21pc2VfcGVuZGluZygmY2xpZW50LT5wcm9taXNlKSkgewogICAgICAgIEpTVmFsdWUgZXJyID0ganNfZXJyb3JfbmV3KGNsaWVudC0+Y29udGV4dC5qcywgIiVzIiwgaW4pOwogICAgICAgIGpzX3Byb21pc2VfcmVqZWN0KGNsaWVudC0+Y29udGV4dC5qcywgJmNsaWVudC0+cHJvbWlzZSwgZXJyKTsKICAgICAgICBKU19GcmVlVmFsdWUoY2xpZW50LT5jb250ZXh0LmpzLCBlcnIpOwogICAgICB9CiAgICAgIHJldHVybiAtMTsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19DTElFTlRfSFRUUF9CSU5EX1BST1RPQ09MOiB7CiAgICAgIHNlc3Npb24tPnJlcV9vYmogPSBKU19OVUxMOwogICAgICBzZXNzaW9uLT5yZXNwX29iaiA9IEpTX05VTEw7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfQ0xJRU5UX0hUVFBfRFJPUF9QUk9UT0NPTDogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMSUVOVF9BUFBFTkRfSEFORFNIQUtFX0hFQURFUjogewogICAgICBNaW5uZXRCdWZmZXIgYnVmID0gQlVGRkVSX04oKih1aW50OF90KiopaW4sIGxlbik7CiAgICAgIC8vIGJ1Zi5zdGFydCA9IHNjYW5fYmFja3dhcmRzKGJ1Zi5zdGFydCwgJ1wwJyk7CiAgICAgIGlmKEpTX0lzT2JqZWN0KGNsaWVudC0+aGVhZGVycykpIHsKICAgICAgICAvLyBjbGllbnQtPnJlcXVlc3QtPmhlYWRlcnMuc3RhcnQgPSBidWYuc3RhcnQ7CiAgICAgICAgaWYoaGVhZGVyc19hZGQoJmJ1Ziwgd3NpLCBjbGllbnQtPmhlYWRlcnMsIGNsaWVudC0+Y29udGV4dC5qcykpCiAgICAgICAgICByZXR1cm4gLTE7CiAgICAgICAgLy8gY2xpZW50LT5yZXF1ZXN0LT5oZWFkZXJzLmVuZCA9IGJ1Zi5lbmQ7CiAgICAgICAgKih1aW50OF90KiopaW4gPSBidWYud3JpdGU7CiAgICAgICAgbGVuID0gYnVmLmVuZCAtIGJ1Zi53cml0ZTsKICAgICAgfQogICAgICAvKiBpZighbHdzX2h0dHBfaXNfcmVkaXJlY3RlZF90b19nZXQod3NpKSkgewogICAgICAgICBsd3NfY2xpZW50X2h0dHBfYm9keV9wZW5kaW5nKHdzaSwgMSk7CiAgICAgICAgIGx3c19jYWxsYmFja19vbl93cml0YWJsZSh3c2kpOwogICAgICAgfSovCiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9ERVNUUk9ZOiB7CiAgICAgIGlmKGpzX3Byb21pc2VfcGVuZGluZygmY2xpZW50LT5wcm9taXNlKSkKICAgICAgICBqc19wcm9taXNlX3Jlc29sdmUoY2xpZW50LT5jb250ZXh0LmpzLCAmY2xpZW50LT5wcm9taXNlLCBKU19VTkRFRklORUQpOwogICAgICByZXR1cm4gLTE7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMT1NFRF9DTElFTlRfSFRUUDogewogICAgICBpZihvcGFxdWUtPnN0YXR1cyA8IENMT1NFRCkgewogICAgICAgIG9wYXF1ZS0+c3RhdHVzID0gQ0xPU0VEOwogICAgICAgIGlmKGNsaWVudC0+b24uY2xvc2UuY3R4KSB7CiAgICAgICAgICBKU1ZhbHVlQ29uc3QgY2JfYXJndltdID0ge0pTX0R1cFZhbHVlKGNsaWVudC0+b24uY2xvc2UuY3R4LCBzZXNzaW9uLT53c19vYmopLCBKU19OZXdJbnQzMihjbGllbnQtPm9uLmNsb3NlLmN0eCwgb3BhcXVlLT5lcnJvcil9OwogICAgICAgICAgY2xpZW50X2V4Y2VwdGlvbihjbGllbnQsIG1pbm5ldF9lbWl0KCZjbGllbnQtPm9uLmNsb3NlLCBjb3VudG9mKGNiX2FyZ3YpLCBjYl9hcmd2KSk7CiAgICAgICAgICBKU19GcmVlVmFsdWUoY2xpZW50LT5vbi5jbG9zZS5jdHgsIGNiX2FyZ3ZbMF0pOwogICAgICAgICAgSlNfRnJlZVZhbHVlKGNsaWVudC0+b24uY2xvc2UuY3R4LCBjYl9hcmd2WzFdKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgbHdzX2NhbmNlbF9zZXJ2aWNlKGx3c19nZXRfY29udGV4dCh3c2kpKTsgLyogYWJvcnQgcG9sbCB3YWl0ICovCiAgICAgIHJldHVybiAtMTsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19FU1RBQkxJU0hFRF9DTElFTlRfSFRUUDogewogICAgICBpbnQgc3RhdHVzOwogICAgICBzdGF0dXMgPSBsd3NfaHR0cF9jbGllbnRfaHR0cF9yZXNwb25zZSh3c2kpOwogICAgICBsd3NsX3VzZXIoImh0dHAtZXN0YWJsaXNoZWQgIzEgIiBGR0MoMTcxLCAiJS0zOHMiKSAiICBzZXJ2ZXIgcmVzcG9uc2U6ICVkXG4iLCBsd3NfY2FsbGJhY2tfbmFtZShyZWFzb24pICsgMTMsIHN0YXR1cyk7CiAgICAgIHsKICAgICAgICBzaXplX3QgaSwgaGRybGVuID0gbHdzX2hkcl90b3RhbF9sZW5ndGgod3NpLCBXU0lfVE9LRU5fSFRUUCk7CiAgICAgICAgY2hhciBidWZbKCgoaGRybGVuICsgMSkgKyA3KSA+PiAzKSA8PCAzXTsKICAgICAgICBsd3NfaGRyX2NvcHkod3NpLCBidWYsIHNpemVvZihidWYpLCBXU0lfVE9LRU5fSFRUUCk7CiAgICAgICAgYnVmW2hkcmxlbl0gPSAnXDAnOwogICAgICAgIGlmKGJ1ZlsoaSA9IGJ5dGVfY2hyKGJ1ZiwgaGRybGVuLCAnICcpKV0pCiAgICAgICAgICBpICs9IDE7CiAgICAgICAgY2xpZW50LT5yZXNwb25zZS0+c3RhdHVzX3RleHQgPSBqc19zdHJkdXAoY2xpZW50LT5jb250ZXh0LmpzLCAmYnVmW2ldKTsKICAgICAgfQogICAgICBpZihtZXRob2RfbnVtYmVyKGNsaWVudC0+Y29ubmVjdF9pbmZvLm1ldGhvZCkgPT0gTUVUSE9EX1BPU1QpIHsKICAgICAgICBsd3NfY2xpZW50X2h0dHBfYm9keV9wZW5kaW5nKHdzaSwgMSk7CiAgICAgICAgbHdzX2NhbGxiYWNrX29uX3dyaXRhYmxlKHdzaSk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19DTElFTlRfSFRUUF9XUklURUFCTEU6CiAgICBjYXNlIExXU19DQUxMQkFDS19IVFRQX1dSSVRFQUJMRTogewogICAgICBKU1ZhbHVlIHZhbHVlLCBuZXh0ID0gSlNfTlVMTDsKICAgICAgQk9PTCBkb25lID0gRkFMU0U7CiAgICAgIGludCBuOwogICAgICBzc2l6ZV90IHNpemUsIHI7CiAgICAgIC8vIE1pbm5ldFJlcXVlc3QqIHJlcSA9IGNsaWVudC0+cmVxdWVzdDsKICAgICAgTWlubmV0QnVmZmVyIGJ1ZjsKICAgICAgYnVmZmVyX2FsbG9jKCZidWYsIDEwMjQsIGNsaWVudC0+Y29udGV4dC5qcyk7CiAgICAgIGlmKGx3c19odHRwX2lzX3JlZGlyZWN0ZWRfdG9fZ2V0KHdzaSkpCiAgICAgICAgYnJlYWs7CiAgICAgIHdoaWxlKCFkb25lKSB7CiAgICAgICAgdmFsdWUgPSBqc19pdGVyYXRvcl9uZXh0KGNsaWVudC0+Y29udGV4dC5qcywgY2xpZW50LT5ib2R5LCAmbmV4dCwgJmRvbmUsIDAsIDApOwogICAgICAgIGlmKCFqc19pc19udWxsaXNoKHZhbHVlKSkgewogICAgICAgICAgSlNCdWZmZXIgYiA9IGpzX2J1ZmZlcl9uZXcoY2xpZW50LT5jb250ZXh0LmpzLCB2YWx1ZSk7CiAgICAgICAgICAvLyBwcmludGYoIlx4MWJbMktccnlpZWxkZWQgJXAgJXp1XG4iLCBiLmRhdGEsIGIuc2l6ZSk7CiAgICAgICAgICBidWZmZXJfYXBwZW5kKCZidWYsIGIuZGF0YSwgYi5zaXplLCBjbGllbnQtPmNvbnRleHQuanMpOwogICAgICAgICAgLy8gcHJpbnRmKCJceDFiWzJLXHJidWZmZXJlZCAlenUvJXp1IGJ5dGVzXG4iLCBidWZmZXJfQllURVMoJmJ1ZiksIGJ1ZmZlcl9IRUFEKCZidWYpKTsKICAgICAgICAgIGpzX2J1ZmZlcl9mcmVlKCZiLCBjbGllbnQtPmNvbnRleHQuanMpOwogICAgICAgIH0KICAgICAgfQogICAgICBuID0gZG9uZSA/IExXU19XUklURV9IVFRQX0ZJTkFMIDogTFdTX1dSSVRFX0hUVFA7CiAgICAgIHNpemUgPSBidWYud3JpdGUgLSBidWYuc3RhcnQ7CiAgICAgIGlmKChyID0gbHdzX3dyaXRlKHdzaSwgYnVmLnN0YXJ0LCBzaXplLCAoZW51bSBsd3Nfd3JpdGVfcHJvdG9jb2wpbikpICE9IHNpemUpCiAgICAgICAgcmV0dXJuIDE7CiAgICAgIC8vIHByaW50ZigiXHgxYlsyS1xyd3JvdGUgJXpkJXNcbiIsIHIsIG4gPT0gTFdTX1dSSVRFX0hUVFBfRklOQUwgPyAiIChmaW5hbCkiIDogIiIpOwogICAgICBpZihuICE9IExXU19XUklURV9IVFRQX0ZJTkFMKQogICAgICAgIGx3c19jYWxsYmFja19vbl93cml0YWJsZSh3c2kpOwogICAgICByZXR1cm4gMDsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFX0NMSUVOVF9IVFRQOiB7CiAgICAgIGludCByZXQ7CiAgICAgIHN0YXRpYyB1aW50OF90IGJ1ZmZlclsxMDI0ICsgTFdTX1BSRV07CiAgICAgIE1pbm5ldEJ1ZmZlciBidWYgPSBCVUZGRVIoYnVmZmVyKTsKICAgICAgaW50IGxlbiA9IGJ1ZmZlcl9BVkFJTCgmYnVmKTsKICAgICAgbHdzbF91c2VyKCJodHRwICMxICAiIEZHQygxNzEsICIlLTM4cyIpICIgZmQ9JWQgYnVmPSVwIHdyaXRlPSV6dSBsZW49JWRcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQod3NpKSwgYmxvY2tfQkVHSU4oJmJ1ZiksIGJ1ZmZlcl9IRUFEKCZidWYpLCBsZW4pOwogICAgICByZXQgPSBsd3NfaHR0cF9jbGllbnRfcmVhZCh3c2ksIChjaGFyKiopJmJ1Zi53cml0ZSwgJmxlbik7CiAgICAgIGlmKHJldCkKICAgICAgICByZXR1cm4gLTE7CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1JFQ0VJVkVfQ0xJRU5UX0hUVFBfUkVBRDogewogICAgICBsd3NsX3VzZXIoImh0dHAtcmVhZCAjMSAgIiBGR0MoMTcxLCAiJS0zOHMiKSAiICIgRkdDKDIyNiwgImZkPSVkIikgIiAiIEZHQyg4NywgImxlbj0lenUiKSAiICIgRkdDKDEyNSwgImluPSclLipzJyIpICJcbiIsCiAgICAgICAgICAgICAgICBsd3NfY2FsbGJhY2tfbmFtZShyZWFzb24pICsgMTMsCiAgICAgICAgICAgICAgICBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLAogICAgICAgICAgICAgICAgbGVuLAogICAgICAgICAgICAgICAgKGludClNSU4obGVuLCAzMiksCiAgICAgICAgICAgICAgICAoY2hhciopaW4pOwogICAgICBNaW5uZXRSZXNwb25zZSogcmVzcCA9IG1pbm5ldF9yZXNwb25zZV9kYXRhMihjbGllbnQtPmNvbnRleHQuanMsIHNlc3Npb24tPnJlc3Bfb2JqKTsKICAgICAgYnVmZmVyX2FwcGVuZCgmcmVzcC0+Ym9keSwgaW4sIGxlbiwgY2xpZW50LT5jb250ZXh0LmpzKTsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfQ09NUExFVEVEX0NMSUVOVF9IVFRQOiB7CiAgICAgIE1pbm5ldFJlc3BvbnNlKiByZXNwID0gY2xpZW50LT5yZXNwb25zZTsKICAgICAgaGVhZGVyc19nZXQoY2xpZW50LT5jb250ZXh0LmpzLCAmcmVzcC0+aGVhZGVycywgd3NpKTsKICAgICAgaWYoY2xpZW50LT5vbi5odHRwLmN0eCkgewogICAgICAgIGludDMyX3QgcmVzdWx0ID0gLTE7CiAgICAgICAgSlNWYWx1ZSByZXQ7CiAgICAgICAgcmV0ID0gbWlubmV0X2VtaXQoJmNsaWVudC0+b24uaHR0cCwgMiwgJnNlc3Npb24tPnJlcV9vYmopOwogICAgICAgIGlmKCFjbGllbnRfZXhjZXB0aW9uKGNsaWVudCwgcmV0KSkgewogICAgICAgICAgaWYoSlNfSXNOdW1iZXIocmV0KSkKICAgICAgICAgICAgSlNfVG9JbnQzMihjbGllbnQtPm9uLmh0dHAuY3R4LCAmcmVzdWx0LCByZXQpOwogICAgICAgIH0KICAgICAgICBsd3NfY2FuY2VsX3NlcnZpY2UobHdzX2dldF9jb250ZXh0KHdzaSkpOyAvKiBhYm9ydCBwb2xsIHdhaXQgKi8KCiAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0RFU1RST1k6IHsKICAgICAgYnJlYWs7CiAgICB9CiAgICBkZWZhdWx0OiB7CiAgICAgIG1pbm5ldF9sd3NfdW5oYW5kbGVkKF9fZnVuY19fLCByZWFzb24pOwogICAgICBicmVhazsKICAgIH0KICB9CgogIC8qIGlmKHJlYXNvbiA8IExXU19DQUxMQkFDS19BRERfUE9MTF9GRCB8fCByZWFzb24gPiBMV1NfQ0FMTEJBQ0tfVU5MT0NLX1BPTEwpCiAgICAgbHdzbF9ub3RpY2UoImNsaWVudC1odHRwICAlLTM4cyBmZD0laSwgaW49JyUuKnMnXG4iLCBsd3NfY2FsbGJhY2tfbmFtZShyZWFzb24pICsgMTMsIGx3c19nZXRfc29ja2V0X2ZkKGx3c19nZXRfbmV0d29ya193c2kod3NpKSksIChpbnQpbGVuLCAoY2hhciopaW4pOwogKi8KICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwp9CgAAAAAAAAAARx0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAADAIAAAAAAAAMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "session,"
					},
					"CAAAACsCAAAAAAAALAIAAAAAAAAAAAAALAIAAAAAAAAtAgAAAAAAAAAAAAAtAgAAAAAAAC4CAAAAAAAAAAAAAC4CAAAAAAAALwIAAAAAAAAAAAAALwIAAAAAAAAwAgAAAAAAAAAAAAAwAgAAAAAAADECAAAAAAAAAAAAADECAAAAAAAAMgIAAAAAAAAAAAAAMgIAAAAAAAAzAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwIAAAAAAAArAgAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADMCAAAAAAAANAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwIAAAAAAAAzAgAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAMgIAAAAAAAAyAgAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAMgIAAAAAAAAyAgAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAMgIAAAAAAAAyAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-url.c",
			"settings":
			{
				"buffer_size": 18850,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAABQIAAAAAAAAJAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAABQIAAAAAAAAJAgAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAMQIAAAAAAAAxAgAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"paste",
					null,
					"AQAAAIsgAAAAAAAAwiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiyAAAAAAAACLIAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"paste",
					null,
					"AQAAAMIgAAAAAAAACyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwiAAAAAAAADCIAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"paste",
					null,
					"AgAAAOYgAAAAAAAA8SAAAAAAAAAAAAAA8SAAAAAAAADxIAAAAAAAAAwAAABKU1ZhbHVlQ29uc3Q",
					"AQAAAAAAAAABAAAA5iAAAAAAAADyIAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "wsi"
					},
					"AwAAAPEgAAAAAAAA8iAAAAAAAAAAAAAA8iAAAAAAAADzIAAAAAAAAAAAAADzIAAAAAAAAPQgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8SAAAAAAAADxIAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					6,
					"right_delete",
					null,
					"BgAAAPQgAAAAAAAA9CAAAAAAAAABAAAAIPQgAAAAAAAA9CAAAAAAAAABAAAAdvQgAAAAAAAA9CAAAAAAAAABAAAAYfQgAAAAAAAA9CAAAAAAAAABAAAAbPQgAAAAAAAA9CAAAAAAAAABAAAAdfQgAAAAAAAA9CAAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA9CAAAAAAAAD0IAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAAchAAAAAAAACCEAAAAAAAAAAAAACCEAAAAAAAAKIQAAAAAAAAAAAAAKIQAAAAAAAAshAAAAAAAAAAAAAAghAAAAAAAACCEAAAAAAAACAAAAICAIIQAAAAAAAAghAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAByEAAAAAAAAHIQAAAAAAAP///////+9/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAkhAAAAAAAACiEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACSEAAAAAAAAJIQAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"left_delete",
					null,
					"AQAAAIsgAAAAAAAAiyAAAAAAAAA3AAAAQk9PTCB1cmxfZnJvbXdzaShNaW5uZXRVUkwqLCBzdHJ1Y3QgbHdzKiwgSlNDb250ZXh0Kik7Cg",
					"AQAAAAAAAAABAAAAiyAAAAAAAADCIAAAAAAAAAAAAAAAAAAA"
				],
				[
					37,
					4,
					"right_delete",
					null,
					"BAAAAJkgAAAAAAAAmSAAAAAAAAABAAAAdpkgAAAAAAAAmSAAAAAAAAABAAAAYZkgAAAAAAAAmSAAAAAAAAABAAAAbJkgAAAAAAAAmSAAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAmSAAAAAAAACZIAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "wsi"
					},
					"AwAAAJkgAAAAAAAAmiAAAAAAAAAAAAAAmiAAAAAAAACbIAAAAAAAAAAAAACbIAAAAAAAAJwgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmSAAAAAAAACZIAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"right_delete",
					null,
					"AQAAAJwgAAAAAAAAnCAAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAnCAAAAAAAACcIAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAM4gAAAAAAAAzyAAAAAAAAAAAAAAzyAAAAAAAADRIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAziAAAAAAAADOIAAAAAAAAP///////+9/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAANEgAAAAAAAA0yAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0SAAAAAAAADRIAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"left_delete",
					null,
					"AQAAANEgAAAAAAAA0SAAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAA0yAAAAAAAADTIAAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "url->"
					},
					"BQAAANEgAAAAAAAA0iAAAAAAAAAAAAAA0iAAAAAAAADTIAAAAAAAAAAAAADTIAAAAAAAANQgAAAAAAAAAAAAANQgAAAAAAAA1SAAAAAAAAAAAAAA1SAAAAAAAADWIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0SAAAAAAAADRIAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "host"
					},
					"BAAAANYgAAAAAAAA1yAAAAAAAAAAAAAA1yAAAAAAAADYIAAAAAAAAAAAAADYIAAAAAAAANkgAAAAAAAAAAAAANkgAAAAAAAA2iAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1iAAAAAAAADWIAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANogAAAAAAAA2yAAAAAAAAAAAAAA2yAAAAAAAADcIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2iAAAAAAAADaIAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANwgAAAAAAAA3SAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3CAAAAAAAADcIAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "ks"
					},
					"AgAAAN0gAAAAAAAA3iAAAAAAAAAAAAAA3iAAAAAAAADfIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3SAAAAAAAADdIAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					2,
					"left_delete",
					null,
					"AgAAAN4gAAAAAAAA3iAAAAAAAAABAAAAc90gAAAAAAAA3SAAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAA3yAAAAAAAADfIAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "js_malloc"
					},
					"CQAAAN0gAAAAAAAA3iAAAAAAAAAAAAAA3iAAAAAAAADfIAAAAAAAAAAAAADfIAAAAAAAAOAgAAAAAAAAAAAAAOAgAAAAAAAA4SAAAAAAAAAAAAAA4SAAAAAAAADiIAAAAAAAAAAAAADiIAAAAAAAAOMgAAAAAAAAAAAAAOMgAAAAAAAA5CAAAAAAAAAAAAAA5CAAAAAAAADlIAAAAAAAAAAAAADlIAAAAAAAAOYgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3SAAAAAAAADdIAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOYgAAAAAAAA6CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5iAAAAAAAADmIAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAOcgAAAAAAAA6CAAAAAAAAAAAAAA6CAAAAAAAADpIAAAAAAAAAAAAADpIAAAAAAAAOogAAAAAAAAAAAAAOogAAAAAAAA6yAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5yAAAAAAAADnIAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOsgAAAAAAAA7CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6yAAAAAAAADrIAAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"paste",
					null,
					"AQAAAOwgAAAAAAAAACEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7CAAAAAAAADsIAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAAhAAAAAAAAAiEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAACEAAAAAAAAAIQAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "\nszie_t"
					},
					"CAAAAM4gAAAAAAAAzyAAAAAAAAAAAAAAzyAAAAAAAADRIAAAAAAAAAAAAADRIAAAAAAAANIgAAAAAAAAAAAAANIgAAAAAAAA0yAAAAAAAAAAAAAA0yAAAAAAAADUIAAAAAAAAAAAAADUIAAAAAAAANUgAAAAAAAAAAAAANUgAAAAAAAA1iAAAAAAAAAAAAAA1iAAAAAAAADXIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAziAAAAAAAADOIAAAAAAAAP///////+9/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "int"
					},
					"BAAAANEgAAAAAAAA0iAAAAAAAAAAAAAA0iAAAAAAAADSIAAAAAAAAAYAAABzemllX3TSIAAAAAAAANMgAAAAAAAAAAAAANMgAAAAAAAA1CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1yAAAAAAAADRIAAAAAAAAAAAAAAAADRA"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": " len"
					},
					"BAAAANQgAAAAAAAA1SAAAAAAAAAAAAAA1SAAAAAAAADWIAAAAAAAAAAAAADWIAAAAAAAANcgAAAAAAAAAAAAANcgAAAAAAAA2CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1CAAAAAAAADUIAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANggAAAAAAAA2SAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2CAAAAAAAADYIAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"left_delete",
					null,
					"AQAAANggAAAAAAAA2CAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA2SAAAAAAAADZIAAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANggAAAAAAAA2SAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2CAAAAAAAADYIAAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "len"
					},
					"AwAAAPcgAAAAAAAA+CAAAAAAAAAAAAAA+CAAAAAAAAD5IAAAAAAAAAAAAAD5IAAAAAAAAPogAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9yAAAAAAAAD3IAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAPogAAAAAAAA+yAAAAAAAAAAAAAA+yAAAAAAAAD8IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+iAAAAAAAAD6IAAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					2,
					"left_delete",
					null,
					"AgAAABIhAAAAAAAAEiEAAAAAAAABAAAAKREhAAAAAAAAESEAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAEyEAAAAAAAATIQAAAAAAAP///////+9/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "wsi,"
					},
					"BAAAABEhAAAAAAAAEiEAAAAAAAAAAAAAEiEAAAAAAAATIQAAAAAAAAAAAAATIQAAAAAAABQhAAAAAAAAAAAAABQhAAAAAAAAFSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAESEAAAAAAAARIQAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": " WSI_TOKEN"
					},
					"CgAAABUhAAAAAAAAFiEAAAAAAAAAAAAAFiEAAAAAAAAXIQAAAAAAAAAAAAAXIQAAAAAAABghAAAAAAAAAAAAABghAAAAAAAAGSEAAAAAAAAAAAAAGSEAAAAAAAAaIQAAAAAAAAAAAAAaIQAAAAAAABshAAAAAAAAAAAAABshAAAAAAAAHCEAAAAAAAAAAAAAHCEAAAAAAAAdIQAAAAAAAAAAAAAdIQAAAAAAAB4hAAAAAAAAAAAAAB4hAAAAAAAAHyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFSEAAAAAAAAVIQAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "_HOST);"
					},
					"BwAAAB8hAAAAAAAAICEAAAAAAAAAAAAAICEAAAAAAAAhIQAAAAAAAAAAAAAhIQAAAAAAACIhAAAAAAAAAAAAACIhAAAAAAAAIyEAAAAAAAAAAAAAIyEAAAAAAAAkIQAAAAAAAAAAAAAkIQAAAAAAACUhAAAAAAAAAAAAACUhAAAAAAAAJiEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHyEAAAAAAAAfIQAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"cut",
					null,
					"AQAAAPcgAAAAAAAA9yAAAAAAAAAvAAAAbGVuID1sd3NfaGRyX3RvdGFsX2xlbmd0aCh3c2ksIFdTSV9UT0tFTl9IT1NUKTs",
					"AQAAAAAAAAABAAAA9yAAAAAAAAAmIQAAAAAAAP///////+9/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANkgAAAAAAAA2iAAAAAAAAAAAAAA2iAAAAAAAADcIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2SAAAAAAAADZIAAAAAAAAAAAAAAAIHJA"
				],
				[
					92,
					1,
					"paste",
					null,
					"AQAAANwgAAAAAAAACyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3CAAAAAAAADcIAAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "len+1);"
					},
					"BwAAACkhAAAAAAAAKiEAAAAAAAAAAAAAKiEAAAAAAAArIQAAAAAAAAAAAAArIQAAAAAAACwhAAAAAAAAAAAAACwhAAAAAAAALSEAAAAAAAAAAAAALSEAAAAAAAAuIQAAAAAAAAAAAAAuIQAAAAAAAC8hAAAAAAAAAAAAAC8hAAAAAAAAMCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKSEAAAAAAAApIQAAAAAAAAAAAAAAoH5A"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "\nlws_hdr"
					},
					"CQAAADAhAAAAAAAAMSEAAAAAAAAAAAAAMSEAAAAAAAAzIQAAAAAAAAAAAAAzIQAAAAAAADQhAAAAAAAAAAAAADQhAAAAAAAANSEAAAAAAAAAAAAANSEAAAAAAAA2IQAAAAAAAAAAAAA2IQAAAAAAADchAAAAAAAAAAAAADchAAAAAAAAOCEAAAAAAAAAAAAAOCEAAAAAAAA5IQAAAAAAAAAAAAA5IQAAAAAAADohAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMCEAAAAAAAAwIQAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"paste",
					null,
					"AgAAADMhAAAAAAAAQCEAAAAAAAAAAAAAQCEAAAAAAABAIQAAAAAAAAcAAABsd3NfaGRy",
					"AQAAAAAAAAABAAAAMyEAAAAAAAA6IQAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"left_delete",
					null,
					"AQAAAD8hAAAAAAAAPyEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAQCEAAAAAAABAIQAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "8ws"
					},
					"AwAAAD8hAAAAAAAAQCEAAAAAAAAAAAAAQCEAAAAAAABBIQAAAAAAAAAAAABBIQAAAAAAAEIhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPyEAAAAAAAA/IQAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					3,
					"left_delete",
					null,
					"AwAAAEEhAAAAAAAAQSEAAAAAAAABAAAAc0AhAAAAAAAAQCEAAAAAAAABAAAAdz8hAAAAAAAAPyEAAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAAQiEAAAAAAABCIQAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAD8hAAAAAAAAQSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPyEAAAAAAAA/IQAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "ws9"
					},
					"AwAAAEAhAAAAAAAAQSEAAAAAAAAAAAAAQSEAAAAAAABCIQAAAAAAAAAAAABCIQAAAAAAAEMhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQCEAAAAAAABAIQAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"left_delete",
					null,
					"AQAAAEIhAAAAAAAAQiEAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAAQyEAAAAAAABDIQAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "i,"
					},
					"AgAAAEIhAAAAAAAAQyEAAAAAAAAAAAAAQyEAAAAAAABEIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQiEAAAAAAABCIQAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " url"
					},
					"BAAAAEQhAAAAAAAARSEAAAAAAAAAAAAARSEAAAAAAABGIQAAAAAAAAAAAABGIQAAAAAAAEchAAAAAAAAAAAAAEchAAAAAAAASCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARCEAAAAAAABEIQAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "->host,"
					},
					"BwAAAEghAAAAAAAASSEAAAAAAAAAAAAASSEAAAAAAABKIQAAAAAAAAAAAABKIQAAAAAAAEshAAAAAAAAAAAAAEshAAAAAAAATCEAAAAAAAAAAAAATCEAAAAAAABNIQAAAAAAAAAAAABNIQAAAAAAAE4hAAAAAAAAAAAAAE4hAAAAAAAATyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASCEAAAAAAABIIQAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": " len+1"
					},
					"BgAAAE8hAAAAAAAAUCEAAAAAAAAAAAAAUCEAAAAAAABRIQAAAAAAAAAAAABRIQAAAAAAAFIhAAAAAAAAAAAAAFIhAAAAAAAAUyEAAAAAAAAAAAAAUyEAAAAAAABUIQAAAAAAAAAAAABUIQAAAAAAAFUhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATyEAAAAAAABPIQAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": ",m"
					},
					"AgAAAFUhAAAAAAAAViEAAAAAAAAAAAAAViEAAAAAAABXIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVSEAAAAAAABVIQAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"left_delete",
					null,
					"AQAAAFYhAAAAAAAAViEAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAVyEAAAAAAABXIQAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFYhAAAAAAAAVyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAViEAAAAAAABWIQAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "WSI_TOKEN_HOST"
					},
					"DgAAAFchAAAAAAAAWCEAAAAAAAAAAAAAWCEAAAAAAABZIQAAAAAAAAAAAABZIQAAAAAAAFohAAAAAAAAAAAAAFohAAAAAAAAWyEAAAAAAAAAAAAAWyEAAAAAAABcIQAAAAAAAAAAAABcIQAAAAAAAF0hAAAAAAAAAAAAAF0hAAAAAAAAXiEAAAAAAAAAAAAAXiEAAAAAAABfIQAAAAAAAAAAAABfIQAAAAAAAGAhAAAAAAAAAAAAAGAhAAAAAAAAYSEAAAAAAAAAAAAAYSEAAAAAAABiIQAAAAAAAAAAAABiIQAAAAAAAGMhAAAAAAAAAAAAAGMhAAAAAAAAZCEAAAAAAAAAAAAAZCEAAAAAAABlIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVyEAAAAAAABXIQAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					2,
					"left_delete",
					null,
					"AgAAAC0hAAAAAAAALSEAAAAAAAABAAAAMSwhAAAAAAAALCEAAAAAAAABAAAAKw",
					"AQAAAAAAAAABAAAALiEAAAAAAAAuIQAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					2,
					"right_delete",
					null,
					"AgAAAFEhAAAAAAAAUSEAAAAAAAABAAAAK1EhAAAAAAAAUSEAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAUSEAAAAAAABRIQAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "+1"
					},
					"AgAAAAohAAAAAAAACyEAAAAAAAAAAAAACyEAAAAAAAAMIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACiEAAAAAAAAKIQAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGQhAAAAAAAAZSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZCEAAAAAAABkIQAAAAAAAAAAAAAA4H9A"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGUhAAAAAAAAZiEAAAAAAAAAAAAAZiEAAAAAAABoIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZSEAAAAAAABlIQAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"cut",
					null,
					"AQAAANwgAAAAAAAA3CAAAAAAAACMAAAAbGVuID1sd3NfaGRyX3RvdGFsX2xlbmd0aCh3c2ksIFdTSV9UT0tFTl9IT1NUKSsxOwogIHVybC0+aG9zdCA9IGpzX21hbGxvYyhjdHgsIGxlbik7CiAgbHdzX2hkcl9jb3B5KHdzaSwgdXJsLT5ob3N0LCBsZW4sIFdTSV9UT0tFTl9IT1NUKTsKICA",
					"AQAAAAAAAAABAAAA3CAAAAAAAABoIQAAAAAAAAAAAAAAADRA"
				],
				[
					133,
					2,
					"paste",
					null,
					"AgAAANwgAAAAAAAAaCEAAAAAAAAAAAAAaCEAAAAAAAD0IQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3CAAAAAAAADcIAAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAGghAAAAAAAAaSEAAAAAAAAAAAAAaSEAAAAAAABrIQAAAAAAAAAAAAD1IQAAAAAAAPUhAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAaCEAAAAAAABoIQAAAAAAAAAAAAAAADRA"
				],
				[
					138,
					4,
					"left_delete",
					null,
					"BAAAAJchAAAAAAAAlyEAAAAAAAABAAAAVJYhAAAAAAAAliEAAAAAAAABAAAAU5UhAAAAAAAAlSEAAAAAAAABAAAAT5QhAAAAAAAAlCEAAAAAAAABAAAASA",
					"AQAAAAAAAAABAAAAmCEAAAAAAACYIQAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "GET_URI"
					},
					"BwAAAJQhAAAAAAAAlSEAAAAAAAAAAAAAlSEAAAAAAACWIQAAAAAAAAAAAACWIQAAAAAAAJchAAAAAAAAAAAAAJchAAAAAAAAmCEAAAAAAAAAAAAAmCEAAAAAAACZIQAAAAAAAAAAAACZIQAAAAAAAJohAAAAAAAAAAAAAJohAAAAAAAAmyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlCEAAAAAAACUIQAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					4,
					"right_delete",
					null,
					"BAAAAKchAAAAAAAApyEAAAAAAAABAAAAaKchAAAAAAAApyEAAAAAAAABAAAAb6chAAAAAAAApyEAAAAAAAABAAAAc6chAAAAAAAApyEAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAApyEAAAAAAACnIQAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": "path"
					},
					"BAAAAKchAAAAAAAAqCEAAAAAAAAAAAAAqCEAAAAAAACpIQAAAAAAAAAAAACpIQAAAAAAAKohAAAAAAAAAAAAAKohAAAAAAAAqyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApyEAAAAAAACnIQAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					5,
					"left_delete",
					null,
					"BQAAAPQhAAAAAAAA9CEAAAAAAAABAAAAVPMhAAAAAAAA8yEAAAAAAAABAAAAU/IhAAAAAAAA8iEAAAAAAAABAAAAT/EhAAAAAAAA8SEAAAAAAAABAAAASPAhAAAAAAAA8CEAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAA9SEAAAAAAAD1IQAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": "_GET_URI"
					},
					"CAAAAPAhAAAAAAAA8SEAAAAAAAAAAAAA8SEAAAAAAADyIQAAAAAAAAAAAADyIQAAAAAAAPMhAAAAAAAAAAAAAPMhAAAAAAAA9CEAAAAAAAAAAAAA9CEAAAAAAAD1IQAAAAAAAAAAAAD1IQAAAAAAAPYhAAAAAAAAAAAAAPYhAAAAAAAA9yEAAAAAAAAAAAAA9yEAAAAAAAD4IQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8CEAAAAAAADwIQAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"cut",
					null,
					"AQAAAJwhAAAAAAAAnCEAAAAAAAACAAAAKzE",
					"AQAAAAAAAAABAAAAniEAAAAAAACcIQAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"paste",
					null,
					"AQAAAL4hAAAAAAAAwCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAviEAAAAAAAC+IQAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": "if(("
					},
					"BAAAAGshAAAAAAAAbCEAAAAAAAAAAAAAbCEAAAAAAABtIQAAAAAAAAAAAABtIQAAAAAAAG4hAAAAAAAAAAAAAG4hAAAAAAAAbyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAayEAAAAAAABrIQAAAAAAAAAAAAAAADRA"
				],
				[
					174,
					1,
					"left_delete",
					null,
					"AQAAAKAhAAAAAAAAoCEAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAoSEAAAAAAAChIQAAAAAAAP///////+9/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "))"
					},
					"AgAAAKAhAAAAAAAAoSEAAAAAAAAAAAAAoSEAAAAAAACiIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoCEAAAAAAACgIQAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKIhAAAAAAAAoyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoiEAAAAAAACiIQAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKMhAAAAAAAApSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoyEAAAAAAACjIQAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"right_delete",
					null,
					"AQAAAKQhAAAAAAAApCEAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAApCEAAAAAAACkIQAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": "+1"
					},
					"AgAAAOwhAAAAAAAA7SEAAAAAAAAAAAAA7SEAAAAAAADuIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7CEAAAAAAADsIQAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAAMiAAAAAAAABCIAAAAAAAAAAAAABCIAAAAAAAAGIgAAAAAAAAAAAAAGIgAAAAAAAAciAAAAAAAAAAAAAAQiAAAAAAAABCIAAAAAAAACAAAAICAEIgAAAAAAAAQiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAyIAAAAAAAADIgAAAAAAAP///////+9/"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": "\nif(("
					},
					"BgAAANwgAAAAAAAA3SAAAAAAAAAAAAAA3SAAAAAAAADfIAAAAAAAAAAAAADfIAAAAAAAAOAgAAAAAAAAAAAAAOAgAAAAAAAA4SAAAAAAAAAAAAAA4SAAAAAAAADiIAAAAAAAAAAAAADiIAAAAAAAAOMgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3CAAAAAAAADcIAAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					3,
					"left_delete",
					null,
					"AwAAABMhAAAAAAAAEyEAAAAAAAABAAAAOxIhAAAAAAAAEiEAAAAAAAABAAAAMREhAAAAAAAAESEAAAAAAAABAAAAKw",
					"AQAAAAAAAAABAAAAFCEAAAAAAAAUIQAAAAAAAP///////+9/"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": "))"
					},
					"AgAAABEhAAAAAAAAEiEAAAAAAAAAAAAAEiEAAAAAAAATIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAESEAAAAAAAARIQAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABMhAAAAAAAAFCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEyEAAAAAAAATIQAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABQhAAAAAAAAFiEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFCEAAAAAAAAUIQAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"right_delete",
					null,
					"AQAAABUhAAAAAAAAFSEAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAFSEAAAAAAAAVIQAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": "+1"
					},
					"AgAAADYhAAAAAAAANyEAAAAAAAAAAAAANyEAAAAAAAA4IQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANiEAAAAAAAA2IQAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "+1"
					},
					"AgAAAF0hAAAAAAAAXiEAAAAAAAAAAAAAXiEAAAAAAABfIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXSEAAAAAAABdIQAAAAAAAAAAAAAAQHVA"
				],
				[
					201,
					1,
					"run_macro_file",
					{
						"event":
						{
							"modifier_keys":
							{
							}
						},
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AgAAAHEhAAAAAAAAciEAAAAAAAAAAAAAciEAAAAAAAB0IQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcSEAAAAAAABxIQAAAAAAAP///////+9/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AwAAAHQhAAAAAAAAdSEAAAAAAAAAAAAAciEAAAAAAAByIQAAAAAAAAIAAAAgIHIhAAAAAAAAciEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdCEAAAAAAAB0IQAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": "void"
					},
					"BQAAAIwgAAAAAAAAjSAAAAAAAAAAAAAAjSAAAAAAAACNIAAAAAAAAAQAAABCT09MjSAAAAAAAACOIAAAAAAAAAAAAACOIAAAAAAAAI8gAAAAAAAAAAAAAI8gAAAAAAAAkCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkCAAAAAAAACMIAAAAAAAAAAAAAAAAAAA"
				],
				[
					251,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAHEhAAAAAAAAciEAAAAAAAAAAAAAciEAAAAAAAB0IQAAAAAAAAAAAAB0IQAAAAAAAHUhAAAAAAAAAAAAAHUhAAAAAAAAdyEAAAAAAAAAAAAAciEAAAAAAAByIQAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAAcSEAAAAAAABxIQAAAAAAAAAAAAAAAPC/"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAHUhAAAAAAAAdiEAAAAAAAAAAAAAdiEAAAAAAAB3IQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdSEAAAAAAAB1IQAAAAAAAAAAAAAAAPC/"
				],
				[
					253,
					2,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AgAAAHchAAAAAAAAeSEAAAAAAAAAAAAAeCEAAAAAAAB6IQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdyEAAAAAAAB3IQAAAAAAAAAAAAAAAPC/"
				],
				[
					254,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAHghAAAAAAAAeCEAAAAAAAABAAAAKHghAAAAAAAAeCEAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAeSEAAAAAAAB5IQAAAAAAAAAAAAAAAPC/"
				],
				[
					259,
					1,
					"insert",
					{
						"characters": "\nchar*p;"
					},
					"CQAAANkgAAAAAAAA2iAAAAAAAAAAAAAA2iAAAAAAAADcIAAAAAAAAAAAAADcIAAAAAAAAN0gAAAAAAAAAAAAAN0gAAAAAAAA3iAAAAAAAAAAAAAA3iAAAAAAAADfIAAAAAAAAAAAAADfIAAAAAAAAOAgAAAAAAAAAAAAAOAgAAAAAAAA4SAAAAAAAAAAAAAA4SAAAAAAAADiIAAAAAAAAAAAAADiIAAAAAAAAOMgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2SAAAAAAAADZIAAAAAAAAP///////+9/"
				],
				[
					261,
					1,
					"left_delete",
					null,
					"AQAAAIIhAAAAAAAAgiEAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAgyEAAAAAAACDIQAAAAAAAAAAAAAAgFZA"
				],
				[
					262,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIIhAAAAAAAAhCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgiEAAAAAAACCIQAAAAAAAAAAAAAAAPC/"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAIMhAAAAAAAAhCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgyEAAAAAAACDIQAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIQhAAAAAAAAhSEAAAAAAAAAAAAAhSEAAAAAAACGIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhCEAAAAAAACEIQAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": " strchr"
					},
					"BwAAAIYhAAAAAAAAhyEAAAAAAAAAAAAAhyEAAAAAAACIIQAAAAAAAAAAAACIIQAAAAAAAIkhAAAAAAAAAAAAAIkhAAAAAAAAiiEAAAAAAAAAAAAAiiEAAAAAAACLIQAAAAAAAAAAAACLIQAAAAAAAIwhAAAAAAAAAAAAAIwhAAAAAAAAjSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhiEAAAAAAACGIQAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAI0hAAAAAAAAjyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjSEAAAAAAACNIQAAAAAAAAAAAAAAAPC/"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": "while"
					},
					"BgAAAH8hAAAAAAAAgCEAAAAAAAAAAAAAgCEAAAAAAACAIQAAAAAAABEAAABpZigocCA9IHN0cmNocigpKYAhAAAAAAAAgSEAAAAAAAAAAAAAgSEAAAAAAACCIQAAAAAAAAAAAACCIQAAAAAAAIMhAAAAAAAAAAAAAIMhAAAAAAAAhCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfyEAAAAAAACQIQAAAAAAAP///////+9/"
				],
				[
					271,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIQhAAAAAAAAhiEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhCEAAAAAAACEIQAAAAAAAAAAAAAAAPC/"
				],
				[
					272,
					1,
					"insert",
					{
						"characters": "len"
					},
					"AwAAAIUhAAAAAAAAhiEAAAAAAAAAAAAAhiEAAAAAAACHIQAAAAAAAAAAAACHIQAAAAAAAIghAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhSEAAAAAAACFIQAAAAAAAAAAAAAAAPC/"
				],
				[
					273,
					1,
					"insert",
					{
						"characters": " >"
					},
					"AgAAAIghAAAAAAAAiSEAAAAAAAAAAAAAiSEAAAAAAACKIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiCEAAAAAAACIIQAAAAAAAAAAAAAAAPC/"
				],
				[
					274,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAIohAAAAAAAAiyEAAAAAAAAAAAAAiyEAAAAAAACMIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiiEAAAAAAACKIQAAAAAAAAAAAAAAAPC/"
				],
				[
					275,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAIwhAAAAAAAAjSEAAAAAAAAAAAAAjSEAAAAAAACOIQAAAAAAAAAAAACOIQAAAAAAAI8hAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjCEAAAAAAACMIQAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": " url->host"
					},
					"CgAAAI8hAAAAAAAAkCEAAAAAAAAAAAAAkCEAAAAAAACRIQAAAAAAAAAAAACRIQAAAAAAAJIhAAAAAAAAAAAAAJIhAAAAAAAAkyEAAAAAAAAAAAAAkyEAAAAAAACUIQAAAAAAAAAAAACUIQAAAAAAAJUhAAAAAAAAAAAAAJUhAAAAAAAAliEAAAAAAAAAAAAAliEAAAAAAACXIQAAAAAAAAAAAACXIQAAAAAAAJghAAAAAAAAAAAAAJghAAAAAAAAmSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjyEAAAAAAACPIQAAAAAAAAAAAAAAAPC/"
				],
				[
					277,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAJkhAAAAAAAAmyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmSEAAAAAAACZIQAAAAAAAAAAAAAAAPC/"
				],
				[
					278,
					1,
					"insert",
					{
						"characters": "len-1"
					},
					"BQAAAJohAAAAAAAAmyEAAAAAAAAAAAAAmyEAAAAAAACcIQAAAAAAAAAAAACcIQAAAAAAAJ0hAAAAAAAAAAAAAJ0hAAAAAAAAniEAAAAAAAAAAAAAniEAAAAAAACfIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmiEAAAAAAACaIQAAAAAAAAAAAAAAAPC/"
				],
				[
					285,
					1,
					"insert",
					{
						"characters": "--"
					},
					"AgAAAIUhAAAAAAAAhiEAAAAAAAAAAAAAhiEAAAAAAACHIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhSEAAAAAAACFIQAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAIwhAAAAAAAAjSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjCEAAAAAAACMIQAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					1,
					"insert",
					{
						"characters": "isdigit("
					},
					"CAAAAJMhAAAAAAAAlCEAAAAAAAAAAAAAlCEAAAAAAACVIQAAAAAAAAAAAACVIQAAAAAAAJYhAAAAAAAAAAAAAJYhAAAAAAAAlyEAAAAAAAAAAAAAlyEAAAAAAACYIQAAAAAAAAAAAACYIQAAAAAAAJkhAAAAAAAAAAAAAJkhAAAAAAAAmiEAAAAAAAAAAAAAmiEAAAAAAACbIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkyEAAAAAAACTIQAAAAAAAAAAAAAAAPC/"
				],
				[
					294,
					2,
					"left_delete",
					null,
					"AgAAAKkhAAAAAAAAqSEAAAAAAAABAAAAMaghAAAAAAAAqCEAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAqiEAAAAAAACqIQAAAAAAAAAAAAAAAPC/"
				],
				[
					296,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAKohAAAAAAAAqyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqiEAAAAAAACqIQAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"insert",
					{
						"characters": "\n;"
					},
					"BQAAAKshAAAAAAAArCEAAAAAAAAAAAAArCEAAAAAAACuIQAAAAAAAAAAAACsIQAAAAAAAKwhAAAAAAAAAgAAACAgrCEAAAAAAACwIQAAAAAAAAAAAACwIQAAAAAAALEhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqyEAAAAAAACrIQAAAAAAAP///////+9/"
				],
				[
					301,
					1,
					"left_delete",
					null,
					"AQAAALAhAAAAAAAAsCEAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAsSEAAAAAAACxIQAAAAAAAAAAAAAAAPC/"
				],
				[
					302,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALAhAAAAAAAAsSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsCEAAAAAAACwIQAAAAAAAAAAAAAAAPC/"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BwAAALEhAAAAAAAAsiEAAAAAAAAAAAAAsiEAAAAAAAC2IQAAAAAAAAAAAACyIQAAAAAAALIhAAAAAAAABAAAACAgICCyIQAAAAAAALQhAAAAAAAAAAAAALQhAAAAAAAAtSEAAAAAAAAAAAAAtSEAAAAAAAC3IQAAAAAAAAAAAACyIQAAAAAAALIhAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAsSEAAAAAAACxIQAAAAAAAAAAAAAAAPC/"
				],
				[
					308,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAALUhAAAAAAAAtiEAAAAAAAAAAAAAtiEAAAAAAAC3IQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtSEAAAAAAAC1IQAAAAAAAAAAAAAAAPC/"
				],
				[
					309,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALchAAAAAAAAuSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtyEAAAAAAAC3IQAAAAAAAAAAAAAAAPC/"
				],
				[
					310,
					1,
					"insert",
					{
						"characters": "url->host"
					},
					"CQAAALghAAAAAAAAuSEAAAAAAAAAAAAAuSEAAAAAAAC6IQAAAAAAAAAAAAC6IQAAAAAAALshAAAAAAAAAAAAALshAAAAAAAAvCEAAAAAAAAAAAAAvCEAAAAAAAC9IQAAAAAAAAAAAAC9IQAAAAAAAL4hAAAAAAAAAAAAAL4hAAAAAAAAvyEAAAAAAAAAAAAAvyEAAAAAAADAIQAAAAAAAAAAAADAIQAAAAAAAMEhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuCEAAAAAAAC4IQAAAAAAAAAAAAAAAPC/"
				],
				[
					311,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAMEhAAAAAAAAwyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwSEAAAAAAADBIQAAAAAAAAAAAAAAAPC/"
				],
				[
					312,
					1,
					"insert",
					{
						"characters": "len"
					},
					"AwAAAMIhAAAAAAAAwyEAAAAAAAAAAAAAwyEAAAAAAADEIQAAAAAAAAAAAADEIQAAAAAAAMUhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwiEAAAAAAADCIQAAAAAAAAAAAAAAAPC/"
				],
				[
					314,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAMYhAAAAAAAAxyEAAAAAAAAAAAAAxyEAAAAAAADIIQAAAAAAAAAAAADIIQAAAAAAAMkhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxiEAAAAAAADGIQAAAAAAAAAAAAAAAPC/"
				],
				[
					315,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMkhAAAAAAAAyiEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAySEAAAAAAADJIQAAAAAAAAAAAAAAAPC/"
				],
				[
					316,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAMohAAAAAAAAzCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyiEAAAAAAADKIQAAAAAAAAAAAAAAAPC/"
				],
				[
					317,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAMshAAAAAAAAzCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyyEAAAAAAADLIQAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAM4hAAAAAAAA0CEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAziEAAAAAAADOIQAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAM8hAAAAAAAA0CEAAAAAAAAAAAAA0CEAAAAAAADSIQAAAAAAAAAAAADSIQAAAAAAANMhAAAAAAAAAAAAANMhAAAAAAAA1SEAAAAAAAAAAAAA0CEAAAAAAADQIQAAAAAAAAIAAAAgINAhAAAAAAAA1CEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzyEAAAAAAADPIQAAAAAAAAAAAAAAAPC/"
				],
				[
					325,
					1,
					"insert",
					{
						"characters": "url->port"
					},
					"CQAAANQhAAAAAAAA1SEAAAAAAAAAAAAA1SEAAAAAAADWIQAAAAAAAAAAAADWIQAAAAAAANchAAAAAAAAAAAAANchAAAAAAAA2CEAAAAAAAAAAAAA2CEAAAAAAADZIQAAAAAAAAAAAADZIQAAAAAAANohAAAAAAAAAAAAANohAAAAAAAA2yEAAAAAAAAAAAAA2yEAAAAAAADcIQAAAAAAAAAAAADcIQAAAAAAAN0hAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1CEAAAAAAADUIQAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAN0hAAAAAAAA3iEAAAAAAAAAAAAA3iEAAAAAAADfIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3SEAAAAAAADdIQAAAAAAAAAAAAAAAPC/"
				],
				[
					327,
					1,
					"insert",
					{
						"characters": " atoi/"
					},
					"BgAAAN8hAAAAAAAA4CEAAAAAAAAAAAAA4CEAAAAAAADhIQAAAAAAAAAAAADhIQAAAAAAAOIhAAAAAAAAAAAAAOIhAAAAAAAA4yEAAAAAAAAAAAAA4yEAAAAAAADkIQAAAAAAAAAAAADkIQAAAAAAAOUhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3yEAAAAAAADfIQAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOUhAAAAAAAA5yEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5SEAAAAAAADlIQAAAAAAAAAAAAAAAPC/"
				],
				[
					329,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAOUhAAAAAAAA5SEAAAAAAAABAAAAKOUhAAAAAAAA5SEAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA5iEAAAAAAADmIQAAAAAAAAAAAAAAAPC/"
				],
				[
					330,
					1,
					"left_delete",
					null,
					"AQAAAOQhAAAAAAAA5CEAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAA5SEAAAAAAADlIQAAAAAAAAAAAAAAAPC/"
				],
				[
					331,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOQhAAAAAAAA5iEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5CEAAAAAAADkIQAAAAAAAAAAAAAAAPC/"
				],
				[
					332,
					1,
					"insert",
					{
						"characters": "&url->host"
					},
					"CgAAAOUhAAAAAAAA5iEAAAAAAAAAAAAA5iEAAAAAAADnIQAAAAAAAAAAAADnIQAAAAAAAOghAAAAAAAAAAAAAOghAAAAAAAA6SEAAAAAAAAAAAAA6SEAAAAAAADqIQAAAAAAAAAAAADqIQAAAAAAAOshAAAAAAAAAAAAAOshAAAAAAAA7CEAAAAAAAAAAAAA7CEAAAAAAADtIQAAAAAAAAAAAADtIQAAAAAAAO4hAAAAAAAAAAAAAO4hAAAAAAAA7yEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5SEAAAAAAADlIQAAAAAAAAAAAAAAAPC/"
				],
				[
					333,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAO8hAAAAAAAA8SEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7yEAAAAAAADvIQAAAAAAAAAAAAAAAPC/"
				],
				[
					334,
					1,
					"insert",
					{
						"characters": "len+1"
					},
					"BQAAAPAhAAAAAAAA8SEAAAAAAAAAAAAA8SEAAAAAAADyIQAAAAAAAAAAAADyIQAAAAAAAPMhAAAAAAAAAAAAAPMhAAAAAAAA9CEAAAAAAAAAAAAA9CEAAAAAAAD1IQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8CEAAAAAAADwIQAAAAAAAAAAAAAAAPC/"
				],
				[
					336,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPchAAAAAAAA+CEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9yEAAAAAAAD3IQAAAAAAAAAAAAAAAPC/"
				],
				[
					337,
					1,
					"insert",
					{
						"characters": "\nurl->host"
					},
					"CwAAAPghAAAAAAAA+SEAAAAAAAAAAAAA+SEAAAAAAAD9IQAAAAAAAAAAAAD9IQAAAAAAAP4hAAAAAAAAAAAAAP4hAAAAAAAA/yEAAAAAAAAAAAAA/yEAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAEiAAAAAAAAAAAAAAEiAAAAAAAAAiIAAAAAAAAAAAAAAiIAAAAAAAADIgAAAAAAAAAAAAADIgAAAAAAAAQiAAAAAAAAAAAAAAQiAAAAAAAABSIAAAAAAAAAAAAABSIAAAAAAAAGIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+CEAAAAAAAD4IQAAAAAAAAAAAAAAAPC/"
				],
				[
					338,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAAYiAAAAAAAACCIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABiIAAAAAAAAGIgAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"insert",
					{
						"characters": "len"
					},
					"AwAAAAciAAAAAAAACCIAAAAAAAAAAAAACCIAAAAAAAAJIgAAAAAAAAAAAAAJIgAAAAAAAAoiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAByIAAAAAAAAHIgAAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAoiAAAAAAAACyIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACiIAAAAAAAAKIgAAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					1,
					"left_delete",
					null,
					"AQAAAAoiAAAAAAAACiIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAACyIAAAAAAAALIgAAAAAAAAAAAAAAAPC/"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAsiAAAAAAAADCIAAAAAAAAAAAAADCIAAAAAAAANIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACyIAAAAAAAALIgAAAAAAAAAAAAAAAPC/"
				],
				[
					344,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA0iAAAAAAAADiIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADSIAAAAAAAANIgAAAAAAAAAAAAAAAPC/"
				],
				[
					345,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAA4iAAAAAAAAECIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADiIAAAAAAAAOIgAAAAAAAAAAAAAAAPC/"
				],
				[
					346,
					1,
					"insert",
					{
						"characters": "\\0"
					},
					"AgAAAA8iAAAAAAAAECIAAAAAAAAAAAAAECIAAAAAAAARIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADyIAAAAAAAAPIgAAAAAAAAAAAAAAAPC/"
				],
				[
					348,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABIiAAAAAAAAEyIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEiIAAAAAAAASIgAAAAAAAAAAAAAAAPC/"
				],
				[
					355,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACASQAAI2luY2x1ZGUgIm1pbm5ldC5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+CiNpbmNsdWRlIDxsaW1pdHMuaD4KI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KCiNpZm5kZWYgSEFWRV9TVFJMQ1BZCnNpemVfdApzdHJsY3B5KGNoYXIqIGRzdCwgY29uc3QgY2hhciogc3JjLCBzaXplX3Qgc2l6KSB7CiAgcmVnaXN0ZXIgY2hhciogZCA9IGRzdDsKICByZWdpc3RlciBjb25zdCBjaGFyKiBzID0gc3JjOwogIHJlZ2lzdGVyIHNpemVfdCBuID0gc2l6OwoKICBpZihuICE9IDAgJiYgLS1uICE9IDApIHsKICAgIGRvIHsKICAgICAgaWYoKCpkKysgPSAqcysrKSA9PSAwKQogICAgICAgIGJyZWFrOwogICAgfSB3aGlsZSgtLW4gIT0gMCk7CiAgfQoKICBpZihuID09IDApIHsKICAgIGlmKHNpeiAhPSAwKQogICAgICAqZCA9ICdcMCc7CiAgICB3aGlsZSgqcysrKQogICAgICA7CiAgfQoKICByZXR1cm4gKHMgLSBzcmMgLSAxKTsKfQojZW5kaWYKCnN0YXRpYyBjaGFyIGNvbnN0KiBjb25zdCBwcm90b2NvbF9uYW1lc1tdID0gewogICAgIndzIiwKICAgICJ3c3MiLAogICAgImh0dHAiLAogICAgImh0dHBzIiwKICAgICJyYXciLAogICAgInRscyIsCn07CgpNaW5uZXRQcm90b2NvbApwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciogcHJvdG9jb2wpIHsKICBpbnQgaTsKCiAgZm9yKGkgPSBjb3VudG9mKHByb3RvY29sX25hbWVzKSAtIDE7IGkgPj0gMDsgLS1pKQogICAgaWYoIXN0cmNhc2VjbXAocHJvdG9jb2wsIHByb3RvY29sX25hbWVzW2ldKSkKICAgICAgcmV0dXJuIGk7CgogIHJldHVybiBQUk9UT0NPTF9SQVc7Cn0KCmNvbnN0IGNoYXIqCnByb3RvY29sX3N0cmluZyhNaW5uZXRQcm90b2NvbCBwKSB7CiAgaW50IGkgPSAodW5zaWduZWQgaW50KXA7CiAgYXNzZXJ0KGkgPj0gMCk7CiAgYXNzZXJ0KGkgPCBjb3VudG9mKHByb3RvY29sX25hbWVzKSk7CiAgcmV0dXJuIHByb3RvY29sX25hbWVzW2ldOwp9Cgp1aW50MTZfdApwcm90b2NvbF9kZWZhdWx0X3BvcnQoTWlubmV0UHJvdG9jb2wgcCkgewogIHN3aXRjaChwKSB7CiAgICBjYXNlIFBST1RPQ09MX1dTOgogICAgY2FzZSBQUk9UT0NPTF9IVFRQOiB7CiAgICAgIHJldHVybiA4MDsKICAgIH0KICAgIGNhc2UgUFJPVE9DT0xfV1NTOgogICAgY2FzZSBQUk9UT0NPTF9IVFRQUzogewogICAgICByZXR1cm4gNDQzOwogICAgfQogICAgZGVmYXVsdDogewogICAgICByZXR1cm4gMDsKICAgIH0KICB9Cn0KCkJPT0wKcHJvdG9jb2xfaXNfdGxzKE1pbm5ldFByb3RvY29sIHApIHsKICBzd2l0Y2gocCkgewogICAgY2FzZSBQUk9UT0NPTF9XU1M6CiAgICBjYXNlIFBST1RPQ09MX0hUVFBTOgogICAgY2FzZSBQUk9UT0NPTF9UTFM6IHsKICAgICAgcmV0dXJuIFRSVUU7CiAgICB9CiAgICBkZWZhdWx0OiB7CiAgICAgIHJldHVybiBGQUxTRTsKICAgIH0KICB9Cn0KCnZvaWQKdXJsX2luaXQoTWlubmV0VVJMKiB1cmwsIGNvbnN0IGNoYXIqIHByb3RvY29sLCBjb25zdCBjaGFyKiBob3N0LCBpbnQgcG9ydCwgY29uc3QgY2hhciogcGF0aCwgSlNDb250ZXh0KiBjdHgpIHsKICBNaW5uZXRQcm90b2NvbCBwcm90byA9IHByb3RvY29sX251bWJlcihwcm90b2NvbCk7CgogIHVybC0+cHJvdG9jb2wgPSBwcm90b2NvbF9zdHJpbmcocHJvdG8pOwogIHVybC0+aG9zdCA9IGpzX3N0cmR1cChjdHgsIGhvc3QgJiYgKmhvc3QgPyBob3N0IDogIjAuMC4wLjAiKTsKICB1cmwtPnBvcnQgPSBwb3J0ID49IDAgJiYgcG9ydCA8PSA2NTUzNSA/IHBvcnQgOiBwcm90b2NvbF9kZWZhdWx0X3BvcnQocHJvdG8pOwogIHVybC0+cGF0aCA9IGpzX3N0cmR1cChjdHgsIHBhdGggPyBwYXRoIDogIiIpOwp9Cgp2b2lkCnVybF9wYXJzZShNaW5uZXRVUkwqIHVybCwgY29uc3QgY2hhciogdSwgSlNDb250ZXh0KiBjdHgpIHsKICBNaW5uZXRQcm90b2NvbCBwcm90byA9IFBST1RPQ09MX1dTOwogIGNvbnN0IGNoYXIgKnMsICp0OwoKICBpZigocyA9IHN0cnN0cih1LCAiOi8vIikpKSB7CiAgICB1cmwtPnByb3RvY29sID0ganNfc3RybmR1cChjdHgsIHUsIHMgLSB1KTsKICAgIHByb3RvID0gcHJvdG9jb2xfbnVtYmVyKHVybC0+cHJvdG9jb2wpOwogICAgdSA9IHMgKyAzOwogIH0gZWxzZSB7CiAgICB1cmwtPnByb3RvY29sID0gMDsKICB9CgogIGZvcihzID0gdTsgKnM7ICsrcykKICAgIGlmKCpzID09ICc6JyB8fCAqcyA9PSAnLycpCiAgICAgIGJyZWFrOwoKICB1cmwtPmhvc3QgPSBzID4gdSA/IGpzX3N0cm5kdXAoY3R4LCB1LCBzIC0gdSkgOiAwOwoKICBpZigqcyA9PSAnOicpIHsKICAgIHVuc2lnbmVkIGxvbmcgbiA9IHN0cnRvdWwoKytzLCAoY2hhcioqKSZ0LCAxMCk7CgogICAgdXJsLT5wb3J0ID0gbiAhPSBVTE9OR19NQVggPyBuIDogMDsKICAgIGlmKHMgPCB0KQogICAgICBzID0gdDsKICB9IGVsc2UgaWYodXJsLT5wcm90b2NvbCkgewogICAgdXJsLT5wb3J0ID0gcHJvdG9jb2xfZGVmYXVsdF9wb3J0KHByb3RvKTsKICB9IGVsc2UgewogICAgdXJsLT5wb3J0ID0gMDsKICB9CgogIC8vIGlmKCF1cmwtPnBhdGgpCiAgaWYocyAmJiAqcykKICAgIHVybC0+cGF0aCA9IHMgJiYgKnMgPyBqc19zdHJkdXAoY3R4LCBzKSA6IDA7Cn0KCk1pbm5ldFVSTAp1cmxfY3JlYXRlKGNvbnN0IGNoYXIqIHN0ciwgSlNDb250ZXh0KiBjdHgpIHsKICBNaW5uZXRVUkwgcmV0ID0gezEsIDAsIDAsIDAsIDB9OwogIHVybF9wYXJzZSgmcmV0LCBzdHIsIGN0eCk7CiAgcmV0dXJuIHJldDsKfQoKc2l6ZV90CnVybF9wcmludChjaGFyKiBidWYsIHNpemVfdCBzaXplLCBjb25zdCBNaW5uZXRVUkwgdXJsKSB7CiAgc2l6ZV90IHBvcyA9IDA7CgogIGlmKHVybC5wcm90b2NvbCAmJiAqdXJsLnByb3RvY29sKSB7CiAgICBpZigocG9zICs9IGJ1ZiA/IHN0cmxjcHkoYnVmLCB1cmwucHJvdG9jb2wsIHNpemUgLSBwb3MpIDogc3RybGVuKHVybC5wcm90b2NvbCkpICsgMyA+IHNpemUpCiAgICAgIHJldHVybiBwb3M7CgogICAgaWYoKHBvcyArPSBidWYgPyBzdHJsY3B5KCZidWZbcG9zXSwgIjovLyIsIHNpemUgLSBwb3MpIDogMykgPj0gc2l6ZSkKICAgICAgcmV0dXJuIHBvczsKICB9CgogIGlmKHVybC5ob3N0KSB7CiAgICBpZigocG9zICs9IGJ1ZiA/IHN0cmxjcHkoJmJ1Zltwb3NdLCB1cmwuaG9zdCwgc2l6ZSAtIHBvcykgOiBzdHJsZW4odXJsLmhvc3QpKSA+PSBzaXplKQogICAgICByZXR1cm4gcG9zOwogIH0KCiAgaWYodXJsLnBvcnQpIHsKICAgIGlmKHNpemUgLSBwb3MgPCA3KQogICAgICByZXR1cm4gcG9zOwogICAgaWYoIWJ1ZikgewogICAgICBwb3MgKz0gMSArICh1cmwucG9ydCA+IDk5OTkgPyA1IDogdXJsLnBvcnQgPiA5OTkgPyA0IDogdXJsLnBvcnQgPiA5OSA/IDMgOiB1cmwucG9ydCA+IDkgPyAyIDogMSk7CiAgICB9IGVsc2UgewogICAgICBzcHJpbnRmKCZidWZbcG9zXSwgIjoldSIsIHVybC5wb3J0KTsKICAgICAgcG9zICs9IHN0cmxlbigmYnVmW3Bvc10pOwogICAgfQogIH0KCiAgaWYodXJsLnBhdGgpIHsKICAgIGlmKChwb3MgKz0gYnVmID8gc3RybGNweSgmYnVmW3Bvc10sIHVybC5wYXRoLCBzaXplIC0gcG9zKSA6IHN0cmxlbih1cmwucGF0aCkpID49IHNpemUpCiAgICAgIHJldHVybiBwb3M7CiAgfQoKICByZXR1cm4gcG9zOwp9CgpjaGFyKgp1cmxfZm9ybWF0KGNvbnN0IE1pbm5ldFVSTCB1cmwsIEpTQ29udGV4dCogY3R4KSB7CiAgc2l6ZV90IGxlbiA9ICh1cmwucHJvdG9jb2wgPyBzdHJsZW4odXJsLnByb3RvY29sKSArIDMgOiAwKSArICh1cmwuaG9zdCA/IHN0cmxlbih1cmwuaG9zdCkgKyAxICsgNSA6IDApICsgKHVybC5wYXRoID8gc3RybGVuKHVybC5wYXRoKSA6IDApICsgMTsKICBjaGFyKiBzdHI7CiAgTWlubmV0UHJvdG9jb2wgcHJvdG8gPSAtMTsKCiAgaWYoKHN0ciA9IGpzX21hbGxvYyhjdHgsIGxlbikpKSB7CiAgICBjb25zdCBjaGFyKiBob3N0ID0gdXJsLmhvc3QgPyB1cmwuaG9zdCA6ICIwLjAuMC4wIjsKICAgIHNpemVfdCBwb3MgPSAwOwogICAgc3RyW3Bvc10gPSAnXDAnOwogICAgaWYodXJsLnByb3RvY29sKSB7CiAgICAgIHByb3RvID0gcHJvdG9jb2xfbnVtYmVyKHVybC5wcm90b2NvbCk7CiAgICAgIHN0cmNweShzdHIsIHVybC5wcm90b2NvbCk7CiAgICAgIHBvcyArPSBzdHJsZW4oc3RyKTsKICAgICAgc3RyY3B5KCZzdHJbcG9zXSwgIjovLyIpOwogICAgICBwb3MgKz0gMzsKICAgIH0KICAgIGlmKHByb3RvICE9IC0xICYmIHVybC5wb3J0ID09IHByb3RvY29sX2RlZmF1bHRfcG9ydChwcm90bykpIHsKICAgICAgc3RyY3B5KCZzdHJbcG9zXSwgaG9zdCk7CiAgICAgIHBvcyArPSBzdHJsZW4oJnN0cltwb3NdKTsKICAgIH0gZWxzZSB7CiAgICAgIHBvcyArPSBzcHJpbnRmKCZzdHJbcG9zXSwgIiVzOiV1IiwgaG9zdCwgdXJsLnBvcnQpOwogICAgfQogICAgaWYodXJsLnBhdGgpCiAgICAgIHN0cmNweSgmc3RyW3Bvc10sIHVybC5wYXRoKTsKICB9CiAgcmV0dXJuIHN0cjsKfQoKc2l6ZV90CnVybF9sZW5ndGgoY29uc3QgTWlubmV0VVJMIHVybCkgewogIHJldHVybiB1cmxfcHJpbnQoMCwgODE5MiwgdXJsKTsKICAvKnNpemVfdCBwb3J0bGVuID0gdXJsLnBvcnQgPj0gMTAwMDAgPyA2IDogdXJsLnBvcnQgPj0gMTAwMCA/IDUgOiB1cmwucG9ydCA+PSAxMDAgPyA0IDogdXJsLnBvcnQgPj0gMTAgPyAzIDogdXJsLnBvcnQgPj0gMSA/IDIgOiAwOwogIHJldHVybiAodXJsLnByb3RvY29sID8gc3RybGVuKHVybC5wcm90b2NvbCkgKyAzIDogMCkgKyAodXJsLmhvc3QgPyBzdHJsZW4odXJsLmhvc3QpICsgcG9ydGxlbiA6IDApICsgKHVybC5wYXRoID8gc3RybGVuKHVybC5wYXRoKSA6IDApICsgMTsqLwp9Cgp2b2lkCnVybF9mcmVlKE1pbm5ldFVSTCogdXJsLCBKU0NvbnRleHQqIGN0eCkgewogIGlmKHVybC0+aG9zdCkKICAgIGpzX2ZyZWUoY3R4LCB1cmwtPmhvc3QpOwogIGlmKHVybC0+cGF0aCkKICAgIGpzX2ZyZWUoY3R4LCB1cmwtPnBhdGgpOwogIG1lbXNldCh1cmwsIDAsIHNpemVvZihNaW5uZXRVUkwpKTsKfQoKdm9pZAp1cmxfZnJlZV9ydChNaW5uZXRVUkwqIHVybCwgSlNSdW50aW1lKiBydCkgewogIGlmKHVybC0+aG9zdCkKICAgIGpzX2ZyZWVfcnQocnQsIHVybC0+aG9zdCk7CiAgaWYodXJsLT5wYXRoKQogICAganNfZnJlZV9ydChydCwgdXJsLT5wYXRoKTsKICBtZW1zZXQodXJsLCAwLCBzaXplb2YoTWlubmV0VVJMKSk7Cn0KCk1pbm5ldFByb3RvY29sCnVybF9zZXRfcHJvdG9jb2woTWlubmV0VVJMKiB1cmwsIGNvbnN0IGNoYXIqIHByb3RvKSB7CiAgTWlubmV0UHJvdG9jb2wgcCA9IHByb3RvY29sX251bWJlcihwcm90byk7CgogIHVybC0+cHJvdG9jb2wgPSBwcm90b2NvbF9zdHJpbmcocCk7CiAgcmV0dXJuIHA7Cn0KCnZvaWQKdXJsX2luZm8oY29uc3QgTWlubmV0VVJMIHVybCwgc3RydWN0IGx3c19jbGllbnRfY29ubmVjdF9pbmZvKiBpbmZvKSB7CiAgTWlubmV0UHJvdG9jb2wgcHJvdG8gPSB1cmwucHJvdG9jb2wgPyBwcm90b2NvbF9udW1iZXIodXJsLnByb3RvY29sKSA6IFBST1RPQ09MX1JBVzsKCiAgbWVtc2V0KGluZm8sIDAsIHNpemVvZihzdHJ1Y3QgbHdzX2NsaWVudF9jb25uZWN0X2luZm8pKTsKCiAgc3dpdGNoKHByb3RvKSB7CiAgICBjYXNlIFBST1RPQ09MX0hUVFA6CiAgICBjYXNlIFBST1RPQ09MX0hUVFBTOiB7CiNpZiBkZWZpbmVkKExXU19ST0xFX0gyKSAmJiBkZWZpbmVkKExXU19ST0xFX0gxKQogICAgICBpbmZvLT5hbHBuID0gImgyLGh0dHAvMS4xIjsKI2VsaWYgZGVmaW5lZChMV1NfUk9MRV9IMikKICAgICAgaW5mby0+YWxwbiA9ICJoMiI7CiNlbGlmIGRlZmluZWQoTFdTX1JPTEVfSDEpCiAgICAgIGluZm8tPmFscG4gPSAiaHR0cC8xLjEiOwojZW5kaWYKICAgICAgaW5mby0+cHJvdG9jb2wgPSAiaHR0cCI7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBQUk9UT0NPTF9XUzoKICAgIGNhc2UgUFJPVE9DT0xfV1NTOiB7CiAgICAgIGluZm8tPnByb3RvY29sID0gIndzIjsKICAgICAgYnJlYWs7CiAgICB9CiAgICBkZWZhdWx0OiB7CiAgICAgIGluZm8tPm1ldGhvZCA9ICJSQVciOwogICAgICBpbmZvLT5sb2NhbF9wcm90b2NvbF9uYW1lID0gInJhdyI7CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgaW5mby0+cG9ydCA9IHVybC5wb3J0OwogIGluZm8tPmFkZHJlc3MgPSB1cmwuaG9zdDsKCiAgaWYocHJvdG9jb2xfaXNfdGxzKHByb3RvKSkgewogICAgaW5mby0+c3NsX2Nvbm5lY3Rpb24gPSBMQ0NTQ0ZfVVNFX1NTTCB8IExDQ1NDRl9IMl9RVUlSS19PVkVSRkxPV1NfVFhDUiB8IExDQ1NDRl9IMl9RVUlSS19OR0hUVFAyX0VORF9TVFJFQU07CiAgICBpbmZvLT5zc2xfY29ubmVjdGlvbiB8PSBMQ0NTQ0ZfQUxMT1dfU0VMRlNJR05FRDsKICAgIGluZm8tPnNzbF9jb25uZWN0aW9uIHw9IExDQ1NDRl9BTExPV19JTlNFQ1VSRTsKICB9CgogIGluZm8tPnBhdGggPSB1cmwucGF0aCA/IHVybC5wYXRoIDogIi8iOwogIGluZm8tPmhvc3QgPSBpbmZvLT5hZGRyZXNzOwogIGluZm8tPm9yaWdpbiA9IGluZm8tPmFkZHJlc3M7Cn0KCi8qaW50CnVybF9jb25uZWN0KE1pbm5ldFVSTCogdXJsLCBzdHJ1Y3QgbHdzX2NvbnRleHQqIGNvbnRleHQsIHN0cnVjdCBsd3MqKiBwX3dzaSkgewogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBpOwoKICB1cmxfaW5mbyh1cmwsICZpKTsKCiAgaS5jb250ZXh0ID0gY29udGV4dDsKICBpLnB3c2kgPSBwX3dzaTsKCiAgcmV0dXJuICFsd3NfY2xpZW50X2Nvbm5lY3RfdmlhX2luZm8oJmkpOwp9Ki8KCmNoYXIqCnVybF9sb2NhdGlvbihjb25zdCBNaW5uZXRVUkwgdXJsLCBKU0NvbnRleHQqIGN0eCkgewogIGNvbnN0IGNoYXIqIHF1ZXJ5OwogIGlmKChxdWVyeSA9IHVybF9xdWVyeSh1cmwpKSkKICAgIHJldHVybiBqc19zdHJuZHVwKGN0eCwgdXJsLnBhdGgsIHF1ZXJ5IC0gdXJsLnBhdGgpOwogIHJldHVybiBqc19zdHJkdXAoY3R4LCB1cmwucGF0aCk7Cn0KCmNvbnN0IGNoYXIqCnVybF9xdWVyeShjb25zdCBNaW5uZXRVUkwgdXJsKSB7CiAgY29uc3QgY2hhciogcDsKICBmb3IocCA9IHVybC5wYXRoOyAqcDsgcCsrKSB7CiAgICBpZigqcCA9PSAnXFwnKSB7CiAgICAgICsrcDsKICAgICAgY29udGludWU7CiAgICB9CiAgICBpZigqcCA9PSAnPycpIHsKICAgICAgKytwOwogICAgICBicmVhazsKICAgIH0KICB9CiAgcmV0dXJuICpwID8gcCA6IDA7Cn0KCnZvaWQKdXJsX2Zyb21vYmooTWlubmV0VVJMKiB1cmwsIEpTVmFsdWVDb25zdCBvYmosIEpTQ29udGV4dCogY3R4KSB7CiAgSlNWYWx1ZSB2YWx1ZTsKICBjb25zdCBjaGFyICpwcm90b2NvbCwgKmhvc3QsICpwYXRoOwogIGludDMyX3QgcG9ydCA9IC0xOwoKICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqLCAicHJvdG9jb2wiKTsKICBwcm90b2NvbCA9IEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKTsKICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CgogIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmosICJob3N0Iik7CiAgaG9zdCA9IEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKTsKICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CgogIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmosICJwb3J0Iik7CiAgSlNfVG9JbnQzMihjdHgsICZwb3J0LCB2YWx1ZSk7CgogIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmosICJwYXRoIik7CiAgcGF0aCA9IEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKTsKICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CgogIHVybF9pbml0KHVybCwgcHJvdG9jb2wsIGhvc3QsIHBvcnQsIHBhdGgsIGN0eCk7CgogIGlmKHByb3RvY29sKQogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBwcm90b2NvbCk7CiAgaWYoaG9zdCkKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgaG9zdCk7CiAgaWYocGF0aCkKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcGF0aCk7Cn0KCkJPT0wKdXJsX2Zyb212YWx1ZShNaW5uZXRVUkwqIHVybCwgSlNWYWx1ZUNvbnN0IHZhbHVlLCBKU0NvbnRleHQqIGN0eCkgewogIE1pbm5ldFVSTCogb3RoZXI7CgogIGlmKChvdGhlciA9IG1pbm5ldF91cmxfZGF0YSh2YWx1ZSkpKSB7CiAgICB1cmxfY29weSh1cmwsICpvdGhlciwgY3R4KTsKICB9IGVsc2UgaWYoSlNfSXNPYmplY3QodmFsdWUpKSB7CiAgICB1cmxfZnJvbW9iaih1cmwsIHZhbHVlLCBjdHgpOwogIH0gZWxzZSBpZihKU19Jc1N0cmluZyh2YWx1ZSkpIHsKICAgIGNvbnN0IGNoYXIqIHN0ciA9IEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKTsKICAgIHVybF9wYXJzZSh1cmwsIHN0ciwgY3R4KTsKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgc3RyKTsKICB9IGVsc2UgewogICAgcmV0dXJuIEZBTFNFOwogIH0KCiAgcmV0dXJuIFRSVUU7Cn0KCnZvaWQKdXJsX2Zyb213c2koTWlubmV0VVJMKiB1cmwsIHN0cnVjdCBsd3Mqd3NpLCBKU0NvbnRleHQqIGN0eCkgewogIGludCBsZW47CiAgY2hhcipwOwogIAogIGlmKChsZW4gPWx3c19oZHJfdG90YWxfbGVuZ3RoKHdzaSwgV1NJX1RPS0VOX0hPU1QpKSkgewogIHVybC0+aG9zdCA9IGpzX21hbGxvYyhjdHgsIGxlbisxKTsKICBsd3NfaGRyX2NvcHkod3NpLCB1cmwtPmhvc3QsIGxlbisxLCBXU0lfVE9LRU5fSE9TVCk7CgogIHdoaWxlKC0tbGVuID49IDAgJiYgaXNkaWdpdCh1cmwtPmhvc3RbbGVuXSkpCiAgICA7CgogIGlmKHVybC0+aG9zdFtsZW5dID09ICc6Jyl7CiAgICB1cmwtPnBvcnQgPSBhdG9pKCZ1cmwtPmhvc3RbbGVuKzFdKTsKICAgIHVybC0+aG9zdFtsZW5dID0gJ1wwJzsKICB9Cn0KICAKICBpZigobGVuID1sd3NfaGRyX3RvdGFsX2xlbmd0aCh3c2ksIFdTSV9UT0tFTl9HRVRfVVJJKSkpIHsKICB1cmwtPnBhdGggPSBqc19tYWxsb2MoY3R4LCBsZW4rMSk7CiAgbHdzX2hkcl9jb3B5KHdzaSwgdXJsLT5ob3N0LCBsZW4rMSwgV1NJX1RPS0VOX0dFVF9VUkkpOwp9Cgp9Cgp2b2lkCnVybF9kdW1wKGNvbnN0IGNoYXIqIG4sIE1pbm5ldFVSTCBjb25zdCogdXJsKSB7CiAgZnByaW50ZihzdGRlcnIsICIlc3sgcHJvdG9jb2wgPSAlcywgaG9zdCA9ICVzLCBwb3J0ID0gJXUsIHBhdGggPSAlcyB9XG4iLCBuLCB1cmwtPnByb3RvY29sLCB1cmwtPmhvc3QsIHVybC0+cG9ydCwgdXJsLT5wYXRoKTsKICBmZmx1c2goc3RkZXJyKTsKfQoKSlNWYWx1ZQpxdWVyeV9vYmplY3QoY29uc3QgY2hhciogcSwgSlNDb250ZXh0KiBjdHgpIHsKICBjb25zdCBjaGFyKiBwOwogIHNpemVfdCBpLCBuID0gc3RybGVuKHEpOwogIEpTVmFsdWUgcmV0ID0gSlNfTmV3T2JqZWN0KGN0eCk7CgogIGZvcihpID0gMCwgcCA9IHE7IGkgPD0gbjsgaSsrLCBxKyspIHsKICAgIGlmKCpxID09ICdcXCcpIHsKICAgICAgKytxOwogICAgICBjb250aW51ZTsKICAgIH0KICAgIGlmKCpwID09ICcmJyB8fCAqcCA9PSAnXDAnKSB7CiAgICAgIHNpemVfdCBuYW1lbGVuLCBsZW47CiAgICAgIGNoYXIgKnZhbHVlLCAqZGVjb2RlZDsKICAgICAgSlNBdG9tIGF0b207CiAgICAgIGlmKCh2YWx1ZSA9IHN0cmNocihxLCAnPScpKSkgewogICAgICAgIG5hbWVsZW4gPSAoY29uc3QgY2hhciopdmFsdWUgLSBxOwogICAgICAgICsrdmFsdWU7CiAgICAgICAgYXRvbSA9IEpTX05ld0F0b21MZW4oY3R4LCBxLCBuYW1lbGVuKTsKICAgICAgICBsZW4gPSBwIC0gKGNvbnN0IGNoYXIqKXZhbHVlOwogICAgICAgIGRlY29kZWQgPSBqc19zdHJuZHVwKGN0eCwgdmFsdWUsIGxlbik7CiAgICAgICAgbHdzX3VybGRlY29kZShkZWNvZGVkLCBkZWNvZGVkLCBsZW4gKyAxKTsKICAgICAgICBKU19TZXRQcm9wZXJ0eShjdHgsIHJldCwgYXRvbSwgSlNfTmV3U3RyaW5nKGN0eCwgZGVjb2RlZCkpOwogICAgICAgIEpTX0ZyZWVBdG9tKGN0eCwgYXRvbSk7CiAgICAgIH0KICAgIH0KICB9CiAgcmV0dXJuIHJldDsKfQoKY2hhcioKcXVlcnlfZnJvbShKU1ZhbHVlQ29uc3Qgb2JqLCBKU0NvbnRleHQqIGN0eCkgewogIEpTUHJvcGVydHlFbnVtKiB0YWI7CiAgdWludDMyX3QgdGFiX2xlbiwgaTsKICBEeW5CdWYgb3V0OwogIGRidWZfaW5pdDIoJm91dCwgY3R4LCAoRHluQnVmUmVhbGxvY0Z1bmMqKWpzX3JlYWxsb2MpOwoKICBpZihKU19HZXRPd25Qcm9wZXJ0eU5hbWVzKGN0eCwgJnRhYiwgJnRhYl9sZW4sIG9iaiwgSlNfR1BOX0VOVU1fT05MWSB8IEpTX0dQTl9TVFJJTkdfTUFTSykpCiAgICByZXR1cm4gMDsKCiAgZm9yKGkgPSAwOyBpIDwgdGFiX2xlbjsgaSsrKSB7CiAgICBKU1ZhbHVlIHZhbHVlID0gSlNfR2V0UHJvcGVydHkoY3R4LCBvYmosIHRhYltpXS5hdG9tKTsKICAgIHNpemVfdCBsZW47CiAgICBjb25zdCBjaGFyICpwcm9wLCAqc3RyOwoKICAgIHN0ciA9IEpTX1RvQ1N0cmluZ0xlbihjdHgsICZsZW4sIHZhbHVlKTsKICAgIHByb3AgPSBKU19BdG9tVG9DU3RyaW5nKGN0eCwgdGFiW2ldLmF0b20pOwoKICAgIGRidWZfcHV0c3RyKCZvdXQsIHByb3ApOwogICAgZGJ1Zl9wdXRjKCZvdXQsICc9Jyk7CiAgICBkYnVmX3JlYWxsb2MoJm91dCwgb3V0LnNpemUgKyAobGVuICogMykgKyAxKTsKCiAgICBsd3NfdXJsZW5jb2RlKChjaGFyKikmb3V0LmJ1ZltvdXQuc2l6ZV0sIHN0ciwgb3V0LmFsbG9jYXRlZF9zaXplIC0gb3V0LnNpemUpOwogICAgb3V0LnNpemUgKz0gc3RybGVuKChjb25zdCBjaGFyKikmb3V0LmJ1ZltvdXQuc2l6ZV0pOwoKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcHJvcCk7CiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHN0cik7CgogICAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsdWUpOwogIH0KCiAganNfZnJlZShjdHgsIHRhYik7CiAgcmV0dXJuIChjaGFyKilvdXQuYnVmOwp9CgpzdGF0aWMgVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3VybF9wcm90bywgbWlubmV0X3VybF9jdG9yOwpUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF91cmxfY2xhc3NfaWQ7CgplbnVtIHsgVVJMX1BST1RPQ09MLCBVUkxfSE9TVCwgVVJMX1BPUlQsIFVSTF9QQVRILCBVUkxfVExTIH07CgpKU1ZhbHVlCm1pbm5ldF91cmxfd3JhcChKU0NvbnRleHQqIGN0eCwgTWlubmV0VVJMKiB1cmwpIHsKICBKU1ZhbHVlIHVybF9vYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgbWlubmV0X3VybF9wcm90bywgbWlubmV0X3VybF9jbGFzc19pZCk7CgogIGlmKEpTX0lzRXhjZXB0aW9uKHVybF9vYmopKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKICAvKgogICAgaWYoISh1cmwgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKE1pbm5ldFVSTCkpKSkgewogICAgICBKU19GcmVlVmFsdWUoY3R4LCB1cmxfb2JqKTsKICAgICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKICAgIH0KCiAgICAqdXJsID0gdTsKICAqLwogIEpTX1NldE9wYXF1ZSh1cmxfb2JqLCB1cmwpOwoKICByZXR1cm4gdXJsX29iajsKfQoKTWlubmV0VVJMKgp1cmxfbmV3KEpTQ29udGV4dCogY3R4KSB7CgogIE1pbm5ldFVSTCogdXJsOwoKICBpZighKHVybCA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2YoTWlubmV0VVJMKSkpKQogICAgcmV0dXJuIHVybDsKCiAgdXJsLT5yZWZfY291bnQgPSAxOwogIHJldHVybiB1cmw7Cn0KCkpTVmFsdWUKbWlubmV0X3VybF9uZXcoSlNDb250ZXh0KiBjdHgsIE1pbm5ldFVSTCB1KSB7CiAgTWlubmV0VVJMKiB1cmw7CgogIGlmKCEodXJsID0gdXJsX25ldyhjdHgpKSkKICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIHVybF9jb3B5KHVybCwgdSwgY3R4KTsKICByZXR1cm4gbWlubmV0X3VybF93cmFwKGN0eCwgdXJsKTsKfQoKc3RhdGljIEpTVmFsdWUKbWlubmV0X3VybF9nZXQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IG1hZ2ljKSB7CiAgTWlubmV0VVJMKiB1cmw7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEodXJsID0gbWlubmV0X3VybF9kYXRhKHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfVU5ERUZJTkVEOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgVVJMX1BST1RPQ09MOiB7CiAgICAgIHJldCA9IHVybC0+cHJvdG9jb2wgPyBKU19OZXdTdHJpbmcoY3R4LCB1cmwtPnByb3RvY29sKSA6IEpTX05VTEw7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBVUkxfSE9TVDogewogICAgICByZXQgPSB1cmwtPmhvc3QgPyBKU19OZXdTdHJpbmcoY3R4LCB1cmwtPmhvc3QpIDogSlNfTlVMTDsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFVSTF9QT1JUOiB7CiAgICAgIHJldCA9IEpTX05ld1VpbnQzMihjdHgsIHVybC0+cG9ydCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBVUkxfUEFUSDogewogICAgICByZXQgPSBKU19OZXdTdHJpbmcoY3R4LCB1cmwtPnBhdGggPyB1cmwtPnBhdGggOiAiIik7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBVUkxfVExTOiB7CiAgICAgIGlmKHVybC0+cHJvdG9jb2wpIHsKICAgICAgICBNaW5uZXRQcm90b2NvbCBwcm90byA9IHByb3RvY29sX251bWJlcih1cmwtPnByb3RvY29sKTsKICAgICAgICByZXQgPSBKU19OZXdCb29sKGN0eCwgcHJvdG9jb2xfaXNfdGxzKHByb3RvKSk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF91cmxfc2V0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIEpTVmFsdWVDb25zdCB2YWx1ZSwgaW50IG1hZ2ljKSB7CiAgTWlubmV0VVJMKiB1cmw7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgc2l6ZV90IGxlbjsKICBjb25zdCBjaGFyKiBzdHI7CgogIGlmKCEodXJsID0gbWlubmV0X3VybF9kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgVVJMX1BST1RPQ09MOiB7CiAgICAgIGlmKEpTX0lzTnVsbCh2YWx1ZSkgfHwgSlNfSXNVbmRlZmluZWQodmFsdWUpKSB7CiAgICAgICAgdXJsLT5wcm90b2NvbCA9IDA7CiAgICAgIH0gZWxzZSBpZigoc3RyID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpKSkgewogICAgICAgIE1pbm5ldFByb3RvY29sIHByb3RvID0gcHJvdG9jb2xfbnVtYmVyKHN0cik7CiAgICAgICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzdHIpOwogICAgICAgIHVybC0+cHJvdG9jb2wgPSBwcm90b2NvbF9zdHJpbmcocHJvdG8pOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBVUkxfSE9TVDogewogICAgICAvKmlmKEpTX0lzTnVsbCh2YWx1ZSkgfHwgSlNfSXNVbmRlZmluZWQodmFsdWUpKSB7CiAgICAgICAgaWYodXJsLT5ob3N0KQogICAgICAgICAganNfZnJlZShjdHgsIHVybC0+aG9zdCk7CiAgICAgICAgdXJsLT5ob3N0ID0gMDsKICAgICAgfSBlbHNlICovCiAgICAgIGlmKChzdHIgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSkpKSB7CiAgICAgICAgaWYodXJsLT5ob3N0KQogICAgICAgICAganNfZnJlZShjdHgsIHVybC0+aG9zdCk7CiAgICAgICAgdXJsLT5ob3N0ID0ganNfc3RyZHVwKGN0eCwgc3RyKTsKICAgICAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHN0cik7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFVSTF9QT1JUOiB7CiAgICAgIHVpbnQzMl90IHBvcnQgPSAwOwogICAgICBpZighSlNfVG9VaW50MzIoY3R4LCAmcG9ydCwgdmFsdWUpKQogICAgICAgIGlmKHBvcnQgPD0gNjU1MzUpCiAgICAgICAgICB1cmwtPnBvcnQgPSBwb3J0OwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgVVJMX1BBVEg6IHsKICAgICAgLyogaWYoSlNfSXNOdWxsKHZhbHVlKSB8fCBKU19Jc1VuZGVmaW5lZCh2YWx1ZSkpIHsKICAgICAgICAgaWYodXJsLT5wYXRoKQogICAgICAgICAgIGpzX2ZyZWUoY3R4LCB1cmwtPnBhdGgpOwogICAgICAgICB1cmwtPnBhdGggPSAwOwogICAgICAgfSBlbHNlKi8KICAgICAgaWYoKHN0ciA9IEpTX1RvQ1N0cmluZ0xlbihjdHgsICZsZW4sIHZhbHVlKSkpIHsKICAgICAgICBpZih1cmwtPnBhdGgpCiAgICAgICAgICBqc19mcmVlKGN0eCwgdXJsLT5wYXRoKTsKICAgICAgICB1cmwtPnBhdGggPSBqc19zdHJuZHVwKGN0eCwgc3RyLCBsZW4pOwogICAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgc3RyKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiByZXQ7Cn0KCmVudW0geyBVUkxfVE9fU1RSSU5HIH07CgpKU1ZhbHVlCm1pbm5ldF91cmxfbWV0aG9kKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpIHsKICBNaW5uZXRVUkwqIHVybDsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoISh1cmwgPSBtaW5uZXRfdXJsX2RhdGEyKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBVUkxfVE9fU1RSSU5HOiB7CiAgICAgIGNoYXIqIHN0cjsKCiAgICAgIGlmKChzdHIgPSB1cmxfZm9ybWF0KCp1cmwsIGN0eCkpKSB7CiAgICAgICAgcmV0ID0gSlNfTmV3U3RyaW5nKGN0eCwgc3RyKTsKICAgICAgICBqc19mcmVlKGN0eCwgc3RyKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICB9CiAgcmV0dXJuIHJldDsKfQoKSlNWYWx1ZQptaW5uZXRfdXJsX2Zyb20oSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBNaW5uZXRVUkwqIHVybDsKCiAgaWYoISh1cmwgPSB1cmxfbmV3KGN0eCkpKQogICAgcmV0dXJuIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgdXJsX2Zyb212YWx1ZSh1cmwsIGFyZ3ZbMF0sIGN0eCk7CgogIGlmKCF1cmxfdmFsaWQoKnVybCkpCiAgICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiTm90IGEgdmFsaWQgVVJMIik7CgogIHJldHVybiBtaW5uZXRfdXJsX3dyYXAoY3R4LCB1cmwpOwp9CgpKU1ZhbHVlCm1pbm5ldF91cmxfaW5zcGVjdChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIER5bkJ1ZiBkYnVmOwogIGNoYXIqIHN0cjsKICBNaW5uZXRVUkwqIHVybDsKICBKU1ZhbHVlIHJldCwgb3B0aW9ucyA9IGFyZ2MgPj0gMiAmJiBKU19Jc09iamVjdChhcmd2WzFdKSA/IEpTX0R1cFZhbHVlKGN0eCwgYXJndlsxXSkgOiBhcmdjID49IDEgJiYgSlNfSXNPYmplY3QoYXJndlswXSkgPyBKU19EdXBWYWx1ZShjdHgsIGFyZ3ZbMF0pIDogSlNfTmV3T2JqZWN0KGN0eCk7CiAgSlNWYWx1ZSBvcHRfY29sb3JzID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcHRpb25zLCAiY29sb3JzIik7CiAgQk9PTCBjb2xvcnMgPSBKU19Jc1VuZGVmaW5lZChvcHRfY29sb3JzKSA/IFRSVUUgOiBKU19Ub0Jvb2woY3R4LCBvcHRfY29sb3JzKTsKICBKU19GcmVlVmFsdWUoY3R4LCBvcHRfY29sb3JzKTsKCiAgaWYoISh1cmwgPSBtaW5uZXRfdXJsX2RhdGEyKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIGRidWZfaW5pdDIoJmRidWYsIGN0eCwgKER5bkJ1ZlJlYWxsb2NGdW5jKilqc19yZWFsbG9jKTsKCiAgZGJ1Zl9wdXRzdHIoJmRidWYsIGNvbG9ycyA/ICJceDFiWzE7MzFtTWlubmV0VVJMXHgxYlswbSIgOiAiTWlubmV0VVJMIik7CiAgaWYoKHN0ciA9IHVybF9mb3JtYXQoKnVybCwgY3R4KSkpIHsKICAgIGRidWZfcHJpbnRmKCZkYnVmLCBjb2xvcnMgPyAiIFx4MWJbMTszM20lc1x4MWJbMG0iIDogIiAlcyIsIHN0cik7CiAgICBqc19mcmVlKGN0eCwgc3RyKTsKICB9CiAgcmV0ID0gSlNfTmV3U3RyaW5nTGVuKGN0eCwgZGJ1Zi5idWYsIGRidWYuc2l6ZSk7CiAgZGJ1Zl9mcmVlKCZkYnVmKTsKCiAgSlNfRnJlZVZhbHVlKGN0eCwgb3B0aW9ucyk7CgogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKbWlubmV0X3VybF9jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSBwcm90bywgb2JqOwogIE1pbm5ldFVSTCogdXJsOwoKICBpZighKHVybCA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2YoTWlubmV0VVJMKSkpKQogICAgcmV0dXJuIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgLyogdXNpbmcgbmV3X3RhcmdldCB0byBnZXQgdGhlIHByb3RvdHlwZSBpcyBuZWNlc3Nhcnkgd2hlbiB0aGUgY2xhc3MgaXMgZXh0ZW5kZWQuICovCiAgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICBwcm90byA9IEpTX0R1cFZhbHVlKGN0eCwgbWlubmV0X3VybF9wcm90byk7CgogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywgbWlubmV0X3VybF9jbGFzc19pZCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgcHJvdG8pOwogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICBnb3RvIGZhaWw7CgogIGlmKEpTX0lzU3RyaW5nKGFyZ3ZbMF0pKSB7CiAgICBjb25zdCBjaGFyKiBzdHI7CgogICAgaWYoKHN0ciA9IEpTX1RvQ1N0cmluZyhjdHgsIGFyZ3ZbMF0pKSkKICAgICAgdXJsX3BhcnNlKHVybCwgc3RyLCBjdHgpOwogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzdHIpOwogIH0KCiAgSlNfU2V0T3BhcXVlKG9iaiwgdXJsKTsKICByZXR1cm4gb2JqOwoKZmFpbDoKICBqc19mcmVlKGN0eCwgdXJsKTsKICBKU19GcmVlVmFsdWUoY3R4LCBvYmopOwogIHJldHVybiBKU19FWENFUFRJT047Cn0KCnN0YXRpYyB2b2lkCm1pbm5ldF91cmxfZmluYWxpemVyKEpTUnVudGltZSogcnQsIEpTVmFsdWUgdmFsKSB7CiAgTWlubmV0VVJMKiB1cmwgPSBKU19HZXRPcGFxdWUodmFsLCBtaW5uZXRfdXJsX2NsYXNzX2lkKTsKICBpZih1cmwpIHsKICAgIHVybF9mcmVlX3J0KHVybCwgcnQpOwogICAganNfZnJlZV9ydChydCwgdXJsKTsKICB9Cn0KCnN0YXRpYyBKU0NsYXNzRGVmIG1pbm5ldF91cmxfY2xhc3MgPSB7CiAgICAiTWlubmV0VVJMIiwKICAgIC5maW5hbGl6ZXIgPSBtaW5uZXRfdXJsX2ZpbmFsaXplciwKfTsKCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfdXJsX3Byb3RvX2Z1bmNzW10gPSB7CiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigicHJvdG9jb2wiLCBtaW5uZXRfdXJsX2dldCwgbWlubmV0X3VybF9zZXQsIFVSTF9QUk9UT0NPTCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJob3N0IiwgbWlubmV0X3VybF9nZXQsIG1pbm5ldF91cmxfc2V0LCBVUkxfSE9TVCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJwb3J0IiwgbWlubmV0X3VybF9nZXQsIG1pbm5ldF91cmxfc2V0LCBVUkxfUE9SVCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJwYXRoIiwgbWlubmV0X3VybF9nZXQsIG1pbm5ldF91cmxfc2V0LCBVUkxfUEFUSCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJ0bHMiLCBtaW5uZXRfdXJsX2dldCwgMCwgVVJMX1RMUywgMCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInRvU3RyaW5nIiwgMCwgbWlubmV0X3VybF9tZXRob2QsIFVSTF9UT19TVFJJTkcpLAogICAgSlNfQ0ZVTkNfREVGKCJpbnNwZWN0IiwgMCwgbWlubmV0X3VybF9pbnNwZWN0KSwKICAgIEpTX1BST1BfU1RSSU5HX0RFRigiW1N5bWJvbC50b1N0cmluZ1RhZ10iLCAiTWlubmV0VVJMIiwgSlNfUFJPUF9DT05GSUdVUkFCTEUpLAp9OwoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF91cmxfc3RhdGljX2Z1bmNzW10gPSB7CiAgICBKU19DRlVOQ19ERUYoImZyb20iLCAxLCBtaW5uZXRfdXJsX2Zyb20pLAp9OwoKaW50Cm1pbm5ldF91cmxfaW5pdChKU0NvbnRleHQqIGN0eCwgSlNNb2R1bGVEZWYqIG0pIHsKICBKU0F0b20gaW5zcGVjdF9hdG9tOwoKICAvLyBBZGQgY2xhc3MgVVJMCiAgSlNfTmV3Q2xhc3NJRCgmbWlubmV0X3VybF9jbGFzc19pZCk7CiAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBtaW5uZXRfdXJsX2NsYXNzX2lkLCAmbWlubmV0X3VybF9jbGFzcyk7CiAgbWlubmV0X3VybF9wcm90byA9IEpTX05ld09iamVjdChjdHgpOwogIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgbWlubmV0X3VybF9wcm90bywgbWlubmV0X3VybF9wcm90b19mdW5jcywgY291bnRvZihtaW5uZXRfdXJsX3Byb3RvX2Z1bmNzKSk7CgogIG1pbm5ldF91cmxfY3RvciA9IEpTX05ld0NGdW5jdGlvbjIoY3R4LCBtaW5uZXRfdXJsX2NvbnN0cnVjdG9yLCAiTWlubmV0VVJMIiwgMCwgSlNfQ0ZVTkNfY29uc3RydWN0b3IsIDApOwogIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgbWlubmV0X3VybF9jdG9yLCBtaW5uZXRfdXJsX3N0YXRpY19mdW5jcywgY291bnRvZihtaW5uZXRfdXJsX3N0YXRpY19mdW5jcykpOwoKICBKU19TZXRDb25zdHJ1Y3RvcihjdHgsIG1pbm5ldF91cmxfY3RvciwgbWlubmV0X3VybF9wcm90byk7CgogIGlmKChpbnNwZWN0X2F0b20gPSBqc19zeW1ib2xfc3RhdGljX2F0b20oY3R4LCAiaW5zcGVjdCIpKSA+PSAwKSB7CiAgICBKU19TZXRQcm9wZXJ0eShjdHgsIG1pbm5ldF91cmxfcHJvdG8sIGluc3BlY3RfYXRvbSwgSlNfTmV3Q0Z1bmN0aW9uKGN0eCwgbWlubmV0X3VybF9pbnNwZWN0LCAiaW5zcGVjdCIsIDApKTsKICAgIEpTX0ZyZWVBdG9tKGN0eCwgaW5zcGVjdF9hdG9tKTsKICB9CgogIGlmKG0pCiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiVVJMIiwgbWlubmV0X3VybF9jdG9yKTsKCiAgcmV0dXJuIDA7Cn0KAAAAAAAAAACiSQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuyIAAAAAAAC7IgAAAAAAAAAAAAAAAAAA"
				],
				[
					379,
					1,
					"insert",
					{
						"characters": "path"
					},
					"BQAAALYiAAAAAAAAtyIAAAAAAAAAAAAAtyIAAAAAAAC3IgAAAAAAAAQAAABob3N0tyIAAAAAAAC4IgAAAAAAAAAAAAC4IgAAAAAAALkiAAAAAAAAAAAAALkiAAAAAAAAuiIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtiIAAAAAAAC6IgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/home/roman/Projects/plot-cv/quickjs/quickjs.h",
			"settings":
			{
				"buffer_size": 40236,
				"line_ending": "Unix"
			}
		},
		{
			"file": "jsutils.h",
			"settings":
			{
				"buffer_size": 5133,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AQAAAGQKAAAAAAAAqAoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQKAAAAAAAAZAoAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAADSEAAAI2lmbmRlZiBNSU5ORVRfSlNVVElMU19ICiNkZWZpbmUgTUlOTkVUX0pTVVRJTFNfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSA8bGlzdC5oPgoKdHlwZWRlZiBzdHJ1Y3QgSlNUaHJlYWRTdGF0ZSB7CiAgc3RydWN0IGxpc3RfaGVhZCBvc19yd19oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3NpZ25hbF9oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3RpbWVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIHBvcnRfbGlzdDsKICBpbnQgZXZhbF9zY3JpcHRfcmVjdXJzZTsKICB2b2lkICpyZWN2X3BpcGUsICpzZW5kX3BpcGU7Cn0gSlNUaHJlYWRTdGF0ZTsKCnR5cGVkZWYgc3RydWN0IGlucHV0X2J1ZmZlciB7CiAgdWludDhfdCogZGF0YTsKICBzaXplX3Qgc2l6ZTsKICB2b2lkICgqZnJlZSkoSlNSdW50aW1lKiwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpOwogIEpTVmFsdWUgdmFsdWU7Cn0gSlNCdWZmZXI7Cgp0eXBlZGVmIHVuaW9uIHJlc29sdmVfZnVuY3Rpb25zIHsKICBKU1ZhbHVlIGFycmF5WzJdOwogIHN0cnVjdCB7CiAgICBKU1ZhbHVlIHJlc29sdmUsIHJlamVjdDsKICB9Owp9IFJlc29sdmVGdW5jdGlvbnM7CgpKU1ZhbHVlIHZlY3RvcjJhcnJheShKU0NvbnRleHQqLCBpbnQsIEpTVmFsdWVDb25zdFtdKTsKdm9pZCBqc19jb25zb2xlX2xvZyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QqLCBKU1ZhbHVlQ29uc3QqKTsKSlNWYWx1ZSBqc19mdW5jdGlvbl9ib3VuZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljLCBKU1ZhbHVlQ29uc3QqIGZ1bmNfZGF0YSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZF8xKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0KTsKSlNWYWx1ZSBqc19pdGVyYXRvcl9uZXh0KEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0KiwgQk9PTCogZG9uZV9wLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CmludCBqc19jb3B5X3Byb3BlcnRpZXMoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBKU1ZhbHVlQ29uc3QsIGludCBmbGFncyk7CnZvaWQganNfYnVmZmVyX2Zyb20oSlNDb250ZXh0KiwgSlNCdWZmZXIqLCBKU1ZhbHVlKTsKSlNCdWZmZXIganNfYnVmZmVyX25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlKTsKdm9pZCBqc19idWZmZXJfdG8oSlNCdWZmZXIsIHZvaWQqKiwgc2l6ZV90Kik7CnZvaWQganNfYnVmZmVyX3RvMyhKU0J1ZmZlciwgY29uc3QgY2hhcioqLCB2b2lkKiosIHVuc2lnbmVkKiBwbGVuKTsKQk9PTCBqc19idWZmZXJfdmFsaWQoY29uc3QgSlNCdWZmZXIqKTsKSlNCdWZmZXIganNfYnVmZmVyX2Nsb25lKGNvbnN0IEpTQnVmZmVyKiwgSlNDb250ZXh0Kik7CnZvaWQganNfYnVmZmVyX2R1bXAoY29uc3QgSlNCdWZmZXIqLCBEeW5CdWYqKTsKdm9pZCBqc19idWZmZXJfZnJlZShKU0J1ZmZlciosIEpTQ29udGV4dCopOwpCT09MIGpzX2lzX2l0ZXJhYmxlKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkJPT0wganNfaXNfaXRlcmF0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKSlNBdG9tIGpzX3N5bWJvbF9zdGF0aWNfYXRvbShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfc3ltYm9sX3N0YXRpY192YWx1ZShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfc3ltYm9sX2N0b3IoSlNDb250ZXh0Kik7CkpTVmFsdWUganNfZ2xvYmFsX2dldChKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CmNoYXIqIGpzX3Rvc3RyaW5nbGVuKEpTQ29udGV4dCosIHNpemVfdCosIEpTVmFsdWVDb25zdCk7CmNoYXIqIGpzX3Rvc3RyaW5nKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkpTVmFsdWUganNfaW52b2tlKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgY29uc3QgY2hhciosIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKSlNWYWx1ZSBqc19wcm9taXNlX2NyZWF0ZShKU0NvbnRleHQqLCBSZXNvbHZlRnVuY3Rpb25zKik7CkpTVmFsdWUganNfcHJvbWlzZV9yZXNvbHZlKEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqLCBKU1ZhbHVlQ29uc3QpOwpKU1ZhbHVlIGpzX3Byb21pc2VfcmVqZWN0KEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqLCBKU1ZhbHVlQ29uc3QpOwp2b2lkIGpzX3Byb21pc2VfemVybyhSZXNvbHZlRnVuY3Rpb25zKik7CkJPT0wganNfcHJvbWlzZV9wZW5kaW5nKFJlc29sdmVGdW5jdGlvbnMgY29uc3QqKTsKQk9PTCBqc19wcm9taXNlX2RvbmUoUmVzb2x2ZUZ1bmN0aW9ucyBjb25zdCopOwp2b2lkIGpzX3Byb21pc2VfZnJlZShKU0NvbnRleHQqLCBSZXNvbHZlRnVuY3Rpb25zKik7CkpTVmFsdWUganNfZ2xvYmFsX2dldChKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkJPT0wganNfaXNfcHJvbWlzZShKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwpKU1ZhbHVlIGpzX2Vycm9yX25ldyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKiwgLi4uKTsKdWludDhfdCoganNfdG9wdHJzaXplKEpTQ29udGV4dCosIHVuc2lnbmVkIGludCosIEpTVmFsdWUpOwpCT09MICAgICBqc19nZXRfcHJvcGVydHlzdHJfYm9vbChKU0NvbnRleHQqLCBKU1ZhbHVlLCBjb25zdCBjaGFyKik7CgpzdGF0aWMgaW5saW5lIHZvaWQKanNfY2xlYXIoSlNDb250ZXh0KiBjdHgsIGNvbnN0IHZvaWQqKiBwdHIpIHsKICBpZigqcHRyKQogICAganNfZnJlZShjdHgsICpwdHIpOwogICpwdHIgPSAwOwp9CgpzdGF0aWMgaW5saW5lIHZvaWQKanNfZHVtcF9zdHJpbmcoY29uc3QgY2hhciogc3RyLCBzaXplX3QgbGVuLCBzaXplX3QgbWF4bGVuKSB7CiAgc2l6ZV90IGksIG4gPSAyOwogIHB1dGNoYXIoJ1wnJyk7CiAgZm9yKGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKICAgIGlmKHN0cltpXSA9PSAnXG4nKSB7CiAgICAgIHB1dGNoYXIoJ1xcJyk7CiAgICAgIHB1dGNoYXIoJ24nKTsKICAgICAgbiArPSAyOwogICAgfSBlbHNlIHsKICAgICAgcHV0Y2hhcihzdHJbaV0pOwogICAgICBuKys7CiAgICB9CiAgICBpZihtYXhsZW4gPiAwICYmIG4gKyAxID49IG1heGxlbikgewogICAgICBmcHV0cygiJy4uLiIsIHN0ZG91dCk7CiAgICAgIHJldHVybjsKICAgIH0KICB9CiAgcHV0Y2hhcignXCcnKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpqc190b19zdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIGNvbnN0IGNoYXIqIHM7CiAgY2hhciogcmV0ID0gMDsKCiAgaWYoKHMgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSkpKSB7CiAgICByZXQgPSBqc19zdHJkdXAoY3R4LCBzKTsKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcyk7CiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBpbmxpbmUgY2hhcioKanNfcmVwbGFjZV9zdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSwgY2hhcioqIHNwdHIpIHsKICBjb25zdCBjaGFyKiBzOwoKICBpZigqc3B0cikKICAgIGpzX2ZyZWUoY3R4LCAqc3B0cik7CgogIGlmKChzID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpKSkgewogICAgKnNwdHIgPSBqc19zdHJkdXAoY3R4LCBzKTsKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcyk7CiAgfQogIHJldHVybiAqc3B0cjsKfQoKc3RhdGljIGlubGluZSBCT09MCmpzX2lzX251bGxpc2goSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgcmV0dXJuIEpTX0lzTnVsbCh2YWx1ZSkgfHwgSlNfSXNVbmRlZmluZWQodmFsdWUpOwp9CgpzdGF0aWMgaW5saW5lIHZvaWQKanNfYnVmZmVyX2ZyZWVfZGVmYXVsdChKU1J1bnRpbWUqIHJ0LCB2b2lkKiBvcGFxdWUsIHZvaWQqIHB0cikgewogIEpTQnVmZmVyKiBidWYgPSBvcGFxdWU7CgogIGlmKEpTX0lzU3RyaW5nKGJ1Zi0+dmFsdWUpKQogICAgSlNfRnJlZVZhbHVlUlQocnQsIGJ1Zi0+dmFsdWUpOwogIGVsc2UgaWYoIUpTX0lzVW5kZWZpbmVkKGJ1Zi0+dmFsdWUpKQogICAgSlNfRnJlZVZhbHVlUlQocnQsIGJ1Zi0+dmFsdWUpOwp9CgpzdGF0aWMgaW5saW5lIGNvbnN0IHVpbnQ4X3QqCmpzX2J1ZmZlcl9iZWdpbihjb25zdCBKU0J1ZmZlciogaW4pIHsKICByZXR1cm4gaW4tPmRhdGE7Cn0KCnN0YXRpYyBpbmxpbmUgY29uc3QgdWludDhfdCoKanNfYnVmZmVyX2VuZChjb25zdCBKU0J1ZmZlciogaW4pIHsKICByZXR1cm4gaW4tPmRhdGEgKyBpbi0+c2l6ZTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9KU19VVElMU19IICovCgAAAAAAAAAAzhAAAAAAAAAAAAAAAAAAAAAAAADOEAAAAAAAAAAAAAAAAAAAAAAAAM4QAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0KAAAAAAAAhAoAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"paste",
					null,
					"AQAAAKQKAAAAAAAA3QoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAoAAAAAAACkCgAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAHEQAAI2lmbmRlZiBNSU5ORVRfSlNVVElMU19ICiNkZWZpbmUgTUlOTkVUX0pTVVRJTFNfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSA8bGlzdC5oPgoKdHlwZWRlZiBzdHJ1Y3QgSlNUaHJlYWRTdGF0ZSB7CiAgc3RydWN0IGxpc3RfaGVhZCBvc19yd19oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3NpZ25hbF9oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3RpbWVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIHBvcnRfbGlzdDsKICBpbnQgZXZhbF9zY3JpcHRfcmVjdXJzZTsKICB2b2lkICpyZWN2X3BpcGUsICpzZW5kX3BpcGU7Cn0gSlNUaHJlYWRTdGF0ZTsKCnR5cGVkZWYgc3RydWN0IGlucHV0X2J1ZmZlciB7CiAgdWludDhfdCogZGF0YTsKICBzaXplX3Qgc2l6ZTsKICB2b2lkICgqZnJlZSkoSlNSdW50aW1lKiwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpOwogIEpTVmFsdWUgdmFsdWU7Cn0gSlNCdWZmZXI7Cgp0eXBlZGVmIHVuaW9uIHJlc29sdmVfZnVuY3Rpb25zIHsKICBKU1ZhbHVlIGFycmF5WzJdOwogIHN0cnVjdCB7CiAgICBKU1ZhbHVlIHJlc29sdmUsIHJlamVjdDsKICB9Owp9IFJlc29sdmVGdW5jdGlvbnM7CgpKU1ZhbHVlIHZlY3RvcjJhcnJheShKU0NvbnRleHQqLCBpbnQsIEpTVmFsdWVDb25zdFtdKTsKdm9pZCBqc19jb25zb2xlX2xvZyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QqLCBKU1ZhbHVlQ29uc3QqKTsKSlNWYWx1ZSBqc19mdW5jdGlvbl9ib3VuZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljLCBKU1ZhbHVlQ29uc3QqIGZ1bmNfZGF0YSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZF8xKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0KTsKSlNWYWx1ZSBqc19pdGVyYXRvcl9uZXh0KEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0KiwgQk9PTCogZG9uZV9wLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CmludCBqc19jb3B5X3Byb3BlcnRpZXMoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBKU1ZhbHVlQ29uc3QsIGludCBmbGFncyk7CnZvaWQganNfYnVmZmVyX2Zyb20oSlNDb250ZXh0KiwgSlNCdWZmZXIqLCBKU1ZhbHVlKTsKSlNCdWZmZXIganNfYnVmZmVyX25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlKTsKdm9pZCBqc19idWZmZXJfdG8oSlNCdWZmZXIsIHZvaWQqKiwgc2l6ZV90Kik7CnZvaWQganNfYnVmZmVyX3RvMyhKU0J1ZmZlciwgY29uc3QgY2hhcioqLCB2b2lkKiosIHVuc2lnbmVkKiBwbGVuKTsKQk9PTCBqc19idWZmZXJfdmFsaWQoY29uc3QgSlNCdWZmZXIqKTsKSlNCdWZmZXIganNfYnVmZmVyX2Nsb25lKGNvbnN0IEpTQnVmZmVyKiwgSlNDb250ZXh0Kik7CnZvaWQganNfYnVmZmVyX2R1bXAoY29uc3QgSlNCdWZmZXIqLCBEeW5CdWYqKTsKdm9pZCBqc19idWZmZXJfZnJlZShKU0J1ZmZlciosIEpTQ29udGV4dCopOwpCT09MIGpzX2lzX2l0ZXJhYmxlKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkJPT0wganNfaXNfaXRlcmF0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKSlNBdG9tIGpzX3N5bWJvbF9zdGF0aWNfYXRvbShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfc3ltYm9sX3N0YXRpY192YWx1ZShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfc3ltYm9sX2N0b3IoSlNDb250ZXh0Kik7CkpTVmFsdWUganNfZ2xvYmFsX2dldChKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CmNoYXIqIGpzX3Rvc3RyaW5nbGVuKEpTQ29udGV4dCosIHNpemVfdCosIEpTVmFsdWVDb25zdCk7CmNoYXIqIGpzX3Rvc3RyaW5nKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkpTVmFsdWUganNfaW52b2tlKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgY29uc3QgY2hhciosIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKSlNWYWx1ZSBqc19wcm9taXNlX2NyZWF0ZShKU0NvbnRleHQqLCBSZXNvbHZlRnVuY3Rpb25zKik7CkpTVmFsdWUganNfcHJvbWlzZV9yZXNvbHZlKEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqLCBKU1ZhbHVlQ29uc3QpOwpKU1ZhbHVlIGpzX3Byb21pc2VfcmVqZWN0KEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqLCBKU1ZhbHVlQ29uc3QpOwp2b2lkIGpzX3Byb21pc2VfemVybyhSZXNvbHZlRnVuY3Rpb25zKik7CkJPT0wganNfcHJvbWlzZV9wZW5kaW5nKFJlc29sdmVGdW5jdGlvbnMgY29uc3QqKTsKQk9PTCBqc19wcm9taXNlX2RvbmUoUmVzb2x2ZUZ1bmN0aW9ucyBjb25zdCopOwp2b2lkIGpzX3Byb21pc2VfZnJlZShKU0NvbnRleHQqLCBSZXNvbHZlRnVuY3Rpb25zKik7CkpTVmFsdWUganNfZ2xvYmFsX2dldChKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkJPT0wganNfaXNfcHJvbWlzZShKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwpKU1ZhbHVlIGpzX2Vycm9yX25ldyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKiwgLi4uKTsKdWludDhfdCoganNfdG9wdHJzaXplKEpTQ29udGV4dCosIHVuc2lnbmVkIGludCosIEpTVmFsdWUpOwpCT09MIGpzX2dldF9wcm9wZXJ0eXN0cl9ib29sKEpTQ29udGV4dCosIEpTVmFsdWUsIGNvbnN0IGNoYXIqKTsKSlNWYWx1ZSAganNfbW9kdWxlX2ltcG9ydF9tZXRhKEpTQ29udGV4dCosIGNvbnN0IGNoYXIqKTsKCnN0YXRpYyBpbmxpbmUgdm9pZApqc19jbGVhcihKU0NvbnRleHQqIGN0eCwgY29uc3Qgdm9pZCoqIHB0cikgewogIGlmKCpwdHIpCiAgICBqc19mcmVlKGN0eCwgKnB0cik7CiAgKnB0ciA9IDA7Cn0KCnN0YXRpYyBpbmxpbmUgdm9pZApqc19kdW1wX3N0cmluZyhjb25zdCBjaGFyKiBzdHIsIHNpemVfdCBsZW4sIHNpemVfdCBtYXhsZW4pIHsKICBzaXplX3QgaSwgbiA9IDI7CiAgcHV0Y2hhcignXCcnKTsKICBmb3IoaSA9IDA7IGkgPCBsZW47IGkrKykgewogICAgaWYoc3RyW2ldID09ICdcbicpIHsKICAgICAgcHV0Y2hhcignXFwnKTsKICAgICAgcHV0Y2hhcignbicpOwogICAgICBuICs9IDI7CiAgICB9IGVsc2UgewogICAgICBwdXRjaGFyKHN0cltpXSk7CiAgICAgIG4rKzsKICAgIH0KICAgIGlmKG1heGxlbiA+IDAgJiYgbiArIDEgPj0gbWF4bGVuKSB7CiAgICAgIGZwdXRzKCInLi4uIiwgc3Rkb3V0KTsKICAgICAgcmV0dXJuOwogICAgfQogIH0KICBwdXRjaGFyKCdcJycpOwp9CgpzdGF0aWMgaW5saW5lIGNoYXIqCmpzX3RvX3N0cmluZyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgY29uc3QgY2hhciogczsKICBjaGFyKiByZXQgPSAwOwoKICBpZigocyA9IEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKSkpIHsKICAgIHJldCA9IGpzX3N0cmR1cChjdHgsIHMpOwogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzKTsKICB9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpqc19yZXBsYWNlX3N0cmluZyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlLCBjaGFyKiogc3B0cikgewogIGNvbnN0IGNoYXIqIHM7CgogIGlmKCpzcHRyKQogICAganNfZnJlZShjdHgsICpzcHRyKTsKCiAgaWYoKHMgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSkpKSB7CiAgICAqc3B0ciA9IGpzX3N0cmR1cChjdHgsIHMpOwogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzKTsKICB9CiAgcmV0dXJuICpzcHRyOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKanNfaXNfbnVsbGlzaChKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICByZXR1cm4gSlNfSXNOdWxsKHZhbHVlKSB8fCBKU19Jc1VuZGVmaW5lZCh2YWx1ZSk7Cn0KCnN0YXRpYyBpbmxpbmUgdm9pZApqc19idWZmZXJfZnJlZV9kZWZhdWx0KEpTUnVudGltZSogcnQsIHZvaWQqIG9wYXF1ZSwgdm9pZCogcHRyKSB7CiAgSlNCdWZmZXIqIGJ1ZiA9IG9wYXF1ZTsKCiAgaWYoSlNfSXNTdHJpbmcoYnVmLT52YWx1ZSkpCiAgICBKU19GcmVlVmFsdWVSVChydCwgYnVmLT52YWx1ZSk7CiAgZWxzZSBpZighSlNfSXNVbmRlZmluZWQoYnVmLT52YWx1ZSkpCiAgICBKU19GcmVlVmFsdWVSVChydCwgYnVmLT52YWx1ZSk7Cn0KCnN0YXRpYyBpbmxpbmUgY29uc3QgdWludDhfdCoKanNfYnVmZmVyX2JlZ2luKGNvbnN0IEpTQnVmZmVyKiBpbikgewogIHJldHVybiBpbi0+ZGF0YTsKfQoKc3RhdGljIGlubGluZSBjb25zdCB1aW50OF90Kgpqc19idWZmZXJfZW5kKGNvbnN0IEpTQnVmZmVyKiBpbikgewogIHJldHVybiBpbi0+ZGF0YSArIGluLT5zaXplOwp9CgojZW5kaWYgLyogTUlOTkVUX0pTX1VUSUxTX0ggKi8KAAAAAAAAAAAGEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAsAAAAAAAAoCwAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"paste",
					null,
					"AQAAANwKAAAAAAAAEQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AoAAAAAAADcCgAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA7EQAAI2lmbmRlZiBNSU5ORVRfSlNVVElMU19ICiNkZWZpbmUgTUlOTkVUX0pTVVRJTFNfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSA8bGlzdC5oPgoKdHlwZWRlZiBzdHJ1Y3QgSlNUaHJlYWRTdGF0ZSB7CiAgc3RydWN0IGxpc3RfaGVhZCBvc19yd19oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3NpZ25hbF9oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3RpbWVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIHBvcnRfbGlzdDsKICBpbnQgZXZhbF9zY3JpcHRfcmVjdXJzZTsKICB2b2lkICpyZWN2X3BpcGUsICpzZW5kX3BpcGU7Cn0gSlNUaHJlYWRTdGF0ZTsKCnR5cGVkZWYgc3RydWN0IGlucHV0X2J1ZmZlciB7CiAgdWludDhfdCogZGF0YTsKICBzaXplX3Qgc2l6ZTsKICB2b2lkICgqZnJlZSkoSlNSdW50aW1lKiwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpOwogIEpTVmFsdWUgdmFsdWU7Cn0gSlNCdWZmZXI7Cgp0eXBlZGVmIHVuaW9uIHJlc29sdmVfZnVuY3Rpb25zIHsKICBKU1ZhbHVlIGFycmF5WzJdOwogIHN0cnVjdCB7CiAgICBKU1ZhbHVlIHJlc29sdmUsIHJlamVjdDsKICB9Owp9IFJlc29sdmVGdW5jdGlvbnM7CgpKU1ZhbHVlIHZlY3RvcjJhcnJheShKU0NvbnRleHQqLCBpbnQsIEpTVmFsdWVDb25zdFtdKTsKdm9pZCBqc19jb25zb2xlX2xvZyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QqLCBKU1ZhbHVlQ29uc3QqKTsKSlNWYWx1ZSBqc19mdW5jdGlvbl9ib3VuZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljLCBKU1ZhbHVlQ29uc3QqIGZ1bmNfZGF0YSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZF8xKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0KTsKSlNWYWx1ZSBqc19pdGVyYXRvcl9uZXh0KEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0KiwgQk9PTCogZG9uZV9wLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CmludCBqc19jb3B5X3Byb3BlcnRpZXMoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBKU1ZhbHVlQ29uc3QsIGludCBmbGFncyk7CnZvaWQganNfYnVmZmVyX2Zyb20oSlNDb250ZXh0KiwgSlNCdWZmZXIqLCBKU1ZhbHVlKTsKSlNCdWZmZXIganNfYnVmZmVyX25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlKTsKdm9pZCBqc19idWZmZXJfdG8oSlNCdWZmZXIsIHZvaWQqKiwgc2l6ZV90Kik7CnZvaWQganNfYnVmZmVyX3RvMyhKU0J1ZmZlciwgY29uc3QgY2hhcioqLCB2b2lkKiosIHVuc2lnbmVkKiBwbGVuKTsKQk9PTCBqc19idWZmZXJfdmFsaWQoY29uc3QgSlNCdWZmZXIqKTsKSlNCdWZmZXIganNfYnVmZmVyX2Nsb25lKGNvbnN0IEpTQnVmZmVyKiwgSlNDb250ZXh0Kik7CnZvaWQganNfYnVmZmVyX2R1bXAoY29uc3QgSlNCdWZmZXIqLCBEeW5CdWYqKTsKdm9pZCBqc19idWZmZXJfZnJlZShKU0J1ZmZlciosIEpTQ29udGV4dCopOwpCT09MIGpzX2lzX2l0ZXJhYmxlKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkJPT0wganNfaXNfaXRlcmF0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKSlNBdG9tIGpzX3N5bWJvbF9zdGF0aWNfYXRvbShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfc3ltYm9sX3N0YXRpY192YWx1ZShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfc3ltYm9sX2N0b3IoSlNDb250ZXh0Kik7CkpTVmFsdWUganNfZ2xvYmFsX2dldChKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CmNoYXIqIGpzX3Rvc3RyaW5nbGVuKEpTQ29udGV4dCosIHNpemVfdCosIEpTVmFsdWVDb25zdCk7CmNoYXIqIGpzX3Rvc3RyaW5nKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkpTVmFsdWUganNfaW52b2tlKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgY29uc3QgY2hhciosIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKSlNWYWx1ZSBqc19wcm9taXNlX2NyZWF0ZShKU0NvbnRleHQqLCBSZXNvbHZlRnVuY3Rpb25zKik7CkpTVmFsdWUganNfcHJvbWlzZV9yZXNvbHZlKEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqLCBKU1ZhbHVlQ29uc3QpOwpKU1ZhbHVlIGpzX3Byb21pc2VfcmVqZWN0KEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqLCBKU1ZhbHVlQ29uc3QpOwp2b2lkIGpzX3Byb21pc2VfemVybyhSZXNvbHZlRnVuY3Rpb25zKik7CkJPT0wganNfcHJvbWlzZV9wZW5kaW5nKFJlc29sdmVGdW5jdGlvbnMgY29uc3QqKTsKQk9PTCBqc19wcm9taXNlX2RvbmUoUmVzb2x2ZUZ1bmN0aW9ucyBjb25zdCopOwp2b2lkIGpzX3Byb21pc2VfZnJlZShKU0NvbnRleHQqLCBSZXNvbHZlRnVuY3Rpb25zKik7CkpTVmFsdWUganNfZ2xvYmFsX2dldChKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkJPT0wganNfaXNfcHJvbWlzZShKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwpKU1ZhbHVlIGpzX2Vycm9yX25ldyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKiwgLi4uKTsKdWludDhfdCoganNfdG9wdHJzaXplKEpTQ29udGV4dCosIHVuc2lnbmVkIGludCosIEpTVmFsdWUpOwpCT09MIGpzX2dldF9wcm9wZXJ0eXN0cl9ib29sKEpTQ29udGV4dCosIEpTVmFsdWUsIGNvbnN0IGNoYXIqKTsKSlNWYWx1ZSBqc19tb2R1bGVfaW1wb3J0X21ldGEoSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwpzdHJ1Y3QgbGlzdF9oZWFkKiBqc19jb250ZXh0X21vZHVsZWxpc3QoSlNDb250ZXh0Kik7CgpzdGF0aWMgaW5saW5lIHZvaWQKanNfY2xlYXIoSlNDb250ZXh0KiBjdHgsIGNvbnN0IHZvaWQqKiBwdHIpIHsKICBpZigqcHRyKQogICAganNfZnJlZShjdHgsICpwdHIpOwogICpwdHIgPSAwOwp9CgpzdGF0aWMgaW5saW5lIHZvaWQKanNfZHVtcF9zdHJpbmcoY29uc3QgY2hhciogc3RyLCBzaXplX3QgbGVuLCBzaXplX3QgbWF4bGVuKSB7CiAgc2l6ZV90IGksIG4gPSAyOwogIHB1dGNoYXIoJ1wnJyk7CiAgZm9yKGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKICAgIGlmKHN0cltpXSA9PSAnXG4nKSB7CiAgICAgIHB1dGNoYXIoJ1xcJyk7CiAgICAgIHB1dGNoYXIoJ24nKTsKICAgICAgbiArPSAyOwogICAgfSBlbHNlIHsKICAgICAgcHV0Y2hhcihzdHJbaV0pOwogICAgICBuKys7CiAgICB9CiAgICBpZihtYXhsZW4gPiAwICYmIG4gKyAxID49IG1heGxlbikgewogICAgICBmcHV0cygiJy4uLiIsIHN0ZG91dCk7CiAgICAgIHJldHVybjsKICAgIH0KICB9CiAgcHV0Y2hhcignXCcnKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpqc190b19zdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIGNvbnN0IGNoYXIqIHM7CiAgY2hhciogcmV0ID0gMDsKCiAgaWYoKHMgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSkpKSB7CiAgICByZXQgPSBqc19zdHJkdXAoY3R4LCBzKTsKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcyk7CiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBpbmxpbmUgY2hhcioKanNfcmVwbGFjZV9zdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSwgY2hhcioqIHNwdHIpIHsKICBjb25zdCBjaGFyKiBzOwoKICBpZigqc3B0cikKICAgIGpzX2ZyZWUoY3R4LCAqc3B0cik7CgogIGlmKChzID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpKSkgewogICAgKnNwdHIgPSBqc19zdHJkdXAoY3R4LCBzKTsKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcyk7CiAgfQogIHJldHVybiAqc3B0cjsKfQoKc3RhdGljIGlubGluZSBCT09MCmpzX2lzX251bGxpc2goSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgcmV0dXJuIEpTX0lzTnVsbCh2YWx1ZSkgfHwgSlNfSXNVbmRlZmluZWQodmFsdWUpOwp9CgpzdGF0aWMgaW5saW5lIHZvaWQKanNfYnVmZmVyX2ZyZWVfZGVmYXVsdChKU1J1bnRpbWUqIHJ0LCB2b2lkKiBvcGFxdWUsIHZvaWQqIHB0cikgewogIEpTQnVmZmVyKiBidWYgPSBvcGFxdWU7CgogIGlmKEpTX0lzU3RyaW5nKGJ1Zi0+dmFsdWUpKQogICAgSlNfRnJlZVZhbHVlUlQocnQsIGJ1Zi0+dmFsdWUpOwogIGVsc2UgaWYoIUpTX0lzVW5kZWZpbmVkKGJ1Zi0+dmFsdWUpKQogICAgSlNfRnJlZVZhbHVlUlQocnQsIGJ1Zi0+dmFsdWUpOwp9CgpzdGF0aWMgaW5saW5lIGNvbnN0IHVpbnQ4X3QqCmpzX2J1ZmZlcl9iZWdpbihjb25zdCBKU0J1ZmZlciogaW4pIHsKICByZXR1cm4gaW4tPmRhdGE7Cn0KCnN0YXRpYyBpbmxpbmUgY29uc3QgdWludDhfdCoKanNfYnVmZmVyX2VuZChjb25zdCBKU0J1ZmZlciogaW4pIHsKICByZXR1cm4gaW4tPmRhdGEgKyBpbi0+c2l6ZTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9KU19VVElMU19IICovCgAAAAAAAAAANBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOhEAAAAAAAA6EQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"paste",
					null,
					"AQAAAAoLAAAAAAAAOwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgsAAAAAAAAKCwAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABlEQAAI2lmbmRlZiBNSU5ORVRfSlNVVElMU19ICiNkZWZpbmUgTUlOTkVUX0pTVVRJTFNfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSA8bGlzdC5oPgoKdHlwZWRlZiBzdHJ1Y3QgSlNUaHJlYWRTdGF0ZSB7CiAgc3RydWN0IGxpc3RfaGVhZCBvc19yd19oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3NpZ25hbF9oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3RpbWVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIHBvcnRfbGlzdDsKICBpbnQgZXZhbF9zY3JpcHRfcmVjdXJzZTsKICB2b2lkICpyZWN2X3BpcGUsICpzZW5kX3BpcGU7Cn0gSlNUaHJlYWRTdGF0ZTsKCnR5cGVkZWYgc3RydWN0IGlucHV0X2J1ZmZlciB7CiAgdWludDhfdCogZGF0YTsKICBzaXplX3Qgc2l6ZTsKICB2b2lkICgqZnJlZSkoSlNSdW50aW1lKiwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpOwogIEpTVmFsdWUgdmFsdWU7Cn0gSlNCdWZmZXI7Cgp0eXBlZGVmIHVuaW9uIHJlc29sdmVfZnVuY3Rpb25zIHsKICBKU1ZhbHVlIGFycmF5WzJdOwogIHN0cnVjdCB7CiAgICBKU1ZhbHVlIHJlc29sdmUsIHJlamVjdDsKICB9Owp9IFJlc29sdmVGdW5jdGlvbnM7CgpKU1ZhbHVlIHZlY3RvcjJhcnJheShKU0NvbnRleHQqLCBpbnQsIEpTVmFsdWVDb25zdFtdKTsKdm9pZCBqc19jb25zb2xlX2xvZyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QqLCBKU1ZhbHVlQ29uc3QqKTsKSlNWYWx1ZSBqc19mdW5jdGlvbl9ib3VuZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljLCBKU1ZhbHVlQ29uc3QqIGZ1bmNfZGF0YSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZF8xKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0KTsKSlNWYWx1ZSBqc19pdGVyYXRvcl9uZXh0KEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0KiwgQk9PTCogZG9uZV9wLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CmludCBqc19jb3B5X3Byb3BlcnRpZXMoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBKU1ZhbHVlQ29uc3QsIGludCBmbGFncyk7CnZvaWQganNfYnVmZmVyX2Zyb20oSlNDb250ZXh0KiwgSlNCdWZmZXIqLCBKU1ZhbHVlKTsKSlNCdWZmZXIganNfYnVmZmVyX25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlKTsKdm9pZCBqc19idWZmZXJfdG8oSlNCdWZmZXIsIHZvaWQqKiwgc2l6ZV90Kik7CnZvaWQganNfYnVmZmVyX3RvMyhKU0J1ZmZlciwgY29uc3QgY2hhcioqLCB2b2lkKiosIHVuc2lnbmVkKiBwbGVuKTsKQk9PTCBqc19idWZmZXJfdmFsaWQoY29uc3QgSlNCdWZmZXIqKTsKSlNCdWZmZXIganNfYnVmZmVyX2Nsb25lKGNvbnN0IEpTQnVmZmVyKiwgSlNDb250ZXh0Kik7CnZvaWQganNfYnVmZmVyX2R1bXAoY29uc3QgSlNCdWZmZXIqLCBEeW5CdWYqKTsKdm9pZCBqc19idWZmZXJfZnJlZShKU0J1ZmZlciosIEpTQ29udGV4dCopOwpCT09MIGpzX2lzX2l0ZXJhYmxlKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkJPT0wganNfaXNfaXRlcmF0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKSlNBdG9tIGpzX3N5bWJvbF9zdGF0aWNfYXRvbShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfc3ltYm9sX3N0YXRpY192YWx1ZShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfc3ltYm9sX2N0b3IoSlNDb250ZXh0Kik7CkpTVmFsdWUganNfZ2xvYmFsX2dldChKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CmNoYXIqIGpzX3Rvc3RyaW5nbGVuKEpTQ29udGV4dCosIHNpemVfdCosIEpTVmFsdWVDb25zdCk7CmNoYXIqIGpzX3Rvc3RyaW5nKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkpTVmFsdWUganNfaW52b2tlKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgY29uc3QgY2hhciosIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKSlNWYWx1ZSBqc19wcm9taXNlX2NyZWF0ZShKU0NvbnRleHQqLCBSZXNvbHZlRnVuY3Rpb25zKik7CkpTVmFsdWUganNfcHJvbWlzZV9yZXNvbHZlKEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqLCBKU1ZhbHVlQ29uc3QpOwpKU1ZhbHVlIGpzX3Byb21pc2VfcmVqZWN0KEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqLCBKU1ZhbHVlQ29uc3QpOwp2b2lkIGpzX3Byb21pc2VfemVybyhSZXNvbHZlRnVuY3Rpb25zKik7CkJPT0wganNfcHJvbWlzZV9wZW5kaW5nKFJlc29sdmVGdW5jdGlvbnMgY29uc3QqKTsKQk9PTCBqc19wcm9taXNlX2RvbmUoUmVzb2x2ZUZ1bmN0aW9ucyBjb25zdCopOwp2b2lkIGpzX3Byb21pc2VfZnJlZShKU0NvbnRleHQqLCBSZXNvbHZlRnVuY3Rpb25zKik7CkpTVmFsdWUganNfZ2xvYmFsX2dldChKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkJPT0wganNfaXNfcHJvbWlzZShKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwpKU1ZhbHVlIGpzX2Vycm9yX25ldyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKiwgLi4uKTsKdWludDhfdCoganNfdG9wdHJzaXplKEpTQ29udGV4dCosIHVuc2lnbmVkIGludCosIEpTVmFsdWUpOwpCT09MIGpzX2dldF9wcm9wZXJ0eXN0cl9ib29sKEpTQ29udGV4dCosIEpTVmFsdWUsIGNvbnN0IGNoYXIqKTsKSlNWYWx1ZSBqc19tb2R1bGVfaW1wb3J0X21ldGEoSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwpzdHJ1Y3QgbGlzdF9oZWFkKiBqc19tb2R1bGVfbGlzdChKU0NvbnRleHQqKTsKSlNNb2R1bGVEZWYqICAgICAganNfbW9kdWxlX2F0KEpTQ29udGV4dCosIGludCk7CgpzdGF0aWMgaW5saW5lIHZvaWQKanNfY2xlYXIoSlNDb250ZXh0KiBjdHgsIGNvbnN0IHZvaWQqKiBwdHIpIHsKICBpZigqcHRyKQogICAganNfZnJlZShjdHgsICpwdHIpOwogICpwdHIgPSAwOwp9CgpzdGF0aWMgaW5saW5lIHZvaWQKanNfZHVtcF9zdHJpbmcoY29uc3QgY2hhciogc3RyLCBzaXplX3QgbGVuLCBzaXplX3QgbWF4bGVuKSB7CiAgc2l6ZV90IGksIG4gPSAyOwogIHB1dGNoYXIoJ1wnJyk7CiAgZm9yKGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKICAgIGlmKHN0cltpXSA9PSAnXG4nKSB7CiAgICAgIHB1dGNoYXIoJ1xcJyk7CiAgICAgIHB1dGNoYXIoJ24nKTsKICAgICAgbiArPSAyOwogICAgfSBlbHNlIHsKICAgICAgcHV0Y2hhcihzdHJbaV0pOwogICAgICBuKys7CiAgICB9CiAgICBpZihtYXhsZW4gPiAwICYmIG4gKyAxID49IG1heGxlbikgewogICAgICBmcHV0cygiJy4uLiIsIHN0ZG91dCk7CiAgICAgIHJldHVybjsKICAgIH0KICB9CiAgcHV0Y2hhcignXCcnKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpqc190b19zdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIGNvbnN0IGNoYXIqIHM7CiAgY2hhciogcmV0ID0gMDsKCiAgaWYoKHMgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSkpKSB7CiAgICByZXQgPSBqc19zdHJkdXAoY3R4LCBzKTsKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcyk7CiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBpbmxpbmUgY2hhcioKanNfcmVwbGFjZV9zdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSwgY2hhcioqIHNwdHIpIHsKICBjb25zdCBjaGFyKiBzOwoKICBpZigqc3B0cikKICAgIGpzX2ZyZWUoY3R4LCAqc3B0cik7CgogIGlmKChzID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpKSkgewogICAgKnNwdHIgPSBqc19zdHJkdXAoY3R4LCBzKTsKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcyk7CiAgfQogIHJldHVybiAqc3B0cjsKfQoKc3RhdGljIGlubGluZSBCT09MCmpzX2lzX251bGxpc2goSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgcmV0dXJuIEpTX0lzTnVsbCh2YWx1ZSkgfHwgSlNfSXNVbmRlZmluZWQodmFsdWUpOwp9CgpzdGF0aWMgaW5saW5lIHZvaWQKanNfYnVmZmVyX2ZyZWVfZGVmYXVsdChKU1J1bnRpbWUqIHJ0LCB2b2lkKiBvcGFxdWUsIHZvaWQqIHB0cikgewogIEpTQnVmZmVyKiBidWYgPSBvcGFxdWU7CgogIGlmKEpTX0lzU3RyaW5nKGJ1Zi0+dmFsdWUpKQogICAgSlNfRnJlZVZhbHVlUlQocnQsIGJ1Zi0+dmFsdWUpOwogIGVsc2UgaWYoIUpTX0lzVW5kZWZpbmVkKGJ1Zi0+dmFsdWUpKQogICAgSlNfRnJlZVZhbHVlUlQocnQsIGJ1Zi0+dmFsdWUpOwp9CgpzdGF0aWMgaW5saW5lIGNvbnN0IHVpbnQ4X3QqCmpzX2J1ZmZlcl9iZWdpbihjb25zdCBKU0J1ZmZlciogaW4pIHsKICByZXR1cm4gaW4tPmRhdGE7Cn0KCnN0YXRpYyBpbmxpbmUgY29uc3QgdWludDhfdCoKanNfYnVmZmVyX2VuZChjb25zdCBKU0J1ZmZlciogaW4pIHsKICByZXR1cm4gaW4tPmRhdGEgKyBpbi0+c2l6ZTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9KU19VVElMU19IICovCgAAAAAAAAAAYBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwsAAAAAAAA7CwAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"paste",
					null,
					"AgAAAKQKAAAAAAAAdgsAAAAAAAAAAAAAdgsAAAAAAAB2CwAAAAAAAJEAAABKU1ZhbHVlIGpzX21vZHVsZV9pbXBvcnRfbWV0YShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CnN0cnVjdCBsaXN0X2hlYWQqIGpzX21vZHVsZV9saXN0KEpTQ29udGV4dCopOwpKU01vZHVsZURlZioganNfbW9kdWxlX2F0KEpTQ29udGV4dCosIGludCk7",
					"AQAAAAAAAAABAAAANQsAAAAAAACkCgAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"left_delete",
					null,
					"AQAAAHULAAAAAAAAdQsAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAdgsAAAAAAAB2CwAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACgEQAAI2lmbmRlZiBNSU5ORVRfSlNVVElMU19ICiNkZWZpbmUgTUlOTkVUX0pTVVRJTFNfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSA8bGlzdC5oPgoKdHlwZWRlZiBzdHJ1Y3QgSlNUaHJlYWRTdGF0ZSB7CiAgc3RydWN0IGxpc3RfaGVhZCBvc19yd19oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3NpZ25hbF9oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3RpbWVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIHBvcnRfbGlzdDsKICBpbnQgZXZhbF9zY3JpcHRfcmVjdXJzZTsKICB2b2lkICpyZWN2X3BpcGUsICpzZW5kX3BpcGU7Cn0gSlNUaHJlYWRTdGF0ZTsKCnR5cGVkZWYgc3RydWN0IGlucHV0X2J1ZmZlciB7CiAgdWludDhfdCogZGF0YTsKICBzaXplX3Qgc2l6ZTsKICB2b2lkICgqZnJlZSkoSlNSdW50aW1lKiwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpOwogIEpTVmFsdWUgdmFsdWU7Cn0gSlNCdWZmZXI7Cgp0eXBlZGVmIHVuaW9uIHJlc29sdmVfZnVuY3Rpb25zIHsKICBKU1ZhbHVlIGFycmF5WzJdOwogIHN0cnVjdCB7CiAgICBKU1ZhbHVlIHJlc29sdmUsIHJlamVjdDsKICB9Owp9IFJlc29sdmVGdW5jdGlvbnM7CgpKU1ZhbHVlIHZlY3RvcjJhcnJheShKU0NvbnRleHQqLCBpbnQsIEpTVmFsdWVDb25zdFtdKTsKdm9pZCBqc19jb25zb2xlX2xvZyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QqLCBKU1ZhbHVlQ29uc3QqKTsKSlNWYWx1ZSBqc19mdW5jdGlvbl9ib3VuZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljLCBKU1ZhbHVlQ29uc3QqIGZ1bmNfZGF0YSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZF8xKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0KTsKSlNWYWx1ZSBqc19pdGVyYXRvcl9uZXh0KEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0KiwgQk9PTCogZG9uZV9wLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CmludCBqc19jb3B5X3Byb3BlcnRpZXMoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBKU1ZhbHVlQ29uc3QsIGludCBmbGFncyk7CnZvaWQganNfYnVmZmVyX2Zyb20oSlNDb250ZXh0KiwgSlNCdWZmZXIqLCBKU1ZhbHVlKTsKSlNCdWZmZXIganNfYnVmZmVyX25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlKTsKdm9pZCBqc19idWZmZXJfdG8oSlNCdWZmZXIsIHZvaWQqKiwgc2l6ZV90Kik7CnZvaWQganNfYnVmZmVyX3RvMyhKU0J1ZmZlciwgY29uc3QgY2hhcioqLCB2b2lkKiosIHVuc2lnbmVkKiBwbGVuKTsKQk9PTCBqc19idWZmZXJfdmFsaWQoY29uc3QgSlNCdWZmZXIqKTsKSlNCdWZmZXIganNfYnVmZmVyX2Nsb25lKGNvbnN0IEpTQnVmZmVyKiwgSlNDb250ZXh0Kik7CnZvaWQganNfYnVmZmVyX2R1bXAoY29uc3QgSlNCdWZmZXIqLCBEeW5CdWYqKTsKdm9pZCBqc19idWZmZXJfZnJlZShKU0J1ZmZlciosIEpTQ29udGV4dCopOwpCT09MIGpzX2lzX2l0ZXJhYmxlKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkJPT0wganNfaXNfaXRlcmF0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKSlNBdG9tIGpzX3N5bWJvbF9zdGF0aWNfYXRvbShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfc3ltYm9sX3N0YXRpY192YWx1ZShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfc3ltYm9sX2N0b3IoSlNDb250ZXh0Kik7CkpTVmFsdWUganNfZ2xvYmFsX2dldChKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CmNoYXIqIGpzX3Rvc3RyaW5nbGVuKEpTQ29udGV4dCosIHNpemVfdCosIEpTVmFsdWVDb25zdCk7CmNoYXIqIGpzX3Rvc3RyaW5nKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkpTVmFsdWUganNfaW52b2tlKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgY29uc3QgY2hhciosIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKSlNWYWx1ZSBqc19wcm9taXNlX2NyZWF0ZShKU0NvbnRleHQqLCBSZXNvbHZlRnVuY3Rpb25zKik7CkpTVmFsdWUganNfcHJvbWlzZV9yZXNvbHZlKEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqLCBKU1ZhbHVlQ29uc3QpOwpKU1ZhbHVlIGpzX3Byb21pc2VfcmVqZWN0KEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqLCBKU1ZhbHVlQ29uc3QpOwp2b2lkIGpzX3Byb21pc2VfemVybyhSZXNvbHZlRnVuY3Rpb25zKik7CkJPT0wganNfcHJvbWlzZV9wZW5kaW5nKFJlc29sdmVGdW5jdGlvbnMgY29uc3QqKTsKQk9PTCBqc19wcm9taXNlX2RvbmUoUmVzb2x2ZUZ1bmN0aW9ucyBjb25zdCopOwp2b2lkIGpzX3Byb21pc2VfZnJlZShKU0NvbnRleHQqLCBSZXNvbHZlRnVuY3Rpb25zKik7CkpTVmFsdWUganNfZ2xvYmFsX2dldChKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkJPT0wganNfaXNfcHJvbWlzZShKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwpKU1ZhbHVlIGpzX2Vycm9yX25ldyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKiwgLi4uKTsKdWludDhfdCoganNfdG9wdHJzaXplKEpTQ29udGV4dCosIHVuc2lnbmVkIGludCosIEpTVmFsdWUpOwpCT09MIGpzX2dldF9wcm9wZXJ0eXN0cl9ib29sKEpTQ29udGV4dCosIEpTVmFsdWUsIGNvbnN0IGNoYXIqKTsKc3RydWN0IGxpc3RfaGVhZCoganNfbW9kdWxlX2xpc3QoSlNDb250ZXh0Kik7CkpTTW9kdWxlRGVmKiAgICAgIGpzX21vZHVsZV9hdChKU0NvbnRleHQqLCBpbnQpOwpKU01vZHVsZURlZiogICAgICBqc19tb2R1bGVfZmluZChKU0NvbnRleHQqLCBKU0F0b20pOwpKU01vZHVsZURlZiogICAgICBqc19tb2R1bGVfZmluZF9zKEpTQ29udGV4dCosIGNvbnN0IGNoYXIqKTsKCnN0YXRpYyBpbmxpbmUgdm9pZApqc19jbGVhcihKU0NvbnRleHQqIGN0eCwgY29uc3Qgdm9pZCoqIHB0cikgewogIGlmKCpwdHIpCiAgICBqc19mcmVlKGN0eCwgKnB0cik7CiAgKnB0ciA9IDA7Cn0KCnN0YXRpYyBpbmxpbmUgdm9pZApqc19kdW1wX3N0cmluZyhjb25zdCBjaGFyKiBzdHIsIHNpemVfdCBsZW4sIHNpemVfdCBtYXhsZW4pIHsKICBzaXplX3QgaSwgbiA9IDI7CiAgcHV0Y2hhcignXCcnKTsKICBmb3IoaSA9IDA7IGkgPCBsZW47IGkrKykgewogICAgaWYoc3RyW2ldID09ICdcbicpIHsKICAgICAgcHV0Y2hhcignXFwnKTsKICAgICAgcHV0Y2hhcignbicpOwogICAgICBuICs9IDI7CiAgICB9IGVsc2UgewogICAgICBwdXRjaGFyKHN0cltpXSk7CiAgICAgIG4rKzsKICAgIH0KICAgIGlmKG1heGxlbiA+IDAgJiYgbiArIDEgPj0gbWF4bGVuKSB7CiAgICAgIGZwdXRzKCInLi4uIiwgc3Rkb3V0KTsKICAgICAgcmV0dXJuOwogICAgfQogIH0KICBwdXRjaGFyKCdcJycpOwp9CgpzdGF0aWMgaW5saW5lIGNoYXIqCmpzX3RvX3N0cmluZyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgY29uc3QgY2hhciogczsKICBjaGFyKiByZXQgPSAwOwoKICBpZigocyA9IEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKSkpIHsKICAgIHJldCA9IGpzX3N0cmR1cChjdHgsIHMpOwogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzKTsKICB9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpqc19yZXBsYWNlX3N0cmluZyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlLCBjaGFyKiogc3B0cikgewogIGNvbnN0IGNoYXIqIHM7CgogIGlmKCpzcHRyKQogICAganNfZnJlZShjdHgsICpzcHRyKTsKCiAgaWYoKHMgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSkpKSB7CiAgICAqc3B0ciA9IGpzX3N0cmR1cChjdHgsIHMpOwogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzKTsKICB9CiAgcmV0dXJuICpzcHRyOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKanNfaXNfbnVsbGlzaChKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICByZXR1cm4gSlNfSXNOdWxsKHZhbHVlKSB8fCBKU19Jc1VuZGVmaW5lZCh2YWx1ZSk7Cn0KCnN0YXRpYyBpbmxpbmUgdm9pZApqc19idWZmZXJfZnJlZV9kZWZhdWx0KEpTUnVudGltZSogcnQsIHZvaWQqIG9wYXF1ZSwgdm9pZCogcHRyKSB7CiAgSlNCdWZmZXIqIGJ1ZiA9IG9wYXF1ZTsKCiAgaWYoSlNfSXNTdHJpbmcoYnVmLT52YWx1ZSkpCiAgICBKU19GcmVlVmFsdWVSVChydCwgYnVmLT52YWx1ZSk7CiAgZWxzZSBpZighSlNfSXNVbmRlZmluZWQoYnVmLT52YWx1ZSkpCiAgICBKU19GcmVlVmFsdWVSVChydCwgYnVmLT52YWx1ZSk7Cn0KCnN0YXRpYyBpbmxpbmUgY29uc3QgdWludDhfdCoKanNfYnVmZmVyX2JlZ2luKGNvbnN0IEpTQnVmZmVyKiBpbikgewogIHJldHVybiBpbi0+ZGF0YTsKfQoKc3RhdGljIGlubGluZSBjb25zdCB1aW50OF90Kgpqc19idWZmZXJfZW5kKGNvbnN0IEpTQnVmZmVyKiBpbikgewogIHJldHVybiBpbi0+ZGF0YSArIGluLT5zaXplOwp9CgojZW5kaWYgLyogTUlOTkVUX0pTX1VUSUxTX0ggKi8KAAAAAAAAAACREQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQsAAAAAAAB1CwAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"paste",
					null,
					"AQAAAE4HAAAAAAAAsAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgcAAAAAAABOBwAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADzEQAAI2lmbmRlZiBNSU5ORVRfSlNVVElMU19ICiNkZWZpbmUgTUlOTkVUX0pTVVRJTFNfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSA8bGlzdC5oPgoKdHlwZWRlZiBzdHJ1Y3QgSlNUaHJlYWRTdGF0ZSB7CiAgc3RydWN0IGxpc3RfaGVhZCBvc19yd19oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3NpZ25hbF9oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3RpbWVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIHBvcnRfbGlzdDsKICBpbnQgZXZhbF9zY3JpcHRfcmVjdXJzZTsKICB2b2lkICpyZWN2X3BpcGUsICpzZW5kX3BpcGU7Cn0gSlNUaHJlYWRTdGF0ZTsKCnR5cGVkZWYgc3RydWN0IGlucHV0X2J1ZmZlciB7CiAgdWludDhfdCogZGF0YTsKICBzaXplX3Qgc2l6ZTsKICB2b2lkICgqZnJlZSkoSlNSdW50aW1lKiwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpOwogIEpTVmFsdWUgdmFsdWU7Cn0gSlNCdWZmZXI7Cgp0eXBlZGVmIHVuaW9uIHJlc29sdmVfZnVuY3Rpb25zIHsKICBKU1ZhbHVlIGFycmF5WzJdOwogIHN0cnVjdCB7CiAgICBKU1ZhbHVlIHJlc29sdmUsIHJlamVjdDsKICB9Owp9IFJlc29sdmVGdW5jdGlvbnM7CgpKU1ZhbHVlIHZlY3RvcjJhcnJheShKU0NvbnRleHQqLCBpbnQsIEpTVmFsdWVDb25zdFtdKTsKdm9pZCBqc19jb25zb2xlX2xvZyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QqLCBKU1ZhbHVlQ29uc3QqKTsKSlNWYWx1ZSBqc19mdW5jdGlvbl9ib3VuZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljLCBKU1ZhbHVlQ29uc3QqIGZ1bmNfZGF0YSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZF8xKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0KTsKSlNWYWx1ZSBqc19pdGVyYXRvcl9uZXh0KEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0KiwgQk9PTCogZG9uZV9wLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CmludCBqc19jb3B5X3Byb3BlcnRpZXMoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBKU1ZhbHVlQ29uc3QsIGludCBmbGFncyk7CnZvaWQganNfYnVmZmVyX2Zyb20oSlNDb250ZXh0KiwgSlNCdWZmZXIqLCBKU1ZhbHVlKTsKSlNCdWZmZXIganNfYnVmZmVyX25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlKTsKdm9pZCBqc19idWZmZXJfdG8oSlNCdWZmZXIsIHZvaWQqKiwgc2l6ZV90Kik7CnZvaWQganNfYnVmZmVyX3RvMyhKU0J1ZmZlciwgY29uc3QgY2hhcioqLCB2b2lkKiosIHVuc2lnbmVkKiBwbGVuKTsKQk9PTCBqc19idWZmZXJfdmFsaWQoY29uc3QgSlNCdWZmZXIqKTsKSlNCdWZmZXIganNfYnVmZmVyX2Nsb25lKGNvbnN0IEpTQnVmZmVyKiwgSlNDb250ZXh0Kik7CnZvaWQganNfYnVmZmVyX2R1bXAoY29uc3QgSlNCdWZmZXIqLCBEeW5CdWYqKTsKdm9pZCBqc19idWZmZXJfZnJlZShKU0J1ZmZlciosIEpTQ29udGV4dCopOwpCT09MIGpzX2lzX2l0ZXJhYmxlKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkJPT0wganNfaXNfaXRlcmF0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKSlNBdG9tIGpzX3N5bWJvbF9zdGF0aWNfYXRvbShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfc3ltYm9sX3N0YXRpY192YWx1ZShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfc3ltYm9sX2N0b3IoSlNDb250ZXh0Kik7CkpTVmFsdWUganNfZ2xvYmFsX2dldChKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUgICAgICAgICAgIGpzX2dsb2JhbF9vcyhKU0NvbnRleHQqKTsKSlNWYWx1ZSAgICAgICAgICAganNfb3NfZ2V0KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqKTsKY2hhcioganNfdG9zdHJpbmdsZW4oSlNDb250ZXh0Kiwgc2l6ZV90KiwgSlNWYWx1ZUNvbnN0KTsKY2hhcioganNfdG9zdHJpbmcoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKSlNWYWx1ZSBqc19pbnZva2UoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBjb25zdCBjaGFyKiwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIGpzX3Byb21pc2VfY3JlYXRlKEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqKTsKSlNWYWx1ZSBqc19wcm9taXNlX3Jlc29sdmUoSlNDb250ZXh0KiwgUmVzb2x2ZUZ1bmN0aW9ucyosIEpTVmFsdWVDb25zdCk7CkpTVmFsdWUganNfcHJvbWlzZV9yZWplY3QoSlNDb250ZXh0KiwgUmVzb2x2ZUZ1bmN0aW9ucyosIEpTVmFsdWVDb25zdCk7CnZvaWQganNfcHJvbWlzZV96ZXJvKFJlc29sdmVGdW5jdGlvbnMqKTsKQk9PTCBqc19wcm9taXNlX3BlbmRpbmcoUmVzb2x2ZUZ1bmN0aW9ucyBjb25zdCopOwpCT09MIGpzX3Byb21pc2VfZG9uZShSZXNvbHZlRnVuY3Rpb25zIGNvbnN0Kik7CnZvaWQganNfcHJvbWlzZV9mcmVlKEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqKTsKSlNWYWx1ZSBqc19nbG9iYWxfZ2V0KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqKTsKQk9PTCBqc19pc19wcm9taXNlKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkpTVmFsdWUganNfZXJyb3JfbmV3KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqLCAuLi4pOwp1aW50OF90KiBqc190b3B0cnNpemUoSlNDb250ZXh0KiwgdW5zaWduZWQgaW50KiwgSlNWYWx1ZSk7CkJPT0wganNfZ2V0X3Byb3BlcnR5c3RyX2Jvb2woSlNDb250ZXh0KiwgSlNWYWx1ZSwgY29uc3QgY2hhciopOwpzdHJ1Y3QgbGlzdF9oZWFkKiBqc19tb2R1bGVfbGlzdChKU0NvbnRleHQqKTsKSlNNb2R1bGVEZWYqIGpzX21vZHVsZV9hdChKU0NvbnRleHQqLCBpbnQpOwpKU01vZHVsZURlZioganNfbW9kdWxlX2ZpbmQoSlNDb250ZXh0KiwgSlNBdG9tKTsKSlNNb2R1bGVEZWYqIGpzX21vZHVsZV9maW5kX3MoSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwoKc3RhdGljIGlubGluZSB2b2lkCmpzX2NsZWFyKEpTQ29udGV4dCogY3R4LCBjb25zdCB2b2lkKiogcHRyKSB7CiAgaWYoKnB0cikKICAgIGpzX2ZyZWUoY3R4LCAqcHRyKTsKICAqcHRyID0gMDsKfQoKc3RhdGljIGlubGluZSB2b2lkCmpzX2R1bXBfc3RyaW5nKGNvbnN0IGNoYXIqIHN0ciwgc2l6ZV90IGxlbiwgc2l6ZV90IG1heGxlbikgewogIHNpemVfdCBpLCBuID0gMjsKICBwdXRjaGFyKCdcJycpOwogIGZvcihpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICBpZihzdHJbaV0gPT0gJ1xuJykgewogICAgICBwdXRjaGFyKCdcXCcpOwogICAgICBwdXRjaGFyKCduJyk7CiAgICAgIG4gKz0gMjsKICAgIH0gZWxzZSB7CiAgICAgIHB1dGNoYXIoc3RyW2ldKTsKICAgICAgbisrOwogICAgfQogICAgaWYobWF4bGVuID4gMCAmJiBuICsgMSA+PSBtYXhsZW4pIHsKICAgICAgZnB1dHMoIicuLi4iLCBzdGRvdXQpOwogICAgICByZXR1cm47CiAgICB9CiAgfQogIHB1dGNoYXIoJ1wnJyk7Cn0KCnN0YXRpYyBpbmxpbmUgY2hhcioKanNfdG9fc3RyaW5nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBjb25zdCBjaGFyKiBzOwogIGNoYXIqIHJldCA9IDA7CgogIGlmKChzID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpKSkgewogICAgcmV0ID0ganNfc3RyZHVwKGN0eCwgcyk7CiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHMpOwogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgaW5saW5lIGNoYXIqCmpzX3JlcGxhY2Vfc3RyaW5nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGNoYXIqKiBzcHRyKSB7CiAgY29uc3QgY2hhciogczsKCiAgaWYoKnNwdHIpCiAgICBqc19mcmVlKGN0eCwgKnNwdHIpOwoKICBpZigocyA9IEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKSkpIHsKICAgICpzcHRyID0ganNfc3RyZHVwKGN0eCwgcyk7CiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHMpOwogIH0KICByZXR1cm4gKnNwdHI7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTApqc19pc19udWxsaXNoKEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIHJldHVybiBKU19Jc051bGwodmFsdWUpIHx8IEpTX0lzVW5kZWZpbmVkKHZhbHVlKTsKfQoKc3RhdGljIGlubGluZSB2b2lkCmpzX2J1ZmZlcl9mcmVlX2RlZmF1bHQoSlNSdW50aW1lKiBydCwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpIHsKICBKU0J1ZmZlciogYnVmID0gb3BhcXVlOwoKICBpZihKU19Jc1N0cmluZyhidWYtPnZhbHVlKSkKICAgIEpTX0ZyZWVWYWx1ZVJUKHJ0LCBidWYtPnZhbHVlKTsKICBlbHNlIGlmKCFKU19Jc1VuZGVmaW5lZChidWYtPnZhbHVlKSkKICAgIEpTX0ZyZWVWYWx1ZVJUKHJ0LCBidWYtPnZhbHVlKTsKfQoKc3RhdGljIGlubGluZSBjb25zdCB1aW50OF90Kgpqc19idWZmZXJfYmVnaW4oY29uc3QgSlNCdWZmZXIqIGluKSB7CiAgcmV0dXJuIGluLT5kYXRhOwp9CgpzdGF0aWMgaW5saW5lIGNvbnN0IHVpbnQ4X3QqCmpzX2J1ZmZlcl9lbmQoY29uc3QgSlNCdWZmZXIqIGluKSB7CiAgcmV0dXJuIGluLT5kYXRhICsgaW4tPnNpemU7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfSlNfVVRJTFNfSCAqLwoAAAAAAAAAAN8RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAcAAAAAAACwBwAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"paste",
					null,
					"AQAAAJwHAAAAAAAA2gcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAcAAAAAAACcBwAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAdEgAAI2lmbmRlZiBNSU5ORVRfSlNVVElMU19ICiNkZWZpbmUgTUlOTkVUX0pTVVRJTFNfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSA8bGlzdC5oPgoKdHlwZWRlZiBzdHJ1Y3QgSlNUaHJlYWRTdGF0ZSB7CiAgc3RydWN0IGxpc3RfaGVhZCBvc19yd19oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3NpZ25hbF9oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3RpbWVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIHBvcnRfbGlzdDsKICBpbnQgZXZhbF9zY3JpcHRfcmVjdXJzZTsKICB2b2lkICpyZWN2X3BpcGUsICpzZW5kX3BpcGU7Cn0gSlNUaHJlYWRTdGF0ZTsKCnR5cGVkZWYgc3RydWN0IGlucHV0X2J1ZmZlciB7CiAgdWludDhfdCogZGF0YTsKICBzaXplX3Qgc2l6ZTsKICB2b2lkICgqZnJlZSkoSlNSdW50aW1lKiwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpOwogIEpTVmFsdWUgdmFsdWU7Cn0gSlNCdWZmZXI7Cgp0eXBlZGVmIHVuaW9uIHJlc29sdmVfZnVuY3Rpb25zIHsKICBKU1ZhbHVlIGFycmF5WzJdOwogIHN0cnVjdCB7CiAgICBKU1ZhbHVlIHJlc29sdmUsIHJlamVjdDsKICB9Owp9IFJlc29sdmVGdW5jdGlvbnM7CgpKU1ZhbHVlIHZlY3RvcjJhcnJheShKU0NvbnRleHQqLCBpbnQsIEpTVmFsdWVDb25zdFtdKTsKdm9pZCBqc19jb25zb2xlX2xvZyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QqLCBKU1ZhbHVlQ29uc3QqKTsKSlNWYWx1ZSBqc19mdW5jdGlvbl9ib3VuZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljLCBKU1ZhbHVlQ29uc3QqIGZ1bmNfZGF0YSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZF8xKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0KTsKSlNWYWx1ZSBqc19pdGVyYXRvcl9uZXh0KEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0KiwgQk9PTCogZG9uZV9wLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CmludCBqc19jb3B5X3Byb3BlcnRpZXMoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBKU1ZhbHVlQ29uc3QsIGludCBmbGFncyk7CnZvaWQganNfYnVmZmVyX2Zyb20oSlNDb250ZXh0KiwgSlNCdWZmZXIqLCBKU1ZhbHVlKTsKSlNCdWZmZXIganNfYnVmZmVyX25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlKTsKdm9pZCBqc19idWZmZXJfdG8oSlNCdWZmZXIsIHZvaWQqKiwgc2l6ZV90Kik7CnZvaWQganNfYnVmZmVyX3RvMyhKU0J1ZmZlciwgY29uc3QgY2hhcioqLCB2b2lkKiosIHVuc2lnbmVkKiBwbGVuKTsKQk9PTCBqc19idWZmZXJfdmFsaWQoY29uc3QgSlNCdWZmZXIqKTsKSlNCdWZmZXIganNfYnVmZmVyX2Nsb25lKGNvbnN0IEpTQnVmZmVyKiwgSlNDb250ZXh0Kik7CnZvaWQganNfYnVmZmVyX2R1bXAoY29uc3QgSlNCdWZmZXIqLCBEeW5CdWYqKTsKdm9pZCBqc19idWZmZXJfZnJlZShKU0J1ZmZlciosIEpTQ29udGV4dCopOwpCT09MIGpzX2lzX2l0ZXJhYmxlKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkJPT0wganNfaXNfaXRlcmF0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKSlNBdG9tIGpzX3N5bWJvbF9zdGF0aWNfYXRvbShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfc3ltYm9sX3N0YXRpY192YWx1ZShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfc3ltYm9sX2N0b3IoSlNDb250ZXh0Kik7CkpTVmFsdWUganNfZ2xvYmFsX2dldChKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfZ2xvYmFsX29zKEpTQ29udGV4dCopOwpKU1ZhbHVlIGpzX29zX2dldChKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUgICAgICAgICAgIGpzX29zX3RpbWVyKEpTQ29udGV4dCosIEpTVmFsdWUsIHVpbnQzMl90KTsKY2hhcioganNfdG9zdHJpbmdsZW4oSlNDb250ZXh0Kiwgc2l6ZV90KiwgSlNWYWx1ZUNvbnN0KTsKY2hhcioganNfdG9zdHJpbmcoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKSlNWYWx1ZSBqc19pbnZva2UoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBjb25zdCBjaGFyKiwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIGpzX3Byb21pc2VfY3JlYXRlKEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqKTsKSlNWYWx1ZSBqc19wcm9taXNlX3Jlc29sdmUoSlNDb250ZXh0KiwgUmVzb2x2ZUZ1bmN0aW9ucyosIEpTVmFsdWVDb25zdCk7CkpTVmFsdWUganNfcHJvbWlzZV9yZWplY3QoSlNDb250ZXh0KiwgUmVzb2x2ZUZ1bmN0aW9ucyosIEpTVmFsdWVDb25zdCk7CnZvaWQganNfcHJvbWlzZV96ZXJvKFJlc29sdmVGdW5jdGlvbnMqKTsKQk9PTCBqc19wcm9taXNlX3BlbmRpbmcoUmVzb2x2ZUZ1bmN0aW9ucyBjb25zdCopOwpCT09MIGpzX3Byb21pc2VfZG9uZShSZXNvbHZlRnVuY3Rpb25zIGNvbnN0Kik7CnZvaWQganNfcHJvbWlzZV9mcmVlKEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqKTsKSlNWYWx1ZSBqc19nbG9iYWxfZ2V0KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqKTsKQk9PTCBqc19pc19wcm9taXNlKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkpTVmFsdWUganNfZXJyb3JfbmV3KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqLCAuLi4pOwp1aW50OF90KiBqc190b3B0cnNpemUoSlNDb250ZXh0KiwgdW5zaWduZWQgaW50KiwgSlNWYWx1ZSk7CkJPT0wganNfZ2V0X3Byb3BlcnR5c3RyX2Jvb2woSlNDb250ZXh0KiwgSlNWYWx1ZSwgY29uc3QgY2hhciopOwpzdHJ1Y3QgbGlzdF9oZWFkKiBqc19tb2R1bGVfbGlzdChKU0NvbnRleHQqKTsKSlNNb2R1bGVEZWYqIGpzX21vZHVsZV9hdChKU0NvbnRleHQqLCBpbnQpOwpKU01vZHVsZURlZioganNfbW9kdWxlX2ZpbmQoSlNDb250ZXh0KiwgSlNBdG9tKTsKSlNNb2R1bGVEZWYqIGpzX21vZHVsZV9maW5kX3MoSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwoKc3RhdGljIGlubGluZSB2b2lkCmpzX2NsZWFyKEpTQ29udGV4dCogY3R4LCBjb25zdCB2b2lkKiogcHRyKSB7CiAgaWYoKnB0cikKICAgIGpzX2ZyZWUoY3R4LCAqcHRyKTsKICAqcHRyID0gMDsKfQoKc3RhdGljIGlubGluZSB2b2lkCmpzX2R1bXBfc3RyaW5nKGNvbnN0IGNoYXIqIHN0ciwgc2l6ZV90IGxlbiwgc2l6ZV90IG1heGxlbikgewogIHNpemVfdCBpLCBuID0gMjsKICBwdXRjaGFyKCdcJycpOwogIGZvcihpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICBpZihzdHJbaV0gPT0gJ1xuJykgewogICAgICBwdXRjaGFyKCdcXCcpOwogICAgICBwdXRjaGFyKCduJyk7CiAgICAgIG4gKz0gMjsKICAgIH0gZWxzZSB7CiAgICAgIHB1dGNoYXIoc3RyW2ldKTsKICAgICAgbisrOwogICAgfQogICAgaWYobWF4bGVuID4gMCAmJiBuICsgMSA+PSBtYXhsZW4pIHsKICAgICAgZnB1dHMoIicuLi4iLCBzdGRvdXQpOwogICAgICByZXR1cm47CiAgICB9CiAgfQogIHB1dGNoYXIoJ1wnJyk7Cn0KCnN0YXRpYyBpbmxpbmUgY2hhcioKanNfdG9fc3RyaW5nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBjb25zdCBjaGFyKiBzOwogIGNoYXIqIHJldCA9IDA7CgogIGlmKChzID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpKSkgewogICAgcmV0ID0ganNfc3RyZHVwKGN0eCwgcyk7CiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHMpOwogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgaW5saW5lIGNoYXIqCmpzX3JlcGxhY2Vfc3RyaW5nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGNoYXIqKiBzcHRyKSB7CiAgY29uc3QgY2hhciogczsKCiAgaWYoKnNwdHIpCiAgICBqc19mcmVlKGN0eCwgKnNwdHIpOwoKICBpZigocyA9IEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKSkpIHsKICAgICpzcHRyID0ganNfc3RyZHVwKGN0eCwgcyk7CiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHMpOwogIH0KICByZXR1cm4gKnNwdHI7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTApqc19pc19udWxsaXNoKEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIHJldHVybiBKU19Jc051bGwodmFsdWUpIHx8IEpTX0lzVW5kZWZpbmVkKHZhbHVlKTsKfQoKc3RhdGljIGlubGluZSB2b2lkCmpzX2J1ZmZlcl9mcmVlX2RlZmF1bHQoSlNSdW50aW1lKiBydCwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpIHsKICBKU0J1ZmZlciogYnVmID0gb3BhcXVlOwoKICBpZihKU19Jc1N0cmluZyhidWYtPnZhbHVlKSkKICAgIEpTX0ZyZWVWYWx1ZVJUKHJ0LCBidWYtPnZhbHVlKTsKICBlbHNlIGlmKCFKU19Jc1VuZGVmaW5lZChidWYtPnZhbHVlKSkKICAgIEpTX0ZyZWVWYWx1ZVJUKHJ0LCBidWYtPnZhbHVlKTsKfQoKc3RhdGljIGlubGluZSBjb25zdCB1aW50OF90Kgpqc19idWZmZXJfYmVnaW4oY29uc3QgSlNCdWZmZXIqIGluKSB7CiAgcmV0dXJuIGluLT5kYXRhOwp9CgpzdGF0aWMgaW5saW5lIGNvbnN0IHVpbnQ4X3QqCmpzX2J1ZmZlcl9lbmQoY29uc3QgSlNCdWZmZXIqIGluKSB7CiAgcmV0dXJuIGluLT5kYXRhICsgaW4tPnNpemU7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfSlNfVVRJTFNfSCAqLwoAAAAAAAAAABMSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgcAAAAAAAC5BwAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "Const"
					},
					"BQAAAMMHAAAAAAAAxAcAAAAAAAAAAAAAxAcAAAAAAADFBwAAAAAAAAAAAADFBwAAAAAAAMYHAAAAAAAAAAAAAMYHAAAAAAAAxwcAAAAAAAAAAAAAxwcAAAAAAADIBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwcAAAAAAADDBwAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"paste",
					null,
					"AQAAAP4EAAAAAAAAAwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gQAAAAAAAD+BAAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"paste",
					null,
					"AQAAANEEAAAAAAAA1gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QQAAAAAAADRBAAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"paste",
					null,
					"AQAAACULAAAAAAAAKgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQsAAAAAAAAlCwAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"paste",
					null,
					"AQAAAPIKAAAAAAAA9woAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8goAAAAAAADyCgAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"paste",
					null,
					"AQAAAGgCAAAAAAAAxwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAIAAAAAAABoAgAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"paste",
					null,
					"AgAAAAUIAAAAAAAAHwkAAAAAAAAAAAAAHwkAAAAAAAAfCQAAAAAAADkAAABKU1ZhbHVlIGpzX29zX3RpbWVyKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgdWludDMyX3QpOwo",
					"AQAAAAAAAAABAAAABQgAAAAAAAA+CAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"paste",
					null,
					"AgAAAKQIAAAAAAAAsAgAAAAAAAAAAAAAsAgAAAAAAACwCAAAAAAAAAcAAABKU1ZhbHVl",
					"AQAAAAAAAAABAAAApAgAAAAAAACrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"paste",
					null,
					"AgAAABAJAAAAAAAAHAkAAAAAAAAAAAAAHAkAAAAAAAAcCQAAAAAAAAcAAABKU1ZhbHVl",
					"AQAAAAAAAAABAAAAEAkAAAAAAAAXCQAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB2EwAAI2lmbmRlZiBNSU5ORVRfSlNVVElMU19ICiNkZWZpbmUgTUlOTkVUX0pTVVRJTFNfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSA8bGlzdC5oPgoKdHlwZWRlZiBzdHJ1Y3QgSlNUaHJlYWRTdGF0ZSB7CiAgc3RydWN0IGxpc3RfaGVhZCBvc19yd19oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3NpZ25hbF9oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3RpbWVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIHBvcnRfbGlzdDsKICBpbnQgZXZhbF9zY3JpcHRfcmVjdXJzZTsKICB2b2lkICpyZWN2X3BpcGUsICpzZW5kX3BpcGU7Cn0gSlNUaHJlYWRTdGF0ZTsKCnR5cGVkZWYgc3RydWN0IGlucHV0X2J1ZmZlciB7CiAgdWludDhfdCogZGF0YTsKICBzaXplX3Qgc2l6ZTsKICB2b2lkICgqZnJlZSkoSlNSdW50aW1lKiwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpOwogIEpTVmFsdWUgdmFsdWU7Cn0gSlNCdWZmZXI7Cgp0eXBlZGVmIHVuaW9uIHJlc29sdmVfZnVuY3Rpb25zIHsKICBKU1ZhbHVlIGFycmF5WzJdOwogIHN0cnVjdCB7CiAgICBKU1ZhbHVlIHJlc29sdmUsIHJlamVjdDsKICB9Owp9IFJlc29sdmVGdW5jdGlvbnM7CgpzdHJ1Y3QgVGltZXJDbG9zdXJlIHsKICB1aW50MzJfdCBpZCxpbnRlcnZhbDsKICBKU0NvbnRleHQqY3R4OwogIEpTVmFsdWVDb25zdCBmbixjYWxsYmFjazsKfTsKCkpTVmFsdWUgdmVjdG9yMmFycmF5KEpTQ29udGV4dCosIGludCwgSlNWYWx1ZUNvbnN0W10pOwp2b2lkIGpzX2NvbnNvbGVfbG9nKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCosIEpTVmFsdWVDb25zdCopOwpKU1ZhbHVlIGpzX2Z1bmN0aW9uX2JvdW5kKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMsIEpTVmFsdWVDb25zdCogZnVuY19kYXRhKTsKSlNWYWx1ZSBqc19mdW5jdGlvbl9iaW5kKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKSlNWYWx1ZSBqc19mdW5jdGlvbl9iaW5kXzEoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBKU1ZhbHVlQ29uc3QpOwpKU1ZhbHVlIGpzX2l0ZXJhdG9yX25leHQoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBKU1ZhbHVlQ29uc3QqLCBCT09MKiBkb25lX3AsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKaW50IGpzX2NvcHlfcHJvcGVydGllcyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIEpTVmFsdWVDb25zdCwgaW50IGZsYWdzKTsKdm9pZCBqc19idWZmZXJfZnJvbShKU0NvbnRleHQqLCBKU0J1ZmZlciosIEpTVmFsdWVDb25zdCk7CkpTQnVmZmVyIGpzX2J1ZmZlcl9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKdm9pZCBqc19idWZmZXJfdG8oSlNCdWZmZXIsIHZvaWQqKiwgc2l6ZV90Kik7CnZvaWQganNfYnVmZmVyX3RvMyhKU0J1ZmZlciwgY29uc3QgY2hhcioqLCB2b2lkKiosIHVuc2lnbmVkKiBwbGVuKTsKQk9PTCBqc19idWZmZXJfdmFsaWQoY29uc3QgSlNCdWZmZXIqKTsKSlNCdWZmZXIganNfYnVmZmVyX2Nsb25lKGNvbnN0IEpTQnVmZmVyKiwgSlNDb250ZXh0Kik7CnZvaWQganNfYnVmZmVyX2R1bXAoY29uc3QgSlNCdWZmZXIqLCBEeW5CdWYqKTsKdm9pZCBqc19idWZmZXJfZnJlZShKU0J1ZmZlciosIEpTQ29udGV4dCopOwpCT09MIGpzX2lzX2l0ZXJhYmxlKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkJPT0wganNfaXNfaXRlcmF0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKSlNBdG9tIGpzX3N5bWJvbF9zdGF0aWNfYXRvbShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfc3ltYm9sX3N0YXRpY192YWx1ZShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfc3ltYm9sX2N0b3IoSlNDb250ZXh0Kik7CkpTVmFsdWUganNfZ2xvYmFsX2dldChKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfZ2xvYmFsX29zKEpTQ29udGV4dCopOwpKU1ZhbHVlIGpzX29zX2dldChKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUgICAgICAgICAgICAgIGpzX29zX3RpbWVyKEpTQ29udGV4dCosIEpTVmFsdWUsIHVpbnQzMl90KTsKdm9pZCAgICAgICAgICAgICAgICAganNfdGltZXJfZnJlZSh2b2lkKik7CkpTVmFsdWUgICAgICAgICAgICAgIGpzX3RpbWVyX2NhbGxiYWNrKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlKiBhcmd2LCBpbnQgbWFnaWMsIHZvaWQqIG9wYXF1ZSk7CnN0cnVjdCBUaW1lckNsb3N1cmUqIGpzX29zX2ludGVydmFsKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgdWludDMyX3QpOwpjaGFyKiBqc190b3N0cmluZ2xlbihKU0NvbnRleHQqLCBzaXplX3QqLCBKU1ZhbHVlQ29uc3QpOwpjaGFyKiBqc190b3N0cmluZyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwpKU1ZhbHVlIGpzX2ludm9rZShKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGNvbnN0IGNoYXIqLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CkpTVmFsdWUganNfcHJvbWlzZV9jcmVhdGUoSlNDb250ZXh0KiwgUmVzb2x2ZUZ1bmN0aW9ucyopOwpKU1ZhbHVlIGpzX3Byb21pc2VfcmVzb2x2ZShKU0NvbnRleHQqLCBSZXNvbHZlRnVuY3Rpb25zKiwgSlNWYWx1ZUNvbnN0KTsKSlNWYWx1ZSBqc19wcm9taXNlX3JlamVjdChKU0NvbnRleHQqLCBSZXNvbHZlRnVuY3Rpb25zKiwgSlNWYWx1ZUNvbnN0KTsKdm9pZCBqc19wcm9taXNlX3plcm8oUmVzb2x2ZUZ1bmN0aW9ucyopOwpCT09MIGpzX3Byb21pc2VfcGVuZGluZyhSZXNvbHZlRnVuY3Rpb25zIGNvbnN0Kik7CkJPT0wganNfcHJvbWlzZV9kb25lKFJlc29sdmVGdW5jdGlvbnMgY29uc3QqKTsKdm9pZCBqc19wcm9taXNlX2ZyZWUoSlNDb250ZXh0KiwgUmVzb2x2ZUZ1bmN0aW9ucyopOwpKU1ZhbHVlIGpzX2dsb2JhbF9nZXQoSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwpCT09MIGpzX2lzX3Byb21pc2UoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKSlNWYWx1ZSBqc19lcnJvcl9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIC4uLik7CnVpbnQ4X3QqIGpzX3RvcHRyc2l6ZShKU0NvbnRleHQqLCB1bnNpZ25lZCBpbnQqLCBKU1ZhbHVlQ29uc3QpOwpCT09MIGpzX2dldF9wcm9wZXJ0eXN0cl9ib29sKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgY29uc3QgY2hhciopOwpzdHJ1Y3QgbGlzdF9oZWFkKiBqc19tb2R1bGVfbGlzdChKU0NvbnRleHQqKTsKSlNNb2R1bGVEZWYqIGpzX21vZHVsZV9hdChKU0NvbnRleHQqLCBpbnQpOwpKU01vZHVsZURlZioganNfbW9kdWxlX2ZpbmQoSlNDb250ZXh0KiwgSlNBdG9tKTsKSlNNb2R1bGVEZWYqIGpzX21vZHVsZV9maW5kX3MoSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwoKc3RhdGljIGlubGluZSB2b2lkCmpzX2NsZWFyKEpTQ29udGV4dCogY3R4LCBjb25zdCB2b2lkKiogcHRyKSB7CiAgaWYoKnB0cikKICAgIGpzX2ZyZWUoY3R4LCAqcHRyKTsKICAqcHRyID0gMDsKfQoKc3RhdGljIGlubGluZSB2b2lkCmpzX2R1bXBfc3RyaW5nKGNvbnN0IGNoYXIqIHN0ciwgc2l6ZV90IGxlbiwgc2l6ZV90IG1heGxlbikgewogIHNpemVfdCBpLCBuID0gMjsKICBwdXRjaGFyKCdcJycpOwogIGZvcihpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICBpZihzdHJbaV0gPT0gJ1xuJykgewogICAgICBwdXRjaGFyKCdcXCcpOwogICAgICBwdXRjaGFyKCduJyk7CiAgICAgIG4gKz0gMjsKICAgIH0gZWxzZSB7CiAgICAgIHB1dGNoYXIoc3RyW2ldKTsKICAgICAgbisrOwogICAgfQogICAgaWYobWF4bGVuID4gMCAmJiBuICsgMSA+PSBtYXhsZW4pIHsKICAgICAgZnB1dHMoIicuLi4iLCBzdGRvdXQpOwogICAgICByZXR1cm47CiAgICB9CiAgfQogIHB1dGNoYXIoJ1wnJyk7Cn0KCnN0YXRpYyBpbmxpbmUgY2hhcioKanNfdG9fc3RyaW5nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBjb25zdCBjaGFyKiBzOwogIGNoYXIqIHJldCA9IDA7CgogIGlmKChzID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpKSkgewogICAgcmV0ID0ganNfc3RyZHVwKGN0eCwgcyk7CiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHMpOwogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgaW5saW5lIGNoYXIqCmpzX3JlcGxhY2Vfc3RyaW5nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGNoYXIqKiBzcHRyKSB7CiAgY29uc3QgY2hhciogczsKCiAgaWYoKnNwdHIpCiAgICBqc19mcmVlKGN0eCwgKnNwdHIpOwoKICBpZigocyA9IEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKSkpIHsKICAgICpzcHRyID0ganNfc3RyZHVwKGN0eCwgcyk7CiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHMpOwogIH0KICByZXR1cm4gKnNwdHI7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTApqc19pc19udWxsaXNoKEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIHJldHVybiBKU19Jc051bGwodmFsdWUpIHx8IEpTX0lzVW5kZWZpbmVkKHZhbHVlKTsKfQoKc3RhdGljIGlubGluZSB2b2lkCmpzX2J1ZmZlcl9mcmVlX2RlZmF1bHQoSlNSdW50aW1lKiBydCwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpIHsKICBKU0J1ZmZlciogYnVmID0gb3BhcXVlOwoKICBpZihKU19Jc1N0cmluZyhidWYtPnZhbHVlKSkKICAgIEpTX0ZyZWVWYWx1ZVJUKHJ0LCBidWYtPnZhbHVlKTsKICBlbHNlIGlmKCFKU19Jc1VuZGVmaW5lZChidWYtPnZhbHVlKSkKICAgIEpTX0ZyZWVWYWx1ZVJUKHJ0LCBidWYtPnZhbHVlKTsKfQoKc3RhdGljIGlubGluZSBjb25zdCB1aW50OF90Kgpqc19idWZmZXJfYmVnaW4oY29uc3QgSlNCdWZmZXIqIGluKSB7CiAgcmV0dXJuIGluLT5kYXRhOwp9CgpzdGF0aWMgaW5saW5lIGNvbnN0IHVpbnQ4X3QqCmpzX2J1ZmZlcl9lbmQoY29uc3QgSlNCdWZmZXIqIGluKSB7CiAgcmV0dXJuIGluLT5kYXRhICsgaW4tPnNpemU7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfSlNfVVRJTFNfSCAqLwoAAAAAAAAAAE8TAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAkAAAAAAAAcCQAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPEwAAI2lmbmRlZiBNSU5ORVRfSlNVVElMU19ICiNkZWZpbmUgTUlOTkVUX0pTVVRJTFNfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSA8bGlzdC5oPgoKdHlwZWRlZiBzdHJ1Y3QgSlNUaHJlYWRTdGF0ZSB7CiAgc3RydWN0IGxpc3RfaGVhZCBvc19yd19oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3NpZ25hbF9oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3RpbWVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIHBvcnRfbGlzdDsKICBpbnQgZXZhbF9zY3JpcHRfcmVjdXJzZTsKICB2b2lkICpyZWN2X3BpcGUsICpzZW5kX3BpcGU7Cn0gSlNUaHJlYWRTdGF0ZTsKCnR5cGVkZWYgc3RydWN0IGlucHV0X2J1ZmZlciB7CiAgdWludDhfdCogZGF0YTsKICBzaXplX3Qgc2l6ZTsKICB2b2lkICgqZnJlZSkoSlNSdW50aW1lKiwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpOwogIEpTVmFsdWUgdmFsdWU7Cn0gSlNCdWZmZXI7Cgp0eXBlZGVmIHVuaW9uIHJlc29sdmVfZnVuY3Rpb25zIHsKICBKU1ZhbHVlIGFycmF5WzJdOwogIHN0cnVjdCB7CiAgICBKU1ZhbHVlIHJlc29sdmUsIHJlamVjdDsKICB9Owp9IFJlc29sdmVGdW5jdGlvbnM7CgpzdHJ1Y3QgVGltZXJDbG9zdXJlIHsKICB1aW50MzJfdCBpZCwgaW50ZXJ2YWw7CiAgSlNDb250ZXh0KiBjdHg7CiAgSlNWYWx1ZUNvbnN0IGZuLCBjYWxsYmFjazsKfTsKCkpTVmFsdWUgdmVjdG9yMmFycmF5KEpTQ29udGV4dCosIGludCwgSlNWYWx1ZUNvbnN0W10pOwp2b2lkIGpzX2NvbnNvbGVfbG9nKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCosIEpTVmFsdWVDb25zdCopOwpKU1ZhbHVlIGpzX2Z1bmN0aW9uX2JvdW5kKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMsIEpTVmFsdWVDb25zdCogZnVuY19kYXRhKTsKSlNWYWx1ZSBqc19mdW5jdGlvbl9iaW5kKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKSlNWYWx1ZSBqc19mdW5jdGlvbl9iaW5kXzEoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBKU1ZhbHVlQ29uc3QpOwpKU1ZhbHVlIGpzX2l0ZXJhdG9yX25leHQoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBKU1ZhbHVlQ29uc3QqLCBCT09MKiBkb25lX3AsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKaW50IGpzX2NvcHlfcHJvcGVydGllcyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIEpTVmFsdWVDb25zdCwgaW50IGZsYWdzKTsKdm9pZCBqc19idWZmZXJfZnJvbShKU0NvbnRleHQqLCBKU0J1ZmZlciosIEpTVmFsdWVDb25zdCk7CkpTQnVmZmVyIGpzX2J1ZmZlcl9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKdm9pZCBqc19idWZmZXJfdG8oSlNCdWZmZXIsIHZvaWQqKiwgc2l6ZV90Kik7CnZvaWQganNfYnVmZmVyX3RvMyhKU0J1ZmZlciwgY29uc3QgY2hhcioqLCB2b2lkKiosIHVuc2lnbmVkKiBwbGVuKTsKQk9PTCBqc19idWZmZXJfdmFsaWQoY29uc3QgSlNCdWZmZXIqKTsKSlNCdWZmZXIganNfYnVmZmVyX2Nsb25lKGNvbnN0IEpTQnVmZmVyKiwgSlNDb250ZXh0Kik7CnZvaWQganNfYnVmZmVyX2R1bXAoY29uc3QgSlNCdWZmZXIqLCBEeW5CdWYqKTsKdm9pZCBqc19idWZmZXJfZnJlZShKU0J1ZmZlciosIEpTQ29udGV4dCopOwpCT09MIGpzX2lzX2l0ZXJhYmxlKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkJPT0wganNfaXNfaXRlcmF0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKSlNBdG9tIGpzX3N5bWJvbF9zdGF0aWNfYXRvbShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfc3ltYm9sX3N0YXRpY192YWx1ZShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfc3ltYm9sX2N0b3IoSlNDb250ZXh0Kik7CkpTVmFsdWUganNfZ2xvYmFsX2dldChKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfZ2xvYmFsX29zKEpTQ29udGV4dCopOwpKU1ZhbHVlIGpzX29zX2dldChKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUganNfb3NfdGltZXIoSlNDb250ZXh0KiwgSlNWYWx1ZSwgdWludDMyX3QpOwp2b2lkIGpzX3RpbWVyX2ZyZWUodm9pZCopOwpKU1ZhbHVlIGpzX3RpbWVyX2NhbGxiYWNrKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlKiBhcmd2LCBpbnQgbWFnaWMsIHZvaWQqIG9wYXF1ZSk7CnN0cnVjdCBUaW1lckNsb3N1cmUqIGpzX29zX2ludGVydmFsKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgdWludDMyX3QpOwpjaGFyKiBqc190b3N0cmluZ2xlbihKU0NvbnRleHQqLCBzaXplX3QqLCBKU1ZhbHVlQ29uc3QpOwpjaGFyKiBqc190b3N0cmluZyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwpKU1ZhbHVlIGpzX2ludm9rZShKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGNvbnN0IGNoYXIqLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CkpTVmFsdWUganNfcHJvbWlzZV9jcmVhdGUoSlNDb250ZXh0KiwgUmVzb2x2ZUZ1bmN0aW9ucyopOwpKU1ZhbHVlIGpzX3Byb21pc2VfcmVzb2x2ZShKU0NvbnRleHQqLCBSZXNvbHZlRnVuY3Rpb25zKiwgSlNWYWx1ZUNvbnN0KTsKSlNWYWx1ZSBqc19wcm9taXNlX3JlamVjdChKU0NvbnRleHQqLCBSZXNvbHZlRnVuY3Rpb25zKiwgSlNWYWx1ZUNvbnN0KTsKdm9pZCBqc19wcm9taXNlX3plcm8oUmVzb2x2ZUZ1bmN0aW9ucyopOwpCT09MIGpzX3Byb21pc2VfcGVuZGluZyhSZXNvbHZlRnVuY3Rpb25zIGNvbnN0Kik7CkJPT0wganNfcHJvbWlzZV9kb25lKFJlc29sdmVGdW5jdGlvbnMgY29uc3QqKTsKdm9pZCBqc19wcm9taXNlX2ZyZWUoSlNDb250ZXh0KiwgUmVzb2x2ZUZ1bmN0aW9ucyopOwpKU1ZhbHVlIGpzX2dsb2JhbF9nZXQoSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwpCT09MIGpzX2lzX3Byb21pc2UoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKSlNWYWx1ZSBqc19lcnJvcl9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIC4uLik7CnVpbnQ4X3QqIGpzX3RvcHRyc2l6ZShKU0NvbnRleHQqLCB1bnNpZ25lZCBpbnQqLCBKU1ZhbHVlQ29uc3QpOwpCT09MIGpzX2dldF9wcm9wZXJ0eXN0cl9ib29sKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgY29uc3QgY2hhciopOwpzdHJ1Y3QgbGlzdF9oZWFkKiBqc19tb2R1bGVfbGlzdChKU0NvbnRleHQqKTsKSlNNb2R1bGVEZWYqIGpzX21vZHVsZV9hdChKU0NvbnRleHQqLCBpbnQpOwpKU01vZHVsZURlZioganNfbW9kdWxlX2ZpbmQoSlNDb250ZXh0KiwgSlNBdG9tKTsKSlNNb2R1bGVEZWYqIGpzX21vZHVsZV9maW5kX3MoSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwoKc3RhdGljIGlubGluZSB2b2lkCmpzX2NsZWFyKEpTQ29udGV4dCogY3R4LCBjb25zdCB2b2lkKiogcHRyKSB7CiAgaWYoKnB0cikKICAgIGpzX2ZyZWUoY3R4LCAqcHRyKTsKICAqcHRyID0gMDsKfQoKc3RhdGljIGlubGluZSB2b2lkCmpzX2R1bXBfc3RyaW5nKGNvbnN0IGNoYXIqIHN0ciwgc2l6ZV90IGxlbiwgc2l6ZV90IG1heGxlbikgewogIHNpemVfdCBpLCBuID0gMjsKICBwdXRjaGFyKCdcJycpOwogIGZvcihpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICBpZihzdHJbaV0gPT0gJ1xuJykgewogICAgICBwdXRjaGFyKCdcXCcpOwogICAgICBwdXRjaGFyKCduJyk7CiAgICAgIG4gKz0gMjsKICAgIH0gZWxzZSB7CiAgICAgIHB1dGNoYXIoc3RyW2ldKTsKICAgICAgbisrOwogICAgfQogICAgaWYobWF4bGVuID4gMCAmJiBuICsgMSA+PSBtYXhsZW4pIHsKICAgICAgZnB1dHMoIicuLi4iLCBzdGRvdXQpOwogICAgICByZXR1cm47CiAgICB9CiAgfQogIHB1dGNoYXIoJ1wnJyk7Cn0KCnN0YXRpYyBpbmxpbmUgY2hhcioKanNfdG9fc3RyaW5nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBjb25zdCBjaGFyKiBzOwogIGNoYXIqIHJldCA9IDA7CgogIGlmKChzID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpKSkgewogICAgcmV0ID0ganNfc3RyZHVwKGN0eCwgcyk7CiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHMpOwogIH0KICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgaW5saW5lIGNoYXIqCmpzX3JlcGxhY2Vfc3RyaW5nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGNoYXIqKiBzcHRyKSB7CiAgY29uc3QgY2hhciogczsKCiAgaWYoKnNwdHIpCiAgICBqc19mcmVlKGN0eCwgKnNwdHIpOwoKICBpZigocyA9IEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKSkpIHsKICAgICpzcHRyID0ganNfc3RyZHVwKGN0eCwgcyk7CiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHMpOwogIH0KICByZXR1cm4gKnNwdHI7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTApqc19pc19udWxsaXNoKEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIHJldHVybiBKU19Jc051bGwodmFsdWUpIHx8IEpTX0lzVW5kZWZpbmVkKHZhbHVlKTsKfQoKc3RhdGljIGlubGluZSB2b2lkCmpzX2J1ZmZlcl9mcmVlX2RlZmF1bHQoSlNSdW50aW1lKiBydCwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpIHsKICBKU0J1ZmZlciogYnVmID0gb3BhcXVlOwoKICBpZihKU19Jc1N0cmluZyhidWYtPnZhbHVlKSkKICAgIEpTX0ZyZWVWYWx1ZVJUKHJ0LCBidWYtPnZhbHVlKTsKICBlbHNlIGlmKCFKU19Jc1VuZGVmaW5lZChidWYtPnZhbHVlKSkKICAgIEpTX0ZyZWVWYWx1ZVJUKHJ0LCBidWYtPnZhbHVlKTsKfQoKc3RhdGljIGlubGluZSBjb25zdCB1aW50OF90Kgpqc19idWZmZXJfYmVnaW4oY29uc3QgSlNCdWZmZXIqIGluKSB7CiAgcmV0dXJuIGluLT5kYXRhOwp9CgpzdGF0aWMgaW5saW5lIGNvbnN0IHVpbnQ4X3QqCmpzX2J1ZmZlcl9lbmQoY29uc3QgSlNCdWZmZXIqIGluKSB7CiAgcmV0dXJuIGluLT5kYXRhICsgaW4tPnNpemU7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfSlNfVVRJTFNfSCAqLwoAAAAAAAAAAFITAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwkAAAAAAABnCQAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					3,
					"right_delete",
					null,
					"AwAAAIoCAAAAAAAAigIAAAAAAAACAAAAaWSKAgAAAAAAAIoCAAAAAAAAAQAAACyKAgAAAAAAAIoCAAAAAAAAAQAAACA",
					"AQAAAAAAAAABAAAAigIAAAAAAACMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "id,"
					},
					"AwAAALUCAAAAAAAAtgIAAAAAAAAAAAAAtgIAAAAAAAC3AgAAAAAAAAAAAAC3AgAAAAAAALgCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQIAAAAAAAC1AgAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALgCAAAAAAAAuQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAIAAAAAAAC4AgAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"right_delete",
					null,
					"AQAAALkCAAAAAAAAuQIAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAuQIAAAAAAAC5AgAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"right_delete",
					null,
					"AQAAALkCAAAAAAAAuQIAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAuQIAAAAAAAC5AgAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "handler"
					},
					"BwAAALkCAAAAAAAAugIAAAAAAAAAAAAAugIAAAAAAAC7AgAAAAAAAAAAAAC7AgAAAAAAALwCAAAAAAAAAAAAALwCAAAAAAAAvQIAAAAAAAAAAAAAvQIAAAAAAAC+AgAAAAAAAAAAAAC+AgAAAAAAAL8CAAAAAAAAAAAAAL8CAAAAAAAAwAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQIAAAAAAAC5AgAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"paste",
					null,
					"AgAAANACAAAAAAAAZRAAAAAAAAAAAAAAZRAAAAAAAABlEAAAAAAAAFwKAABKU1ZhbHVlIHZlY3RvcjJhcnJheShKU0NvbnRleHQqLCBpbnQsIEpTVmFsdWVDb25zdFtdKTsKdm9pZCBqc19jb25zb2xlX2xvZyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QqLCBKU1ZhbHVlQ29uc3QqKTsKSlNWYWx1ZSBqc19mdW5jdGlvbl9ib3VuZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljLCBKU1ZhbHVlQ29uc3QqIGZ1bmNfZGF0YSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZF8xKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0KTsKSlNWYWx1ZSBqc19pdGVyYXRvcl9uZXh0KEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0KiwgQk9PTCogZG9uZV9wLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CmludCBqc19jb3B5X3Byb3BlcnRpZXMoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBKU1ZhbHVlQ29uc3QsIGludCBmbGFncyk7CnZvaWQganNfYnVmZmVyX2Zyb20oSlNDb250ZXh0KiwgSlNCdWZmZXIqLCBKU1ZhbHVlQ29uc3QpOwpKU0J1ZmZlciBqc19idWZmZXJfbmV3KEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CnZvaWQganNfYnVmZmVyX3RvKEpTQnVmZmVyLCB2b2lkKiosIHNpemVfdCopOwp2b2lkIGpzX2J1ZmZlcl90bzMoSlNCdWZmZXIsIGNvbnN0IGNoYXIqKiwgdm9pZCoqLCB1bnNpZ25lZCogcGxlbik7CkJPT0wganNfYnVmZmVyX3ZhbGlkKGNvbnN0IEpTQnVmZmVyKik7CkpTQnVmZmVyIGpzX2J1ZmZlcl9jbG9uZShjb25zdCBKU0J1ZmZlciosIEpTQ29udGV4dCopOwp2b2lkIGpzX2J1ZmZlcl9kdW1wKGNvbnN0IEpTQnVmZmVyKiwgRHluQnVmKik7CnZvaWQganNfYnVmZmVyX2ZyZWUoSlNCdWZmZXIqLCBKU0NvbnRleHQqKTsKQk9PTCBqc19pc19pdGVyYWJsZShKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwpCT09MIGpzX2lzX2l0ZXJhdG9yKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkpTQXRvbSBqc19zeW1ib2xfc3RhdGljX2F0b20oSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwpKU1ZhbHVlIGpzX3N5bWJvbF9zdGF0aWNfdmFsdWUoSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwpKU1ZhbHVlIGpzX3N5bWJvbF9jdG9yKEpTQ29udGV4dCopOwpKU1ZhbHVlIGpzX2dsb2JhbF9nZXQoSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwpKU1ZhbHVlIGpzX2dsb2JhbF9vcyhKU0NvbnRleHQqKTsKSlNWYWx1ZSBqc19vc19nZXQoSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwpKU1ZhbHVlIGpzX3RpbWVyX3N0YXJ0KEpTQ29udGV4dCosIEpTVmFsdWUsIHVpbnQzMl90KTsKdm9pZCBqc190aW1lcl9mcmVlKHZvaWQqKTsKSlNWYWx1ZSBqc190aW1lcl9jYWxsYmFjayhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZSogYXJndiwgaW50IG1hZ2ljLCB2b2lkKiBvcGFxdWUpOwpzdHJ1Y3QgVGltZXJDbG9zdXJlKiBqc19vc19pbnRlcnZhbChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIHVpbnQzMl90KTsKY2hhcioganNfdG9zdHJpbmdsZW4oSlNDb250ZXh0Kiwgc2l6ZV90KiwgSlNWYWx1ZUNvbnN0KTsKY2hhcioganNfdG9zdHJpbmcoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKSlNWYWx1ZSBqc19pbnZva2UoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBjb25zdCBjaGFyKiwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIGpzX3Byb21pc2VfY3JlYXRlKEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqKTsKSlNWYWx1ZSBqc19wcm9taXNlX3Jlc29sdmUoSlNDb250ZXh0KiwgUmVzb2x2ZUZ1bmN0aW9ucyosIEpTVmFsdWVDb25zdCk7CkpTVmFsdWUganNfcHJvbWlzZV9yZWplY3QoSlNDb250ZXh0KiwgUmVzb2x2ZUZ1bmN0aW9ucyosIEpTVmFsdWVDb25zdCk7CnZvaWQganNfcHJvbWlzZV96ZXJvKFJlc29sdmVGdW5jdGlvbnMqKTsKQk9PTCBqc19wcm9taXNlX3BlbmRpbmcoUmVzb2x2ZUZ1bmN0aW9ucyBjb25zdCopOwpCT09MIGpzX3Byb21pc2VfZG9uZShSZXNvbHZlRnVuY3Rpb25zIGNvbnN0Kik7CnZvaWQganNfcHJvbWlzZV9mcmVlKEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqKTsKSlNWYWx1ZSBqc19nbG9iYWxfZ2V0KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqKTsKQk9PTCBqc19pc19wcm9taXNlKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkpTVmFsdWUganNfZXJyb3JfbmV3KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqLCAuLi4pOwp1aW50OF90KiBqc190b3B0cnNpemUoSlNDb250ZXh0KiwgdW5zaWduZWQgaW50KiwgSlNWYWx1ZUNvbnN0KTsKQk9PTCBqc19nZXRfcHJvcGVydHlzdHJfYm9vbChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGNvbnN0IGNoYXIqKTsKc3RydWN0IGxpc3RfaGVhZCoganNfbW9kdWxlX2xpc3QoSlNDb250ZXh0Kik7CkpTTW9kdWxlRGVmKiBqc19tb2R1bGVfYXQoSlNDb250ZXh0KiwgaW50KTsKSlNNb2R1bGVEZWYqIGpzX21vZHVsZV9maW5kKEpTQ29udGV4dCosIEpTQXRvbSk7CkpTTW9kdWxlRGVmKiBqc19tb2R1bGVfZmluZF9zKEpTQ29udGV4dCosIGNvbnN0IGNoYXIqKTs",
					"AQAAAAAAAAABAAAA0AIAAAAAAAAsDQAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACQFgAAI2lmbmRlZiBNSU5ORVRfSlNVVElMU19ICiNkZWZpbmUgTUlOTkVUX0pTVVRJTFNfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSA8bGlzdC5oPgoKdHlwZWRlZiBzdHJ1Y3QgSlNUaHJlYWRTdGF0ZSB7CiAgc3RydWN0IGxpc3RfaGVhZCBvc19yd19oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3NpZ25hbF9oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3RpbWVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIHBvcnRfbGlzdDsKICBpbnQgZXZhbF9zY3JpcHRfcmVjdXJzZTsKICB2b2lkICpyZWN2X3BpcGUsICpzZW5kX3BpcGU7Cn0gSlNUaHJlYWRTdGF0ZTsKCnR5cGVkZWYgc3RydWN0IGlucHV0X2J1ZmZlciB7CiAgdWludDhfdCogZGF0YTsKICBzaXplX3Qgc2l6ZTsKICB2b2lkICgqZnJlZSkoSlNSdW50aW1lKiwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpOwogIEpTVmFsdWUgdmFsdWU7Cn0gSlNCdWZmZXI7Cgp0eXBlZGVmIHVuaW9uIHJlc29sdmVfZnVuY3Rpb25zIHsKICBKU1ZhbHVlIGFycmF5WzJdOwogIHN0cnVjdCB7CiAgICBKU1ZhbHVlIHJlc29sdmUsIHJlamVjdDsKICB9Owp9IFJlc29sdmVGdW5jdGlvbnM7CgpzdHJ1Y3QgVGltZXJDbG9zdXJlIHsKICB1aW50MzJfdCBpbnRlcnZhbDsKICBKU0NvbnRleHQqIGN0eDsKICBKU1ZhbHVlQ29uc3QgaWQsIGhhbmRsZXIsIGNhbGxiYWNrOwp9OwoKSlNWYWx1ZSAgICAgICAgICAgICAgdmVjdG9yMmFycmF5KEpTQ29udGV4dCosIGludCwgSlNWYWx1ZUNvbnN0KTsKdm9pZCAgICAgICAgICAgICAgICAganNfY29uc29sZV9sb2coSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KiwgSlNWYWx1ZUNvbnN0Kik7CkpTVmFsdWUgICAgICAgICAgICAgIGpzX2Z1bmN0aW9uX2JvdW5kKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMsIEpTVmFsdWVDb25zdCogZnVuY19kYXRhKTsKSlNWYWx1ZSAgICAgICAgICAgICAganNfZnVuY3Rpb25fYmluZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CkpTVmFsdWUgICAgICAgICAgICAgIGpzX2Z1bmN0aW9uX2JpbmRfMShKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIEpTVmFsdWVDb25zdCk7CkpTVmFsdWUgICAgICAgICAgICAgIGpzX2l0ZXJhdG9yX25leHQoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBKU1ZhbHVlQ29uc3QqLCBCT09MKiBkb25lX3AsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKaW50ICAgICAgICAgICAgICAgICAganNfY29weV9wcm9wZXJ0aWVzKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0LCBpbnQgZmxhZ3MpOwp2b2lkICAgICAgICAgICAgICAgICBqc19idWZmZXJfZnJvbShKU0NvbnRleHQqLCBKU0J1ZmZlciosIEpTVmFsdWVDb25zdCk7CkpTQnVmZmVyICAgICAgICAgICAgIGpzX2J1ZmZlcl9uZXcoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKdm9pZCAgICAgICAgICAgICAgICAganNfYnVmZmVyX3RvKEpTQnVmZmVyLCB2b2lkKiosIHNpemVfdCopOwp2b2lkICAgICAgICAgICAgICAgICBqc19idWZmZXJfdG8zKEpTQnVmZmVyLCBjb25zdCBjaGFyKiosIHZvaWQqKiwgdW5zaWduZWQqIHBsZW4pOwpCT09MICAgICAgICAgICAgICAgICBqc19idWZmZXJfdmFsaWQoY29uc3QgSlNCdWZmZXIqKTsKSlNCdWZmZXIgICAgICAgICAgICAganNfYnVmZmVyX2Nsb25lKGNvbnN0IEpTQnVmZmVyKiwgSlNDb250ZXh0Kik7CnZvaWQgICAgICAgICAgICAgICAgIGpzX2J1ZmZlcl9kdW1wKGNvbnN0IEpTQnVmZmVyKiwgRHluQnVmKik7CnZvaWQgICAgICAgICAgICAgICAgIGpzX2J1ZmZlcl9mcmVlKEpTQnVmZmVyKiwgSlNDb250ZXh0Kik7CkJPT0wgICAgICAgICAgICAgICAgIGpzX2lzX2l0ZXJhYmxlKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkJPT0wgICAgICAgICAgICAgICAgIGpzX2lzX2l0ZXJhdG9yKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkpTQXRvbSAgICAgICAgICAgICAgIGpzX3N5bWJvbF9zdGF0aWNfYXRvbShKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUgICAgICAgICAgICAgIGpzX3N5bWJvbF9zdGF0aWNfdmFsdWUoSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwpKU1ZhbHVlICAgICAgICAgICAgICBqc19zeW1ib2xfY3RvcihKU0NvbnRleHQqKTsKSlNWYWx1ZSAgICAgICAgICAgICAganNfZ2xvYmFsX2dldChKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CkpTVmFsdWUgICAgICAgICAgICAgIGpzX2dsb2JhbF9vcyhKU0NvbnRleHQqKTsKSlNWYWx1ZSAgICAgICAgICAgICAganNfb3NfZ2V0KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqKTsKSlNWYWx1ZSAgICAgICAgICAgICAganNfdGltZXJfc3RhcnQoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCB1aW50MzJfdCk7CnZvaWQgICAgICAgICAgICAgICAgIGpzX3RpbWVyX2NhbmNlbChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwp2b2lkICAgICAgICAgICAgICAgICBqc190aW1lcl9mcmVlKHZvaWQqKTsKSlNWYWx1ZSAgICAgICAgICAgICAganNfdGltZXJfY2FsbGJhY2soSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBpbnQsIEpTVmFsdWVDb25zdCogYXJndiwgaW50IG1hZ2ljLCB2b2lkKiBvcGFxdWUpOwpzdHJ1Y3QgVGltZXJDbG9zdXJlKiBqc190aW1lcl9pbnRlcnZhbChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIHVpbnQzMl90KTsKdm9pZCAgICAgICAgICAgICAgICAganNfdGltZXJfcmVzdGFydChzdHJ1Y3QgVGltZXJDbG9zdXJlKik7CnZvaWQgICAgICAgICAgICAgICAgIGpzX3Byb21pc2VfZnJlZShKU0NvbnRleHQqLCBSZXNvbHZlRnVuY3Rpb25zKik7CmNoYXIqICAgICAgICAgICAgICAgIGpzX3Rvc3RyaW5nbGVuKEpTQ29udGV4dCosIHNpemVfdCosIEpTVmFsdWVDb25zdCk7CmNoYXIqICAgICAgICAgICAgICAgIGpzX3Rvc3RyaW5nKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkpTVmFsdWUgICAgICAgICAgICAgIGpzX2ludm9rZShKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGNvbnN0IGNoYXIqLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CkpTVmFsdWUgICAgICAgICAgICAgIGpzX3Byb21pc2VfY3JlYXRlKEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqKTsKSlNWYWx1ZSAgICAgICAgICAgICAganNfcHJvbWlzZV9yZXNvbHZlKEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqLCBKU1ZhbHVlQ29uc3QpOwpKU1ZhbHVlICAgICAgICAgICAgICBqc19wcm9taXNlX3JlamVjdChKU0NvbnRleHQqLCBSZXNvbHZlRnVuY3Rpb25zKiwgSlNWYWx1ZUNvbnN0KTsKdm9pZCAgICAgICAgICAgICAgICAganNfcHJvbWlzZV96ZXJvKFJlc29sdmVGdW5jdGlvbnMqKTsKQk9PTCAgICAgICAgICAgICAgICAganNfcHJvbWlzZV9wZW5kaW5nKFJlc29sdmVGdW5jdGlvbnMgY29uc3QqKTsKQk9PTCAgICAgICAgICAgICAgICAganNfcHJvbWlzZV9kb25lKFJlc29sdmVGdW5jdGlvbnMgY29uc3QqKTsKQk9PTCAgICAgICAgICAgICAgICAganNfaXNfcHJvbWlzZShKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwpKU1ZhbHVlICAgICAgICAgICAgICBqc19lcnJvcl9uZXcoSlNDb250ZXh0KiwgY29uc3QgY2hhciosIC4uLik7CnVpbnQ4X3QqICAgICAgICAgICAgIGpzX3RvcHRyc2l6ZShKU0NvbnRleHQqLCB1bnNpZ25lZCBpbnQqLCBKU1ZhbHVlQ29uc3QpOwpCT09MICAgICAgICAgICAgICAgICBqc19nZXRfcHJvcGVydHlzdHJfYm9vbChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGNvbnN0IGNoYXIqKTsKc3RydWN0IGxpc3RfaGVhZCogICAganNfbW9kdWxlX2xpc3QoSlNDb250ZXh0Kik7CkpTTW9kdWxlRGVmKiAgICAgICAgIGpzX21vZHVsZV9hdChKU0NvbnRleHQqLCBpbnQpOwpKU01vZHVsZURlZiogICAgICAgICBqc19tb2R1bGVfZmluZChKU0NvbnRleHQqLCBKU0F0b20pOwpKU01vZHVsZURlZiogICAgICAgICBqc19tb2R1bGVfZmluZF9zKEpTQ29udGV4dCosIGNvbnN0IGNoYXIqKTsKdm9pZCogICAgICAgICAgICAgICAganNfbW9kdWxlX2V4cG9ydF9maW5kKEpTTW9kdWxlRGVmKiwgSlNBdG9tKTsKSlNWYWx1ZSAgICAgICAgICAgICAganNfbW9kdWxlX2ltcG9ydF9tZXRhKEpTQ29udGV4dCosIGNvbnN0IGNoYXIqKTsKCgpzdGF0aWMgaW5saW5lIHZvaWQKanNfY2xlYXIoSlNDb250ZXh0KiBjdHgsIGNvbnN0IHZvaWQqKiBwdHIpIHsKICBpZigqcHRyKQogICAganNfZnJlZShjdHgsICpwdHIpOwogICpwdHIgPSAwOwp9CgpzdGF0aWMgaW5saW5lIHZvaWQKanNfZHVtcF9zdHJpbmcoY29uc3QgY2hhciogc3RyLCBzaXplX3QgbGVuLCBzaXplX3QgbWF4bGVuKSB7CiAgc2l6ZV90IGksIG4gPSAyOwogIHB1dGNoYXIoJ1wnJyk7CiAgZm9yKGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKICAgIGlmKHN0cltpXSA9PSAnXG4nKSB7CiAgICAgIHB1dGNoYXIoJ1xcJyk7CiAgICAgIHB1dGNoYXIoJ24nKTsKICAgICAgbiArPSAyOwogICAgfSBlbHNlIHsKICAgICAgcHV0Y2hhcihzdHJbaV0pOwogICAgICBuKys7CiAgICB9CiAgICBpZihtYXhsZW4gPiAwICYmIG4gKyAxID49IG1heGxlbikgewogICAgICBmcHV0cygiJy4uLiIsIHN0ZG91dCk7CiAgICAgIHJldHVybjsKICAgIH0KICB9CiAgcHV0Y2hhcignXCcnKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpqc190b19zdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIGNvbnN0IGNoYXIqIHM7CiAgY2hhciogcmV0ID0gMDsKCiAgaWYoKHMgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSkpKSB7CiAgICByZXQgPSBqc19zdHJkdXAoY3R4LCBzKTsKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcyk7CiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBpbmxpbmUgY2hhcioKanNfcmVwbGFjZV9zdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSwgY2hhcioqIHNwdHIpIHsKICBjb25zdCBjaGFyKiBzOwoKICBpZigqc3B0cikKICAgIGpzX2ZyZWUoY3R4LCAqc3B0cik7CgogIGlmKChzID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpKSkgewogICAgKnNwdHIgPSBqc19zdHJkdXAoY3R4LCBzKTsKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcyk7CiAgfQogIHJldHVybiAqc3B0cjsKfQoKc3RhdGljIGlubGluZSBCT09MCmpzX2lzX251bGxpc2goSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgcmV0dXJuIEpTX0lzTnVsbCh2YWx1ZSkgfHwgSlNfSXNVbmRlZmluZWQodmFsdWUpOwp9CgpzdGF0aWMgaW5saW5lIHZvaWQKanNfYnVmZmVyX2ZyZWVfZGVmYXVsdChKU1J1bnRpbWUqIHJ0LCB2b2lkKiBvcGFxdWUsIHZvaWQqIHB0cikgewogIEpTQnVmZmVyKiBidWYgPSBvcGFxdWU7CgogIGlmKEpTX0lzU3RyaW5nKGJ1Zi0+dmFsdWUpKQogICAgSlNfRnJlZVZhbHVlUlQocnQsIGJ1Zi0+dmFsdWUpOwogIGVsc2UgaWYoIUpTX0lzVW5kZWZpbmVkKGJ1Zi0+dmFsdWUpKQogICAgSlNfRnJlZVZhbHVlUlQocnQsIGJ1Zi0+dmFsdWUpOwp9CgpzdGF0aWMgaW5saW5lIGNvbnN0IHVpbnQ4X3QqCmpzX2J1ZmZlcl9iZWdpbihjb25zdCBKU0J1ZmZlciogaW4pIHsKICByZXR1cm4gaW4tPmRhdGE7Cn0KCnN0YXRpYyBpbmxpbmUgY29uc3QgdWludDhfdCoKanNfYnVmZmVyX2VuZChjb25zdCBKU0J1ZmZlciogaW4pIHsKICByZXR1cm4gaW4tPmRhdGEgKyBpbi0+c2l6ZTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9KU19VVElMU19IICovCgAAAAAAAAAA+hMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZRAAAAAAAABlEAAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAIDAAAAAAAAAwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgMAAAAAAAACAwAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"left_delete",
					null,
					"AQAAAAIDAAAAAAAAAgMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAAwMAAAAAAAADAwAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAAIDAAAAAAAABAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgMAAAAAAAACAwAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": "\nint"
					},
					"BQAAAH4CAAAAAAAAfwIAAAAAAAAAAAAAfwIAAAAAAACBAgAAAAAAAAAAAACBAgAAAAAAAIICAAAAAAAAAAAAAIICAAAAAAAAgwIAAAAAAAAAAAAAgwIAAAAAAACEAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgIAAAAAAAB+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					220,
					1,
					"insert",
					{
						"characters": " ref_count;"
					},
					"CwAAAIQCAAAAAAAAhQIAAAAAAAAAAAAAhQIAAAAAAACGAgAAAAAAAAAAAACGAgAAAAAAAIcCAAAAAAAAAAAAAIcCAAAAAAAAiAIAAAAAAAAAAAAAiAIAAAAAAACJAgAAAAAAAAAAAACJAgAAAAAAAIoCAAAAAAAAAAAAAIoCAAAAAAAAiwIAAAAAAAAAAAAAiwIAAAAAAACMAgAAAAAAAAAAAACMAgAAAAAAAI0CAAAAAAAAAAAAAI0CAAAAAAAAjgIAAAAAAAAAAAAAjgIAAAAAAACPAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAIAAAAAAACEAgAAAAAAAAAAAAAAAPC/"
				],
				[
					230,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAANFAAAI2lmbmRlZiBNSU5ORVRfSlNVVElMU19ICiNkZWZpbmUgTUlOTkVUX0pTVVRJTFNfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSA8bGlzdC5oPgoKdHlwZWRlZiBzdHJ1Y3QgSlNUaHJlYWRTdGF0ZSB7CiAgc3RydWN0IGxpc3RfaGVhZCBvc19yd19oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3NpZ25hbF9oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3RpbWVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIHBvcnRfbGlzdDsKICBpbnQgZXZhbF9zY3JpcHRfcmVjdXJzZTsKICB2b2lkICpyZWN2X3BpcGUsICpzZW5kX3BpcGU7Cn0gSlNUaHJlYWRTdGF0ZTsKCnR5cGVkZWYgc3RydWN0IGlucHV0X2J1ZmZlciB7CiAgdWludDhfdCogZGF0YTsKICBzaXplX3Qgc2l6ZTsKICB2b2lkICgqZnJlZSkoSlNSdW50aW1lKiwgdm9pZCogb3BhcXVlLCB2b2lkKiBwdHIpOwogIEpTVmFsdWUgdmFsdWU7Cn0gSlNCdWZmZXI7Cgp0eXBlZGVmIHVuaW9uIHJlc29sdmVfZnVuY3Rpb25zIHsKICBKU1ZhbHVlIGFycmF5WzJdOwogIHN0cnVjdCB7CiAgICBKU1ZhbHVlIHJlc29sdmUsIHJlamVjdDsKICB9Owp9IFJlc29sdmVGdW5jdGlvbnM7CgpzdHJ1Y3QgVGltZXJDbG9zdXJlIHsKICBpbnQgcmVmX2NvdW50OwogIHVpbnQzMl90IGludGVydmFsOwogIEpTQ29udGV4dCogY3R4OwogIEpTVmFsdWVDb25zdCBpZCwgaGFuZGxlciwgY2FsbGJhY2s7Cn07CgpKU1ZhbHVlIHZlY3RvcjJhcnJheShKU0NvbnRleHQqLCBpbnQsIEpTVmFsdWVDb25zdFtdKTsKdm9pZCBqc19jb25zb2xlX2xvZyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QqLCBKU1ZhbHVlQ29uc3QqKTsKSlNWYWx1ZSBqc19mdW5jdGlvbl9ib3VuZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljLCBKU1ZhbHVlQ29uc3QqIGZ1bmNfZGF0YSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZF8xKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0KTsKSlNWYWx1ZSBqc19pdGVyYXRvcl9uZXh0KEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgSlNWYWx1ZUNvbnN0KiwgQk9PTCogZG9uZV9wLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CmludCBqc19jb3B5X3Byb3BlcnRpZXMoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBKU1ZhbHVlQ29uc3QsIGludCBmbGFncyk7CnZvaWQganNfYnVmZmVyX2Zyb20oSlNDb250ZXh0KiwgSlNCdWZmZXIqLCBKU1ZhbHVlQ29uc3QpOwpKU0J1ZmZlciBqc19idWZmZXJfbmV3KEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CnZvaWQganNfYnVmZmVyX3RvKEpTQnVmZmVyLCB2b2lkKiosIHNpemVfdCopOwp2b2lkIGpzX2J1ZmZlcl90bzMoSlNCdWZmZXIsIGNvbnN0IGNoYXIqKiwgdm9pZCoqLCB1bnNpZ25lZCogcGxlbik7CkJPT0wganNfYnVmZmVyX3ZhbGlkKGNvbnN0IEpTQnVmZmVyKik7CkpTQnVmZmVyIGpzX2J1ZmZlcl9jbG9uZShjb25zdCBKU0J1ZmZlciosIEpTQ29udGV4dCopOwp2b2lkIGpzX2J1ZmZlcl9kdW1wKGNvbnN0IEpTQnVmZmVyKiwgRHluQnVmKik7CnZvaWQganNfYnVmZmVyX2ZyZWUoSlNCdWZmZXIqLCBKU0NvbnRleHQqKTsKQk9PTCBqc19pc19pdGVyYWJsZShKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwpCT09MIGpzX2lzX2l0ZXJhdG9yKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CkpTQXRvbSBqc19zeW1ib2xfc3RhdGljX2F0b20oSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwpKU1ZhbHVlIGpzX3N5bWJvbF9zdGF0aWNfdmFsdWUoSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwpKU1ZhbHVlIGpzX3N5bWJvbF9jdG9yKEpTQ29udGV4dCopOwpKU1ZhbHVlIGpzX2dsb2JhbF9nZXQoSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwpKU1ZhbHVlIGpzX2dsb2JhbF9vcyhKU0NvbnRleHQqKTsKSlNWYWx1ZSBqc19vc19nZXQoSlNDb250ZXh0KiwgY29uc3QgY2hhciopOwpKU1ZhbHVlIGpzX3RpbWVyX3N0YXJ0KEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgdWludDMyX3QpOwp2b2lkIGpzX3RpbWVyX2NhbmNlbChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwp2b2lkIGpzX3RpbWVyX2ZyZWUodm9pZCopOwpKU1ZhbHVlIGpzX3RpbWVyX2NhbGxiYWNrKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QqIGFyZ3YsIGludCBtYWdpYywgdm9pZCogb3BhcXVlKTsKc3RydWN0IFRpbWVyQ2xvc3VyZSoganNfdGltZXJfaW50ZXJ2YWwoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCB1aW50MzJfdCk7CnZvaWQganNfdGltZXJfcmVzdGFydChzdHJ1Y3QgVGltZXJDbG9zdXJlKik7CnZvaWQganNfcHJvbWlzZV9mcmVlKEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqKTsKY2hhcioganNfdG9zdHJpbmdsZW4oSlNDb250ZXh0Kiwgc2l6ZV90KiwgSlNWYWx1ZUNvbnN0KTsKY2hhcioganNfdG9zdHJpbmcoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0KTsKSlNWYWx1ZSBqc19pbnZva2UoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBjb25zdCBjaGFyKiwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIGpzX3Byb21pc2VfY3JlYXRlKEpTQ29udGV4dCosIFJlc29sdmVGdW5jdGlvbnMqKTsKSlNWYWx1ZSBqc19wcm9taXNlX3Jlc29sdmUoSlNDb250ZXh0KiwgUmVzb2x2ZUZ1bmN0aW9ucyosIEpTVmFsdWVDb25zdCk7CkpTVmFsdWUganNfcHJvbWlzZV9yZWplY3QoSlNDb250ZXh0KiwgUmVzb2x2ZUZ1bmN0aW9ucyosIEpTVmFsdWVDb25zdCk7CnZvaWQganNfcHJvbWlzZV96ZXJvKFJlc29sdmVGdW5jdGlvbnMqKTsKQk9PTCBqc19wcm9taXNlX3BlbmRpbmcoUmVzb2x2ZUZ1bmN0aW9ucyBjb25zdCopOwpCT09MIGpzX3Byb21pc2VfZG9uZShSZXNvbHZlRnVuY3Rpb25zIGNvbnN0Kik7CkJPT0wganNfaXNfcHJvbWlzZShKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QpOwpKU1ZhbHVlIGpzX2Vycm9yX25ldyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKiwgLi4uKTsKdWludDhfdCoganNfdG9wdHJzaXplKEpTQ29udGV4dCosIHVuc2lnbmVkIGludCosIEpTVmFsdWVDb25zdCk7CkJPT0wganNfZ2V0X3Byb3BlcnR5c3RyX2Jvb2woSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBjb25zdCBjaGFyKik7CnN0cnVjdCBsaXN0X2hlYWQqIGpzX21vZHVsZV9saXN0KEpTQ29udGV4dCopOwpKU01vZHVsZURlZioganNfbW9kdWxlX2F0KEpTQ29udGV4dCosIGludCk7CkpTTW9kdWxlRGVmKiBqc19tb2R1bGVfZmluZChKU0NvbnRleHQqLCBKU0F0b20pOwpKU01vZHVsZURlZioganNfbW9kdWxlX2ZpbmRfcyhKU0NvbnRleHQqLCBjb25zdCBjaGFyKik7CnZvaWQqIGpzX21vZHVsZV9leHBvcnRfZmluZChKU01vZHVsZURlZiosIEpTQXRvbSk7CkpTVmFsdWUganNfbW9kdWxlX2ltcG9ydF9tZXRhKEpTQ29udGV4dCosIGNvbnN0IGNoYXIqKTsKCnN0YXRpYyBpbmxpbmUgdm9pZApqc19jbGVhcihKU0NvbnRleHQqIGN0eCwgY29uc3Qgdm9pZCoqIHB0cikgewogIGlmKCpwdHIpCiAgICBqc19mcmVlKGN0eCwgKnB0cik7CiAgKnB0ciA9IDA7Cn0KCnN0YXRpYyBpbmxpbmUgdm9pZApqc19kdW1wX3N0cmluZyhjb25zdCBjaGFyKiBzdHIsIHNpemVfdCBsZW4sIHNpemVfdCBtYXhsZW4pIHsKICBzaXplX3QgaSwgbiA9IDI7CiAgcHV0Y2hhcignXCcnKTsKICBmb3IoaSA9IDA7IGkgPCBsZW47IGkrKykgewogICAgaWYoc3RyW2ldID09ICdcbicpIHsKICAgICAgcHV0Y2hhcignXFwnKTsKICAgICAgcHV0Y2hhcignbicpOwogICAgICBuICs9IDI7CiAgICB9IGVsc2UgewogICAgICBwdXRjaGFyKHN0cltpXSk7CiAgICAgIG4rKzsKICAgIH0KICAgIGlmKG1heGxlbiA+IDAgJiYgbiArIDEgPj0gbWF4bGVuKSB7CiAgICAgIGZwdXRzKCInLi4uIiwgc3Rkb3V0KTsKICAgICAgcmV0dXJuOwogICAgfQogIH0KICBwdXRjaGFyKCdcJycpOwp9CgpzdGF0aWMgaW5saW5lIGNoYXIqCmpzX3RvX3N0cmluZyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgY29uc3QgY2hhciogczsKICBjaGFyKiByZXQgPSAwOwoKICBpZigocyA9IEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKSkpIHsKICAgIHJldCA9IGpzX3N0cmR1cChjdHgsIHMpOwogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzKTsKICB9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpqc19yZXBsYWNlX3N0cmluZyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlLCBjaGFyKiogc3B0cikgewogIGNvbnN0IGNoYXIqIHM7CgogIGlmKCpzcHRyKQogICAganNfZnJlZShjdHgsICpzcHRyKTsKCiAgaWYoKHMgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSkpKSB7CiAgICAqc3B0ciA9IGpzX3N0cmR1cChjdHgsIHMpOwogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzKTsKICB9CiAgcmV0dXJuICpzcHRyOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKanNfaXNfbnVsbGlzaChKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICByZXR1cm4gSlNfSXNOdWxsKHZhbHVlKSB8fCBKU19Jc1VuZGVmaW5lZCh2YWx1ZSk7Cn0KCnN0YXRpYyBpbmxpbmUgdm9pZApqc19idWZmZXJfZnJlZV9kZWZhdWx0KEpTUnVudGltZSogcnQsIHZvaWQqIG9wYXF1ZSwgdm9pZCogcHRyKSB7CiAgSlNCdWZmZXIqIGJ1ZiA9IG9wYXF1ZTsKCiAgaWYoSlNfSXNTdHJpbmcoYnVmLT52YWx1ZSkpCiAgICBKU19GcmVlVmFsdWVSVChydCwgYnVmLT52YWx1ZSk7CiAgZWxzZSBpZighSlNfSXNVbmRlZmluZWQoYnVmLT52YWx1ZSkpCiAgICBKU19GcmVlVmFsdWVSVChydCwgYnVmLT52YWx1ZSk7Cn0KCnN0YXRpYyBpbmxpbmUgY29uc3QgdWludDhfdCoKanNfYnVmZmVyX2JlZ2luKGNvbnN0IEpTQnVmZmVyKiBpbikgewogIHJldHVybiBpbi0+ZGF0YTsKfQoKc3RhdGljIGlubGluZSBjb25zdCB1aW50OF90Kgpqc19idWZmZXJfZW5kKGNvbnN0IEpTQnVmZmVyKiBpbikgewogIHJldHVybiBpbi0+ZGF0YSArIGluLT5zaXplOwp9CgojZW5kaWYgLyogTUlOTkVUX0pTX1VUSUxTX0ggKi8KAAAAAAAAAAANFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQkAAAAAAAAhCQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "cmake/functions.cmake",
			"settings":
			{
				"buffer_size": 4621,
				"line_ending": "Unix"
			}
		},
		{
			"file": "minnet-request.c",
			"settings":
			{
				"buffer_size": 11384,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYbAAAAAAAARBwAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "requiest"
					},
					"CAAAAC4cAAAAAAAALxwAAAAAAAAAAAAALxwAAAAAAAAwHAAAAAAAAAAAAAAwHAAAAAAAADEcAAAAAAAAAAAAADEcAAAAAAAAMhwAAAAAAAAAAAAAMhwAAAAAAAAzHAAAAAAAAAAAAAAzHAAAAAAAADQcAAAAAAAAAAAAADQcAAAAAAAANRwAAAAAAAAAAAAANRwAAAAAAAA2HAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC4cAAAAAAAALhwAAAAAAAAAAAAAAADwvw"
				],
				[
					23,
					4,
					"left_delete",
					null,
					"BAAAADUcAAAAAAAANRwAAAAAAAABAAAAdDQcAAAAAAAANBwAAAAAAAABAAAAczMcAAAAAAAAMxwAAAAAAAABAAAAZTIcAAAAAAAAMhwAAAAAAAABAAAAaQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYcAAAAAAAANhwAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "est_dup("
					},
					"CAAAADIcAAAAAAAAMxwAAAAAAAAAAAAAMxwAAAAAAAA0HAAAAAAAAAAAAAA0HAAAAAAAADUcAAAAAAAAAAAAADUcAAAAAAAANhwAAAAAAAAAAAAANhwAAAAAAAA3HAAAAAAAAAAAAAA3HAAAAAAAADgcAAAAAAAAAAAAADgcAAAAAAAAORwAAAAAAAAAAAAAORwAAAAAAAA6HAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIcAAAAAAAAMhwAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAD4cAAAAAAAAPxwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD4cAAAAAAAAPhwAAAAAAAAAAAAAAADwvw"
				],
				[
					39,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwTAAAAAAAABRQAAAAAAAAAAAAAAADwvw"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAPgFAAAAAAAA+QUAAAAAAAAAAAAA+QUAAAAAAAD6BQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgFAAAAAAAA+AUAAAAAAAAAAAAAAADwvw"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAACIMAAAAAAAAIwwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIMAAAAAAAAIgwAAAAAAAAAAAAAAADwvw"
				],
				[
					63,
					1,
					"left_delete",
					null,
					"AQAAACIMAAAAAAAAIgwAAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMMAAAAAAAAIwwAAAAAAAAAAAAAAADwvw"
				],
				[
					68,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIMAAAAAAAAIgwAAAAAAAAAAAAAAADwvw"
				],
				[
					71,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHUNAAAAAAAAdQ0AAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB4LAAAI2RlZmluZSBfR05VX1NPVVJDRQojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlICJtaW5uZXQtcmVxdWVzdC5oIgojaW5jbHVkZSAibWlubmV0LXJpbmdidWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgPGN0eXBlLmg+CiNpbmNsdWRlIDxzdHJpbmdzLmg+CiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CgpUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkOwpUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfY3RvcjsKCmVudW0geyBSRVFVRVNUX1RZUEUsIFJFUVVFU1RfTUVUSE9ELCBSRVFVRVNUX1VSSSwgUkVRVUVTVF9QQVRILCBSRVFVRVNUX0hFQURFUlMsIFJFUVVFU1RfQVJSQVlCVUZGRVIsIFJFUVVFU1RfVEVYVCwgUkVRVUVTVF9CT0RZIH07CgpzdGF0aWMgY29uc3QgY2hhciogY29uc3QgbWV0aG9kX25hbWVzW10gPSB7CiAgICAiR0VUIiwKICAgICJQT1NUIiwKICAgICJPUFRJT05TIiwKICAgICJQVVQiLAogICAgIlBBVENIIiwKICAgICJERUxFVEUiLAogICAgIkNPTk5FQ1QiLAogICAgIkhFQUQiLAp9OwoKY29uc3QgY2hhcioKbWV0aG9kX3N0cmluZyhlbnVtIGh0dHBfbWV0aG9kIG0pIHsKICBpZihtID49IDAgJiYgbSA8IGNvdW50b2YobWV0aG9kX25hbWVzKSkKICAgIHJldHVybiBtZXRob2RfbmFtZXNbbV07CiAgcmV0dXJuIDA7Cn0KCmludAptZXRob2RfbnVtYmVyKGNvbnN0IGNoYXIqIG5hbWUpIHsKICBpbnQgaSA9IDA7CiAgaWYobmFtZSkKICAgIGZvcihpID0gY291bnRvZihtZXRob2RfbmFtZXMpIC0gMTsgaSA+PSAwOyAtLWkpCiAgICAgIGlmKCFzdHJjYXNlY21wKG5hbWUsIG1ldGhvZF9uYW1lc1tpXSkpCiAgICAgICAgYnJlYWs7CiAgcmV0dXJuIGk7Cn0KCnZvaWQKcmVxdWVzdF9mb3JtYXQoTWlubmV0UmVxdWVzdCBjb25zdCogcmVxLCBjaGFyKiBidWYsIHNpemVfdCBsZW4sIEpTQ29udGV4dCogY3R4KSB7CiAgY2hhciogaGVhZGVycyA9IGJ1ZmZlcl9lc2NhcGVkKCZyZXEtPmhlYWRlcnMsIGN0eCk7CiAgY2hhciogdXJsID0gdXJsX2Zvcm1hdChyZXEtPnVybCwgY3R4KTsKICBzbnByaW50ZihidWYsIGxlbiwgRkdDKDE5NiwgIk1pbm5ldFJlcXVlc3QiKSAiIHsgbWV0aG9kOiAnJXMnLCB1cmw6ICclcycsIGhlYWRlcnM6ICclcycgfSIsIG1ldGhvZF9uYW1lKHJlcS0+bWV0aG9kKSwgdXJsLCBoZWFkZXJzKTsKCiAganNfZnJlZShjdHgsIGhlYWRlcnMpOwogIGpzX2ZyZWUoY3R4LCB1cmwpOwp9CgpjaGFyKgpyZXF1ZXN0X2R1bXAoTWlubmV0UmVxdWVzdCBjb25zdCogcmVxLCBKU0NvbnRleHQqIGN0eCkgewogIHN0YXRpYyBjaGFyIGJ1ZlsyMDQ4XTsKICByZXF1ZXN0X2Zvcm1hdChyZXEsIGJ1Ziwgc2l6ZW9mKGJ1ZiksIGN0eCk7CiAgcmV0dXJuIGJ1ZjsKfQoKdm9pZApyZXF1ZXN0X2luaXQoTWlubmV0UmVxdWVzdCogcmVxLCBNaW5uZXRVUkwgdXJsLCBlbnVtIGh0dHBfbWV0aG9kIG1ldGhvZCkgewogIC8vIG1lbXNldChyZXEsIDAsIHNpemVvZihNaW5uZXRSZXF1ZXN0KSk7CgogIHJlcS0+dXJsID0gdXJsOwogIHJlcS0+bWV0aG9kID0gbWV0aG9kOwp9CgpNaW5uZXRSZXF1ZXN0KgpyZXF1ZXN0X2FsbG9jKEpTQ29udGV4dCogY3R4KSB7CiAgTWlubmV0UmVxdWVzdCogcmV0OwoKICByZXQgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKE1pbm5ldFJlcXVlc3QpKTsKICByZXQtPnJlZl9jb3VudCA9IDE7CiAgcmV0dXJuIHJldDsKfQoKTWlubmV0UmVxdWVzdCoKcmVxdWVzdF9uZXcoSlNDb250ZXh0KiBjdHgsIE1pbm5ldFVSTCB1cmwsIE1pbm5ldEh0dHBNZXRob2QgbWV0aG9kKSB7CiAgTWlubmV0UmVxdWVzdCogcmVxOwoKICBpZigocmVxID0gcmVxdWVzdF9hbGxvYyhjdHgpKSkKICAgIHJlcXVlc3RfaW5pdChyZXEsIHVybCwgbWV0aG9kKTsKCiAgcmV0dXJuIHJlcTsKfQoKTWlubmV0UmVxdWVzdCoKcmVxdWVzdF9kdXAoTWlubmV0UmVxdWVzdCogcmVxKSB7CiAgKytyZXEtPnJlZl9jb3VudDsKICByZXR1cm4gcmVxOwp9CgpNaW5uZXRSZXF1ZXN0KgpyZXF1ZXN0X2Zyb21vYmooSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvcHRpb25zKSB7CiAgTWlubmV0UmVxdWVzdCogcmVxOwogIEpTVmFsdWUgdmFsdWU7CiAgY29uc3QgY2hhciAqdXJsLCAqcGF0aCwgKm1ldGhvZDsKCiAgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9wdGlvbnMsICJ1cmwiKTsKICB1cmwgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsdWUpOwoKICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb3B0aW9ucywgInBhdGgiKTsKICBwYXRoID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbHVlKTsKCiAgSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcHRpb25zLCAibWV0aG9kIik7CiAgbWV0aG9kID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbHVlKTsKCiAgSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcHRpb25zLCAiaGVhZGVycyIpOwoKICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CgogIHJlcXVlc3RfaW5pdChyZXEsIC8qcGF0aCwqLyB1cmxfY3JlYXRlKHVybCwgY3R4KSwgbWV0aG9kX251bWJlcihtZXRob2QpKTsKCiAgSlNfRnJlZUNTdHJpbmcoY3R4LCB1cmwpOwogIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcGF0aCk7CiAgSlNfRnJlZUNTdHJpbmcoY3R4LCBtZXRob2QpOwoKICByZXR1cm4gcmVxOwp9CgpNaW5uZXRSZXF1ZXN0KgpyZXF1ZXN0X2Zyb213c2koSlNDb250ZXh0KiBjdHgsIHN0cnVjdCBsd3MqIHdzaSkgewogIGNvbnN0IGNoYXIqIHVyaTsKICBNaW5uZXRIdHRwTWV0aG9kIG1ldGhvZCA9IC0xOwoKICBpZigodXJpID0gbWlubmV0X3VyaV9hbmRfbWV0aG9kKHdzaSwgY3R4LCAmbWV0aG9kKSkpIHsKICAgIE1pbm5ldFVSTCB1cmwgPSB1cmxfY3JlYXRlKHVyaSwgY3R4KTsKICAgIHN0cnVjdCBsd3Nfdmhvc3QqIHZob3N0OwoKICAgIGlmKCh2aG9zdCA9IGx3c19nZXRfdmhvc3Qod3NpKSkpIHsKICAgICAgY29uc3QgY2hhciogbmFtZTsKCiAgICAgIGlmKChuYW1lID0gbHdzX2dldF92aG9zdF9uYW1lKHZob3N0KSkpCiAgICAgICAgdXJsX3BhcnNlKCZ1cmwsIG5hbWUsIGN0eCk7CiAgICB9CgogICAgcmV0dXJuIHJlcXVlc3RfbmV3KGN0eCwgdXJsLCBtZXRob2QpOwogIH0KCiAgcmV0dXJuIDA7Cn0KCk1pbm5ldFJlcXVlc3QqCnJlcXVlc3RfZnJvbXVybChKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogdXJpKSB7CiAgTWlubmV0SHR0cE1ldGhvZCBtZXRob2QgPSBNRVRIT0RfR0VUOwogIE1pbm5ldFVSTCB1cmwgPSB1cmxfY3JlYXRlKHVyaSwgY3R4KTsKCiAgcmV0dXJuIHJlcXVlc3RfbmV3KGN0eCwgdXJsLCBtZXRob2QpOwp9Cgp2b2lkCnJlcXVlc3RfemVybyhNaW5uZXRSZXF1ZXN0KiByZXEpIHsKICBtZW1zZXQocmVxLCAwLCBzaXplb2YoTWlubmV0UmVxdWVzdCkpOwogIHJlcS0+aGVhZGVycyA9IEJVRkZFUl8wKCk7CiAgcmVxLT5ib2R5ID0gQlVGRkVSXzAoKTsKfQoKdm9pZApyZXF1ZXN0X2NsZWFyKE1pbm5ldFJlcXVlc3QqIHJlcSwgSlNDb250ZXh0KiBjdHgpIHsKICB1cmxfZnJlZSgmcmVxLT51cmwsIGN0eCk7CiAgYnVmZmVyX2ZyZWUoJnJlcS0+aGVhZGVycywgSlNfR2V0UnVudGltZShjdHgpKTsKICBidWZmZXJfZnJlZSgmcmVxLT5ib2R5LCBKU19HZXRSdW50aW1lKGN0eCkpOwp9Cgp2b2lkCnJlcXVlc3RfY2xlYXJfcnQoTWlubmV0UmVxdWVzdCogcmVxLCBKU1J1bnRpbWUqIHJ0KSB7CiAgdXJsX2ZyZWVfcnQoJnJlcS0+dXJsLCBydCk7CiAgYnVmZmVyX2ZyZWUoJnJlcS0+aGVhZGVycywgcnQpOwogIGJ1ZmZlcl9mcmVlKCZyZXEtPmJvZHksIHJ0KTsKfQoKdm9pZApyZXF1ZXN0X2ZyZWUoTWlubmV0UmVxdWVzdCogcmVxLCBKU0NvbnRleHQqIGN0eCkgewogIGlmKC0tcmVxLT5yZWZfY291bnQgPT0gMCkgewogICAgcmVxdWVzdF9jbGVhcihyZXEsIGN0eCk7CiAgICBqc19mcmVlKGN0eCwgcmVxKTsKICB9Cn0KCnZvaWQKcmVxdWVzdF9mcmVlX3J0KE1pbm5ldFJlcXVlc3QqIHJlcSwgSlNSdW50aW1lKiBydCkgewogIGlmKC0tcmVxLT5yZWZfY291bnQgPT0gMCkgewogICAgcmVxdWVzdF9jbGVhcl9ydChyZXEsIHJ0KTsKICAgIGpzX2ZyZWVfcnQocnQsIHJlcSk7CiAgfQp9CgpzdGF0aWMgY29uc3QgY2hhcioKaGVhZGVyX2dldChKU0NvbnRleHQqIGN0eCwgc2l6ZV90KiBsZW5wLCBNaW5uZXRCdWZmZXIqIGJ1ZiwgY29uc3QgY2hhciogbmFtZSkgewogIHNpemVfdCBsZW4sIG5hbWVsZW4gPSBzdHJsZW4obmFtZSk7CiAgdWludDhfdCAqeCwgKmVuZDsKCiAgZm9yKHggPSBidWYtPnN0YXJ0LCBlbmQgPSBidWYtPndyaXRlOyB4IDwgZW5kOyB4ICs9IGxlbiArIDEpIHsKICAgIGxlbiA9IGJ5dGVfY2hyKHgsIGVuZCAtIHgsICdcbicpOwoKICAgIC8qICAgaWYobmFtZWxlbiA+PSBsZW4pCiAgICAgICAgIGNvbnRpbnVlOyovCiAgICBpZihieXRlX2Nocih4LCBsZW4sICc6JykgIT0gbmFtZWxlbiB8fCBzdHJuY2FzZWNtcChuYW1lLCAoY29uc3QgY2hhciopeCwgbmFtZWxlbikpCiAgICAgIGNvbnRpbnVlOwoKICAgIGlmKHhbbmFtZWxlbl0gPT0gJzonKQogICAgICBuYW1lbGVuKys7CiAgICBpZihpc3NwYWNlKHhbbmFtZWxlbl0pKQogICAgICBuYW1lbGVuKys7CgogICAgaWYobGVucCkKICAgICAgKmxlbnAgPSBsZW4gLSBuYW1lbGVuOwogICAgcmV0dXJuIChjb25zdCBjaGFyKil4ICsgbmFtZWxlbjsKICB9CiAgcmV0dXJuIDA7Cn0KCk1pbm5ldFJlcXVlc3QqCnJlcXVlc3RfZnJvbShKU0NvbnRleHQqIGN0eCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBNaW5uZXRSZXF1ZXN0KiByZXEgPSAwOwogIE1pbm5ldFVSTCB1cmwgPSB7MCwgMCwgMCwgMH07CgogIGlmKEpTX0lzT2JqZWN0KGFyZ3ZbMF0pICYmIChyZXEgPSBtaW5uZXRfcmVxdWVzdF9kYXRhKGFyZ3ZbMF0pKSkgewogICAgcmVxID0gcmVxdWVzdF9kdXAocmVxKTsKICB9IGVsc2UgewogICAgdXJsX2Zyb212YWx1ZSgmdXJsLCBhcmd2WzBdLCBjdHgpOwoKICAgIGlmKHVybF92YWxpZCh1cmwpKQogICAgICByZXEgPSByZXF1ZXN0X25ldyhjdHgsIHVybCwgTUVUSE9EX0dFVCk7CiAgfQoKICBpZihyZXEpCiAgICBpZihhcmdjID49IDIgJiYgSlNfSXNPYmplY3QoYXJndlsxXSkpIHsKICAgICAgSlNWYWx1ZSBoZWFkZXJzID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBhcmd2WzFdLCAiaGVhZGVycyIpOwogICAgICBpZighSlNfSXNVbmRlZmluZWQoaGVhZGVycykpCiAgICAgICAgaGVhZGVyc19mcm9tb2JqKCZyZXEtPmhlYWRlcnMsIGhlYWRlcnMsIGN0eCk7CgogICAgICBKU19GcmVlVmFsdWUoY3R4LCBoZWFkZXJzKTsKICAgIH0KCiAgcmV0dXJuIHJlcTsKfQoKSlNWYWx1ZQptaW5uZXRfcmVxdWVzdF9mcm9tKEpTQ29udGV4dCogY3R4LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIE1pbm5ldFJlcXVlc3QqIHJlcTsKCiAgLyogaWYoSlNfSXNPYmplY3QoYXJndlswXSkgJiYgKHJlcSA9IG1pbm5ldF9yZXF1ZXN0X2RhdGEoYXJndlswXSkpKQogICAgIHJlcSA9IHJlcXVlc3RfZHVwKHJlcSk7CiAgIGVsc2UqLwogIHJlcSA9IHJlcXVlc3RfZnJvbShjdHgsIGFyZ2MsIGFyZ3YpOwoKICByZXR1cm4gbWlubmV0X3JlcXVlc3Rfd3JhcChjdHgsIHJlcSk7Cn0KCkpTVmFsdWUKbWlubmV0X3JlcXVlc3RfY29uc3RydWN0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcHJvdG8sIG9iajsKICBNaW5uZXRSZXF1ZXN0KiByZXE7CiAgQk9PTCBnb3RfdXJsID0gRkFMU0U7CgogIGlmKCEocmVxID0gcmVxdWVzdF9hbGxvYyhjdHgpKSkKICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgcHJvdG8gPSBKU19EdXBWYWx1ZShjdHgsIG1pbm5ldF9yZXF1ZXN0X3Byb3RvKTsKCiAgb2JqID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHByb3RvLCBtaW5uZXRfcmVxdWVzdF9jbGFzc19pZCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgcHJvdG8pOwogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICBnb3RvIGZhaWw7CgogIEpTX1NldE9wYXF1ZShvYmosIHJlcSk7CgogIHdoaWxlKGFyZ2MgPiAwKSB7CgogICAgaWYoIWdvdF91cmwpIHsKICAgICAgLypnb3RfdXJsID0gKi8gdXJsX2Zyb212YWx1ZSgmcmVxLT51cmwsIGFyZ3ZbMF0sIGN0eCk7CgogICAgfSBlbHNlIGlmKEpTX0lzT2JqZWN0KGFyZ3ZbMF0pKSB7CiAgICAgIGpzX2NvcHlfcHJvcGVydGllcyhjdHgsIG9iaiwgYXJndlswXSwgSlNfR1BOX1NUUklOR19NQVNLKTsKICAgIH0KCiAgICBhcmdjLS07CiAgICBhcmd2Kys7CiAgfQoKICByZXEtPnJlYWRfb25seSA9IFRSVUU7CiAgcmV0dXJuIG9iajsKCmZhaWw6CiAganNfZnJlZShjdHgsIHJlcSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpKU1ZhbHVlCm1pbm5ldF9yZXF1ZXN0X25ldyhKU0NvbnRleHQqIGN0eCwgTWlubmV0VVJMIHVybCwgZW51bSBodHRwX21ldGhvZCBtZXRob2QpIHsKICBNaW5uZXRSZXF1ZXN0KiByZXE7CgogIGlmKCEocmVxID0gcmVxdWVzdF9uZXcoY3R4LCB1cmwsIG1ldGhvZCkpKQogICAgcmV0dXJuIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgcmV0dXJuIG1pbm5ldF9yZXF1ZXN0X3dyYXAoY3R4LCByZXEpOwp9CgpKU1ZhbHVlCm1pbm5ldF9yZXF1ZXN0X3dyYXAoSlNDb250ZXh0KiBjdHgsIE1pbm5ldFJlcXVlc3QqIHJlcSkgewogIEpTVmFsdWUgcmV0ID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIG1pbm5ldF9yZXF1ZXN0X3Byb3RvLCBtaW5uZXRfcmVxdWVzdF9jbGFzc19pZCk7CgogIGlmKEpTX0lzRXhjZXB0aW9uKHJldCkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBKU19TZXRPcGFxdWUocmV0LCByZXF1ZXN0X2R1cChyZXEpKTsKCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKbWlubmV0X3JlcXVlc3RfZ2V0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBtYWdpYykgewogIE1pbm5ldFJlcXVlc3QqIHJlcTsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoIShyZXEgPSBtaW5uZXRfcmVxdWVzdF9kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgUkVRVUVTVF9NRVRIT0Q6IHsKICAgICAgcmV0ID0gSlNfTmV3U3RyaW5nKGN0eCwgbWV0aG9kX25hbWUocmVxLT5tZXRob2QpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFUVVFU1RfVFlQRTogewogICAgICByZXQgPSBKU19OZXdJbnQzMihjdHgsIHJlcS0+bWV0aG9kKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFUVVFU1RfVVJJOiB7CiAgICAgIHJldCA9IG1pbm5ldF91cmxfbmV3KGN0eCwgcmVxLT51cmwpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkVRVUVTVF9QQVRIOiB7CiAgICAgIHJldCA9IHJlcS0+dXJsLnBhdGggPyBKU19OZXdTdHJpbmcoY3R4LCByZXEtPnVybC5wYXRoKSA6IEpTX05VTEw7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVFVRVNUX0hFQURFUlM6IHsKICAgICAgcmV0ID0gaGVhZGVyc19vYmplY3QoY3R4LCAmcmVxLT5oZWFkZXJzLnN0YXJ0LCAmcmVxLT5oZWFkZXJzLndyaXRlKTsKICAgICAgLy8gcmV0ID0gYnVmZmVyX3Rvc3RyaW5nKCZyZXEtPmhlYWRlcnMsIGN0eCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVFVRVNUX0FSUkFZQlVGRkVSOiB7CiAgICAgIHJldCA9IGJ1ZmZlcl9IRUFEKCZyZXEtPmJvZHkpID8gYnVmZmVyX3RvYXJyYXlidWZmZXIoJnJlcS0+Ym9keSwgY3R4KSA6IEpTX05VTEw7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVFVRVNUX1RFWFQ6IHsKICAgICAgcmV0ID0gYnVmZmVyX0hFQUQoJnJlcS0+Ym9keSkgPyBidWZmZXJfdG9zdHJpbmcoJnJlcS0+Ym9keSwgY3R4KSA6IEpTX05VTEw7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVFVRVNUX0JPRFk6IHsKICAgICAgaWYoYnVmZmVyX0hFQUQoJnJlcS0+Ym9keSkpIHsKICAgICAgICBzaXplX3QgdHlwZWxlbjsKICAgICAgICBjb25zdCBjaGFyKiB0eXBlID0gaGVhZGVyX2dldChjdHgsICZ0eXBlbGVuLCAmcmVxLT5oZWFkZXJzLCAiY29udGVudC10eXBlIik7CgogICAgICAgIHJldCA9IGJ1ZmZlcl90b3N0cmluZygmcmVxLT5ib2R5LCBjdHgpOwogICAgICAgIC8vICByZXQgPSBtaW5uZXRfcmluZ2J1ZmZlcl9uZXcoY3R4LCB0eXBlLCB0eXBlbGVuLCBibG9ja19CRUdJTigmcmVxLT5ib2R5KSwgYnVmZmVyX0hFQUQoJnJlcS0+Ym9keSkpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldCA9IEpTX05VTEw7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9yZXF1ZXN0X3NldChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGludCBtYWdpYykgewogIE1pbm5ldFJlcXVlc3QqIHJlcTsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBjb25zdCBjaGFyKiBzdHI7CiAgc2l6ZV90IGxlbjsKICBpZighKHJlcSA9IG1pbm5ldF9yZXF1ZXN0X2RhdGEyKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIGlmKHJlcS0+cmVhZF9vbmx5KQogICAgcmV0dXJuIEpTX1Rocm93UmVmZXJlbmNlRXJyb3IoY3R4LCAiUmVxdWVzdCBvYmplY3QgaXMgcmVhZC1vbmx5Iik7CgogIHN0ciA9IEpTX1RvQ1N0cmluZ0xlbihjdHgsICZsZW4sIHZhbHVlKTsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIFJFUVVFU1RfTUVUSE9EOgogICAgY2FzZSBSRVFVRVNUX1RZUEU6IHsKICAgICAgaW50MzJfdCBtID0gLTE7CiAgICAgIGlmKEpTX0lzTnVtYmVyKHZhbHVlKSkKICAgICAgICBKU19Ub0ludDMyKGN0eCwgJm0sIHZhbHVlKTsKICAgICAgZWxzZQogICAgICAgIG0gPSBtZXRob2RfbnVtYmVyKHN0cik7CiAgICAgIGlmKG0gPj0gMCAmJiBtZXRob2Rfc3RyaW5nKG0pKQogICAgICAgIHJlcS0+bWV0aG9kID0gbTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFUVVFU1RfVVJJOiB7CiAgICAgIHVybF9mcmVlKCZyZXEtPnVybCwgY3R4KTsKICAgICAgdXJsX3BhcnNlKCZyZXEtPnVybCwgc3RyLCBjdHgpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkVRVUVTVF9QQVRIOiB7CiAgICAgIGlmKHJlcS0+dXJsLnBhdGgpIHsKICAgICAgICBqc19mcmVlKGN0eCwgcmVxLT51cmwucGF0aCk7CiAgICAgICAgcmVxLT51cmwucGF0aCA9IDA7CiAgICAgIH0KICAgICAgcmVxLT51cmwucGF0aCA9IGpzX3N0cmR1cChjdHgsIHN0cik7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVFVRVNUX0hFQURFUlM6IHsKCiAgICAgIGlmKEpTX0lzT2JqZWN0KHZhbHVlKSkgewogICAgICAgIGhlYWRlcnNfZnJvbW9iaigmcmVxLT5oZWFkZXJzLCB2YWx1ZSwgY3R4KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zdCBjaGFyKiBzdHIgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSk7CiAgICAgICAgcmV0ID0gSlNfVGhyb3dSZWZlcmVuY2VFcnJvcihjdHgsICJDYW5ub3Qgc2V0IGhlYWRlcnMgdG8gJyVzJyIsIHN0cik7CiAgICAgICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzdHIpOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzdHIpOwoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgdm9pZAptaW5uZXRfcmVxdWVzdF9maW5hbGl6ZXIoSlNSdW50aW1lKiBydCwgSlNWYWx1ZSB2YWwpIHsKICBNaW5uZXRSZXF1ZXN0KiByZXE7CgogIGlmKChyZXEgPSBtaW5uZXRfcmVxdWVzdF9kYXRhKHZhbCkpKQogICAgcmVxdWVzdF9mcmVlX3J0KHJlcSwgcnQpOwp9CgpKU0NsYXNzRGVmIG1pbm5ldF9yZXF1ZXN0X2NsYXNzID0gewogICAgIk1pbm5ldFJlcXVlc3QiLAogICAgLmZpbmFsaXplciA9IG1pbm5ldF9yZXF1ZXN0X2ZpbmFsaXplciwKfTsKCmNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF9yZXF1ZXN0X3Byb3RvX2Z1bmNzW10gPSB7CiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigidHlwZSIsIG1pbm5ldF9yZXF1ZXN0X2dldCwgbWlubmV0X3JlcXVlc3Rfc2V0LCBSRVFVRVNUX1RZUEUsIDApLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoIm1ldGhvZCIsIG1pbm5ldF9yZXF1ZXN0X2dldCwgbWlubmV0X3JlcXVlc3Rfc2V0LCBSRVFVRVNUX01FVEhPRCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJ1cmwiLCBtaW5uZXRfcmVxdWVzdF9nZXQsIG1pbm5ldF9yZXF1ZXN0X3NldCwgUkVRVUVTVF9VUkksIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigicGF0aCIsIG1pbm5ldF9yZXF1ZXN0X2dldCwgbWlubmV0X3JlcXVlc3Rfc2V0LCBSRVFVRVNUX1BBVEgsIDApLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImhlYWRlcnMiLCBtaW5uZXRfcmVxdWVzdF9nZXQsIG1pbm5ldF9yZXF1ZXN0X3NldCwgUkVRVUVTVF9IRUFERVJTLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImFycmF5QnVmZmVyIiwgbWlubmV0X3JlcXVlc3RfZ2V0LCAwLCBSRVFVRVNUX0FSUkFZQlVGRkVSLCAwKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJ0ZXh0IiwgbWlubmV0X3JlcXVlc3RfZ2V0LCAwLCBSRVFVRVNUX1RFWFQsIDApLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImJvZHkiLCBtaW5uZXRfcmVxdWVzdF9nZXQsIDAsIFJFUVVFU1RfQk9EWSwgMCksCiAgICBKU19QUk9QX1NUUklOR19ERUYoIltTeW1ib2wudG9TdHJpbmdUYWddIiwgIk1pbm5ldFJlcXVlc3QiLCBKU19QUk9QX0NPTkZJR1VSQUJMRSksCn07Cgpjb25zdCBzaXplX3QgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3Nfc2l6ZSA9IGNvdW50b2YobWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3MpOwoAAAAAAAAAAHgsAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQ0AAAAAAAB1DQAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB4LAAAI2RlZmluZSBfR05VX1NPVVJDRQojaW5jbHVkZSA8cXVpY2tqcy5oPgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlICJtaW5uZXQtcmVxdWVzdC5oIgojaW5jbHVkZSAibWlubmV0LXJpbmdidWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgPGN0eXBlLmg+CiNpbmNsdWRlIDxzdHJpbmdzLmg+CiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CgpUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF9yZXF1ZXN0X2NsYXNzX2lkOwpUSFJFQURfTE9DQUwgSlNWYWx1ZSBtaW5uZXRfcmVxdWVzdF9wcm90bywgbWlubmV0X3JlcXVlc3RfY3RvcjsKCmVudW0geyBSRVFVRVNUX1RZUEUsIFJFUVVFU1RfTUVUSE9ELCBSRVFVRVNUX1VSSSwgUkVRVUVTVF9QQVRILCBSRVFVRVNUX0hFQURFUlMsIFJFUVVFU1RfQVJSQVlCVUZGRVIsIFJFUVVFU1RfVEVYVCwgUkVRVUVTVF9CT0RZIH07CgpzdGF0aWMgY29uc3QgY2hhciogY29uc3QgbWV0aG9kX25hbWVzW10gPSB7CiAgICAiR0VUIiwKICAgICJQT1NUIiwKICAgICJPUFRJT05TIiwKICAgICJQVVQiLAogICAgIlBBVENIIiwKICAgICJERUxFVEUiLAogICAgIkNPTk5FQ1QiLAogICAgIkhFQUQiLAp9OwoKY29uc3QgY2hhcioKbWV0aG9kX3N0cmluZyhlbnVtIGh0dHBfbWV0aG9kIG0pIHsKICBpZihtID49IDAgJiYgbSA8IGNvdW50b2YobWV0aG9kX25hbWVzKSkKICAgIHJldHVybiBtZXRob2RfbmFtZXNbbV07CiAgcmV0dXJuIDA7Cn0KCmludAptZXRob2RfbnVtYmVyKGNvbnN0IGNoYXIqIG5hbWUpIHsKICBpbnQgaSA9IDA7CiAgaWYobmFtZSkKICAgIGZvcihpID0gY291bnRvZihtZXRob2RfbmFtZXMpIC0gMTsgaSA+PSAwOyAtLWkpCiAgICAgIGlmKCFzdHJjYXNlY21wKG5hbWUsIG1ldGhvZF9uYW1lc1tpXSkpCiAgICAgICAgYnJlYWs7CiAgcmV0dXJuIGk7Cn0KCnZvaWQKcmVxdWVzdF9mb3JtYXQoTWlubmV0UmVxdWVzdCBjb25zdCogcmVxLCBjaGFyKiBidWYsIHNpemVfdCBsZW4sIEpTQ29udGV4dCogY3R4KSB7CiAgY2hhciogaGVhZGVycyA9IGJ1ZmZlcl9lc2NhcGVkKCZyZXEtPmhlYWRlcnMsIGN0eCk7CiAgY2hhciogdXJsID0gdXJsX2Zvcm1hdChyZXEtPnVybCwgY3R4KTsKICBzbnByaW50ZihidWYsIGxlbiwgRkdDKDE5NiwgIk1pbm5ldFJlcXVlc3QiKSAiIHsgbWV0aG9kOiAnJXMnLCB1cmw6ICclcycsIGhlYWRlcnM6ICclcycgfSIsIG1ldGhvZF9uYW1lKHJlcS0+bWV0aG9kKSwgdXJsLCBoZWFkZXJzKTsKCiAganNfZnJlZShjdHgsIGhlYWRlcnMpOwogIGpzX2ZyZWUoY3R4LCB1cmwpOwp9CgpjaGFyKgpyZXF1ZXN0X2R1bXAoTWlubmV0UmVxdWVzdCBjb25zdCogcmVxLCBKU0NvbnRleHQqIGN0eCkgewogIHN0YXRpYyBjaGFyIGJ1ZlsyMDQ4XTsKICByZXF1ZXN0X2Zvcm1hdChyZXEsIGJ1Ziwgc2l6ZW9mKGJ1ZiksIGN0eCk7CiAgcmV0dXJuIGJ1ZjsKfQoKdm9pZApyZXF1ZXN0X2luaXQoTWlubmV0UmVxdWVzdCogcmVxLCBNaW5uZXRVUkwgdXJsLCBlbnVtIGh0dHBfbWV0aG9kIG1ldGhvZCkgewogIC8vIG1lbXNldChyZXEsIDAsIHNpemVvZihNaW5uZXRSZXF1ZXN0KSk7CgogIHJlcS0+dXJsID0gdXJsOwogIHJlcS0+bWV0aG9kID0gbWV0aG9kOwp9CgpNaW5uZXRSZXF1ZXN0KgpyZXF1ZXN0X2FsbG9jKEpTQ29udGV4dCogY3R4KSB7CiAgTWlubmV0UmVxdWVzdCogcmV0OwoKICByZXQgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKE1pbm5ldFJlcXVlc3QpKTsKICByZXQtPnJlZl9jb3VudCA9IDE7CiAgcmV0dXJuIHJldDsKfQoKTWlubmV0UmVxdWVzdCoKcmVxdWVzdF9uZXcoSlNDb250ZXh0KiBjdHgsIE1pbm5ldFVSTCB1cmwsIE1pbm5ldEh0dHBNZXRob2QgbWV0aG9kKSB7CiAgTWlubmV0UmVxdWVzdCogcmVxOwoKICBpZigocmVxID0gcmVxdWVzdF9hbGxvYyhjdHgpKSkKICAgIHJlcXVlc3RfaW5pdChyZXEsIHVybCwgbWV0aG9kKTsKCiAgcmV0dXJuIHJlcTsKfQoKTWlubmV0UmVxdWVzdCoKcmVxdWVzdF9kdXAoTWlubmV0UmVxdWVzdCogcmVxKSB7CiAgKytyZXEtPnJlZl9jb3VudDsKICByZXR1cm4gcmVxOwp9CgpNaW5uZXRSZXF1ZXN0KgpyZXF1ZXN0X2Zyb21vYmooSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvcHRpb25zKSB7CiAgTWlubmV0UmVxdWVzdCogcmVxOwogIEpTVmFsdWUgdmFsdWU7CiAgY29uc3QgY2hhciAqdXJsLCAqcGF0aCwgKm1ldGhvZDsKCiAgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9wdGlvbnMsICJ1cmwiKTsKICB1cmwgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsdWUpOwoKICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb3B0aW9ucywgInBhdGgiKTsKICBwYXRoID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbHVlKTsKCiAgSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcHRpb25zLCAibWV0aG9kIik7CiAgbWV0aG9kID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbHVlKTsKCiAgSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcHRpb25zLCAiaGVhZGVycyIpOwoKICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CgogIHJlcXVlc3RfaW5pdChyZXEsIC8qcGF0aCwqLyB1cmxfY3JlYXRlKHVybCwgY3R4KSwgbWV0aG9kX251bWJlcihtZXRob2QpKTsKCiAgSlNfRnJlZUNTdHJpbmcoY3R4LCB1cmwpOwogIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcGF0aCk7CiAgSlNfRnJlZUNTdHJpbmcoY3R4LCBtZXRob2QpOwoKICByZXR1cm4gcmVxOwp9CgpNaW5uZXRSZXF1ZXN0KgpyZXF1ZXN0X2Zyb213c2koSlNDb250ZXh0KiBjdHgsIHN0cnVjdCBsd3MqIHdzaSkgewogIGNvbnN0IGNoYXIqIHVyaTsKICBNaW5uZXRIdHRwTWV0aG9kIG1ldGhvZCA9IC0xOwoKICBpZigodXJpID0gbWlubmV0X3VyaV9hbmRfbWV0aG9kKHdzaSwgY3R4LCAmbWV0aG9kKSkpIHsKICAgIE1pbm5ldFVSTCB1cmwgPSB1cmxfY3JlYXRlKHVyaSwgY3R4KTsKICAgIHN0cnVjdCBsd3Nfdmhvc3QqIHZob3N0OwoKICAgIGlmKCh2aG9zdCA9IGx3c19nZXRfdmhvc3Qod3NpKSkpIHsKICAgICAgY29uc3QgY2hhciogbmFtZTsKCiAgICAgIGlmKChuYW1lID0gbHdzX2dldF92aG9zdF9uYW1lKHZob3N0KSkpCiAgICAgICAgdXJsX3BhcnNlKCZ1cmwsIG5hbWUsIGN0eCk7CiAgICB9CgogICAgcmV0dXJuIHJlcXVlc3RfbmV3KGN0eCwgdXJsLCBtZXRob2QpOwogIH0KCiAgcmV0dXJuIDA7Cn0KCk1pbm5ldFJlcXVlc3QqCnJlcXVlc3RfZnJvbXVybChKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogdXJpKSB7CiAgTWlubmV0SHR0cE1ldGhvZCBtZXRob2QgPSBNRVRIT0RfR0VUOwogIE1pbm5ldFVSTCB1cmwgPSB1cmxfY3JlYXRlKHVyaSwgY3R4KTsKCiAgcmV0dXJuIHJlcXVlc3RfbmV3KGN0eCwgdXJsLCBtZXRob2QpOwp9Cgp2b2lkCnJlcXVlc3RfemVybyhNaW5uZXRSZXF1ZXN0KiByZXEpIHsKICBtZW1zZXQocmVxLCAwLCBzaXplb2YoTWlubmV0UmVxdWVzdCkpOwogIHJlcS0+aGVhZGVycyA9IEJVRkZFUl8wKCk7CiAgcmVxLT5ib2R5ID0gQlVGRkVSXzAoKTsKfQoKdm9pZApyZXF1ZXN0X2NsZWFyKE1pbm5ldFJlcXVlc3QqIHJlcSwgSlNDb250ZXh0KiBjdHgpIHsKICB1cmxfZnJlZSgmcmVxLT51cmwsIGN0eCk7CiAgYnVmZmVyX2ZyZWUoJnJlcS0+aGVhZGVycywgSlNfR2V0UnVudGltZShjdHgpKTsKICBidWZmZXJfZnJlZSgmcmVxLT5ib2R5LCBKU19HZXRSdW50aW1lKGN0eCkpOwp9Cgp2b2lkCnJlcXVlc3RfY2xlYXJfcnQoTWlubmV0UmVxdWVzdCogcmVxLCBKU1J1bnRpbWUqIHJ0KSB7CiAgdXJsX2ZyZWVfcnQoJnJlcS0+dXJsLCBydCk7CiAgYnVmZmVyX2ZyZWUoJnJlcS0+aGVhZGVycywgcnQpOwogIGJ1ZmZlcl9mcmVlKCZyZXEtPmJvZHksIHJ0KTsKfQoKdm9pZApyZXF1ZXN0X2ZyZWUoTWlubmV0UmVxdWVzdCogcmVxLCBKU0NvbnRleHQqIGN0eCkgewogIGlmKC0tcmVxLT5yZWZfY291bnQgPT0gMCkgewogICAgcmVxdWVzdF9jbGVhcihyZXEsIGN0eCk7CiAgICBqc19mcmVlKGN0eCwgcmVxKTsKICB9Cn0KCnZvaWQKcmVxdWVzdF9mcmVlX3J0KE1pbm5ldFJlcXVlc3QqIHJlcSwgSlNSdW50aW1lKiBydCkgewogIGlmKC0tcmVxLT5yZWZfY291bnQgPT0gMCkgewogICAgcmVxdWVzdF9jbGVhcl9ydChyZXEsIHJ0KTsKICAgIGpzX2ZyZWVfcnQocnQsIHJlcSk7CiAgfQp9CgpzdGF0aWMgY29uc3QgY2hhcioKaGVhZGVyX2dldChKU0NvbnRleHQqIGN0eCwgc2l6ZV90KiBsZW5wLCBNaW5uZXRCdWZmZXIqIGJ1ZiwgY29uc3QgY2hhciogbmFtZSkgewogIHNpemVfdCBsZW4sIG5hbWVsZW4gPSBzdHJsZW4obmFtZSk7CiAgdWludDhfdCAqeCwgKmVuZDsKCiAgZm9yKHggPSBidWYtPnN0YXJ0LCBlbmQgPSBidWYtPndyaXRlOyB4IDwgZW5kOyB4ICs9IGxlbiArIDEpIHsKICAgIGxlbiA9IGJ5dGVfY2hyKHgsIGVuZCAtIHgsICdcbicpOwoKICAgIC8qICAgaWYobmFtZWxlbiA+PSBsZW4pCiAgICAgICAgIGNvbnRpbnVlOyovCiAgICBpZihieXRlX2Nocih4LCBsZW4sICc6JykgIT0gbmFtZWxlbiB8fCBzdHJuY2FzZWNtcChuYW1lLCAoY29uc3QgY2hhciopeCwgbmFtZWxlbikpCiAgICAgIGNvbnRpbnVlOwoKICAgIGlmKHhbbmFtZWxlbl0gPT0gJzonKQogICAgICBuYW1lbGVuKys7CiAgICBpZihpc3NwYWNlKHhbbmFtZWxlbl0pKQogICAgICBuYW1lbGVuKys7CgogICAgaWYobGVucCkKICAgICAgKmxlbnAgPSBsZW4gLSBuYW1lbGVuOwogICAgcmV0dXJuIChjb25zdCBjaGFyKil4ICsgbmFtZWxlbjsKICB9CiAgcmV0dXJuIDA7Cn0KCk1pbm5ldFJlcXVlc3QqCnJlcXVlc3RfZnJvbShKU0NvbnRleHQqIGN0eCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBNaW5uZXRSZXF1ZXN0KiByZXEgPSAwOwogIE1pbm5ldFVSTCB1cmwgPSB7MCwgMCwgMCwgMH07CgogIGlmKEpTX0lzT2JqZWN0KGFyZ3ZbMF0pICYmIChyZXEgPSBtaW5uZXRfcmVxdWVzdF9kYXRhKGFyZ3ZbMF0pKSkgewogICAgcmVxID0gcmVxdWVzdF9kdXAocmVxKTsKICB9IGVsc2UgewogICAgdXJsX2Zyb212YWx1ZSgmdXJsLCBhcmd2WzBdLCBjdHgpOwoKICAgIGlmKHVybF92YWxpZCh1cmwpKQogICAgICByZXEgPSByZXF1ZXN0X25ldyhjdHgsIHVybCwgTUVUSE9EX0dFVCk7CiAgfQoKICBpZihyZXEpCiAgICBpZihhcmdjID49IDIgJiYgSlNfSXNPYmplY3QoYXJndlsxXSkpIHsKICAgICAgSlNWYWx1ZSBoZWFkZXJzID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBhcmd2WzFdLCAiaGVhZGVycyIpOwogICAgICBpZighSlNfSXNVbmRlZmluZWQoaGVhZGVycykpCiAgICAgICAgaGVhZGVyc19mcm9tb2JqKCZyZXEtPmhlYWRlcnMsIGhlYWRlcnMsIGN0eCk7CgogICAgICBKU19GcmVlVmFsdWUoY3R4LCBoZWFkZXJzKTsKICAgIH0KCiAgcmV0dXJuIHJlcTsKfQoKSlNWYWx1ZQptaW5uZXRfcmVxdWVzdF9mcm9tKEpTQ29udGV4dCogY3R4LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIE1pbm5ldFJlcXVlc3QqIHJlcTsKCiAgLyogaWYoSlNfSXNPYmplY3QoYXJndlswXSkgJiYgKHJlcSA9IG1pbm5ldF9yZXF1ZXN0X2RhdGEoYXJndlswXSkpKQogICAgIHJlcSA9IHJlcXVlc3RfZHVwKHJlcSk7CiAgIGVsc2UqLwogIHJlcSA9IHJlcXVlc3RfZnJvbShjdHgsIGFyZ2MsIGFyZ3YpOwoKICByZXR1cm4gbWlubmV0X3JlcXVlc3Rfd3JhcChjdHgsIHJlcSk7Cn0KCkpTVmFsdWUKbWlubmV0X3JlcXVlc3RfY29uc3RydWN0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcHJvdG8sIG9iajsKICBNaW5uZXRSZXF1ZXN0KiByZXE7CiAgQk9PTCBnb3RfdXJsID0gRkFMU0U7CgogIGlmKCEocmVxID0gcmVxdWVzdF9hbGxvYyhjdHgpKSkKICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgcHJvdG8gPSBKU19EdXBWYWx1ZShjdHgsIG1pbm5ldF9yZXF1ZXN0X3Byb3RvKTsKCiAgb2JqID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHByb3RvLCBtaW5uZXRfcmVxdWVzdF9jbGFzc19pZCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgcHJvdG8pOwogIGlmKEpTX0lzRXhjZXB0aW9uKG9iaikpCiAgICBnb3RvIGZhaWw7CgogIEpTX1NldE9wYXF1ZShvYmosIHJlcSk7CgogIHdoaWxlKGFyZ2MgPiAwKSB7CgogICAgaWYoIWdvdF91cmwpIHsKICAgICAgLypnb3RfdXJsID0gKi8gdXJsX2Zyb212YWx1ZSgmcmVxLT51cmwsIGFyZ3ZbMF0sIGN0eCk7CgogICAgfSBlbHNlIGlmKEpTX0lzT2JqZWN0KGFyZ3ZbMF0pKSB7CiAgICAgIGpzX2NvcHlfcHJvcGVydGllcyhjdHgsIG9iaiwgYXJndlswXSwgSlNfR1BOX1NUUklOR19NQVNLKTsKICAgIH0KCiAgICBhcmdjLS07CiAgICBhcmd2Kys7CiAgfQoKICByZXEtPnJlYWRfb25seSA9IFRSVUU7CiAgcmV0dXJuIG9iajsKCmZhaWw6CiAganNfZnJlZShjdHgsIHJlcSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpKU1ZhbHVlCm1pbm5ldF9yZXF1ZXN0X25ldyhKU0NvbnRleHQqIGN0eCwgTWlubmV0VVJMIHVybCwgZW51bSBodHRwX21ldGhvZCBtZXRob2QpIHsKICBNaW5uZXRSZXF1ZXN0KiByZXE7CgogIGlmKCEocmVxID0gcmVxdWVzdF9uZXcoY3R4LCB1cmwsIG1ldGhvZCkpKQogICAgcmV0dXJuIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgcmV0dXJuIG1pbm5ldF9yZXF1ZXN0X3dyYXAoY3R4LCByZXEpOwp9CgpKU1ZhbHVlCm1pbm5ldF9yZXF1ZXN0X3dyYXAoSlNDb250ZXh0KiBjdHgsIE1pbm5ldFJlcXVlc3QqIHJlcSkgewogIEpTVmFsdWUgcmV0ID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIG1pbm5ldF9yZXF1ZXN0X3Byb3RvLCBtaW5uZXRfcmVxdWVzdF9jbGFzc19pZCk7CgogIGlmKEpTX0lzRXhjZXB0aW9uKHJldCkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBKU19TZXRPcGFxdWUocmV0LCByZXF1ZXN0X2R1cChyZXEpKTsKCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKbWlubmV0X3JlcXVlc3RfZ2V0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBtYWdpYykgewogIE1pbm5ldFJlcXVlc3QqIHJlcTsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoIShyZXEgPSBtaW5uZXRfcmVxdWVzdF9kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgUkVRVUVTVF9NRVRIT0Q6IHsKICAgICAgcmV0ID0gSlNfTmV3U3RyaW5nKGN0eCwgbWV0aG9kX25hbWUocmVxLT5tZXRob2QpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFUVVFU1RfVFlQRTogewogICAgICByZXQgPSBKU19OZXdJbnQzMihjdHgsIHJlcS0+bWV0aG9kKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFUVVFU1RfVVJJOiB7CiAgICAgIHJldCA9IG1pbm5ldF91cmxfbmV3KGN0eCwgcmVxLT51cmwpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkVRVUVTVF9QQVRIOiB7CiAgICAgIHJldCA9IHJlcS0+dXJsLnBhdGggPyBKU19OZXdTdHJpbmcoY3R4LCByZXEtPnVybC5wYXRoKSA6IEpTX05VTEw7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVFVRVNUX0hFQURFUlM6IHsKICAgICAgcmV0ID0gaGVhZGVyc19vYmplY3QoY3R4LCAmcmVxLT5oZWFkZXJzLnN0YXJ0LCAmcmVxLT5oZWFkZXJzLndyaXRlKTsKICAgICAgLy8gcmV0ID0gYnVmZmVyX3Rvc3RyaW5nKCZyZXEtPmhlYWRlcnMsIGN0eCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVFVRVNUX0FSUkFZQlVGRkVSOiB7CiAgICAgIHJldCA9IGJ1ZmZlcl9IRUFEKCZyZXEtPmJvZHkpID8gYnVmZmVyX3RvYXJyYXlidWZmZXIoJnJlcS0+Ym9keSwgY3R4KSA6IEpTX05VTEw7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVFVRVNUX1RFWFQ6IHsKICAgICAgcmV0ID0gYnVmZmVyX0hFQUQoJnJlcS0+Ym9keSkgPyBidWZmZXJfdG9zdHJpbmcoJnJlcS0+Ym9keSwgY3R4KSA6IEpTX05VTEw7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVFVRVNUX0JPRFk6IHsKICAgICAgaWYoYnVmZmVyX0hFQUQoJnJlcS0+Ym9keSkpIHsKICAgICAgICBzaXplX3QgdHlwZWxlbjsKICAgICAgICBjb25zdCBjaGFyKiB0eXBlID0gaGVhZGVyX2dldChjdHgsICZ0eXBlbGVuLCAmcmVxLT5oZWFkZXJzLCAiY29udGVudC10eXBlIik7CgogICAgICAgIHJldCA9IGJ1ZmZlcl90b3N0cmluZygmcmVxLT5ib2R5LCBjdHgpOwogICAgICAgIC8vICByZXQgPSBtaW5uZXRfcmluZ2J1ZmZlcl9uZXcoY3R4LCB0eXBlLCB0eXBlbGVuLCBibG9ja19CRUdJTigmcmVxLT5ib2R5KSwgYnVmZmVyX0hFQUQoJnJlcS0+Ym9keSkpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldCA9IEpTX05VTEw7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9yZXF1ZXN0X3NldChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIGludCBtYWdpYykgewogIE1pbm5ldFJlcXVlc3QqIHJlcTsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBjb25zdCBjaGFyKiBzdHI7CiAgc2l6ZV90IGxlbjsKICBpZighKHJlcSA9IG1pbm5ldF9yZXF1ZXN0X2RhdGEyKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIGlmKHJlcS0+cmVhZF9vbmx5KQogICAgcmV0dXJuIEpTX1Rocm93UmVmZXJlbmNlRXJyb3IoY3R4LCAiUmVxdWVzdCBvYmplY3QgaXMgcmVhZC1vbmx5Iik7CgogIHN0ciA9IEpTX1RvQ1N0cmluZ0xlbihjdHgsICZsZW4sIHZhbHVlKTsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIFJFUVVFU1RfTUVUSE9EOgogICAgY2FzZSBSRVFVRVNUX1RZUEU6IHsKICAgICAgaW50MzJfdCBtID0gLTE7CiAgICAgIGlmKEpTX0lzTnVtYmVyKHZhbHVlKSkKICAgICAgICBKU19Ub0ludDMyKGN0eCwgJm0sIHZhbHVlKTsKICAgICAgZWxzZQogICAgICAgIG0gPSBtZXRob2RfbnVtYmVyKHN0cik7CiAgICAgIGlmKG0gPj0gMCAmJiBtZXRob2Rfc3RyaW5nKG0pKQogICAgICAgIHJlcS0+bWV0aG9kID0gbTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFUVVFU1RfVVJJOiB7CiAgICAgIHVybF9mcmVlKCZyZXEtPnVybCwgY3R4KTsKICAgICAgdXJsX3BhcnNlKCZyZXEtPnVybCwgc3RyLCBjdHgpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkVRVUVTVF9QQVRIOiB7CiAgICAgIGlmKHJlcS0+dXJsLnBhdGgpIHsKICAgICAgICBqc19mcmVlKGN0eCwgcmVxLT51cmwucGF0aCk7CiAgICAgICAgcmVxLT51cmwucGF0aCA9IDA7CiAgICAgIH0KICAgICAgcmVxLT51cmwucGF0aCA9IGpzX3N0cmR1cChjdHgsIHN0cik7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVFVRVNUX0hFQURFUlM6IHsKCiAgICAgIGlmKEpTX0lzT2JqZWN0KHZhbHVlKSkgewogICAgICAgIGhlYWRlcnNfZnJvbW9iaigmcmVxLT5oZWFkZXJzLCB2YWx1ZSwgY3R4KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zdCBjaGFyKiBzdHIgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSk7CiAgICAgICAgcmV0ID0gSlNfVGhyb3dSZWZlcmVuY2VFcnJvcihjdHgsICJDYW5ub3Qgc2V0IGhlYWRlcnMgdG8gJyVzJyIsIHN0cik7CiAgICAgICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzdHIpOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzdHIpOwoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgdm9pZAptaW5uZXRfcmVxdWVzdF9maW5hbGl6ZXIoSlNSdW50aW1lKiBydCwgSlNWYWx1ZSB2YWwpIHsKICBNaW5uZXRSZXF1ZXN0KiByZXE7CgogIGlmKChyZXEgPSBtaW5uZXRfcmVxdWVzdF9kYXRhKHZhbCkpKQogICAgcmVxdWVzdF9mcmVlX3J0KHJlcSwgcnQpOwp9CgpKU0NsYXNzRGVmIG1pbm5ldF9yZXF1ZXN0X2NsYXNzID0gewogICAgIk1pbm5ldFJlcXVlc3QiLAogICAgLmZpbmFsaXplciA9IG1pbm5ldF9yZXF1ZXN0X2ZpbmFsaXplciwKfTsKCmNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF9yZXF1ZXN0X3Byb3RvX2Z1bmNzW10gPSB7CiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigidHlwZSIsIG1pbm5ldF9yZXF1ZXN0X2dldCwgbWlubmV0X3JlcXVlc3Rfc2V0LCBSRVFVRVNUX1RZUEUsIDApLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoIm1ldGhvZCIsIG1pbm5ldF9yZXF1ZXN0X2dldCwgbWlubmV0X3JlcXVlc3Rfc2V0LCBSRVFVRVNUX01FVEhPRCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJ1cmwiLCBtaW5uZXRfcmVxdWVzdF9nZXQsIG1pbm5ldF9yZXF1ZXN0X3NldCwgUkVRVUVTVF9VUkksIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigicGF0aCIsIG1pbm5ldF9yZXF1ZXN0X2dldCwgbWlubmV0X3JlcXVlc3Rfc2V0LCBSRVFVRVNUX1BBVEgsIDApLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImhlYWRlcnMiLCBtaW5uZXRfcmVxdWVzdF9nZXQsIG1pbm5ldF9yZXF1ZXN0X3NldCwgUkVRVUVTVF9IRUFERVJTLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImFycmF5QnVmZmVyIiwgbWlubmV0X3JlcXVlc3RfZ2V0LCAwLCBSRVFVRVNUX0FSUkFZQlVGRkVSLCAwKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJ0ZXh0IiwgbWlubmV0X3JlcXVlc3RfZ2V0LCAwLCBSRVFVRVNUX1RFWFQsIDApLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImJvZHkiLCBtaW5uZXRfcmVxdWVzdF9nZXQsIDAsIFJFUVVFU1RfQk9EWSwgMCksCiAgICBKU19QUk9QX1NUUklOR19ERUYoIltTeW1ib2wudG9TdHJpbmdUYWddIiwgIk1pbm5ldFJlcXVlc3QiLCBKU19QUk9QX0NPTkZJR1VSQUJMRSksCn07Cgpjb25zdCBzaXplX3QgbWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3Nfc2l6ZSA9IGNvdW50b2YobWlubmV0X3JlcXVlc3RfcHJvdG9fZnVuY3MpOwoAAAAAAAAAAHgsAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQ0AAAAAAAB1DQAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAdQ0AAAAAAAB1DQAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAdQ0AAAAAAAB1DQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "jsutils.c",
			"settings":
			{
				"buffer_size": 14108,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3114,
					1,
					"cut",
					null,
					"AQAAAGEeAAAAAAAAYR4AAAAAAAD9AQAACnN0cnVjdCBUaW1lckNsb3N1cmUqCmpzX3RpbWVyX2ludGVydmFsKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgZm4sIHVpbnQzMl90IG1zKSB7CiAgc3RydWN0IFRpbWVyQ2xvc3VyZSogY2xvc3VyZTsKICBKU1ZhbHVlIGNhbGxiYWNrLCBpZF92YWx1ZTsKCiAgaWYoIShjbG9zdXJlID0ganNfbWFsbG9jKGN0eCwgc2l6ZW9mKHN0cnVjdCBUaW1lckNsb3N1cmUpKSkpCiAgICByZXR1cm4gMDsKCiAgY2xvc3VyZS0+Y3R4ID0gY3R4OwogIGNsb3N1cmUtPmludGVydmFsID0gbXM7CiAgY2xvc3VyZS0+aGFuZGxlciA9IEpTX0R1cFZhbHVlKGN0eCwgZm4pOwoKICBjYWxsYmFjayA9IEpTX05ld0NDbG9zdXJlKGN0eCwganNfdGltZXJfY2FsbGJhY2ssIDAsIDAsIGNsb3N1cmUsIGpzX3RpbWVyX2ZyZWUpOwoKICBjbG9zdXJlLT5pZCA9IGpzX3RpbWVyX3N0YXJ0KGN0eCwgY2FsbGJhY2ssIG1zKTsKICBjbG9zdXJlLT5jYWxsYmFjayA9IGNhbGxiYWNrOwoKICByZXR1cm4gY2xvc3VyZTsKfQo",
					"AQAAAAAAAAABAAAAYR4AAAAAAABeIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3115,
					2,
					"paste",
					null,
					"AgAAAGEeAAAAAAAAXiAAAAAAAAAAAAAAXiAAAAAAAABbIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYR4AAAAAAABhHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3118,
					1,
					"insert",
					{
						"characters": "resarte"
					},
					"CAAAAH0gAAAAAAAAfiAAAAAAAAAAAAAAfiAAAAAAAAB+IAAAAAAAAAgAAABpbnRlcnZhbH4gAAAAAAAAfyAAAAAAAAAAAAAAfyAAAAAAAACAIAAAAAAAAAAAAACAIAAAAAAAAIEgAAAAAAAAAAAAAIEgAAAAAAAAgiAAAAAAAAAAAAAAgiAAAAAAAACDIAAAAAAAAAAAAACDIAAAAAAAAIQgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfSAAAAAAAACFIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3119,
					4,
					"left_delete",
					null,
					"BAAAAIMgAAAAAAAAgyAAAAAAAAABAAAAZYIgAAAAAAAAgiAAAAAAAAABAAAAdIEgAAAAAAAAgSAAAAAAAAABAAAAcoAgAAAAAAAAgCAAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAhCAAAAAAAACEIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3120,
					1,
					"insert",
					{
						"characters": "tart"
					},
					"BAAAAIAgAAAAAAAAgSAAAAAAAAAAAAAAgSAAAAAAAACCIAAAAAAAAAAAAACCIAAAAAAAAIMgAAAAAAAAAAAAAIMgAAAAAAAAhCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgCAAAAAAAACAIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3123,
					1,
					"insert",
					{
						"characters": "J"
					},
					"AQAAAIUgAAAAAAAAhiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhSAAAAAAAACFIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3124,
					1,
					"left_delete",
					null,
					"AQAAAIUgAAAAAAAAhSAAAAAAAAABAAAASg",
					"AQAAAAAAAAABAAAAhiAAAAAAAACGIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3125,
					1,
					"insert",
					{
						"characters": "struct"
					},
					"BgAAAIUgAAAAAAAAhiAAAAAAAAAAAAAAhiAAAAAAAACHIAAAAAAAAAAAAACHIAAAAAAAAIggAAAAAAAAAAAAAIggAAAAAAAAiSAAAAAAAAAAAAAAiSAAAAAAAACKIAAAAAAAAAAAAACKIAAAAAAAAIsgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhSAAAAAAAACFIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3126,
					1,
					"insert",
					{
						"characters": " TimerClosure*"
					},
					"DgAAAIsgAAAAAAAAjCAAAAAAAAAAAAAAjCAAAAAAAACNIAAAAAAAAAAAAACNIAAAAAAAAI4gAAAAAAAAAAAAAI4gAAAAAAAAjyAAAAAAAAAAAAAAjyAAAAAAAACQIAAAAAAAAAAAAACQIAAAAAAAAJEgAAAAAAAAAAAAAJEgAAAAAAAAkiAAAAAAAAAAAAAAkiAAAAAAAACTIAAAAAAAAAAAAACTIAAAAAAAAJQgAAAAAAAAAAAAAJQgAAAAAAAAlSAAAAAAAAAAAAAAlSAAAAAAAACWIAAAAAAAAAAAAACWIAAAAAAAAJcgAAAAAAAAAAAAAJcgAAAAAAAAmCAAAAAAAAAAAAAAmCAAAAAAAACZIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiyAAAAAAAACLIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3129,
					1,
					"insert",
					{
						"characters": " closure"
					},
					"CQAAAJkgAAAAAAAAmiAAAAAAAAAAAAAAmiAAAAAAAACaIAAAAAAAACwAAABKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IGZuLCB1aW50MzJfdCBtc5ogAAAAAAAAmyAAAAAAAAAAAAAAmyAAAAAAAACcIAAAAAAAAAAAAACcIAAAAAAAAJ0gAAAAAAAAAAAAAJ0gAAAAAAAAniAAAAAAAAAAAAAAniAAAAAAAACfIAAAAAAAAAAAAACfIAAAAAAAAKAgAAAAAAAAAAAAAKAgAAAAAAAAoSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmSAAAAAAAADFIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3133,
					1,
					"left_delete",
					null,
					"AQAAAF8gAAAAAAAAXyAAAAAAAAAVAAAAc3RydWN0IFRpbWVyQ2xvc3VyZSoK",
					"AQAAAAAAAAABAAAAXyAAAAAAAAB0IAAAAAAAAAAAAAAAAAAA"
				],
				[
					3135,
					1,
					"insert",
					{
						"characters": "\nvoid"
					},
					"BQAAAF4gAAAAAAAAXyAAAAAAAAAAAAAAXyAAAAAAAABgIAAAAAAAAAAAAABgIAAAAAAAAGEgAAAAAAAAAAAAAGEgAAAAAAAAYiAAAAAAAAAAAAAAYiAAAAAAAABjIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXiAAAAAAAABeIAAAAAAAAAAAAAAAAAAA"
				],
				[
					3142,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJQgAAAAAAAAlSAAAAAAAAAAAAAAlSAAAAAAAACXIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlCAAAAAAAACUIAAAAAAAAP///////+9/"
				],
				[
					3143,
					1,
					"insert",
					{
						"characters": "js_timer_cancel"
					},
					"DwAAAJcgAAAAAAAAmCAAAAAAAAAAAAAAmCAAAAAAAACZIAAAAAAAAAAAAACZIAAAAAAAAJogAAAAAAAAAAAAAJogAAAAAAAAmyAAAAAAAAAAAAAAmyAAAAAAAACcIAAAAAAAAAAAAACcIAAAAAAAAJ0gAAAAAAAAAAAAAJ0gAAAAAAAAniAAAAAAAAAAAAAAniAAAAAAAACfIAAAAAAAAAAAAACfIAAAAAAAAKAgAAAAAAAAAAAAAKAgAAAAAAAAoSAAAAAAAAAAAAAAoSAAAAAAAACiIAAAAAAAAAAAAACiIAAAAAAAAKMgAAAAAAAAAAAAAKMgAAAAAAAApCAAAAAAAAAAAAAApCAAAAAAAAClIAAAAAAAAAAAAAClIAAAAAAAAKYgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlyAAAAAAAACXIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3144,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKYgAAAAAAAAqCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApiAAAAAAAACmIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3145,
					1,
					"insert",
					{
						"characters": "closure->ctx,"
					},
					"DQAAAKcgAAAAAAAAqCAAAAAAAAAAAAAAqCAAAAAAAACpIAAAAAAAAAAAAACpIAAAAAAAAKogAAAAAAAAAAAAAKogAAAAAAAAqyAAAAAAAAAAAAAAqyAAAAAAAACsIAAAAAAAAAAAAACsIAAAAAAAAK0gAAAAAAAAAAAAAK0gAAAAAAAAriAAAAAAAAAAAAAAriAAAAAAAACvIAAAAAAAAAAAAACvIAAAAAAAALAgAAAAAAAAAAAAALAgAAAAAAAAsSAAAAAAAAAAAAAAsSAAAAAAAACyIAAAAAAAAAAAAACyIAAAAAAAALMgAAAAAAAAAAAAALMgAAAAAAAAtCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApyAAAAAAAACnIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3146,
					1,
					"insert",
					{
						"characters": " closure->id"
					},
					"DAAAALQgAAAAAAAAtSAAAAAAAAAAAAAAtSAAAAAAAAC2IAAAAAAAAAAAAAC2IAAAAAAAALcgAAAAAAAAAAAAALcgAAAAAAAAuCAAAAAAAAAAAAAAuCAAAAAAAAC5IAAAAAAAAAAAAAC5IAAAAAAAALogAAAAAAAAAAAAALogAAAAAAAAuyAAAAAAAAAAAAAAuyAAAAAAAAC8IAAAAAAAAAAAAAC8IAAAAAAAAL0gAAAAAAAAAAAAAL0gAAAAAAAAviAAAAAAAAAAAAAAviAAAAAAAAC/IAAAAAAAAAAAAAC/IAAAAAAAAMAgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtCAAAAAAAAC0IAAAAAAAAAAAAAAAAPC/"
				],
				[
					3148,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMEgAAAAAAAAwiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwSAAAAAAAADBIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3149,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMIgAAAAAAAAwyAAAAAAAAAAAAAAwyAAAAAAAADFIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwiAAAAAAAADCIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3152,
					1,
					"insert",
					{
						"characters": "closure"
					},
					"BwAAAMUgAAAAAAAAxiAAAAAAAAAAAAAAxiAAAAAAAADHIAAAAAAAAAAAAADHIAAAAAAAAMggAAAAAAAAAAAAAMggAAAAAAAAySAAAAAAAAAAAAAAySAAAAAAAADKIAAAAAAAAAAAAADKIAAAAAAAAMsgAAAAAAAAAAAAAMsgAAAAAAAAzCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxSAAAAAAAADFIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3153,
					7,
					"left_delete",
					null,
					"BwAAAMsgAAAAAAAAyyAAAAAAAAABAAAAZcogAAAAAAAAyiAAAAAAAAABAAAAcskgAAAAAAAAySAAAAAAAAABAAAAdcggAAAAAAAAyCAAAAAAAAABAAAAc8cgAAAAAAAAxyAAAAAAAAABAAAAb8YgAAAAAAAAxiAAAAAAAAABAAAAbMUgAAAAAAAAxSAAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAzCAAAAAAAADMIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3154,
					1,
					"insert",
					{
						"characters": "JS_FreeValue"
					},
					"DAAAAMUgAAAAAAAAxiAAAAAAAAAAAAAAxiAAAAAAAADHIAAAAAAAAAAAAADHIAAAAAAAAMggAAAAAAAAAAAAAMggAAAAAAAAySAAAAAAAAAAAAAAySAAAAAAAADKIAAAAAAAAAAAAADKIAAAAAAAAMsgAAAAAAAAAAAAAMsgAAAAAAAAzCAAAAAAAAAAAAAAzCAAAAAAAADNIAAAAAAAAAAAAADNIAAAAAAAAM4gAAAAAAAAAAAAAM4gAAAAAAAAzyAAAAAAAAAAAAAAzyAAAAAAAADQIAAAAAAAAAAAAADQIAAAAAAAANEgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxSAAAAAAAADFIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3155,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANEgAAAAAAAA0yAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0SAAAAAAAADRIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3156,
					1,
					"insert",
					{
						"characters": "ctx"
					},
					"AwAAANIgAAAAAAAA0yAAAAAAAAAAAAAA0yAAAAAAAADUIAAAAAAAAAAAAADUIAAAAAAAANUgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0iAAAAAAAADSIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3157,
					3,
					"left_delete",
					null,
					"AwAAANQgAAAAAAAA1CAAAAAAAAABAAAAeNMgAAAAAAAA0yAAAAAAAAABAAAAdNIgAAAAAAAA0iAAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAA1SAAAAAAAADVIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3158,
					1,
					"insert",
					{
						"characters": "closure->ctx,"
					},
					"DQAAANIgAAAAAAAA0yAAAAAAAAAAAAAA0yAAAAAAAADUIAAAAAAAAAAAAADUIAAAAAAAANUgAAAAAAAAAAAAANUgAAAAAAAA1iAAAAAAAAAAAAAA1iAAAAAAAADXIAAAAAAAAAAAAADXIAAAAAAAANggAAAAAAAAAAAAANggAAAAAAAA2SAAAAAAAAAAAAAA2SAAAAAAAADaIAAAAAAAAAAAAADaIAAAAAAAANsgAAAAAAAAAAAAANsgAAAAAAAA3CAAAAAAAAAAAAAA3CAAAAAAAADdIAAAAAAAAAAAAADdIAAAAAAAAN4gAAAAAAAAAAAAAN4gAAAAAAAA3yAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0iAAAAAAAADSIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3159,
					1,
					"insert",
					{
						"characters": " closure->id"
					},
					"DAAAAN8gAAAAAAAA4CAAAAAAAAAAAAAA4CAAAAAAAADhIAAAAAAAAAAAAADhIAAAAAAAAOIgAAAAAAAAAAAAAOIgAAAAAAAA4yAAAAAAAAAAAAAA4yAAAAAAAADkIAAAAAAAAAAAAADkIAAAAAAAAOUgAAAAAAAAAAAAAOUgAAAAAAAA5iAAAAAAAAAAAAAA5iAAAAAAAADnIAAAAAAAAAAAAADnIAAAAAAAAOggAAAAAAAAAAAAAOggAAAAAAAA6SAAAAAAAAAAAAAA6SAAAAAAAADqIAAAAAAAAAAAAADqIAAAAAAAAOsgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3yAAAAAAAADfIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3161,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOwgAAAAAAAA7SAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7CAAAAAAAADsIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3162,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAO0gAAAAAAAA7iAAAAAAAAAAAAAA7iAAAAAAAADwIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7SAAAAAAAADtIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3172,
					1,
					"paste",
					null,
					"AQAAAPAgAAAAAAAAIyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8CAAAAAAAADwIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3181,
					1,
					"insert",
					{
						"characters": "closure->"
					},
					"CQAAABQhAAAAAAAAFSEAAAAAAAAAAAAAFSEAAAAAAAAWIQAAAAAAAAAAAAAWIQAAAAAAABchAAAAAAAAAAAAABchAAAAAAAAGCEAAAAAAAAAAAAAGCEAAAAAAAAZIQAAAAAAAAAAAAAZIQAAAAAAABohAAAAAAAAAAAAABohAAAAAAAAGyEAAAAAAAAAAAAAGyEAAAAAAAAcIQAAAAAAAAAAAAAcIQAAAAAAAB0hAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFCEAAAAAAAAUIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3184,
					1,
					"insert",
					{
						"characters": "closure->"
					},
					"CQAAACchAAAAAAAAKCEAAAAAAAAAAAAAKCEAAAAAAAApIQAAAAAAAAAAAAApIQAAAAAAACohAAAAAAAAAAAAACohAAAAAAAAKyEAAAAAAAAAAAAAKyEAAAAAAAAsIQAAAAAAAAAAAAAsIQAAAAAAAC0hAAAAAAAAAAAAAC0hAAAAAAAALiEAAAAAAAAAAAAALiEAAAAAAAAvIQAAAAAAAAAAAAAvIQAAAAAAADAhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJyEAAAAAAAAnIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3189,
					1,
					"insert",
					{
						"characters": "closure->"
					},
					"CQAAAA8hAAAAAAAAECEAAAAAAAAAAAAAECEAAAAAAAARIQAAAAAAAAAAAAARIQAAAAAAABIhAAAAAAAAAAAAABIhAAAAAAAAEyEAAAAAAAAAAAAAEyEAAAAAAAAUIQAAAAAAAAAAAAAUIQAAAAAAABUhAAAAAAAAAAAAABUhAAAAAAAAFiEAAAAAAAAAAAAAFiEAAAAAAAAXIQAAAAAAAAAAAAAXIQAAAAAAABghAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADyEAAAAAAAAPIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3195,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAD0hAAAAAAAAPiEAAAAAAAAAAAAAPiEAAAAAAABCIQAAAAAAAAAAAABCIQAAAAAAAEMhAAAAAAAAAAAAAD4hAAAAAAAAPiEAAAAAAAAEAAAAICAgID4hAAAAAAAAQCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPSEAAAAAAAA9IQAAAAAAAAAAAAAAAPC/"
				],
				[
					3199,
					1,
					"left_delete",
					null,
					"AQAAAEIhAAAAAAAAQiEAAAAAAACmAQAACiAgc3RydWN0IFRpbWVyQ2xvc3VyZSogY2xvc3VyZTsKICBKU1ZhbHVlIGNhbGxiYWNrLCBpZF92YWx1ZTsKCiAgaWYoIShjbG9zdXJlID0ganNfbWFsbG9jKGN0eCwgc2l6ZW9mKHN0cnVjdCBUaW1lckNsb3N1cmUpKSkpCiAgICByZXR1cm4gMDsKCiAgY2xvc3VyZS0+Y3R4ID0gY3R4OwogIGNsb3N1cmUtPmludGVydmFsID0gbXM7CiAgY2xvc3VyZS0+aGFuZGxlciA9IEpTX0R1cFZhbHVlKGN0eCwgZm4pOwoKICBjYWxsYmFjayA9IEpTX05ld0NDbG9zdXJlKGN0eCwganNfdGltZXJfY2FsbGJhY2ssIDAsIDAsIGNsb3N1cmUsIGpzX3RpbWVyX2ZyZWUpOwoKICBjbG9zdXJlLT5pZCA9IGpzX3RpbWVyX3N0YXJ0KGN0eCwgY2FsbGJhY2ssIG1zKTsKICBjbG9zdXJlLT5jYWxsYmFjayA9IGNhbGxiYWNrOwoKICByZXR1cm4gY2xvc3VyZTsKfQo",
					"AQAAAAAAAAABAAAAQiEAAAAAAADoIgAAAAAAAAAAAAAAAAAA"
				],
				[
					3202,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAQiEAAAAAAABCIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3217,
					2,
					"left_delete",
					null,
					"AgAAADQhAAAAAAAANCEAAAAAAAABAAAAczMhAAAAAAAAMyEAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAANSEAAAAAAAA1IQAAAAAAAAAAAAAAAPC/"
				],
				[
					3218,
					1,
					"insert",
					{
						"characters": "interval"
					},
					"CAAAADMhAAAAAAAANCEAAAAAAAAAAAAANCEAAAAAAAA1IQAAAAAAAAAAAAA1IQAAAAAAADYhAAAAAAAAAAAAADYhAAAAAAAANyEAAAAAAAAAAAAANyEAAAAAAAA4IQAAAAAAAAAAAAA4IQAAAAAAADkhAAAAAAAAAAAAADkhAAAAAAAAOiEAAAAAAAAAAAAAOiEAAAAAAAA7IQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMyEAAAAAAAAzIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3240,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANUeAAAAAAAA1h4AAAAAAAAAAAAA1h4AAAAAAADWHgAAAAAAAB4AAAAgIEpTVmFsdWUgY2FsbGJhY2ssIGlkX3ZhbHVlOwo",
					"AQAAAAAAAAABAAAA1R4AAAAAAADzHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3264,
					1,
					"paste",
					null,
					"AQAAAIIfAAAAAAAAix8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgh8AAAAAAACCHwAAAAAAAAAAAAAAAPC/"
				],
				[
					3271,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABEgAAAAAAAAEiAAAAAAAAAAAAAAEiAAAAAAAAASIAAAAAAAACAAAAAgIGNsb3N1cmUtPmNhbGxiYWNrID0gY2FsbGJhY2s7Cg",
					"AQAAAAAAAAABAAAAESAAAAAAAAAxIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3276,
					1,
					"delete_blank_lines",
					{
						"surplus": false
					},
					"AQAAAIAfAAAAAAAA2x8AAAAAAABdAAAACiBjbG9zdXJlLT4gY2FsbGJhY2sgPSBKU19OZXdDQ2xvc3VyZShjdHgsIGpzX3RpbWVyX2NhbGxiYWNrLCAwLCAwLCBjbG9zdXJlLCBqc190aW1lcl9mcmVlKTsK",
					"AQAAAAAAAAABAAAAgB8AAAAAAADdHwAAAAAAAAAAAAAAAPC/"
				],
				[
					3285,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAECAAAAAAAAAQIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3291,
					1,
					"paste",
					null,
					"AQAAAP8fAAAAAAAACCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/x8AAAAAAAD/HwAAAAAAAAAAAAAAAPC/"
				],
				[
					3304,
					1,
					"cut",
					null,
					"AQAAACQfAAAAAAAAJB8AAAAAAAAWAAAAICBjbG9zdXJlLT5jdHggPSBjdHg7Cg",
					"AQAAAAAAAAABAAAAJB8AAAAAAAA6HwAAAAAAAAAAAAAAAPC/"
				],
				[
					3305,
					2,
					"paste",
					null,
					"AgAAACQfAAAAAAAAOh8AAAAAAAAAAAAAOh8AAAAAAABQHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJB8AAAAAAAAkHwAAAAAAAAAAAAAAAPC/"
				],
				[
					3310,
					1,
					"insert",
					{
						"characters": "ref_count"
					},
					"CgAAAC8fAAAAAAAAMB8AAAAAAAAAAAAAMB8AAAAAAAAwHwAAAAAAAAMAAABjdHgwHwAAAAAAADEfAAAAAAAAAAAAADEfAAAAAAAAMh8AAAAAAAAAAAAAMh8AAAAAAAAzHwAAAAAAAAAAAAAzHwAAAAAAADQfAAAAAAAAAAAAADQfAAAAAAAANR8AAAAAAAAAAAAANR8AAAAAAAA2HwAAAAAAAAAAAAA2HwAAAAAAADcfAAAAAAAAAAAAADcfAAAAAAAAOB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALx8AAAAAAAAyHwAAAAAAAAAAAAAAAPC/"
				],
				[
					3312,
					3,
					"right_delete",
					null,
					"AwAAADsfAAAAAAAAOx8AAAAAAAABAAAAYzsfAAAAAAAAOx8AAAAAAAABAAAAdDsfAAAAAAAAOx8AAAAAAAABAAAAeA",
					"AQAAAAAAAAABAAAAOx8AAAAAAAA7HwAAAAAAAAAAAAAAAPC/"
				],
				[
					3313,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAADsfAAAAAAAAPB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOx8AAAAAAAA7HwAAAAAAAAAAAAAAAPC/"
				],
				[
					3337,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAF8cAAAAAAAAYBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXxwAAAAAAABfHAAAAAAAAAAAAAAAAPC/"
				],
				[
					3338,
					1,
					"left_delete",
					null,
					"AQAAAF8cAAAAAAAAXxwAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAYBwAAAAAAABgHAAAAAAAAAAAAAAAAPC/"
				],
				[
					3340,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAF4cAAAAAAAAXxwAAAAAAAAAAAAAXxwAAAAAAABhHAAAAAAAAAAAAABhHAAAAAAAAGIcAAAAAAAAAAAAAGIcAAAAAAAAZBwAAAAAAAAAAAAAXxwAAAAAAABfHAAAAAAAAAIAAAAgIGIcAAAAAAAAYxwAAAAAAAAAAAAAYxwAAAAAAABkHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXhwAAAAAAABeHAAAAAAAAAAAAAAAAPC/"
				],
				[
					3341,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGQcAAAAAAAAZhwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZBwAAAAAAABkHAAAAAAAAAAAAAAAAPC/"
				],
				[
					3342,
					1,
					"insert",
					{
						"characters": "--closure->ref"
					},
					"DgAAAGUcAAAAAAAAZhwAAAAAAAAAAAAAZhwAAAAAAABnHAAAAAAAAAAAAABnHAAAAAAAAGgcAAAAAAAAAAAAAGgcAAAAAAAAaRwAAAAAAAAAAAAAaRwAAAAAAABqHAAAAAAAAAAAAABqHAAAAAAAAGscAAAAAAAAAAAAAGscAAAAAAAAbBwAAAAAAAAAAAAAbBwAAAAAAABtHAAAAAAAAAAAAABtHAAAAAAAAG4cAAAAAAAAAAAAAG4cAAAAAAAAbxwAAAAAAAAAAAAAbxwAAAAAAABwHAAAAAAAAAAAAABwHAAAAAAAAHEcAAAAAAAAAAAAAHEcAAAAAAAAchwAAAAAAAAAAAAAchwAAAAAAABzHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZRwAAAAAAABlHAAAAAAAAAAAAAAAAPC/"
				],
				[
					3343,
					1,
					"insert",
					{
						"characters": "_count"
					},
					"BgAAAHMcAAAAAAAAdBwAAAAAAAAAAAAAdBwAAAAAAAB1HAAAAAAAAAAAAAB1HAAAAAAAAHYcAAAAAAAAAAAAAHYcAAAAAAAAdxwAAAAAAAAAAAAAdxwAAAAAAAB4HAAAAAAAAAAAAAB4HAAAAAAAAHkcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcxwAAAAAAABzHAAAAAAAAAAAAAAAAPC/"
				],
				[
					3344,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAHkcAAAAAAAAehwAAAAAAAAAAAAAehwAAAAAAAB7HAAAAAAAAAAAAAB7HAAAAAAAAHwcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeRwAAAAAAAB5HAAAAAAAAAAAAAAAAPC/"
				],
				[
					3345,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAHwcAAAAAAAAfRwAAAAAAAAAAAAAfRwAAAAAAAB+HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfBwAAAAAAAB8HAAAAAAAAAAAAAAAAPC/"
				],
				[
					3347,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAH8cAAAAAAAAgBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfxwAAAAAAAB/HAAAAAAAAAAAAAAAAPC/"
				],
				[
					3348,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIAcAAAAAAAAghwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgBwAAAAAAACAHAAAAAAAAAAAAAAAAPC/"
				],
				[
					3349,
					1,
					"right_delete",
					null,
					"AQAAAIEcAAAAAAAAgRwAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAgRwAAAAAAACBHAAAAAAAAAAAAAAAAPC/"
				],
				[
					3351,
					1,
					"left_delete",
					null,
					"AQAAAIEcAAAAAAAAgRwAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAghwAAAAAAACCHAAAAAAAAAAAAAAAoHRA"
				],
				[
					3354,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAAwdAAAAAAAADR0AAAAAAAAAAAAADR0AAAAAAAAPHQAAAAAAAAAAAAAPHQAAAAAAABAdAAAAAAAAAAAAAA0dAAAAAAAADR0AAAAAAAACAAAAICANHQAAAAAAAA0dAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADB0AAAAAAAAMHQAAAAAAAAAAAAAAoHRA"
				],
				[
					3356,
					1,
					"indent",
					null,
					"BQAAAIIcAAAAAAAAhBwAAAAAAAAAAAAAphwAAAAAAACoHAAAAAAAAAAAAADPHAAAAAAAANEcAAAAAAAAAAAAAPocAAAAAAAA/BwAAAAAAAAAAAAAFR0AAAAAAAAXHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADh0AAAAAAACDHAAAAAAAAAAAAAAAACRA"
				],
				[
					3383,
					1,
					"",
					null,
					"AwAAAO0bAAAAAAAA+RsAAAAAAAALAAAASlNGcmVlVmFsdWXKGwAAAAAAANYbAAAAAAAACwAAAEpTRnJlZVZhbHVl3RoAAAAAAADpGgAAAAAAAAsAAABKU0ZyZWVWYWx1ZQ",
					"AQAAAAAAAAABAAAA3RoAAAAAAADoGgAAAAAAAAAAAAAAAPC/"
				],
				[
					3413,
					1,
					"insert",
					{
						"characters": "\nJSValueConst"
					},
					"DgAAANAdAAAAAAAA0R0AAAAAAAAAAAAA0R0AAAAAAADTHQAAAAAAAAAAAADTHQAAAAAAANQdAAAAAAAAAAAAANQdAAAAAAAA1R0AAAAAAAAAAAAA1R0AAAAAAADWHQAAAAAAAAAAAADWHQAAAAAAANcdAAAAAAAAAAAAANcdAAAAAAAA2B0AAAAAAAAAAAAA2B0AAAAAAADZHQAAAAAAAAAAAADZHQAAAAAAANodAAAAAAAAAAAAANodAAAAAAAA2x0AAAAAAAAAAAAA2x0AAAAAAADcHQAAAAAAAAAAAADcHQAAAAAAAN0dAAAAAAAAAAAAAN0dAAAAAAAA3h0AAAAAAAAAAAAA3h0AAAAAAADfHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0B0AAAAAAADQHQAAAAAAAAAAAAAAAPC/"
				],
				[
					3414,
					1,
					"insert",
					{
						"characters": " ars"
					},
					"BAAAAN8dAAAAAAAA4B0AAAAAAAAAAAAA4B0AAAAAAADhHQAAAAAAAAAAAADhHQAAAAAAAOIdAAAAAAAAAAAAAOIdAAAAAAAA4x0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3x0AAAAAAADfHQAAAAAAAAAAAAAAAPC/"
				],
				[
					3415,
					1,
					"left_delete",
					null,
					"AQAAAOIdAAAAAAAA4h0AAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA4x0AAAAAAADjHQAAAAAAAAAAAAAAAPC/"
				],
				[
					3416,
					1,
					"insert",
					{
						"characters": "gs="
					},
					"AwAAAOIdAAAAAAAA4x0AAAAAAAAAAAAA4x0AAAAAAADkHQAAAAAAAAAAAADkHQAAAAAAAOUdAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4h0AAAAAAADiHQAAAAAAAAAAAAAAAPC/"
				],
				[
					3417,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAOUdAAAAAAAA5x0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5R0AAAAAAADlHQAAAAAAAAAAAAAAAPC/"
				],
				[
					3418,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAOUdAAAAAAAA5R0AAAAAAAABAAAAW+UdAAAAAAAA5R0AAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAA5h0AAAAAAADmHQAAAAAAAAAAAAAAAPC/"
				],
				[
					3419,
					1,
					"left_delete",
					null,
					"AQAAAOQdAAAAAAAA5B0AAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAA5R0AAAAAAADlHQAAAAAAAAAAAAAAAPC/"
				],
				[
					3420,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAOQdAAAAAAAA5h0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5B0AAAAAAADkHQAAAAAAAAAAAAAAAPC/"
				],
				[
					3422,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAOYdAAAAAAAA5x0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5h0AAAAAAADmHQAAAAAAAAAAAAAAAPC/"
				],
				[
					3423,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOcdAAAAAAAA6R0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5x0AAAAAAADnHQAAAAAAAAAAAAAAAPC/"
				],
				[
					3424,
					1,
					"insert",
					{
						"characters": "closure->id,"
					},
					"DAAAAOgdAAAAAAAA6R0AAAAAAAAAAAAA6R0AAAAAAADqHQAAAAAAAAAAAADqHQAAAAAAAOsdAAAAAAAAAAAAAOsdAAAAAAAA7B0AAAAAAAAAAAAA7B0AAAAAAADtHQAAAAAAAAAAAADtHQAAAAAAAO4dAAAAAAAAAAAAAO4dAAAAAAAA7x0AAAAAAAAAAAAA7x0AAAAAAADwHQAAAAAAAAAAAADwHQAAAAAAAPEdAAAAAAAAAAAAAPEdAAAAAAAA8h0AAAAAAAAAAAAA8h0AAAAAAADzHQAAAAAAAAAAAADzHQAAAAAAAPQdAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6B0AAAAAAADoHQAAAAAAAAAAAAAAAPC/"
				],
				[
					3425,
					1,
					"insert",
					{
						"characters": "closure->handler"
					},
					"EAAAAPQdAAAAAAAA9R0AAAAAAAAAAAAA9R0AAAAAAAD2HQAAAAAAAAAAAAD2HQAAAAAAAPcdAAAAAAAAAAAAAPcdAAAAAAAA+B0AAAAAAAAAAAAA+B0AAAAAAAD5HQAAAAAAAAAAAAD5HQAAAAAAAPodAAAAAAAAAAAAAPodAAAAAAAA+x0AAAAAAAAAAAAA+x0AAAAAAAD8HQAAAAAAAAAAAAD8HQAAAAAAAP0dAAAAAAAAAAAAAP0dAAAAAAAA/h0AAAAAAAAAAAAA/h0AAAAAAAD/HQAAAAAAAAAAAAD/HQAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAR4AAAAAAAAAAAAAAR4AAAAAAAACHgAAAAAAAAAAAAACHgAAAAAAAAMeAAAAAAAAAAAAAAMeAAAAAAAABB4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9B0AAAAAAAD0HQAAAAAAAAAAAAAAAPC/"
				],
				[
					3426,
					1,
					"insert",
					{
						"characters": ",closure-ö"
					},
					"CgAAAAQeAAAAAAAABR4AAAAAAAAAAAAABR4AAAAAAAAGHgAAAAAAAAAAAAAGHgAAAAAAAAceAAAAAAAAAAAAAAceAAAAAAAACB4AAAAAAAAAAAAACB4AAAAAAAAJHgAAAAAAAAAAAAAJHgAAAAAAAAoeAAAAAAAAAAAAAAoeAAAAAAAACx4AAAAAAAAAAAAACx4AAAAAAAAMHgAAAAAAAAAAAAAMHgAAAAAAAA0eAAAAAAAAAAAAAA0eAAAAAAAADh4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABB4AAAAAAAAEHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3427,
					1,
					"left_delete",
					null,
					"AQAAAA0eAAAAAAAADR4AAAAAAAACAAAAw7Y",
					"AQAAAAAAAAABAAAADh4AAAAAAAAOHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3428,
					1,
					"insert",
					{
						"characters": ">callback"
					},
					"CQAAAA0eAAAAAAAADh4AAAAAAAAAAAAADh4AAAAAAAAPHgAAAAAAAAAAAAAPHgAAAAAAABAeAAAAAAAAAAAAABAeAAAAAAAAER4AAAAAAAAAAAAAER4AAAAAAAASHgAAAAAAAAAAAAASHgAAAAAAABMeAAAAAAAAAAAAABMeAAAAAAAAFB4AAAAAAAAAAAAAFB4AAAAAAAAVHgAAAAAAAAAAAAAVHgAAAAAAABYeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADR4AAAAAAAANHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3430,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABceAAAAAAAAGB4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFx4AAAAAAAAXHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3431,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABgeAAAAAAAAGR4AAAAAAAAAAAAAGR4AAAAAAAAbHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGB4AAAAAAAAYHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3459,
					1,
					"insert",
					{
						"characters": ","
					},
					"AgAAABYeAAAAAAAAFx4AAAAAAAAAAAAAGh4AAAAAAAAaHgAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAAFh4AAAAAAAAWHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3460,
					1,
					"insert",
					{
						"characters": " S"
					},
					"AgAAABceAAAAAAAAGB4AAAAAAAAAAAAAGB4AAAAAAAAZHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFx4AAAAAAAAXHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3461,
					1,
					"left_delete",
					null,
					"AQAAABgeAAAAAAAAGB4AAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAAGR4AAAAAAAAZHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3462,
					1,
					"insert",
					{
						"characters": "KS"
					},
					"AgAAABgeAAAAAAAAGR4AAAAAAAAAAAAAGR4AAAAAAAAaHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGB4AAAAAAAAYHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3463,
					2,
					"left_delete",
					null,
					"AgAAABkeAAAAAAAAGR4AAAAAAAABAAAAUxgeAAAAAAAAGB4AAAAAAAABAAAASw",
					"AQAAAAAAAAABAAAAGh4AAAAAAAAaHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3464,
					1,
					"insert",
					{
						"characters": "JS_NewI"
					},
					"BwAAABgeAAAAAAAAGR4AAAAAAAAAAAAAGR4AAAAAAAAaHgAAAAAAAAAAAAAaHgAAAAAAABseAAAAAAAAAAAAABseAAAAAAAAHB4AAAAAAAAAAAAAHB4AAAAAAAAdHgAAAAAAAAAAAAAdHgAAAAAAAB4eAAAAAAAAAAAAAB4eAAAAAAAAHx4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGB4AAAAAAAAYHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3465,
					1,
					"left_delete",
					null,
					"AQAAAB4eAAAAAAAAHh4AAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAAHx4AAAAAAAAfHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3466,
					1,
					"insert",
					{
						"characters": "Uint32"
					},
					"BgAAAB4eAAAAAAAAHx4AAAAAAAAAAAAAHx4AAAAAAAAgHgAAAAAAAAAAAAAgHgAAAAAAACEeAAAAAAAAAAAAACEeAAAAAAAAIh4AAAAAAAAAAAAAIh4AAAAAAAAjHgAAAAAAAAAAAAAjHgAAAAAAACQeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHh4AAAAAAAAeHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3467,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACQeAAAAAAAAJh4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJB4AAAAAAAAkHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3468,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAACUeAAAAAAAAJh4AAAAAAAAAAAAAJh4AAAAAAAAnHgAAAAAAAAAAAAAnHgAAAAAAACgeAAAAAAAAAAAAACgeAAAAAAAAKR4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJR4AAAAAAAAlHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3469,
					1,
					"insert",
					{
						"characters": " closur"
					},
					"BwAAACkeAAAAAAAAKh4AAAAAAAAAAAAAKh4AAAAAAAArHgAAAAAAAAAAAAArHgAAAAAAACweAAAAAAAAAAAAACweAAAAAAAALR4AAAAAAAAAAAAALR4AAAAAAAAuHgAAAAAAAAAAAAAuHgAAAAAAAC8eAAAAAAAAAAAAAC8eAAAAAAAAMB4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKR4AAAAAAAApHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3470,
					1,
					"insert",
					{
						"characters": "e->interva"
					},
					"CgAAADAeAAAAAAAAMR4AAAAAAAAAAAAAMR4AAAAAAAAyHgAAAAAAAAAAAAAyHgAAAAAAADMeAAAAAAAAAAAAADMeAAAAAAAANB4AAAAAAAAAAAAANB4AAAAAAAA1HgAAAAAAAAAAAAA1HgAAAAAAADYeAAAAAAAAAAAAADYeAAAAAAAANx4AAAAAAAAAAAAANx4AAAAAAAA4HgAAAAAAAAAAAAA4HgAAAAAAADkeAAAAAAAAAAAAADkeAAAAAAAAOh4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMB4AAAAAAAAwHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3471,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAADoeAAAAAAAAOx4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOh4AAAAAAAA6HgAAAAAAAAAAAAAAAPC/"
				],
				[
					3479,
					1,
					"insert",
					{
						"characters": "4,"
					},
					"AgAAAHEeAAAAAAAAch4AAAAAAAAAAAAAch4AAAAAAABzHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcR4AAAAAAABxHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3480,
					1,
					"insert",
					{
						"characters": " args)"
					},
					"BgAAAHMeAAAAAAAAdB4AAAAAAAAAAAAAdB4AAAAAAAB1HgAAAAAAAAAAAAB1HgAAAAAAAHYeAAAAAAAAAAAAAHYeAAAAAAAAdx4AAAAAAAAAAAAAdx4AAAAAAAB4HgAAAAAAAAAAAAB4HgAAAAAAAHkeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcx4AAAAAAABzHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3484,
					1,
					"left_delete",
					null,
					"AQAAAHkeAAAAAAAAeR4AAAAAAAALAAAAYXJnYywgYXJndik",
					"AQAAAAAAAAABAAAAeR4AAAAAAACEHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3486,
					1,
					"insert",
					{
						"characters": "counf"
					},
					"BQAAAHEeAAAAAAAAch4AAAAAAAAAAAAAch4AAAAAAABzHgAAAAAAAAAAAABzHgAAAAAAAHQeAAAAAAAAAAAAAHQeAAAAAAAAdR4AAAAAAAAAAAAAdR4AAAAAAAB2HgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcR4AAAAAAABxHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3487,
					1,
					"left_delete",
					null,
					"AQAAAHUeAAAAAAAAdR4AAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAdh4AAAAAAAB2HgAAAAAAAAAAAAAAAPC/"
				],
				[
					3488,
					1,
					"insert",
					{
						"characters": "tof(args)"
					},
					"CQAAAHUeAAAAAAAAdh4AAAAAAAAAAAAAdh4AAAAAAAB3HgAAAAAAAAAAAAB3HgAAAAAAAHgeAAAAAAAAAAAAAHgeAAAAAAAAeR4AAAAAAAAAAAAAeR4AAAAAAAB6HgAAAAAAAAAAAAB6HgAAAAAAAHseAAAAAAAAAAAAAHseAAAAAAAAfB4AAAAAAAAAAAAAfB4AAAAAAAB9HgAAAAAAAAAAAAB9HgAAAAAAAH4eAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdR4AAAAAAAB1HgAAAAAAAAAAAAAAAPC/"
				],
				[
					3489,
					1,
					"right_delete",
					null,
					"AQAAAH4eAAAAAAAAfh4AAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAAfh4AAAAAAAB+HgAAAAAAAAAAAAAAAPC/"
				],
				[
					3492,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAfh4AAAAAAAB+HgAAAAAAAAAAAAAAAPC/"
				],
				[
					3532,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAIoeAAAAAAAAix4AAAAAAAAAAAAAix4AAAAAAACNHgAAAAAAAAAAAACNHgAAAAAAAI4eAAAAAAAAAAAAAI4eAAAAAAAAkB4AAAAAAAAAAAAAix4AAAAAAACLHgAAAAAAAAIAAAAgII4eAAAAAAAAjx4AAAAAAAAAAAAAjx4AAAAAAACQHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAih4AAAAAAACKHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3533,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJAeAAAAAAAAkh4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkB4AAAAAAACQHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3534,
					1,
					"insert",
					{
						"characters": "JS_ToBool"
					},
					"CQAAAJEeAAAAAAAAkh4AAAAAAAAAAAAAkh4AAAAAAACTHgAAAAAAAAAAAACTHgAAAAAAAJQeAAAAAAAAAAAAAJQeAAAAAAAAlR4AAAAAAAAAAAAAlR4AAAAAAACWHgAAAAAAAAAAAACWHgAAAAAAAJceAAAAAAAAAAAAAJceAAAAAAAAmB4AAAAAAAAAAAAAmB4AAAAAAACZHgAAAAAAAAAAAACZHgAAAAAAAJoeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkR4AAAAAAACRHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3535,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJoeAAAAAAAAnB4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmh4AAAAAAACaHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3536,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAJseAAAAAAAAnB4AAAAAAAAAAAAAnB4AAAAAAACdHgAAAAAAAAAAAACdHgAAAAAAAJ4eAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmx4AAAAAAACbHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3540,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAJseAAAAAAAAnB4AAAAAAAAAAAAAnB4AAAAAAACdHgAAAAAAAAAAAACdHgAAAAAAAJ4eAAAAAAAAAAAAAJ4eAAAAAAAAnx4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmx4AAAAAAACbHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3542,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAJEeAAAAAAAAkh4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkR4AAAAAAACRHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3545,
					1,
					"left_delete",
					null,
					"AQAAAJEeAAAAAAAAkR4AAAAAAAABAAAAIQ",
					"AQAAAAAAAAABAAAAkh4AAAAAAACSHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3546,
					1,
					"insert",
					{
						"characters": "JS_IsBool(r"
					},
					"CwAAAJEeAAAAAAAAkh4AAAAAAAAAAAAAkh4AAAAAAACTHgAAAAAAAAAAAACTHgAAAAAAAJQeAAAAAAAAAAAAAJQeAAAAAAAAlR4AAAAAAAAAAAAAlR4AAAAAAACWHgAAAAAAAAAAAACWHgAAAAAAAJceAAAAAAAAAAAAAJceAAAAAAAAmB4AAAAAAAAAAAAAmB4AAAAAAACZHgAAAAAAAAAAAACZHgAAAAAAAJoeAAAAAAAAAAAAAJoeAAAAAAAAmx4AAAAAAAAAAAAAmx4AAAAAAACcHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkR4AAAAAAACRHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3547,
					1,
					"insert",
					{
						"characters": "et)"
					},
					"AwAAAJweAAAAAAAAnR4AAAAAAAAAAAAAnR4AAAAAAACeHgAAAAAAAAAAAACeHgAAAAAAAJ8eAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnB4AAAAAAACcHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3548,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAJ8eAAAAAAAAoB4AAAAAAAAAAAAAoB4AAAAAAAChHgAAAAAAAAAAAAChHgAAAAAAAKIeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnx4AAAAAAACfHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3549,
					1,
					"insert",
					{
						"characters": " !"
					},
					"AgAAAKIeAAAAAAAAox4AAAAAAAAAAAAAox4AAAAAAACkHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoh4AAAAAAACiHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3551,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALceAAAAAAAAuR4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtx4AAAAAAAC3HgAAAAAAAP///////+9/"
				],
				[
					3554,
					1,
					"insert",
					{
						"characters": "!("
					},
					"AgAAAJEeAAAAAAAAkh4AAAAAAAAAAAAAkh4AAAAAAACTHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkR4AAAAAAACRHgAAAAAAAAAAAAAAAPC/"
				],
				[
					3557,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAALkeAAAAAAAAuh4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuR4AAAAAAAC5HgAAAAAAAAAAAAAAAPC/"
				],
				[
					3558,
					2,
					"left_delete",
					null,
					"AgAAALkeAAAAAAAAuR4AAAAAAAABAAAAKbgeAAAAAAAAuB4AAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAuh4AAAAAAAC6HgAAAAAAAAAAAAAAAPC/"
				],
				[
					3559,
					1,
					"insert",
					{
						"characters": "))"
					},
					"AgAAALgeAAAAAAAAuR4AAAAAAAAAAAAAuR4AAAAAAAC6HgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuB4AAAAAAAC4HgAAAAAAAAAAAAAAAPC/"
				],
				[
					3560,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALoeAAAAAAAAux4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuh4AAAAAAAC6HgAAAAAAAAAAAAAAAPC/"
				],
				[
					3562,
					1,
					"right_delete",
					null,
					"AQAAALweAAAAAAAAvB4AAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAvB4AAAAAAAC8HgAAAAAAAAAAAAAAAPC/"
				],
				[
					3564,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAACsfAAAAAAAALB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKx8AAAAAAAArHwAAAAAAAAAAAAAAAH5A"
				],
				[
					3565,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACwfAAAAAAAALR8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALB8AAAAAAAAsHwAAAAAAAAAAAAAAAPC/"
				],
				[
					3567,
					1,
					"left_delete",
					null,
					"AQAAALweAAAAAAAAvB4AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAvR4AAAAAAAC9HgAAAAAAAAAAAAAAAAAA"
				],
				[
					3572,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAvB4AAAAAAAC8HgAAAAAAAAAAAAAAAPC/"
				],
				[
					3577,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAMyEAAAAAAABDIQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "libwebsockets/minimal-examples/http-server/minimal-http-server-eventlib-custom/minimal-http-server.c",
			"settings":
			{
				"buffer_size": 11288,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "cmake/BuildLibwebsockets.cmake",
			"settings":
			{
				"buffer_size": 14137,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					26,
					1,
					"right_delete",
					null,
					"AQAAAO4PAAAAAAAA7g8AAAAAAAA4AAAALURMV1NfT1BFTlNTTF9JTkNMVURFX0RJUlM6U1RSSU5HPSR7T1BFTlNTTF9JTkNMVURFX0RJUn0",
					"AQAAAAAAAAABAAAA7g8AAAAAAAAmEAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"cut",
					null,
					"AQAAALkPAAAAAAAAuQ8AAAAAAAA0AAAAIC1ETFdTX09QRU5TU0xfTElCUkFSSUVTOlNUUklORz0ke09QRU5TU0xfTElCUkFSSUVTfQ",
					"AQAAAAAAAAABAAAAuQ8AAAAAAADtDwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					2,
					"paste",
					null,
					"AgAAALkPAAAAAAAA7Q8AAAAAAAAAAAAA7Q8AAAAAAAAhEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQ8AAAAAAAC5DwAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"paste",
					null,
					"AgAAAPAPAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABEAAAAAAAABUAAABMV1NfT1BFTlNTTF9MSUJSQVJJRVM",
					"AQAAAAAAAAABAAAA8A8AAAAAAAAFEAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAMRAAAAAAAABBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAxEAAAAAAAADEQAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"paste",
					null,
					"AQAAAAQRAAAAAAAAbhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABBEAAAAAAAAEEQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAACMRAAAAAAAAJBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIxEAAAAAAAAjEQAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAADoRAAAAAAAAOxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOhEAAAAAAAA6EQAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAHARAAAAAAAAchEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcBEAAAAAAABwEQAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"right_delete",
					null,
					"AQAAAHERAAAAAAAAcREAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAcREAAAAAAABxEQAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAFoRAAAAAAAAWxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWhEAAAAAAABaEQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAALoPAAAAAAAAuw8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAug8AAAAAAAC6DwAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAO4PAAAAAAAA7w8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7g8AAAAAAADuDwAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAPAPAAAAAAAA8Q8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8A8AAAAAAADwDwAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAACAQAAAAAAAAIRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIBAAAAAAAAAgEAAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"right_delete",
					null,
					"AQAAACEQAAAAAAAAIRAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAIRAAAAAAAAAhEAAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"cut",
					null,
					"AQAAAF0RAAAAAAAAXREAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAXhEAAAAAAABdEQAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"paste",
					null,
					"AQAAAD8RAAAAAAAAQBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPxEAAAAAAAA/EQAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"cut",
					null,
					"AQAAACYRAAAAAAAAJhEAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAJhEAAAAAAAAnEQAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"paste",
					null,
					"AQAAAAgRAAAAAAAACREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACBEAAAAAAAAIEQAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"paste",
					null,
					"AQAAAAYRAAAAAAAABxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABhEAAAAAAAAGEQAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"paste",
					null,
					"AQAAAM4QAAAAAAAAzxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzhAAAAAAAADOEAAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"paste",
					null,
					"AQAAAM0QAAAAAAAAzhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzRAAAAAAAADNEAAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"paste",
					null,
					"AQAAAJUQAAAAAAAAlhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlRAAAAAAAACVEAAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"paste",
					null,
					"AQAAAPARAAAAAAAA8REAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8BEAAAAAAADwEQAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAACoSAAAAAAAAKxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKhIAAAAAAAAqEgAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAACwSAAAAAAAALRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALBIAAAAAAAAsEgAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAGUSAAAAAAAAZhIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZRIAAAAAAABlEgAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGYSAAAAAAAAZxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZhIAAAAAAABmEgAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"paste",
					null,
					"AQAAAGcSAAAAAAAA1hIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZxIAAAAAAABnEgAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA+xQAAAAAAAD7FAAAAAAAAAAAAAAAwHJA"
				],
				[
					201,
					1,
					"paste",
					null,
					"AQAAAHkYAAAAAAAATxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeRgAAAAAAAB5GAAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"cut",
					null,
					"AQAAAHoYAAAAAAAAehgAAAAAAADVAAAAICBpZihPUEVOU1NMX0xJQlJBUklFUykKICAgICAgICBzZXQoTElCV0VCU09DS0VUU19BUkdTICR7TElCV0VCU09DS0VUU19BUkdTfSAiLURMV1NfT1BFTlNTTF9MSUJSQVJJRVM6U1RSSU5HPSR7T1BFTlNTTF9MSUJSQVJJRVN9IiAiLURPUEVOU1NMX0xJQlJBUklFUzpTVFJJTkc9JHtPUEVOU1NMX0xJQlJBUklFU30iKQogICAgICBlbmRpZihPUEVOU1NMX0xJQlJBUklFUykK",
					"AQAAAAAAAAABAAAAehgAAAAAAABPGQAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"paste",
					null,
					"AQAAAP8XAAAAAAAA1BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/xcAAAAAAAD/FwAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "CMAKE_PREFIX_PATH"
					},
					"EgAAAAQYAAAAAAAABRgAAAAAAAAAAAAABRgAAAAAAAAFGAAAAAAAABEAAABPUEVOU1NMX0xJQlJBUklFUwUYAAAAAAAABhgAAAAAAAAAAAAABhgAAAAAAAAHGAAAAAAAAAAAAAAHGAAAAAAAAAgYAAAAAAAAAAAAAAgYAAAAAAAACRgAAAAAAAAAAAAACRgAAAAAAAAKGAAAAAAAAAAAAAAKGAAAAAAAAAsYAAAAAAAAAAAAAAsYAAAAAAAADBgAAAAAAAAAAAAADBgAAAAAAAANGAAAAAAAAAAAAAANGAAAAAAAAA4YAAAAAAAAAAAAAA4YAAAAAAAADxgAAAAAAAAAAAAADxgAAAAAAAAQGAAAAAAAAAAAAAAQGAAAAAAAABEYAAAAAAAAAAAAABEYAAAAAAAAEhgAAAAAAAAAAAAAEhgAAAAAAAATGAAAAAAAAAAAAAATGAAAAAAAABQYAAAAAAAAAAAAABQYAAAAAAAAFRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABBgAAAAAAAAVGAAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"paste",
					null,
					"AgAAAMEYAAAAAAAA0hgAAAAAAAAAAAAA0hgAAAAAAADSGAAAAAAAABEAAABPUEVOU1NMX0xJQlJBUklFUw",
					"AQAAAAAAAAABAAAAwRgAAAAAAADSGAAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"paste",
					null,
					"AgAAAE8YAAAAAAAAYBgAAAAAAAAAAAAAYBgAAAAAAABgGAAAAAAAABUAAABMV1NfT1BFTlNTTF9MSUJSQVJJRVM",
					"AQAAAAAAAAABAAAATxgAAAAAAABkGAAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"paste",
					null,
					"AgAAAGoYAAAAAAAAexgAAAAAAAAAAAAAexgAAAAAAAB7GAAAAAAAABEAAABPUEVOU1NMX0xJQlJBUklFUw",
					"AQAAAAAAAAABAAAAahgAAAAAAAB7GAAAAAAAAAAAAAAAAPC/"
				],
				[
					243,
					1,
					"right_delete",
					null,
					"AQAAAH0YAAAAAAAAfRgAAAAAAAAyAAAAICItRE9QRU5TU0xfTElCUkFSSUVTOlNUUklORz0ke09QRU5TU0xfTElCUkFSSUVTfSI",
					"AQAAAAAAAAABAAAAfRgAAAAAAACvGAAAAAAAAAAAAAAAAPC/"
				],
				[
					252,
					2,
					"unindent",
					null,
					"AgAAABcYAAAAAAAAFxgAAAAAAAACAAAAICAXGAAAAAAAABcYAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAFxgAAAAAAAAXGAAAAAAAAAAAAAAAAAAA"
				],
				[
					254,
					2,
					"unindent",
					null,
					"AgAAAHsYAAAAAAAAexgAAAAAAAACAAAAICB7GAAAAAAAAHsYAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAexgAAAAAAAB7GAAAAAAAAAAAAAAAAAAA"
				],
				[
					257,
					1,
					"cut",
					null,
					"AQAAAP8XAAAAAAAA/xcAAAAAAACXAAAAICBpZihDTUFLRV9QUkVGSVhfUEFUSCkKICAgIHNldChMSUJXRUJTT0NLRVRTX0FSR1MgJHtMSUJXRUJTT0NLRVRTX0FSR1N9ICItRENNQUtFX1BSRUZJWF9QQVRIOlNUUklORz0ke0NNQUtFX1BSRUZJWF9QQVRIfSIpCiAgZW5kaWYoQ01BS0VfUFJFRklYX1BBVEgpCg",
					"AQAAAAAAAAABAAAA/xcAAAAAAACWGAAAAAAAAAAAAAAAAAAA"
				],
				[
					258,
					2,
					"paste",
					null,
					"AgAAAP8XAAAAAAAAlhgAAAAAAAAAAAAAlhgAAAAAAAAtGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/xcAAAAAAAD/FwAAAAAAAAAAAAAAAPC/"
				],
				[
					261,
					1,
					"insert",
					{
						"characters": "LIBRARY"
					},
					"CAAAAKEYAAAAAAAAohgAAAAAAAAAAAAAohgAAAAAAACiGAAAAAAAAAYAAABQUkVGSViiGAAAAAAAAKMYAAAAAAAAAAAAAKMYAAAAAAAApBgAAAAAAAAAAAAApBgAAAAAAAClGAAAAAAAAAAAAAClGAAAAAAAAKYYAAAAAAAAAAAAAKYYAAAAAAAApxgAAAAAAAAAAAAApxgAAAAAAACoGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoRgAAAAAAACnGAAAAAAAAAAAAAAAAPC/"
				],
				[
					271,
					1,
					"paste",
					null,
					"AgAAABsZAAAAAAAALRkAAAAAAAAAAAAALRkAAAAAAAAtGQAAAAAAABEAAABDTUFLRV9QUkVGSVhfUEFUSA",
					"AQAAAAAAAAABAAAAGxkAAAAAAAAsGQAAAAAAAAAAAAAAAPC/"
				],
				[
					274,
					1,
					"paste",
					null,
					"AgAAAOMYAAAAAAAA9RgAAAAAAAAAAAAA9RgAAAAAAAD1GAAAAAAAABEAAABDTUFLRV9QUkVGSVhfUEFUSA",
					"AQAAAAAAAAABAAAA4xgAAAAAAAD0GAAAAAAAAAAAAAAAAPC/"
				],
				[
					279,
					1,
					"paste",
					null,
					"AgAAAP8YAAAAAAAAERkAAAAAAAAAAAAAERkAAAAAAAARGQAAAAAAABEAAABDTUFLRV9QUkVGSVhfUEFUSA",
					"AQAAAAAAAAABAAAA/xgAAAAAAAAQGQAAAAAAAAAAAAAAAPC/"
				],
				[
					282,
					1,
					"cut",
					null,
					"AQAAAJYYAAAAAAAAlhgAAAAAAACbAAAAICBpZihDTUFLRV9MSUJSQVJZX1BBVEgpCiAgICBzZXQoTElCV0VCU09DS0VUU19BUkdTICR7TElCV0VCU09DS0VUU19BUkdTfSAiLURDTUFLRV9MSUJSQVJZX1BBVEg6U1RSSU5HPSR7Q01BS0VfTElCUkFSWV9QQVRIfSIpCiAgZW5kaWYoQ01BS0VfTElCUkFSWV9QQVRIKQo",
					"AQAAAAAAAAABAAAAlhgAAAAAAAAxGQAAAAAAAAAAAAAAAPC/"
				],
				[
					283,
					2,
					"paste",
					null,
					"AgAAAJYYAAAAAAAAMRkAAAAAAAAAAAAAMRkAAAAAAADMGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlhgAAAAAAACWGAAAAAAAAAAAAAAAAPC/"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": "INCLUDE"
					},
					"CAAAADwZAAAAAAAAPRkAAAAAAAAAAAAAPRkAAAAAAAA9GQAAAAAAAAcAAABMSUJSQVJZPRkAAAAAAAA+GQAAAAAAAAAAAAA+GQAAAAAAAD8ZAAAAAAAAAAAAAD8ZAAAAAAAAQBkAAAAAAAAAAAAAQBkAAAAAAABBGQAAAAAAAAAAAABBGQAAAAAAAEIZAAAAAAAAAAAAAEIZAAAAAAAAQxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPBkAAAAAAABDGQAAAAAAAAAAAAAAAPC/"
				],
				[
					296,
					1,
					"paste",
					null,
					"AgAAAH4ZAAAAAAAAkBkAAAAAAAAAAAAAkBkAAAAAAACQGQAAAAAAABIAAABDTUFLRV9MSUJSQVJZX1BBVEg",
					"AQAAAAAAAAABAAAAfhkAAAAAAACQGQAAAAAAAAAAAAAAAPC/"
				],
				[
					301,
					1,
					"paste",
					null,
					"AgAAAJoZAAAAAAAArBkAAAAAAAAAAAAArBkAAAAAAACsGQAAAAAAABIAAABDTUFLRV9MSUJSQVJZX1BBVEg",
					"AQAAAAAAAAABAAAAmhkAAAAAAACsGQAAAAAAAAAAAAAAAPC/"
				],
				[
					310,
					1,
					"paste",
					null,
					"AgAAALgZAAAAAAAAyhkAAAAAAAAAAAAAyhkAAAAAAADKGQAAAAAAABIAAABDTUFLRV9MSUJSQVJZX1BBVEg",
					"AQAAAAAAAAABAAAAuBkAAAAAAADKGQAAAAAAAAAAAAAAAPC/"
				],
				[
					337,
					1,
					"right_delete",
					null,
					"AQAAAL0fAAAAAAAAvR8AAAAAAACAAAAAICAgICAgICAgICAgICAgLURMV1NfUExBVF9BTkRST0lEOkJPT0w9T0ZGCiAgICAgICAgICAgICAgIC1ETFdTX1BMQVRfRlJFRVJUT1M6Qk9PTD1PRkYKICAgICAgICAgICAgICAgLURMV1NfUExBVF9PUFRFRTpCT09MPU9GRgo",
					"AQAAAAAAAAABAAAAvR8AAAAAAAA9IAAAAAAAAAAAAAAAAAAA"
				],
				[
					354,
					1,
					"left_delete",
					null,
					"AQAAAC4fAAAAAAAALh8AAAAAAAA0AAAAICAgICAgICAgICAgICAgLURMV1NfTElOS19URVNUQVBQU19EWU5BTUlDOkJPT0w9T0ZGCg",
					"AQAAAAAAAAABAAAALh8AAAAAAABiHwAAAAAAAAAAAAAAAPC/"
				],
				[
					355,
					1,
					"insert",
					{
						"characters": "WUI"
					},
					"AwAAAC4fAAAAAAAALx8AAAAAAAAAAAAALx8AAAAAAAAwHwAAAAAAAAAAAAAwHwAAAAAAADEfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALh8AAAAAAAAuHwAAAAAAAAAAAAAAAPC/"
				],
				[
					356,
					2,
					"left_delete",
					null,
					"AgAAADAfAAAAAAAAMB8AAAAAAAABAAAASS8fAAAAAAAALx8AAAAAAAABAAAAVQ",
					"AQAAAAAAAAABAAAAMR8AAAAAAAAxHwAAAAAAAAAAAAAAAPC/"
				],
				[
					357,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAC4fAAAAAAAALh8AAAAAAAABAAAAVw",
					"AQAAAAAAAAABAAAALx8AAAAAAAAvHwAAAAAAAAAAAAAAAPC/"
				],
				[
					380,
					1,
					"cut",
					null,
					"AQAAAHIjAAAAAAAAciMAAAAAAABYAAAAICAtRExXU19XSVRIT1VUX1RFU1RfQ0xJRU5UOkJPT0w9T0ZGCiAgICAgICAgICAgICAgIC1ETFdTX1dJVEhPVVRfVEVTVF9QSU5HOkJPT0w9T0ZGCiAgIA",
					"AQAAAAAAAAABAAAAciMAAAAAAADKIwAAAAAAAAAAAAAAAD5A"
				],
				[
					383,
					1,
					"right_delete",
					null,
					"AQAAAK4jAAAAAAAAriMAAAAAAAA6AAAAICAtRExXU19XSVRIT1VUX1RFU1RfU0VSVkVSX0VYVFBPTEw6Qk9PTD1PRkYKICAgICAgICAgICAgIA",
					"AQAAAAAAAAABAAAAriMAAAAAAADoIwAAAAAAAAAAAAAAQGBA"
				],
				[
					408,
					1,
					"left_delete",
					null,
					"AQAAAE0lAAAAAAAATSUAAAAAAAA1AAAAICAgICAgICAgICAgICAgLURMV1NfV0lUSF9ERVBSRUNBVEVEX1RISU5HUzpCT09MPU9GRgo",
					"AQAAAAAAAAABAAAATSUAAAAAAACCJQAAAAAAAAAAAAAAAPC/"
				],
				[
					410,
					1,
					"left_delete",
					null,
					"AQAAACMlAAAAAAAAIyUAAAAAAAAqAAAAICAgICAgICAgICAgICAgLURMV1NfV0lUSF9DWUFTU0w6Qk9PTD1PRkYK",
					"AQAAAAAAAAABAAAATSUAAAAAAAAjJQAAAAAAAAAAAAAAAAAA"
				],
				[
					417,
					5,
					"unindent",
					null,
					"BQAAAGUjAAAAAAAAZSMAAAAAAAACAAAAICBlIwAAAAAAAGUjAAAAAAAAAgAAACAgZSMAAAAAAABlIwAAAAAAAAIAAAAgIGUjAAAAAAAAZSMAAAAAAAACAAAAICBlIwAAAAAAAGUjAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAZSMAAAAAAABlIwAAAAAAAAAAAAAAAAAA"
				],
				[
					439,
					1,
					"left_delete",
					null,
					"AQAAAEYeAAAAAAAARh4AAAAAAAA2AAAAICAgICAgICAgICAgICAgLURMV1NfQ1RFU1RfSU5URVJORVRfQVZBSUxBQkxFOkJPT0w9T04K",
					"AQAAAAAAAAABAAAARh4AAAAAAAB8HgAAAAAAAAAAAAAAAPC/"
				],
				[
					452,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAK0hAAAAAAAArSEAAAAAAAA5AAAAICAgICAgICAgICAgICAgLURMV1NfV0lUSE9VVF9CVUlMVElOX0dFVElGQUREUlM6Qk9PTD1PRkYK",
					"AQAAAAAAAAABAAAArSEAAAAAAADmIQAAAAAAAAAAAAAAAPC/"
				],
				[
					489,
					1,
					"cut",
					null,
					"AQAAALwRAAAAAAAAvBEAAAAAAAB8AQAAICAgIGlmKE9QRU5TU0xfSU5DTFVERV9ESVJTKQogICAgICAgIHNldChMSUJXRUJTT0NLRVRTX0FSR1MgJHtMSUJXRUJTT0NLRVRTX0FSR1N9ICItRExXU19PUEVOU1NMX0lOQ0xVREVfRElSUzpTVFJJTkc9JHtPUEVOU1NMX0lOQ0xVREVfRElSU30iICItRExXU19PUEVOU1NMX0lOQ0xVREVfRElSUzpTVFJJTkc9JHtPUEVOU1NMX0lOQ0xVREVfRElSfSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICItRE9QRU5TU0xfSU5DTFVERV9ESVJTOlNUUklORz0ke09QRU5TU0xfSU5DTFVERV9ESVJTfSIgIi1ET1BFTlNTTF9JTkNMVURFX0RJUlM6U1RSSU5HPSR7T1BFTlNTTF9JTkNMVURFX0RJUn0iKQogICAgICBlbmRpZihPUEVOU1NMX0lOQ0xVREVfRElSUykKICA",
					"AQAAAAAAAAABAAAAvBEAAAAAAAA4EwAAAAAAAAAAAAAAAPC/"
				],
				[
					490,
					2,
					"paste",
					null,
					"AgAAALwRAAAAAAAAOBMAAAAAAAAAAAAAOBMAAAAAAAC0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvBEAAAAAAAC8EQAAAAAAAAAAAAAAAPC/"
				],
				[
					493,
					1,
					"insert",
					{
						"characters": "EXECUTABLE"
					},
					"CwAAAEcTAAAAAAAASBMAAAAAAAAAAAAASBMAAAAAAABIEwAAAAAAAAwAAABJTkNMVURFX0RJUlNIEwAAAAAAAEkTAAAAAAAAAAAAAEkTAAAAAAAAShMAAAAAAAAAAAAAShMAAAAAAABLEwAAAAAAAAAAAABLEwAAAAAAAEwTAAAAAAAAAAAAAEwTAAAAAAAATRMAAAAAAAAAAAAATRMAAAAAAABOEwAAAAAAAAAAAABOEwAAAAAAAE8TAAAAAAAAAAAAAE8TAAAAAAAAUBMAAAAAAAAAAAAAUBMAAAAAAABREwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARxMAAAAAAABTEwAAAAAAAAAAAAAAAPC/"
				],
				[
					505,
					1,
					"paste",
					null,
					"AgAAAJoUAAAAAAAArBQAAAAAAAAAAAAArBQAAAAAAACsFAAAAAAAABQAAABPUEVOU1NMX0lOQ0xVREVfRElSUw",
					"AQAAAAAAAAABAAAAmhQAAAAAAACuFAAAAAAAAAAAAAAAAPC/"
				],
				[
					508,
					1,
					"paste",
					null,
					"AgAAAIsTAAAAAAAAnRMAAAAAAAAAAAAAnRMAAAAAAACdEwAAAAAAABgAAABMV1NfT1BFTlNTTF9JTkNMVURFX0RJUlM",
					"AQAAAAAAAAABAAAAixMAAAAAAACjEwAAAAAAAAAAAAAAAPC/"
				],
				[
					513,
					1,
					"insert",
					{
						"characters": "PATH"
					},
					"BQAAAJ4TAAAAAAAAnxMAAAAAAAAAAAAAnxMAAAAAAACfEwAAAAAAAAYAAABTVFJJTkefEwAAAAAAAKATAAAAAAAAAAAAAKATAAAAAAAAoRMAAAAAAAAAAAAAoRMAAAAAAACiEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnhMAAAAAAACkEwAAAAAAAAAAAAAAAPC/"
				],
				[
					514,
					4,
					"left_delete",
					null,
					"BAAAAKETAAAAAAAAoRMAAAAAAAABAAAASKATAAAAAAAAoBMAAAAAAAABAAAAVJ8TAAAAAAAAnxMAAAAAAAABAAAAQZ4TAAAAAAAAnhMAAAAAAAABAAAAUA",
					"AQAAAAAAAAABAAAAohMAAAAAAACiEwAAAAAAAAAAAAAAAPC/"
				],
				[
					515,
					1,
					"insert",
					{
						"characters": "FILEPATH"
					},
					"CAAAAJ4TAAAAAAAAnxMAAAAAAAAAAAAAnxMAAAAAAACgEwAAAAAAAAAAAACgEwAAAAAAAKETAAAAAAAAAAAAAKETAAAAAAAAohMAAAAAAAAAAAAAohMAAAAAAACjEwAAAAAAAAAAAACjEwAAAAAAAKQTAAAAAAAAAAAAAKQTAAAAAAAApRMAAAAAAAAAAAAApRMAAAAAAACmEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnhMAAAAAAACeEwAAAAAAAAAAAAAAAPC/"
				],
				[
					517,
					1,
					"paste",
					null,
					"AQAAAKkTAAAAAAAAuxMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqRMAAAAAAACpEwAAAAAAAAAAAAAAAPC/"
				],
				[
					519,
					1,
					"insert",
					{
						"characters": "}\");"
					},
					"BQAAALsTAAAAAAAAvBMAAAAAAAAAAAAAvBMAAAAAAAC8EwAAAAAAAFEAAABPUEVOU1NMX0lOQ0xVREVfRElSU30iICItRExXU19PUEVOU1NMX0lOQ0xVREVfRElSUzpTVFJJTkc9JHtPUEVOU1NMX0lOQ0xVREVfRElSfSK8EwAAAAAAAL0TAAAAAAAAAAAAAL0TAAAAAAAAvhMAAAAAAAAAAAAAvhMAAAAAAAC/EwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuxMAAAAAAAAMFAAAAAAAAP///////+9/"
				],
				[
					522,
					3,
					"left_delete",
					null,
					"AwAAAMATAAAAAAAAwBMAAAAAAACPAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICItRE9QRU5TU0xfSU5DTFVERV9ESVJTOlNUUklORz0ke09QRU5TU0xfSU5DTFVERV9ESVJTfSIgIi1ET1BFTlNTTF9JTkNMVURFX0RJUlM6U1RSSU5HPSR7T1BFTlNTTF9JTkNMVURFX0RJUn0iKQq/EwAAAAAAAL8TAAAAAAAAAQAAAAq+EwAAAAAAAL4TAAAAAAAAAQAAADs",
					"AQAAAAAAAAABAAAAwBMAAAAAAABPFAAAAAAAAAAAAAAAAAAA"
				],
				[
					525,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAL4TAAAAAAAAvxMAAAAAAAAAAAAAvxMAAAAAAADHEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvhMAAAAAAAC+EwAAAAAAAAAAAAAAAPC/"
				],
				[
					526,
					4,
					"unindent",
					null,
					"BAAAAL8TAAAAAAAAvxMAAAAAAAACAAAAICC/EwAAAAAAAL8TAAAAAAAAAgAAACAgvxMAAAAAAAC/EwAAAAAAAAIAAAAgIL8TAAAAAAAAvxMAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAxxMAAAAAAADHEwAAAAAAAAAAAAAAAPC/"
				],
				[
					583,
					1,
					"insert",
					{
						"characters": "TRZUE"
					},
					"BQAAAK0OAAAAAAAArg4AAAAAAAAAAAAArg4AAAAAAACvDgAAAAAAAAAAAACvDgAAAAAAALAOAAAAAAAAAAAAALAOAAAAAAAAsQ4AAAAAAAAAAAAAsQ4AAAAAAACyDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQ4AAAAAAACtDgAAAAAAAAAAAAAAAPC/"
				],
				[
					584,
					3,
					"left_delete",
					null,
					"AwAAALEOAAAAAAAAsQ4AAAAAAAABAAAARbAOAAAAAAAAsA4AAAAAAAABAAAAVa8OAAAAAAAArw4AAAAAAAABAAAAWg",
					"AQAAAAAAAAABAAAAsg4AAAAAAACyDgAAAAAAAAAAAAAAAPC/"
				],
				[
					585,
					1,
					"insert",
					{
						"characters": "UE"
					},
					"AgAAAK8OAAAAAAAAsA4AAAAAAAAAAAAAsA4AAAAAAACxDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArw4AAAAAAACvDgAAAAAAAAAAAAAAAPC/"
				],
				[
					586,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALEOAAAAAAAAsg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQ4AAAAAAACxDgAAAAAAAAAAAAAAAPC/"
				],
				[
					589,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAALoOAAAAAAAAvA4AAAAAAAAAAAAAsg4AAAAAAAC0DgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsg4AAAAAAAC6DgAAAAAAAAAAAAAAAPC/"
				],
				[
					616,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAfxoAAAAAAAB/GgAAAAAAAAAAAAAAAAAA"
				],
				[
					628,
					1,
					"insert",
					{
						"characters": ";${{"
					},
					"BAAAACoZAAAAAAAAKxkAAAAAAAAAAAAAKxkAAAAAAAAsGQAAAAAAAAAAAAAsGQAAAAAAAC0ZAAAAAAAAAAAAAC0ZAAAAAAAALhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKhkAAAAAAAAqGQAAAAAAAAAAAAAAAPC/"
				],
				[
					629,
					1,
					"left_delete",
					null,
					"AQAAAC0ZAAAAAAAALRkAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAALhkAAAAAAAAuGQAAAAAAAAAAAAAAAPC/"
				],
				[
					630,
					1,
					"insert",
					{
						"characters": "OPENSSL_ROOT_"
					},
					"DQAAAC0ZAAAAAAAALhkAAAAAAAAAAAAALhkAAAAAAAAvGQAAAAAAAAAAAAAvGQAAAAAAADAZAAAAAAAAAAAAADAZAAAAAAAAMRkAAAAAAAAAAAAAMRkAAAAAAAAyGQAAAAAAAAAAAAAyGQAAAAAAADMZAAAAAAAAAAAAADMZAAAAAAAANBkAAAAAAAAAAAAANBkAAAAAAAA1GQAAAAAAAAAAAAA1GQAAAAAAADYZAAAAAAAAAAAAADYZAAAAAAAANxkAAAAAAAAAAAAANxkAAAAAAAA4GQAAAAAAAAAAAAA4GQAAAAAAADkZAAAAAAAAAAAAADkZAAAAAAAAOhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALRkAAAAAAAAtGQAAAAAAAAAAAAAAAPC/"
				],
				[
					631,
					1,
					"insert",
					{
						"characters": "DIR}"
					},
					"BAAAADoZAAAAAAAAOxkAAAAAAAAAAAAAOxkAAAAAAAA8GQAAAAAAAAAAAAA8GQAAAAAAAD0ZAAAAAAAAAAAAAD0ZAAAAAAAAPhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOhkAAAAAAAA6GQAAAAAAAAAAAAAAAPC/"
				],
				[
					637,
					1,
					"cut",
					null,
					"AQAAACoZAAAAAAAAKhkAAAAAAAAUAAAAOyR7T1BFTlNTTF9ST09UX0RJUn0",
					"AQAAAAAAAAABAAAAPhkAAAAAAAAqGQAAAAAAAAAAAAAAAPC/"
				],
				[
					638,
					1,
					"paste",
					null,
					"AQAAACoZAAAAAAAAPhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKhkAAAAAAAAqGQAAAAAAAAAAAAAAAPC/"
				],
				[
					641,
					1,
					"paste",
					null,
					"AQAAANgZAAAAAAAA7BkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2BkAAAAAAADYGQAAAAAAAAAAAAAAAPC/"
				],
				[
					643,
					5,
					"left_delete",
					null,
					"BQAAAOcZAAAAAAAA5xkAAAAAAAABAAAAX+YZAAAAAAAA5hkAAAAAAAABAAAAVOUZAAAAAAAA5RkAAAAAAAABAAAAT+QZAAAAAAAA5BkAAAAAAAABAAAAT+MZAAAAAAAA4xkAAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAA6BkAAAAAAADoGQAAAAAAAAAAAAAAAPC/"
				],
				[
					644,
					1,
					"insert",
					{
						"characters": "LIBRARY_"
					},
					"CAAAAOMZAAAAAAAA5BkAAAAAAAAAAAAA5BkAAAAAAADlGQAAAAAAAAAAAADlGQAAAAAAAOYZAAAAAAAAAAAAAOYZAAAAAAAA5xkAAAAAAAAAAAAA5xkAAAAAAADoGQAAAAAAAAAAAADoGQAAAAAAAOkZAAAAAAAAAAAAAOkZAAAAAAAA6hkAAAAAAAAAAAAA6hkAAAAAAADrGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4xkAAAAAAADjGQAAAAAAAAAAAAAAAPC/"
				],
				[
					647,
					1,
					"paste",
					null,
					"AQAAAIoaAAAAAAAAnhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAihoAAAAAAACKGgAAAAAAAAAAAAAAAPC/"
				],
				[
					650,
					4,
					"left_delete",
					null,
					"BAAAAJgaAAAAAAAAmBoAAAAAAAABAAAAVJcaAAAAAAAAlxoAAAAAAAABAAAAT5YaAAAAAAAAlhoAAAAAAAABAAAAT5UaAAAAAAAAlRoAAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAAmRoAAAAAAACZGgAAAAAAAAAAAAAAAPC/"
				],
				[
					651,
					1,
					"insert",
					{
						"characters": "INCLUDE"
					},
					"BwAAAJUaAAAAAAAAlhoAAAAAAAAAAAAAlhoAAAAAAACXGgAAAAAAAAAAAACXGgAAAAAAAJgaAAAAAAAAAAAAAJgaAAAAAAAAmRoAAAAAAAAAAAAAmRoAAAAAAACaGgAAAAAAAAAAAACaGgAAAAAAAJsaAAAAAAAAAAAAAJsaAAAAAAAAnBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlRoAAAAAAACVGgAAAAAAAAAAAAAAAPC/"
				],
				[
					671,
					1,
					"insert",
					{
						"characters": " OR"
					},
					"AwAAACUaAAAAAAAAJhoAAAAAAAAAAAAAJhoAAAAAAAAnGgAAAAAAAAAAAAAnGgAAAAAAACgaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJRoAAAAAAAAlGgAAAAAAAAAAAAAAAPC/"
				],
				[
					672,
					1,
					"insert",
					{
						"characters": " OPENSSL_IB"
					},
					"CwAAACgaAAAAAAAAKRoAAAAAAAAAAAAAKRoAAAAAAAAqGgAAAAAAAAAAAAAqGgAAAAAAACsaAAAAAAAAAAAAACsaAAAAAAAALBoAAAAAAAAAAAAALBoAAAAAAAAtGgAAAAAAAAAAAAAtGgAAAAAAAC4aAAAAAAAAAAAAAC4aAAAAAAAALxoAAAAAAAAAAAAALxoAAAAAAAAwGgAAAAAAAAAAAAAwGgAAAAAAADEaAAAAAAAAAAAAADEaAAAAAAAAMhoAAAAAAAAAAAAAMhoAAAAAAAAzGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKBoAAAAAAAAoGgAAAAAAAAAAAAAAAPC/"
				],
				[
					673,
					1,
					"left_delete",
					null,
					"AQAAADIaAAAAAAAAMhoAAAAAAAABAAAAQg",
					"AQAAAAAAAAABAAAAMxoAAAAAAAAzGgAAAAAAAAAAAAAAAPC/"
				],
				[
					674,
					1,
					"insert",
					{
						"characters": "NCLUDE_DIR"
					},
					"CgAAADIaAAAAAAAAMxoAAAAAAAAAAAAAMxoAAAAAAAA0GgAAAAAAAAAAAAA0GgAAAAAAADUaAAAAAAAAAAAAADUaAAAAAAAANhoAAAAAAAAAAAAANhoAAAAAAAA3GgAAAAAAAAAAAAA3GgAAAAAAADgaAAAAAAAAAAAAADgaAAAAAAAAORoAAAAAAAAAAAAAORoAAAAAAAA6GgAAAAAAAAAAAAA6GgAAAAAAADsaAAAAAAAAAAAAADsaAAAAAAAAPBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMhoAAAAAAAAyGgAAAAAAAAAAAAAAAPC/"
				],
				[
					680,
					1,
					"paste",
					null,
					"AQAAAHMZAAAAAAAAiRkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcxkAAAAAAABzGQAAAAAAAAAAAAAAAPC/"
				],
				[
					683,
					2,
					"left_delete",
					null,
					"AgAAAH8ZAAAAAAAAfxkAAAAAAAAKAAAATkNMVURFX0RJUn4ZAAAAAAAAfhkAAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAAiRkAAAAAAAB/GQAAAAAAAAAAAAAAAPC/"
				],
				[
					684,
					1,
					"insert",
					{
						"characters": "LIBRARY_DIR"
					},
					"CwAAAH4ZAAAAAAAAfxkAAAAAAAAAAAAAfxkAAAAAAACAGQAAAAAAAAAAAACAGQAAAAAAAIEZAAAAAAAAAAAAAIEZAAAAAAAAghkAAAAAAAAAAAAAghkAAAAAAACDGQAAAAAAAAAAAACDGQAAAAAAAIQZAAAAAAAAAAAAAIQZAAAAAAAAhRkAAAAAAAAAAAAAhRkAAAAAAACGGQAAAAAAAAAAAACGGQAAAAAAAIcZAAAAAAAAAAAAAIcZAAAAAAAAiBkAAAAAAAAAAAAAiBkAAAAAAACJGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfhkAAAAAAAB+GQAAAAAAAAAAAAAAAPC/"
				],
				[
					689,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHMZAAAAAAAAdBkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcxkAAAAAAABzGQAAAAAAAAAAAAAAAPC/"
				],
				[
					692,
					1,
					"insert",
					{
						"characters": " OR"
					},
					"AwAAAMcYAAAAAAAAyBgAAAAAAAAAAAAAyBgAAAAAAADJGAAAAAAAAAAAAADJGAAAAAAAAMoYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxxgAAAAAAADHGAAAAAAAAAAAAAAAAPC/"
				],
				[
					693,
					1,
					"insert",
					{
						"characters": " OPENSSL_ROOT_"
					},
					"DgAAAMoYAAAAAAAAyxgAAAAAAAAAAAAAyxgAAAAAAADMGAAAAAAAAAAAAADMGAAAAAAAAM0YAAAAAAAAAAAAAM0YAAAAAAAAzhgAAAAAAAAAAAAAzhgAAAAAAADPGAAAAAAAAAAAAADPGAAAAAAAANAYAAAAAAAAAAAAANAYAAAAAAAA0RgAAAAAAAAAAAAA0RgAAAAAAADSGAAAAAAAAAAAAADSGAAAAAAAANMYAAAAAAAAAAAAANMYAAAAAAAA1BgAAAAAAAAAAAAA1BgAAAAAAADVGAAAAAAAAAAAAADVGAAAAAAAANYYAAAAAAAAAAAAANYYAAAAAAAA1xgAAAAAAAAAAAAA1xgAAAAAAADYGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyhgAAAAAAADKGAAAAAAAAAAAAAAAAPC/"
				],
				[
					694,
					1,
					"insert",
					{
						"characters": "DIR"
					},
					"AwAAANgYAAAAAAAA2RgAAAAAAAAAAAAA2RgAAAAAAADaGAAAAAAAAAAAAADaGAAAAAAAANsYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2BgAAAAAAADYGAAAAAAAAAAAAAAAAPC/"
				],
				[
					705,
					1,
					"right_delete",
					null,
					"AQAAAF0ZAAAAAAAAXRkAAAAAAAARAAAAQ01BS0VfUFJFRklYX1BBVEg",
					"AQAAAAAAAAABAAAAXRkAAAAAAABuGQAAAAAAAAAAAAAAAPC/"
				],
				[
					710,
					1,
					"right_delete",
					null,
					"AQAAABQaAAAAAAAAFBoAAAAAAAASAAAAQ01BS0VfTElCUkFSWV9QQVRI",
					"AQAAAAAAAAABAAAAFBoAAAAAAAAmGgAAAAAAAAAAAAAAAPC/"
				],
				[
					715,
					1,
					"right_delete",
					null,
					"AQAAAMsaAAAAAAAAyxoAAAAAAAASAAAAQ01BS0VfSU5DTFVERV9QQVRI",
					"AQAAAAAAAAABAAAAyxoAAAAAAADdGgAAAAAAAAAAAAAAAPC/"
				],
				[
					794,
					1,
					"cut",
					null,
					"AQAAAHcPAAAAAAAAdw8AAAAAAADTAAAAIGlmKE9QRU5TU0xfTElCUkFSSUVTKQogICAgICAgIHNldChMSUJXRUJTT0NLRVRTX0FSR1MgJHtMSUJXRUJTT0NLRVRTX0FSR1N9ICItRExXU19PUEVOU1NMX0xJQlJBUklFUzpTVFJJTkc9JHtPUEVOU1NMX0xJQlJBUklFU30iICItRE9QRU5TU0xfTElCUkFSSUVTOlNUUklORz0ke09QRU5TU0xfTElCUkFSSUVTfSIpCiAgICAgIGVuZGlmKE9QRU5TU0xfTElCUkFSSUVTKQ",
					"AQAAAAAAAAABAAAAdw8AAAAAAABKEAAAAAAAAAAAAAAAAPC/"
				],
				[
					795,
					2,
					"paste",
					null,
					"AgAAAHcPAAAAAAAAShAAAAAAAAAAAAAAShAAAAAAAAAdEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdw8AAAAAAAB3DwAAAAAAAAAAAAAAAPC/"
				],
				[
					798,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEsQAAAAAAAATBAAAAAAAAAAAAAATBAAAAAAAABSEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASxAAAAAAAABLEAAAAAAAAAAAAAAAAPC/"
				],
				[
					801,
					1,
					"insert",
					{
						"characters": "ARY_DIR"
					},
					"CAAAAGEQAAAAAAAAYhAAAAAAAAAAAAAAYhAAAAAAAABiEAAAAAAAAAUAAABBUklFU2IQAAAAAAAAYxAAAAAAAAAAAAAAYxAAAAAAAABkEAAAAAAAAAAAAABkEAAAAAAAAGUQAAAAAAAAAAAAAGUQAAAAAAAAZhAAAAAAAAAAAAAAZhAAAAAAAABnEAAAAAAAAAAAAABnEAAAAAAAAGgQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYRAAAAAAAABmEAAAAAAAAAAAAAAAAPC/"
				],
				[
					809,
					1,
					"paste",
					null,
					"AgAAAKIQAAAAAAAAtRAAAAAAAAAAAAAAtRAAAAAAAAC1EAAAAAAAABUAAABMV1NfT1BFTlNTTF9MSUJSQVJJRVM",
					"AQAAAAAAAAABAAAAohAAAAAAAAC3EAAAAAAAAAAAAAAAAPC/"
				],
				[
					814,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AgAAALYQAAAAAAAAtxAAAAAAAAAAAAAAtxAAAAAAAAC3EAAAAAAAAAYAAABTVFJJTkc",
					"AQAAAAAAAAABAAAAthAAAAAAAAC8EAAAAAAAAAAAAAAAAPC/"
				],
				[
					815,
					1,
					"left_delete",
					null,
					"AQAAALYQAAAAAAAAthAAAAAAAAABAAAARg",
					"AQAAAAAAAAABAAAAtxAAAAAAAAC3EAAAAAAAAAAAAAAAAPC/"
				],
				[
					816,
					1,
					"insert",
					{
						"characters": "PATH"
					},
					"BAAAALYQAAAAAAAAtxAAAAAAAAAAAAAAtxAAAAAAAAC4EAAAAAAAAAAAAAC4EAAAAAAAALkQAAAAAAAAAAAAALkQAAAAAAAAuhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAthAAAAAAAAC2EAAAAAAAAAAAAAAAAPC/"
				],
				[
					821,
					1,
					"paste",
					null,
					"AgAAAL0QAAAAAAAA0BAAAAAAAAAAAAAA0BAAAAAAAADQEAAAAAAAABEAAABPUEVOU1NMX0xJQlJBUklFUw",
					"AQAAAAAAAAABAAAAvRAAAAAAAADOEAAAAAAAAAAAAAAAAPC/"
				],
				[
					829,
					1,
					"insert",
					{
						"characters": "éWS"
					},
					"BAAAANYQAAAAAAAA1xAAAAAAAAAAAAAA1xAAAAAAAADXEAAAAAAAABEAAABPUEVOU1NMX0xJQlJBUklFU9cQAAAAAAAA2BAAAAAAAAAAAAAA2BAAAAAAAADZEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1hAAAAAAAADnEAAAAAAAAAAAAAAAAPC/"
				],
				[
					830,
					3,
					"left_delete",
					null,
					"AwAAANgQAAAAAAAA2BAAAAAAAAABAAAAU9cQAAAAAAAA1xAAAAAAAAABAAAAV9YQAAAAAAAA1hAAAAAAAAACAAAAw6k",
					"AQAAAAAAAAABAAAA2RAAAAAAAADZEAAAAAAAAAAAAAAAAPC/"
				],
				[
					831,
					1,
					"insert",
					{
						"characters": "LWDS_"
					},
					"BQAAANYQAAAAAAAA1xAAAAAAAAAAAAAA1xAAAAAAAADYEAAAAAAAAAAAAADYEAAAAAAAANkQAAAAAAAAAAAAANkQAAAAAAAA2hAAAAAAAAAAAAAA2hAAAAAAAADbEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1hAAAAAAAADWEAAAAAAAAAAAAAAAAPC/"
				],
				[
					832,
					3,
					"left_delete",
					null,
					"AwAAANoQAAAAAAAA2hAAAAAAAAABAAAAX9kQAAAAAAAA2RAAAAAAAAABAAAAU9gQAAAAAAAA2BAAAAAAAAABAAAARA",
					"AQAAAAAAAAABAAAA2xAAAAAAAADbEAAAAAAAAAAAAAAAAPC/"
				],
				[
					833,
					1,
					"insert",
					{
						"characters": "S_OPENSSL_LIBRARY_D"
					},
					"EwAAANgQAAAAAAAA2RAAAAAAAAAAAAAA2RAAAAAAAADaEAAAAAAAAAAAAADaEAAAAAAAANsQAAAAAAAAAAAAANsQAAAAAAAA3BAAAAAAAAAAAAAA3BAAAAAAAADdEAAAAAAAAAAAAADdEAAAAAAAAN4QAAAAAAAAAAAAAN4QAAAAAAAA3xAAAAAAAAAAAAAA3xAAAAAAAADgEAAAAAAAAAAAAADgEAAAAAAAAOEQAAAAAAAAAAAAAOEQAAAAAAAA4hAAAAAAAAAAAAAA4hAAAAAAAADjEAAAAAAAAAAAAADjEAAAAAAAAOQQAAAAAAAAAAAAAOQQAAAAAAAA5RAAAAAAAAAAAAAA5RAAAAAAAADmEAAAAAAAAAAAAADmEAAAAAAAAOcQAAAAAAAAAAAAAOcQAAAAAAAA6BAAAAAAAAAAAAAA6BAAAAAAAADpEAAAAAAAAAAAAADpEAAAAAAAAOoQAAAAAAAAAAAAAOoQAAAAAAAA6xAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2BAAAAAAAADYEAAAAAAAAAAAAAAAAPC/"
				],
				[
					834,
					1,
					"insert",
					{
						"characters": "IR:PATH"
					},
					"BwAAAOsQAAAAAAAA7BAAAAAAAAAAAAAA7BAAAAAAAADtEAAAAAAAAAAAAADtEAAAAAAAAO4QAAAAAAAAAAAAAO4QAAAAAAAA7xAAAAAAAAAAAAAA7xAAAAAAAADwEAAAAAAAAAAAAADwEAAAAAAAAPEQAAAAAAAAAAAAAPEQAAAAAAAA8hAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6xAAAAAAAADrEAAAAAAAAAAAAAAAAPC/"
				],
				[
					835,
					7,
					"right_delete",
					null,
					"BwAAAPIQAAAAAAAA8hAAAAAAAAABAAAAOvIQAAAAAAAA8hAAAAAAAAABAAAAU/IQAAAAAAAA8hAAAAAAAAABAAAAVPIQAAAAAAAA8hAAAAAAAAABAAAAUvIQAAAAAAAA8hAAAAAAAAABAAAASfIQAAAAAAAA8hAAAAAAAAABAAAATvIQAAAAAAAA8hAAAAAAAAABAAAARw",
					"AQAAAAAAAAABAAAA8hAAAAAAAADyEAAAAAAAAAAAAAAAAPC/"
				],
				[
					837,
					1,
					"paste",
					null,
					"AQAAAPUQAAAAAAAACBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9RAAAAAAAAD1EAAAAAAAAAAAAAAAAPC/"
				],
				[
					840,
					1,
					"left_delete",
					null,
					"AQAAAAgRAAAAAAAACBEAAAAAAAARAAAAT1BFTlNTTF9MSUJSQVJJRVM",
					"AQAAAAAAAAABAAAACBEAAAAAAAAZEQAAAAAAAAAAAAAAAPC/"
				],
				[
					851,
					1,
					"paste",
					null,
					"AgAAABgRAAAAAAAAKxEAAAAAAAAAAAAAKxEAAAAAAAArEQAAAAAAABEAAABPUEVOU1NMX0xJQlJBUklFUw",
					"AQAAAAAAAAABAAAAGBEAAAAAAAApEQAAAAAAAAAAAAAAAPC/"
				],
				[
					866,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAEsQAAAAAAAATRAAAAAAAAAAAAAAdw8AAAAAAAB5DwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASxAAAAAAAAB3DwAAAAAAAAAAAAAAAPC/"
				],
				[
					894,
					2,
					"left_delete",
					null,
					"AgAAAHgPAAAAAAAAeA8AAAAAAAABAAAAKncPAAAAAAAAdw8AAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAeQ8AAAAAAAB5DwAAAAAAAAAAAAAAgFFA"
				],
				[
					895,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAHcPAAAAAAAAeA8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdw8AAAAAAAB3DwAAAAAAAAAAAAAAAPC/"
				],
				[
					896,
					1,
					"right_delete",
					null,
					"AQAAAHgPAAAAAAAAeA8AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAeA8AAAAAAAB4DwAAAAAAAAAAAAAAAPC/"
				],
				[
					899,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAJMPAAAAAAAAlA8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkw8AAAAAAACTDwAAAAAAAAAAAAAAAPC/"
				],
				[
					901,
					1,
					"left_delete",
					null,
					"AQAAADEQAAAAAAAAMRAAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAMxAAAAAAAAAzEAAAAAAAAAAAAAAAAE5A"
				],
				[
					902,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAADEQAAAAAAAAMhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMRAAAAAAAAAxEAAAAAAAAAAAAAAAAPC/"
				],
				[
					904,
					2,
					"left_delete",
					null,
					"AgAAAEwQAAAAAAAATBAAAAAAAAABAAAAL0sQAAAAAAAASxAAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAATRAAAAAAAABNEAAAAAAAAP///////+9/"
				],
				[
					965,
					1,
					"right_delete",
					null,
					"AQAAAHcPAAAAAAAAdw8AAAAAAAABAAAAIw",
					"AQAAAAAAAAABAAAAdw8AAAAAAAB3DwAAAAAAAAAAAAAAAElA"
				],
				[
					967,
					1,
					"right_delete",
					null,
					"AQAAAJIPAAAAAAAAkg8AAAAAAAABAAAAIw",
					"AQAAAAAAAAABAAAAkg8AAAAAAACSDwAAAAAAAAAAAAAAAElA"
				],
				[
					970,
					1,
					"right_delete",
					null,
					"AQAAAC8QAAAAAAAALxAAAAAAAAABAAAAIw",
					"AQAAAAAAAAABAAAALxAAAAAAAAAvEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1009,
					20,
					"left_delete",
					null,
					"FAAAACcQAAAAAAAAJxAAAAAAAAABAAAAfSYQAAAAAAAAJhAAAAAAAAABAAAAUyUQAAAAAAAAJRAAAAAAAAABAAAARSQQAAAAAAAAJBAAAAAAAAABAAAASSMQAAAAAAAAIxAAAAAAAAABAAAAUiIQAAAAAAAAIhAAAAAAAAABAAAAQSEQAAAAAAAAIRAAAAAAAAABAAAAUiAQAAAAAAAAIBAAAAAAAAABAAAAQh8QAAAAAAAAHxAAAAAAAAABAAAASR4QAAAAAAAAHhAAAAAAAAABAAAATB0QAAAAAAAAHRAAAAAAAAABAAAAXxwQAAAAAAAAHBAAAAAAAAABAAAATBsQAAAAAAAAGxAAAAAAAAABAAAAUxoQAAAAAAAAGhAAAAAAAAABAAAAUxkQAAAAAAAAGRAAAAAAAAABAAAAThgQAAAAAAAAGBAAAAAAAAABAAAARRcQAAAAAAAAFxAAAAAAAAABAAAAUBYQAAAAAAAAFhAAAAAAAAABAAAATxUQAAAAAAAAFRAAAAAAAAABAAAAexQQAAAAAAAAFBAAAAAAAAABAAAAJA",
					"AQAAAAAAAAABAAAAKBAAAAAAAAAoEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1034,
					1,
					"insert",
					{
						"characters": "REGEXP"
					},
					"BgAAAKIbAAAAAAAAoxsAAAAAAAAAAAAAoxsAAAAAAACkGwAAAAAAAAAAAACkGwAAAAAAAKUbAAAAAAAAAAAAAKUbAAAAAAAAphsAAAAAAAAAAAAAphsAAAAAAACnGwAAAAAAAAAAAACnGwAAAAAAAKgbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAohsAAAAAAACiGwAAAAAAAAAAAAAAAPC/"
				],
				[
					1035,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKgbAAAAAAAAqRsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqBsAAAAAAACoGwAAAAAAAAAAAAAAAPC/"
				],
				[
					1036,
					2,
					"left_delete",
					null,
					"AgAAAKgbAAAAAAAAqBsAAAAAAAABAAAAIKcbAAAAAAAApxsAAAAAAAABAAAAUA",
					"AQAAAAAAAAABAAAAqRsAAAAAAACpGwAAAAAAAAAAAAAAAPC/"
				],
				[
					1037,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKcbAAAAAAAAqBsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApxsAAAAAAACnGwAAAAAAAAAAAAAAAPC/"
				],
				[
					1039,
					1,
					"left_delete",
					null,
					"AQAAALEbAAAAAAAAsRsAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAshsAAAAAAACyGwAAAAAAAAAAAAAAAPC/"
				],
				[
					1040,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAALEbAAAAAAAAshsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRsAAAAAAACxGwAAAAAAAAAAAAAAAPC/"
				],
				[
					1041,
					1,
					"insert",
					{
						"characters": " \\t\\n"
					},
					"BQAAALIbAAAAAAAAsxsAAAAAAAAAAAAAsxsAAAAAAAC0GwAAAAAAAAAAAAC0GwAAAAAAALUbAAAAAAAAAAAAALUbAAAAAAAAthsAAAAAAAAAAAAAthsAAAAAAAC3GwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAshsAAAAAAACyGwAAAAAAAAAAAAAAAPC/"
				],
				[
					1042,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAALcbAAAAAAAAuBsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtxsAAAAAAAC3GwAAAAAAAAAAAAAAAPC/"
				],
				[
					1044,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALcbAAAAAAAAuBsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtxsAAAAAAAC3GwAAAAAAAAAAAAAAAPC/"
				],
				[
					1070,
					1,
					"right_delete",
					null,
					"AQAAALcbAAAAAAAAtxsAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAtxsAAAAAAAC3GwAAAAAAAAAAAAAAAPC/"
				],
				[
					1099,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAMMZAAAAAAAAxBkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwxkAAAAAAADDGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1102,
					1,
					"left_delete",
					null,
					"AQAAANoZAAAAAAAA2hkAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAA2xkAAAAAAADbGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1104,
					1,
					"left_delete",
					null,
					"AQAAAIsaAAAAAAAAixoAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAjBoAAAAAAACMGgAAAAAAAAAAAAAAQH9A"
				],
				[
					1106,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAHUaAAAAAAAAdhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdRoAAAAAAAB1GgAAAAAAAAAAAAAAAPC/"
				],
				[
					1109,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAACwbAAAAAAAALRsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALBsAAAAAAAAsGwAAAAAAAAAAAAAAAPC/"
				],
				[
					1111,
					1,
					"right_delete",
					null,
					"AQAAAEMbAAAAAAAAQxsAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAQxsAAAAAAABDGwAAAAAAAAAAAAAAAPC/"
				],
				[
					1142,
					1,
					"",
					null,
					"AQAAAJkPAAAAAAAAww8AAAAAAAAqAAAATElCV0VCU09DS0VUU19BUkdTICR7TElCV0VCU09DS0VUU19BUkdTfSAi",
					"AQAAAAAAAAABAAAAmQ8AAAAAAADDDwAAAAAAAAAAAAAAAPC/"
				],
				[
					1143,
					1,
					"",
					null,
					"AQAAAF8QAAAAAAAAiRAAAAAAAAAqAAAATElCV0VCU09DS0VUU19BUkdTICR7TElCV0VCU09DS0VUU19BUkdTfSAi",
					"AQAAAAAAAAABAAAAXxAAAAAAAACJEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1144,
					1,
					"",
					null,
					"AQAAAEARAAAAAAAAahEAAAAAAAAqAAAATElCV0VCU09DS0VUU19BUkdTICR7TElCV0VCU09DS0VUU19BUkdTfSAi",
					"AQAAAAAAAAABAAAAQBEAAAAAAABqEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1145,
					1,
					"",
					null,
					"AQAAALkSAAAAAAAA4xIAAAAAAAAqAAAATElCV0VCU09DS0VUU19BUkdTICR7TElCV0VCU09DS0VUU19BUkdTfSAi",
					"AQAAAAAAAAABAAAAuRIAAAAAAADjEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1146,
					1,
					"",
					null,
					"AQAAADMUAAAAAAAAXRQAAAAAAAAqAAAATElCV0VCU09DS0VUU19BUkdTICR7TElCV0VCU09DS0VUU19BUkdTfSAi",
					"AQAAAAAAAAABAAAAMxQAAAAAAABdFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1147,
					1,
					"",
					null,
					"AQAAADkWAAAAAAAAYxYAAAAAAAAqAAAATElCV0VCU09DS0VUU19BUkdTICR7TElCV0VCU09DS0VUU19BUkdTfSAi",
					"AQAAAAAAAAABAAAAORYAAAAAAABjFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1148,
					1,
					"",
					null,
					"AQAAANUWAAAAAAAA/xYAAAAAAAAqAAAATElCV0VCU09DS0VUU19BUkdTICR7TElCV0VCU09DS0VUU19BUkdTfSAi",
					"AQAAAAAAAAABAAAA1RYAAAAAAAD/FgAAAAAAAAAAAAAAAPC/"
				],
				[
					1153,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPYPAAAAAAAA9w8AAAAAAAAAAAAA9w8AAAAAAAD3DwAAAAAAAAMAAAAiICI",
					"AQAAAAAAAAABAAAA9g8AAAAAAAD5DwAAAAAAAAAAAAAAAPC/"
				],
				[
					1156,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAALgQAAAAAAAAuRAAAAAAAAAAAAAAuRAAAAAAAAC5EAAAAAAAAAMAAAAiICI",
					"AQAAAAAAAAABAAAAuBAAAAAAAAC7EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1159,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJ4RAAAAAAAAnxEAAAAAAAAAAAAAnxEAAAAAAACfEQAAAAAAAAMAAAAiICI",
					"AQAAAAAAAAABAAAAnhEAAAAAAAChEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1163,
					1,
					"",
					null,
					"AQAAAC0SAAAAAAAALxIAAAAAAAAEAAAAIiAiLQ",
					"AQAAAAAAAAABAAAALRIAAAAAAAAxEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1164,
					1,
					"",
					null,
					"AQAAABQTAAAAAAAAFhMAAAAAAAAEAAAAIiAiLQ",
					"AQAAAAAAAAABAAAAFBMAAAAAAAAYEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1165,
					1,
					"",
					null,
					"AQAAAKQTAAAAAAAAphMAAAAAAAAEAAAAIiAiLQ",
					"AQAAAAAAAAABAAAApBMAAAAAAACoEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1171,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAE0TAAAAAAAAThMAAAAAAAAAAAAAThMAAAAAAABOEwAAAAAAACIAAAAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAi",
					"AQAAAAAAAAABAAAAbxMAAAAAAABNEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1187,
					1,
					"right_delete",
					null,
					"AQAAANcRAAAAAAAA1xEAAAAAAAAiAAAAIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIg",
					"AQAAAAAAAAABAAAA+REAAAAAAADXEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1188,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANcRAAAAAAAA2BEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1xEAAAAAAADXEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1211,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAN0OAAAAAAAA3g4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3Q4AAAAAAADdDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1214,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAHEPAAAAAAAAcg8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQ8AAAAAAABxDwAAAAAAAAAAAAAAAPC/"
				],
				[
					1231,
					1,
					"cut",
					null,
					"AQAAAHYPAAAAAAAAdg8AAAAAAAC+AAAAICAgaWYoT1BFTlNTTF9MSUJSQVJJRVMpCiAgICAgICAgc2V0KExJQldFQlNPQ0tFVFNfQVJHUyAiJHtMSUJXRUJTT0NLRVRTX0FSR1N9IC1ETFdTX09QRU5TU0xfTElCUkFSSUVTOlNUUklORz0ke09QRU5TU0xfTElCUkFSSUVTfSAtRE9QRU5TU0xfTElCUkFSSUVTOlNUUklORz0iKQogICAgZW5kaWYoT1BFTlNTTF9MSUJSQVJJRVMpIA",
					"AQAAAAAAAAABAAAAdg8AAAAAAAA0EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1232,
					1,
					"paste",
					null,
					"AQAAAHYPAAAAAAAANBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdg8AAAAAAAB2DwAAAAAAAAAAAAAAAPC/"
				],
				[
					1297,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAEsbAAAAAAAATRsAAAAAAAAAAAAAMhkAAAAAAAA1GQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASxsAAAAAAAAyGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1320,
					1,
					"insert",
					{
						"characters": "-DCMAKE_INCLUDE_PATH"
					},
					"FAAAAGgRAAAAAAAAaREAAAAAAAAAAAAAaREAAAAAAABqEQAAAAAAAAAAAABqEQAAAAAAAGsRAAAAAAAAAAAAAGsRAAAAAAAAbBEAAAAAAAAAAAAAbBEAAAAAAABtEQAAAAAAAAAAAABtEQAAAAAAAG4RAAAAAAAAAAAAAG4RAAAAAAAAbxEAAAAAAAAAAAAAbxEAAAAAAABwEQAAAAAAAAAAAABwEQAAAAAAAHERAAAAAAAAAAAAAHERAAAAAAAAchEAAAAAAAAAAAAAchEAAAAAAABzEQAAAAAAAAAAAABzEQAAAAAAAHQRAAAAAAAAAAAAAHQRAAAAAAAAdREAAAAAAAAAAAAAdREAAAAAAAB2EQAAAAAAAAAAAAB2EQAAAAAAAHcRAAAAAAAAAAAAAHcRAAAAAAAAeBEAAAAAAAAAAAAAeBEAAAAAAAB5EQAAAAAAAAAAAAB5EQAAAAAAAHoRAAAAAAAAAAAAAHoRAAAAAAAAexEAAAAAAAAAAAAAexEAAAAAAAB8EQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaBEAAAAAAABoEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1321,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAHwRAAAAAAAAfREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfBEAAAAAAAB8EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1322,
					1,
					"left_delete",
					null,
					"AQAAAHwRAAAAAAAAfBEAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAfREAAAAAAAB9EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1323,
					1,
					"insert",
					{
						"characters": ":STRNG"
					},
					"BgAAAHwRAAAAAAAAfREAAAAAAAAAAAAAfREAAAAAAAB+EQAAAAAAAAAAAAB+EQAAAAAAAH8RAAAAAAAAAAAAAH8RAAAAAAAAgBEAAAAAAAAAAAAAgBEAAAAAAACBEQAAAAAAAAAAAACBEQAAAAAAAIIRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfBEAAAAAAAB8EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1324,
					2,
					"left_delete",
					null,
					"AgAAAIERAAAAAAAAgREAAAAAAAABAAAAR4ARAAAAAAAAgBEAAAAAAAABAAAATg",
					"AQAAAAAAAAABAAAAghEAAAAAAACCEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1325,
					1,
					"insert",
					{
						"characters": "ING=${"
					},
					"BgAAAIARAAAAAAAAgREAAAAAAAAAAAAAgREAAAAAAACCEQAAAAAAAAAAAACCEQAAAAAAAIMRAAAAAAAAAAAAAIMRAAAAAAAAhBEAAAAAAAAAAAAAhBEAAAAAAACFEQAAAAAAAAAAAACFEQAAAAAAAIYRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgBEAAAAAAACAEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1326,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIYRAAAAAAAAhxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhhEAAAAAAACGEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1328,
					1,
					"insert",
					{
						"characters": "OPENSSL_INCLUDE_DIR}"
					},
					"FAAAAIYRAAAAAAAAhxEAAAAAAAAAAAAAhxEAAAAAAACIEQAAAAAAAAAAAACIEQAAAAAAAIkRAAAAAAAAAAAAAIkRAAAAAAAAihEAAAAAAAAAAAAAihEAAAAAAACLEQAAAAAAAAAAAACLEQAAAAAAAIwRAAAAAAAAAAAAAIwRAAAAAAAAjREAAAAAAAAAAAAAjREAAAAAAACOEQAAAAAAAAAAAACOEQAAAAAAAI8RAAAAAAAAAAAAAI8RAAAAAAAAkBEAAAAAAAAAAAAAkBEAAAAAAACREQAAAAAAAAAAAACREQAAAAAAAJIRAAAAAAAAAAAAAJIRAAAAAAAAkxEAAAAAAAAAAAAAkxEAAAAAAACUEQAAAAAAAAAAAACUEQAAAAAAAJURAAAAAAAAAAAAAJURAAAAAAAAlhEAAAAAAAAAAAAAlhEAAAAAAACXEQAAAAAAAAAAAACXEQAAAAAAAJgRAAAAAAAAAAAAAJgRAAAAAAAAmREAAAAAAAAAAAAAmREAAAAAAACaEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhhEAAAAAAACGEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1336,
					1,
					"paste",
					null,
					"AQAAAO4SAAAAAAAAIRMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7hIAAAAAAADuEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1339,
					1,
					"insert",
					{
						"characters": "S"
					},
					"AQAAACATAAAAAAAAIRMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIBMAAAAAAAAgEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1350,
					1,
					"paste",
					null,
					"AQAAAIkQAAAAAAAAvBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiRAAAAAAAACJEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1351,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALwQAAAAAAAAvRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvBAAAAAAAAC8EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1354,
					1,
					"insert",
					{
						"characters": "LIBNR"
					},
					"BgAAAJIQAAAAAAAAkxAAAAAAAAAAAAAAkxAAAAAAAACTEAAAAAAAAAcAAABJTkNMVURFkxAAAAAAAACUEAAAAAAAAAAAAACUEAAAAAAAAJUQAAAAAAAAAAAAAJUQAAAAAAAAlhAAAAAAAAAAAAAAlhAAAAAAAACXEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkhAAAAAAAACZEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1355,
					2,
					"left_delete",
					null,
					"AgAAAJYQAAAAAAAAlhAAAAAAAAABAAAAUpUQAAAAAAAAlRAAAAAAAAABAAAATg",
					"AQAAAAAAAAABAAAAlxAAAAAAAACXEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1356,
					1,
					"insert",
					{
						"characters": "RARY"
					},
					"BAAAAJUQAAAAAAAAlhAAAAAAAAAAAAAAlhAAAAAAAACXEAAAAAAAAAAAAACXEAAAAAAAAJgQAAAAAAAAAAAAAJgQAAAAAAAAmRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlRAAAAAAAACVEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1364,
					1,
					"paste",
					null,
					"AgAAALAQAAAAAAAAtxAAAAAAAAAAAAAAtxAAAAAAAAC3EAAAAAAAAAcAAABJTkNMVURF",
					"AQAAAAAAAAABAAAAsBAAAAAAAAC3EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1367,
					1,
					"right_delete",
					null,
					"AQAAAIkQAAAAAAAAiRAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAiRAAAAAAAACJEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1379,
					1,
					"cut",
					null,
					"AQAAAHQPAAAAAAAAdA8AAAAAAADBAAAAICAgICBpZihPUEVOU1NMX0xJQlJBUklFUykKICAgICAgICBzZXQoTElCV0VCU09DS0VUU19BUkdTICIke0xJQldFQlNPQ0tFVFNfQVJHU30gLURMV1NfT1BFTlNTTF9MSUJSQVJJRVM6U1RSSU5HPSR7T1BFTlNTTF9MSUJSQVJJRVN9IC1ET1BFTlNTTF9MSUJSQVJJRVM6U1RSSU5HPSIpCiAgICBlbmRpZihPUEVOU1NMX0xJQlJBUklFUykgCg",
					"AQAAAAAAAAABAAAANRAAAAAAAAB0DwAAAAAAAAAAAAAAAAAA"
				],
				[
					1380,
					2,
					"paste",
					null,
					"AgAAAHQPAAAAAAAANRAAAAAAAAAAAAAANRAAAAAAAAD2EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdA8AAAAAAAB0DwAAAAAAAAAAAAAAAPC/"
				],
				[
					1383,
					3,
					"left_delete",
					null,
					"AwAAAE0QAAAAAAAATRAAAAAAAAABAAAAU0wQAAAAAAAATBAAAAAAAAABAAAARUsQAAAAAAAASxAAAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAAThAAAAAAAABOEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1384,
					1,
					"insert",
					{
						"characters": "Y"
					},
					"AQAAAEsQAAAAAAAATBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASxAAAAAAAABLEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1388,
					3,
					"right_delete",
					null,
					"AwAAAO4QAAAAAAAA7hAAAAAAAAABAAAASe4QAAAAAAAA7hAAAAAAAAABAAAARe4QAAAAAAAA7hAAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAA7hAAAAAAAADuEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1389,
					1,
					"insert",
					{
						"characters": ">Y"
					},
					"AgAAAO4QAAAAAAAA7xAAAAAAAAAAAAAA7xAAAAAAAADwEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7hAAAAAAAADuEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1390,
					2,
					"left_delete",
					null,
					"AgAAAO8QAAAAAAAA7xAAAAAAAAABAAAAWe4QAAAAAAAA7hAAAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAA8BAAAAAAAADwEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1391,
					1,
					"insert",
					{
						"characters": "Y"
					},
					"AQAAAO4QAAAAAAAA7xAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7hAAAAAAAADuEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1396,
					1,
					"insert",
					{
						"characters": "Y"
					},
					"AgAAALMQAAAAAAAAtBAAAAAAAAAAAAAAtBAAAAAAAAC0EAAAAAAAAAMAAABJRVM",
					"AQAAAAAAAAABAAAAsxAAAAAAAAC2EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1402,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAANIQAAAAAAAA0xAAAAAAAAAAAAAA0xAAAAAAAADbEAAAAAAAAAAAAADTEAAAAAAAANMQAAAAAAAACAAAACAgICAgICAg0xAAAAAAAADdEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0hAAAAAAAADSEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1403,
					6,
					"left_delete",
					null,
					"BgAAANsQAAAAAAAA2xAAAAAAAAACAAAAICDZEAAAAAAAANkQAAAAAAAAAgAAACAg1xAAAAAAAADXEAAAAAAAAAIAAAAgINUQAAAAAAAA1RAAAAAAAAACAAAAICDTEAAAAAAAANMQAAAAAAAAAgAAACAg0hAAAAAAAADSEAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAA3RAAAAAAAADdEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1404,
					1,
					"insert",
					{
						"characters": "$"
					},
					"AQAAANIQAAAAAAAA0xAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0hAAAAAAAADSEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1405,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANMQAAAAAAAA1RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0xAAAAAAAADTEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1406,
					1,
					"insert",
					{
						"characters": "OPENSSL_LI"
					},
					"CgAAANQQAAAAAAAA1RAAAAAAAAAAAAAA1RAAAAAAAADWEAAAAAAAAAAAAADWEAAAAAAAANcQAAAAAAAAAAAAANcQAAAAAAAA2BAAAAAAAAAAAAAA2BAAAAAAAADZEAAAAAAAAAAAAADZEAAAAAAAANoQAAAAAAAAAAAAANoQAAAAAAAA2xAAAAAAAAAAAAAA2xAAAAAAAADcEAAAAAAAAAAAAADcEAAAAAAAAN0QAAAAAAAAAAAAAN0QAAAAAAAA3hAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1BAAAAAAAADUEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1407,
					1,
					"insert",
					{
						"characters": "BNRA"
					},
					"BAAAAN4QAAAAAAAA3xAAAAAAAAAAAAAA3xAAAAAAAADgEAAAAAAAAAAAAADgEAAAAAAAAOEQAAAAAAAAAAAAAOEQAAAAAAAA4hAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3hAAAAAAAADeEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1408,
					3,
					"left_delete",
					null,
					"AwAAAOEQAAAAAAAA4RAAAAAAAAABAAAAQeAQAAAAAAAA4BAAAAAAAAABAAAAUt8QAAAAAAAA3xAAAAAAAAABAAAATg",
					"AQAAAAAAAAABAAAA4hAAAAAAAADiEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1409,
					1,
					"insert",
					{
						"characters": "RARY"
					},
					"BAAAAN8QAAAAAAAA4BAAAAAAAAAAAAAA4BAAAAAAAADhEAAAAAAAAAAAAADhEAAAAAAAAOIQAAAAAAAAAAAAAOIQAAAAAAAA4xAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3xAAAAAAAADfEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1411,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAOQQAAAAAAAA5hAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5BAAAAAAAADkEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1412,
					1,
					"right_delete",
					null,
					"AQAAAOUQAAAAAAAA5RAAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAA5RAAAAAAAADlEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1414,
					1,
					"right_delete",
					null,
					"AQAAANEQAAAAAAAA0RAAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAA0RAAAAAAAADREAAAAAAAAAAAAAAAAPC/"
				],
				[
					1418,
					1,
					"insert",
					{
						"characters": "${OPENSSL_LIB"
					},
					"DQAAABQQAAAAAAAAFRAAAAAAAAAAAAAAFRAAAAAAAAAWEAAAAAAAAAAAAAAWEAAAAAAAABcQAAAAAAAAAAAAABcQAAAAAAAAGBAAAAAAAAAAAAAAGBAAAAAAAAAZEAAAAAAAAAAAAAAZEAAAAAAAABoQAAAAAAAAAAAAABoQAAAAAAAAGxAAAAAAAAAAAAAAGxAAAAAAAAAcEAAAAAAAAAAAAAAcEAAAAAAAAB0QAAAAAAAAAAAAAB0QAAAAAAAAHhAAAAAAAAAAAAAAHhAAAAAAAAAfEAAAAAAAAAAAAAAfEAAAAAAAACAQAAAAAAAAAAAAACAQAAAAAAAAIRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFBAAAAAAAAAUEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1419,
					1,
					"insert",
					{
						"characters": "RARIES}"
					},
					"BwAAACEQAAAAAAAAIhAAAAAAAAAAAAAAIhAAAAAAAAAjEAAAAAAAAAAAAAAjEAAAAAAAACQQAAAAAAAAAAAAACQQAAAAAAAAJRAAAAAAAAAAAAAAJRAAAAAAAAAmEAAAAAAAAAAAAAAmEAAAAAAAACcQAAAAAAAAAAAAACcQAAAAAAAAKBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIRAAAAAAAAAhEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1429,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAYhAAAAAAAABiEAAAAAAAAAAAAAAAAAAA"
				],
				[
					1434,
					1,
					"left_delete",
					null,
					"AQAAALEOAAAAAAAAsQ4AAAAAAAANAAAAIC8qV0lUSF9TU0wqLw",
					"AQAAAAAAAAABAAAAsQ4AAAAAAAC+DgAAAAAAAAAAAAAAAPC/"
				],
				[
					1444,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAF8OAAAAAAAAYA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXw4AAAAAAABfDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1447,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAKUOAAAAAAAApg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQ4AAAAAAAClDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1459,
					1,
					"right_delete",
					null,
					"AQAAAGAOAAAAAAAAYA4AAAAAAAAWAAAAJHtMSUJXRUJTT0NLRVRTX0FSR1N9IA",
					"AQAAAAAAAAABAAAAYA4AAAAAAAB2DgAAAAAAAAAAAAAAAPC/"
				],
				[
					1467,
					4,
					"left_delete",
					null,
					"BAAAAJwOAAAAAAAAnA4AAAAAAAABAAAARZsOAAAAAAAAmw4AAAAAAAABAAAAVZoOAAAAAAAAmg4AAAAAAAABAAAAUpkOAAAAAAAAmQ4AAAAAAAABAAAAVA",
					"AQAAAAAAAAABAAAAnQ4AAAAAAACdDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1468,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAJkOAAAAAAAAmg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQ4AAAAAAACZDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1491,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAOcZAAAAAAAA6BkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5xkAAAAAAADnGQAAAAAAAAAAAAAAACRA"
				],
				[
					1494,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAACQaAAAAAAAAJRoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJBoAAAAAAAAkGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1497,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAIUaAAAAAAAAhhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhRoAAAAAAACFGgAAAAAAAAAAAAAAAPC/"
				],
				[
					1504,
					1,
					"cut",
					null,
					"AQAAAOgcAAAAAAAA6BwAAAAAAABGAAAAc3RyaW5nKFJFR0VYIFJFUExBQ0UgIlsgXHRcbl0iICJcblx0IiBBUkdTICIke0xJQldFQlNPQ0tFVFNfQVJHU30iKQogIA",
					"AQAAAAAAAAABAAAALh0AAAAAAADoHAAAAAAAAAAAAAAAADRA"
				],
				[
					1505,
					1,
					"paste",
					null,
					"AQAAAOgcAAAAAAAALh0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6BwAAAAAAADoHAAAAAAAAAAAAAAAAPC/"
				],
				[
					1507,
					1,
					"paste",
					null,
					"AQAAAGsdAAAAAAAAsR0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAax0AAAAAAABrHQAAAAAAAAAAAAAAADRA"
				],
				[
					1512,
					4,
					"left_delete",
					null,
					"BAAAAIYdAAAAAAAAhh0AAAAAAAABAAAAboUdAAAAAAAAhR0AAAAAAAABAAAAXIQdAAAAAAAAhB0AAAAAAAABAAAAdIMdAAAAAAAAgx0AAAAAAAABAAAAXA",
					"AQAAAAAAAAABAAAAhx0AAAAAAACHHQAAAAAAAAAAAAAAAPC/"
				],
				[
					1515,
					4,
					"left_delete",
					null,
					"BAAAAIodAAAAAAAAih0AAAAAAAABAAAAdIkdAAAAAAAAiR0AAAAAAAABAAAAXIgdAAAAAAAAiB0AAAAAAAABAAAAbocdAAAAAAAAhx0AAAAAAAABAAAAXA",
					"AQAAAAAAAAABAAAAix0AAAAAAACLHQAAAAAAAAAAAAAAAPC/"
				],
				[
					1516,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIcdAAAAAAAAiB0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhx0AAAAAAACHHQAAAAAAAAAAAAAAAPC/"
				],
				[
					1522,
					1,
					"insert",
					{
						"characters": "Lé"
					},
					"AgAAAIodAAAAAAAAix0AAAAAAAAAAAAAix0AAAAAAACMHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAih0AAAAAAACKHQAAAAAAAAAAAAAAAPC/"
				],
				[
					1523,
					1,
					"left_delete",
					null,
					"AQAAAIsdAAAAAAAAix0AAAAAAAACAAAAw6k",
					"AQAAAAAAAAABAAAAjB0AAAAAAACMHQAAAAAAAAAAAAAAAPC/"
				],
				[
					1524,
					1,
					"insert",
					{
						"characters": "IBWEBSOCKETS_"
					},
					"DQAAAIsdAAAAAAAAjB0AAAAAAAAAAAAAjB0AAAAAAACNHQAAAAAAAAAAAACNHQAAAAAAAI4dAAAAAAAAAAAAAI4dAAAAAAAAjx0AAAAAAAAAAAAAjx0AAAAAAACQHQAAAAAAAAAAAACQHQAAAAAAAJEdAAAAAAAAAAAAAJEdAAAAAAAAkh0AAAAAAAAAAAAAkh0AAAAAAACTHQAAAAAAAAAAAACTHQAAAAAAAJQdAAAAAAAAAAAAAJQdAAAAAAAAlR0AAAAAAAAAAAAAlR0AAAAAAACWHQAAAAAAAAAAAACWHQAAAAAAAJcdAAAAAAAAAAAAAJcdAAAAAAAAmB0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAix0AAAAAAACLHQAAAAAAAAAAAAAAAPC/"
				],
				[
					1533,
					1,
					"cut",
					null,
					"AQAAAJ8OAAAAAAAAnw4AAAAAAABYBwAAICAgc2V0KExJQldFQlNPQ0tFVFNfQVJHUyAiLURMV1NfV0lUSF9TU0w6Qk9PTD1PTiAtRExXU19IQVZFX0hNQUNfQ1RYX25ldzpTVFJJTkc9MSAtRExXU19IQVZFX0VWUF9NRF9DVFhfZnJlZTpTVFJJTkc9MSAtRExXU19XSVRIX1dPTEZTU0w6Qk9PTD1PRkYgLURMV1NfV0lUSF9NQkVEVExTOkJPT0w9T0ZGIikKICAgICAgaWYoT1BFTlNTTF9MSUJSQVJJRVMpCiAgICAgICAgc2V0KExJQldFQlNPQ0tFVFNfQVJHUyAiJHtMSUJXRUJTT0NLRVRTX0FSR1N9IC1ETFdTX09QRU5TU0xfTElCUkFSSUVTOlNUUklORz0ke09QRU5TU0xfTElCUkFSSUVTfSAtRE9QRU5TU0xfTElCUkFSSUVTOlNUUklORz0ke09QRU5TU0xfTElCUkFSSUVTfSIpCiAgICAgIGVuZGlmKE9QRU5TU0xfTElCUkFSSUVTKQogICAgICBpZihPUEVOU1NMX0xJQlJBUlkpCiAgICAgICAgc2V0KExJQldFQlNPQ0tFVFNfQVJHUyAiJHtMSUJXRUJTT0NLRVRTX0FSR1N9IC1ETFdTX09QRU5TU0xfTElCUkFSSUVTOlNUUklORz0ke09QRU5TU0xfTElCUkFSWX0gLURPUEVOU1NMX0xJQlJBUklFUzpTVFJJTkc9JHtPUEVOU1NMX0xJQlJBUll9IikKICAgICAgZW5kaWYoT1BFTlNTTF9MSUJSQVJZKQogICAgICBpZihPUEVOU1NMX0xJQlJBUllfRElSKQogICAgICAgIHNldChMSUJXRUJTT0NLRVRTX0FSR1MKICAgICAgICAgICAgIiR7TElCV0VCU09DS0VUU19BUkdTfSAtRENNQUtFX0xJQlJBUllfUEFUSDpTVFJJTkc9JHtPUEVOU1NMX0xJQlJBUllfRElSfSAtRE9QRU5TU0xfTElCUkFSWV9ESVI6UEFUSD0ke09QRU5TU0xfTElCUkFSWV9ESVJ9IC1ETFdTX09QRU5TU0xfTElCUkFSWV9ESVI6UEFUSD0ke09QRU5TU0xfTElCUkFSWV9ESVJ9IikKICAgICAgZW5kaWYoT1BFTlNTTF9MSUJSQVJZX0RJUikKICAgICAgaWYoT1BFTlNTTF9JTkNMVURFX0RJUikKICAgICAgICBzZXQoTElCV0VCU09DS0VUU19BUkdTCiAgICAgICAgICAgICIke0xJQldFQlNPQ0tFVFNfQVJHU30gLURDTUFLRV9JTkNMVURFX1BBVEg6U1RSSU5HPSR7T1BFTlNTTF9JTkNMVURFX0RJUn0gLURMV1NfT1BFTlNTTF9JTkNMVURFX0RJUlM6U1RSSU5HPSR7T1BFTlNTTF9JTkNMVURFX0RJUn0gLURMV1NfT1BFTlNTTF9JTkNMVURFX0RJUlM6U1RSSU5HPSR7T1BFTlNTTF9JTkNMVURFX0RJUn0gLURPUEVOU1NMX0lOQ0xVREVfRElSUzpTVFJJTkc9JHtPUEVOU1NMX0lOQ0xVREVfRElSfSAtRE9QRU5TU0xfSU5DTFVERV9ESVJTOlNUUklORz0ke09QRU5TU0xfSU5DTFVERV9ESVJ9IgogICAgICAgICkKICAgICAgZW5kaWYoT1BFTlNTTF9JTkNMVURFX0RJUikKICAgICAgaWYoT1BFTlNTTF9JTkNMVURFX0RJUlMpCiAgICAgICAgc2V0KExJQldFQlNPQ0tFVFNfQVJHUwogICAgICAgICAgICAiJHtMSUJXRUJTT0NLRVRTX0FSR1N9IC1EQ01BS0VfSU5DTFVERV9QQVRIOlNUUklORz0ke09QRU5TU0xfSU5DTFVERV9ESVJTfSAtRExXU19PUEVOU1NMX0lOQ0xVREVfRElSUzpTVFJJTkc9JHtPUEVOU1NMX0lOQ0xVREVfRElSU30gLURMV1NfT1BFTlNTTF9JTkNMVURFX0RJUlM6U1RSSU5HPSR7T1BFTlNTTF9JTkNMVURFX0RJUn0gLURPUEVOU1NMX0lOQ0xVREVfRElSUzpTVFJJTkc9JHtPUEVOU1NMX0lOQ0xVREVfRElSU30gLURPUEVOU1NMX0lOQ0xVREVfRElSUzpTVFJJTkc9JHtPUEVOU1NMX0lOQ0xVREVfRElSfSIKICAgICAgICApCiAgICAgIGVuZGlmKE9QRU5TU0xfSU5DTFVERV9ESVJTKQogICAgICBpZihPUEVOU1NMX0VYRUNVVEFCTEUpCiAgICAgICAgc2V0KExJQldFQlNPQ0tFVFNfQVJHUyAiJHtMSUJXRUJTT0NLRVRTX0FSR1N9IC1ET1BFTlNTTF9FWEVDVVRBQkxFOkZJTEVQQVRIPSR7T1BFTlNTTF9FWEVDVVRBQkxFfSIpCiAgICAgIGVuZGlmKE9QRU5TU0xfRVhFQ1VUQUJMRSk",
					"AQAAAAAAAAABAAAAnw4AAAAAAAD3FQAAAAAAAAAAAAAAAPC/"
				],
				[
					1536,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAAQFAAAAAAAABQUAAAAAAAAAAAAABQUAAAAAAAAHBQAAAAAAAAAAAAAHBQAAAAAAAAgFAAAAAAAAAAAAAAgFAAAAAAAACgUAAAAAAAAAAAAABQUAAAAAAAAFBQAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAABAUAAAAAAAAEBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1537,
					1,
					"paste",
					null,
					"AQAAAAgFAAAAAAAAYAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAUAAAAAAAAIBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1540,
					1,
					"unindent",
					null,
					"GAAAAAYFAAAAAAAABgUAAAAAAAACAAAAICC3BQAAAAAAALcFAAAAAAAAAgAAACAg0QUAAAAAAADRBQAAAAAAAAIAAAAgIGsGAAAAAAAAawYAAAAAAAACAAAAICCIBgAAAAAAAIgGAAAAAAAAAgAAACAgoAYAAAAAAACgBgAAAAAAAAIAAAAgIDYHAAAAAAAANgcAAAAAAAACAAAAICBRBwAAAAAAAFEHAAAAAAAAAgAAACAgbQcAAAAAAABtBwAAAAAAAAIAAAAgIIoHAAAAAAAAigcAAAAAAAACAAAAICBICAAAAAAAAEgIAAAAAAAAAgAAACAgZwgAAAAAAABnCAAAAAAAAAIAAAAgIIMIAAAAAAAAgwgAAAAAAAACAAAAICCgCAAAAAAAAKAIAAAAAAAAAgAAACAg0QkAAAAAAADRCQAAAAAAAAIAAAAgINkJAAAAAAAA2QkAAAAAAAACAAAAICD4CQAAAAAAAPgJAAAAAAAAAgAAACAgFQoAAAAAAAAVCgAAAAAAAAIAAAAgIDIKAAAAAAAAMgoAAAAAAAACAAAAICBmCwAAAAAAAGYLAAAAAAAAAgAAACAgbgsAAAAAAABuCwAAAAAAAAIAAAAgII4LAAAAAAAAjgsAAAAAAAACAAAAICCpCwAAAAAAAKkLAAAAAAAAAgAAACAgEwwAAAAAAAATDAAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAAYAwAAAAAAAAGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1579,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAASBsAAAAAAABIGwAAAAAAAAAAAAAAAPC/"
				],
				[
					1591,
					1,
					"insert",
					{
						"characters": "OFF"
					},
					"BAAAAGgmAAAAAAAAaSYAAAAAAAAAAAAAaSYAAAAAAABpJgAAAAAAAAIAAABPTmkmAAAAAAAAaiYAAAAAAAAAAAAAaiYAAAAAAABrJgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaCYAAAAAAABqJgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-websocket.c.orig",
			"settings":
			{
				"buffer_size": 20763,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libwebsockets/lib/roles/http/server/access-log.c",
			"settings":
			{
				"buffer_size": 5914,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "cmake/FindLibreSSL.cmake",
			"settings":
			{
				"buffer_size": 4972,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libwebsockets/lib/tls/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 23160,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "minnet-response.c",
			"settings":
			{
				"buffer_size": 12282,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					36,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIgLAAAAAAAAiAsAAAAAAAAAAAAAAADwvw"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAANYFAAAAAAAA1wUAAAAAAAAAAAAA1wUAAAAAAADYBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYFAAAAAAAA1gUAAAAAAAAAAAAAAADwvw"
				],
				[
					89,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAGAFAAAAAAAAYgUAAAAAAAAAAAAA7gQAAAAAAADwBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAFAAAAAAAA7gQAAAAAAAAAAAAAAADwvw"
				],
				[
					94,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkIAAAAAAAACQgAAAAAAAAAAAAAAADwvw"
				],
				[
					95,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkIAAAAAAAACQgAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAACQgAAAAAAAAJCAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAACQgAAAAAAAAJCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD6LwAAI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXNwb25zZS5oIgojaW5jbHVkZSAibWlubmV0LWJ1ZmZlci5oIgojaW5jbHVkZSAianN1dGlscy5oIgojaW5jbHVkZSA8Y3V0aWxzLmg+CgpUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF9yZXNwb25zZV9jbGFzc19pZDsKVEhSRUFEX0xPQ0FMIEpTVmFsdWUgbWlubmV0X3Jlc3BvbnNlX3Byb3RvLCBtaW5uZXRfcmVzcG9uc2VfY3RvcjsKCmVudW0geyBSRVNQT05TRV9IRUFERVIgfTsKZW51bSB7IFJFU1BPTlNFX09LLCBSRVNQT05TRV9VUkwsIFJFU1BPTlNFX1NUQVRVUywgUkVTUE9OU0VfU1RBVFVTVEVYVCwgUkVTUE9OU0VfUkVESVJFQ1RFRCwgUkVTUE9OU0VfQk9EWVVTRUQsIFJFU1BPTlNFX1RZUEUsIFJFU1BPTlNFX09GRlNFVCwgUkVTUE9OU0VfSEVBREVSUyB9OwoKLypzdHJ1Y3QgaHR0cF9oZWFkZXIqCmhlYWRlcl9uZXcoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIG5hbWUsIGNvbnN0IGNoYXIqIHZhbHVlKSB7CiAgTWlubmV0SHR0cEhlYWRlciogaGRyOwoKICBpZighKGhkciA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2YoTWlubmV0SHR0cEhlYWRlcikpKSkKICAgIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgaGRyLT5uYW1lID0ganNfc3RyZHVwKGN0eCwgbmFtZSk7CiAgaGRyLT52YWx1ZSA9IGpzX3N0cmR1cChjdHgsIHZhbHVlKTsKCiAgcmV0dXJuIGhkcjsKfQoKdm9pZApoZWFkZXJfZnJlZShKU1J1bnRpbWUqIHJ0LCBzdHJ1Y3QgaHR0cF9oZWFkZXIqIGhkcikgewogIGpzX2ZyZWVfcnQocnQsIGhkci0+bmFtZSk7CiAganNfZnJlZV9ydChydCwgaGRyLT52YWx1ZSk7CiAganNfZnJlZV9ydChydCwgaGRyKTsKfSovCgp2b2lkCnJlc3BvbnNlX2Zvcm1hdChNaW5uZXRSZXNwb25zZSBjb25zdCogcmVzcCwgY2hhciogYnVmLCBzaXplX3QgbGVuKSB7CiAgc25wcmludGYoYnVmLCBsZW4sIEZHQygyMjYsICJNaW5uZXRSZXNwb25zZSIpICIgeyB1cmwucGF0aDogJyVzJywgc3RhdHVzOiAlZCwgb2s6ICVzLCB0eXBlOiAnJXMnIH0iLCByZXNwLT51cmwucGF0aCwgcmVzcC0+c3RhdHVzLCByZXNwLT5vayA/ICJ0cnVlIiA6ICJmYWxzZSIsIHJlc3AtPnR5cGUpOwp9CgpjaGFyKgpyZXNwb25zZV9kdW1wKE1pbm5ldFJlc3BvbnNlIGNvbnN0KiByZXNwKSB7CiAgc3RhdGljIGNoYXIgYnVmWzEwMjRdOwogIHJlc3BvbnNlX2Zvcm1hdChyZXNwLCBidWYsIHNpemVvZihidWYpKTsKICByZXR1cm4gYnVmOwp9CgovKnZvaWQKcmVzcG9uc2VfemVybyhNaW5uZXRSZXNwb25zZSogcmVzcCkgewogIG1lbXNldChyZXNwLCAwLCBzaXplb2YoTWlubmV0UmVzcG9uc2UpKTsKICByZXNwLT5ib2R5ID0gQlVGRkVSXzAoKTsKfSovCgp2b2lkCnJlc3BvbnNlX2luaXQoTWlubmV0UmVzcG9uc2UqIHJlc3AsIE1pbm5ldFVSTCB1cmwsIGludDMyX3Qgc3RhdHVzLCBjaGFyKiBzdGF0dXNfdGV4dCwgQk9PTCBvaywgY2hhciogdHlwZSkgewogIC8vIG1lbXNldChyZXNwLCAwLCBzaXplb2YoTWlubmV0UmVzcG9uc2UpKTsKCiAgcmVzcC0+c3RhdHVzID0gc3RhdHVzOwogIHJlc3AtPnN0YXR1c190ZXh0ID0gc3RhdHVzX3RleHQ7CiAgcmVzcC0+b2sgPSBvazsKICByZXNwLT51cmwgPSB1cmw7CiAgcmVzcC0+dHlwZSA9IHR5cGU7CiAgcmVzcC0+aGVhZGVycyA9IEJVRkZFUl8wKCk7CiAgcmVzcC0+Ym9keSA9IEJVRkZFUl8wKCk7Cn0KCk1pbm5ldFJlc3BvbnNlKgpyZXNwb25zZV9kdXAoTWlubmV0UmVzcG9uc2UqIHJlc3ApIHsKICArK3Jlc3AtPnJlZl9jb3VudDsKICByZXR1cm4gcmVzcDsKfQoKc3NpemVfdApyZXNwb25zZV93cml0ZShNaW5uZXRSZXNwb25zZSogcmVzcCwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IG4sIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIGJ1ZmZlcl9hcHBlbmQoJnJlc3AtPmJvZHksIHgsIG4sIGN0eCk7Cn0KCnZvaWQKcmVzcG9uc2VfY2xlYXIoTWlubmV0UmVzcG9uc2UqIHJlc3AsIEpTQ29udGV4dCogY3R4KSB7CiAgdXJsX2ZyZWUoJnJlc3AtPnVybCwgY3R4KTsKICBpZihyZXNwLT50eXBlKSB7CiAgICBqc19mcmVlKGN0eCwgKHZvaWQqKXJlc3AtPnR5cGUpOwogICAgcmVzcC0+dHlwZSA9IDA7CiAgfQoKICBidWZmZXJfZnJlZSgmcmVzcC0+aGVhZGVycywgSlNfR2V0UnVudGltZShjdHgpKTsKICBidWZmZXJfZnJlZSgmcmVzcC0+Ym9keSwgSlNfR2V0UnVudGltZShjdHgpKTsKfQoKdm9pZApyZXNwb25zZV9jbGVhcl9ydChNaW5uZXRSZXNwb25zZSogcmVzcCwgSlNSdW50aW1lKiBydCkgewogIHVybF9mcmVlX3J0KCZyZXNwLT51cmwsIHJ0KTsKICBpZihyZXNwLT50eXBlKSB7CiAgICBqc19mcmVlX3J0KHJ0LCAodm9pZCopcmVzcC0+dHlwZSk7CiAgICByZXNwLT50eXBlID0gMDsKICB9CgogIGJ1ZmZlcl9mcmVlKCZyZXNwLT5oZWFkZXJzLCBydCk7CiAgYnVmZmVyX2ZyZWUoJnJlc3AtPmJvZHksIHJ0KTsKfQoKdm9pZApyZXNwb25zZV9mcmVlKE1pbm5ldFJlc3BvbnNlKiByZXNwLCBKU0NvbnRleHQqIGN0eCkgewoKICBpZigtLXJlc3AtPnJlZl9jb3VudCA9PSAwKSB7CiAgICByZXNwb25zZV9jbGVhcihyZXNwLCBjdHgpOwogICAganNfZnJlZShjdHgsIHJlc3ApOwogIH0KfQoKdm9pZApyZXNwb25zZV9mcmVlX3J0KE1pbm5ldFJlc3BvbnNlKiByZXNwLCBKU1J1bnRpbWUqIHJ0KSB7CiAgaWYoLS1yZXNwLT5yZWZfY291bnQgPT0gMCkgewogICAgcmVzcG9uc2VfY2xlYXJfcnQocmVzcCwgcnQpOwogICAganNfZnJlZV9ydChydCwgcmVzcCk7CiAgfQp9CgpNaW5uZXRSZXNwb25zZSoKcmVzcG9uc2VfbmV3KEpTQ29udGV4dCogY3R4KSB7CiAgTWlubmV0UmVzcG9uc2UqIHJlc3A7CgogIGlmKCEocmVzcCA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2YoTWlubmV0UmVzcG9uc2UpKSkpCiAgICBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIHJlc3AtPnJlZl9jb3VudCA9IDE7CgogIHJldHVybiByZXNwOwp9CgpKU1ZhbHVlCm1pbm5ldF9yZXNwb25zZV9uZXcoSlNDb250ZXh0KiBjdHgsIE1pbm5ldFVSTCB1cmwsIGludCBzdGF0dXMsIGNoYXIqIHN0YXR1c190ZXh0LCBCT09MIG9rLCBjb25zdCBjaGFyKiB0eXBlKSB7CiAgTWlubmV0UmVzcG9uc2UqIHJlc3A7CgogIGlmKChyZXNwID0gcmVzcG9uc2VfbmV3KGN0eCkpKSB7CiAgICByZXNwb25zZV9pbml0KHJlc3AsIHVybCwgc3RhdHVzLCBzdGF0dXNfdGV4dCwgb2ssIHR5cGUgPyBqc19zdHJkdXAoY3R4LCB0eXBlKSA6IDApOwoKICAgIHJldHVybiBtaW5uZXRfcmVzcG9uc2Vfd3JhcChjdHgsIHJlc3ApOwogIH0KCiAgcmV0dXJuIEpTX05VTEw7Cn0KCkpTVmFsdWUKbWlubmV0X3Jlc3BvbnNlX3dyYXAoSlNDb250ZXh0KiBjdHgsIE1pbm5ldFJlc3BvbnNlKiByZXNwKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgbWlubmV0X3Jlc3BvbnNlX3Byb3RvLCBtaW5uZXRfcmVzcG9uc2VfY2xhc3NfaWQpOwoKICBpZihKU19Jc0V4Y2VwdGlvbihyZXQpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgSlNfU2V0T3BhcXVlKHJldCwgcmVzcG9uc2VfZHVwKHJlc3ApKTsKICByZXR1cm4gcmV0Owp9CgplbnVtIHsKICBSRVNQT05TRV9BUlJBWUJVRkZFUiA9IDAsCiAgUkVTUE9OU0VfVEVYVCwKICBSRVNQT05TRV9KU09OLAp9OwoKc3RhdGljIEpTVmFsdWUKbWlubmV0X3Jlc3BvbnNlX21ldGhvZChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgSlNWYWx1ZSByZXQsIHJlc3VsdCA9IEpTX1VOREVGSU5FRDsKICBSZXNvbHZlRnVuY3Rpb25zIGZ1bmNzOwogIE1pbm5ldFJlc3BvbnNlKiByZXNwOwoKICBpZighKHJlc3AgPSBtaW5uZXRfcmVzcG9uc2VfZGF0YTIoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIFJFU1BPTlNFX0FSUkFZQlVGRkVSOiB7CiAgICAgIHJlc3VsdCA9IEpTX05ld0FycmF5QnVmZmVyIC8qQ29weSovIChjdHgsIGJsb2NrX0JFR0lOKCZyZXNwLT5ib2R5KSwgYmxvY2tfU0laRSgmcmVzcC0+Ym9keSksIDAsIDAsIDApOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkVTUE9OU0VfVEVYVDogewogICAgICByZXN1bHQgPSBKU19OZXdTdHJpbmdMZW4oY3R4LCAoY2hhciopYmxvY2tfQkVHSU4oJnJlc3AtPmJvZHkpLCBidWZmZXJfSEVBRCgmcmVzcC0+Ym9keSkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkVTUE9OU0VfSlNPTjogewogICAgICByZXN1bHQgPSBKU19QYXJzZUpTT04oY3R4LCBibG9ja19CRUdJTigmcmVzcC0+Ym9keSksIGJ1ZmZlcl9IRUFEKCZyZXNwLT5ib2R5KSwgcmVzcC0+dXJsLnBhdGgpOwogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldCA9IGpzX3Byb21pc2VfY3JlYXRlKGN0eCwgJmZ1bmNzKTsKCiAganNfcHJvbWlzZV9yZXNvbHZlKGN0eCwgJmZ1bmNzLCByZXN1bHQpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHJlc3VsdCk7CgogIHJldHVybiByZXQ7Cn0KCi8qc3RhdGljIEpTVmFsdWUKbWlubmV0X3Jlc3BvbnNlX2J1ZmZlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIE1pbm5ldFJlc3BvbnNlKiByZXNwOwogIGlmKChyZXNwID0gbWlubmV0X3Jlc3BvbnNlX2RhdGEyKGN0eCwgdGhpc192YWwpKSkgewogICAgSlNWYWx1ZSB2YWwgPSBKU19OZXdBcnJheUJ1ZmZlcihjdHgsIGJsb2NrX0JFR0lOKCZyZXNwLT5ib2R5KSwgYmxvY2tfU0laRSgmcmVzcC0+Ym9keSksIDAsIDAsIDApOwogICAgcmV0dXJuIHZhbDsKICB9CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKc3RhdGljIEpTVmFsdWUKbWlubmV0X3Jlc3BvbnNlX2pzb24oSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBNaW5uZXRSZXNwb25zZSogcmVzcDsKICBpZigocmVzcCA9IG1pbm5ldF9yZXNwb25zZV9kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfUGFyc2VKU09OKGN0eCwgYmxvY2tfQkVHSU4oJnJlc3AtPmJvZHkpLCBidWZmZXJfSEVBRCgmcmVzcC0+Ym9keSksIHJlc3AtPnVybC5wYXRoKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpzdGF0aWMgSlNWYWx1ZQptaW5uZXRfcmVzcG9uc2VfdGV4dChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIE1pbm5ldFJlc3BvbnNlKiByZXNwOwogIGlmKChyZXNwID0gbWlubmV0X3Jlc3BvbnNlX2RhdGEyKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19OZXdTdHJpbmdMZW4oY3R4LCAoY2hhciopYmxvY2tfQkVHSU4oJnJlc3AtPmJvZHkpLCBidWZmZXJfSEVBRCgmcmVzcC0+Ym9keSkpOwogIHJldHVybiBKU19FWENFUFRJT047Cn0qLwoKc3RhdGljIEpTVmFsdWUKbWlubmV0X3Jlc3BvbnNlX2Nsb25lKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgTWlubmV0UmVzcG9uc2UgKnJlc3AsICpjbG9uZTsKCiAgaWYoIShyZXNwID0gbWlubmV0X3Jlc3BvbnNlX2RhdGEyKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIGlmKCEoY2xvbmUgPSByZXNwb25zZV9uZXcoY3R4KSkpCiAgICByZXR1cm4gSlNfVGhyb3dPdXRPZk1lbW9yeShjdHgpOwoKICBjbG9uZS0+cmVhZF9vbmx5ID0gcmVzcC0+cmVhZF9vbmx5OwogIGNsb25lLT5zdGF0dXMgPSByZXNwLT5zdGF0dXM7CiAgY2xvbmUtPnJlYWRfb25seSA9IHJlc3AtPnJlYWRfb25seTsKICBjbG9uZS0+dXJsID0gdXJsX2Nsb25lKHJlc3AtPnVybCwgY3R4KTsKICBjbG9uZS0+dHlwZSA9IGpzX3N0cmR1cChjdHgsIHJlc3AtPnR5cGUpOwoKICBidWZmZXJfY2xvbmUoJmNsb25lLT5oZWFkZXJzLCAmcmVzcC0+aGVhZGVycywgY3R4KTsKICBidWZmZXJfY2xvbmUoJmNsb25lLT5ib2R5LCAmcmVzcC0+Ym9keSwgY3R4KTsKCiAgcmV0dXJuIG1pbm5ldF9yZXNwb25zZV93cmFwKGN0eCwgY2xvbmUpOwp9CgovKnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9yZXNwb25zZV9oZWFkZXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBNaW5uZXRSZXNwb25zZSogcmVzcDsKICBNaW5uZXRIdHRwSGVhZGVyKiBoZHI7CiAgY29uc3QgY2hhciAqbmFtZSwgKnZhbHVlOwogIEpTVmFsdWUgcmV0ID0gSlNfRkFMU0U7CgogIGlmKCEocmVzcCA9IG1pbm5ldF9yZXNwb25zZV9kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBuYW1lID0gSlNfVG9DU3RyaW5nKGN0eCwgYXJndlswXSk7CiAgdmFsdWUgPSBKU19Ub0NTdHJpbmcoY3R4LCBhcmd2WzFdKTsKCiAgaWYoKGhkciA9IGhlYWRlcl9uZXcoY3R4LCBuYW1lLCB2YWx1ZSkpKSB7CiAgICBpZighcmVzcC0+aGVhZGVycy5uZXh0KQogICAgICBpbml0X2xpc3RfaGVhZCgmcmVzcC0+aGVhZGVycyk7CgogICAgbGlzdF9hZGRfdGFpbCgmaGRyLT5saW5rLCAmcmVzcC0+aGVhZGVycyk7CiAgICByZXQgPSBKU19UUlVFOwogIH0KCiAgSlNfRnJlZUNTdHJpbmcoY3R4LCBuYW1lKTsKICBKU19GcmVlQ1N0cmluZyhjdHgsIHZhbHVlKTsKCiAgcmV0dXJuIHJldDsKfSovCgpzdGF0aWMgSlNWYWx1ZQptaW5uZXRfcmVzcG9uc2VfZ2V0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBtYWdpYykgewogIE1pbm5ldFJlc3BvbnNlKiByZXNwOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIGlmKCEocmVzcCA9IG1pbm5ldF9yZXNwb25zZV9kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgUkVTUE9OU0VfU1RBVFVTOiB7CiAgICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgcmVzcC0+c3RhdHVzKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFU1BPTlNFX1NUQVRVU1RFWFQ6IHsKICAgICAgcmV0ID0gcmVzcC0+c3RhdHVzX3RleHQgPyBKU19OZXdTdHJpbmcoY3R4LCByZXNwLT5zdGF0dXNfdGV4dCkgOiBKU19OVUxMOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkVTUE9OU0VfT0s6IHsKICAgICAgcmV0ID0gSlNfTmV3Qm9vbChjdHgsIHJlc3AtPm9rKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFU1BPTlNFX1VSTDogewogICAgICByZXQgPSBtaW5uZXRfdXJsX25ldyhjdHgsIHJlc3AtPnVybCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVNQT05TRV9UWVBFOiB7CiAgICAgIHJldCA9IHJlc3AtPnR5cGUgPyBKU19OZXdTdHJpbmcoY3R4LCByZXNwLT50eXBlKSA6IEpTX05VTEw7CiAgICAgIGJyZWFrOwogICAgfQogICAgICAvKiBjYXNlIFJFU1BPTlNFX09GRlNFVDogewogICAgICAgICByZXQgPSBKU19OZXdJbnQ2NChjdHgsIGJ1ZmZlcl9IRUFEKCZyZXNwLT5ib2R5KSk7CiAgICAgICAgIGJyZWFrOwogICAgICAgfSovCiAgICBjYXNlIFJFU1BPTlNFX0hFQURFUlM6IHsKICAgICAgcmV0ID0gaGVhZGVyc19vYmplY3QoY3R4LCAmcmVzcC0+aGVhZGVycy5zdGFydCwgJnJlc3AtPmhlYWRlcnMud3JpdGUpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkVTUE9OU0VfQk9EWVVTRUQ6IHsKICAgICAgcmV0ID0gSlNfTmV3Qm9vbChjdHgsIGJ1ZmZlcl9TSVpFKCZyZXNwLT5ib2R5KSA+IDApOwogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCm1pbm5ldF9yZXNwb25zZV9zZXQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgSlNWYWx1ZUNvbnN0IHZhbHVlLCBpbnQgbWFnaWMpIHsKICBNaW5uZXRSZXNwb25zZSogcmVzcDsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBjb25zdCBjaGFyKiBzdHI7CiAgc2l6ZV90IGxlbjsKICBpZighKHJlc3AgPSBtaW5uZXRfcmVzcG9uc2VfZGF0YTIoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgaWYocmVzcC0+cmVhZF9vbmx5KQogICAgcmV0dXJuIEpTX1Rocm93UmVmZXJlbmNlRXJyb3IoY3R4LCAiUmVzcG9uc2Ugb2JqZWN0IGlzIHJlYWQtb25seSIpOwoKICBzdHIgPSBKU19Ub0NTdHJpbmdMZW4oY3R4LCAmbGVuLCB2YWx1ZSk7CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBSRVNQT05TRV9TVEFUVVM6IHsKICAgICAgaW50MzJfdCBzOwogICAgICBpZighSlNfVG9JbnQzMihjdHgsICZzLCB2YWx1ZSkpCiAgICAgICAgcmVzcC0+c3RhdHVzID0gczsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJFU1BPTlNFX09LOiB7CiAgICAgIHJlc3AtPm9rID0gSlNfVG9Cb29sKGN0eCwgdmFsdWUpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkVTUE9OU0VfVVJMOiB7CiAgICAgIHVybF9mcmVlKCZyZXNwLT51cmwsIGN0eCk7CiAgICAgIHVybF9wYXJzZSgmcmVzcC0+dXJsLCBzdHIsIGN0eCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSRVNQT05TRV9UWVBFOiB7CiAgICAgIHJlc3AtPnR5cGUgPSBqc19zdHJkdXAoY3R4LCBzdHIpOwogICAgICBicmVhazsKICAgIH0KICAgICAgLyogY2FzZSBSRVNQT05TRV9PRkZTRVQ6IHsKICAgICAgICAgdWludDY0X3QgbzsKICAgICAgICAgaWYoIUpTX1RvSW5kZXgoY3R4LCAmbywgdmFsdWUpKQogICAgICAgICAgIHJlc3AtPmJvZHkud3JpdGUgPSByZXNwLT5ib2R5LnN0YXJ0ICsgbzsKICAgICAgICAgYnJlYWs7CiAgICAgICB9Ki8KICAgIGNhc2UgUkVTUE9OU0VfQk9EWVVTRUQ6IHsKICAgICAgYnJlYWs7CiAgICB9CiAgfQogIEpTX0ZyZWVDU3RyaW5nKGN0eCwgc3RyKTsKICByZXR1cm4gcmV0Owp9CgpKU1ZhbHVlCm1pbm5ldF9yZXNwb25zZV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSBwcm90bywgb2JqOwogIE1pbm5ldFJlc3BvbnNlKiByZXNwOwogIGludCBpOwoKICBpZighKHJlc3AgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKE1pbm5ldFJlc3BvbnNlKSkpKQogICAgcmV0dXJuIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgLyogdXNpbmcgbmV3X3RhcmdldCB0byBnZXQgdGhlIHByb3RvdHlwZSBpcyBuZWNlc3Nhcnkgd2hlbiB0aGUgY2xhc3MgaXMgZXh0ZW5kZWQuICovCiAgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICBwcm90byA9IEpTX0R1cFZhbHVlKGN0eCwgbWlubmV0X3Jlc3BvbnNlX3Byb3RvKTsKCiAgb2JqID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHByb3RvLCBtaW5uZXRfcmVzcG9uc2VfY2xhc3NfaWQpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHByb3RvKTsKICBpZihKU19Jc0V4Y2VwdGlvbihvYmopKQogICAgZ290byBmYWlsOwoKICBpZihhcmdjID49IDEgJiYgYXJnYyA8IDMpIHsKCiAgICBpZighanNfaXNfbnVsbGlzaChhcmd2WzBdKSkgewogICAgICBidWZmZXJfZnJvbXZhbHVlKCZyZXNwLT5ib2R5LCBhcmd2WzBdLCBjdHgpOwogICAgfQoKICAgIGFyZ2MtLTsKICAgIGFyZ3YrKzsKICB9CgogIGZvcihpID0gMDsgaSA8IGFyZ2M7IGkrKykgewogICAgaWYoSlNfSXNPYmplY3QoYXJndltpXSkgJiYgIUpTX0lzTnVsbChhcmd2W2ldKSkgewogICAgICBqc19jb3B5X3Byb3BlcnRpZXMoY3R4LCBvYmosIGFyZ3ZbaV0sIEpTX0dQTl9TVFJJTkdfTUFTSyk7CiAgICAgIGFyZ2MtLTsKICAgICAgYXJndisrOwogICAgfSBlbHNlIGlmKEpTX0lzU3RyaW5nKGFyZ3ZbaV0pKSB7CiAgICAgIGNvbnN0IGNoYXIqIHN0ciA9IEpTX1RvQ1N0cmluZyhjdHgsIGFyZ3ZbaV0pOwogICAgICBpZighcmVzcC0+dXJsLnBhdGgpCiAgICAgICAgdXJsX3BhcnNlKCZyZXNwLT51cmwsIHN0ciwgY3R4KTsKICAgICAgZWxzZSBpZighcmVzcC0+dHlwZSkKICAgICAgICByZXNwLT50eXBlID0ganNfc3RyZHVwKGN0eCwgc3RyKTsKICAgICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBzdHIpOwoKICAgIH0gZWxzZSBpZihKU19Jc0Jvb2woYXJndltpXSkpIHsKICAgICAgcmVzcC0+b2sgPSBKU19Ub0Jvb2woY3R4LCBhcmd2W2ldKTsKICAgIH0gZWxzZSBpZihKU19Jc051bWJlcihhcmd2W2ldKSkgewogICAgICBpbnQzMl90IHM7CiAgICAgIGlmKCFKU19Ub0ludDMyKGN0eCwgJnMsIGFyZ3ZbaV0pKQogICAgICAgIHJlc3AtPnN0YXR1cyA9IHM7CiAgICB9CiAgfQoKICBKU19TZXRPcGFxdWUob2JqLCByZXNwKTsKCiAgcmV0dXJuIG9iajsKCmZhaWw6CiAganNfZnJlZShjdHgsIHJlc3ApOwogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKdm9pZAptaW5uZXRfcmVzcG9uc2VfZmluYWxpemVyKEpTUnVudGltZSogcnQsIEpTVmFsdWUgdmFsKSB7CiAgTWlubmV0UmVzcG9uc2UqIHJlczsKCiAgaWYoKHJlcyA9IG1pbm5ldF9yZXNwb25zZV9kYXRhKHZhbCkpKQogICAgcmVzcG9uc2VfZnJlZV9ydChyZXMsIHJ0KTsKfQoKSlNDbGFzc0RlZiBtaW5uZXRfcmVzcG9uc2VfY2xhc3MgPSB7CiAgICAiTWlubmV0UmVzcG9uc2UiLAogICAgLmZpbmFsaXplciA9IG1pbm5ldF9yZXNwb25zZV9maW5hbGl6ZXIsCn07Cgpjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBtaW5uZXRfcmVzcG9uc2VfcHJvdG9fZnVuY3NbXSA9IHsKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiYXJyYXlCdWZmZXIiLCAwLCBtaW5uZXRfcmVzcG9uc2VfbWV0aG9kLCBSRVNQT05TRV9BUlJBWUJVRkZFUiksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInRleHQiLCAwLCBtaW5uZXRfcmVzcG9uc2VfbWV0aG9kLCBSRVNQT05TRV9URVhUKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigianNvbiIsIDAsIG1pbm5ldF9yZXNwb25zZV9tZXRob2QsIFJFU1BPTlNFX0pTT04pLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoInN0YXR1cyIsIG1pbm5ldF9yZXNwb25zZV9nZXQsIG1pbm5ldF9yZXNwb25zZV9zZXQsIFJFU1BPTlNFX1NUQVRVUywgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJzdGF0dXNUZXh0IiwgbWlubmV0X3Jlc3BvbnNlX2dldCwgbWlubmV0X3Jlc3BvbnNlX3NldCwgUkVTUE9OU0VfU1RBVFVTVEVYVCwgMCksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigiYm9keVVzZWQiLCBtaW5uZXRfcmVzcG9uc2VfZ2V0LCAwLCBSRVNQT05TRV9CT0RZVVNFRCwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJvayIsIG1pbm5ldF9yZXNwb25zZV9nZXQsIG1pbm5ldF9yZXNwb25zZV9zZXQsIFJFU1BPTlNFX09LLCAwKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJyZWRpcmVjdGVkIiwgbWlubmV0X3Jlc3BvbnNlX2dldCwgbWlubmV0X3Jlc3BvbnNlX3NldCwgUkVTUE9OU0VfUkVESVJFQ1RFRCwgMCksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigidXJsIiwgbWlubmV0X3Jlc3BvbnNlX2dldCwgbWlubmV0X3Jlc3BvbnNlX3NldCwgUkVTUE9OU0VfVVJMLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoInR5cGUiLCBtaW5uZXRfcmVzcG9uc2VfZ2V0LCBtaW5uZXRfcmVzcG9uc2Vfc2V0LCBSRVNQT05TRV9UWVBFLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgLy8gIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJvZmZzZXQiLCBtaW5uZXRfcmVzcG9uc2VfZ2V0LCBtaW5uZXRfcmVzcG9uc2Vfc2V0LCBSRVNQT05TRV9PRkZTRVQpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImhlYWRlcnMiLCBtaW5uZXRfcmVzcG9uc2VfZ2V0LCAwLCBSRVNQT05TRV9IRUFERVJTLCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJNaW5uZXRSZXNwb25zZSIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKfTsKCmNvbnN0IHNpemVfdCBtaW5uZXRfcmVzcG9uc2VfcHJvdG9fZnVuY3Nfc2l6ZSA9IGNvdW50b2YobWlubmV0X3Jlc3BvbnNlX3Byb3RvX2Z1bmNzKTsKAAAAAAAAAAD6LwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQgAAAAAAAAJCAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAACQgAAAAAAAAJCAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "libwebsockets/lib/core-net/close.c",
			"settings":
			{
				"buffer_size": 27367,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					22,
					1,
					"paste",
					{
						"event":
						{
							"modifier_keys":
							{
							},
							"x": 591.022521973,
							"y": 335.631378174
						}
					},
					"AgAAAENpAAAAAAAAVWkAAAAAAAAAAAAAVWkAAAAAAABVaQAAAAAAABIAAABsd3NfY2xvc2VfZnJlZV93c2k",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAENpAAAAAAAAVWkAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "build/x86_64-linux-debug/libwebsockets/include/libwebsockets/lws-ws-close.h",
			"settings":
			{
				"buffer_size": 6056,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAfQYAAAAAAACWBgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/home/roman/Projects/plot-cv/quickjs/list.h",
			"settings":
			{
				"buffer_size": 2980,
				"line_ending": "Unix"
			}
		},
		{
			"file": "minnet-url.h",
			"settings":
			{
				"buffer_size": 3620,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACiDQAAI2lmbmRlZiBNSU5ORVRfVVJMX0gKI2RlZmluZSBNSU5ORVRfVVJMX0gKCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgPHN0ZGludC5oPgovLyNpbmNsdWRlICJtaW5uZXQuaCIKCnR5cGVkZWYgZW51bSBwcm90b2NvbCB7CiAgUFJPVE9DT0xfV1MgPSAwLAogIFBST1RPQ09MX1dTUywKICBQUk9UT0NPTF9IVFRQLAogIFBST1RPQ09MX0hUVFBTLAogIFBST1RPQ09MX1JBVywKICBQUk9UT0NPTF9UTFMsCn0gTWlubmV0UHJvdG9jb2w7CgpNaW5uZXRQcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiBwcm90b2NvbF9zdHJpbmcoTWlubmV0UHJvdG9jb2wpOwp1aW50MTZfdCBwcm90b2NvbF9kZWZhdWx0X3BvcnQoTWlubmV0UHJvdG9jb2wpOwpCT09MIHByb3RvY29sX2lzX3RscyhNaW5uZXRQcm90b2NvbCk7Cgp0eXBlZGVmIHN0cnVjdCB1cmwgewogIGludCByZWZfY291bnQ7CiAgY29uc3QgY2hhciogcHJvdG9jb2w7CiAgY2hhciAqaG9zdCwgKnBhdGg7CiAgdWludDE2X3QgcG9ydDsKfSBNaW5uZXRVUkw7CgpNaW5uZXRQcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiBwcm90b2NvbF9zdHJpbmcoTWlubmV0UHJvdG9jb2wpOwp1aW50MTZfdCBwcm90b2NvbF9kZWZhdWx0X3BvcnQoTWlubmV0UHJvdG9jb2wpOwpCT09MIHByb3RvY29sX2lzX3RscyhNaW5uZXRQcm90b2NvbCk7CnZvaWQgdXJsX2luaXQoTWlubmV0VVJMKiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqLCBpbnQgcG9ydCwgY29uc3QgY2hhciogcGF0aCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIHVybF9wYXJzZShNaW5uZXRVUkwqLCBjb25zdCBjaGFyKiwgSlNDb250ZXh0Kik7Ck1pbm5ldFVSTCB1cmxfY3JlYXRlKGNvbnN0IGNoYXIqLCBKU0NvbnRleHQqKTsKc2l6ZV90IHVybF9wcmludChjaGFyKiwgc2l6ZV90LCBjb25zdCBNaW5uZXRVUkwpOwpjaGFyKiB1cmxfZm9ybWF0KGNvbnN0IE1pbm5ldFVSTCwgSlNDb250ZXh0Kik7CnNpemVfdCB1cmxfbGVuZ3RoKGNvbnN0IE1pbm5ldFVSTCk7CnZvaWQgdXJsX2ZyZWUoTWlubmV0VVJMKiwgSlNDb250ZXh0Kik7CnZvaWQgdXJsX2ZyZWVfcnQoTWlubmV0VVJMKiwgSlNSdW50aW1lKik7CnZvaWQgdXJsX2luZm8oY29uc3QgTWlubmV0VVJMLCBzdHJ1Y3QgbHdzX2NsaWVudF9jb25uZWN0X2luZm8qKTsKY2hhciogdXJsX2xvY2F0aW9uKGNvbnN0IE1pbm5ldFVSTCwgSlNDb250ZXh0Kik7CmNvbnN0IGNoYXIqIHVybF9xdWVyeShjb25zdCBNaW5uZXRVUkwpOwp2b2lkIHVybF9mcm9tb2JqKE1pbm5ldFVSTCosIEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7CkJPT0wgdXJsX2Zyb212YWx1ZShNaW5uZXRVUkwqLCBKU1ZhbHVlQ29uc3QsIEpTQ29udGV4dCopOwp2b2lkIHVybF9kdW1wKGNvbnN0IGNoYXIqLCBNaW5uZXRVUkwgY29uc3QqKTsKTWlubmV0UHJvdG9jb2wgdXJsX3NldF9wcm90b2NvbChNaW5uZXRVUkwqIHVybCwgY29uc3QgY2hhciogcHJvdG8pOwpKU1ZhbHVlIHF1ZXJ5X29iamVjdChjb25zdCBjaGFyKiwgSlNDb250ZXh0Kik7CmNoYXIqIHF1ZXJ5X2Zyb20oSlNWYWx1ZUNvbnN0LCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfdXJsX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0VVJMKik7Ck1pbm5ldFVSTCogdXJsX25ldyhKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfdXJsX25ldyhKU0NvbnRleHQqLCBNaW5uZXRVUkwpOwpKU1ZhbHVlIG1pbm5ldF91cmxfbWV0aG9kKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpOwpKU1ZhbHVlIG1pbm5ldF91cmxfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF91cmxfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBpbnQsIEpTVmFsdWVDb25zdCBhcmd2W10pOwppbnQgbWlubmV0X3VybF9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfdXJsX2NsYXNzX2lkOwoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgp1cmxfcGF0aChjb25zdCBNaW5uZXRVUkwgdXJsKSB7CiAgcmV0dXJuIHVybC5wYXRoOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKdXJsX3ZhbGlkKGNvbnN0IE1pbm5ldFVSTCB1cmwpIHsKICByZXR1cm4gdXJsLmhvc3QgJiYgdXJsLnBhdGg7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0UHJvdG9jb2wKdXJsX3Byb3RvY29sKGNvbnN0IE1pbm5ldFVSTCB1cmwpIHsKICByZXR1cm4gcHJvdG9jb2xfbnVtYmVyKHVybC5wcm90b2NvbCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0VVJMKgp1cmxfZHVwKE1pbm5ldFVSTCogdXJsKSB7CiAgKyt1cmwtPnJlZl9jb3VudDsKICByZXR1cm4gdXJsOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFVSTAp1cmxfY2xvbmUoTWlubmV0VVJMIHVybCwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gKE1pbm5ldFVSTCl7CiAgICAgIC5yZWZfY291bnQgPSAxLAogICAgICAucHJvdG9jb2wgPSB1cmwucHJvdG9jb2wsCiAgICAgIC5ob3N0ID0gdXJsLmhvc3QgPyBqc19zdHJkdXAoY3R4LCB1cmwuaG9zdCkgOiAwLAogICAgICAucGF0aCA9IHVybC5wYXRoID8ganNfc3RyZHVwKGN0eCwgdXJsLnBhdGgpIDogMCwKICAgICAgLnBvcnQgPSB1cmwucG9ydCwKICB9Owp9CgpzdGF0aWMgaW5saW5lIHZvaWQKdXJsX2NvcHkoTWlubmV0VVJMKiB1cmwsIGNvbnN0IE1pbm5ldFVSTCBvdGhlciwgSlNDb250ZXh0KiBjdHgpIHsKICB1cmwtPnByb3RvY29sID0gb3RoZXIucHJvdG9jb2w7CiAgdXJsLT5ob3N0ID0gb3RoZXIuaG9zdCA/IGpzX3N0cmR1cChjdHgsIG90aGVyLmhvc3QpIDogMDsKICB1cmwtPnBhdGggPSBvdGhlci5wYXRoID8ganNfc3RyZHVwKGN0eCwgb3RoZXIucGF0aCkgOiAwOwogIHVybC0+cG9ydCA9IG90aGVyLnBvcnQ7Cn0KCnN0YXRpYyBjaGFyKgp1cmxfc3RyaW5nKE1pbm5ldFVSTCBjb25zdCogdXJsKSB7CiAgc3RhdGljIGNoYXIgYnVmWzQwOTZdOwoKICB1cmxfcHJpbnQoYnVmLCBzaXplb2YoYnVmKSwgKnVybCk7CiAgcmV0dXJuIGJ1ZjsKfQoKaW50IG1pbm5ldF91cmxfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiogbSk7CgpzdGF0aWMgaW5saW5lIE1pbm5ldFVSTCoKbWlubmV0X3VybF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3VybF9jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0VVJMKgptaW5uZXRfdXJsX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF91cmxfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1VSTF9IICovCgAAAAAAAAAAog0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOoLAAAAAAAA9AsAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACiDQAAI2lmbmRlZiBNSU5ORVRfVVJMX0gKI2RlZmluZSBNSU5ORVRfVVJMX0gKCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgPHN0ZGludC5oPgovLyNpbmNsdWRlICJtaW5uZXQuaCIKCnR5cGVkZWYgZW51bSBwcm90b2NvbCB7CiAgUFJPVE9DT0xfV1MgPSAwLAogIFBST1RPQ09MX1dTUywKICBQUk9UT0NPTF9IVFRQLAogIFBST1RPQ09MX0hUVFBTLAogIFBST1RPQ09MX1JBVywKICBQUk9UT0NPTF9UTFMsCn0gTWlubmV0UHJvdG9jb2w7CgpNaW5uZXRQcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiBwcm90b2NvbF9zdHJpbmcoTWlubmV0UHJvdG9jb2wpOwp1aW50MTZfdCBwcm90b2NvbF9kZWZhdWx0X3BvcnQoTWlubmV0UHJvdG9jb2wpOwpCT09MIHByb3RvY29sX2lzX3RscyhNaW5uZXRQcm90b2NvbCk7Cgp0eXBlZGVmIHN0cnVjdCB1cmwgewogIGludCByZWZfY291bnQ7CiAgY29uc3QgY2hhciogcHJvdG9jb2w7CiAgY2hhciAqaG9zdCwgKnBhdGg7CiAgdWludDE2X3QgcG9ydDsKfSBNaW5uZXRVUkw7CgpNaW5uZXRQcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiBwcm90b2NvbF9zdHJpbmcoTWlubmV0UHJvdG9jb2wpOwp1aW50MTZfdCBwcm90b2NvbF9kZWZhdWx0X3BvcnQoTWlubmV0UHJvdG9jb2wpOwpCT09MIHByb3RvY29sX2lzX3RscyhNaW5uZXRQcm90b2NvbCk7CnZvaWQgdXJsX2luaXQoTWlubmV0VVJMKiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqLCBpbnQgcG9ydCwgY29uc3QgY2hhciogcGF0aCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIHVybF9wYXJzZShNaW5uZXRVUkwqLCBjb25zdCBjaGFyKiwgSlNDb250ZXh0Kik7Ck1pbm5ldFVSTCB1cmxfY3JlYXRlKGNvbnN0IGNoYXIqLCBKU0NvbnRleHQqKTsKc2l6ZV90IHVybF9wcmludChjaGFyKiwgc2l6ZV90LCBjb25zdCBNaW5uZXRVUkwpOwpjaGFyKiB1cmxfZm9ybWF0KGNvbnN0IE1pbm5ldFVSTCwgSlNDb250ZXh0Kik7CnNpemVfdCB1cmxfbGVuZ3RoKGNvbnN0IE1pbm5ldFVSTCk7CnZvaWQgdXJsX2ZyZWUoTWlubmV0VVJMKiwgSlNDb250ZXh0Kik7CnZvaWQgdXJsX2ZyZWVfcnQoTWlubmV0VVJMKiwgSlNSdW50aW1lKik7CnZvaWQgdXJsX2luZm8oY29uc3QgTWlubmV0VVJMLCBzdHJ1Y3QgbHdzX2NsaWVudF9jb25uZWN0X2luZm8qKTsKY2hhciogdXJsX2xvY2F0aW9uKGNvbnN0IE1pbm5ldFVSTCwgSlNDb250ZXh0Kik7CmNvbnN0IGNoYXIqIHVybF9xdWVyeShjb25zdCBNaW5uZXRVUkwpOwp2b2lkIHVybF9mcm9tb2JqKE1pbm5ldFVSTCosIEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7CkJPT0wgdXJsX2Zyb212YWx1ZShNaW5uZXRVUkwqLCBKU1ZhbHVlQ29uc3QsIEpTQ29udGV4dCopOwp2b2lkIHVybF9kdW1wKGNvbnN0IGNoYXIqLCBNaW5uZXRVUkwgY29uc3QqKTsKTWlubmV0UHJvdG9jb2wgdXJsX3NldF9wcm90b2NvbChNaW5uZXRVUkwqIHVybCwgY29uc3QgY2hhciogcHJvdG8pOwpKU1ZhbHVlIHF1ZXJ5X29iamVjdChjb25zdCBjaGFyKiwgSlNDb250ZXh0Kik7CmNoYXIqIHF1ZXJ5X2Zyb20oSlNWYWx1ZUNvbnN0LCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfdXJsX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0VVJMKik7Ck1pbm5ldFVSTCogdXJsX25ldyhKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfdXJsX25ldyhKU0NvbnRleHQqLCBNaW5uZXRVUkwpOwpKU1ZhbHVlIG1pbm5ldF91cmxfbWV0aG9kKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpOwpKU1ZhbHVlIG1pbm5ldF91cmxfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF91cmxfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBpbnQsIEpTVmFsdWVDb25zdCBhcmd2W10pOwppbnQgbWlubmV0X3VybF9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfdXJsX2NsYXNzX2lkOwoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgp1cmxfcGF0aChjb25zdCBNaW5uZXRVUkwgdXJsKSB7CiAgcmV0dXJuIHVybC5wYXRoOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKdXJsX3ZhbGlkKGNvbnN0IE1pbm5ldFVSTCB1cmwpIHsKICByZXR1cm4gdXJsLmhvc3QgJiYgdXJsLnBhdGg7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0UHJvdG9jb2wKdXJsX3Byb3RvY29sKGNvbnN0IE1pbm5ldFVSTCB1cmwpIHsKICByZXR1cm4gcHJvdG9jb2xfbnVtYmVyKHVybC5wcm90b2NvbCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0VVJMKgp1cmxfZHVwKE1pbm5ldFVSTCogdXJsKSB7CiAgKyt1cmwtPnJlZl9jb3VudDsKICByZXR1cm4gdXJsOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFVSTAp1cmxfY2xvbmUoTWlubmV0VVJMIHVybCwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gKE1pbm5ldFVSTCl7CiAgICAgIC5yZWZfY291bnQgPSAxLAogICAgICAucHJvdG9jb2wgPSB1cmwucHJvdG9jb2wsCiAgICAgIC5ob3N0ID0gdXJsLmhvc3QgPyBqc19zdHJkdXAoY3R4LCB1cmwuaG9zdCkgOiAwLAogICAgICAucGF0aCA9IHVybC5wYXRoID8ganNfc3RyZHVwKGN0eCwgdXJsLnBhdGgpIDogMCwKICAgICAgLnBvcnQgPSB1cmwucG9ydCwKICB9Owp9CgpzdGF0aWMgaW5saW5lIHZvaWQKdXJsX2NvcHkoTWlubmV0VVJMKiB1cmwsIGNvbnN0IE1pbm5ldFVSTCBvdGhlciwgSlNDb250ZXh0KiBjdHgpIHsKICB1cmwtPnByb3RvY29sID0gb3RoZXIucHJvdG9jb2w7CiAgdXJsLT5ob3N0ID0gb3RoZXIuaG9zdCA/IGpzX3N0cmR1cChjdHgsIG90aGVyLmhvc3QpIDogMDsKICB1cmwtPnBhdGggPSBvdGhlci5wYXRoID8ganNfc3RyZHVwKGN0eCwgb3RoZXIucGF0aCkgOiAwOwogIHVybC0+cG9ydCA9IG90aGVyLnBvcnQ7Cn0KCnN0YXRpYyBjaGFyKgp1cmxfc3RyaW5nKE1pbm5ldFVSTCBjb25zdCogdXJsKSB7CiAgc3RhdGljIGNoYXIgYnVmWzQwOTZdOwoKICB1cmxfcHJpbnQoYnVmLCBzaXplb2YoYnVmKSwgKnVybCk7CiAgcmV0dXJuIGJ1ZjsKfQoKaW50IG1pbm5ldF91cmxfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiogbSk7CgpzdGF0aWMgaW5saW5lIE1pbm5ldFVSTCoKbWlubmV0X3VybF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3VybF9jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0VVJMKgptaW5uZXRfdXJsX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF91cmxfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1VSTF9IICovCgAAAAAAAAAAog0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOoLAAAAAAAA9AsAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "||"
					},
					"AwAAAOIIAAAAAAAA4wgAAAAAAAAAAAAA4wgAAAAAAADjCAAAAAAAAAIAAAAmJuMIAAAAAAAA5AgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIIAAAAAAAA5AgAAAAAAAAAAAAAAADwvw"
				],
				[
					23,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAACiDQAAI2lmbmRlZiBNSU5ORVRfVVJMX0gKI2RlZmluZSBNSU5ORVRfVVJMX0gKCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgPHN0ZGludC5oPgovLyNpbmNsdWRlICJtaW5uZXQuaCIKCnR5cGVkZWYgZW51bSBwcm90b2NvbCB7CiAgUFJPVE9DT0xfV1MgPSAwLAogIFBST1RPQ09MX1dTUywKICBQUk9UT0NPTF9IVFRQLAogIFBST1RPQ09MX0hUVFBTLAogIFBST1RPQ09MX1JBVywKICBQUk9UT0NPTF9UTFMsCn0gTWlubmV0UHJvdG9jb2w7CgpNaW5uZXRQcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiBwcm90b2NvbF9zdHJpbmcoTWlubmV0UHJvdG9jb2wpOwp1aW50MTZfdCBwcm90b2NvbF9kZWZhdWx0X3BvcnQoTWlubmV0UHJvdG9jb2wpOwpCT09MIHByb3RvY29sX2lzX3RscyhNaW5uZXRQcm90b2NvbCk7Cgp0eXBlZGVmIHN0cnVjdCB1cmwgewogIGludCByZWZfY291bnQ7CiAgY29uc3QgY2hhciogcHJvdG9jb2w7CiAgY2hhciAqaG9zdCwgKnBhdGg7CiAgdWludDE2X3QgcG9ydDsKfSBNaW5uZXRVUkw7CgpNaW5uZXRQcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiBwcm90b2NvbF9zdHJpbmcoTWlubmV0UHJvdG9jb2wpOwp1aW50MTZfdCBwcm90b2NvbF9kZWZhdWx0X3BvcnQoTWlubmV0UHJvdG9jb2wpOwpCT09MIHByb3RvY29sX2lzX3RscyhNaW5uZXRQcm90b2NvbCk7CnZvaWQgdXJsX2luaXQoTWlubmV0VVJMKiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqLCBpbnQgcG9ydCwgY29uc3QgY2hhciogcGF0aCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIHVybF9wYXJzZShNaW5uZXRVUkwqLCBjb25zdCBjaGFyKiwgSlNDb250ZXh0Kik7Ck1pbm5ldFVSTCB1cmxfY3JlYXRlKGNvbnN0IGNoYXIqLCBKU0NvbnRleHQqKTsKc2l6ZV90IHVybF9wcmludChjaGFyKiwgc2l6ZV90LCBjb25zdCBNaW5uZXRVUkwpOwpjaGFyKiB1cmxfZm9ybWF0KGNvbnN0IE1pbm5ldFVSTCwgSlNDb250ZXh0Kik7CnNpemVfdCB1cmxfbGVuZ3RoKGNvbnN0IE1pbm5ldFVSTCk7CnZvaWQgdXJsX2ZyZWUoTWlubmV0VVJMKiwgSlNDb250ZXh0Kik7CnZvaWQgdXJsX2ZyZWVfcnQoTWlubmV0VVJMKiwgSlNSdW50aW1lKik7CnZvaWQgdXJsX2luZm8oY29uc3QgTWlubmV0VVJMLCBzdHJ1Y3QgbHdzX2NsaWVudF9jb25uZWN0X2luZm8qKTsKY2hhciogdXJsX2xvY2F0aW9uKGNvbnN0IE1pbm5ldFVSTCwgSlNDb250ZXh0Kik7CmNvbnN0IGNoYXIqIHVybF9xdWVyeShjb25zdCBNaW5uZXRVUkwpOwp2b2lkIHVybF9mcm9tb2JqKE1pbm5ldFVSTCosIEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7CkJPT0wgdXJsX2Zyb212YWx1ZShNaW5uZXRVUkwqLCBKU1ZhbHVlQ29uc3QsIEpTQ29udGV4dCopOwp2b2lkIHVybF9kdW1wKGNvbnN0IGNoYXIqLCBNaW5uZXRVUkwgY29uc3QqKTsKTWlubmV0UHJvdG9jb2wgdXJsX3NldF9wcm90b2NvbChNaW5uZXRVUkwqIHVybCwgY29uc3QgY2hhciogcHJvdG8pOwpKU1ZhbHVlIHF1ZXJ5X29iamVjdChjb25zdCBjaGFyKiwgSlNDb250ZXh0Kik7CmNoYXIqIHF1ZXJ5X2Zyb20oSlNWYWx1ZUNvbnN0LCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfdXJsX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0VVJMKik7Ck1pbm5ldFVSTCogdXJsX25ldyhKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfdXJsX25ldyhKU0NvbnRleHQqLCBNaW5uZXRVUkwpOwpKU1ZhbHVlIG1pbm5ldF91cmxfbWV0aG9kKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpOwpKU1ZhbHVlIG1pbm5ldF91cmxfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF91cmxfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBpbnQsIEpTVmFsdWVDb25zdCBhcmd2W10pOwppbnQgbWlubmV0X3VybF9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfdXJsX2NsYXNzX2lkOwoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgp1cmxfcGF0aChjb25zdCBNaW5uZXRVUkwgdXJsKSB7CiAgcmV0dXJuIHVybC5wYXRoOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKdXJsX3ZhbGlkKGNvbnN0IE1pbm5ldFVSTCB1cmwpIHsKICByZXR1cm4gdXJsLmhvc3QgfHwgdXJsLnBhdGg7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0UHJvdG9jb2wKdXJsX3Byb3RvY29sKGNvbnN0IE1pbm5ldFVSTCB1cmwpIHsKICByZXR1cm4gcHJvdG9jb2xfbnVtYmVyKHVybC5wcm90b2NvbCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0VVJMKgp1cmxfZHVwKE1pbm5ldFVSTCogdXJsKSB7CiAgKyt1cmwtPnJlZl9jb3VudDsKICByZXR1cm4gdXJsOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFVSTAp1cmxfY2xvbmUoTWlubmV0VVJMIHVybCwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gKE1pbm5ldFVSTCl7CiAgICAgIC5yZWZfY291bnQgPSAxLAogICAgICAucHJvdG9jb2wgPSB1cmwucHJvdG9jb2wsCiAgICAgIC5ob3N0ID0gdXJsLmhvc3QgPyBqc19zdHJkdXAoY3R4LCB1cmwuaG9zdCkgOiAwLAogICAgICAucGF0aCA9IHVybC5wYXRoID8ganNfc3RyZHVwKGN0eCwgdXJsLnBhdGgpIDogMCwKICAgICAgLnBvcnQgPSB1cmwucG9ydCwKICB9Owp9CgpzdGF0aWMgaW5saW5lIHZvaWQKdXJsX2NvcHkoTWlubmV0VVJMKiB1cmwsIGNvbnN0IE1pbm5ldFVSTCBvdGhlciwgSlNDb250ZXh0KiBjdHgpIHsKICB1cmwtPnByb3RvY29sID0gb3RoZXIucHJvdG9jb2w7CiAgdXJsLT5ob3N0ID0gb3RoZXIuaG9zdCA/IGpzX3N0cmR1cChjdHgsIG90aGVyLmhvc3QpIDogMDsKICB1cmwtPnBhdGggPSBvdGhlci5wYXRoID8ganNfc3RyZHVwKGN0eCwgb3RoZXIucGF0aCkgOiAwOwogIHVybC0+cG9ydCA9IG90aGVyLnBvcnQ7Cn0KCnN0YXRpYyBjaGFyKgp1cmxfc3RyaW5nKE1pbm5ldFVSTCBjb25zdCogdXJsKSB7CiAgc3RhdGljIGNoYXIgYnVmWzQwOTZdOwoKICB1cmxfcHJpbnQoYnVmLCBzaXplb2YoYnVmKSwgKnVybCk7CiAgcmV0dXJuIGJ1ZjsKfQoKaW50IG1pbm5ldF91cmxfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiogbSk7CgpzdGF0aWMgaW5saW5lIE1pbm5ldFVSTCoKbWlubmV0X3VybF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3VybF9jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0VVJMKgptaW5uZXRfdXJsX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF91cmxfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1VSTF9IICovCgAAAAAAAAAAog0AAAAAAAAAAAAAAAAAAAAAAACiDQAAAAAAAAAAAAAAAAAAAAAAAKINAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQIAAAAAAAA5AgAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACiDQAAI2lmbmRlZiBNSU5ORVRfVVJMX0gKI2RlZmluZSBNSU5ORVRfVVJMX0gKCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgPHN0ZGludC5oPgovLyNpbmNsdWRlICJtaW5uZXQuaCIKCnR5cGVkZWYgZW51bSBwcm90b2NvbCB7CiAgUFJPVE9DT0xfV1MgPSAwLAogIFBST1RPQ09MX1dTUywKICBQUk9UT0NPTF9IVFRQLAogIFBST1RPQ09MX0hUVFBTLAogIFBST1RPQ09MX1JBVywKICBQUk9UT0NPTF9UTFMsCn0gTWlubmV0UHJvdG9jb2w7CgpNaW5uZXRQcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiBwcm90b2NvbF9zdHJpbmcoTWlubmV0UHJvdG9jb2wpOwp1aW50MTZfdCBwcm90b2NvbF9kZWZhdWx0X3BvcnQoTWlubmV0UHJvdG9jb2wpOwpCT09MIHByb3RvY29sX2lzX3RscyhNaW5uZXRQcm90b2NvbCk7Cgp0eXBlZGVmIHN0cnVjdCB1cmwgewogIGludCByZWZfY291bnQ7CiAgY29uc3QgY2hhciogcHJvdG9jb2w7CiAgY2hhciAqaG9zdCwgKnBhdGg7CiAgdWludDE2X3QgcG9ydDsKfSBNaW5uZXRVUkw7CgpNaW5uZXRQcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiBwcm90b2NvbF9zdHJpbmcoTWlubmV0UHJvdG9jb2wpOwp1aW50MTZfdCBwcm90b2NvbF9kZWZhdWx0X3BvcnQoTWlubmV0UHJvdG9jb2wpOwpCT09MIHByb3RvY29sX2lzX3RscyhNaW5uZXRQcm90b2NvbCk7CnZvaWQgdXJsX2luaXQoTWlubmV0VVJMKiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqLCBpbnQgcG9ydCwgY29uc3QgY2hhciogcGF0aCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIHVybF9wYXJzZShNaW5uZXRVUkwqLCBjb25zdCBjaGFyKiwgSlNDb250ZXh0Kik7Ck1pbm5ldFVSTCB1cmxfY3JlYXRlKGNvbnN0IGNoYXIqLCBKU0NvbnRleHQqKTsKc2l6ZV90IHVybF9wcmludChjaGFyKiwgc2l6ZV90LCBjb25zdCBNaW5uZXRVUkwpOwpjaGFyKiB1cmxfZm9ybWF0KGNvbnN0IE1pbm5ldFVSTCwgSlNDb250ZXh0Kik7CnNpemVfdCB1cmxfbGVuZ3RoKGNvbnN0IE1pbm5ldFVSTCk7CnZvaWQgdXJsX2ZyZWUoTWlubmV0VVJMKiwgSlNDb250ZXh0Kik7CnZvaWQgdXJsX2ZyZWVfcnQoTWlubmV0VVJMKiwgSlNSdW50aW1lKik7CnZvaWQgdXJsX2luZm8oY29uc3QgTWlubmV0VVJMLCBzdHJ1Y3QgbHdzX2NsaWVudF9jb25uZWN0X2luZm8qKTsKY2hhciogdXJsX2xvY2F0aW9uKGNvbnN0IE1pbm5ldFVSTCwgSlNDb250ZXh0Kik7CmNvbnN0IGNoYXIqIHVybF9xdWVyeShjb25zdCBNaW5uZXRVUkwpOwp2b2lkIHVybF9mcm9tb2JqKE1pbm5ldFVSTCosIEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7CkJPT0wgdXJsX2Zyb212YWx1ZShNaW5uZXRVUkwqLCBKU1ZhbHVlQ29uc3QsIEpTQ29udGV4dCopOwp2b2lkIHVybF9kdW1wKGNvbnN0IGNoYXIqLCBNaW5uZXRVUkwgY29uc3QqKTsKTWlubmV0UHJvdG9jb2wgdXJsX3NldF9wcm90b2NvbChNaW5uZXRVUkwqIHVybCwgY29uc3QgY2hhciogcHJvdG8pOwpKU1ZhbHVlIHF1ZXJ5X29iamVjdChjb25zdCBjaGFyKiwgSlNDb250ZXh0Kik7CmNoYXIqIHF1ZXJ5X2Zyb20oSlNWYWx1ZUNvbnN0LCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfdXJsX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0VVJMKik7Ck1pbm5ldFVSTCogdXJsX25ldyhKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfdXJsX25ldyhKU0NvbnRleHQqLCBNaW5uZXRVUkwpOwpKU1ZhbHVlIG1pbm5ldF91cmxfbWV0aG9kKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpOwpKU1ZhbHVlIG1pbm5ldF91cmxfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF91cmxfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBpbnQsIEpTVmFsdWVDb25zdCBhcmd2W10pOwppbnQgbWlubmV0X3VybF9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfdXJsX2NsYXNzX2lkOwoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgp1cmxfcGF0aChjb25zdCBNaW5uZXRVUkwgdXJsKSB7CiAgcmV0dXJuIHVybC5wYXRoOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKdXJsX3ZhbGlkKGNvbnN0IE1pbm5ldFVSTCB1cmwpIHsKICByZXR1cm4gdXJsLmhvc3QgfHwgdXJsLnBhdGg7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0UHJvdG9jb2wKdXJsX3Byb3RvY29sKGNvbnN0IE1pbm5ldFVSTCB1cmwpIHsKICByZXR1cm4gcHJvdG9jb2xfbnVtYmVyKHVybC5wcm90b2NvbCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0VVJMKgp1cmxfZHVwKE1pbm5ldFVSTCogdXJsKSB7CiAgKyt1cmwtPnJlZl9jb3VudDsKICByZXR1cm4gdXJsOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFVSTAp1cmxfY2xvbmUoTWlubmV0VVJMIHVybCwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gKE1pbm5ldFVSTCl7CiAgICAgIC5yZWZfY291bnQgPSAxLAogICAgICAucHJvdG9jb2wgPSB1cmwucHJvdG9jb2wsCiAgICAgIC5ob3N0ID0gdXJsLmhvc3QgPyBqc19zdHJkdXAoY3R4LCB1cmwuaG9zdCkgOiAwLAogICAgICAucGF0aCA9IHVybC5wYXRoID8ganNfc3RyZHVwKGN0eCwgdXJsLnBhdGgpIDogMCwKICAgICAgLnBvcnQgPSB1cmwucG9ydCwKICB9Owp9CgpzdGF0aWMgaW5saW5lIHZvaWQKdXJsX2NvcHkoTWlubmV0VVJMKiB1cmwsIGNvbnN0IE1pbm5ldFVSTCBvdGhlciwgSlNDb250ZXh0KiBjdHgpIHsKICB1cmwtPnByb3RvY29sID0gb3RoZXIucHJvdG9jb2w7CiAgdXJsLT5ob3N0ID0gb3RoZXIuaG9zdCA/IGpzX3N0cmR1cChjdHgsIG90aGVyLmhvc3QpIDogMDsKICB1cmwtPnBhdGggPSBvdGhlci5wYXRoID8ganNfc3RyZHVwKGN0eCwgb3RoZXIucGF0aCkgOiAwOwogIHVybC0+cG9ydCA9IG90aGVyLnBvcnQ7Cn0KCnN0YXRpYyBjaGFyKgp1cmxfc3RyaW5nKE1pbm5ldFVSTCBjb25zdCogdXJsKSB7CiAgc3RhdGljIGNoYXIgYnVmWzQwOTZdOwoKICB1cmxfcHJpbnQoYnVmLCBzaXplb2YoYnVmKSwgKnVybCk7CiAgcmV0dXJuIGJ1ZjsKfQoKaW50IG1pbm5ldF91cmxfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiogbSk7CgpzdGF0aWMgaW5saW5lIE1pbm5ldFVSTCoKbWlubmV0X3VybF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3VybF9jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0VVJMKgptaW5uZXRfdXJsX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF91cmxfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1VSTF9IICovCgAAAAAAAAAAog0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AgAAAAAAADkCAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACiDQAAI2lmbmRlZiBNSU5ORVRfVVJMX0gKI2RlZmluZSBNSU5ORVRfVVJMX0gKCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgPHN0ZGludC5oPgovLyNpbmNsdWRlICJtaW5uZXQuaCIKCnR5cGVkZWYgZW51bSBwcm90b2NvbCB7CiAgUFJPVE9DT0xfV1MgPSAwLAogIFBST1RPQ09MX1dTUywKICBQUk9UT0NPTF9IVFRQLAogIFBST1RPQ09MX0hUVFBTLAogIFBST1RPQ09MX1JBVywKICBQUk9UT0NPTF9UTFMsCn0gTWlubmV0UHJvdG9jb2w7CgpNaW5uZXRQcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiBwcm90b2NvbF9zdHJpbmcoTWlubmV0UHJvdG9jb2wpOwp1aW50MTZfdCBwcm90b2NvbF9kZWZhdWx0X3BvcnQoTWlubmV0UHJvdG9jb2wpOwpCT09MIHByb3RvY29sX2lzX3RscyhNaW5uZXRQcm90b2NvbCk7Cgp0eXBlZGVmIHN0cnVjdCB1cmwgewogIGludCByZWZfY291bnQ7CiAgY29uc3QgY2hhciogcHJvdG9jb2w7CiAgY2hhciAqaG9zdCwgKnBhdGg7CiAgdWludDE2X3QgcG9ydDsKfSBNaW5uZXRVUkw7CgpNaW5uZXRQcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiBwcm90b2NvbF9zdHJpbmcoTWlubmV0UHJvdG9jb2wpOwp1aW50MTZfdCBwcm90b2NvbF9kZWZhdWx0X3BvcnQoTWlubmV0UHJvdG9jb2wpOwpCT09MIHByb3RvY29sX2lzX3RscyhNaW5uZXRQcm90b2NvbCk7CnZvaWQgdXJsX2luaXQoTWlubmV0VVJMKiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqLCBpbnQgcG9ydCwgY29uc3QgY2hhciogcGF0aCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIHVybF9wYXJzZShNaW5uZXRVUkwqLCBjb25zdCBjaGFyKiwgSlNDb250ZXh0Kik7Ck1pbm5ldFVSTCB1cmxfY3JlYXRlKGNvbnN0IGNoYXIqLCBKU0NvbnRleHQqKTsKc2l6ZV90IHVybF9wcmludChjaGFyKiwgc2l6ZV90LCBjb25zdCBNaW5uZXRVUkwpOwpjaGFyKiB1cmxfZm9ybWF0KGNvbnN0IE1pbm5ldFVSTCwgSlNDb250ZXh0Kik7CnNpemVfdCB1cmxfbGVuZ3RoKGNvbnN0IE1pbm5ldFVSTCk7CnZvaWQgdXJsX2ZyZWUoTWlubmV0VVJMKiwgSlNDb250ZXh0Kik7CnZvaWQgdXJsX2ZyZWVfcnQoTWlubmV0VVJMKiwgSlNSdW50aW1lKik7CnZvaWQgdXJsX2luZm8oY29uc3QgTWlubmV0VVJMLCBzdHJ1Y3QgbHdzX2NsaWVudF9jb25uZWN0X2luZm8qKTsKY2hhciogdXJsX2xvY2F0aW9uKGNvbnN0IE1pbm5ldFVSTCwgSlNDb250ZXh0Kik7CmNvbnN0IGNoYXIqIHVybF9xdWVyeShjb25zdCBNaW5uZXRVUkwpOwp2b2lkIHVybF9mcm9tb2JqKE1pbm5ldFVSTCosIEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7CkJPT0wgdXJsX2Zyb212YWx1ZShNaW5uZXRVUkwqLCBKU1ZhbHVlQ29uc3QsIEpTQ29udGV4dCopOwp2b2lkIHVybF9kdW1wKGNvbnN0IGNoYXIqLCBNaW5uZXRVUkwgY29uc3QqKTsKTWlubmV0UHJvdG9jb2wgdXJsX3NldF9wcm90b2NvbChNaW5uZXRVUkwqIHVybCwgY29uc3QgY2hhciogcHJvdG8pOwpKU1ZhbHVlIHF1ZXJ5X29iamVjdChjb25zdCBjaGFyKiwgSlNDb250ZXh0Kik7CmNoYXIqIHF1ZXJ5X2Zyb20oSlNWYWx1ZUNvbnN0LCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfdXJsX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0VVJMKik7Ck1pbm5ldFVSTCogdXJsX25ldyhKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfdXJsX25ldyhKU0NvbnRleHQqLCBNaW5uZXRVUkwpOwpKU1ZhbHVlIG1pbm5ldF91cmxfbWV0aG9kKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpOwpKU1ZhbHVlIG1pbm5ldF91cmxfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF91cmxfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBpbnQsIEpTVmFsdWVDb25zdCBhcmd2W10pOwppbnQgbWlubmV0X3VybF9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfdXJsX2NsYXNzX2lkOwoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgp1cmxfcGF0aChjb25zdCBNaW5uZXRVUkwgdXJsKSB7CiAgcmV0dXJuIHVybC5wYXRoOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKdXJsX3ZhbGlkKGNvbnN0IE1pbm5ldFVSTCB1cmwpIHsKICByZXR1cm4gdXJsLmhvc3QgfHwgdXJsLnBhdGg7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0UHJvdG9jb2wKdXJsX3Byb3RvY29sKGNvbnN0IE1pbm5ldFVSTCB1cmwpIHsKICByZXR1cm4gcHJvdG9jb2xfbnVtYmVyKHVybC5wcm90b2NvbCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0VVJMKgp1cmxfZHVwKE1pbm5ldFVSTCogdXJsKSB7CiAgKyt1cmwtPnJlZl9jb3VudDsKICByZXR1cm4gdXJsOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFVSTAp1cmxfY2xvbmUoTWlubmV0VVJMIHVybCwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gKE1pbm5ldFVSTCl7CiAgICAgIC5yZWZfY291bnQgPSAxLAogICAgICAucHJvdG9jb2wgPSB1cmwucHJvdG9jb2wsCiAgICAgIC5ob3N0ID0gdXJsLmhvc3QgPyBqc19zdHJkdXAoY3R4LCB1cmwuaG9zdCkgOiAwLAogICAgICAucGF0aCA9IHVybC5wYXRoID8ganNfc3RyZHVwKGN0eCwgdXJsLnBhdGgpIDogMCwKICAgICAgLnBvcnQgPSB1cmwucG9ydCwKICB9Owp9CgpzdGF0aWMgaW5saW5lIHZvaWQKdXJsX2NvcHkoTWlubmV0VVJMKiB1cmwsIGNvbnN0IE1pbm5ldFVSTCBvdGhlciwgSlNDb250ZXh0KiBjdHgpIHsKICB1cmwtPnByb3RvY29sID0gb3RoZXIucHJvdG9jb2w7CiAgdXJsLT5ob3N0ID0gb3RoZXIuaG9zdCA/IGpzX3N0cmR1cChjdHgsIG90aGVyLmhvc3QpIDogMDsKICB1cmwtPnBhdGggPSBvdGhlci5wYXRoID8ganNfc3RyZHVwKGN0eCwgb3RoZXIucGF0aCkgOiAwOwogIHVybC0+cG9ydCA9IG90aGVyLnBvcnQ7Cn0KCnN0YXRpYyBjaGFyKgp1cmxfc3RyaW5nKE1pbm5ldFVSTCBjb25zdCogdXJsKSB7CiAgc3RhdGljIGNoYXIgYnVmWzQwOTZdOwoKICB1cmxfcHJpbnQoYnVmLCBzaXplb2YoYnVmKSwgKnVybCk7CiAgcmV0dXJuIGJ1ZjsKfQoKaW50IG1pbm5ldF91cmxfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiogbSk7CgpzdGF0aWMgaW5saW5lIE1pbm5ldFVSTCoKbWlubmV0X3VybF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3VybF9jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0VVJMKgptaW5uZXRfdXJsX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF91cmxfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1VSTF9IICovCgAAAAAAAAAAog0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AgAAAAAAADkCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACiDQAAI2lmbmRlZiBNSU5ORVRfVVJMX0gKI2RlZmluZSBNSU5ORVRfVVJMX0gKCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgPHN0ZGludC5oPgovLyNpbmNsdWRlICJtaW5uZXQuaCIKCnR5cGVkZWYgZW51bSBwcm90b2NvbCB7CiAgUFJPVE9DT0xfV1MgPSAwLAogIFBST1RPQ09MX1dTUywKICBQUk9UT0NPTF9IVFRQLAogIFBST1RPQ09MX0hUVFBTLAogIFBST1RPQ09MX1JBVywKICBQUk9UT0NPTF9UTFMsCn0gTWlubmV0UHJvdG9jb2w7CgpNaW5uZXRQcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiBwcm90b2NvbF9zdHJpbmcoTWlubmV0UHJvdG9jb2wpOwp1aW50MTZfdCBwcm90b2NvbF9kZWZhdWx0X3BvcnQoTWlubmV0UHJvdG9jb2wpOwpCT09MIHByb3RvY29sX2lzX3RscyhNaW5uZXRQcm90b2NvbCk7Cgp0eXBlZGVmIHN0cnVjdCB1cmwgewogIGludCByZWZfY291bnQ7CiAgY29uc3QgY2hhciogcHJvdG9jb2w7CiAgY2hhciAqaG9zdCwgKnBhdGg7CiAgdWludDE2X3QgcG9ydDsKfSBNaW5uZXRVUkw7CgpNaW5uZXRQcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiBwcm90b2NvbF9zdHJpbmcoTWlubmV0UHJvdG9jb2wpOwp1aW50MTZfdCBwcm90b2NvbF9kZWZhdWx0X3BvcnQoTWlubmV0UHJvdG9jb2wpOwpCT09MIHByb3RvY29sX2lzX3RscyhNaW5uZXRQcm90b2NvbCk7CnZvaWQgdXJsX2luaXQoTWlubmV0VVJMKiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqLCBpbnQgcG9ydCwgY29uc3QgY2hhciogcGF0aCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIHVybF9wYXJzZShNaW5uZXRVUkwqLCBjb25zdCBjaGFyKiwgSlNDb250ZXh0Kik7Ck1pbm5ldFVSTCB1cmxfY3JlYXRlKGNvbnN0IGNoYXIqLCBKU0NvbnRleHQqKTsKc2l6ZV90IHVybF9wcmludChjaGFyKiwgc2l6ZV90LCBjb25zdCBNaW5uZXRVUkwpOwpjaGFyKiB1cmxfZm9ybWF0KGNvbnN0IE1pbm5ldFVSTCwgSlNDb250ZXh0Kik7CnNpemVfdCB1cmxfbGVuZ3RoKGNvbnN0IE1pbm5ldFVSTCk7CnZvaWQgdXJsX2ZyZWUoTWlubmV0VVJMKiwgSlNDb250ZXh0Kik7CnZvaWQgdXJsX2ZyZWVfcnQoTWlubmV0VVJMKiwgSlNSdW50aW1lKik7CnZvaWQgdXJsX2luZm8oY29uc3QgTWlubmV0VVJMLCBzdHJ1Y3QgbHdzX2NsaWVudF9jb25uZWN0X2luZm8qKTsKY2hhciogdXJsX2xvY2F0aW9uKGNvbnN0IE1pbm5ldFVSTCwgSlNDb250ZXh0Kik7CmNvbnN0IGNoYXIqIHVybF9xdWVyeShjb25zdCBNaW5uZXRVUkwpOwp2b2lkIHVybF9mcm9tb2JqKE1pbm5ldFVSTCosIEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7CkJPT0wgdXJsX2Zyb212YWx1ZShNaW5uZXRVUkwqLCBKU1ZhbHVlQ29uc3QsIEpTQ29udGV4dCopOwp2b2lkIHVybF9kdW1wKGNvbnN0IGNoYXIqLCBNaW5uZXRVUkwgY29uc3QqKTsKTWlubmV0UHJvdG9jb2wgdXJsX3NldF9wcm90b2NvbChNaW5uZXRVUkwqIHVybCwgY29uc3QgY2hhciogcHJvdG8pOwpKU1ZhbHVlIHF1ZXJ5X29iamVjdChjb25zdCBjaGFyKiwgSlNDb250ZXh0Kik7CmNoYXIqIHF1ZXJ5X2Zyb20oSlNWYWx1ZUNvbnN0LCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfdXJsX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0VVJMKik7Ck1pbm5ldFVSTCogdXJsX25ldyhKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfdXJsX25ldyhKU0NvbnRleHQqLCBNaW5uZXRVUkwpOwpKU1ZhbHVlIG1pbm5ldF91cmxfbWV0aG9kKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpOwpKU1ZhbHVlIG1pbm5ldF91cmxfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF91cmxfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBpbnQsIEpTVmFsdWVDb25zdCBhcmd2W10pOwppbnQgbWlubmV0X3VybF9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfdXJsX2NsYXNzX2lkOwoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgp1cmxfcGF0aChjb25zdCBNaW5uZXRVUkwgdXJsKSB7CiAgcmV0dXJuIHVybC5wYXRoOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKdXJsX3ZhbGlkKGNvbnN0IE1pbm5ldFVSTCB1cmwpIHsKICByZXR1cm4gdXJsLmhvc3QgfHwgdXJsLnBhdGg7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0UHJvdG9jb2wKdXJsX3Byb3RvY29sKGNvbnN0IE1pbm5ldFVSTCB1cmwpIHsKICByZXR1cm4gcHJvdG9jb2xfbnVtYmVyKHVybC5wcm90b2NvbCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0VVJMKgp1cmxfZHVwKE1pbm5ldFVSTCogdXJsKSB7CiAgKyt1cmwtPnJlZl9jb3VudDsKICByZXR1cm4gdXJsOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFVSTAp1cmxfY2xvbmUoTWlubmV0VVJMIHVybCwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gKE1pbm5ldFVSTCl7CiAgICAgIC5yZWZfY291bnQgPSAxLAogICAgICAucHJvdG9jb2wgPSB1cmwucHJvdG9jb2wsCiAgICAgIC5ob3N0ID0gdXJsLmhvc3QgPyBqc19zdHJkdXAoY3R4LCB1cmwuaG9zdCkgOiAwLAogICAgICAucGF0aCA9IHVybC5wYXRoID8ganNfc3RyZHVwKGN0eCwgdXJsLnBhdGgpIDogMCwKICAgICAgLnBvcnQgPSB1cmwucG9ydCwKICB9Owp9CgpzdGF0aWMgaW5saW5lIHZvaWQKdXJsX2NvcHkoTWlubmV0VVJMKiB1cmwsIGNvbnN0IE1pbm5ldFVSTCBvdGhlciwgSlNDb250ZXh0KiBjdHgpIHsKICB1cmwtPnByb3RvY29sID0gb3RoZXIucHJvdG9jb2w7CiAgdXJsLT5ob3N0ID0gb3RoZXIuaG9zdCA/IGpzX3N0cmR1cChjdHgsIG90aGVyLmhvc3QpIDogMDsKICB1cmwtPnBhdGggPSBvdGhlci5wYXRoID8ganNfc3RyZHVwKGN0eCwgb3RoZXIucGF0aCkgOiAwOwogIHVybC0+cG9ydCA9IG90aGVyLnBvcnQ7Cn0KCnN0YXRpYyBjaGFyKgp1cmxfc3RyaW5nKE1pbm5ldFVSTCBjb25zdCogdXJsKSB7CiAgc3RhdGljIGNoYXIgYnVmWzQwOTZdOwoKICB1cmxfcHJpbnQoYnVmLCBzaXplb2YoYnVmKSwgKnVybCk7CiAgcmV0dXJuIGJ1ZjsKfQoKaW50IG1pbm5ldF91cmxfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiogbSk7CgpzdGF0aWMgaW5saW5lIE1pbm5ldFVSTCoKbWlubmV0X3VybF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3VybF9jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0VVJMKgptaW5uZXRfdXJsX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF91cmxfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1VSTF9IICovCgAAAAAAAAAAog0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AgAAAAAAADkCAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACiDQAAI2lmbmRlZiBNSU5ORVRfVVJMX0gKI2RlZmluZSBNSU5ORVRfVVJMX0gKCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgPHN0ZGludC5oPgovLyNpbmNsdWRlICJtaW5uZXQuaCIKCnR5cGVkZWYgZW51bSBwcm90b2NvbCB7CiAgUFJPVE9DT0xfV1MgPSAwLAogIFBST1RPQ09MX1dTUywKICBQUk9UT0NPTF9IVFRQLAogIFBST1RPQ09MX0hUVFBTLAogIFBST1RPQ09MX1JBVywKICBQUk9UT0NPTF9UTFMsCn0gTWlubmV0UHJvdG9jb2w7CgpNaW5uZXRQcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiBwcm90b2NvbF9zdHJpbmcoTWlubmV0UHJvdG9jb2wpOwp1aW50MTZfdCBwcm90b2NvbF9kZWZhdWx0X3BvcnQoTWlubmV0UHJvdG9jb2wpOwpCT09MIHByb3RvY29sX2lzX3RscyhNaW5uZXRQcm90b2NvbCk7Cgp0eXBlZGVmIHN0cnVjdCB1cmwgewogIGludCByZWZfY291bnQ7CiAgY29uc3QgY2hhciogcHJvdG9jb2w7CiAgY2hhciAqaG9zdCwgKnBhdGg7CiAgdWludDE2X3QgcG9ydDsKfSBNaW5uZXRVUkw7CgpNaW5uZXRQcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiBwcm90b2NvbF9zdHJpbmcoTWlubmV0UHJvdG9jb2wpOwp1aW50MTZfdCBwcm90b2NvbF9kZWZhdWx0X3BvcnQoTWlubmV0UHJvdG9jb2wpOwpCT09MIHByb3RvY29sX2lzX3RscyhNaW5uZXRQcm90b2NvbCk7CnZvaWQgdXJsX2luaXQoTWlubmV0VVJMKiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqLCBpbnQgcG9ydCwgY29uc3QgY2hhciogcGF0aCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIHVybF9wYXJzZShNaW5uZXRVUkwqLCBjb25zdCBjaGFyKiwgSlNDb250ZXh0Kik7Ck1pbm5ldFVSTCB1cmxfY3JlYXRlKGNvbnN0IGNoYXIqLCBKU0NvbnRleHQqKTsKc2l6ZV90IHVybF9wcmludChjaGFyKiwgc2l6ZV90LCBjb25zdCBNaW5uZXRVUkwpOwpjaGFyKiB1cmxfZm9ybWF0KGNvbnN0IE1pbm5ldFVSTCwgSlNDb250ZXh0Kik7CnNpemVfdCB1cmxfbGVuZ3RoKGNvbnN0IE1pbm5ldFVSTCk7CnZvaWQgdXJsX2ZyZWUoTWlubmV0VVJMKiwgSlNDb250ZXh0Kik7CnZvaWQgdXJsX2ZyZWVfcnQoTWlubmV0VVJMKiwgSlNSdW50aW1lKik7CnZvaWQgdXJsX2luZm8oY29uc3QgTWlubmV0VVJMLCBzdHJ1Y3QgbHdzX2NsaWVudF9jb25uZWN0X2luZm8qKTsKY2hhciogdXJsX2xvY2F0aW9uKGNvbnN0IE1pbm5ldFVSTCwgSlNDb250ZXh0Kik7CmNvbnN0IGNoYXIqIHVybF9xdWVyeShjb25zdCBNaW5uZXRVUkwpOwp2b2lkIHVybF9mcm9tb2JqKE1pbm5ldFVSTCosIEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7CkJPT0wgdXJsX2Zyb212YWx1ZShNaW5uZXRVUkwqLCBKU1ZhbHVlQ29uc3QsIEpTQ29udGV4dCopOwp2b2lkIHVybF9kdW1wKGNvbnN0IGNoYXIqLCBNaW5uZXRVUkwgY29uc3QqKTsKTWlubmV0UHJvdG9jb2wgdXJsX3NldF9wcm90b2NvbChNaW5uZXRVUkwqIHVybCwgY29uc3QgY2hhciogcHJvdG8pOwpKU1ZhbHVlIHF1ZXJ5X29iamVjdChjb25zdCBjaGFyKiwgSlNDb250ZXh0Kik7CmNoYXIqIHF1ZXJ5X2Zyb20oSlNWYWx1ZUNvbnN0LCBKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfdXJsX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0VVJMKik7Ck1pbm5ldFVSTCogdXJsX25ldyhKU0NvbnRleHQqKTsKSlNWYWx1ZSBtaW5uZXRfdXJsX25ldyhKU0NvbnRleHQqLCBNaW5uZXRVUkwpOwpKU1ZhbHVlIG1pbm5ldF91cmxfbWV0aG9kKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpOwpKU1ZhbHVlIG1pbm5ldF91cmxfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlLCBpbnQsIEpTVmFsdWVDb25zdCBhcmd2W10pOwpKU1ZhbHVlIG1pbm5ldF91cmxfY29uc3RydWN0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0LCBpbnQsIEpTVmFsdWVDb25zdCBhcmd2W10pOwppbnQgbWlubmV0X3VybF9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CgpleHRlcm4gVEhSRUFEX0xPQ0FMIEpTQ2xhc3NJRCBtaW5uZXRfdXJsX2NsYXNzX2lkOwoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgp1cmxfcGF0aChjb25zdCBNaW5uZXRVUkwgdXJsKSB7CiAgcmV0dXJuIHVybC5wYXRoOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKdXJsX3ZhbGlkKGNvbnN0IE1pbm5ldFVSTCB1cmwpIHsKICByZXR1cm4gdXJsLmhvc3QgfHwgdXJsLnBhdGg7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0UHJvdG9jb2wKdXJsX3Byb3RvY29sKGNvbnN0IE1pbm5ldFVSTCB1cmwpIHsKICByZXR1cm4gcHJvdG9jb2xfbnVtYmVyKHVybC5wcm90b2NvbCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0VVJMKgp1cmxfZHVwKE1pbm5ldFVSTCogdXJsKSB7CiAgKyt1cmwtPnJlZl9jb3VudDsKICByZXR1cm4gdXJsOwp9CgpzdGF0aWMgaW5saW5lIE1pbm5ldFVSTAp1cmxfY2xvbmUoTWlubmV0VVJMIHVybCwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gKE1pbm5ldFVSTCl7CiAgICAgIC5yZWZfY291bnQgPSAxLAogICAgICAucHJvdG9jb2wgPSB1cmwucHJvdG9jb2wsCiAgICAgIC5ob3N0ID0gdXJsLmhvc3QgPyBqc19zdHJkdXAoY3R4LCB1cmwuaG9zdCkgOiAwLAogICAgICAucGF0aCA9IHVybC5wYXRoID8ganNfc3RyZHVwKGN0eCwgdXJsLnBhdGgpIDogMCwKICAgICAgLnBvcnQgPSB1cmwucG9ydCwKICB9Owp9CgpzdGF0aWMgaW5saW5lIHZvaWQKdXJsX2NvcHkoTWlubmV0VVJMKiB1cmwsIGNvbnN0IE1pbm5ldFVSTCBvdGhlciwgSlNDb250ZXh0KiBjdHgpIHsKICB1cmwtPnByb3RvY29sID0gb3RoZXIucHJvdG9jb2w7CiAgdXJsLT5ob3N0ID0gb3RoZXIuaG9zdCA/IGpzX3N0cmR1cChjdHgsIG90aGVyLmhvc3QpIDogMDsKICB1cmwtPnBhdGggPSBvdGhlci5wYXRoID8ganNfc3RyZHVwKGN0eCwgb3RoZXIucGF0aCkgOiAwOwogIHVybC0+cG9ydCA9IG90aGVyLnBvcnQ7Cn0KCnN0YXRpYyBjaGFyKgp1cmxfc3RyaW5nKE1pbm5ldFVSTCBjb25zdCogdXJsKSB7CiAgc3RhdGljIGNoYXIgYnVmWzQwOTZdOwoKICB1cmxfcHJpbnQoYnVmLCBzaXplb2YoYnVmKSwgKnVybCk7CiAgcmV0dXJuIGJ1ZjsKfQoKaW50IG1pbm5ldF91cmxfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiogbSk7CgpzdGF0aWMgaW5saW5lIE1pbm5ldFVSTCoKbWlubmV0X3VybF9kYXRhKEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlKG9iaiwgbWlubmV0X3VybF9jbGFzc19pZCk7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0VVJMKgptaW5uZXRfdXJsX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZTIoY3R4LCBvYmosIG1pbm5ldF91cmxfY2xhc3NfaWQpOwp9CgojZW5kaWYgLyogTUlOTkVUX1VSTF9IICovCgAAAAAAAAAAog0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AgAAAAAAADkCAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"cut",
					null,
					"AQAAAGsFAAAAAAAAawUAAAAAAAA6AAAAQk9PTCB1cmxfZnJvbXZhbHVlKE1pbm5ldFVSTCosIEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7Cg",
					"AQAAAAAAAAABAAAAawUAAAAAAAClBQAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					2,
					"paste",
					null,
					"AgAAAGsFAAAAAAAApQUAAAAAAAAAAAAApQUAAAAAAADfBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawUAAAAAAABrBQAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "wsi"
					},
					"BAAAALIFAAAAAAAAswUAAAAAAAAAAAAAswUAAAAAAACzBQAAAAAAAAUAAAB2YWx1ZbMFAAAAAAAAtAUAAAAAAAAAAAAAtAUAAAAAAAC1BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgUAAAAAAAC3BQAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "struct"
					},
					"BwAAAMIFAAAAAAAAwwUAAAAAAAAAAAAAwwUAAAAAAADDBQAAAAAAAAwAAABKU1ZhbHVlQ29uc3TDBQAAAAAAAMQFAAAAAAAAAAAAAMQFAAAAAAAAxQUAAAAAAAAAAAAAxQUAAAAAAADGBQAAAAAAAAAAAADGBQAAAAAAAMcFAAAAAAAAAAAAAMcFAAAAAAAAyAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgUAAAAAAADOBQAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " lws*"
					},
					"BQAAAMgFAAAAAAAAyQUAAAAAAAAAAAAAyQUAAAAAAADKBQAAAAAAAAAAAADKBQAAAAAAAMsFAAAAAAAAAAAAAMsFAAAAAAAAzAUAAAAAAAAAAAAAzAUAAAAAAADNBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAUAAAAAAADIBQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"paste",
					null,
					"AgAAAE4CAAAAAAAArQkAAAAAAAAAAAAArQkAAAAAAACtCQAAAAAAAP8FAABNaW5uZXRQcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiBwcm90b2NvbF9zdHJpbmcoTWlubmV0UHJvdG9jb2wpOwp1aW50MTZfdCBwcm90b2NvbF9kZWZhdWx0X3BvcnQoTWlubmV0UHJvdG9jb2wpOwpCT09MIHByb3RvY29sX2lzX3RscyhNaW5uZXRQcm90b2NvbCk7CnZvaWQgdXJsX2luaXQoTWlubmV0VVJMKiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqLCBpbnQgcG9ydCwgY29uc3QgY2hhciogcGF0aCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIHVybF9wYXJzZShNaW5uZXRVUkwqLCBjb25zdCBjaGFyKiwgSlNDb250ZXh0Kik7Ck1pbm5ldFVSTCB1cmxfY3JlYXRlKGNvbnN0IGNoYXIqLCBKU0NvbnRleHQqKTsKc2l6ZV90IHVybF9wcmludChjaGFyKiwgc2l6ZV90LCBjb25zdCBNaW5uZXRVUkwpOwpjaGFyKiB1cmxfZm9ybWF0KGNvbnN0IE1pbm5ldFVSTCwgSlNDb250ZXh0Kik7CnNpemVfdCB1cmxfbGVuZ3RoKGNvbnN0IE1pbm5ldFVSTCk7CnZvaWQgdXJsX2ZyZWUoTWlubmV0VVJMKiwgSlNDb250ZXh0Kik7CnZvaWQgdXJsX2ZyZWVfcnQoTWlubmV0VVJMKiwgSlNSdW50aW1lKik7CnZvaWQgdXJsX2luZm8oY29uc3QgTWlubmV0VVJMLCBzdHJ1Y3QgbHdzX2NsaWVudF9jb25uZWN0X2luZm8qKTsKY2hhciogdXJsX2xvY2F0aW9uKGNvbnN0IE1pbm5ldFVSTCwgSlNDb250ZXh0Kik7CmNvbnN0IGNoYXIqIHVybF9xdWVyeShjb25zdCBNaW5uZXRVUkwpOwp2b2lkIHVybF9mcm9tb2JqKE1pbm5ldFVSTCosIEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7CkJPT0wgdXJsX2Zyb212YWx1ZShNaW5uZXRVUkwqLCBKU1ZhbHVlQ29uc3QsIEpTQ29udGV4dCopOwpCT09MIHVybF9mcm9td3NpKE1pbm5ldFVSTCosIHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqKTsKdm9pZCB1cmxfZHVtcChjb25zdCBjaGFyKiwgTWlubmV0VVJMIGNvbnN0Kik7Ck1pbm5ldFByb3RvY29sIHVybF9zZXRfcHJvdG9jb2woTWlubmV0VVJMKiB1cmwsIGNvbnN0IGNoYXIqIHByb3RvKTsKSlNWYWx1ZSBxdWVyeV9vYmplY3QoY29uc3QgY2hhciosIEpTQ29udGV4dCopOwpjaGFyKiBxdWVyeV9mcm9tKEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7CkpTVmFsdWUgbWlubmV0X3VybF93cmFwKEpTQ29udGV4dCosIE1pbm5ldFVSTCopOwpNaW5uZXRVUkwqIHVybF9uZXcoSlNDb250ZXh0Kik7CkpTVmFsdWUgbWlubmV0X3VybF9uZXcoSlNDb250ZXh0KiwgTWlubmV0VVJMKTsKSlNWYWx1ZSBtaW5uZXRfdXJsX21ldGhvZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKTsKSlNWYWx1ZSBtaW5uZXRfdXJsX2Zyb20oSlNDb250ZXh0KiwgSlNWYWx1ZSwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKSlNWYWx1ZSBtaW5uZXRfdXJsX2NvbnN0cnVjdG9yKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKaW50IG1pbm5ldF91cmxfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOw",
					"AQAAAAAAAAABAAAATQgAAAAAAABOAgAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAE4CAAAAAAAATwIAAAAAAAAAAAAATwIAAAAAAABPAgAAAAAAADQAAABzaXplX3QgICAgICAgICBzdHJsY3B5KGNoYXIqLCBjb25zdCBjaGFyKiwgc2l6ZV90KTsK",
					"AQAAAAAAAAABAAAATgIAAAAAAACCAgAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAGDwAAI2lmbmRlZiBNSU5ORVRfVVJMX0gKI2RlZmluZSBNSU5ORVRfVVJMX0gKCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgPHN0ZGludC5oPgovLyNpbmNsdWRlICJtaW5uZXQuaCIKCnR5cGVkZWYgZW51bSBwcm90b2NvbCB7CiAgUFJPVE9DT0xfV1MgPSAwLAogIFBST1RPQ09MX1dTUywKICBQUk9UT0NPTF9IVFRQLAogIFBST1RPQ09MX0hUVFBTLAogIFBST1RPQ09MX1JBVywKICBQUk9UT0NPTF9UTFMsCn0gTWlubmV0UHJvdG9jb2w7CgpNaW5uZXRQcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiBwcm90b2NvbF9zdHJpbmcoTWlubmV0UHJvdG9jb2wpOwp1aW50MTZfdCBwcm90b2NvbF9kZWZhdWx0X3BvcnQoTWlubmV0UHJvdG9jb2wpOwpCT09MIHByb3RvY29sX2lzX3RscyhNaW5uZXRQcm90b2NvbCk7Cgp0eXBlZGVmIHN0cnVjdCB1cmwgewogIGludCByZWZfY291bnQ7CiAgY29uc3QgY2hhciogcHJvdG9jb2w7CiAgY2hhciAqaG9zdCwgKnBhdGg7CiAgdWludDE2X3QgcG9ydDsKfSBNaW5uZXRVUkw7CgogTWlubmV0UHJvdG9jb2wgcHJvdG9jb2xfbnVtYmVyKGNvbnN0IGNoYXIqKTsKY29uc3QgY2hhciogICAgcHJvdG9jb2xfc3RyaW5nKE1pbm5ldFByb3RvY29sKTsKdWludDE2X3QgICAgICAgcHJvdG9jb2xfZGVmYXVsdF9wb3J0KE1pbm5ldFByb3RvY29sKTsKQk9PTCAgICAgICAgICAgcHJvdG9jb2xfaXNfdGxzKE1pbm5ldFByb3RvY29sKTsKdm9pZCAgICAgICAgICAgdXJsX2luaXQoTWlubmV0VVJMKiwgY29uc3QgY2hhciosIGNvbnN0IGNoYXIqLCBpbnQgcG9ydCwgY29uc3QgY2hhciogcGF0aCwgSlNDb250ZXh0KiBjdHgpOwp2b2lkICAgICAgICAgICB1cmxfcGFyc2UoTWlubmV0VVJMKiwgY29uc3QgY2hhciosIEpTQ29udGV4dCopOwpNaW5uZXRVUkwgICAgICB1cmxfY3JlYXRlKGNvbnN0IGNoYXIqLCBKU0NvbnRleHQqKTsKc2l6ZV90ICAgICAgICAgdXJsX3ByaW50KGNoYXIqLCBzaXplX3QsIGNvbnN0IE1pbm5ldFVSTCk7CmNoYXIqICAgICAgICAgIHVybF9mb3JtYXQoY29uc3QgTWlubmV0VVJMLCBKU0NvbnRleHQqKTsKc2l6ZV90ICAgICAgICAgdXJsX2xlbmd0aChjb25zdCBNaW5uZXRVUkwpOwp2b2lkICAgICAgICAgICB1cmxfZnJlZShNaW5uZXRVUkwqLCBKU0NvbnRleHQqKTsKdm9pZCAgICAgICAgICAgdXJsX2ZyZWVfcnQoTWlubmV0VVJMKiwgSlNSdW50aW1lKik7Ck1pbm5ldFByb3RvY29sIHVybF9zZXRfcHJvdG9jb2woTWlubmV0VVJMKiwgY29uc3QgY2hhciopOwp2b2lkICAgICAgICAgICB1cmxfaW5mbyhjb25zdCBNaW5uZXRVUkwsIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyopOwpjaGFyKiAgICAgICAgICB1cmxfbG9jYXRpb24oY29uc3QgTWlubmV0VVJMLCBKU0NvbnRleHQqKTsKY29uc3QgY2hhciogICAgdXJsX3F1ZXJ5KGNvbnN0IE1pbm5ldFVSTCk7CnZvaWQgICAgICAgICAgIHVybF9mcm9tb2JqKE1pbm5ldFVSTCosIEpTVmFsdWVDb25zdCwgSlNDb250ZXh0Kik7CkJPT0wgICAgICAgICAgIHVybF9mcm9tdmFsdWUoTWlubmV0VVJMKiwgSlNWYWx1ZUNvbnN0LCBKU0NvbnRleHQqKTsKdm9pZCAgICAgICAgICAgdXJsX2Zyb213c2koTWlubmV0VVJMKiwgc3RydWN0IGx3cyosIEpTQ29udGV4dCopOwp2b2lkICAgICAgICAgICB1cmxfZHVtcChjb25zdCBjaGFyKiwgTWlubmV0VVJMIGNvbnN0Kik7CkpTVmFsdWUgICAgICAgIHF1ZXJ5X29iamVjdChjb25zdCBjaGFyKiwgSlNDb250ZXh0Kik7CmNoYXIqICAgICAgICAgIHF1ZXJ5X2Zyb20oSlNWYWx1ZUNvbnN0LCBKU0NvbnRleHQqKTsKSlNWYWx1ZSAgICAgICAgbWlubmV0X3VybF93cmFwKEpTQ29udGV4dCosIE1pbm5ldFVSTCopOwpNaW5uZXRVUkwqICAgICB1cmxfbmV3KEpTQ29udGV4dCopOwpKU1ZhbHVlICAgICAgICBtaW5uZXRfdXJsX25ldyhKU0NvbnRleHQqLCBNaW5uZXRVUkwpOwpKU1ZhbHVlICAgICAgICBtaW5uZXRfdXJsX21ldGhvZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKTsKSlNWYWx1ZSAgICAgICAgbWlubmV0X3VybF9mcm9tKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKSlNWYWx1ZSAgICAgICAgbWlubmV0X3VybF9pbnNwZWN0KEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCwgaW50LCBKU1ZhbHVlQ29uc3QgYXJndltdKTsKSlNWYWx1ZSAgICAgICAgbWlubmV0X3VybF9jb25zdHJ1Y3RvcihKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSk7CmludCAgICAgICAgICAgIG1pbm5ldF91cmxfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwoKCmV4dGVybiBUSFJFQURfTE9DQUwgSlNDbGFzc0lEIG1pbm5ldF91cmxfY2xhc3NfaWQ7CgpzdGF0aWMgaW5saW5lIGNvbnN0IGNoYXIqCnVybF9wYXRoKGNvbnN0IE1pbm5ldFVSTCB1cmwpIHsKICByZXR1cm4gdXJsLnBhdGg7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTAp1cmxfdmFsaWQoY29uc3QgTWlubmV0VVJMIHVybCkgewogIHJldHVybiB1cmwuaG9zdCB8fCB1cmwucGF0aDsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRQcm90b2NvbAp1cmxfcHJvdG9jb2woY29uc3QgTWlubmV0VVJMIHVybCkgewogIHJldHVybiBwcm90b2NvbF9udW1iZXIodXJsLnByb3RvY29sKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRVUkwqCnVybF9kdXAoTWlubmV0VVJMKiB1cmwpIHsKICArK3VybC0+cmVmX2NvdW50OwogIHJldHVybiB1cmw7Cn0KCnN0YXRpYyBpbmxpbmUgTWlubmV0VVJMCnVybF9jbG9uZShNaW5uZXRVUkwgdXJsLCBKU0NvbnRleHQqIGN0eCkgewogIHJldHVybiAoTWlubmV0VVJMKXsKICAgICAgLnJlZl9jb3VudCA9IDEsCiAgICAgIC5wcm90b2NvbCA9IHVybC5wcm90b2NvbCwKICAgICAgLmhvc3QgPSB1cmwuaG9zdCA/IGpzX3N0cmR1cChjdHgsIHVybC5ob3N0KSA6IDAsCiAgICAgIC5wYXRoID0gdXJsLnBhdGggPyBqc19zdHJkdXAoY3R4LCB1cmwucGF0aCkgOiAwLAogICAgICAucG9ydCA9IHVybC5wb3J0LAogIH07Cn0KCnN0YXRpYyBpbmxpbmUgdm9pZAp1cmxfY29weShNaW5uZXRVUkwqIHVybCwgY29uc3QgTWlubmV0VVJMIG90aGVyLCBKU0NvbnRleHQqIGN0eCkgewogIHVybC0+cHJvdG9jb2wgPSBvdGhlci5wcm90b2NvbDsKICB1cmwtPmhvc3QgPSBvdGhlci5ob3N0ID8ganNfc3RyZHVwKGN0eCwgb3RoZXIuaG9zdCkgOiAwOwogIHVybC0+cGF0aCA9IG90aGVyLnBhdGggPyBqc19zdHJkdXAoY3R4LCBvdGhlci5wYXRoKSA6IDA7CiAgdXJsLT5wb3J0ID0gb3RoZXIucG9ydDsKfQoKc3RhdGljIGNoYXIqCnVybF9zdHJpbmcoTWlubmV0VVJMIGNvbnN0KiB1cmwpIHsKICBzdGF0aWMgY2hhciBidWZbNDA5Nl07CgogIHVybF9wcmludChidWYsIHNpemVvZihidWYpLCAqdXJsKTsKICByZXR1cm4gYnVmOwp9CgppbnQgbWlubmV0X3VybF9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKiBtKTsKCnN0YXRpYyBpbmxpbmUgTWlubmV0VVJMKgptaW5uZXRfdXJsX2RhdGEoSlNWYWx1ZUNvbnN0IG9iaikgewogIHJldHVybiBKU19HZXRPcGFxdWUob2JqLCBtaW5uZXRfdXJsX2NsYXNzX2lkKTsKfQoKc3RhdGljIGlubGluZSBNaW5uZXRVUkwqCm1pbm5ldF91cmxfZGF0YTIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3VybF9jbGFzc19pZCk7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfVVJMX0ggKi8KAAAAAAAAAAAkDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgYAAAAAAAB9BgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 21077,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"insert",
					{
						"characters": "CMAKE_INSTALL_RPA"
					},
					"EgAAAEwkAAAAAAAATSQAAAAAAAAAAAAATSQAAAAAAABNJAAAAAAAABMAAABPUEVOU1NMX0xJQlJBUllfRElSTSQAAAAAAABOJAAAAAAAAAAAAABOJAAAAAAAAE8kAAAAAAAAAAAAAE8kAAAAAAAAUCQAAAAAAAAAAAAAUCQAAAAAAABRJAAAAAAAAAAAAABRJAAAAAAAAFIkAAAAAAAAAAAAAFIkAAAAAAAAUyQAAAAAAAAAAAAAUyQAAAAAAABUJAAAAAAAAAAAAABUJAAAAAAAAFUkAAAAAAAAAAAAAFUkAAAAAAAAViQAAAAAAAAAAAAAViQAAAAAAABXJAAAAAAAAAAAAABXJAAAAAAAAFgkAAAAAAAAAAAAAFgkAAAAAAAAWSQAAAAAAAAAAAAAWSQAAAAAAABaJAAAAAAAAAAAAABaJAAAAAAAAFskAAAAAAAAAAAAAFskAAAAAAAAXCQAAAAAAAAAAAAAXCQAAAAAAABdJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwkAAAAAAAAXyQAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "TH"
					},
					"AgAAAF0kAAAAAAAAXiQAAAAAAAAAAAAAXiQAAAAAAABfJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF0kAAAAAAAAXSQAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"cut",
					null,
					"AQAAADskAAAAAAAAOyQAAAAAAAAnAAAASU5TVEFMTF9SUEFUSCAiJHtDTUFLRV9JTlNUQUxMX1JQQVRIfSIg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADskAAAAAAAAYiQAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					2,
					"paste",
					null,
					"AgAAADskAAAAAAAAYiQAAAAAAAAAAAAAYiQAAAAAAACJJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADskAAAAAAAAOyQAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "BUILD_RPATH"
					},
					"DAAAAGIkAAAAAAAAYyQAAAAAAAAAAAAAYyQAAAAAAABjJAAAAAAAAA0AAABJTlNUQUxMX1JQQVRIYyQAAAAAAABkJAAAAAAAAAAAAABkJAAAAAAAAGUkAAAAAAAAAAAAAGUkAAAAAAAAZiQAAAAAAAAAAAAAZiQAAAAAAABnJAAAAAAAAAAAAABnJAAAAAAAAGgkAAAAAAAAAAAAAGgkAAAAAAAAaSQAAAAAAAAAAAAAaSQAAAAAAABqJAAAAAAAAAAAAABqJAAAAAAAAGskAAAAAAAAAAAAAGskAAAAAAAAbCQAAAAAAAAAAAAAbCQAAAAAAABtJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIkAAAAAAAAbyQAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					2,
					"left_delete",
					null,
					"AgAAAHgkAAAAAAAAeCQAAAAAAAAGAAAATlNUQUxMdyQAAAAAAAB3JAAAAAAAAAEAAABJ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgkAAAAAAAAfiQAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "BZKUI"
					},
					"BQAAAHckAAAAAAAAeCQAAAAAAAAAAAAAeCQAAAAAAAB5JAAAAAAAAAAAAAB5JAAAAAAAAHokAAAAAAAAAAAAAHokAAAAAAAAeyQAAAAAAAAAAAAAeyQAAAAAAAB8JAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHckAAAAAAAAdyQAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					4,
					"left_delete",
					null,
					"BAAAAHskAAAAAAAAeyQAAAAAAAABAAAASXokAAAAAAAAeiQAAAAAAAABAAAAVXkkAAAAAAAAeSQAAAAAAAABAAAAS3gkAAAAAAAAeCQAAAAAAAABAAAAWg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwkAAAAAAAAfCQAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "UILD"
					},
					"BAAAAHgkAAAAAAAAeSQAAAAAAAAAAAAAeSQAAAAAAAB6JAAAAAAAAAAAAAB6JAAAAAAAAHskAAAAAAAAAAAAAHskAAAAAAAAfCQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgkAAAAAAAAeCQAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAfCQAAAAAAAB8JAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"cut",
					null,
					"AQAAAB8TAAAAAAAAHxMAAAAAAAAeAAAAZmluZF9wYWNrYWdlKE9wZW5TU0wgUkVRVUlSRUQp",
					"AQAAAAAAAAABAAAAHxMAAAAAAAA9EwAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"paste",
					null,
					"AQAAAHYSAAAAAAAAlBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdhIAAAAAAAB2EgAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "\n/"
					},
					"AwAAAJQSAAAAAAAAlRIAAAAAAAAAAAAAlRIAAAAAAACaEgAAAAAAAAAAAACaEgAAAAAAAJsSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlBIAAAAAAACUEgAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"left_delete",
					null,
					"AQAAAJoSAAAAAAAAmhIAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAmxIAAAAAAACbEgAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAJoSAAAAAAAAmxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmhIAAAAAAACaEgAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAmxIAAAAAAACbEgAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"shell",
				"Pretty Shell: Minify"
			],
			[
				"mini",
				"Pretty Shell: Minify"
			],
			[
				"shfm",
				"Pretty Shell: Minify"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"cscope",
				"Cscope: Search using egrep pattern"
			],
			[
				"tags",
				"CTags: Show Symbols (all)"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"json",
				"Pretty JSON: Format JSON"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"inde",
				"Indentation: Detect"
			],
			[
				"add repo",
				"Package Control: Add Repository"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"cmake",
				"CMake Format: Format Selection"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"prettier",
				"Build With: prettier"
			],
			[
				"edit current",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"edit curr",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 393.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-net",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-eventlib-exports.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/http/server/server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibwebsockets.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/private-lib-core-net.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-context-vhost.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindMbedTLS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibreSSL.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/curl/lib/llist.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/libwebsockets/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/curl/src/tool_setopt.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/minimal-examples/minimal-http-server-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-mbedtls/libwebsockets/include/libwebsockets/lws-context-vhost.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/libwebsockets/include/libwebsockets/lws-context-vhost.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/minimal-examples/minimal-http-server-tls.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/minimal-examples/minimal-http-server-dynamic.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/minimal-examples/minimal-http-server-sse.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/minimal-examples/minimal-http-server-sse-ring.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/minimal-examples/minimal-http-server-form-post-file.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/libwebsockets/include/libwebsockets/lws-protocols-plugins.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-fetch.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/minimal-examples/minimal-raw-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/minimal-examples/minimal-ws-raw-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-proxy/minimal-http-server-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-fallback-http-server/minimal-raw-fallback-http-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-proxy/minimal-raw-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-proxy-fallback/minimal-raw-proxy-fallback.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-proxy/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-proxy.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-raw-proxy/minimal-ws-raw-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-deaddrop/minimal-http-server-deaddrop.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-deaddrop/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/jsutils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/jsutils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibreSSL.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindCURL.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-sse-ring/minimal-http-server-sse-ring.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-tls-80/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minimal-http-server-tls.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/minimal-examples/minimal-http-server-h2-long-poll.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.sublime-project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindBrotli.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-tls/minimal-http-server-tls.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-dynamic/minimal-http-server-dynamic.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-buffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-buffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/tls/openssl/openssl-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/misc/lwsac/private-lib-misc-lwsac.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-form-post/minimal-http-server-form-post.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-form-post-lwsac/minimal-http-server-form-post.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-h2-long-poll/minimal-http-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-mimetypes/minimal-http-server-mimetypes.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/system/async-dns/async-dns.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/adopt.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-plugin-broker.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-broker/protocol_lws_minimal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/ws/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build-libwebsockets.sh",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/ws/ext/extension-permessage-deflate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/ws/ext/extension.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/ws/ext/extension-permessage-deflate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/wsi.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-proxy-fallback/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/h1/ops-h1.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/fetch.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-fetch.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-response.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-client.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/vhost.c",
		"/home/roman/Projects/plot-cv/make-bitmap.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/client.js.sed",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-adopt-udp/minimal-raw-adopt-udp.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-adopt.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugins/protocol_lws_mirror.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/READMEs/README.jit-trust.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server-threads/protocol_lws_minimal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/test-sshd.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server-ring/minimal-ws-server-ring.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-ring.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/misc/lws-ring.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-stream.c",
		"/usr/include/pthread.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-multi/minimal-http-client-multi.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/READMEs/README.lws_cache.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-protocols-plugins.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-stream.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core/private-lib-core.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-h2-rxflow/minimal-http-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-response.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/http/client/client-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c.orig",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/log.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/client.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-server-ws.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/spawn.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-server-http.js"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 131.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.cmake,-*/inst/*,-*/build/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.cmake",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h",
			"",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/[^i]*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/i*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/[!i]*,-*/curl/*,<open files>",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/[!i]*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/[!i]*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*,-*/libwebsockets/*,-*/curl/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/inst/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets,*.h,*.c",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets,*.h,*.c",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets/*,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets,*.h,*.c",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets/*,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include,*.h",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include,*.h",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets*/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/libwebsockets/*,-*/brotli/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/libwebsockets/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/libwebsockets/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net.*.c,*.h,*.txt,*.cmake,-*/build/*,-*/libwebsockets/*",
			"*.c,*.h,*.txt,*.cmake,-*/build/*",
			"*.c,*.h,*.txt,*.cmakem,-*/build/*",
			"*.c,*.h,*.txt,-*/build/*",
			"*.c,*.h,-*/build/*",
			"*.c,*.h,-*/build/*,-*/libwebsockets/*",
			"*.c,*.h,-*/build/*",
			"*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/net,-*/build/*,*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/net,-*/build/*,-*/libwebsockets/*,*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/net,-*/build/*,*.c,*.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"handleCmd",
			"lws_write\\(",
			"hdr_sim",
			"WSI_TOKEN.*PROTOCOL",
			"new_interval",
			"io_events",
			"malloc.*MinnetWeb",
			"mallocz(ctx, sizeof(MinnetWeb",
			"malloc.*MinnetWeb",
			"defprot_callback",
			"ws_from",
			"lws_opaqu",
			"lws_opaque",
			"handler_closure",
			"ZLIB_LIBRAR",
			"CMAKE_INCLUDE_PATH",
			"FindOpenSSL",
			"\" \"-",
			"LIBWEBSOCKETS_ARGS \\${LIBWEBSOCKETS_ARGS} \"",
			"INCLUDE_PATH",
			"OPENSSL_LIBRARIES",
			"chose_ssl",
			"OpenSSL include",
			"OPENSSL_LIBRARIES",
			"LWS_OPENSSL_LIBRARIES",
			"ssl",
			"ssl;",
			";ssl",
			"handler_closure",
			"js_malloc",
			"THREAD_ID",
			"lws_service_tsi",
			"GET_THREAD_ID",
			"lws_opaque",
			"opaque->ws =",
			"ws =",
			"js_malloc",
			"minnet_ws_new",
			"js_malloc.*MinnetWeb",
			"lws_opaque\\(",
			"lws_opaque",
			"ws_dup",
			"minnet_ws_send",
			"= lws_opaque",
			"minnet_server_timeout",
			"JSFreeValue",
			"poll\\(",
			"LWS_HAVE_HMAC_CTX_new",
			"HMAC",
			"WITH_DEP",
			"LINK_TEST",
			"handler",
			"\"os\"",
			"\"<html",
			"<thml",
			"js_malloc.*opaque",
			"js_malloc",
			"lws_opaque\\(",
			"lws_opaque",
			"http_server_writable",
			"serve_file",
			"http_server_respond",
			"resp =",
			"req",
			"js_symbol_static_atom",
			"js_symbol_static_value",
			"opaque =",
			" ws_free",
			"ws_free",
			"response_zero",
			"lws_service_adjust",
			"lws_set_timeout",
			"create_context",
			"timeout_secs",
			"on immor",
			"http_server_writable",
			"opaque->req =",
			"tag_prefix",
			"\"mux\"",
			"wsisrv",
			"\"mux",
			"mux\\|",
			"mux",
			"lwsl_wsi\\(",
			"lwsl_wsi_err",
			"^lwsl_wsi_err",
			"on immor",
			"fromwsi",
			"ws_new",
			"http_server_writable",
			"request_dup",
			"request_free\\(",
			"minnet_ws_object",
			"->obj",
			"lws_close_free_wsi",
			"check_func",
			"strlcpy",
			"ESTABLISHED",
			"minnet_emit",
			"\\.connect",
			"connect",
			"ws_obj =",
			"__lws_close_free_wsi_final",
			"lws_close",
			"LWS_CALLBACK_HTTP_FILE_COMPLETION",
			"WSI_DESTROY",
			"session_clear",
			"session_object",
			"MinnetSession",
			"session_zero",
			"minnet_get_sessions",
			"url_len",
			"url_string",
			"init_list_head",
			"CALLBACK_PROTOCOL",
			"CALLBACK_PROTOCOL_",
			"HTTP_FILE_COMPLETION:",
			"case HTTP_FILE_COMPLETION:",
			"^\\s*.*\\(.*CMAKE_INSTALL_RPATH",
			"^\\s*set\\(CMAKE_INSTALL_RPATH",
			"CMAKE_INSTALL_RPATH",
			"lws_get_vhost\\(",
			"struct lws_vhost {",
			"struct lws_vhost",
			"vhost",
			"LWS_CALLBACK_FILTER_HTTP_CONNECTION",
			"OPENSSL_LIBRARY_DIR",
			"CMAKE_INSTALL_RPATH"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			" -",
			"LIBWEBSOCKETS_ARGS \"${LIBWEBSOCKETS_ARGS} ",
			"JS_FreeValue",
			"pathlen",
			"ctx",
			"*url",
			"url->",
			"->",
			"libressl",
			"LIBRESSL_SSL_LIB_NAME",
			"_TLS_",
			"libressl",
			"buf->",
			"info->",
			"info.",
			"info->",
			"minnet_url_data2(ctx, this_val)",
			"url_\\1(",
			"url_valid(",
			"url_format(req->url",
			"other.",
			"const MinnetURL",
			"url.",
			"const MinnetURL",
			"LIBWEBSOCKETS_LIBRARY_DIR",
			"LIBWEBSOCKETS_LIBRARIES",
			"INCLUDE_DIR",
			"LIBWEBSOCKETS_INCLUDE_DIR",
			" \\\\\\n\\t-D",
			"LIBWEBSOCKETS_",
			"LOG(\"\\1\", \"\\2\"",
			"}\\1\\n\\n\\2",
			"ZLIB_LIBRARY_",
			"MinnetBrokerMessage",
			"struct msg__broker",
			"MinnetBrokerSession",
			"MinnetBrokerPerVhostData",
			"close_status",
			"LIBWEBSOCKETS_LIBRARY",
			"ret = -1; break;",
			"break",
			"url->",
			"",
			"context->",
			"client->context.info.",
			"value",
			"minnet_request_data2(ctx, this_val)",
			"minnet_response_data2(ctx, this_val)",
			"JSValueConst argv[]",
			"}\\n\\n\\1",
			"",
			"\"",
			"JS_INDEX_STRING_DEF",
			"ca",
			"info->",
			"/\\*(sizeof\\(MinnetSession\\))\\*/0",
			"/*\\1*/",
			"/*&*/",
			"/*\\&*/",
			"/*&*/",
			"server->",
			"server",
			"server->",
			"",
			"context->info.",
			"#",
			"server",
			"client->context.error",
			"buf",
			"p",
			"pollfd",
			"pfd->",
			"opaque->pfd",
			"opaque",
			"ws->status",
			"ws->pfd",
			"opaque->pfd",
			"MinnetBlock",
			"block_SIZ",
			"blk",
			"MINNET_BUFFER_H",
			"buf->",
			"",
			"\\1fprintf(stderr,",
			"conn->",
			"reason",
			"%-38s",
			"info",
			"info->",
			".connect_info.",
			"->connect_info.",
			"args",
			"",
			"events",
			"log(`",
			"log",
			"type",
			"worker",
			"opaque->status",
			"client->status",
			"sess->status",
			"client->status",
			"opaque->responded",
			"opaque->closed",
			"opaque->connected",
			"client->cb_",
			"client.cb_",
			"client_cb.",
			"CLIENT",
			"client->",
			"client.cb_",
			"info->",
			"url->",
			"",
			"path",
			")) {",
			"method",
			"protocol",
			"raw",
			"ssl",
			"client.url.",
			"JSValueConst argv[]",
			"c->pfd.fd",
			"c->pfd.\\1",
			" c->fd",
			"lwsl_user",
			"cli",
			"MinnetSession"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": false,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": null,
							"function_name_status_row": 13,
							"outline_rename_mode": false,
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649280086.58,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "minnet-client.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1042,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1647075261.88,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 2,
					"file": "minnet-server-http.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22716,
						"regions":
						{
						},
						"selection":
						[
							[
								22190,
								22190
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 749,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649277030.51,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 15058.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "minnet-client.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1042,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649269480.48,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "minnet-server.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 874,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649269481.24,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "minnet-buffer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3948,
						"regions":
						{
						},
						"selection":
						[
							[
								1695,
								1695
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 63,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649044766.39,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 781.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "libwebsockets/lib/core-net/wsi-timeout.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8699,
						"regions":
						{
						},
						"selection":
						[
							[
								5212,
								5212
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 165,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649038200.48,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2654.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "libwebsockets/include/libwebsockets/lws-logs.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24350,
						"regions":
						{
						},
						"selection":
						[
							[
								15680,
								15688
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 508,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649036590.42,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9361.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "libwebsockets/lib/core/context.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 59750,
						"regions":
						{
						},
						"selection":
						[
							[
								9559,
								9559
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 380,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1649036743.53,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6474.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "libwebsockets/include/libwebsockets/lws-callbacks.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37291,
						"regions":
						{
						},
						"selection":
						[
							[
								32840,
								32873
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 816,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649267932.47,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 15898.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "libwebsockets/lib/roles/h2/ops-h2.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 39157,
						"regions":
						{
						},
						"selection":
						[
							[
								30750,
								30750
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1125,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649038253.97,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 21091.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "libwebsockets/lib/roles/http/server/server.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 88080,
						"regions":
						{
						},
						"selection":
						[
							[
								82066,
								82078
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 3188,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649038779.94,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 58502.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "minnet-server-proxy.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5374,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649266262.33,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 300.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "libwebsockets/lib/core/private-lib-core.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24455,
						"regions":
						{
						},
						"selection":
						[
							[
								16770,
								16782
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 698,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1649038780.63,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 12839.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "libwebsockets/test-apps/test-server.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19417,
						"regions":
						{
						},
						"selection":
						[
							[
								18678,
								18693
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 712,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649268546.71,
							"tabs_extra_last_activated_sheet_index": 11,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 13818.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "libwebsockets/minimal-examples/http-client/minimal-http-client-hugeurl/minimal-http-client-hugeurl.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6594,
						"regions":
						{
						},
						"selection":
						[
							[
								5129,
								5186
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 163,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649264445.75,
							"tabs_extra_last_activated_sheet_index": 12,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2806.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "minnet-server-ws.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6867,
						"regions":
						{
							"col_DD8800FF":
							{
								"flags": 16,
								"regions":
								[
									[
										4866,
										4876
									],
									[
										5032,
										5042
									]
								],
								"scope": "col_DD8800FF"
							},
							"col_DD8800FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DD8800FF_circle.png",
								"regions":
								[
									[
										4843,
										4843
									],
									[
										5009,
										5009
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								2445,
								2445
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 78,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649279344.4,
							"tabs_extra_last_activated_sheet_index": 14,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1105.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "libwebsockets/include/libwebsockets/lws-write.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10215,
						"regions":
						{
						},
						"selection":
						[
							[
								2485,
								2559
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 64,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1649280068.0,
							"tabs_extra_last_activated_sheet_index": 15,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2678.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "minnet-server-proxy.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 623,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649279079.24,
							"tabs_extra_last_activated_sheet_index": 15,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14937,
						"regions":
						{
						},
						"selection":
						[
							[
								4243,
								4243
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 172,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649266037.46,
							"tabs_extra_last_activated_sheet_index": 14,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3440.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "minnet-ringbuffer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1969,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649032126.31,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "minnet-server-http.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1734,
						"regions":
						{
						},
						"selection":
						[
							[
								1408,
								1430
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 40,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649269880.74,
							"tabs_extra_last_activated_sheet_index": 17,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "minnet-server.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16839,
						"regions":
						{
						},
						"selection":
						[
							[
								7138,
								7138
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 212,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649277356.07,
							"tabs_extra_last_activated_sheet_index": 18,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3505.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "libwebsockets/include/libwebsockets/lws-timeout-timer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11652,
						"regions":
						{
						},
						"selection":
						[
							[
								4132,
								4147
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 100,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1649261557.86,
							"tabs_extra_last_activated_sheet_index": 17,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5244.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "libwebsockets/include/libwebsockets/lws-service.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7679,
						"regions":
						{
						},
						"selection":
						[
							[
								2627,
								2627
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 139,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649267710.83,
							"tabs_extra_last_activated_sheet_index": 19,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 989.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "build/x86_64-linux-debug/libwebsockets/include/libwebsockets/lws-context-vhost.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 56539,
						"regions":
						{
						},
						"selection":
						[
							[
								13142,
								13155
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 279,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649242946.66,
							"tabs_extra_last_activated_sheet_index": 19,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4885.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "libwebsockets/include/libwebsockets/lws-protocols-plugins.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14480,
						"regions":
						{
						},
						"selection":
						[
							[
								1880,
								1880
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 43,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649274520.0,
							"tabs_extra_last_activated_sheet_index": 22,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 622.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "minnet.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26107,
						"regions":
						{
						},
						"selection":
						[
							[
								13748,
								13748
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 549,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649277762.6,
							"tabs_extra_last_activated_sheet_index": 23,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 10405.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "libwebsockets/include/libwebsockets/lws-http.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 36626,
						"regions":
						{
						},
						"selection":
						[
							[
								7895,
								7912
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 215,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 3,
							"tabs_extra_last_activated": 1649277759.34,
							"tabs_extra_last_activated_sheet_index": 24,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4218.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "minnet-fetch.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10250,
						"regions":
						{
						},
						"selection":
						[
							[
								2043,
								2169
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 81,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649274518.53,
							"tabs_extra_last_activated_sheet_index": 24,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1260.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "minnet.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8334,
						"regions":
						{
						},
						"selection":
						[
							[
								3984,
								4004
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 139,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649274521.11,
							"tabs_extra_last_activated_sheet_index": 25,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2620.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "minnet-response.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1977,
						"regions":
						{
						},
						"selection":
						[
							[
								1495,
								1495
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 45,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649053466.22,
							"tabs_extra_last_activated_sheet_index": 23,
							"tabs_extra_moving":
							[
								2,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 360.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "minnet-websocket.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2851,
						"regions":
						{
						},
						"selection":
						[
							[
								1328,
								1349
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 47,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649274522.93,
							"tabs_extra_last_activated_sheet_index": 27,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 465.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "minnet-client.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16692,
						"regions":
						{
						},
						"selection":
						[
							[
								13692,
								13761
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 492,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649269478.05,
							"tabs_extra_last_activated_sheet_index": 28,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9480.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "minnet-request.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2859,
						"regions":
						{
						},
						"selection":
						[
							[
								855,
								870
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 29,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649280201.02,
							"tabs_extra_last_activated_sheet_index": 32,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "minnet-websocket.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21410,
						"regions":
						{
						},
						"selection":
						[
							[
								5973,
								5980
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 274,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649280237.13,
							"tabs_extra_last_activated_sheet_index": 33,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5145.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "wscli.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9685,
						"regions":
						{
							"col_0087FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										3525,
										3538
									]
								],
								"scope": "col_0087FFFF"
							},
							"col_0087FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0087FFFF_circle.png",
								"regions":
								[
									[
										3491,
										3491
									]
								],
								"scope": "col_gutter"
							},
							"col_00D700FF":
							{
								"flags": 16,
								"regions":
								[
									[
										3502,
										3515
									]
								],
								"scope": "col_00D700FF"
							},
							"col_00D700FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00D700FF_circle.png",
								"regions":
								[
									[
										3491,
										3491
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								4082,
								4091
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 168,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649281328.98,
							"tabs_extra_last_activated_sheet_index": 34,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2640.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "minnet-client-http.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7522,
						"regions":
						{
						},
						"selection":
						[
							[
								562,
								562
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 19,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649268813.66,
							"tabs_extra_last_activated_sheet_index": 30,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "minnet-url.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18850,
						"regions":
						{
						},
						"selection":
						[
							[
								8788,
								8788
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 389,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649279174.47,
							"tabs_extra_last_activated_sheet_index": 34,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7051.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "/home/roman/Projects/plot-cv/quickjs/quickjs.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 40236,
						"regions":
						{
						},
						"selection":
						[
							[
								34727,
								34743
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 905,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649042306.27,
							"tabs_extra_last_activated_sheet_index": 28,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 16684.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "jsutils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5133,
						"regions":
						{
						},
						"selection":
						[
							[
								2337,
								2337
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 64,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649278704.4,
							"tabs_extra_last_activated_sheet_index": 35,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 865.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "cmake/functions.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4621,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649262393.53,
							"tabs_extra_last_activated_sheet_index": 33,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1026.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "minnet-request.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11384,
						"regions":
						{
						},
						"selection":
						[
							[
								3445,
								3445
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 151,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649277766.32,
							"tabs_extra_last_activated_sheet_index": 37,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2073.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "jsutils.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14108,
						"regions":
						{
						},
						"selection":
						[
							[
								8499,
								8515
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 330,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649261117.77,
							"tabs_extra_last_activated_sheet_index": 35,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6185.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "libwebsockets/minimal-examples/http-server/minimal-http-server-eventlib-custom/minimal-http-server.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11288,
						"regions":
						{
						},
						"selection":
						[
							[
								3217,
								3243
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 134,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649258628.02,
							"tabs_extra_last_activated_sheet_index": 36,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2338.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "cmake/BuildLibwebsockets.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14137,
						"regions":
						{
						},
						"selection":
						[
							[
								9835,
								9835
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 186,
							"syntax": "Packages/CMake/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649272793.58,
							"tabs_extra_last_activated_sheet_index": 39,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3305.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "minnet-websocket.c.orig",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20763,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649280069.82,
							"tabs_extra_last_activated_sheet_index": 43,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "libwebsockets/lib/roles/http/server/access-log.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5914,
						"regions":
						{
						},
						"selection":
						[
							[
								2006,
								2006
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 59,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649272403.95,
							"tabs_extra_last_activated_sheet_index": 40,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 758.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "cmake/FindLibreSSL.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4972,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649271560.61,
							"tabs_extra_last_activated_sheet_index": 40,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1080.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "libwebsockets/lib/tls/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23160,
						"regions":
						{
						},
						"selection":
						[
							[
								8466,
								8475
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 263,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649271043.07,
							"tabs_extra_last_activated_sheet_index": 40,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4845.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "minnet-response.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12282,
						"regions":
						{
						},
						"selection":
						[
							[
								2057,
								2057
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 77,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649053465.79,
							"tabs_extra_last_activated_sheet_index": 35,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 249.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "libwebsockets/lib/core-net/close.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27367,
						"regions":
						{
						},
						"selection":
						[
							[
								26988,
								27004
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1007,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1649039369.0,
							"tabs_extra_last_activated_sheet_index": 31,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 18842.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "build/x86_64-linux-debug/libwebsockets/include/libwebsockets/lws-ws-close.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6056,
						"regions":
						{
						},
						"selection":
						[
							[
								1661,
								1686
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 39,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649039367.61,
							"tabs_extra_last_activated_sheet_index": 32,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 431.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "/home/roman/Projects/plot-cv/quickjs/list.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2980,
						"regions":
						{
						},
						"selection":
						[
							[
								2236,
								2244
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 39,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649032903.17,
							"tabs_extra_last_activated_sheet_index": 21,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 895.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "minnet-url.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3620,
						"regions":
						{
						},
						"selection":
						[
							[
								647,
								662
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 31,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649279169.45,
							"tabs_extra_last_activated_sheet_index": 50,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 78.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21077,
						"regions":
						{
						},
						"selection":
						[
							[
								4763,
								4763
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 154,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1649271643.54,
							"tabs_extra_last_activated_sheet_index": 47,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3345.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.79872935197,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.Protocol":
	{
		"height": 0.0
	},
	"output.Protocol(139621680568160)":
	{
		"height": 0.0
	},
	"output.Protocol(139700989541680)":
	{
		"height": 0.0
	},
	"output.Protocol(139717986943088)":
	{
		"height": 0.0
	},
	"output.Protocol(139743392670576)":
	{
		"height": 0.0
	},
	"output.Protocol(139869175665040)":
	{
		"height": 0.0
	},
	"output.Protocol(140020109820736)":
	{
		"height": 0.0
	},
	"output.Protocol(140057994913632)":
	{
		"height": 0.0
	},
	"output.Protocol(140125752776880)":
	{
		"height": 0.0
	},
	"output.Protocol(140264240552496)":
	{
		"height": 0.0
	},
	"output.Protocol(140274144495648)":
	{
		"height": 0.0
	},
	"output.Protocol(140405755060768)":
	{
		"height": 0.0
	},
	"output.Protocol(140444770975856)":
	{
		"height": 0.0
	},
	"output.Protocol(140481508534208)":
	{
		"height": 0.0
	},
	"output.Protocol(140490298804784)":
	{
		"height": 0.0
	},
	"output.Protocol(140502873587376)":
	{
		"height": 0.0
	},
	"output.Protocol(140517145605216)":
	{
		"height": 0.0
	},
	"output.Protocol(140557325395472)":
	{
		"height": 0.0
	},
	"output.Protocol(140585353889632)":
	{
		"height": 0.0
	},
	"output.Protocol(140603238031120)":
	{
		"height": 0.0
	},
	"output.Protocol(140614611112432)":
	{
		"height": 0.0
	},
	"output.Protocol(140677935927792)":
	{
		"height": 0.0
	},
	"output.coffeecompile_output":
	{
		"height": 144.0
	},
	"output.exec":
	{
		"height": 304.0
	},
	"output.find_results":
	{
		"height": 304.0
	},
	"pinned_build_system": "Rebuild CScope",
	"project": "minnet.sublime-project",
	"replace":
	{
		"height": 74.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"wscli",
				"wscli.js"
			],
			[
				"lws-write",
				"libwebsockets/include/libwebsockets/lws-write.h"
			],
			[
				"lws-htt",
				"libwebsockets/include/libwebsockets/lws-http.h"
			],
			[
				"-ws.c",
				"minnet-server-ws.c"
			],
			[
				"minnet-server.c",
				"minnet-server.c"
			],
			[
				"innet-server.c",
				"minnet-server.c"
			],
			[
				"build",
				"cmake/BuildLibwebsockets.cmake"
			],
			[
				"access-lo",
				"libwebsockets/lib/roles/http/server/access-log.c"
			],
			[
				"buildlib",
				"cmake/BuildLibwebsockets.cmake"
			],
			[
				"minnet.c",
				"minnet.c"
			],
			[
				"lws-call",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"server-htt",
				"minnet-server-http.c"
			],
			[
				"lws_raw_",
				"libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c"
			],
			[
				"server-ws",
				"minnet-server-ws.c"
			],
			[
				"minnet-server-htt",
				"minnet-server-http.c"
			],
			[
				"server.c",
				"libwebsockets/lib/roles/http/server/server.c"
			],
			[
				"wsi-time",
				"libwebsockets/lib/core-net/wsi-timeout.c"
			],
			[
				"url.h",
				"minnet-url.h"
			],
			[
				"list.h",
				"curl/lib/llist.h"
			],
			[
				"lws-vho",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"minnet-req",
				"minnet-request.h"
			],
			[
				"vhost",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"minnet-request",
				"minnet-request.c"
			],
			[
				"minnet-ur",
				"minnet-url.c"
			],
			[
				"minnet-url",
				"minnet-url.h"
			],
			[
				"server-http",
				"minnet-server-http.c"
			],
			[
				"raw_proy",
				"libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c"
			],
			[
				"inimal-http-server-pr",
				"build/x86_64-linux-debug/minimal-examples/minimal-http-server-proxy.c"
			],
			[
				"lws-conte",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"jsutil",
				"jsutils.c"
			],
			[
				"lws-con",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"uffer.h",
				"minnet-buffer.h"
			],
			[
				"ws.c",
				"minnet-server-ws.c"
			],
			[
				"minnet-server",
				"minnet-server.c"
			],
			[
				"openssl-server",
				"libwebsockets/lib/tls/openssl/openssl-server.c"
			],
			[
				"findlibw",
				"cmake/FindLibwebsockets.cmake"
			],
			[
				"FindLib",
				"cmake/FindLibwebsockets.cmake"
			],
			[
				"raw-proxy-fall",
				"libwebsockets/minimal-examples/raw/minimal-raw-proxy-fallback/minimal-raw-proxy-fallback.c"
			],
			[
				"build-li",
				"build-libwebsockets.sh"
			],
			[
				"extension-p",
				"libwebsockets/lib/roles/ws/ext/extension-permessage-deflate.h"
			],
			[
				"async",
				"libwebsockets/lib/system/async-dns/async-dns.c"
			],
			[
				"adopt.c",
				"libwebsockets/lib/core-net/adopt.c"
			],
			[
				"vhost.h",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"adopt.h",
				"libwebsockets/include/libwebsockets/lws-adopt.h"
			],
			[
				"adopt",
				"libwebsockets/minimal-examples/raw/minimal-raw-adopt-udp/minimal-raw-adopt-udp.c"
			],
			[
				"async-dn",
				"libwebsockets/lib/system/async-dns/async-dns.c"
			],
			[
				"lws-ad",
				"libwebsockets/include/libwebsockets/lws-adopt.h"
			],
			[
				"lws-ring",
				"libwebsockets/include/libwebsockets/lws-ring.h"
			],
			[
				"ring",
				"libwebsockets/minimal-examples/ws-server/minimal-ws-server-ring/minimal-ws-server-ring.c"
			],
			[
				"minnet-strea",
				"minnet-stream.c"
			],
			[
				"private-lib",
				"libwebsockets/lib/core/private-lib-core.h"
			],
			[
				"lws-http",
				"libwebsockets/include/libwebsockets/lws-http.h"
			],
			[
				"minnet-cli",
				"minnet-client.c"
			],
			[
				"test-cli",
				"tests/test-client.js"
			],
			[
				"async-dns",
				"libwebsockets/lib/system/async-dns/async-dns.c"
			],
			[
				"test-fe",
				"tests/test-fetch.js"
			],
			[
				"wscli.js",
				"wscli.js"
			],
			[
				"lws-clie",
				"libwebsockets/include/libwebsockets/lws-client.h"
			],
			[
				"wscli.j",
				"wscli.js"
			],
			[
				"minnet.h",
				"minnet.h"
			],
			[
				"",
				"minnet.c"
			],
			[
				"test-rpc",
				"test-rpc.js"
			],
			[
				"de",
				"libwebsockets/scripts/dox-extra.css"
			],
			[
				"path.c",
				"curl/lib/curl_path.c"
			],
			[
				"minnet-buff",
				"minnet-buffer.h"
			],
			[
				"minnet-web",
				"minnet-websocket.h"
			],
			[
				"minnet-buffer",
				"minnet-buffer.h"
			],
			[
				"request",
				"minnet-request.c"
			],
			[
				"lws-cal",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"test-li",
				"tests/test-client.js"
			],
			[
				"test-client.js",
				"test-client.js.sed"
			],
			[
				"client.js",
				"tests/client.js"
			],
			[
				"buffer.h",
				"minnet-buffer.h"
			],
			[
				"minnet-ser",
				"minnet-server.c"
			],
			[
				"minnet-clie",
				"minnet-client.c"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"server.js",
				"tests/server.js"
			],
			[
				"rpc.j",
				"rpc.js"
			],
			[
				"http-post",
				"libwebsockets/minimal-examples/http-client/minimal-http-client-post/minimal-http-client-post.c"
			],
			[
				"jsutils",
				"jsutils.c"
			],
			[
				"post",
				"libwebsockets/minimal-examples/http-client/minimal-http-client-post/minimal-http-client-post.c"
			],
			[
				"post-",
				"libwebsockets/build/x86_64-linux-gnu/bin/lws-minimal-http-server-form-post-file"
			],
			[
				"-post",
				"libwebsockets/minimal-examples/http-client/minimal-http-client-post/minimal-http-client-post.c"
			],
			[
				"rpc.js",
				"rpc.js"
			],
			[
				"ops-h1",
				"libwebsockets/lib/roles/h1/ops-h1.c"
			],
			[
				"libwebsockets.h",
				"libwebsockets/include/libwebsockets.h"
			],
			[
				"lws-context",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"websockets.h",
				"libwebsockets/include/libwebsockets.h"
			],
			[
				"raw-netcat",
				"libwebsockets/minimal-examples/raw/minimal-raw-netcat/minimal-raw-netcat.c"
			],
			[
				"adopt-raw",
				"libwebsockets/minimal-examples/raw/minimal-raw-adopt-tcp/minimal-raw-adopt-tcp.c"
			],
			[
				"client-post",
				"libwebsockets/minimal-examples/http-client/minimal-http-client-post/minimal-http-client-post.c"
			],
			[
				"post.c",
				"curl/docs/examples/http-post.c"
			],
			[
				"client",
				"libwebsockets/lib/roles/http/client/client-http.c"
			],
			[
				"server-dead",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-deaddrop/minimal-http-server-deaddrop.c"
			],
			[
				"lws_raw_pr",
				"libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c"
			],
			[
				"poll.c",
				"poll.c"
			],
			[
				"libweb",
				"libwebsockets/include/libwebsockets.h"
			],
			[
				"output.c",
				"libwebsockets/lib/core-net/output.c"
			],
			[
				"connect3",
				"libwebsockets/lib/core-net/client/connect3.c"
			],
			[
				"connect.c",
				"libwebsockets/lib/core-net/client/connect.c"
			],
			[
				"close",
				"libwebsockets/lib/core-net/close.c"
			],
			[
				"lws-ca",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"lws-",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"lws_raw",
				"libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c"
			],
			[
				".js",
				"libwebsockets/test-apps/test.js"
			],
			[
				"libwebsockets/CM",
				"libwebsockets/CMakeLists.txt"
			],
			[
				"jsu",
				"jsutils.c"
			],
			[
				"mime",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-mimetypes/minimal-http-server-mimetypes.c"
			],
			[
				"form-post-file",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-form-post-file/minimal-http-server-form-post-file.c"
			],
			[
				"ops-h2",
				"libwebsockets/lib/roles/h2/ops-h2.c"
			],
			[
				"tls-mem",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-tls-mem/minimal-http-server-tls-mem.c"
			],
			[
				"minnet-client.c",
				"minnet-client.c"
			],
			[
				"BuildLi",
				"cmake/BuildLibwebsockets.cmake"
			],
			[
				"buffer.c",
				"buffer.c"
			],
			[
				"9",
				"libwebsockets/lib/drivers/devices/display/ili9341.h"
			],
			[
				"proxy.c",
				"minnet-server-proxy.c"
			],
			[
				"raw-proxy",
				"libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-proxy/minimal-raw-proxy.c"
			],
			[
				"ws-raw-",
				"libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-raw-proxy/minimal-ws-raw-proxy.c"
			],
			[
				"lws_raw_pro",
				"libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c"
			],
			[
				"ops-ws",
				"libwebsockets/lib/roles/ws/ops-ws.c"
			],
			[
				"rpc",
				"rpc.js"
			],
			[
				"events.js",
				"~/Projects/plot-cv/lib/events.js"
			],
			[
				"debugger.js",
				"~/Projects/plot-cv/debugger.js"
			],
			[
				"lws-ado",
				"libwebsockets/include/libwebsockets/lws-adopt.h"
			],
			[
				"test-rp",
				"~/Projects/plot-cv/test-rpc.js"
			],
			[
				"cmakelists-im",
				"libwebsockets/CMakeLists-implied-options.txt"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 359.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
