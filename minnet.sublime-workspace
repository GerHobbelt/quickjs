{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"LIBWEB",
				"LIBWEBSOCKETS_LIBRARY_DIR"
			],
			[
				"vhost_",
				"vhost_options_create"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"CURL",
				"CURL_LIBRARY"
			],
			[
				"LI",
				"LIBWEBSOCKETS_LIBRARY_DIR"
			],
			[
				"target_link_",
				"target_link_directories"
			],
			[
				"CURL_",
				"CURL_LIBRARY_DEBUG"
			],
			[
				"minnet",
				"minnet_client_lws"
			],
			[
				"JS_To",
				"JS_ToCString"
			],
			[
				"JS_GetP",
				"JS_GetPropertyUint32"
			],
			[
				"OP",
				"OPENSSL_LIBRARY_DIR"
			],
			[
				"Content",
				"Content-Disposition"
			],
			[
				"MBED",
				"MBEDTLS_LIBRARY_DIR"
			],
			[
				"LIBWEBSO",
				"LIBWEBSOCKETS_LIBRARY_DIR"
			],
			[
				"CMAKE_",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"JS_Throw",
				"JS_ThrowOutOfMemory"
			],
			[
				"opt_P",
				"opt_private_key"
			],
			[
				"JS_FRee",
				"JS_FreeValue"
			],
			[
				"LWS_WR",
				"LWS_WRITE_HTTP_FINAL"
			],
			[
				"MBEDTLS_LIB",
				"MBEDTLS_LIBRARY_DIR"
			],
			[
				"curl_mul",
				"curl_multi_cleanup"
			],
			[
				"LWS_CALLBACK_",
				"LWS_CALLBACK_HTTP_WRITEABLE"
			],
			[
				"lws_get",
				"lws_get_opaque_user_data"
			],
			[
				"Event",
				"EventTarget"
			],
			[
				"http_",
				"http_response"
			],
			[
				"STREAM",
				"STREAM_TEXT"
			],
			[
				"moun",
				"mountpoint_len"
			],
			[
				"ori",
				"origin_protocol"
			],
			[
				"mount",
				"mountpoint_len"
			],
			[
				"LWS",
				"LWSMPRO_CALLBACK"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"Minn",
				"MinnetWebsocket"
			],
			[
				"BUILD_",
				"BUILD_LIBWEBSOCKETS"
			],
			[
				"minnet_request",
				"minnet_request_class_id"
			],
			[
				"getOwn",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"js_loca",
				"js_location_data"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "IsConsoleHandle\nIsSocketHandle\nPFILE_PIPE_LOCAL_INFORMATION\nPIO_STATUS_BLOCK\nPFILE_INFORMATION_CLASS\n  windows_compute_revents\n  windows_compute_revents_socket\n  compute_revents\n  poll",
			"settings":
			{
				"buffer_size": 184,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					95,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/rpc.js",
						"symkeys":
						[
							[
								221,
								253
							],
							[
								310,
								328
							],
							[
								380,
								398
							],
							[
								433,
								453
							],
							[
								502,
								521
							],
							[
								527,
								536
							],
							[
								547,
								561
							],
							[
								590,
								611
							],
							[
								986,
								1025
							],
							[
								1267,
								1290
							],
							[
								1301,
								1304
							],
							[
								1321,
								1348
							],
							[
								1491,
								1497
							],
							[
								1512,
								1541
							],
							[
								1546,
								1552
							],
							[
								1592,
								1647
							],
							[
								1657,
								1667
							],
							[
								1684,
								1708
							],
							[
								1984,
								2002
							],
							[
								2018,
								2059
							],
							[
								2064,
								2082
							],
							[
								2134,
								2261
							],
							[
								2264,
								2299
							],
							[
								2312,
								2324
							],
							[
								2412,
								2426
							],
							[
								2609,
								2624
							],
							[
								2752,
								2766
							],
							[
								2890,
								2908
							],
							[
								3023,
								3036
							],
							[
								3214,
								3244
							],
							[
								3263,
								3281
							],
							[
								3293,
								3308
							],
							[
								3320,
								3338
							],
							[
								3418,
								3436
							],
							[
								3481,
								3488
							],
							[
								3549,
								3555
							],
							[
								3597,
								3609
							],
							[
								3619,
								3631
							],
							[
								3648,
								3669
							],
							[
								3711,
								3723
							],
							[
								3780,
								3792
							],
							[
								3855,
								3889
							],
							[
								3929,
								3941
							],
							[
								4010,
								4022
							],
							[
								4084,
								4109
							],
							[
								4152,
								4164
							],
							[
								4187,
								4199
							],
							[
								4235,
								4254
							],
							[
								4463,
								4469
							],
							[
								4511,
								4516
							],
							[
								4539,
								4560
							],
							[
								4678,
								4713
							],
							[
								4829,
								4833
							],
							[
								4860,
								4869
							],
							[
								4922,
								4947
							],
							[
								4952,
								4980
							],
							[
								5210,
								5219
							],
							[
								5321,
								5354
							],
							[
								5359,
								5369
							],
							[
								5463,
								5473
							],
							[
								5559,
								5577
							],
							[
								5688,
								5705
							],
							[
								5742,
								5751
							],
							[
								5788,
								5838
							],
							[
								5955,
								5967
							],
							[
								6427,
								6441
							],
							[
								6744,
								6765
							],
							[
								6958,
								6972
							],
							[
								7525,
								7529
							],
							[
								7623,
								7643
							],
							[
								7749,
								7764
							],
							[
								7942,
								7954
							],
							[
								8009,
								8023
							],
							[
								8148,
								8166
							],
							[
								8293,
								8302
							],
							[
								8392,
								8408
							],
							[
								8778,
								8811
							],
							[
								9316,
								9360
							],
							[
								9468,
								9486
							],
							[
								9516,
								9522
							],
							[
								9607,
								9641
							],
							[
								9897,
								9908
							],
							[
								9966,
								9982
							],
							[
								10063,
								10083
							],
							[
								10478,
								10490
							],
							[
								10697,
								10717
							],
							[
								10812,
								10832
							],
							[
								10996,
								11020
							],
							[
								11146,
								11164
							],
							[
								11457,
								11497
							],
							[
								11515,
								11546
							],
							[
								11876,
								11882
							],
							[
								12047,
								12067
							],
							[
								12163,
								12203
							],
							[
								12363,
								12372
							],
							[
								12402,
								12410
							],
							[
								12588,
								12628
							],
							[
								12689,
								12696
							],
							[
								12715,
								12722
							],
							[
								12791,
								12831
							],
							[
								12896,
								12903
							],
							[
								12981,
								13021
							],
							[
								13086,
								13093
							],
							[
								13133,
								13139
							],
							[
								13206,
								13210
							],
							[
								13265,
								13269
							],
							[
								13341,
								13372
							],
							[
								13635,
								13673
							],
							[
								13757,
								13766
							],
							[
								14242,
								14250
							],
							[
								14286,
								14306
							],
							[
								14887,
								14896
							],
							[
								15206,
								15215
							],
							[
								15615,
								15620
							],
							[
								15782,
								15787
							],
							[
								15842,
								15866
							],
							[
								16119,
								16140
							],
							[
								16166,
								16185
							],
							[
								16215,
								16227
							],
							[
								16271,
								16276
							],
							[
								16350,
								16359
							],
							[
								16667,
								16727
							],
							[
								17336,
								17349
							],
							[
								17525,
								17533
							],
							[
								17651,
								17663
							],
							[
								17720,
								17736
							],
							[
								18162,
								18176
							],
							[
								18396,
								18430
							],
							[
								18729,
								18734
							],
							[
								18829,
								18870
							],
							[
								19164,
								19179
							],
							[
								19640,
								19650
							],
							[
								19687,
								19697
							],
							[
								19766,
								19775
							],
							[
								19833,
								19871
							],
							[
								20004,
								20022
							],
							[
								20052,
								20067
							],
							[
								20094,
								20113
							],
							[
								20148,
								20167
							],
							[
								20202,
								20219
							],
							[
								20252,
								20272
							],
							[
								20364,
								20391
							],
							[
								20490,
								20526
							],
							[
								20684,
								20730
							],
							[
								20829,
								20860
							],
							[
								21417,
								21427
							],
							[
								21561,
								21613
							],
							[
								21632,
								21687
							],
							[
								22006,
								22077
							],
							[
								22139,
								22146
							],
							[
								22237,
								22244
							],
							[
								22331,
								22413
							],
							[
								22955,
								22985
							],
							[
								23353,
								23388
							],
							[
								23401,
								23441
							],
							[
								23620,
								23676
							],
							[
								23905,
								23932
							],
							[
								23943,
								23958
							],
							[
								23971,
								24001
							],
							[
								24258,
								24354
							],
							[
								24380,
								24398
							],
							[
								24646,
								24664
							],
							[
								24767,
								24780
							],
							[
								25364,
								25397
							],
							[
								25466,
								25496
							],
							[
								25535,
								25539
							],
							[
								25626,
								25653
							],
							[
								25692,
								25700
							],
							[
								25780,
								25806
							],
							[
								25852,
								25881
							],
							[
								25938,
								25983
							],
							[
								26083,
								26088
							],
							[
								26188,
								26222
							],
							[
								26339,
								26399
							],
							[
								26614,
								26636
							],
							[
								26802,
								26824
							],
							[
								26922,
								26942
							],
							[
								26974,
								26979
							],
							[
								27108,
								27135
							],
							[
								27367,
								27414
							],
							[
								28230,
								28265
							],
							[
								28287,
								28291
							],
							[
								28323,
								28327
							],
							[
								28349,
								28381
							],
							[
								28515,
								28557
							],
							[
								28610,
								28651
							]
						],
						"symlist":
						[
							".LogWrap = function LogWrap(log)",
							"log = (...args) =>",
							"log = (...args) =>",
							" (value, ...args) =>",
							"VfnAdapter = vfn =>",
							"get: k =>",
							"set: (k, v) =>",
							"VfnDecorator = vfn =>",
							".GetClasses = function* GetClasses(obj)",
							" function Mapper(map = ",
							"())",
							"self = function(key, value)",
							"Mapper",
							"Mapper.prototype = function()",
							"Mapper",
							" function DefaultConstructor(mapper, fn = (...args) => ",
							"(...args))",
							"self = function(...args)",
							"DefaultConstructor",
							"DefaultConstructor.prototype = function()",
							"DefaultConstructor",
							" function EventLogger(instance = {}, callback = (name, event, thisObj) => console.log('EventLogger', { name, event, thisObj }))",
							" function WrapEvent(handler, name)",
							" function(e)",
							"get(obj, prop)",
							"MessageReceiver",
							"onmessage(msg)",
							"MessageTransmitter",
							"sendMessage()",
							" function MessageTransceiver()",
							"MessageTransceiver",
							"MessageReceiver",
							"MessageTransmitter",
							"value: instance =>",
							"ctor =>",
							"none()",
							"encode: v =>",
							"decode: v =>",
							"json(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".js = function js(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".bjson = function bjson()",
							"encode: v =>",
							"decode: v =>",
							" function RPCApi(c)",
							"RPCApi",
							" o =>",
							" function RPCProxy(c)",
							" function RPCObject(id, connection)",
							"r =>",
							"RPCObject",
							" function RPCFactory(api)",
							"async function Factory(opts)",
							"RPCObject",
							"RPCFactory.prototype = function()",
							"RPCFactory",
							"Connection",
							"static equal(a, b)",
							"static get last()",
							"makeSeq()",
							"constructor(socket, instance, log, codec = 'none')",
							"log(...args)",
							"error(message)",
							"close(status, reason)",
							"onmessage(msg)",
							"r =>",
							"processMessage(data)",
							"onconnect(sock)",
							"onpong(data)",
							"onerror(error)",
							"onclose(code, why)",
							"cleanup()",
							"sendMessage(obj)",
							"sendCommand(command, params = {})",
							"static getCallbacks(instance, verbosity = 0)",
							" (msg, ...args) =>",
							" () =>",
							"handle = (sock, event, ...args) =>",
							"then: fn =>",
							"remove = sock =>",
							"onConnect(sock, req)",
							"onOpen(sock)",
							"onMessage(sock, msg)",
							"onError(sock, error)",
							"onClose(sock, code, why)",
							"onPong(sock, data)",
							"function RPCServerEndpoint(classes = {})",
							"new({ class: name, args = [] })",
							"list()",
							"({ id }, respond) =>",
							"({ obj, method, args = [] }, respond) =>",
							"result =>",
							"error =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"sym =>",
							"v =>",
							"v =>",
							"({ obj, property }, respond) =>",
							"({ obj, property, value }, respond) =>",
							"RPCServer",
							"makeId()",
							"processMessage(data)",
							"RPCServer",
							"RPCClient",
							" e =>",
							"get()",
							"processMessage(response)",
							"command(name, params)",
							"(accept, reject) =>",
							" response =>",
							" e =>",
							"RPCClient",
							" function RPCSocket(url, service = RPCServer, verbosity = 1)",
							" (...args) =>",
							"get fd()",
							"get socket()",
							"get connection()",
							"register(ctor)",
							"listen(new_ws, os = globalThis.os)",
							"() =>",
							"async connect(new_ws, os = globalThis.os)",
							"get connected()",
							"get list()",
							"get last()",
							"RPCSocket",
							"function MakeWebSocket(url, callbacks)",
							".onconnect = () =>",
							".onopen = () =>",
							".onerror = error =>",
							".onmessage = msg =>",
							".onpong = pong =>",
							".onclose = reason =>",
							" function isThenable(value)",
							" function hasHandler(obj, eventName)",
							" function callHandler(obj, eventName, ...args)",
							" function parseURL(url_or_port)",
							"toString()",
							" function GetProperties(obj, method = obj => Object.",
							"(obj), pred = (obj, depth) => obj !== Object.prototype)",
							" function GetKeys(obj, pred = (obj, depth) => obj !== Object.prototype)",
							" obj =>",
							" obj =>",
							" function getPropertyDescriptors(obj, merge = true, pred = (proto, depth) => true)",
							" function define(obj, ...args)",
							" function setHandlers(os, handlers)",
							".onFd = function(fd, readable, writable)",
							" function statusResponse(success, result_or_error, data)",
							" function objectCommand(fn)",
							" function(data)",
							"respond = (success, result) =>",
							" function MakeListCommand(pred = v => typeof v != 'function', defaults = { maxDepth: Infinity })",
							"(data, respond) =>",
							" (proto, depth) =>",
							"(acc, key) =>",
							" function getPrototypeName(proto)",
							"function DeserializeEntries(e)",
							"a =>",
							"function DeserializeKeys(e)",
							"([k]) =>",
							"function DeserializeMap(e)",
							"function DeserializeObject(e)",
							"function ForwardMethods(e, ret = {}, thisObj)",
							" o =>",
							"function ForwardObject(e, thisObj)",
							"function MakeCommandFunction(cmd, getConnection, thisObj, t)",
							"getConnection = obj =>",
							" function(params = {})",
							"(resolve, reject) =>",
							" r =>",
							"async function(params = {})",
							" function SerializeValue(value, source = false)",
							" function DeserializeSymbols(names)",
							"n =>",
							"n =>",
							" function DeserializeValue(desc)",
							"RPCConnect = (url, service = RPCClient) =>",
							"RPCListen = (url, service = RPCServer) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAALEAAAICAuTG9nV3JhcCA9IGZ1bmN0aW9uIExvZ1dyYXAobG9nKQogIGxvZyA9ICguLi5hcmdzKSA9PgogIGxvZyA9ICguLi5hcmdzKSA9PgogICh2YWx1ZSwgLi4uYXJncykgPT4KVmZuQWRhcHRlciA9IHZmbiA9PgogIGdldDogayA9PgogIHNldDogKGssIHYpID0+ClZmbkRlY29yYXRvciA9IHZmbiA9PgogIC5HZXRDbGFzc2VzID0gZnVuY3Rpb24qR2V0Q2xhc3NlcyhvYmopCk1hcHBlcihtYXAgPSAKKCkpCiAgc2VsZiA9IGZ1bmN0aW9uKGtleSwgdmFsdWUpCk1hcHBlcgpNYXBwZXIucHJvdG90eXBlID0gZnVuY3Rpb24oKQpNYXBwZXIKRGVmYXVsdENvbnN0cnVjdG9yKG1hcHBlciwgZm4gPSAoLi4uYXJncykgPT4gCiguLi5hcmdzKSkKICBzZWxmID0gZnVuY3Rpb24oLi4uYXJncykKRGVmYXVsdENvbnN0cnVjdG9yCkRlZmF1bHRDb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBmdW5jdGlvbigpCkRlZmF1bHRDb25zdHJ1Y3RvcgpFdmVudExvZ2dlcihpbnN0YW5jZSA9IHt9LCBjYWxsYmFjayA9IChuYW1lLCBldmVudCwgdGhpc09iaikgPT4gY29uc29sZS5sb2coJ0V2ZW50TG9nZ2VyJywgeyBuYW1lLCBldmVudCwgdGhpc09iaiB9KSkKV3JhcEV2ZW50KGhhbmRsZXIsIG5hbWUpCiAgZnVuY3Rpb24oZSkKICBnZXQob2JqLCBwcm9wKQpNZXNzYWdlUmVjZWl2ZXIKICBvbm1lc3NhZ2UobXNnKQpNZXNzYWdlVHJhbnNtaXR0ZXIKICBzZW5kTWVzc2FnZSgpCk1lc3NhZ2VUcmFuc2NlaXZlcigpCk1lc3NhZ2VUcmFuc2NlaXZlcgpNZXNzYWdlUmVjZWl2ZXIKTWVzc2FnZVRyYW5zbWl0dGVyCiAgdmFsdWU6IGluc3RhbmNlID0+CiAgY3RvciA9PgogIG5vbmUoKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIGpzb24odmVyYm9zZSA9IGZhbHNlKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIC5qcyA9IGZ1bmN0aW9uIGpzKHZlcmJvc2UgPSBmYWxzZSkKICBlbmNvZGU6IHYgPT4KICBkZWNvZGU6IHYgPT4KICAuYmpzb24gPSBmdW5jdGlvbiBianNvbigpCiAgZW5jb2RlOiB2ID0+CiAgZGVjb2RlOiB2ID0+ClJQQ0FwaShjKQpSUENBcGkKICBvID0+ClJQQ1Byb3h5KGMpClJQQ09iamVjdChpZCwgY29ubmVjdGlvbikKICByID0+ClJQQ09iamVjdApSUENGYWN0b3J5KGFwaSkKRmFjdG9yeShvcHRzKQpSUENPYmplY3QKUlBDRmFjdG9yeS5wcm90b3R5cGUgPSBmdW5jdGlvbigpClJQQ0ZhY3RvcnkKQ29ubmVjdGlvbgogIHN0YXRpYyBlcXVhbChhLCBiKQogIHN0YXRpYyBnZXQgbGFzdCgpCiAgbWFrZVNlcSgpCiAgY29uc3RydWN0b3Ioc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYyA9ICdub25lJykKICBsb2coLi4uYXJncykKICBlcnJvcihtZXNzYWdlKQogIGNsb3NlKHN0YXR1cywgcmVhc29uKQogIG9ubWVzc2FnZShtc2cpCiAgciA9PgogIHByb2Nlc3NNZXNzYWdlKGRhdGEpCiAgb25jb25uZWN0KHNvY2spCiAgb25wb25nKGRhdGEpCiAgb25lcnJvcihlcnJvcikKICBvbmNsb3NlKGNvZGUsIHdoeSkKICBjbGVhbnVwKCkKICBzZW5kTWVzc2FnZShvYmopCiAgc2VuZENvbW1hbmQoY29tbWFuZCwgcGFyYW1zID0ge30pCiAgc3RhdGljIGdldENhbGxiYWNrcyhpbnN0YW5jZSwgdmVyYm9zaXR5ID0gMCkKICAobXNnLCAuLi5hcmdzKSA9PgogICgpID0+CiAgaGFuZGxlID0gKHNvY2ssIGV2ZW50LCAuLi5hcmdzKSA9PgogIHRoZW46IGZuID0+CiAgcmVtb3ZlID0gc29jayA9PgogIG9uQ29ubmVjdChzb2NrLCByZXEpCiAgb25PcGVuKHNvY2spCiAgb25NZXNzYWdlKHNvY2ssIG1zZykKICBvbkVycm9yKHNvY2ssIGVycm9yKQogIG9uQ2xvc2Uoc29jaywgY29kZSwgd2h5KQogIG9uUG9uZyhzb2NrLCBkYXRhKQpSUENTZXJ2ZXJFbmRwb2ludChjbGFzc2VzID0ge30pCiAgbmV3KHsgY2xhc3M6IG5hbWUsIGFyZ3MgPSBbXSB9KQogIGxpc3QoKQooeyBpZCB9LCByZXNwb25kKSA9PgooeyBvYmosIG1ldGhvZCwgYXJncyA9IFtdIH0sIHJlc3BvbmQpID0+CiAgcmVzdWx0ID0+CiAgZXJyb3IgPT4KKHsgb2JqLCBlbnVtZXJhYmxlID0gdHJ1ZSB9LCByZXNwb25kKSA9PgogIG9iaiA9PgogIG9iaiA9PgooeyBvYmosIGVudW1lcmFibGUgPSB0cnVlIH0sIHJlc3BvbmQpID0+CiAgb2JqID0+Cih7IG9iaiwgZW51bWVyYWJsZSA9IHRydWUgfSwgcmVzcG9uZCkgPT4KICBvYmogPT4KICBzeW0gPT4KICB2ID0+CiAgdiA9PgooeyBvYmosIHByb3BlcnR5IH0sIHJlc3BvbmQpID0+Cih7IG9iaiwgcHJvcGVydHksIHZhbHVlIH0sIHJlc3BvbmQpID0+ClJQQ1NlcnZlcgogIG1ha2VJZCgpCiAgcHJvY2Vzc01lc3NhZ2UoZGF0YSkKUlBDU2VydmVyClJQQ0NsaWVudAogIGUgPT4KICBnZXQoKQogIHByb2Nlc3NNZXNzYWdlKHJlc3BvbnNlKQogIGNvbW1hbmQobmFtZSwgcGFyYW1zKQooYWNjZXB0LCByZWplY3QpID0+CiAgcmVzcG9uc2UgPT4KICBlID0+ClJQQ0NsaWVudApSUENTb2NrZXQodXJsLCBzZXJ2aWNlID0gUlBDU2VydmVyLCB2ZXJib3NpdHkgPSAxKQogICguLi5hcmdzKSA9PgogIGdldCBmZCgpCiAgZ2V0IHNvY2tldCgpCiAgZ2V0IGNvbm5lY3Rpb24oKQogIHJlZ2lzdGVyKGN0b3IpCiAgbGlzdGVuKG5ld193cywgb3MgPSBnbG9iYWxUaGlzLm9zKQooKSA9PgogIGNvbm5lY3QobmV3X3dzLCBvcyA9IGdsb2JhbFRoaXMub3MpCiAgZ2V0IGNvbm5lY3RlZCgpCiAgZ2V0IGxpc3QoKQogIGdldCBsYXN0KCkKUlBDU29ja2V0Ck1ha2VXZWJTb2NrZXQodXJsLCBjYWxsYmFja3MpCiAgLm9uY29ubmVjdCA9ICgpID0+CiAgLm9ub3BlbiA9ICgpID0+CiAgLm9uZXJyb3IgPSBlcnJvciA9PgogIC5vbm1lc3NhZ2UgPSBtc2cgPT4KICAub25wb25nID0gcG9uZyA9PgogIC5vbmNsb3NlID0gcmVhc29uID0+CiAgaXNUaGVuYWJsZSh2YWx1ZSkKICBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKQogIGNhbGxIYW5kbGVyKG9iaiwgZXZlbnROYW1lLCAuLi5hcmdzKQogIHBhcnNlVVJMKHVybF9vcl9wb3J0KQogIHRvU3RyaW5nKCkKR2V0UHJvcGVydGllcyhvYmosIG1ldGhvZCA9IG9iaiA9PiBPYmplY3QuCihvYmopLCBwcmVkID0gKG9iaiwgZGVwdGgpID0+IG9iaiAhPT0gT2JqZWN0LnByb3RvdHlwZSkKR2V0S2V5cyhvYmosIHByZWQgPSAob2JqLCBkZXB0aCkgPT4gb2JqICE9PSBPYmplY3QucHJvdG90eXBlKQogIG9iaiA9PgogIG9iaiA9PgogIGdldFByb3BlcnR5RGVzY3JpcHRvcnMob2JqLCBtZXJnZSA9IHRydWUsIHByZWQgPSAocHJvdG8sIGRlcHRoKSA9PiB0cnVlKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgc2V0SGFuZGxlcnMob3MsIGhhbmRsZXJzKQogIC5vbkZkID0gZnVuY3Rpb24oZmQsIHJlYWRhYmxlLCB3cml0YWJsZSkKICBzdGF0dXNSZXNwb25zZShzdWNjZXNzLCByZXN1bHRfb3JfZXJyb3IsIGRhdGEpCiAgb2JqZWN0Q29tbWFuZChmbikKICBmdW5jdGlvbihkYXRhKQogIHJlc3BvbmQgPSAoc3VjY2VzcywgcmVzdWx0KSA9PgpNYWtlTGlzdENvbW1hbmQocHJlZCA9IHYgPT4gdHlwZW9mIHYgIT0gJ2Z1bmN0aW9uJywgZGVmYXVsdHMgPSB7IG1heERlcHRoOiBJbmZpbml0eSB9KQooZGF0YSwgcmVzcG9uZCkgPT4KICAocHJvdG8sIGRlcHRoKSA9PgooYWNjLCBrZXkpID0+CiAgZ2V0UHJvdG90eXBlTmFtZShwcm90bykKRGVzZXJpYWxpemVFbnRyaWVzKGUpCiAgYSA9PgpEZXNlcmlhbGl6ZUtleXMoZSkKKFtrXSkgPT4KRGVzZXJpYWxpemVNYXAoZSkKRGVzZXJpYWxpemVPYmplY3QoZSkKRm9yd2FyZE1ldGhvZHMoZSwgcmV0ID0ge30sIHRoaXNPYmopCiAgbyA9PgpGb3J3YXJkT2JqZWN0KGUsIHRoaXNPYmopCk1ha2VDb21tYW5kRnVuY3Rpb24oY21kLCBnZXRDb25uZWN0aW9uLCB0aGlzT2JqLCB0KQogIGdldENvbm5lY3Rpb24gPSBvYmogPT4KICBmdW5jdGlvbihwYXJhbXMgPSB7fSkKKHJlc29sdmUsIHJlamVjdCkgPT4KICByID0+CiAgZnVuY3Rpb24ocGFyYW1zID0ge30pClNlcmlhbGl6ZVZhbHVlKHZhbHVlLCBzb3VyY2UgPSBmYWxzZSkKRGVzZXJpYWxpemVTeW1ib2xzKG5hbWVzKQogIG4gPT4KICBuID0+CkRlc2VyaWFsaXplVmFsdWUoZGVzYykKUlBDQ29ubmVjdCA9ICh1cmwsIHNlcnZpY2UgPSBSUENDbGllbnQpID0+ClJQQ0xpc3RlbiA9ICh1cmwsIHNlcnZpY2UgPSBSUENTZXJ2ZXIpID0+AAAAAAAAAAALEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					96,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAALEAAAICAuTG9nV3JhcCA9IGZ1bmN0aW9uIExvZ1dyYXAobG9nKQogIGxvZyA9ICguLi5hcmdzKSA9PgogIGxvZyA9ICguLi5hcmdzKSA9PgogICh2YWx1ZSwgLi4uYXJncykgPT4KVmZuQWRhcHRlciA9IHZmbiA9PgogIGdldDogayA9PgogIHNldDogKGssIHYpID0+ClZmbkRlY29yYXRvciA9IHZmbiA9PgogIC5HZXRDbGFzc2VzID0gZnVuY3Rpb24qR2V0Q2xhc3NlcyhvYmopCk1hcHBlcihtYXAgPSAKKCkpCiAgc2VsZiA9IGZ1bmN0aW9uKGtleSwgdmFsdWUpCk1hcHBlcgpNYXBwZXIucHJvdG90eXBlID0gZnVuY3Rpb24oKQpNYXBwZXIKRGVmYXVsdENvbnN0cnVjdG9yKG1hcHBlciwgZm4gPSAoLi4uYXJncykgPT4gCiguLi5hcmdzKSkKICBzZWxmID0gZnVuY3Rpb24oLi4uYXJncykKRGVmYXVsdENvbnN0cnVjdG9yCkRlZmF1bHRDb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBmdW5jdGlvbigpCkRlZmF1bHRDb25zdHJ1Y3RvcgpFdmVudExvZ2dlcihpbnN0YW5jZSA9IHt9LCBjYWxsYmFjayA9IChuYW1lLCBldmVudCwgdGhpc09iaikgPT4gY29uc29sZS5sb2coJ0V2ZW50TG9nZ2VyJywgeyBuYW1lLCBldmVudCwgdGhpc09iaiB9KSkKV3JhcEV2ZW50KGhhbmRsZXIsIG5hbWUpCiAgZnVuY3Rpb24oZSkKICBnZXQob2JqLCBwcm9wKQpNZXNzYWdlUmVjZWl2ZXIKICBvbm1lc3NhZ2UobXNnKQpNZXNzYWdlVHJhbnNtaXR0ZXIKICBzZW5kTWVzc2FnZSgpCk1lc3NhZ2VUcmFuc2NlaXZlcigpCk1lc3NhZ2VUcmFuc2NlaXZlcgpNZXNzYWdlUmVjZWl2ZXIKTWVzc2FnZVRyYW5zbWl0dGVyCiAgdmFsdWU6IGluc3RhbmNlID0+CiAgY3RvciA9PgogIG5vbmUoKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIGpzb24odmVyYm9zZSA9IGZhbHNlKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIC5qcyA9IGZ1bmN0aW9uIGpzKHZlcmJvc2UgPSBmYWxzZSkKICBlbmNvZGU6IHYgPT4KICBkZWNvZGU6IHYgPT4KICAuYmpzb24gPSBmdW5jdGlvbiBianNvbigpCiAgZW5jb2RlOiB2ID0+CiAgZGVjb2RlOiB2ID0+ClJQQ0FwaShjKQpSUENBcGkKICBvID0+ClJQQ1Byb3h5KGMpClJQQ09iamVjdChpZCwgY29ubmVjdGlvbikKICByID0+ClJQQ09iamVjdApSUENGYWN0b3J5KGFwaSkKRmFjdG9yeShvcHRzKQpSUENPYmplY3QKUlBDRmFjdG9yeS5wcm90b3R5cGUgPSBmdW5jdGlvbigpClJQQ0ZhY3RvcnkKQ29ubmVjdGlvbgogIHN0YXRpYyBlcXVhbChhLCBiKQogIHN0YXRpYyBnZXQgbGFzdCgpCiAgbWFrZVNlcSgpCiAgY29uc3RydWN0b3Ioc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYyA9ICdub25lJykKICBsb2coLi4uYXJncykKICBlcnJvcihtZXNzYWdlKQogIGNsb3NlKHN0YXR1cywgcmVhc29uKQogIG9ubWVzc2FnZShtc2cpCiAgciA9PgogIHByb2Nlc3NNZXNzYWdlKGRhdGEpCiAgb25jb25uZWN0KHNvY2spCiAgb25wb25nKGRhdGEpCiAgb25lcnJvcihlcnJvcikKICBvbmNsb3NlKGNvZGUsIHdoeSkKICBjbGVhbnVwKCkKICBzZW5kTWVzc2FnZShvYmopCiAgc2VuZENvbW1hbmQoY29tbWFuZCwgcGFyYW1zID0ge30pCiAgc3RhdGljIGdldENhbGxiYWNrcyhpbnN0YW5jZSwgdmVyYm9zaXR5ID0gMCkKICAobXNnLCAuLi5hcmdzKSA9PgogICgpID0+CiAgaGFuZGxlID0gKHNvY2ssIGV2ZW50LCAuLi5hcmdzKSA9PgogIHRoZW46IGZuID0+CiAgcmVtb3ZlID0gc29jayA9PgogIG9uQ29ubmVjdChzb2NrLCByZXEpCiAgb25PcGVuKHNvY2spCiAgb25NZXNzYWdlKHNvY2ssIG1zZykKICBvbkVycm9yKHNvY2ssIGVycm9yKQogIG9uQ2xvc2Uoc29jaywgY29kZSwgd2h5KQogIG9uUG9uZyhzb2NrLCBkYXRhKQpSUENTZXJ2ZXJFbmRwb2ludChjbGFzc2VzID0ge30pCiAgbmV3KHsgY2xhc3M6IG5hbWUsIGFyZ3MgPSBbXSB9KQogIGxpc3QoKQooeyBpZCB9LCByZXNwb25kKSA9PgooeyBvYmosIG1ldGhvZCwgYXJncyA9IFtdIH0sIHJlc3BvbmQpID0+CiAgcmVzdWx0ID0+CiAgZXJyb3IgPT4KKHsgb2JqLCBlbnVtZXJhYmxlID0gdHJ1ZSB9LCByZXNwb25kKSA9PgogIG9iaiA9PgogIG9iaiA9PgooeyBvYmosIGVudW1lcmFibGUgPSB0cnVlIH0sIHJlc3BvbmQpID0+CiAgb2JqID0+Cih7IG9iaiwgZW51bWVyYWJsZSA9IHRydWUgfSwgcmVzcG9uZCkgPT4KICBvYmogPT4KICBzeW0gPT4KICB2ID0+CiAgdiA9PgooeyBvYmosIHByb3BlcnR5IH0sIHJlc3BvbmQpID0+Cih7IG9iaiwgcHJvcGVydHksIHZhbHVlIH0sIHJlc3BvbmQpID0+ClJQQ1NlcnZlcgogIG1ha2VJZCgpCiAgcHJvY2Vzc01lc3NhZ2UoZGF0YSkKUlBDU2VydmVyClJQQ0NsaWVudAogIGUgPT4KICBnZXQoKQogIHByb2Nlc3NNZXNzYWdlKHJlc3BvbnNlKQogIGNvbW1hbmQobmFtZSwgcGFyYW1zKQooYWNjZXB0LCByZWplY3QpID0+CiAgcmVzcG9uc2UgPT4KICBlID0+ClJQQ0NsaWVudApSUENTb2NrZXQodXJsLCBzZXJ2aWNlID0gUlBDU2VydmVyLCB2ZXJib3NpdHkgPSAxKQogICguLi5hcmdzKSA9PgogIGdldCBmZCgpCiAgZ2V0IHNvY2tldCgpCiAgZ2V0IGNvbm5lY3Rpb24oKQogIHJlZ2lzdGVyKGN0b3IpCiAgbGlzdGVuKG5ld193cywgb3MgPSBnbG9iYWxUaGlzLm9zKQooKSA9PgogIGNvbm5lY3QobmV3X3dzLCBvcyA9IGdsb2JhbFRoaXMub3MpCiAgZ2V0IGNvbm5lY3RlZCgpCiAgZ2V0IGxpc3QoKQogIGdldCBsYXN0KCkKUlBDU29ja2V0Ck1ha2VXZWJTb2NrZXQodXJsLCBjYWxsYmFja3MpCiAgLm9uY29ubmVjdCA9ICgpID0+CiAgLm9ub3BlbiA9ICgpID0+CiAgLm9uZXJyb3IgPSBlcnJvciA9PgogIC5vbm1lc3NhZ2UgPSBtc2cgPT4KICAub25wb25nID0gcG9uZyA9PgogIC5vbmNsb3NlID0gcmVhc29uID0+CiAgaXNUaGVuYWJsZSh2YWx1ZSkKICBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKQogIGNhbGxIYW5kbGVyKG9iaiwgZXZlbnROYW1lLCAuLi5hcmdzKQogIHBhcnNlVVJMKHVybF9vcl9wb3J0KQogIHRvU3RyaW5nKCkKR2V0UHJvcGVydGllcyhvYmosIG1ldGhvZCA9IG9iaiA9PiBPYmplY3QuCihvYmopLCBwcmVkID0gKG9iaiwgZGVwdGgpID0+IG9iaiAhPT0gT2JqZWN0LnByb3RvdHlwZSkKR2V0S2V5cyhvYmosIHByZWQgPSAob2JqLCBkZXB0aCkgPT4gb2JqICE9PSBPYmplY3QucHJvdG90eXBlKQogIG9iaiA9PgogIG9iaiA9PgogIGdldFByb3BlcnR5RGVzY3JpcHRvcnMob2JqLCBtZXJnZSA9IHRydWUsIHByZWQgPSAocHJvdG8sIGRlcHRoKSA9PiB0cnVlKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgc2V0SGFuZGxlcnMob3MsIGhhbmRsZXJzKQogIC5vbkZkID0gZnVuY3Rpb24oZmQsIHJlYWRhYmxlLCB3cml0YWJsZSkKICBzdGF0dXNSZXNwb25zZShzdWNjZXNzLCByZXN1bHRfb3JfZXJyb3IsIGRhdGEpCiAgb2JqZWN0Q29tbWFuZChmbikKICBmdW5jdGlvbihkYXRhKQogIHJlc3BvbmQgPSAoc3VjY2VzcywgcmVzdWx0KSA9PgpNYWtlTGlzdENvbW1hbmQocHJlZCA9IHYgPT4gdHlwZW9mIHYgIT0gJ2Z1bmN0aW9uJywgZGVmYXVsdHMgPSB7IG1heERlcHRoOiBJbmZpbml0eSB9KQooZGF0YSwgcmVzcG9uZCkgPT4KICAocHJvdG8sIGRlcHRoKSA9PgooYWNjLCBrZXkpID0+CiAgZ2V0UHJvdG90eXBlTmFtZShwcm90bykKRGVzZXJpYWxpemVFbnRyaWVzKGUpCiAgYSA9PgpEZXNlcmlhbGl6ZUtleXMoZSkKKFtrXSkgPT4KRGVzZXJpYWxpemVNYXAoZSkKRGVzZXJpYWxpemVPYmplY3QoZSkKRm9yd2FyZE1ldGhvZHMoZSwgcmV0ID0ge30sIHRoaXNPYmopCiAgbyA9PgpGb3J3YXJkT2JqZWN0KGUsIHRoaXNPYmopCk1ha2VDb21tYW5kRnVuY3Rpb24oY21kLCBnZXRDb25uZWN0aW9uLCB0aGlzT2JqLCB0KQogIGdldENvbm5lY3Rpb24gPSBvYmogPT4KICBmdW5jdGlvbihwYXJhbXMgPSB7fSkKKHJlc29sdmUsIHJlamVjdCkgPT4KICByID0+CiAgZnVuY3Rpb24ocGFyYW1zID0ge30pClNlcmlhbGl6ZVZhbHVlKHZhbHVlLCBzb3VyY2UgPSBmYWxzZSkKRGVzZXJpYWxpemVTeW1ib2xzKG5hbWVzKQogIG4gPT4KICBuID0+CkRlc2VyaWFsaXplVmFsdWUoZGVzYykKUlBDQ29ubmVjdCA9ICh1cmwsIHNlcnZpY2UgPSBSUENDbGllbnQpID0+ClJQQ0xpc3RlbiA9ICh1cmwsIHNlcnZpY2UgPSBSUENTZXJ2ZXIpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					97,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/rpc.js",
						"symkeys":
						[
							[
								221,
								253
							],
							[
								310,
								328
							],
							[
								380,
								398
							],
							[
								433,
								453
							],
							[
								502,
								521
							],
							[
								527,
								536
							],
							[
								547,
								561
							],
							[
								590,
								611
							],
							[
								986,
								1025
							],
							[
								1267,
								1290
							],
							[
								1301,
								1304
							],
							[
								1321,
								1348
							],
							[
								1491,
								1497
							],
							[
								1512,
								1541
							],
							[
								1546,
								1552
							],
							[
								1592,
								1647
							],
							[
								1657,
								1667
							],
							[
								1684,
								1708
							],
							[
								1984,
								2002
							],
							[
								2018,
								2059
							],
							[
								2064,
								2082
							],
							[
								2134,
								2261
							],
							[
								2264,
								2299
							],
							[
								2312,
								2324
							],
							[
								2412,
								2426
							],
							[
								2609,
								2624
							],
							[
								2752,
								2766
							],
							[
								2890,
								2908
							],
							[
								3023,
								3036
							],
							[
								3214,
								3244
							],
							[
								3263,
								3281
							],
							[
								3293,
								3308
							],
							[
								3320,
								3338
							],
							[
								3418,
								3436
							],
							[
								3481,
								3488
							],
							[
								3549,
								3555
							],
							[
								3597,
								3609
							],
							[
								3619,
								3631
							],
							[
								3648,
								3669
							],
							[
								3711,
								3723
							],
							[
								3780,
								3792
							],
							[
								3855,
								3889
							],
							[
								3929,
								3941
							],
							[
								4010,
								4022
							],
							[
								4084,
								4109
							],
							[
								4152,
								4164
							],
							[
								4187,
								4199
							],
							[
								4235,
								4254
							],
							[
								4463,
								4469
							],
							[
								4511,
								4516
							],
							[
								4539,
								4560
							],
							[
								4678,
								4713
							],
							[
								4829,
								4833
							],
							[
								4860,
								4869
							],
							[
								4922,
								4947
							],
							[
								4952,
								4980
							],
							[
								5210,
								5219
							],
							[
								5321,
								5354
							],
							[
								5359,
								5369
							],
							[
								5463,
								5473
							],
							[
								5559,
								5577
							],
							[
								5688,
								5705
							],
							[
								5742,
								5751
							],
							[
								5788,
								5838
							],
							[
								5955,
								5967
							],
							[
								6427,
								6441
							],
							[
								6744,
								6765
							],
							[
								6958,
								6972
							],
							[
								7525,
								7529
							],
							[
								7623,
								7643
							],
							[
								7749,
								7764
							],
							[
								7942,
								7954
							],
							[
								8009,
								8023
							],
							[
								8148,
								8166
							],
							[
								8293,
								8302
							],
							[
								8392,
								8408
							],
							[
								8778,
								8811
							],
							[
								9316,
								9360
							],
							[
								9468,
								9486
							],
							[
								9516,
								9522
							],
							[
								9607,
								9641
							],
							[
								9897,
								9908
							],
							[
								9966,
								9982
							],
							[
								10063,
								10083
							],
							[
								10478,
								10490
							],
							[
								10697,
								10717
							],
							[
								10812,
								10832
							],
							[
								10996,
								11020
							],
							[
								11146,
								11164
							],
							[
								11457,
								11497
							],
							[
								11515,
								11546
							],
							[
								11876,
								11882
							],
							[
								12047,
								12067
							],
							[
								12163,
								12203
							],
							[
								12363,
								12372
							],
							[
								12402,
								12410
							],
							[
								12588,
								12628
							],
							[
								12689,
								12696
							],
							[
								12715,
								12722
							],
							[
								12791,
								12831
							],
							[
								12896,
								12903
							],
							[
								12981,
								13021
							],
							[
								13086,
								13093
							],
							[
								13133,
								13139
							],
							[
								13206,
								13210
							],
							[
								13265,
								13269
							],
							[
								13341,
								13372
							],
							[
								13635,
								13673
							],
							[
								13757,
								13766
							],
							[
								14242,
								14250
							],
							[
								14286,
								14306
							],
							[
								14887,
								14896
							],
							[
								15206,
								15215
							],
							[
								15615,
								15620
							],
							[
								15782,
								15787
							],
							[
								15842,
								15866
							],
							[
								16119,
								16140
							],
							[
								16166,
								16185
							],
							[
								16215,
								16227
							],
							[
								16271,
								16276
							],
							[
								16350,
								16359
							],
							[
								16667,
								16727
							],
							[
								17336,
								17349
							],
							[
								17525,
								17533
							],
							[
								17651,
								17663
							],
							[
								17720,
								17736
							],
							[
								18162,
								18176
							],
							[
								18396,
								18430
							],
							[
								18729,
								18734
							],
							[
								18829,
								18870
							],
							[
								19164,
								19179
							],
							[
								19640,
								19650
							],
							[
								19687,
								19697
							],
							[
								19766,
								19775
							],
							[
								19833,
								19871
							],
							[
								20004,
								20022
							],
							[
								20052,
								20067
							],
							[
								20094,
								20113
							],
							[
								20148,
								20167
							],
							[
								20202,
								20219
							],
							[
								20252,
								20272
							],
							[
								20364,
								20391
							],
							[
								20490,
								20526
							],
							[
								20684,
								20730
							],
							[
								20829,
								20860
							],
							[
								21417,
								21427
							],
							[
								21561,
								21613
							],
							[
								21632,
								21687
							],
							[
								22006,
								22077
							],
							[
								22139,
								22146
							],
							[
								22237,
								22244
							],
							[
								22331,
								22413
							],
							[
								22955,
								22985
							],
							[
								23353,
								23388
							],
							[
								23401,
								23441
							],
							[
								23620,
								23676
							],
							[
								23905,
								23932
							],
							[
								23943,
								23958
							],
							[
								23971,
								24001
							],
							[
								24258,
								24354
							],
							[
								24380,
								24398
							],
							[
								24646,
								24664
							],
							[
								24767,
								24780
							],
							[
								25364,
								25397
							],
							[
								25466,
								25496
							],
							[
								25535,
								25539
							],
							[
								25626,
								25653
							],
							[
								25692,
								25700
							],
							[
								25780,
								25806
							],
							[
								25852,
								25881
							],
							[
								25938,
								25983
							],
							[
								26083,
								26088
							],
							[
								26188,
								26222
							],
							[
								26339,
								26399
							],
							[
								26614,
								26636
							],
							[
								26802,
								26824
							],
							[
								26922,
								26942
							],
							[
								26974,
								26979
							],
							[
								27108,
								27135
							],
							[
								27367,
								27414
							],
							[
								28230,
								28265
							],
							[
								28287,
								28291
							],
							[
								28323,
								28327
							],
							[
								28349,
								28381
							],
							[
								28515,
								28557
							],
							[
								28610,
								28651
							]
						],
						"symlist":
						[
							".LogWrap = function LogWrap(log)",
							"log = (...args) =>",
							"log = (...args) =>",
							" (value, ...args) =>",
							"VfnAdapter = vfn =>",
							"get: k =>",
							"set: (k, v) =>",
							"VfnDecorator = vfn =>",
							".GetClasses = function* GetClasses(obj)",
							" function Mapper(map = ",
							"())",
							"self = function(key, value)",
							"Mapper",
							"Mapper.prototype = function()",
							"Mapper",
							" function DefaultConstructor(mapper, fn = (...args) => ",
							"(...args))",
							"self = function(...args)",
							"DefaultConstructor",
							"DefaultConstructor.prototype = function()",
							"DefaultConstructor",
							" function EventLogger(instance = {}, callback = (name, event, thisObj) => console.log('EventLogger', { name, event, thisObj }))",
							" function WrapEvent(handler, name)",
							" function(e)",
							"get(obj, prop)",
							"MessageReceiver",
							"onmessage(msg)",
							"MessageTransmitter",
							"sendMessage()",
							" function MessageTransceiver()",
							"MessageTransceiver",
							"MessageReceiver",
							"MessageTransmitter",
							"value: instance =>",
							"ctor =>",
							"none()",
							"encode: v =>",
							"decode: v =>",
							"json(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".js = function js(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".bjson = function bjson()",
							"encode: v =>",
							"decode: v =>",
							" function RPCApi(c)",
							"RPCApi",
							" o =>",
							" function RPCProxy(c)",
							" function RPCObject(id, connection)",
							"r =>",
							"RPCObject",
							" function RPCFactory(api)",
							"async function Factory(opts)",
							"RPCObject",
							"RPCFactory.prototype = function()",
							"RPCFactory",
							"Connection",
							"static equal(a, b)",
							"static get last()",
							"makeSeq()",
							"constructor(socket, instance, log, codec = 'none')",
							"log(...args)",
							"error(message)",
							"close(status, reason)",
							"onmessage(msg)",
							"r =>",
							"processMessage(data)",
							"onconnect(sock)",
							"onpong(data)",
							"onerror(error)",
							"onclose(code, why)",
							"cleanup()",
							"sendMessage(obj)",
							"sendCommand(command, params = {})",
							"static getCallbacks(instance, verbosity = 0)",
							" (msg, ...args) =>",
							" () =>",
							"handle = (sock, event, ...args) =>",
							"then: fn =>",
							"remove = sock =>",
							"onConnect(sock, req)",
							"onOpen(sock)",
							"onMessage(sock, msg)",
							"onError(sock, error)",
							"onClose(sock, code, why)",
							"onPong(sock, data)",
							"function RPCServerEndpoint(classes = {})",
							"new({ class: name, args = [] })",
							"list()",
							"({ id }, respond) =>",
							"({ obj, method, args = [] }, respond) =>",
							"result =>",
							"error =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"sym =>",
							"v =>",
							"v =>",
							"({ obj, property }, respond) =>",
							"({ obj, property, value }, respond) =>",
							"RPCServer",
							"makeId()",
							"processMessage(data)",
							"RPCServer",
							"RPCClient",
							" e =>",
							"get()",
							"processMessage(response)",
							"command(name, params)",
							"(accept, reject) =>",
							" response =>",
							" e =>",
							"RPCClient",
							" function RPCSocket(url, service = RPCServer, verbosity = 1)",
							" (...args) =>",
							"get fd()",
							"get socket()",
							"get connection()",
							"register(ctor)",
							"listen(new_ws, os = globalThis.os)",
							"() =>",
							"async connect(new_ws, os = globalThis.os)",
							"get connected()",
							"get list()",
							"get last()",
							"RPCSocket",
							"function MakeWebSocket(url, callbacks)",
							".onconnect = () =>",
							".onopen = () =>",
							".onerror = error =>",
							".onmessage = msg =>",
							".onpong = pong =>",
							".onclose = reason =>",
							" function isThenable(value)",
							" function hasHandler(obj, eventName)",
							" function callHandler(obj, eventName, ...args)",
							" function parseURL(url_or_port)",
							"toString()",
							" function GetProperties(obj, method = obj => Object.",
							"(obj), pred = (obj, depth) => obj !== Object.prototype)",
							" function GetKeys(obj, pred = (obj, depth) => obj !== Object.prototype)",
							" obj =>",
							" obj =>",
							" function getPropertyDescriptors(obj, merge = true, pred = (proto, depth) => true)",
							" function define(obj, ...args)",
							" function setHandlers(os, handlers)",
							".onFd = function(fd, readable, writable)",
							" function statusResponse(success, result_or_error, data)",
							" function objectCommand(fn)",
							" function(data)",
							"respond = (success, result) =>",
							" function MakeListCommand(pred = v => typeof v != 'function', defaults = { maxDepth: Infinity })",
							"(data, respond) =>",
							" (proto, depth) =>",
							"(acc, key) =>",
							" function getPrototypeName(proto)",
							"function DeserializeEntries(e)",
							"a =>",
							"function DeserializeKeys(e)",
							"([k]) =>",
							"function DeserializeMap(e)",
							"function DeserializeObject(e)",
							"function ForwardMethods(e, ret = {}, thisObj)",
							" o =>",
							"function ForwardObject(e, thisObj)",
							"function MakeCommandFunction(cmd, getConnection, thisObj, t)",
							"getConnection = obj =>",
							" function(params = {})",
							"(resolve, reject) =>",
							" r =>",
							"async function(params = {})",
							" function SerializeValue(value, source = false)",
							" function DeserializeSymbols(names)",
							"n =>",
							"n =>",
							" function DeserializeValue(desc)",
							"RPCConnect = (url, service = RPCClient) =>",
							"RPCListen = (url, service = RPCServer) =>"
						]
					},
					"AwAAAAAAAAAAAAAACxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsQAAAgIC5Mb2dXcmFwID0gZnVuY3Rpb24gTG9nV3JhcChsb2cpCiAgbG9nID0gKC4uLmFyZ3MpID0+CiAgbG9nID0gKC4uLmFyZ3MpID0+CiAgKHZhbHVlLCAuLi5hcmdzKSA9PgpWZm5BZGFwdGVyID0gdmZuID0+CiAgZ2V0OiBrID0+CiAgc2V0OiAoaywgdikgPT4KVmZuRGVjb3JhdG9yID0gdmZuID0+CiAgLkdldENsYXNzZXMgPSBmdW5jdGlvbipHZXRDbGFzc2VzKG9iaikKTWFwcGVyKG1hcCA9IAooKSkKICBzZWxmID0gZnVuY3Rpb24oa2V5LCB2YWx1ZSkKTWFwcGVyCk1hcHBlci5wcm90b3R5cGUgPSBmdW5jdGlvbigpCk1hcHBlcgpEZWZhdWx0Q29uc3RydWN0b3IobWFwcGVyLCBmbiA9ICguLi5hcmdzKSA9PiAKKC4uLmFyZ3MpKQogIHNlbGYgPSBmdW5jdGlvbiguLi5hcmdzKQpEZWZhdWx0Q29uc3RydWN0b3IKRGVmYXVsdENvbnN0cnVjdG9yLnByb3RvdHlwZSA9IGZ1bmN0aW9uKCkKRGVmYXVsdENvbnN0cnVjdG9yCkV2ZW50TG9nZ2VyKGluc3RhbmNlID0ge30sIGNhbGxiYWNrID0gKG5hbWUsIGV2ZW50LCB0aGlzT2JqKSA9PiBjb25zb2xlLmxvZygnRXZlbnRMb2dnZXInLCB7IG5hbWUsIGV2ZW50LCB0aGlzT2JqIH0pKQpXcmFwRXZlbnQoaGFuZGxlciwgbmFtZSkKICBmdW5jdGlvbihlKQogIGdldChvYmosIHByb3ApCk1lc3NhZ2VSZWNlaXZlcgogIG9ubWVzc2FnZShtc2cpCk1lc3NhZ2VUcmFuc21pdHRlcgogIHNlbmRNZXNzYWdlKCkKTWVzc2FnZVRyYW5zY2VpdmVyKCkKTWVzc2FnZVRyYW5zY2VpdmVyCk1lc3NhZ2VSZWNlaXZlcgpNZXNzYWdlVHJhbnNtaXR0ZXIKICB2YWx1ZTogaW5zdGFuY2UgPT4KICBjdG9yID0+CiAgbm9uZSgpCiAgZW5jb2RlOiB2ID0+CiAgZGVjb2RlOiB2ID0+CiAganNvbih2ZXJib3NlID0gZmFsc2UpCiAgZW5jb2RlOiB2ID0+CiAgZGVjb2RlOiB2ID0+CiAgLmpzID0gZnVuY3Rpb24ganModmVyYm9zZSA9IGZhbHNlKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIC5ianNvbiA9IGZ1bmN0aW9uIGJqc29uKCkKICBlbmNvZGU6IHYgPT4KICBkZWNvZGU6IHYgPT4KUlBDQXBpKGMpClJQQ0FwaQogIG8gPT4KUlBDUHJveHkoYykKUlBDT2JqZWN0KGlkLCBjb25uZWN0aW9uKQogIHIgPT4KUlBDT2JqZWN0ClJQQ0ZhY3RvcnkoYXBpKQpGYWN0b3J5KG9wdHMpClJQQ09iamVjdApSUENGYWN0b3J5LnByb3RvdHlwZSA9IGZ1bmN0aW9uKCkKUlBDRmFjdG9yeQpDb25uZWN0aW9uCiAgc3RhdGljIGVxdWFsKGEsIGIpCiAgc3RhdGljIGdldCBsYXN0KCkKICBtYWtlU2VxKCkKICBjb25zdHJ1Y3Rvcihzb2NrZXQsIGluc3RhbmNlLCBsb2csIGNvZGVjID0gJ25vbmUnKQogIGxvZyguLi5hcmdzKQogIGVycm9yKG1lc3NhZ2UpCiAgY2xvc2Uoc3RhdHVzLCByZWFzb24pCiAgb25tZXNzYWdlKG1zZykKICByID0+CiAgcHJvY2Vzc01lc3NhZ2UoZGF0YSkKICBvbmNvbm5lY3Qoc29jaykKICBvbnBvbmcoZGF0YSkKICBvbmVycm9yKGVycm9yKQogIG9uY2xvc2UoY29kZSwgd2h5KQogIGNsZWFudXAoKQogIHNlbmRNZXNzYWdlKG9iaikKICBzZW5kQ29tbWFuZChjb21tYW5kLCBwYXJhbXMgPSB7fSkKICBzdGF0aWMgZ2V0Q2FsbGJhY2tzKGluc3RhbmNlLCB2ZXJib3NpdHkgPSAwKQogIChtc2csIC4uLmFyZ3MpID0+CiAgKCkgPT4KICBoYW5kbGUgPSAoc29jaywgZXZlbnQsIC4uLmFyZ3MpID0+CiAgdGhlbjogZm4gPT4KICByZW1vdmUgPSBzb2NrID0+CiAgb25Db25uZWN0KHNvY2ssIHJlcSkKICBvbk9wZW4oc29jaykKICBvbk1lc3NhZ2Uoc29jaywgbXNnKQogIG9uRXJyb3Ioc29jaywgZXJyb3IpCiAgb25DbG9zZShzb2NrLCBjb2RlLCB3aHkpCiAgb25Qb25nKHNvY2ssIGRhdGEpClJQQ1NlcnZlckVuZHBvaW50KGNsYXNzZXMgPSB7fSkKICBuZXcoeyBjbGFzczogbmFtZSwgYXJncyA9IFtdIH0pCiAgbGlzdCgpCih7IGlkIH0sIHJlc3BvbmQpID0+Cih7IG9iaiwgbWV0aG9kLCBhcmdzID0gW10gfSwgcmVzcG9uZCkgPT4KICByZXN1bHQgPT4KICBlcnJvciA9PgooeyBvYmosIGVudW1lcmFibGUgPSB0cnVlIH0sIHJlc3BvbmQpID0+CiAgb2JqID0+CiAgb2JqID0+Cih7IG9iaiwgZW51bWVyYWJsZSA9IHRydWUgfSwgcmVzcG9uZCkgPT4KICBvYmogPT4KKHsgb2JqLCBlbnVtZXJhYmxlID0gdHJ1ZSB9LCByZXNwb25kKSA9PgogIG9iaiA9PgogIHN5bSA9PgogIHYgPT4KICB2ID0+Cih7IG9iaiwgcHJvcGVydHkgfSwgcmVzcG9uZCkgPT4KKHsgb2JqLCBwcm9wZXJ0eSwgdmFsdWUgfSwgcmVzcG9uZCkgPT4KUlBDU2VydmVyCiAgbWFrZUlkKCkKICBwcm9jZXNzTWVzc2FnZShkYXRhKQpSUENTZXJ2ZXIKUlBDQ2xpZW50CiAgZSA9PgogIGdldCgpCiAgcHJvY2Vzc01lc3NhZ2UocmVzcG9uc2UpCiAgY29tbWFuZChuYW1lLCBwYXJhbXMpCihhY2NlcHQsIHJlamVjdCkgPT4KICByZXNwb25zZSA9PgogIGUgPT4KUlBDQ2xpZW50ClJQQ1NvY2tldCh1cmwsIHNlcnZpY2UgPSBSUENTZXJ2ZXIsIHZlcmJvc2l0eSA9IDEpCiAgKC4uLmFyZ3MpID0+CiAgZ2V0IGZkKCkKICBnZXQgc29ja2V0KCkKICBnZXQgY29ubmVjdGlvbigpCiAgcmVnaXN0ZXIoY3RvcikKICBsaXN0ZW4obmV3X3dzLCBvcyA9IGdsb2JhbFRoaXMub3MpCigpID0+CiAgY29ubmVjdChuZXdfd3MsIG9zID0gZ2xvYmFsVGhpcy5vcykKICBnZXQgY29ubmVjdGVkKCkKICBnZXQgbGlzdCgpCiAgZ2V0IGxhc3QoKQpSUENTb2NrZXQKTWFrZVdlYlNvY2tldCh1cmwsIGNhbGxiYWNrcykKICAub25jb25uZWN0ID0gKCkgPT4KICAub25vcGVuID0gKCkgPT4KICAub25lcnJvciA9IGVycm9yID0+CiAgLm9ubWVzc2FnZSA9IG1zZyA9PgogIC5vbnBvbmcgPSBwb25nID0+CiAgLm9uY2xvc2UgPSByZWFzb24gPT4KICBpc1RoZW5hYmxlKHZhbHVlKQogIGhhc0hhbmRsZXIob2JqLCBldmVudE5hbWUpCiAgY2FsbEhhbmRsZXIob2JqLCBldmVudE5hbWUsIC4uLmFyZ3MpCiAgcGFyc2VVUkwodXJsX29yX3BvcnQpCiAgdG9TdHJpbmcoKQpHZXRQcm9wZXJ0aWVzKG9iaiwgbWV0aG9kID0gb2JqID0+IE9iamVjdC4KKG9iaiksIHByZWQgPSAob2JqLCBkZXB0aCkgPT4gb2JqICE9PSBPYmplY3QucHJvdG90eXBlKQpHZXRLZXlzKG9iaiwgcHJlZCA9IChvYmosIGRlcHRoKSA9PiBvYmogIT09IE9iamVjdC5wcm90b3R5cGUpCiAgb2JqID0+CiAgb2JqID0+CiAgZ2V0UHJvcGVydHlEZXNjcmlwdG9ycyhvYmosIG1lcmdlID0gdHJ1ZSwgcHJlZCA9IChwcm90bywgZGVwdGgpID0+IHRydWUpCiAgZGVmaW5lKG9iaiwgLi4uYXJncykKICBzZXRIYW5kbGVycyhvcywgaGFuZGxlcnMpCiAgLm9uRmQgPSBmdW5jdGlvbihmZCwgcmVhZGFibGUsIHdyaXRhYmxlKQogIHN0YXR1c1Jlc3BvbnNlKHN1Y2Nlc3MsIHJlc3VsdF9vcl9lcnJvciwgZGF0YSkKICBvYmplY3RDb21tYW5kKGZuKQogIGZ1bmN0aW9uKGRhdGEpCiAgcmVzcG9uZCA9IChzdWNjZXNzLCByZXN1bHQpID0+Ck1ha2VMaXN0Q29tbWFuZChwcmVkID0gdiA9PiB0eXBlb2YgdiAhPSAnZnVuY3Rpb24nLCBkZWZhdWx0cyA9IHsgbWF4RGVwdGg6IEluZmluaXR5IH0pCihkYXRhLCByZXNwb25kKSA9PgogIChwcm90bywgZGVwdGgpID0+CihhY2MsIGtleSkgPT4KICBnZXRQcm90b3R5cGVOYW1lKHByb3RvKQpEZXNlcmlhbGl6ZUVudHJpZXMoZSkKICBhID0+CkRlc2VyaWFsaXplS2V5cyhlKQooW2tdKSA9PgpEZXNlcmlhbGl6ZU1hcChlKQpEZXNlcmlhbGl6ZU9iamVjdChlKQpGb3J3YXJkTWV0aG9kcyhlLCByZXQgPSB7fSwgdGhpc09iaikKICBvID0+CkZvcndhcmRPYmplY3QoZSwgdGhpc09iaikKTWFrZUNvbW1hbmRGdW5jdGlvbihjbWQsIGdldENvbm5lY3Rpb24sIHRoaXNPYmosIHQpCiAgZ2V0Q29ubmVjdGlvbiA9IG9iaiA9PgogIGZ1bmN0aW9uKHBhcmFtcyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgogIHIgPT4KICBmdW5jdGlvbihwYXJhbXMgPSB7fSkKU2VyaWFsaXplVmFsdWUodmFsdWUsIHNvdXJjZSA9IGZhbHNlKQpEZXNlcmlhbGl6ZVN5bWJvbHMobmFtZXMpCiAgbiA9PgogIG4gPT4KRGVzZXJpYWxpemVWYWx1ZShkZXNjKQpSUENDb25uZWN0ID0gKHVybCwgc2VydmljZSA9IFJQQ0NsaWVudCkgPT4KUlBDTGlzdGVuID0gKHVybCwgc2VydmljZSA9IFJQQ1NlcnZlcikgPT4AAAAAAAAAAAsQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					98,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAALEAAAICAuTG9nV3JhcCA9IGZ1bmN0aW9uIExvZ1dyYXAobG9nKQogIGxvZyA9ICguLi5hcmdzKSA9PgogIGxvZyA9ICguLi5hcmdzKSA9PgogICh2YWx1ZSwgLi4uYXJncykgPT4KVmZuQWRhcHRlciA9IHZmbiA9PgogIGdldDogayA9PgogIHNldDogKGssIHYpID0+ClZmbkRlY29yYXRvciA9IHZmbiA9PgogIC5HZXRDbGFzc2VzID0gZnVuY3Rpb24qR2V0Q2xhc3NlcyhvYmopCk1hcHBlcihtYXAgPSAKKCkpCiAgc2VsZiA9IGZ1bmN0aW9uKGtleSwgdmFsdWUpCk1hcHBlcgpNYXBwZXIucHJvdG90eXBlID0gZnVuY3Rpb24oKQpNYXBwZXIKRGVmYXVsdENvbnN0cnVjdG9yKG1hcHBlciwgZm4gPSAoLi4uYXJncykgPT4gCiguLi5hcmdzKSkKICBzZWxmID0gZnVuY3Rpb24oLi4uYXJncykKRGVmYXVsdENvbnN0cnVjdG9yCkRlZmF1bHRDb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBmdW5jdGlvbigpCkRlZmF1bHRDb25zdHJ1Y3RvcgpFdmVudExvZ2dlcihpbnN0YW5jZSA9IHt9LCBjYWxsYmFjayA9IChuYW1lLCBldmVudCwgdGhpc09iaikgPT4gY29uc29sZS5sb2coJ0V2ZW50TG9nZ2VyJywgeyBuYW1lLCBldmVudCwgdGhpc09iaiB9KSkKV3JhcEV2ZW50KGhhbmRsZXIsIG5hbWUpCiAgZnVuY3Rpb24oZSkKICBnZXQob2JqLCBwcm9wKQpNZXNzYWdlUmVjZWl2ZXIKICBvbm1lc3NhZ2UobXNnKQpNZXNzYWdlVHJhbnNtaXR0ZXIKICBzZW5kTWVzc2FnZSgpCk1lc3NhZ2VUcmFuc2NlaXZlcigpCk1lc3NhZ2VUcmFuc2NlaXZlcgpNZXNzYWdlUmVjZWl2ZXIKTWVzc2FnZVRyYW5zbWl0dGVyCiAgdmFsdWU6IGluc3RhbmNlID0+CiAgY3RvciA9PgogIG5vbmUoKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIGpzb24odmVyYm9zZSA9IGZhbHNlKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIC5qcyA9IGZ1bmN0aW9uIGpzKHZlcmJvc2UgPSBmYWxzZSkKICBlbmNvZGU6IHYgPT4KICBkZWNvZGU6IHYgPT4KICAuYmpzb24gPSBmdW5jdGlvbiBianNvbigpCiAgZW5jb2RlOiB2ID0+CiAgZGVjb2RlOiB2ID0+ClJQQ0FwaShjKQpSUENBcGkKICBvID0+ClJQQ1Byb3h5KGMpClJQQ09iamVjdChpZCwgY29ubmVjdGlvbikKICByID0+ClJQQ09iamVjdApSUENGYWN0b3J5KGFwaSkKRmFjdG9yeShvcHRzKQpSUENPYmplY3QKUlBDRmFjdG9yeS5wcm90b3R5cGUgPSBmdW5jdGlvbigpClJQQ0ZhY3RvcnkKQ29ubmVjdGlvbgogIHN0YXRpYyBlcXVhbChhLCBiKQogIHN0YXRpYyBnZXQgbGFzdCgpCiAgbWFrZVNlcSgpCiAgY29uc3RydWN0b3Ioc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYyA9ICdub25lJykKICBsb2coLi4uYXJncykKICBlcnJvcihtZXNzYWdlKQogIGNsb3NlKHN0YXR1cywgcmVhc29uKQogIG9ubWVzc2FnZShtc2cpCiAgciA9PgogIHByb2Nlc3NNZXNzYWdlKGRhdGEpCiAgb25jb25uZWN0KHNvY2spCiAgb25wb25nKGRhdGEpCiAgb25lcnJvcihlcnJvcikKICBvbmNsb3NlKGNvZGUsIHdoeSkKICBjbGVhbnVwKCkKICBzZW5kTWVzc2FnZShvYmopCiAgc2VuZENvbW1hbmQoY29tbWFuZCwgcGFyYW1zID0ge30pCiAgc3RhdGljIGdldENhbGxiYWNrcyhpbnN0YW5jZSwgdmVyYm9zaXR5ID0gMCkKICAobXNnLCAuLi5hcmdzKSA9PgogICgpID0+CiAgaGFuZGxlID0gKHNvY2ssIGV2ZW50LCAuLi5hcmdzKSA9PgogIHRoZW46IGZuID0+CiAgcmVtb3ZlID0gc29jayA9PgogIG9uQ29ubmVjdChzb2NrLCByZXEpCiAgb25PcGVuKHNvY2spCiAgb25NZXNzYWdlKHNvY2ssIG1zZykKICBvbkVycm9yKHNvY2ssIGVycm9yKQogIG9uQ2xvc2Uoc29jaywgY29kZSwgd2h5KQogIG9uUG9uZyhzb2NrLCBkYXRhKQpSUENTZXJ2ZXJFbmRwb2ludChjbGFzc2VzID0ge30pCiAgbmV3KHsgY2xhc3M6IG5hbWUsIGFyZ3MgPSBbXSB9KQogIGxpc3QoKQooeyBpZCB9LCByZXNwb25kKSA9PgooeyBvYmosIG1ldGhvZCwgYXJncyA9IFtdIH0sIHJlc3BvbmQpID0+CiAgcmVzdWx0ID0+CiAgZXJyb3IgPT4KKHsgb2JqLCBlbnVtZXJhYmxlID0gdHJ1ZSB9LCByZXNwb25kKSA9PgogIG9iaiA9PgogIG9iaiA9PgooeyBvYmosIGVudW1lcmFibGUgPSB0cnVlIH0sIHJlc3BvbmQpID0+CiAgb2JqID0+Cih7IG9iaiwgZW51bWVyYWJsZSA9IHRydWUgfSwgcmVzcG9uZCkgPT4KICBvYmogPT4KICBzeW0gPT4KICB2ID0+CiAgdiA9PgooeyBvYmosIHByb3BlcnR5IH0sIHJlc3BvbmQpID0+Cih7IG9iaiwgcHJvcGVydHksIHZhbHVlIH0sIHJlc3BvbmQpID0+ClJQQ1NlcnZlcgogIG1ha2VJZCgpCiAgcHJvY2Vzc01lc3NhZ2UoZGF0YSkKUlBDU2VydmVyClJQQ0NsaWVudAogIGUgPT4KICBnZXQoKQogIHByb2Nlc3NNZXNzYWdlKHJlc3BvbnNlKQogIGNvbW1hbmQobmFtZSwgcGFyYW1zKQooYWNjZXB0LCByZWplY3QpID0+CiAgcmVzcG9uc2UgPT4KICBlID0+ClJQQ0NsaWVudApSUENTb2NrZXQodXJsLCBzZXJ2aWNlID0gUlBDU2VydmVyLCB2ZXJib3NpdHkgPSAxKQogICguLi5hcmdzKSA9PgogIGdldCBmZCgpCiAgZ2V0IHNvY2tldCgpCiAgZ2V0IGNvbm5lY3Rpb24oKQogIHJlZ2lzdGVyKGN0b3IpCiAgbGlzdGVuKG5ld193cywgb3MgPSBnbG9iYWxUaGlzLm9zKQooKSA9PgogIGNvbm5lY3QobmV3X3dzLCBvcyA9IGdsb2JhbFRoaXMub3MpCiAgZ2V0IGNvbm5lY3RlZCgpCiAgZ2V0IGxpc3QoKQogIGdldCBsYXN0KCkKUlBDU29ja2V0Ck1ha2VXZWJTb2NrZXQodXJsLCBjYWxsYmFja3MpCiAgLm9uY29ubmVjdCA9ICgpID0+CiAgLm9ub3BlbiA9ICgpID0+CiAgLm9uZXJyb3IgPSBlcnJvciA9PgogIC5vbm1lc3NhZ2UgPSBtc2cgPT4KICAub25wb25nID0gcG9uZyA9PgogIC5vbmNsb3NlID0gcmVhc29uID0+CiAgaXNUaGVuYWJsZSh2YWx1ZSkKICBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKQogIGNhbGxIYW5kbGVyKG9iaiwgZXZlbnROYW1lLCAuLi5hcmdzKQogIHBhcnNlVVJMKHVybF9vcl9wb3J0KQogIHRvU3RyaW5nKCkKR2V0UHJvcGVydGllcyhvYmosIG1ldGhvZCA9IG9iaiA9PiBPYmplY3QuCihvYmopLCBwcmVkID0gKG9iaiwgZGVwdGgpID0+IG9iaiAhPT0gT2JqZWN0LnByb3RvdHlwZSkKR2V0S2V5cyhvYmosIHByZWQgPSAob2JqLCBkZXB0aCkgPT4gb2JqICE9PSBPYmplY3QucHJvdG90eXBlKQogIG9iaiA9PgogIG9iaiA9PgogIGdldFByb3BlcnR5RGVzY3JpcHRvcnMob2JqLCBtZXJnZSA9IHRydWUsIHByZWQgPSAocHJvdG8sIGRlcHRoKSA9PiB0cnVlKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgc2V0SGFuZGxlcnMob3MsIGhhbmRsZXJzKQogIC5vbkZkID0gZnVuY3Rpb24oZmQsIHJlYWRhYmxlLCB3cml0YWJsZSkKICBzdGF0dXNSZXNwb25zZShzdWNjZXNzLCByZXN1bHRfb3JfZXJyb3IsIGRhdGEpCiAgb2JqZWN0Q29tbWFuZChmbikKICBmdW5jdGlvbihkYXRhKQogIHJlc3BvbmQgPSAoc3VjY2VzcywgcmVzdWx0KSA9PgpNYWtlTGlzdENvbW1hbmQocHJlZCA9IHYgPT4gdHlwZW9mIHYgIT0gJ2Z1bmN0aW9uJywgZGVmYXVsdHMgPSB7IG1heERlcHRoOiBJbmZpbml0eSB9KQooZGF0YSwgcmVzcG9uZCkgPT4KICAocHJvdG8sIGRlcHRoKSA9PgooYWNjLCBrZXkpID0+CiAgZ2V0UHJvdG90eXBlTmFtZShwcm90bykKRGVzZXJpYWxpemVFbnRyaWVzKGUpCiAgYSA9PgpEZXNlcmlhbGl6ZUtleXMoZSkKKFtrXSkgPT4KRGVzZXJpYWxpemVNYXAoZSkKRGVzZXJpYWxpemVPYmplY3QoZSkKRm9yd2FyZE1ldGhvZHMoZSwgcmV0ID0ge30sIHRoaXNPYmopCiAgbyA9PgpGb3J3YXJkT2JqZWN0KGUsIHRoaXNPYmopCk1ha2VDb21tYW5kRnVuY3Rpb24oY21kLCBnZXRDb25uZWN0aW9uLCB0aGlzT2JqLCB0KQogIGdldENvbm5lY3Rpb24gPSBvYmogPT4KICBmdW5jdGlvbihwYXJhbXMgPSB7fSkKKHJlc29sdmUsIHJlamVjdCkgPT4KICByID0+CiAgZnVuY3Rpb24ocGFyYW1zID0ge30pClNlcmlhbGl6ZVZhbHVlKHZhbHVlLCBzb3VyY2UgPSBmYWxzZSkKRGVzZXJpYWxpemVTeW1ib2xzKG5hbWVzKQogIG4gPT4KICBuID0+CkRlc2VyaWFsaXplVmFsdWUoZGVzYykKUlBDQ29ubmVjdCA9ICh1cmwsIHNlcnZpY2UgPSBSUENDbGllbnQpID0+ClJQQ0xpc3RlbiA9ICh1cmwsIHNlcnZpY2UgPSBSUENTZXJ2ZXIpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					99,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
						"symkeys":
						[
							[
								786,
								813
							],
							[
								984,
								1030
							],
							[
								1608,
								1638
							],
							[
								1694,
								1716
							],
							[
								1994,
								2004
							],
							[
								2248,
								2262
							],
							[
								3174,
								3187
							],
							[
								3223,
								3237
							],
							[
								3337,
								3353
							],
							[
								3848,
								3887
							],
							[
								4059,
								4079
							],
							[
								5404,
								5437
							],
							[
								5702,
								5717
							],
							[
								5917,
								5934
							],
							[
								6026,
								6043
							],
							[
								6930,
								6937
							],
							[
								7001,
								7008
							],
							[
								7085,
								7105
							],
							[
								7594,
								7606
							],
							[
								7693,
								7705
							],
							[
								7944,
								7960
							],
							[
								8122,
								8140
							],
							[
								8279,
								8290
							],
							[
								8384,
								8400
							],
							[
								8567,
								8586
							],
							[
								8694,
								8710
							],
							[
								8950,
								8967
							],
							[
								9452,
								9472
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							".createWS = (url, callbacks, listen) =>",
							" (level, ...args) =>",
							"'/404.html': function* (req, res)",
							"proxy(req, res)",
							"*config(req, res)",
							"*files(req, resp)",
							"name =>",
							"file =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"onConnect(ws, req)",
							"onClose(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAHAIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					100,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAcAgAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpCiAgbWFpbiguLi5hcmdzKQogIChhLCB2KSA9PgogICh2LCBwdiwgbykgPT4KICAuaGVscCA9ICgpID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgLmNyZWF0ZVdTID0gKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pID0+CiAgKGxldmVsLCAuLi5hcmdzKSA9PgonLzQwNC5odG1sJzogZnVuY3Rpb24qKHJlcSwgcmVzKQogIHByb3h5KHJlcSwgcmVzKQoqY29uZmlnKHJlcSwgcmVzKQoqZmlsZXMocmVxLCByZXNwKQogIG5hbWUgPT4KICBmaWxlID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvbkNsb3NlKHdzKQogIG9uSHR0cChyZXEsIHJzcCkKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					101,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
						"symkeys":
						[
							[
								786,
								813
							],
							[
								984,
								1030
							],
							[
								1608,
								1638
							],
							[
								1694,
								1716
							],
							[
								1994,
								2004
							],
							[
								2248,
								2262
							],
							[
								3174,
								3187
							],
							[
								3223,
								3237
							],
							[
								3337,
								3353
							],
							[
								3848,
								3887
							],
							[
								4059,
								4079
							],
							[
								5404,
								5437
							],
							[
								5702,
								5717
							],
							[
								5917,
								5934
							],
							[
								6026,
								6043
							],
							[
								6930,
								6937
							],
							[
								7001,
								7008
							],
							[
								7085,
								7105
							],
							[
								7594,
								7606
							],
							[
								7693,
								7705
							],
							[
								7944,
								7960
							],
							[
								8122,
								8140
							],
							[
								8279,
								8290
							],
							[
								8384,
								8400
							],
							[
								8567,
								8586
							],
							[
								8694,
								8710
							],
							[
								8950,
								8967
							],
							[
								9452,
								9472
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							".createWS = (url, callbacks, listen) =>",
							" (level, ...args) =>",
							"'/404.html': function* (req, res)",
							"proxy(req, res)",
							"*config(req, res)",
							"*files(req, resp)",
							"name =>",
							"file =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"onConnect(ws, req)",
							"onClose(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAHAIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					102,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/poll.c",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAcAgAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpCiAgbWFpbiguLi5hcmdzKQogIChhLCB2KSA9PgogICh2LCBwdiwgbykgPT4KICAuaGVscCA9ICgpID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgLmNyZWF0ZVdTID0gKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pID0+CiAgKGxldmVsLCAuLi5hcmdzKSA9PgonLzQwNC5odG1sJzogZnVuY3Rpb24qKHJlcSwgcmVzKQogIHByb3h5KHJlcSwgcmVzKQoqY29uZmlnKHJlcSwgcmVzKQoqZmlsZXMocmVxLCByZXNwKQogIG5hbWUgPT4KICBmaWxlID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvbkNsb3NlKHdzKQogIG9uSHR0cChyZXEsIHJzcCkKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					103,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					104,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/event-emitter.js",
						"symkeys":
						[
							[
								6,
								37
							],
							[
								100,
								112
							],
							[
								134,
								147
							],
							[
								154,
								173
							],
							[
								293,
								324
							],
							[
								586,
								611
							],
							[
								754,
								773
							],
							[
								859,
								879
							],
							[
								1019,
								1040
							],
							[
								1053,
								1076
							]
						],
						"symlist":
						[
							"indexOf = (haystack, needle) =>",
							"EventEmitter",
							"constructor()",
							"on(event, listener)",
							"removeListener(event, listener)",
							"removeAllListeners(event)",
							"rawListeners(event)",
							"emit(event, ...args)",
							"once(event, listener)",
							"callback = (...args) =>"
						]
					},
					"AwAAAAAAAAAAAAAA8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPEAAAAgIGluZGV4T2YgPSAoaGF5c3RhY2ssIG5lZWRsZSkgPT4KRXZlbnRFbWl0dGVyCiAgY29uc3RydWN0b3IoKQogIG9uKGV2ZW50LCBsaXN0ZW5lcikKICByZW1vdmVMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIpCiAgcmVtb3ZlQWxsTGlzdGVuZXJzKGV2ZW50KQogIHJhd0xpc3RlbmVycyhldmVudCkKICBlbWl0KGV2ZW50LCAuLi5hcmdzKQogIG9uY2UoZXZlbnQsIGxpc3RlbmVyKQogIGNhbGxiYWNrID0gKC4uLmFyZ3MpID0+AAAAAAAAAADxAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					105,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/rpc.js",
						"symkeys":
						[
							[
								220,
								252
							],
							[
								309,
								327
							],
							[
								379,
								397
							],
							[
								432,
								452
							],
							[
								501,
								520
							],
							[
								526,
								535
							],
							[
								546,
								560
							],
							[
								589,
								610
							],
							[
								985,
								1024
							],
							[
								1266,
								1289
							],
							[
								1300,
								1303
							],
							[
								1320,
								1347
							],
							[
								1490,
								1496
							],
							[
								1511,
								1540
							],
							[
								1545,
								1551
							],
							[
								1591,
								1646
							],
							[
								1656,
								1666
							],
							[
								1683,
								1707
							],
							[
								1983,
								2001
							],
							[
								2017,
								2058
							],
							[
								2063,
								2081
							],
							[
								2133,
								2260
							],
							[
								2263,
								2298
							],
							[
								2311,
								2323
							],
							[
								2411,
								2425
							],
							[
								2608,
								2623
							],
							[
								2751,
								2765
							],
							[
								2889,
								2907
							],
							[
								3022,
								3035
							],
							[
								3213,
								3243
							],
							[
								3262,
								3280
							],
							[
								3292,
								3307
							],
							[
								3319,
								3337
							],
							[
								3417,
								3435
							],
							[
								3480,
								3487
							],
							[
								3548,
								3554
							],
							[
								3596,
								3608
							],
							[
								3618,
								3630
							],
							[
								3647,
								3668
							],
							[
								3710,
								3722
							],
							[
								3779,
								3791
							],
							[
								3854,
								3888
							],
							[
								3928,
								3940
							],
							[
								4009,
								4021
							],
							[
								4083,
								4108
							],
							[
								4151,
								4163
							],
							[
								4186,
								4198
							],
							[
								4234,
								4253
							],
							[
								4462,
								4468
							],
							[
								4510,
								4515
							],
							[
								4538,
								4559
							],
							[
								4677,
								4712
							],
							[
								4828,
								4832
							],
							[
								4859,
								4868
							],
							[
								4921,
								4946
							],
							[
								4951,
								4979
							],
							[
								5209,
								5218
							],
							[
								5320,
								5353
							],
							[
								5358,
								5368
							],
							[
								5462,
								5472
							],
							[
								5558,
								5576
							],
							[
								5687,
								5704
							],
							[
								5741,
								5750
							],
							[
								5787,
								5837
							],
							[
								5954,
								5966
							],
							[
								6427,
								6441
							],
							[
								6744,
								6765
							],
							[
								6958,
								6972
							],
							[
								7525,
								7529
							],
							[
								7623,
								7643
							],
							[
								7749,
								7764
							],
							[
								7942,
								7954
							],
							[
								8009,
								8023
							],
							[
								8148,
								8166
							],
							[
								8293,
								8302
							],
							[
								8392,
								8408
							],
							[
								8778,
								8811
							],
							[
								9316,
								9360
							],
							[
								9468,
								9486
							],
							[
								9516,
								9522
							],
							[
								9607,
								9641
							],
							[
								9897,
								9908
							],
							[
								9966,
								9982
							],
							[
								10063,
								10083
							],
							[
								10478,
								10490
							],
							[
								10697,
								10717
							],
							[
								10812,
								10832
							],
							[
								10996,
								11020
							],
							[
								11146,
								11164
							],
							[
								11457,
								11497
							],
							[
								11515,
								11546
							],
							[
								11876,
								11882
							],
							[
								12047,
								12067
							],
							[
								12163,
								12203
							],
							[
								12363,
								12372
							],
							[
								12402,
								12410
							],
							[
								12588,
								12628
							],
							[
								12689,
								12696
							],
							[
								12715,
								12722
							],
							[
								12791,
								12831
							],
							[
								12896,
								12903
							],
							[
								12981,
								13021
							],
							[
								13086,
								13093
							],
							[
								13133,
								13139
							],
							[
								13206,
								13210
							],
							[
								13265,
								13269
							],
							[
								13341,
								13372
							],
							[
								13635,
								13673
							],
							[
								13757,
								13766
							],
							[
								14242,
								14250
							],
							[
								14286,
								14306
							],
							[
								14887,
								14896
							],
							[
								15206,
								15215
							],
							[
								15615,
								15620
							],
							[
								15796,
								15801
							],
							[
								15887,
								15911
							],
							[
								16164,
								16185
							],
							[
								16211,
								16230
							],
							[
								16260,
								16272
							],
							[
								16316,
								16321
							],
							[
								16395,
								16404
							],
							[
								16712,
								16772
							],
							[
								17382,
								17395
							],
							[
								17572,
								17580
							],
							[
								17698,
								17710
							],
							[
								17767,
								17783
							],
							[
								18209,
								18223
							],
							[
								18443,
								18477
							],
							[
								18776,
								18781
							],
							[
								18876,
								18917
							],
							[
								19211,
								19226
							],
							[
								19687,
								19697
							],
							[
								19734,
								19744
							],
							[
								19813,
								19822
							],
							[
								19880,
								19918
							],
							[
								20051,
								20069
							],
							[
								20099,
								20114
							],
							[
								20141,
								20160
							],
							[
								20195,
								20214
							],
							[
								20249,
								20266
							],
							[
								20299,
								20319
							],
							[
								20411,
								20438
							],
							[
								20537,
								20573
							],
							[
								20731,
								20777
							],
							[
								20876,
								20907
							],
							[
								21464,
								21474
							],
							[
								21608,
								21660
							],
							[
								21679,
								21734
							],
							[
								22053,
								22124
							],
							[
								22186,
								22193
							],
							[
								22284,
								22291
							],
							[
								22378,
								22460
							],
							[
								23002,
								23032
							],
							[
								23400,
								23435
							],
							[
								23448,
								23488
							],
							[
								23667,
								23723
							],
							[
								23952,
								23979
							],
							[
								23990,
								24005
							],
							[
								24018,
								24048
							],
							[
								24305,
								24401
							],
							[
								24427,
								24445
							],
							[
								24693,
								24711
							],
							[
								24814,
								24827
							],
							[
								25411,
								25444
							],
							[
								25513,
								25543
							],
							[
								25582,
								25586
							],
							[
								25673,
								25700
							],
							[
								25739,
								25747
							],
							[
								25827,
								25853
							],
							[
								25899,
								25928
							],
							[
								25985,
								26030
							],
							[
								26130,
								26135
							],
							[
								26235,
								26269
							],
							[
								26386,
								26446
							],
							[
								26661,
								26683
							],
							[
								26849,
								26871
							],
							[
								26969,
								26989
							],
							[
								27021,
								27026
							],
							[
								27155,
								27182
							],
							[
								27414,
								27461
							],
							[
								28279,
								28314
							],
							[
								28336,
								28340
							],
							[
								28372,
								28376
							],
							[
								28398,
								28430
							],
							[
								28564,
								28606
							],
							[
								28659,
								28700
							]
						],
						"symlist":
						[
							".LogWrap = function LogWrap(log)",
							"log = (...args) =>",
							"log = (...args) =>",
							" (value, ...args) =>",
							"VfnAdapter = vfn =>",
							"get: k =>",
							"set: (k, v) =>",
							"VfnDecorator = vfn =>",
							".GetClasses = function* GetClasses(obj)",
							" function Mapper(map = ",
							"())",
							"self = function(key, value)",
							"Mapper",
							"Mapper.prototype = function()",
							"Mapper",
							" function DefaultConstructor(mapper, fn = (...args) => ",
							"(...args))",
							"self = function(...args)",
							"DefaultConstructor",
							"DefaultConstructor.prototype = function()",
							"DefaultConstructor",
							" function EventLogger(instance = {}, callback = (name, event, thisObj) => console.log('EventLogger', { name, event, thisObj }))",
							" function WrapEvent(handler, name)",
							" function(e)",
							"get(obj, prop)",
							"MessageReceiver",
							"onmessage(msg)",
							"MessageTransmitter",
							"sendMessage()",
							" function MessageTransceiver()",
							"MessageTransceiver",
							"MessageReceiver",
							"MessageTransmitter",
							"value: instance =>",
							"ctor =>",
							"none()",
							"encode: v =>",
							"decode: v =>",
							"json(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".js = function js(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".bjson = function bjson()",
							"encode: v =>",
							"decode: v =>",
							" function RPCApi(c)",
							"RPCApi",
							" o =>",
							" function RPCProxy(c)",
							" function RPCObject(id, connection)",
							"r =>",
							"RPCObject",
							" function RPCFactory(api)",
							"async function Factory(opts)",
							"RPCObject",
							"RPCFactory.prototype = function()",
							"RPCFactory",
							"Connection",
							"static equal(a, b)",
							"static get last()",
							"makeSeq()",
							"constructor(socket, instance, log, codec = 'none')",
							"log(...args)",
							"error(message)",
							"close(status, reason)",
							"onmessage(msg)",
							"r =>",
							"processMessage(data)",
							"onconnect(sock)",
							"onpong(data)",
							"onerror(error)",
							"onclose(code, why)",
							"cleanup()",
							"sendMessage(obj)",
							"sendCommand(command, params = {})",
							"static getCallbacks(instance, verbosity = 0)",
							" (msg, ...args) =>",
							" () =>",
							"handle = (sock, event, ...args) =>",
							"then: fn =>",
							"remove = sock =>",
							"onConnect(sock, req)",
							"onOpen(sock)",
							"onMessage(sock, msg)",
							"onError(sock, error)",
							"onClose(sock, code, why)",
							"onPong(sock, data)",
							"function RPCServerEndpoint(classes = {})",
							"new({ class: name, args = [] })",
							"list()",
							"({ id }, respond) =>",
							"({ obj, method, args = [] }, respond) =>",
							"result =>",
							"error =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"sym =>",
							"v =>",
							"v =>",
							"({ obj, property }, respond) =>",
							"({ obj, property, value }, respond) =>",
							"RPCServer",
							"makeId()",
							"processMessage(data)",
							"RPCServer",
							"RPCClient",
							" e =>",
							"get()",
							"processMessage(response)",
							"command(name, params)",
							"(accept, reject) =>",
							" response =>",
							" e =>",
							"RPCClient",
							" function RPCSocket(url, service = RPCServer, verbosity = 1)",
							" (...args) =>",
							"get fd()",
							"get socket()",
							"get connection()",
							"register(ctor)",
							"listen(new_ws, os = globalThis.os)",
							"() =>",
							"async connect(new_ws, os = globalThis.os)",
							"get connected()",
							"get list()",
							"get last()",
							"RPCSocket",
							"function MakeWebSocket(url, callbacks)",
							".onconnect = () =>",
							".onopen = () =>",
							".onerror = error =>",
							".onmessage = msg =>",
							".onpong = pong =>",
							".onclose = reason =>",
							" function isThenable(value)",
							" function hasHandler(obj, eventName)",
							" function callHandler(obj, eventName, ...args)",
							" function parseURL(url_or_port)",
							"toString()",
							" function GetProperties(obj, method = obj => Object.",
							"(obj), pred = (obj, depth) => obj !== Object.prototype)",
							" function GetKeys(obj, pred = (obj, depth) => obj !== Object.prototype)",
							" obj =>",
							" obj =>",
							" function getPropertyDescriptors(obj, merge = true, pred = (proto, depth) => true)",
							" function define(obj, ...args)",
							" function setHandlers(os, handlers)",
							".onFd = function(fd, readable, writable)",
							" function statusResponse(success, result_or_error, data)",
							" function objectCommand(fn)",
							" function(data)",
							"respond = (success, result) =>",
							" function MakeListCommand(pred = v => typeof v != 'function', defaults = { maxDepth: Infinity })",
							"(data, respond) =>",
							" (proto, depth) =>",
							"(acc, key) =>",
							" function getPrototypeName(proto)",
							"function DeserializeEntries(e)",
							"a =>",
							"function DeserializeKeys(e)",
							"([k]) =>",
							"function DeserializeMap(e)",
							"function DeserializeObject(e)",
							"function ForwardMethods(e, ret = {}, thisObj)",
							" o =>",
							"function ForwardObject(e, thisObj)",
							"function MakeCommandFunction(cmd, getConnection, thisObj, t)",
							"getConnection = obj =>",
							" function(params = {})",
							"(resolve, reject) =>",
							" r =>",
							"async function(params = {})",
							" function SerializeValue(value, source = false)",
							" function DeserializeSymbols(names)",
							"n =>",
							"n =>",
							" function DeserializeValue(desc)",
							"RPCConnect = (url, service = RPCClient) =>",
							"RPCListen = (url, service = RPCServer) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADxAAAAICBpbmRleE9mID0gKGhheXN0YWNrLCBuZWVkbGUpID0+CkV2ZW50RW1pdHRlcgogIGNvbnN0cnVjdG9yKCkKICBvbihldmVudCwgbGlzdGVuZXIpCiAgcmVtb3ZlTGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyKQogIHJlbW92ZUFsbExpc3RlbmVycyhldmVudCkKICByYXdMaXN0ZW5lcnMoZXZlbnQpCiAgZW1pdChldmVudCwgLi4uYXJncykKICBvbmNlKGV2ZW50LCBsaXN0ZW5lcikKICBjYWxsYmFjayA9ICguLi5hcmdzKSA9PgAAAAAAAAAACxAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					106,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAALEAAAICAuTG9nV3JhcCA9IGZ1bmN0aW9uIExvZ1dyYXAobG9nKQogIGxvZyA9ICguLi5hcmdzKSA9PgogIGxvZyA9ICguLi5hcmdzKSA9PgogICh2YWx1ZSwgLi4uYXJncykgPT4KVmZuQWRhcHRlciA9IHZmbiA9PgogIGdldDogayA9PgogIHNldDogKGssIHYpID0+ClZmbkRlY29yYXRvciA9IHZmbiA9PgogIC5HZXRDbGFzc2VzID0gZnVuY3Rpb24qR2V0Q2xhc3NlcyhvYmopCk1hcHBlcihtYXAgPSAKKCkpCiAgc2VsZiA9IGZ1bmN0aW9uKGtleSwgdmFsdWUpCk1hcHBlcgpNYXBwZXIucHJvdG90eXBlID0gZnVuY3Rpb24oKQpNYXBwZXIKRGVmYXVsdENvbnN0cnVjdG9yKG1hcHBlciwgZm4gPSAoLi4uYXJncykgPT4gCiguLi5hcmdzKSkKICBzZWxmID0gZnVuY3Rpb24oLi4uYXJncykKRGVmYXVsdENvbnN0cnVjdG9yCkRlZmF1bHRDb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBmdW5jdGlvbigpCkRlZmF1bHRDb25zdHJ1Y3RvcgpFdmVudExvZ2dlcihpbnN0YW5jZSA9IHt9LCBjYWxsYmFjayA9IChuYW1lLCBldmVudCwgdGhpc09iaikgPT4gY29uc29sZS5sb2coJ0V2ZW50TG9nZ2VyJywgeyBuYW1lLCBldmVudCwgdGhpc09iaiB9KSkKV3JhcEV2ZW50KGhhbmRsZXIsIG5hbWUpCiAgZnVuY3Rpb24oZSkKICBnZXQob2JqLCBwcm9wKQpNZXNzYWdlUmVjZWl2ZXIKICBvbm1lc3NhZ2UobXNnKQpNZXNzYWdlVHJhbnNtaXR0ZXIKICBzZW5kTWVzc2FnZSgpCk1lc3NhZ2VUcmFuc2NlaXZlcigpCk1lc3NhZ2VUcmFuc2NlaXZlcgpNZXNzYWdlUmVjZWl2ZXIKTWVzc2FnZVRyYW5zbWl0dGVyCiAgdmFsdWU6IGluc3RhbmNlID0+CiAgY3RvciA9PgogIG5vbmUoKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIGpzb24odmVyYm9zZSA9IGZhbHNlKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIC5qcyA9IGZ1bmN0aW9uIGpzKHZlcmJvc2UgPSBmYWxzZSkKICBlbmNvZGU6IHYgPT4KICBkZWNvZGU6IHYgPT4KICAuYmpzb24gPSBmdW5jdGlvbiBianNvbigpCiAgZW5jb2RlOiB2ID0+CiAgZGVjb2RlOiB2ID0+ClJQQ0FwaShjKQpSUENBcGkKICBvID0+ClJQQ1Byb3h5KGMpClJQQ09iamVjdChpZCwgY29ubmVjdGlvbikKICByID0+ClJQQ09iamVjdApSUENGYWN0b3J5KGFwaSkKRmFjdG9yeShvcHRzKQpSUENPYmplY3QKUlBDRmFjdG9yeS5wcm90b3R5cGUgPSBmdW5jdGlvbigpClJQQ0ZhY3RvcnkKQ29ubmVjdGlvbgogIHN0YXRpYyBlcXVhbChhLCBiKQogIHN0YXRpYyBnZXQgbGFzdCgpCiAgbWFrZVNlcSgpCiAgY29uc3RydWN0b3Ioc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYyA9ICdub25lJykKICBsb2coLi4uYXJncykKICBlcnJvcihtZXNzYWdlKQogIGNsb3NlKHN0YXR1cywgcmVhc29uKQogIG9ubWVzc2FnZShtc2cpCiAgciA9PgogIHByb2Nlc3NNZXNzYWdlKGRhdGEpCiAgb25jb25uZWN0KHNvY2spCiAgb25wb25nKGRhdGEpCiAgb25lcnJvcihlcnJvcikKICBvbmNsb3NlKGNvZGUsIHdoeSkKICBjbGVhbnVwKCkKICBzZW5kTWVzc2FnZShvYmopCiAgc2VuZENvbW1hbmQoY29tbWFuZCwgcGFyYW1zID0ge30pCiAgc3RhdGljIGdldENhbGxiYWNrcyhpbnN0YW5jZSwgdmVyYm9zaXR5ID0gMCkKICAobXNnLCAuLi5hcmdzKSA9PgogICgpID0+CiAgaGFuZGxlID0gKHNvY2ssIGV2ZW50LCAuLi5hcmdzKSA9PgogIHRoZW46IGZuID0+CiAgcmVtb3ZlID0gc29jayA9PgogIG9uQ29ubmVjdChzb2NrLCByZXEpCiAgb25PcGVuKHNvY2spCiAgb25NZXNzYWdlKHNvY2ssIG1zZykKICBvbkVycm9yKHNvY2ssIGVycm9yKQogIG9uQ2xvc2Uoc29jaywgY29kZSwgd2h5KQogIG9uUG9uZyhzb2NrLCBkYXRhKQpSUENTZXJ2ZXJFbmRwb2ludChjbGFzc2VzID0ge30pCiAgbmV3KHsgY2xhc3M6IG5hbWUsIGFyZ3MgPSBbXSB9KQogIGxpc3QoKQooeyBpZCB9LCByZXNwb25kKSA9PgooeyBvYmosIG1ldGhvZCwgYXJncyA9IFtdIH0sIHJlc3BvbmQpID0+CiAgcmVzdWx0ID0+CiAgZXJyb3IgPT4KKHsgb2JqLCBlbnVtZXJhYmxlID0gdHJ1ZSB9LCByZXNwb25kKSA9PgogIG9iaiA9PgogIG9iaiA9PgooeyBvYmosIGVudW1lcmFibGUgPSB0cnVlIH0sIHJlc3BvbmQpID0+CiAgb2JqID0+Cih7IG9iaiwgZW51bWVyYWJsZSA9IHRydWUgfSwgcmVzcG9uZCkgPT4KICBvYmogPT4KICBzeW0gPT4KICB2ID0+CiAgdiA9PgooeyBvYmosIHByb3BlcnR5IH0sIHJlc3BvbmQpID0+Cih7IG9iaiwgcHJvcGVydHksIHZhbHVlIH0sIHJlc3BvbmQpID0+ClJQQ1NlcnZlcgogIG1ha2VJZCgpCiAgcHJvY2Vzc01lc3NhZ2UoZGF0YSkKUlBDU2VydmVyClJQQ0NsaWVudAogIGUgPT4KICBnZXQoKQogIHByb2Nlc3NNZXNzYWdlKHJlc3BvbnNlKQogIGNvbW1hbmQobmFtZSwgcGFyYW1zKQooYWNjZXB0LCByZWplY3QpID0+CiAgcmVzcG9uc2UgPT4KICBlID0+ClJQQ0NsaWVudApSUENTb2NrZXQodXJsLCBzZXJ2aWNlID0gUlBDU2VydmVyLCB2ZXJib3NpdHkgPSAxKQogICguLi5hcmdzKSA9PgogIGdldCBmZCgpCiAgZ2V0IHNvY2tldCgpCiAgZ2V0IGNvbm5lY3Rpb24oKQogIHJlZ2lzdGVyKGN0b3IpCiAgbGlzdGVuKG5ld193cywgb3MgPSBnbG9iYWxUaGlzLm9zKQooKSA9PgogIGNvbm5lY3QobmV3X3dzLCBvcyA9IGdsb2JhbFRoaXMub3MpCiAgZ2V0IGNvbm5lY3RlZCgpCiAgZ2V0IGxpc3QoKQogIGdldCBsYXN0KCkKUlBDU29ja2V0Ck1ha2VXZWJTb2NrZXQodXJsLCBjYWxsYmFja3MpCiAgLm9uY29ubmVjdCA9ICgpID0+CiAgLm9ub3BlbiA9ICgpID0+CiAgLm9uZXJyb3IgPSBlcnJvciA9PgogIC5vbm1lc3NhZ2UgPSBtc2cgPT4KICAub25wb25nID0gcG9uZyA9PgogIC5vbmNsb3NlID0gcmVhc29uID0+CiAgaXNUaGVuYWJsZSh2YWx1ZSkKICBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKQogIGNhbGxIYW5kbGVyKG9iaiwgZXZlbnROYW1lLCAuLi5hcmdzKQogIHBhcnNlVVJMKHVybF9vcl9wb3J0KQogIHRvU3RyaW5nKCkKR2V0UHJvcGVydGllcyhvYmosIG1ldGhvZCA9IG9iaiA9PiBPYmplY3QuCihvYmopLCBwcmVkID0gKG9iaiwgZGVwdGgpID0+IG9iaiAhPT0gT2JqZWN0LnByb3RvdHlwZSkKR2V0S2V5cyhvYmosIHByZWQgPSAob2JqLCBkZXB0aCkgPT4gb2JqICE9PSBPYmplY3QucHJvdG90eXBlKQogIG9iaiA9PgogIG9iaiA9PgogIGdldFByb3BlcnR5RGVzY3JpcHRvcnMob2JqLCBtZXJnZSA9IHRydWUsIHByZWQgPSAocHJvdG8sIGRlcHRoKSA9PiB0cnVlKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgc2V0SGFuZGxlcnMob3MsIGhhbmRsZXJzKQogIC5vbkZkID0gZnVuY3Rpb24oZmQsIHJlYWRhYmxlLCB3cml0YWJsZSkKICBzdGF0dXNSZXNwb25zZShzdWNjZXNzLCByZXN1bHRfb3JfZXJyb3IsIGRhdGEpCiAgb2JqZWN0Q29tbWFuZChmbikKICBmdW5jdGlvbihkYXRhKQogIHJlc3BvbmQgPSAoc3VjY2VzcywgcmVzdWx0KSA9PgpNYWtlTGlzdENvbW1hbmQocHJlZCA9IHYgPT4gdHlwZW9mIHYgIT0gJ2Z1bmN0aW9uJywgZGVmYXVsdHMgPSB7IG1heERlcHRoOiBJbmZpbml0eSB9KQooZGF0YSwgcmVzcG9uZCkgPT4KICAocHJvdG8sIGRlcHRoKSA9PgooYWNjLCBrZXkpID0+CiAgZ2V0UHJvdG90eXBlTmFtZShwcm90bykKRGVzZXJpYWxpemVFbnRyaWVzKGUpCiAgYSA9PgpEZXNlcmlhbGl6ZUtleXMoZSkKKFtrXSkgPT4KRGVzZXJpYWxpemVNYXAoZSkKRGVzZXJpYWxpemVPYmplY3QoZSkKRm9yd2FyZE1ldGhvZHMoZSwgcmV0ID0ge30sIHRoaXNPYmopCiAgbyA9PgpGb3J3YXJkT2JqZWN0KGUsIHRoaXNPYmopCk1ha2VDb21tYW5kRnVuY3Rpb24oY21kLCBnZXRDb25uZWN0aW9uLCB0aGlzT2JqLCB0KQogIGdldENvbm5lY3Rpb24gPSBvYmogPT4KICBmdW5jdGlvbihwYXJhbXMgPSB7fSkKKHJlc29sdmUsIHJlamVjdCkgPT4KICByID0+CiAgZnVuY3Rpb24ocGFyYW1zID0ge30pClNlcmlhbGl6ZVZhbHVlKHZhbHVlLCBzb3VyY2UgPSBmYWxzZSkKRGVzZXJpYWxpemVTeW1ib2xzKG5hbWVzKQogIG4gPT4KICBuID0+CkRlc2VyaWFsaXplVmFsdWUoZGVzYykKUlBDQ29ubmVjdCA9ICh1cmwsIHNlcnZpY2UgPSBSUENDbGllbnQpID0+ClJQQ0xpc3RlbiA9ICh1cmwsIHNlcnZpY2UgPSBSUENTZXJ2ZXIpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					107,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/rpc.js",
						"symkeys":
						[
							[
								220,
								252
							],
							[
								309,
								327
							],
							[
								379,
								397
							],
							[
								432,
								452
							],
							[
								501,
								520
							],
							[
								526,
								535
							],
							[
								546,
								560
							],
							[
								589,
								610
							],
							[
								985,
								1024
							],
							[
								1266,
								1289
							],
							[
								1300,
								1303
							],
							[
								1320,
								1347
							],
							[
								1490,
								1496
							],
							[
								1511,
								1540
							],
							[
								1545,
								1551
							],
							[
								1591,
								1646
							],
							[
								1656,
								1666
							],
							[
								1683,
								1707
							],
							[
								1983,
								2001
							],
							[
								2017,
								2058
							],
							[
								2063,
								2081
							],
							[
								2133,
								2260
							],
							[
								2263,
								2298
							],
							[
								2311,
								2323
							],
							[
								2411,
								2425
							],
							[
								2608,
								2623
							],
							[
								2751,
								2765
							],
							[
								2889,
								2907
							],
							[
								3022,
								3035
							],
							[
								3213,
								3243
							],
							[
								3262,
								3280
							],
							[
								3292,
								3307
							],
							[
								3319,
								3337
							],
							[
								3417,
								3435
							],
							[
								3480,
								3487
							],
							[
								3548,
								3554
							],
							[
								3596,
								3608
							],
							[
								3618,
								3630
							],
							[
								3647,
								3668
							],
							[
								3710,
								3722
							],
							[
								3779,
								3791
							],
							[
								3854,
								3888
							],
							[
								3928,
								3940
							],
							[
								4009,
								4021
							],
							[
								4083,
								4108
							],
							[
								4151,
								4163
							],
							[
								4186,
								4198
							],
							[
								4234,
								4253
							],
							[
								4462,
								4468
							],
							[
								4510,
								4515
							],
							[
								4538,
								4559
							],
							[
								4677,
								4712
							],
							[
								4828,
								4832
							],
							[
								4859,
								4868
							],
							[
								4921,
								4946
							],
							[
								4951,
								4979
							],
							[
								5209,
								5218
							],
							[
								5320,
								5353
							],
							[
								5358,
								5368
							],
							[
								5462,
								5472
							],
							[
								5558,
								5576
							],
							[
								5687,
								5704
							],
							[
								5741,
								5750
							],
							[
								5787,
								5837
							],
							[
								5954,
								5966
							],
							[
								6427,
								6441
							],
							[
								6744,
								6765
							],
							[
								6958,
								6972
							],
							[
								7525,
								7529
							],
							[
								7623,
								7643
							],
							[
								7749,
								7764
							],
							[
								7942,
								7954
							],
							[
								8009,
								8023
							],
							[
								8148,
								8166
							],
							[
								8293,
								8302
							],
							[
								8392,
								8408
							],
							[
								8778,
								8811
							],
							[
								9316,
								9360
							],
							[
								9468,
								9486
							],
							[
								9516,
								9522
							],
							[
								9607,
								9641
							],
							[
								9897,
								9908
							],
							[
								9966,
								9982
							],
							[
								10063,
								10083
							],
							[
								10478,
								10490
							],
							[
								10697,
								10717
							],
							[
								10812,
								10832
							],
							[
								10996,
								11020
							],
							[
								11146,
								11164
							],
							[
								11457,
								11497
							],
							[
								11515,
								11546
							],
							[
								11876,
								11882
							],
							[
								12047,
								12067
							],
							[
								12163,
								12203
							],
							[
								12363,
								12372
							],
							[
								12402,
								12410
							],
							[
								12588,
								12628
							],
							[
								12689,
								12696
							],
							[
								12715,
								12722
							],
							[
								12791,
								12831
							],
							[
								12896,
								12903
							],
							[
								12981,
								13021
							],
							[
								13086,
								13093
							],
							[
								13133,
								13139
							],
							[
								13206,
								13210
							],
							[
								13265,
								13269
							],
							[
								13341,
								13372
							],
							[
								13635,
								13673
							],
							[
								13757,
								13766
							],
							[
								14242,
								14250
							],
							[
								14286,
								14306
							],
							[
								14887,
								14896
							],
							[
								15206,
								15215
							],
							[
								15615,
								15620
							],
							[
								15796,
								15801
							],
							[
								15887,
								15911
							],
							[
								16164,
								16185
							],
							[
								16211,
								16230
							],
							[
								16260,
								16272
							],
							[
								16316,
								16321
							],
							[
								16395,
								16404
							],
							[
								16712,
								16772
							],
							[
								17382,
								17395
							],
							[
								17572,
								17580
							],
							[
								17698,
								17710
							],
							[
								17767,
								17783
							],
							[
								18209,
								18223
							],
							[
								18443,
								18477
							],
							[
								18776,
								18781
							],
							[
								18876,
								18917
							],
							[
								19211,
								19226
							],
							[
								19687,
								19697
							],
							[
								19734,
								19744
							],
							[
								19813,
								19822
							],
							[
								19880,
								19918
							],
							[
								20051,
								20069
							],
							[
								20099,
								20114
							],
							[
								20141,
								20160
							],
							[
								20195,
								20214
							],
							[
								20249,
								20266
							],
							[
								20299,
								20319
							],
							[
								20411,
								20438
							],
							[
								20537,
								20573
							],
							[
								20731,
								20777
							],
							[
								20876,
								20907
							],
							[
								21464,
								21474
							],
							[
								21608,
								21660
							],
							[
								21679,
								21734
							],
							[
								22053,
								22124
							],
							[
								22186,
								22193
							],
							[
								22284,
								22291
							],
							[
								22378,
								22460
							],
							[
								23002,
								23032
							],
							[
								23400,
								23435
							],
							[
								23448,
								23488
							],
							[
								23667,
								23723
							],
							[
								23952,
								23979
							],
							[
								23990,
								24005
							],
							[
								24018,
								24048
							],
							[
								24305,
								24401
							],
							[
								24427,
								24445
							],
							[
								24693,
								24711
							],
							[
								24814,
								24827
							],
							[
								25411,
								25444
							],
							[
								25513,
								25543
							],
							[
								25582,
								25586
							],
							[
								25673,
								25700
							],
							[
								25739,
								25747
							],
							[
								25827,
								25853
							],
							[
								25899,
								25928
							],
							[
								25985,
								26030
							],
							[
								26130,
								26135
							],
							[
								26235,
								26269
							],
							[
								26386,
								26446
							],
							[
								26661,
								26683
							],
							[
								26849,
								26871
							],
							[
								26969,
								26989
							],
							[
								27021,
								27026
							],
							[
								27155,
								27182
							],
							[
								27414,
								27461
							],
							[
								28279,
								28314
							],
							[
								28336,
								28340
							],
							[
								28372,
								28376
							],
							[
								28398,
								28430
							],
							[
								28564,
								28606
							],
							[
								28659,
								28700
							]
						],
						"symlist":
						[
							".LogWrap = function LogWrap(log)",
							"log = (...args) =>",
							"log = (...args) =>",
							" (value, ...args) =>",
							"VfnAdapter = vfn =>",
							"get: k =>",
							"set: (k, v) =>",
							"VfnDecorator = vfn =>",
							".GetClasses = function* GetClasses(obj)",
							" function Mapper(map = ",
							"())",
							"self = function(key, value)",
							"Mapper",
							"Mapper.prototype = function()",
							"Mapper",
							" function DefaultConstructor(mapper, fn = (...args) => ",
							"(...args))",
							"self = function(...args)",
							"DefaultConstructor",
							"DefaultConstructor.prototype = function()",
							"DefaultConstructor",
							" function EventLogger(instance = {}, callback = (name, event, thisObj) => console.log('EventLogger', { name, event, thisObj }))",
							" function WrapEvent(handler, name)",
							" function(e)",
							"get(obj, prop)",
							"MessageReceiver",
							"onmessage(msg)",
							"MessageTransmitter",
							"sendMessage()",
							" function MessageTransceiver()",
							"MessageTransceiver",
							"MessageReceiver",
							"MessageTransmitter",
							"value: instance =>",
							"ctor =>",
							"none()",
							"encode: v =>",
							"decode: v =>",
							"json(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".js = function js(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".bjson = function bjson()",
							"encode: v =>",
							"decode: v =>",
							" function RPCApi(c)",
							"RPCApi",
							" o =>",
							" function RPCProxy(c)",
							" function RPCObject(id, connection)",
							"r =>",
							"RPCObject",
							" function RPCFactory(api)",
							"async function Factory(opts)",
							"RPCObject",
							"RPCFactory.prototype = function()",
							"RPCFactory",
							"Connection",
							"static equal(a, b)",
							"static get last()",
							"makeSeq()",
							"constructor(socket, instance, log, codec = 'none')",
							"log(...args)",
							"error(message)",
							"close(status, reason)",
							"onmessage(msg)",
							"r =>",
							"processMessage(data)",
							"onconnect(sock)",
							"onpong(data)",
							"onerror(error)",
							"onclose(code, why)",
							"cleanup()",
							"sendMessage(obj)",
							"sendCommand(command, params = {})",
							"static getCallbacks(instance, verbosity = 0)",
							" (msg, ...args) =>",
							" () =>",
							"handle = (sock, event, ...args) =>",
							"then: fn =>",
							"remove = sock =>",
							"onConnect(sock, req)",
							"onOpen(sock)",
							"onMessage(sock, msg)",
							"onError(sock, error)",
							"onClose(sock, code, why)",
							"onPong(sock, data)",
							"function RPCServerEndpoint(classes = {})",
							"new({ class: name, args = [] })",
							"list()",
							"({ id }, respond) =>",
							"({ obj, method, args = [] }, respond) =>",
							"result =>",
							"error =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"sym =>",
							"v =>",
							"v =>",
							"({ obj, property }, respond) =>",
							"({ obj, property, value }, respond) =>",
							"RPCServer",
							"makeId()",
							"processMessage(data)",
							"RPCServer",
							"RPCClient",
							" e =>",
							"get()",
							"processMessage(response)",
							"command(name, params)",
							"(accept, reject) =>",
							" response =>",
							" e =>",
							"RPCClient",
							" function RPCSocket(url, service = RPCServer, verbosity = 1)",
							" (...args) =>",
							"get fd()",
							"get socket()",
							"get connection()",
							"register(ctor)",
							"listen(new_ws, os = globalThis.os)",
							"() =>",
							"async connect(new_ws, os = globalThis.os)",
							"get connected()",
							"get list()",
							"get last()",
							"RPCSocket",
							"function MakeWebSocket(url, callbacks)",
							".onconnect = () =>",
							".onopen = () =>",
							".onerror = error =>",
							".onmessage = msg =>",
							".onpong = pong =>",
							".onclose = reason =>",
							" function isThenable(value)",
							" function hasHandler(obj, eventName)",
							" function callHandler(obj, eventName, ...args)",
							" function parseURL(url_or_port)",
							"toString()",
							" function GetProperties(obj, method = obj => Object.",
							"(obj), pred = (obj, depth) => obj !== Object.prototype)",
							" function GetKeys(obj, pred = (obj, depth) => obj !== Object.prototype)",
							" obj =>",
							" obj =>",
							" function getPropertyDescriptors(obj, merge = true, pred = (proto, depth) => true)",
							" function define(obj, ...args)",
							" function setHandlers(os, handlers)",
							".onFd = function(fd, readable, writable)",
							" function statusResponse(success, result_or_error, data)",
							" function objectCommand(fn)",
							" function(data)",
							"respond = (success, result) =>",
							" function MakeListCommand(pred = v => typeof v != 'function', defaults = { maxDepth: Infinity })",
							"(data, respond) =>",
							" (proto, depth) =>",
							"(acc, key) =>",
							" function getPrototypeName(proto)",
							"function DeserializeEntries(e)",
							"a =>",
							"function DeserializeKeys(e)",
							"([k]) =>",
							"function DeserializeMap(e)",
							"function DeserializeObject(e)",
							"function ForwardMethods(e, ret = {}, thisObj)",
							" o =>",
							"function ForwardObject(e, thisObj)",
							"function MakeCommandFunction(cmd, getConnection, thisObj, t)",
							"getConnection = obj =>",
							" function(params = {})",
							"(resolve, reject) =>",
							" r =>",
							"async function(params = {})",
							" function SerializeValue(value, source = false)",
							" function DeserializeSymbols(names)",
							"n =>",
							"n =>",
							" function DeserializeValue(desc)",
							"RPCConnect = (url, service = RPCClient) =>",
							"RPCListen = (url, service = RPCServer) =>"
						]
					},
					"AQAAAAAAAAAAAAAACxAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					108,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/rpc.js",
						"symkeys":
						[
							[
								232,
								264
							],
							[
								321,
								339
							],
							[
								391,
								409
							],
							[
								444,
								464
							],
							[
								513,
								532
							],
							[
								538,
								547
							],
							[
								558,
								572
							],
							[
								601,
								622
							],
							[
								997,
								1036
							],
							[
								1278,
								1301
							],
							[
								1312,
								1315
							],
							[
								1332,
								1359
							],
							[
								1502,
								1508
							],
							[
								1523,
								1552
							],
							[
								1557,
								1563
							],
							[
								1603,
								1658
							],
							[
								1668,
								1678
							],
							[
								1695,
								1719
							],
							[
								1995,
								2013
							],
							[
								2029,
								2070
							],
							[
								2075,
								2093
							],
							[
								2145,
								2272
							],
							[
								2275,
								2310
							],
							[
								2323,
								2335
							],
							[
								2423,
								2437
							],
							[
								2620,
								2635
							],
							[
								2763,
								2777
							],
							[
								2901,
								2919
							],
							[
								3034,
								3047
							],
							[
								3225,
								3255
							],
							[
								3274,
								3292
							],
							[
								3304,
								3319
							],
							[
								3331,
								3349
							],
							[
								3429,
								3447
							],
							[
								3492,
								3499
							],
							[
								3560,
								3566
							],
							[
								3608,
								3620
							],
							[
								3630,
								3642
							],
							[
								3659,
								3680
							],
							[
								3722,
								3734
							],
							[
								3791,
								3803
							],
							[
								3866,
								3900
							],
							[
								3940,
								3952
							],
							[
								4021,
								4033
							],
							[
								4095,
								4120
							],
							[
								4163,
								4175
							],
							[
								4198,
								4210
							],
							[
								4246,
								4265
							],
							[
								4474,
								4480
							],
							[
								4522,
								4527
							],
							[
								4550,
								4571
							],
							[
								4689,
								4724
							],
							[
								4840,
								4844
							],
							[
								4871,
								4880
							],
							[
								4933,
								4958
							],
							[
								4963,
								4991
							],
							[
								5221,
								5230
							],
							[
								5332,
								5365
							],
							[
								5370,
								5380
							],
							[
								5474,
								5484
							],
							[
								5570,
								5588
							],
							[
								5699,
								5716
							],
							[
								5753,
								5762
							],
							[
								5799,
								5849
							],
							[
								5966,
								5978
							],
							[
								6439,
								6453
							],
							[
								6756,
								6777
							],
							[
								6970,
								6984
							],
							[
								7537,
								7541
							],
							[
								7635,
								7655
							],
							[
								7761,
								7776
							],
							[
								7954,
								7966
							],
							[
								8021,
								8035
							],
							[
								8160,
								8178
							],
							[
								8305,
								8314
							],
							[
								8404,
								8420
							],
							[
								8790,
								8823
							],
							[
								9328,
								9372
							],
							[
								9480,
								9498
							],
							[
								9528,
								9534
							],
							[
								9619,
								9653
							],
							[
								9909,
								9920
							],
							[
								9978,
								9994
							],
							[
								10075,
								10095
							],
							[
								10490,
								10502
							],
							[
								10709,
								10729
							],
							[
								10824,
								10844
							],
							[
								11008,
								11032
							],
							[
								11158,
								11176
							],
							[
								11469,
								11509
							],
							[
								11527,
								11558
							],
							[
								11888,
								11894
							],
							[
								12059,
								12079
							],
							[
								12175,
								12215
							],
							[
								12375,
								12384
							],
							[
								12414,
								12422
							],
							[
								12600,
								12640
							],
							[
								12701,
								12708
							],
							[
								12727,
								12734
							],
							[
								12803,
								12843
							],
							[
								12908,
								12915
							],
							[
								12993,
								13033
							],
							[
								13098,
								13105
							],
							[
								13145,
								13151
							],
							[
								13218,
								13222
							],
							[
								13277,
								13281
							],
							[
								13353,
								13384
							],
							[
								13647,
								13685
							],
							[
								13769,
								13778
							],
							[
								14254,
								14262
							],
							[
								14298,
								14318
							],
							[
								14899,
								14908
							],
							[
								15218,
								15227
							],
							[
								15627,
								15632
							],
							[
								15808,
								15813
							],
							[
								15899,
								15923
							],
							[
								16176,
								16197
							],
							[
								16223,
								16242
							],
							[
								16272,
								16284
							],
							[
								16328,
								16333
							],
							[
								16407,
								16416
							],
							[
								16724,
								16784
							],
							[
								17394,
								17407
							],
							[
								17584,
								17592
							],
							[
								17710,
								17722
							],
							[
								17779,
								17795
							],
							[
								18221,
								18235
							],
							[
								18455,
								18489
							],
							[
								18788,
								18793
							],
							[
								18888,
								18929
							],
							[
								19223,
								19238
							],
							[
								19699,
								19709
							],
							[
								19746,
								19756
							],
							[
								19825,
								19834
							],
							[
								19892,
								19930
							],
							[
								20063,
								20081
							],
							[
								20111,
								20126
							],
							[
								20153,
								20172
							],
							[
								20207,
								20226
							],
							[
								20261,
								20278
							],
							[
								20311,
								20331
							],
							[
								20423,
								20450
							],
							[
								20549,
								20585
							],
							[
								20743,
								20789
							],
							[
								20888,
								20919
							],
							[
								21476,
								21486
							],
							[
								21620,
								21672
							],
							[
								21691,
								21746
							],
							[
								22065,
								22136
							],
							[
								22198,
								22205
							],
							[
								22296,
								22303
							],
							[
								22390,
								22472
							],
							[
								23014,
								23044
							],
							[
								23412,
								23447
							],
							[
								23460,
								23500
							],
							[
								23679,
								23735
							],
							[
								23964,
								23991
							],
							[
								24002,
								24017
							],
							[
								24030,
								24060
							],
							[
								24317,
								24413
							],
							[
								24439,
								24457
							],
							[
								24705,
								24723
							],
							[
								24826,
								24839
							],
							[
								25423,
								25456
							],
							[
								25525,
								25555
							],
							[
								25594,
								25598
							],
							[
								25685,
								25712
							],
							[
								25751,
								25759
							],
							[
								25839,
								25865
							],
							[
								25911,
								25940
							],
							[
								25997,
								26042
							],
							[
								26142,
								26147
							],
							[
								26247,
								26281
							],
							[
								26398,
								26458
							],
							[
								26673,
								26695
							],
							[
								26861,
								26883
							],
							[
								26981,
								27001
							],
							[
								27033,
								27038
							],
							[
								27167,
								27194
							],
							[
								27426,
								27473
							],
							[
								28291,
								28326
							],
							[
								28348,
								28352
							],
							[
								28384,
								28388
							],
							[
								28410,
								28442
							],
							[
								28576,
								28618
							],
							[
								28671,
								28712
							]
						],
						"symlist":
						[
							".LogWrap = function LogWrap(log)",
							"log = (...args) =>",
							"log = (...args) =>",
							" (value, ...args) =>",
							"VfnAdapter = vfn =>",
							"get: k =>",
							"set: (k, v) =>",
							"VfnDecorator = vfn =>",
							".GetClasses = function* GetClasses(obj)",
							" function Mapper(map = ",
							"())",
							"self = function(key, value)",
							"Mapper",
							"Mapper.prototype = function()",
							"Mapper",
							" function DefaultConstructor(mapper, fn = (...args) => ",
							"(...args))",
							"self = function(...args)",
							"DefaultConstructor",
							"DefaultConstructor.prototype = function()",
							"DefaultConstructor",
							" function EventLogger(instance = {}, callback = (name, event, thisObj) => console.log('EventLogger', { name, event, thisObj }))",
							" function WrapEvent(handler, name)",
							" function(e)",
							"get(obj, prop)",
							"MessageReceiver",
							"onmessage(msg)",
							"MessageTransmitter",
							"sendMessage()",
							" function MessageTransceiver()",
							"MessageTransceiver",
							"MessageReceiver",
							"MessageTransmitter",
							"value: instance =>",
							"ctor =>",
							"none()",
							"encode: v =>",
							"decode: v =>",
							"json(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".js = function js(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".bjson = function bjson()",
							"encode: v =>",
							"decode: v =>",
							" function RPCApi(c)",
							"RPCApi",
							" o =>",
							" function RPCProxy(c)",
							" function RPCObject(id, connection)",
							"r =>",
							"RPCObject",
							" function RPCFactory(api)",
							"async function Factory(opts)",
							"RPCObject",
							"RPCFactory.prototype = function()",
							"RPCFactory",
							"Connection",
							"static equal(a, b)",
							"static get last()",
							"makeSeq()",
							"constructor(socket, instance, log, codec = 'none')",
							"log(...args)",
							"error(message)",
							"close(status, reason)",
							"onmessage(msg)",
							"r =>",
							"processMessage(data)",
							"onconnect(sock)",
							"onpong(data)",
							"onerror(error)",
							"onclose(code, why)",
							"cleanup()",
							"sendMessage(obj)",
							"sendCommand(command, params = {})",
							"static getCallbacks(instance, verbosity = 0)",
							" (msg, ...args) =>",
							" () =>",
							"handle = (sock, event, ...args) =>",
							"then: fn =>",
							"remove = sock =>",
							"onConnect(sock, req)",
							"onOpen(sock)",
							"onMessage(sock, msg)",
							"onError(sock, error)",
							"onClose(sock, code, why)",
							"onPong(sock, data)",
							"function RPCServerEndpoint(classes = {})",
							"new({ class: name, args = [] })",
							"list()",
							"({ id }, respond) =>",
							"({ obj, method, args = [] }, respond) =>",
							"result =>",
							"error =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"sym =>",
							"v =>",
							"v =>",
							"({ obj, property }, respond) =>",
							"({ obj, property, value }, respond) =>",
							"RPCServer",
							"makeId()",
							"processMessage(data)",
							"RPCServer",
							"RPCClient",
							" e =>",
							"get()",
							"processMessage(response)",
							"command(name, params)",
							"(accept, reject) =>",
							" response =>",
							" e =>",
							"RPCClient",
							" function RPCSocket(url, service = RPCServer, verbosity = 1)",
							" (...args) =>",
							"get fd()",
							"get socket()",
							"get connection()",
							"register(ctor)",
							"listen(new_ws, os = globalThis.os)",
							"() =>",
							"async connect(new_ws, os = globalThis.os)",
							"get connected()",
							"get list()",
							"get last()",
							"RPCSocket",
							"function MakeWebSocket(url, callbacks)",
							".onconnect = () =>",
							".onopen = () =>",
							".onerror = error =>",
							".onmessage = msg =>",
							".onpong = pong =>",
							".onclose = reason =>",
							" function isThenable(value)",
							" function hasHandler(obj, eventName)",
							" function callHandler(obj, eventName, ...args)",
							" function parseURL(url_or_port)",
							"toString()",
							" function GetProperties(obj, method = obj => Object.",
							"(obj), pred = (obj, depth) => obj !== Object.prototype)",
							" function GetKeys(obj, pred = (obj, depth) => obj !== Object.prototype)",
							" obj =>",
							" obj =>",
							" function getPropertyDescriptors(obj, merge = true, pred = (proto, depth) => true)",
							" function define(obj, ...args)",
							" function setHandlers(os, handlers)",
							".onFd = function(fd, readable, writable)",
							" function statusResponse(success, result_or_error, data)",
							" function objectCommand(fn)",
							" function(data)",
							"respond = (success, result) =>",
							" function MakeListCommand(pred = v => typeof v != 'function', defaults = { maxDepth: Infinity })",
							"(data, respond) =>",
							" (proto, depth) =>",
							"(acc, key) =>",
							" function getPrototypeName(proto)",
							"function DeserializeEntries(e)",
							"a =>",
							"function DeserializeKeys(e)",
							"([k]) =>",
							"function DeserializeMap(e)",
							"function DeserializeObject(e)",
							"function ForwardMethods(e, ret = {}, thisObj)",
							" o =>",
							"function ForwardObject(e, thisObj)",
							"function MakeCommandFunction(cmd, getConnection, thisObj, t)",
							"getConnection = obj =>",
							" function(params = {})",
							"(resolve, reject) =>",
							" r =>",
							"async function(params = {})",
							" function SerializeValue(value, source = false)",
							" function DeserializeSymbols(names)",
							"n =>",
							"n =>",
							" function DeserializeValue(desc)",
							"RPCConnect = (url, service = RPCClient) =>",
							"RPCListen = (url, service = RPCServer) =>"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					109,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/rpc.js",
						"symkeys":
						[
							[
								234,
								266
							],
							[
								323,
								341
							],
							[
								393,
								411
							],
							[
								446,
								466
							],
							[
								515,
								534
							],
							[
								540,
								549
							],
							[
								560,
								574
							],
							[
								603,
								624
							],
							[
								999,
								1038
							],
							[
								1280,
								1303
							],
							[
								1314,
								1317
							],
							[
								1334,
								1361
							],
							[
								1504,
								1510
							],
							[
								1525,
								1554
							],
							[
								1559,
								1565
							],
							[
								1605,
								1660
							],
							[
								1670,
								1680
							],
							[
								1697,
								1721
							],
							[
								1997,
								2015
							],
							[
								2031,
								2072
							],
							[
								2077,
								2095
							],
							[
								2147,
								2274
							],
							[
								2277,
								2312
							],
							[
								2325,
								2337
							],
							[
								2425,
								2439
							],
							[
								2622,
								2637
							],
							[
								2765,
								2779
							],
							[
								2903,
								2921
							],
							[
								3036,
								3049
							],
							[
								3227,
								3257
							],
							[
								3276,
								3294
							],
							[
								3306,
								3321
							],
							[
								3333,
								3351
							],
							[
								3431,
								3449
							],
							[
								3494,
								3501
							],
							[
								3562,
								3568
							],
							[
								3610,
								3622
							],
							[
								3632,
								3644
							],
							[
								3661,
								3682
							],
							[
								3724,
								3736
							],
							[
								3793,
								3805
							],
							[
								3868,
								3902
							],
							[
								3942,
								3954
							],
							[
								4023,
								4035
							],
							[
								4097,
								4122
							],
							[
								4165,
								4177
							],
							[
								4200,
								4212
							],
							[
								4248,
								4267
							],
							[
								4476,
								4482
							],
							[
								4524,
								4529
							],
							[
								4552,
								4573
							],
							[
								4691,
								4726
							],
							[
								4842,
								4846
							],
							[
								4873,
								4882
							],
							[
								4935,
								4960
							],
							[
								4965,
								4993
							],
							[
								5223,
								5232
							],
							[
								5334,
								5367
							],
							[
								5372,
								5382
							],
							[
								5476,
								5486
							],
							[
								5572,
								5590
							],
							[
								5701,
								5718
							],
							[
								5755,
								5764
							],
							[
								5801,
								5851
							],
							[
								5968,
								5980
							],
							[
								6441,
								6455
							],
							[
								6758,
								6779
							],
							[
								6972,
								6986
							],
							[
								7539,
								7543
							],
							[
								7637,
								7657
							],
							[
								7763,
								7778
							],
							[
								7956,
								7968
							],
							[
								8023,
								8037
							],
							[
								8162,
								8180
							],
							[
								8307,
								8316
							],
							[
								8406,
								8422
							],
							[
								8792,
								8825
							],
							[
								9330,
								9374
							],
							[
								9482,
								9500
							],
							[
								9530,
								9536
							],
							[
								9621,
								9655
							],
							[
								9911,
								9922
							],
							[
								9980,
								9996
							],
							[
								10077,
								10097
							],
							[
								10492,
								10504
							],
							[
								10711,
								10731
							],
							[
								10826,
								10846
							],
							[
								11010,
								11034
							],
							[
								11160,
								11178
							],
							[
								11471,
								11511
							],
							[
								11529,
								11560
							],
							[
								11890,
								11896
							],
							[
								12061,
								12081
							],
							[
								12177,
								12217
							],
							[
								12377,
								12386
							],
							[
								12416,
								12424
							],
							[
								12602,
								12642
							],
							[
								12703,
								12710
							],
							[
								12729,
								12736
							],
							[
								12805,
								12845
							],
							[
								12910,
								12917
							],
							[
								12995,
								13035
							],
							[
								13100,
								13107
							],
							[
								13147,
								13153
							],
							[
								13220,
								13224
							],
							[
								13279,
								13283
							],
							[
								13355,
								13386
							],
							[
								13649,
								13687
							],
							[
								13771,
								13780
							],
							[
								14256,
								14264
							],
							[
								14300,
								14320
							],
							[
								14901,
								14910
							],
							[
								15220,
								15229
							],
							[
								15629,
								15634
							],
							[
								15810,
								15815
							],
							[
								15901,
								15925
							],
							[
								16178,
								16199
							],
							[
								16225,
								16244
							],
							[
								16274,
								16286
							],
							[
								16330,
								16335
							],
							[
								16409,
								16418
							],
							[
								16726,
								16786
							],
							[
								17396,
								17409
							],
							[
								17586,
								17594
							],
							[
								17712,
								17724
							],
							[
								17781,
								17797
							],
							[
								18223,
								18237
							],
							[
								18457,
								18491
							],
							[
								18790,
								18795
							],
							[
								18890,
								18931
							],
							[
								19225,
								19240
							],
							[
								19701,
								19711
							],
							[
								19748,
								19758
							],
							[
								19827,
								19836
							],
							[
								19894,
								19932
							],
							[
								20065,
								20083
							],
							[
								20113,
								20128
							],
							[
								20155,
								20174
							],
							[
								20209,
								20228
							],
							[
								20263,
								20280
							],
							[
								20313,
								20333
							],
							[
								20425,
								20452
							],
							[
								20551,
								20587
							],
							[
								20745,
								20791
							],
							[
								20890,
								20921
							],
							[
								21478,
								21488
							],
							[
								21622,
								21674
							],
							[
								21693,
								21748
							],
							[
								22067,
								22138
							],
							[
								22200,
								22207
							],
							[
								22298,
								22305
							],
							[
								22392,
								22474
							],
							[
								23016,
								23046
							],
							[
								23414,
								23449
							],
							[
								23462,
								23502
							],
							[
								23681,
								23737
							],
							[
								23966,
								23993
							],
							[
								24004,
								24019
							],
							[
								24032,
								24062
							],
							[
								24319,
								24415
							],
							[
								24441,
								24459
							],
							[
								24707,
								24725
							],
							[
								24828,
								24841
							],
							[
								25425,
								25458
							],
							[
								25527,
								25557
							],
							[
								25596,
								25600
							],
							[
								25687,
								25714
							],
							[
								25753,
								25761
							],
							[
								25841,
								25867
							],
							[
								25913,
								25942
							],
							[
								25999,
								26044
							],
							[
								26144,
								26149
							],
							[
								26249,
								26283
							],
							[
								26400,
								26460
							],
							[
								26675,
								26697
							],
							[
								26863,
								26885
							],
							[
								26983,
								27003
							],
							[
								27035,
								27040
							],
							[
								27169,
								27196
							],
							[
								27428,
								27475
							],
							[
								28293,
								28328
							],
							[
								28350,
								28354
							],
							[
								28386,
								28390
							],
							[
								28412,
								28444
							],
							[
								28578,
								28620
							],
							[
								28673,
								28714
							]
						],
						"symlist":
						[
							".LogWrap = function LogWrap(log)",
							"log = (...args) =>",
							"log = (...args) =>",
							" (value, ...args) =>",
							"VfnAdapter = vfn =>",
							"get: k =>",
							"set: (k, v) =>",
							"VfnDecorator = vfn =>",
							".GetClasses = function* GetClasses(obj)",
							" function Mapper(map = ",
							"())",
							"self = function(key, value)",
							"Mapper",
							"Mapper.prototype = function()",
							"Mapper",
							" function DefaultConstructor(mapper, fn = (...args) => ",
							"(...args))",
							"self = function(...args)",
							"DefaultConstructor",
							"DefaultConstructor.prototype = function()",
							"DefaultConstructor",
							" function EventLogger(instance = {}, callback = (name, event, thisObj) => console.log('EventLogger', { name, event, thisObj }))",
							" function WrapEvent(handler, name)",
							" function(e)",
							"get(obj, prop)",
							"MessageReceiver",
							"onmessage(msg)",
							"MessageTransmitter",
							"sendMessage()",
							" function MessageTransceiver()",
							"MessageTransceiver",
							"MessageReceiver",
							"MessageTransmitter",
							"value: instance =>",
							"ctor =>",
							"none()",
							"encode: v =>",
							"decode: v =>",
							"json(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".js = function js(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".bjson = function bjson()",
							"encode: v =>",
							"decode: v =>",
							" function RPCApi(c)",
							"RPCApi",
							" o =>",
							" function RPCProxy(c)",
							" function RPCObject(id, connection)",
							"r =>",
							"RPCObject",
							" function RPCFactory(api)",
							"async function Factory(opts)",
							"RPCObject",
							"RPCFactory.prototype = function()",
							"RPCFactory",
							"Connection",
							"static equal(a, b)",
							"static get last()",
							"makeSeq()",
							"constructor(socket, instance, log, codec = 'none')",
							"log(...args)",
							"error(message)",
							"close(status, reason)",
							"onmessage(msg)",
							"r =>",
							"processMessage(data)",
							"onconnect(sock)",
							"onpong(data)",
							"onerror(error)",
							"onclose(code, why)",
							"cleanup()",
							"sendMessage(obj)",
							"sendCommand(command, params = {})",
							"static getCallbacks(instance, verbosity = 0)",
							" (msg, ...args) =>",
							" () =>",
							"handle = (sock, event, ...args) =>",
							"then: fn =>",
							"remove = sock =>",
							"onConnect(sock, req)",
							"onOpen(sock)",
							"onMessage(sock, msg)",
							"onError(sock, error)",
							"onClose(sock, code, why)",
							"onPong(sock, data)",
							"function RPCServerEndpoint(classes = {})",
							"new({ class: name, args = [] })",
							"list()",
							"({ id }, respond) =>",
							"({ obj, method, args = [] }, respond) =>",
							"result =>",
							"error =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"sym =>",
							"v =>",
							"v =>",
							"({ obj, property }, respond) =>",
							"({ obj, property, value }, respond) =>",
							"RPCServer",
							"makeId()",
							"processMessage(data)",
							"RPCServer",
							"RPCClient",
							" e =>",
							"get()",
							"processMessage(response)",
							"command(name, params)",
							"(accept, reject) =>",
							" response =>",
							" e =>",
							"RPCClient",
							" function RPCSocket(url, service = RPCServer, verbosity = 1)",
							" (...args) =>",
							"get fd()",
							"get socket()",
							"get connection()",
							"register(ctor)",
							"listen(new_ws, os = globalThis.os)",
							"() =>",
							"async connect(new_ws, os = globalThis.os)",
							"get connected()",
							"get list()",
							"get last()",
							"RPCSocket",
							"function MakeWebSocket(url, callbacks)",
							".onconnect = () =>",
							".onopen = () =>",
							".onerror = error =>",
							".onmessage = msg =>",
							".onpong = pong =>",
							".onclose = reason =>",
							" function isThenable(value)",
							" function hasHandler(obj, eventName)",
							" function callHandler(obj, eventName, ...args)",
							" function parseURL(url_or_port)",
							"toString()",
							" function GetProperties(obj, method = obj => Object.",
							"(obj), pred = (obj, depth) => obj !== Object.prototype)",
							" function GetKeys(obj, pred = (obj, depth) => obj !== Object.prototype)",
							" obj =>",
							" obj =>",
							" function getPropertyDescriptors(obj, merge = true, pred = (proto, depth) => true)",
							" function define(obj, ...args)",
							" function setHandlers(os, handlers)",
							".onFd = function(fd, readable, writable)",
							" function statusResponse(success, result_or_error, data)",
							" function objectCommand(fn)",
							" function(data)",
							"respond = (success, result) =>",
							" function MakeListCommand(pred = v => typeof v != 'function', defaults = { maxDepth: Infinity })",
							"(data, respond) =>",
							" (proto, depth) =>",
							"(acc, key) =>",
							" function getPrototypeName(proto)",
							"function DeserializeEntries(e)",
							"a =>",
							"function DeserializeKeys(e)",
							"([k]) =>",
							"function DeserializeMap(e)",
							"function DeserializeObject(e)",
							"function ForwardMethods(e, ret = {}, thisObj)",
							" o =>",
							"function ForwardObject(e, thisObj)",
							"function MakeCommandFunction(cmd, getConnection, thisObj, t)",
							"getConnection = obj =>",
							" function(params = {})",
							"(resolve, reject) =>",
							" r =>",
							"async function(params = {})",
							" function SerializeValue(value, source = false)",
							" function DeserializeSymbols(names)",
							"n =>",
							"n =>",
							" function DeserializeValue(desc)",
							"RPCConnect = (url, service = RPCClient) =>",
							"RPCListen = (url, service = RPCServer) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAALEAAAICAuTG9nV3JhcCA9IGZ1bmN0aW9uIExvZ1dyYXAobG9nKQogIGxvZyA9ICguLi5hcmdzKSA9PgogIGxvZyA9ICguLi5hcmdzKSA9PgogICh2YWx1ZSwgLi4uYXJncykgPT4KVmZuQWRhcHRlciA9IHZmbiA9PgogIGdldDogayA9PgogIHNldDogKGssIHYpID0+ClZmbkRlY29yYXRvciA9IHZmbiA9PgogIC5HZXRDbGFzc2VzID0gZnVuY3Rpb24qR2V0Q2xhc3NlcyhvYmopCk1hcHBlcihtYXAgPSAKKCkpCiAgc2VsZiA9IGZ1bmN0aW9uKGtleSwgdmFsdWUpCk1hcHBlcgpNYXBwZXIucHJvdG90eXBlID0gZnVuY3Rpb24oKQpNYXBwZXIKRGVmYXVsdENvbnN0cnVjdG9yKG1hcHBlciwgZm4gPSAoLi4uYXJncykgPT4gCiguLi5hcmdzKSkKICBzZWxmID0gZnVuY3Rpb24oLi4uYXJncykKRGVmYXVsdENvbnN0cnVjdG9yCkRlZmF1bHRDb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBmdW5jdGlvbigpCkRlZmF1bHRDb25zdHJ1Y3RvcgpFdmVudExvZ2dlcihpbnN0YW5jZSA9IHt9LCBjYWxsYmFjayA9IChuYW1lLCBldmVudCwgdGhpc09iaikgPT4gY29uc29sZS5sb2coJ0V2ZW50TG9nZ2VyJywgeyBuYW1lLCBldmVudCwgdGhpc09iaiB9KSkKV3JhcEV2ZW50KGhhbmRsZXIsIG5hbWUpCiAgZnVuY3Rpb24oZSkKICBnZXQob2JqLCBwcm9wKQpNZXNzYWdlUmVjZWl2ZXIKICBvbm1lc3NhZ2UobXNnKQpNZXNzYWdlVHJhbnNtaXR0ZXIKICBzZW5kTWVzc2FnZSgpCk1lc3NhZ2VUcmFuc2NlaXZlcigpCk1lc3NhZ2VUcmFuc2NlaXZlcgpNZXNzYWdlUmVjZWl2ZXIKTWVzc2FnZVRyYW5zbWl0dGVyCiAgdmFsdWU6IGluc3RhbmNlID0+CiAgY3RvciA9PgogIG5vbmUoKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIGpzb24odmVyYm9zZSA9IGZhbHNlKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIC5qcyA9IGZ1bmN0aW9uIGpzKHZlcmJvc2UgPSBmYWxzZSkKICBlbmNvZGU6IHYgPT4KICBkZWNvZGU6IHYgPT4KICAuYmpzb24gPSBmdW5jdGlvbiBianNvbigpCiAgZW5jb2RlOiB2ID0+CiAgZGVjb2RlOiB2ID0+ClJQQ0FwaShjKQpSUENBcGkKICBvID0+ClJQQ1Byb3h5KGMpClJQQ09iamVjdChpZCwgY29ubmVjdGlvbikKICByID0+ClJQQ09iamVjdApSUENGYWN0b3J5KGFwaSkKRmFjdG9yeShvcHRzKQpSUENPYmplY3QKUlBDRmFjdG9yeS5wcm90b3R5cGUgPSBmdW5jdGlvbigpClJQQ0ZhY3RvcnkKQ29ubmVjdGlvbgogIHN0YXRpYyBlcXVhbChhLCBiKQogIHN0YXRpYyBnZXQgbGFzdCgpCiAgbWFrZVNlcSgpCiAgY29uc3RydWN0b3Ioc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYyA9ICdub25lJykKICBsb2coLi4uYXJncykKICBlcnJvcihtZXNzYWdlKQogIGNsb3NlKHN0YXR1cywgcmVhc29uKQogIG9ubWVzc2FnZShtc2cpCiAgciA9PgogIHByb2Nlc3NNZXNzYWdlKGRhdGEpCiAgb25jb25uZWN0KHNvY2spCiAgb25wb25nKGRhdGEpCiAgb25lcnJvcihlcnJvcikKICBvbmNsb3NlKGNvZGUsIHdoeSkKICBjbGVhbnVwKCkKICBzZW5kTWVzc2FnZShvYmopCiAgc2VuZENvbW1hbmQoY29tbWFuZCwgcGFyYW1zID0ge30pCiAgc3RhdGljIGdldENhbGxiYWNrcyhpbnN0YW5jZSwgdmVyYm9zaXR5ID0gMCkKICAobXNnLCAuLi5hcmdzKSA9PgogICgpID0+CiAgaGFuZGxlID0gKHNvY2ssIGV2ZW50LCAuLi5hcmdzKSA9PgogIHRoZW46IGZuID0+CiAgcmVtb3ZlID0gc29jayA9PgogIG9uQ29ubmVjdChzb2NrLCByZXEpCiAgb25PcGVuKHNvY2spCiAgb25NZXNzYWdlKHNvY2ssIG1zZykKICBvbkVycm9yKHNvY2ssIGVycm9yKQogIG9uQ2xvc2Uoc29jaywgY29kZSwgd2h5KQogIG9uUG9uZyhzb2NrLCBkYXRhKQpSUENTZXJ2ZXJFbmRwb2ludChjbGFzc2VzID0ge30pCiAgbmV3KHsgY2xhc3M6IG5hbWUsIGFyZ3MgPSBbXSB9KQogIGxpc3QoKQooeyBpZCB9LCByZXNwb25kKSA9PgooeyBvYmosIG1ldGhvZCwgYXJncyA9IFtdIH0sIHJlc3BvbmQpID0+CiAgcmVzdWx0ID0+CiAgZXJyb3IgPT4KKHsgb2JqLCBlbnVtZXJhYmxlID0gdHJ1ZSB9LCByZXNwb25kKSA9PgogIG9iaiA9PgogIG9iaiA9PgooeyBvYmosIGVudW1lcmFibGUgPSB0cnVlIH0sIHJlc3BvbmQpID0+CiAgb2JqID0+Cih7IG9iaiwgZW51bWVyYWJsZSA9IHRydWUgfSwgcmVzcG9uZCkgPT4KICBvYmogPT4KICBzeW0gPT4KICB2ID0+CiAgdiA9PgooeyBvYmosIHByb3BlcnR5IH0sIHJlc3BvbmQpID0+Cih7IG9iaiwgcHJvcGVydHksIHZhbHVlIH0sIHJlc3BvbmQpID0+ClJQQ1NlcnZlcgogIG1ha2VJZCgpCiAgcHJvY2Vzc01lc3NhZ2UoZGF0YSkKUlBDU2VydmVyClJQQ0NsaWVudAogIGUgPT4KICBnZXQoKQogIHByb2Nlc3NNZXNzYWdlKHJlc3BvbnNlKQogIGNvbW1hbmQobmFtZSwgcGFyYW1zKQooYWNjZXB0LCByZWplY3QpID0+CiAgcmVzcG9uc2UgPT4KICBlID0+ClJQQ0NsaWVudApSUENTb2NrZXQodXJsLCBzZXJ2aWNlID0gUlBDU2VydmVyLCB2ZXJib3NpdHkgPSAxKQogICguLi5hcmdzKSA9PgogIGdldCBmZCgpCiAgZ2V0IHNvY2tldCgpCiAgZ2V0IGNvbm5lY3Rpb24oKQogIHJlZ2lzdGVyKGN0b3IpCiAgbGlzdGVuKG5ld193cywgb3MgPSBnbG9iYWxUaGlzLm9zKQooKSA9PgogIGNvbm5lY3QobmV3X3dzLCBvcyA9IGdsb2JhbFRoaXMub3MpCiAgZ2V0IGNvbm5lY3RlZCgpCiAgZ2V0IGxpc3QoKQogIGdldCBsYXN0KCkKUlBDU29ja2V0Ck1ha2VXZWJTb2NrZXQodXJsLCBjYWxsYmFja3MpCiAgLm9uY29ubmVjdCA9ICgpID0+CiAgLm9ub3BlbiA9ICgpID0+CiAgLm9uZXJyb3IgPSBlcnJvciA9PgogIC5vbm1lc3NhZ2UgPSBtc2cgPT4KICAub25wb25nID0gcG9uZyA9PgogIC5vbmNsb3NlID0gcmVhc29uID0+CiAgaXNUaGVuYWJsZSh2YWx1ZSkKICBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKQogIGNhbGxIYW5kbGVyKG9iaiwgZXZlbnROYW1lLCAuLi5hcmdzKQogIHBhcnNlVVJMKHVybF9vcl9wb3J0KQogIHRvU3RyaW5nKCkKR2V0UHJvcGVydGllcyhvYmosIG1ldGhvZCA9IG9iaiA9PiBPYmplY3QuCihvYmopLCBwcmVkID0gKG9iaiwgZGVwdGgpID0+IG9iaiAhPT0gT2JqZWN0LnByb3RvdHlwZSkKR2V0S2V5cyhvYmosIHByZWQgPSAob2JqLCBkZXB0aCkgPT4gb2JqICE9PSBPYmplY3QucHJvdG90eXBlKQogIG9iaiA9PgogIG9iaiA9PgogIGdldFByb3BlcnR5RGVzY3JpcHRvcnMob2JqLCBtZXJnZSA9IHRydWUsIHByZWQgPSAocHJvdG8sIGRlcHRoKSA9PiB0cnVlKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgc2V0SGFuZGxlcnMob3MsIGhhbmRsZXJzKQogIC5vbkZkID0gZnVuY3Rpb24oZmQsIHJlYWRhYmxlLCB3cml0YWJsZSkKICBzdGF0dXNSZXNwb25zZShzdWNjZXNzLCByZXN1bHRfb3JfZXJyb3IsIGRhdGEpCiAgb2JqZWN0Q29tbWFuZChmbikKICBmdW5jdGlvbihkYXRhKQogIHJlc3BvbmQgPSAoc3VjY2VzcywgcmVzdWx0KSA9PgpNYWtlTGlzdENvbW1hbmQocHJlZCA9IHYgPT4gdHlwZW9mIHYgIT0gJ2Z1bmN0aW9uJywgZGVmYXVsdHMgPSB7IG1heERlcHRoOiBJbmZpbml0eSB9KQooZGF0YSwgcmVzcG9uZCkgPT4KICAocHJvdG8sIGRlcHRoKSA9PgooYWNjLCBrZXkpID0+CiAgZ2V0UHJvdG90eXBlTmFtZShwcm90bykKRGVzZXJpYWxpemVFbnRyaWVzKGUpCiAgYSA9PgpEZXNlcmlhbGl6ZUtleXMoZSkKKFtrXSkgPT4KRGVzZXJpYWxpemVNYXAoZSkKRGVzZXJpYWxpemVPYmplY3QoZSkKRm9yd2FyZE1ldGhvZHMoZSwgcmV0ID0ge30sIHRoaXNPYmopCiAgbyA9PgpGb3J3YXJkT2JqZWN0KGUsIHRoaXNPYmopCk1ha2VDb21tYW5kRnVuY3Rpb24oY21kLCBnZXRDb25uZWN0aW9uLCB0aGlzT2JqLCB0KQogIGdldENvbm5lY3Rpb24gPSBvYmogPT4KICBmdW5jdGlvbihwYXJhbXMgPSB7fSkKKHJlc29sdmUsIHJlamVjdCkgPT4KICByID0+CiAgZnVuY3Rpb24ocGFyYW1zID0ge30pClNlcmlhbGl6ZVZhbHVlKHZhbHVlLCBzb3VyY2UgPSBmYWxzZSkKRGVzZXJpYWxpemVTeW1ib2xzKG5hbWVzKQogIG4gPT4KICBuID0+CkRlc2VyaWFsaXplVmFsdWUoZGVzYykKUlBDQ29ubmVjdCA9ICh1cmwsIHNlcnZpY2UgPSBSUENDbGllbnQpID0+ClJQQ0xpc3RlbiA9ICh1cmwsIHNlcnZpY2UgPSBSUENTZXJ2ZXIpID0+AAAAAAAAAAALEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					110,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAALEAAAICAuTG9nV3JhcCA9IGZ1bmN0aW9uIExvZ1dyYXAobG9nKQogIGxvZyA9ICguLi5hcmdzKSA9PgogIGxvZyA9ICguLi5hcmdzKSA9PgogICh2YWx1ZSwgLi4uYXJncykgPT4KVmZuQWRhcHRlciA9IHZmbiA9PgogIGdldDogayA9PgogIHNldDogKGssIHYpID0+ClZmbkRlY29yYXRvciA9IHZmbiA9PgogIC5HZXRDbGFzc2VzID0gZnVuY3Rpb24qR2V0Q2xhc3NlcyhvYmopCk1hcHBlcihtYXAgPSAKKCkpCiAgc2VsZiA9IGZ1bmN0aW9uKGtleSwgdmFsdWUpCk1hcHBlcgpNYXBwZXIucHJvdG90eXBlID0gZnVuY3Rpb24oKQpNYXBwZXIKRGVmYXVsdENvbnN0cnVjdG9yKG1hcHBlciwgZm4gPSAoLi4uYXJncykgPT4gCiguLi5hcmdzKSkKICBzZWxmID0gZnVuY3Rpb24oLi4uYXJncykKRGVmYXVsdENvbnN0cnVjdG9yCkRlZmF1bHRDb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBmdW5jdGlvbigpCkRlZmF1bHRDb25zdHJ1Y3RvcgpFdmVudExvZ2dlcihpbnN0YW5jZSA9IHt9LCBjYWxsYmFjayA9IChuYW1lLCBldmVudCwgdGhpc09iaikgPT4gY29uc29sZS5sb2coJ0V2ZW50TG9nZ2VyJywgeyBuYW1lLCBldmVudCwgdGhpc09iaiB9KSkKV3JhcEV2ZW50KGhhbmRsZXIsIG5hbWUpCiAgZnVuY3Rpb24oZSkKICBnZXQob2JqLCBwcm9wKQpNZXNzYWdlUmVjZWl2ZXIKICBvbm1lc3NhZ2UobXNnKQpNZXNzYWdlVHJhbnNtaXR0ZXIKICBzZW5kTWVzc2FnZSgpCk1lc3NhZ2VUcmFuc2NlaXZlcigpCk1lc3NhZ2VUcmFuc2NlaXZlcgpNZXNzYWdlUmVjZWl2ZXIKTWVzc2FnZVRyYW5zbWl0dGVyCiAgdmFsdWU6IGluc3RhbmNlID0+CiAgY3RvciA9PgogIG5vbmUoKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIGpzb24odmVyYm9zZSA9IGZhbHNlKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIC5qcyA9IGZ1bmN0aW9uIGpzKHZlcmJvc2UgPSBmYWxzZSkKICBlbmNvZGU6IHYgPT4KICBkZWNvZGU6IHYgPT4KICAuYmpzb24gPSBmdW5jdGlvbiBianNvbigpCiAgZW5jb2RlOiB2ID0+CiAgZGVjb2RlOiB2ID0+ClJQQ0FwaShjKQpSUENBcGkKICBvID0+ClJQQ1Byb3h5KGMpClJQQ09iamVjdChpZCwgY29ubmVjdGlvbikKICByID0+ClJQQ09iamVjdApSUENGYWN0b3J5KGFwaSkKRmFjdG9yeShvcHRzKQpSUENPYmplY3QKUlBDRmFjdG9yeS5wcm90b3R5cGUgPSBmdW5jdGlvbigpClJQQ0ZhY3RvcnkKQ29ubmVjdGlvbgogIHN0YXRpYyBlcXVhbChhLCBiKQogIHN0YXRpYyBnZXQgbGFzdCgpCiAgbWFrZVNlcSgpCiAgY29uc3RydWN0b3Ioc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYyA9ICdub25lJykKICBsb2coLi4uYXJncykKICBlcnJvcihtZXNzYWdlKQogIGNsb3NlKHN0YXR1cywgcmVhc29uKQogIG9ubWVzc2FnZShtc2cpCiAgciA9PgogIHByb2Nlc3NNZXNzYWdlKGRhdGEpCiAgb25jb25uZWN0KHNvY2spCiAgb25wb25nKGRhdGEpCiAgb25lcnJvcihlcnJvcikKICBvbmNsb3NlKGNvZGUsIHdoeSkKICBjbGVhbnVwKCkKICBzZW5kTWVzc2FnZShvYmopCiAgc2VuZENvbW1hbmQoY29tbWFuZCwgcGFyYW1zID0ge30pCiAgc3RhdGljIGdldENhbGxiYWNrcyhpbnN0YW5jZSwgdmVyYm9zaXR5ID0gMCkKICAobXNnLCAuLi5hcmdzKSA9PgogICgpID0+CiAgaGFuZGxlID0gKHNvY2ssIGV2ZW50LCAuLi5hcmdzKSA9PgogIHRoZW46IGZuID0+CiAgcmVtb3ZlID0gc29jayA9PgogIG9uQ29ubmVjdChzb2NrLCByZXEpCiAgb25PcGVuKHNvY2spCiAgb25NZXNzYWdlKHNvY2ssIG1zZykKICBvbkVycm9yKHNvY2ssIGVycm9yKQogIG9uQ2xvc2Uoc29jaywgY29kZSwgd2h5KQogIG9uUG9uZyhzb2NrLCBkYXRhKQpSUENTZXJ2ZXJFbmRwb2ludChjbGFzc2VzID0ge30pCiAgbmV3KHsgY2xhc3M6IG5hbWUsIGFyZ3MgPSBbXSB9KQogIGxpc3QoKQooeyBpZCB9LCByZXNwb25kKSA9PgooeyBvYmosIG1ldGhvZCwgYXJncyA9IFtdIH0sIHJlc3BvbmQpID0+CiAgcmVzdWx0ID0+CiAgZXJyb3IgPT4KKHsgb2JqLCBlbnVtZXJhYmxlID0gdHJ1ZSB9LCByZXNwb25kKSA9PgogIG9iaiA9PgogIG9iaiA9PgooeyBvYmosIGVudW1lcmFibGUgPSB0cnVlIH0sIHJlc3BvbmQpID0+CiAgb2JqID0+Cih7IG9iaiwgZW51bWVyYWJsZSA9IHRydWUgfSwgcmVzcG9uZCkgPT4KICBvYmogPT4KICBzeW0gPT4KICB2ID0+CiAgdiA9PgooeyBvYmosIHByb3BlcnR5IH0sIHJlc3BvbmQpID0+Cih7IG9iaiwgcHJvcGVydHksIHZhbHVlIH0sIHJlc3BvbmQpID0+ClJQQ1NlcnZlcgogIG1ha2VJZCgpCiAgcHJvY2Vzc01lc3NhZ2UoZGF0YSkKUlBDU2VydmVyClJQQ0NsaWVudAogIGUgPT4KICBnZXQoKQogIHByb2Nlc3NNZXNzYWdlKHJlc3BvbnNlKQogIGNvbW1hbmQobmFtZSwgcGFyYW1zKQooYWNjZXB0LCByZWplY3QpID0+CiAgcmVzcG9uc2UgPT4KICBlID0+ClJQQ0NsaWVudApSUENTb2NrZXQodXJsLCBzZXJ2aWNlID0gUlBDU2VydmVyLCB2ZXJib3NpdHkgPSAxKQogICguLi5hcmdzKSA9PgogIGdldCBmZCgpCiAgZ2V0IHNvY2tldCgpCiAgZ2V0IGNvbm5lY3Rpb24oKQogIHJlZ2lzdGVyKGN0b3IpCiAgbGlzdGVuKG5ld193cywgb3MgPSBnbG9iYWxUaGlzLm9zKQooKSA9PgogIGNvbm5lY3QobmV3X3dzLCBvcyA9IGdsb2JhbFRoaXMub3MpCiAgZ2V0IGNvbm5lY3RlZCgpCiAgZ2V0IGxpc3QoKQogIGdldCBsYXN0KCkKUlBDU29ja2V0Ck1ha2VXZWJTb2NrZXQodXJsLCBjYWxsYmFja3MpCiAgLm9uY29ubmVjdCA9ICgpID0+CiAgLm9ub3BlbiA9ICgpID0+CiAgLm9uZXJyb3IgPSBlcnJvciA9PgogIC5vbm1lc3NhZ2UgPSBtc2cgPT4KICAub25wb25nID0gcG9uZyA9PgogIC5vbmNsb3NlID0gcmVhc29uID0+CiAgaXNUaGVuYWJsZSh2YWx1ZSkKICBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKQogIGNhbGxIYW5kbGVyKG9iaiwgZXZlbnROYW1lLCAuLi5hcmdzKQogIHBhcnNlVVJMKHVybF9vcl9wb3J0KQogIHRvU3RyaW5nKCkKR2V0UHJvcGVydGllcyhvYmosIG1ldGhvZCA9IG9iaiA9PiBPYmplY3QuCihvYmopLCBwcmVkID0gKG9iaiwgZGVwdGgpID0+IG9iaiAhPT0gT2JqZWN0LnByb3RvdHlwZSkKR2V0S2V5cyhvYmosIHByZWQgPSAob2JqLCBkZXB0aCkgPT4gb2JqICE9PSBPYmplY3QucHJvdG90eXBlKQogIG9iaiA9PgogIG9iaiA9PgogIGdldFByb3BlcnR5RGVzY3JpcHRvcnMob2JqLCBtZXJnZSA9IHRydWUsIHByZWQgPSAocHJvdG8sIGRlcHRoKSA9PiB0cnVlKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgc2V0SGFuZGxlcnMob3MsIGhhbmRsZXJzKQogIC5vbkZkID0gZnVuY3Rpb24oZmQsIHJlYWRhYmxlLCB3cml0YWJsZSkKICBzdGF0dXNSZXNwb25zZShzdWNjZXNzLCByZXN1bHRfb3JfZXJyb3IsIGRhdGEpCiAgb2JqZWN0Q29tbWFuZChmbikKICBmdW5jdGlvbihkYXRhKQogIHJlc3BvbmQgPSAoc3VjY2VzcywgcmVzdWx0KSA9PgpNYWtlTGlzdENvbW1hbmQocHJlZCA9IHYgPT4gdHlwZW9mIHYgIT0gJ2Z1bmN0aW9uJywgZGVmYXVsdHMgPSB7IG1heERlcHRoOiBJbmZpbml0eSB9KQooZGF0YSwgcmVzcG9uZCkgPT4KICAocHJvdG8sIGRlcHRoKSA9PgooYWNjLCBrZXkpID0+CiAgZ2V0UHJvdG90eXBlTmFtZShwcm90bykKRGVzZXJpYWxpemVFbnRyaWVzKGUpCiAgYSA9PgpEZXNlcmlhbGl6ZUtleXMoZSkKKFtrXSkgPT4KRGVzZXJpYWxpemVNYXAoZSkKRGVzZXJpYWxpemVPYmplY3QoZSkKRm9yd2FyZE1ldGhvZHMoZSwgcmV0ID0ge30sIHRoaXNPYmopCiAgbyA9PgpGb3J3YXJkT2JqZWN0KGUsIHRoaXNPYmopCk1ha2VDb21tYW5kRnVuY3Rpb24oY21kLCBnZXRDb25uZWN0aW9uLCB0aGlzT2JqLCB0KQogIGdldENvbm5lY3Rpb24gPSBvYmogPT4KICBmdW5jdGlvbihwYXJhbXMgPSB7fSkKKHJlc29sdmUsIHJlamVjdCkgPT4KICByID0+CiAgZnVuY3Rpb24ocGFyYW1zID0ge30pClNlcmlhbGl6ZVZhbHVlKHZhbHVlLCBzb3VyY2UgPSBmYWxzZSkKRGVzZXJpYWxpemVTeW1ib2xzKG5hbWVzKQogIG4gPT4KICBuID0+CkRlc2VyaWFsaXplVmFsdWUoZGVzYykKUlBDQ29ubmVjdCA9ICh1cmwsIHNlcnZpY2UgPSBSUENDbGllbnQpID0+ClJQQ0xpc3RlbiA9ICh1cmwsIHNlcnZpY2UgPSBSUENTZXJ2ZXIpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					111,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/rpc.js",
						"symkeys":
						[
							[
								234,
								266
							],
							[
								323,
								341
							],
							[
								393,
								411
							],
							[
								446,
								466
							],
							[
								515,
								534
							],
							[
								540,
								549
							],
							[
								560,
								574
							],
							[
								603,
								624
							],
							[
								999,
								1038
							],
							[
								1280,
								1303
							],
							[
								1314,
								1317
							],
							[
								1334,
								1361
							],
							[
								1504,
								1510
							],
							[
								1525,
								1554
							],
							[
								1559,
								1565
							],
							[
								1605,
								1660
							],
							[
								1670,
								1680
							],
							[
								1697,
								1721
							],
							[
								1997,
								2015
							],
							[
								2031,
								2072
							],
							[
								2077,
								2095
							],
							[
								2147,
								2274
							],
							[
								2277,
								2312
							],
							[
								2325,
								2337
							],
							[
								2425,
								2439
							],
							[
								2622,
								2637
							],
							[
								2765,
								2779
							],
							[
								2903,
								2921
							],
							[
								3036,
								3049
							],
							[
								3227,
								3257
							],
							[
								3276,
								3294
							],
							[
								3306,
								3321
							],
							[
								3333,
								3351
							],
							[
								3431,
								3449
							],
							[
								3494,
								3501
							],
							[
								3562,
								3568
							],
							[
								3610,
								3622
							],
							[
								3632,
								3644
							],
							[
								3661,
								3682
							],
							[
								3724,
								3736
							],
							[
								3793,
								3805
							],
							[
								3868,
								3902
							],
							[
								3942,
								3954
							],
							[
								4023,
								4035
							],
							[
								4097,
								4122
							],
							[
								4165,
								4177
							],
							[
								4200,
								4212
							],
							[
								4248,
								4267
							],
							[
								4476,
								4482
							],
							[
								4524,
								4529
							],
							[
								4552,
								4573
							],
							[
								4691,
								4726
							],
							[
								4842,
								4846
							],
							[
								4873,
								4882
							],
							[
								4935,
								4960
							],
							[
								4965,
								4993
							],
							[
								5223,
								5232
							],
							[
								5334,
								5367
							],
							[
								5372,
								5382
							],
							[
								5476,
								5486
							],
							[
								5572,
								5590
							],
							[
								5701,
								5718
							],
							[
								5755,
								5764
							],
							[
								5801,
								5851
							],
							[
								5968,
								5980
							],
							[
								6441,
								6455
							],
							[
								6758,
								6779
							],
							[
								6972,
								6986
							],
							[
								7539,
								7543
							],
							[
								7637,
								7657
							],
							[
								7763,
								7778
							],
							[
								7956,
								7968
							],
							[
								8023,
								8037
							],
							[
								8162,
								8180
							],
							[
								8307,
								8316
							],
							[
								8406,
								8422
							],
							[
								8792,
								8825
							],
							[
								9330,
								9374
							],
							[
								9482,
								9500
							],
							[
								9530,
								9536
							],
							[
								9621,
								9655
							],
							[
								9911,
								9922
							],
							[
								9980,
								9996
							],
							[
								10077,
								10097
							],
							[
								10492,
								10504
							],
							[
								10711,
								10731
							],
							[
								10826,
								10846
							],
							[
								11010,
								11034
							],
							[
								11160,
								11178
							],
							[
								11471,
								11511
							],
							[
								11529,
								11560
							],
							[
								11890,
								11896
							],
							[
								12061,
								12081
							],
							[
								12177,
								12217
							],
							[
								12377,
								12386
							],
							[
								12416,
								12424
							],
							[
								12602,
								12642
							],
							[
								12703,
								12710
							],
							[
								12729,
								12736
							],
							[
								12805,
								12845
							],
							[
								12910,
								12917
							],
							[
								12995,
								13035
							],
							[
								13100,
								13107
							],
							[
								13147,
								13153
							],
							[
								13220,
								13224
							],
							[
								13279,
								13283
							],
							[
								13355,
								13386
							],
							[
								13649,
								13687
							],
							[
								13771,
								13780
							],
							[
								14256,
								14264
							],
							[
								14300,
								14320
							],
							[
								14901,
								14910
							],
							[
								15220,
								15229
							],
							[
								15629,
								15634
							],
							[
								15810,
								15815
							],
							[
								15901,
								15925
							],
							[
								16178,
								16199
							],
							[
								16225,
								16244
							],
							[
								16274,
								16286
							],
							[
								16330,
								16335
							],
							[
								16409,
								16418
							],
							[
								16726,
								16786
							],
							[
								17396,
								17409
							],
							[
								17586,
								17594
							],
							[
								17712,
								17724
							],
							[
								17781,
								17797
							],
							[
								18223,
								18237
							],
							[
								18457,
								18491
							],
							[
								18790,
								18795
							],
							[
								18890,
								18931
							],
							[
								19225,
								19240
							],
							[
								19701,
								19711
							],
							[
								19748,
								19758
							],
							[
								19827,
								19836
							],
							[
								19894,
								19932
							],
							[
								20065,
								20083
							],
							[
								20113,
								20128
							],
							[
								20155,
								20174
							],
							[
								20209,
								20228
							],
							[
								20263,
								20280
							],
							[
								20313,
								20333
							],
							[
								20425,
								20452
							],
							[
								20551,
								20587
							],
							[
								20745,
								20791
							],
							[
								20890,
								20921
							],
							[
								21478,
								21488
							],
							[
								21622,
								21674
							],
							[
								21693,
								21748
							],
							[
								22067,
								22138
							],
							[
								22200,
								22207
							],
							[
								22298,
								22305
							],
							[
								22392,
								22474
							],
							[
								23016,
								23046
							],
							[
								23414,
								23449
							],
							[
								23462,
								23502
							],
							[
								23681,
								23737
							],
							[
								23966,
								23993
							],
							[
								24004,
								24019
							],
							[
								24032,
								24062
							],
							[
								24319,
								24415
							],
							[
								24441,
								24459
							],
							[
								24707,
								24725
							],
							[
								24828,
								24841
							],
							[
								25425,
								25458
							],
							[
								25527,
								25557
							],
							[
								25596,
								25600
							],
							[
								25687,
								25714
							],
							[
								25753,
								25761
							],
							[
								25841,
								25867
							],
							[
								25913,
								25942
							],
							[
								25999,
								26044
							],
							[
								26144,
								26149
							],
							[
								26249,
								26283
							],
							[
								26400,
								26460
							],
							[
								26675,
								26697
							],
							[
								26863,
								26885
							],
							[
								26983,
								27003
							],
							[
								27035,
								27040
							],
							[
								27169,
								27196
							],
							[
								27428,
								27475
							],
							[
								28293,
								28328
							],
							[
								28350,
								28354
							],
							[
								28386,
								28390
							],
							[
								28412,
								28444
							],
							[
								28578,
								28620
							],
							[
								28673,
								28714
							]
						],
						"symlist":
						[
							".LogWrap = function LogWrap(log)",
							"log = (...args) =>",
							"log = (...args) =>",
							" (value, ...args) =>",
							"VfnAdapter = vfn =>",
							"get: k =>",
							"set: (k, v) =>",
							"VfnDecorator = vfn =>",
							".GetClasses = function* GetClasses(obj)",
							" function Mapper(map = ",
							"())",
							"self = function(key, value)",
							"Mapper",
							"Mapper.prototype = function()",
							"Mapper",
							" function DefaultConstructor(mapper, fn = (...args) => ",
							"(...args))",
							"self = function(...args)",
							"DefaultConstructor",
							"DefaultConstructor.prototype = function()",
							"DefaultConstructor",
							" function EventLogger(instance = {}, callback = (name, event, thisObj) => console.log('EventLogger', { name, event, thisObj }))",
							" function WrapEvent(handler, name)",
							" function(e)",
							"get(obj, prop)",
							"MessageReceiver",
							"onmessage(msg)",
							"MessageTransmitter",
							"sendMessage()",
							" function MessageTransceiver()",
							"MessageTransceiver",
							"MessageReceiver",
							"MessageTransmitter",
							"value: instance =>",
							"ctor =>",
							"none()",
							"encode: v =>",
							"decode: v =>",
							"json(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".js = function js(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".bjson = function bjson()",
							"encode: v =>",
							"decode: v =>",
							" function RPCApi(c)",
							"RPCApi",
							" o =>",
							" function RPCProxy(c)",
							" function RPCObject(id, connection)",
							"r =>",
							"RPCObject",
							" function RPCFactory(api)",
							"async function Factory(opts)",
							"RPCObject",
							"RPCFactory.prototype = function()",
							"RPCFactory",
							"Connection",
							"static equal(a, b)",
							"static get last()",
							"makeSeq()",
							"constructor(socket, instance, log, codec = 'none')",
							"log(...args)",
							"error(message)",
							"close(status, reason)",
							"onmessage(msg)",
							"r =>",
							"processMessage(data)",
							"onconnect(sock)",
							"onpong(data)",
							"onerror(error)",
							"onclose(code, why)",
							"cleanup()",
							"sendMessage(obj)",
							"sendCommand(command, params = {})",
							"static getCallbacks(instance, verbosity = 0)",
							" (msg, ...args) =>",
							" () =>",
							"handle = (sock, event, ...args) =>",
							"then: fn =>",
							"remove = sock =>",
							"onConnect(sock, req)",
							"onOpen(sock)",
							"onMessage(sock, msg)",
							"onError(sock, error)",
							"onClose(sock, code, why)",
							"onPong(sock, data)",
							"function RPCServerEndpoint(classes = {})",
							"new({ class: name, args = [] })",
							"list()",
							"({ id }, respond) =>",
							"({ obj, method, args = [] }, respond) =>",
							"result =>",
							"error =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"sym =>",
							"v =>",
							"v =>",
							"({ obj, property }, respond) =>",
							"({ obj, property, value }, respond) =>",
							"RPCServer",
							"makeId()",
							"processMessage(data)",
							"RPCServer",
							"RPCClient",
							" e =>",
							"get()",
							"processMessage(response)",
							"command(name, params)",
							"(accept, reject) =>",
							" response =>",
							" e =>",
							"RPCClient",
							" function RPCSocket(url, service = RPCServer, verbosity = 1)",
							" (...args) =>",
							"get fd()",
							"get socket()",
							"get connection()",
							"register(ctor)",
							"listen(new_ws, os = globalThis.os)",
							"() =>",
							"async connect(new_ws, os = globalThis.os)",
							"get connected()",
							"get list()",
							"get last()",
							"RPCSocket",
							"function MakeWebSocket(url, callbacks)",
							".onconnect = () =>",
							".onopen = () =>",
							".onerror = error =>",
							".onmessage = msg =>",
							".onpong = pong =>",
							".onclose = reason =>",
							" function isThenable(value)",
							" function hasHandler(obj, eventName)",
							" function callHandler(obj, eventName, ...args)",
							" function parseURL(url_or_port)",
							"toString()",
							" function GetProperties(obj, method = obj => Object.",
							"(obj), pred = (obj, depth) => obj !== Object.prototype)",
							" function GetKeys(obj, pred = (obj, depth) => obj !== Object.prototype)",
							" obj =>",
							" obj =>",
							" function getPropertyDescriptors(obj, merge = true, pred = (proto, depth) => true)",
							" function define(obj, ...args)",
							" function setHandlers(os, handlers)",
							".onFd = function(fd, readable, writable)",
							" function statusResponse(success, result_or_error, data)",
							" function objectCommand(fn)",
							" function(data)",
							"respond = (success, result) =>",
							" function MakeListCommand(pred = v => typeof v != 'function', defaults = { maxDepth: Infinity })",
							"(data, respond) =>",
							" (proto, depth) =>",
							"(acc, key) =>",
							" function getPrototypeName(proto)",
							"function DeserializeEntries(e)",
							"a =>",
							"function DeserializeKeys(e)",
							"([k]) =>",
							"function DeserializeMap(e)",
							"function DeserializeObject(e)",
							"function ForwardMethods(e, ret = {}, thisObj)",
							" o =>",
							"function ForwardObject(e, thisObj)",
							"function MakeCommandFunction(cmd, getConnection, thisObj, t)",
							"getConnection = obj =>",
							" function(params = {})",
							"(resolve, reject) =>",
							" r =>",
							"async function(params = {})",
							" function SerializeValue(value, source = false)",
							" function DeserializeSymbols(names)",
							"n =>",
							"n =>",
							" function DeserializeValue(desc)",
							"RPCConnect = (url, service = RPCClient) =>",
							"RPCListen = (url, service = RPCServer) =>"
						]
					},
					"AQAAAAAAAAAAAAAACxAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					112,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/rpc.js",
						"symkeys":
						[
							[
								99,
								131
							],
							[
								188,
								206
							],
							[
								258,
								276
							],
							[
								311,
								331
							],
							[
								380,
								399
							],
							[
								405,
								414
							],
							[
								425,
								439
							],
							[
								468,
								489
							],
							[
								864,
								903
							],
							[
								1145,
								1168
							],
							[
								1179,
								1182
							],
							[
								1199,
								1226
							],
							[
								1369,
								1375
							],
							[
								1390,
								1419
							],
							[
								1424,
								1430
							],
							[
								1470,
								1525
							],
							[
								1535,
								1545
							],
							[
								1562,
								1586
							],
							[
								1862,
								1880
							],
							[
								1896,
								1937
							],
							[
								1942,
								1960
							],
							[
								2012,
								2139
							],
							[
								2142,
								2177
							],
							[
								2190,
								2202
							],
							[
								2290,
								2304
							],
							[
								2487,
								2502
							],
							[
								2630,
								2644
							],
							[
								2768,
								2786
							],
							[
								2901,
								2914
							],
							[
								3092,
								3122
							],
							[
								3141,
								3159
							],
							[
								3171,
								3186
							],
							[
								3198,
								3216
							],
							[
								3296,
								3314
							],
							[
								3359,
								3366
							],
							[
								3427,
								3433
							],
							[
								3475,
								3487
							],
							[
								3497,
								3509
							],
							[
								3526,
								3547
							],
							[
								3589,
								3601
							],
							[
								3658,
								3670
							],
							[
								3733,
								3767
							],
							[
								3807,
								3819
							],
							[
								3888,
								3900
							],
							[
								3962,
								3987
							],
							[
								4030,
								4042
							],
							[
								4065,
								4077
							],
							[
								4113,
								4132
							],
							[
								4341,
								4347
							],
							[
								4389,
								4394
							],
							[
								4417,
								4438
							],
							[
								4556,
								4591
							],
							[
								4707,
								4711
							],
							[
								4738,
								4747
							],
							[
								4800,
								4825
							],
							[
								4830,
								4858
							],
							[
								5088,
								5097
							],
							[
								5199,
								5232
							],
							[
								5237,
								5247
							],
							[
								5341,
								5351
							],
							[
								5437,
								5455
							],
							[
								5566,
								5583
							],
							[
								5620,
								5629
							],
							[
								5666,
								5716
							],
							[
								5833,
								5845
							],
							[
								6306,
								6320
							],
							[
								6623,
								6644
							],
							[
								6837,
								6851
							],
							[
								7404,
								7408
							],
							[
								7502,
								7522
							],
							[
								7628,
								7643
							],
							[
								7821,
								7833
							],
							[
								7888,
								7902
							],
							[
								8027,
								8045
							],
							[
								8172,
								8181
							],
							[
								8271,
								8287
							],
							[
								8657,
								8690
							],
							[
								9195,
								9239
							],
							[
								9347,
								9365
							],
							[
								9395,
								9401
							],
							[
								9486,
								9520
							],
							[
								9776,
								9787
							],
							[
								9845,
								9861
							],
							[
								9942,
								9962
							],
							[
								10357,
								10369
							],
							[
								10576,
								10596
							],
							[
								10691,
								10711
							],
							[
								10875,
								10899
							],
							[
								11025,
								11043
							],
							[
								11336,
								11376
							],
							[
								11394,
								11425
							],
							[
								11755,
								11761
							],
							[
								11926,
								11946
							],
							[
								12042,
								12082
							],
							[
								12242,
								12251
							],
							[
								12281,
								12289
							],
							[
								12467,
								12507
							],
							[
								12568,
								12575
							],
							[
								12594,
								12601
							],
							[
								12670,
								12710
							],
							[
								12775,
								12782
							],
							[
								12860,
								12900
							],
							[
								12965,
								12972
							],
							[
								13012,
								13018
							],
							[
								13085,
								13089
							],
							[
								13144,
								13148
							],
							[
								13220,
								13251
							],
							[
								13514,
								13552
							],
							[
								13636,
								13645
							],
							[
								14121,
								14129
							],
							[
								14165,
								14185
							],
							[
								14766,
								14775
							],
							[
								15085,
								15094
							],
							[
								15494,
								15499
							],
							[
								15675,
								15680
							],
							[
								15766,
								15790
							],
							[
								16043,
								16064
							],
							[
								16090,
								16109
							],
							[
								16139,
								16151
							],
							[
								16195,
								16200
							],
							[
								16274,
								16283
							],
							[
								16591,
								16651
							],
							[
								17261,
								17274
							],
							[
								17451,
								17459
							],
							[
								17577,
								17589
							],
							[
								17646,
								17662
							],
							[
								18088,
								18102
							],
							[
								18322,
								18356
							],
							[
								18655,
								18660
							],
							[
								18755,
								18796
							],
							[
								19090,
								19105
							],
							[
								19566,
								19576
							],
							[
								19613,
								19623
							],
							[
								19692,
								19701
							],
							[
								19759,
								19797
							],
							[
								19930,
								19948
							],
							[
								19978,
								19993
							],
							[
								20020,
								20039
							],
							[
								20074,
								20093
							],
							[
								20128,
								20145
							],
							[
								20178,
								20198
							],
							[
								20290,
								20317
							],
							[
								20416,
								20452
							],
							[
								20610,
								20656
							],
							[
								20755,
								20786
							],
							[
								21343,
								21353
							],
							[
								21487,
								21539
							],
							[
								21558,
								21613
							],
							[
								21932,
								22003
							],
							[
								22065,
								22072
							],
							[
								22163,
								22170
							],
							[
								22257,
								22339
							],
							[
								22881,
								22911
							],
							[
								23279,
								23314
							],
							[
								23327,
								23367
							],
							[
								23546,
								23602
							],
							[
								23831,
								23858
							],
							[
								23869,
								23884
							],
							[
								23897,
								23927
							],
							[
								24184,
								24280
							],
							[
								24306,
								24324
							],
							[
								24572,
								24590
							],
							[
								24693,
								24706
							],
							[
								25290,
								25323
							],
							[
								25392,
								25422
							],
							[
								25461,
								25465
							],
							[
								25552,
								25579
							],
							[
								25618,
								25626
							],
							[
								25706,
								25732
							],
							[
								25778,
								25807
							],
							[
								25864,
								25909
							],
							[
								26009,
								26014
							],
							[
								26114,
								26148
							],
							[
								26265,
								26325
							],
							[
								26540,
								26562
							],
							[
								26728,
								26750
							],
							[
								26848,
								26868
							],
							[
								26900,
								26905
							],
							[
								27034,
								27061
							],
							[
								27293,
								27340
							],
							[
								28158,
								28193
							],
							[
								28215,
								28219
							],
							[
								28251,
								28255
							],
							[
								28277,
								28309
							],
							[
								28443,
								28485
							],
							[
								28538,
								28579
							]
						],
						"symlist":
						[
							".LogWrap = function LogWrap(log)",
							"log = (...args) =>",
							"log = (...args) =>",
							" (value, ...args) =>",
							"VfnAdapter = vfn =>",
							"get: k =>",
							"set: (k, v) =>",
							"VfnDecorator = vfn =>",
							".GetClasses = function* GetClasses(obj)",
							" function Mapper(map = ",
							"())",
							"self = function(key, value)",
							"Mapper",
							"Mapper.prototype = function()",
							"Mapper",
							" function DefaultConstructor(mapper, fn = (...args) => ",
							"(...args))",
							"self = function(...args)",
							"DefaultConstructor",
							"DefaultConstructor.prototype = function()",
							"DefaultConstructor",
							" function EventLogger(instance = {}, callback = (name, event, thisObj) => console.log('EventLogger', { name, event, thisObj }))",
							" function WrapEvent(handler, name)",
							" function(e)",
							"get(obj, prop)",
							"MessageReceiver",
							"onmessage(msg)",
							"MessageTransmitter",
							"sendMessage()",
							" function MessageTransceiver()",
							"MessageTransceiver",
							"MessageReceiver",
							"MessageTransmitter",
							"value: instance =>",
							"ctor =>",
							"none()",
							"encode: v =>",
							"decode: v =>",
							"json(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".js = function js(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".bjson = function bjson()",
							"encode: v =>",
							"decode: v =>",
							" function RPCApi(c)",
							"RPCApi",
							" o =>",
							" function RPCProxy(c)",
							" function RPCObject(id, connection)",
							"r =>",
							"RPCObject",
							" function RPCFactory(api)",
							"async function Factory(opts)",
							"RPCObject",
							"RPCFactory.prototype = function()",
							"RPCFactory",
							"Connection",
							"static equal(a, b)",
							"static get last()",
							"makeSeq()",
							"constructor(socket, instance, log, codec = 'none')",
							"log(...args)",
							"error(message)",
							"close(status, reason)",
							"onmessage(msg)",
							"r =>",
							"processMessage(data)",
							"onconnect(sock)",
							"onpong(data)",
							"onerror(error)",
							"onclose(code, why)",
							"cleanup()",
							"sendMessage(obj)",
							"sendCommand(command, params = {})",
							"static getCallbacks(instance, verbosity = 0)",
							" (msg, ...args) =>",
							" () =>",
							"handle = (sock, event, ...args) =>",
							"then: fn =>",
							"remove = sock =>",
							"onConnect(sock, req)",
							"onOpen(sock)",
							"onMessage(sock, msg)",
							"onError(sock, error)",
							"onClose(sock, code, why)",
							"onPong(sock, data)",
							"function RPCServerEndpoint(classes = {})",
							"new({ class: name, args = [] })",
							"list()",
							"({ id }, respond) =>",
							"({ obj, method, args = [] }, respond) =>",
							"result =>",
							"error =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"sym =>",
							"v =>",
							"v =>",
							"({ obj, property }, respond) =>",
							"({ obj, property, value }, respond) =>",
							"RPCServer",
							"makeId()",
							"processMessage(data)",
							"RPCServer",
							"RPCClient",
							" e =>",
							"get()",
							"processMessage(response)",
							"command(name, params)",
							"(accept, reject) =>",
							" response =>",
							" e =>",
							"RPCClient",
							" function RPCSocket(url, service = RPCServer, verbosity = 1)",
							" (...args) =>",
							"get fd()",
							"get socket()",
							"get connection()",
							"register(ctor)",
							"listen(new_ws, os = globalThis.os)",
							"() =>",
							"async connect(new_ws, os = globalThis.os)",
							"get connected()",
							"get list()",
							"get last()",
							"RPCSocket",
							"function MakeWebSocket(url, callbacks)",
							".onconnect = () =>",
							".onopen = () =>",
							".onerror = error =>",
							".onmessage = msg =>",
							".onpong = pong =>",
							".onclose = reason =>",
							" function isThenable(value)",
							" function hasHandler(obj, eventName)",
							" function callHandler(obj, eventName, ...args)",
							" function parseURL(url_or_port)",
							"toString()",
							" function GetProperties(obj, method = obj => Object.",
							"(obj), pred = (obj, depth) => obj !== Object.prototype)",
							" function GetKeys(obj, pred = (obj, depth) => obj !== Object.prototype)",
							" obj =>",
							" obj =>",
							" function getPropertyDescriptors(obj, merge = true, pred = (proto, depth) => true)",
							" function define(obj, ...args)",
							" function setHandlers(os, handlers)",
							".onFd = function(fd, readable, writable)",
							" function statusResponse(success, result_or_error, data)",
							" function objectCommand(fn)",
							" function(data)",
							"respond = (success, result) =>",
							" function MakeListCommand(pred = v => typeof v != 'function', defaults = { maxDepth: Infinity })",
							"(data, respond) =>",
							" (proto, depth) =>",
							"(acc, key) =>",
							" function getPrototypeName(proto)",
							"function DeserializeEntries(e)",
							"a =>",
							"function DeserializeKeys(e)",
							"([k]) =>",
							"function DeserializeMap(e)",
							"function DeserializeObject(e)",
							"function ForwardMethods(e, ret = {}, thisObj)",
							" o =>",
							"function ForwardObject(e, thisObj)",
							"function MakeCommandFunction(cmd, getConnection, thisObj, t)",
							"getConnection = obj =>",
							" function(params = {})",
							"(resolve, reject) =>",
							" r =>",
							"async function(params = {})",
							" function SerializeValue(value, source = false)",
							" function DeserializeSymbols(names)",
							"n =>",
							"n =>",
							" function DeserializeValue(desc)",
							"RPCConnect = (url, service = RPCClient) =>",
							"RPCListen = (url, service = RPCServer) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAALEAAAICAuTG9nV3JhcCA9IGZ1bmN0aW9uIExvZ1dyYXAobG9nKQogIGxvZyA9ICguLi5hcmdzKSA9PgogIGxvZyA9ICguLi5hcmdzKSA9PgogICh2YWx1ZSwgLi4uYXJncykgPT4KVmZuQWRhcHRlciA9IHZmbiA9PgogIGdldDogayA9PgogIHNldDogKGssIHYpID0+ClZmbkRlY29yYXRvciA9IHZmbiA9PgogIC5HZXRDbGFzc2VzID0gZnVuY3Rpb24qR2V0Q2xhc3NlcyhvYmopCk1hcHBlcihtYXAgPSAKKCkpCiAgc2VsZiA9IGZ1bmN0aW9uKGtleSwgdmFsdWUpCk1hcHBlcgpNYXBwZXIucHJvdG90eXBlID0gZnVuY3Rpb24oKQpNYXBwZXIKRGVmYXVsdENvbnN0cnVjdG9yKG1hcHBlciwgZm4gPSAoLi4uYXJncykgPT4gCiguLi5hcmdzKSkKICBzZWxmID0gZnVuY3Rpb24oLi4uYXJncykKRGVmYXVsdENvbnN0cnVjdG9yCkRlZmF1bHRDb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBmdW5jdGlvbigpCkRlZmF1bHRDb25zdHJ1Y3RvcgpFdmVudExvZ2dlcihpbnN0YW5jZSA9IHt9LCBjYWxsYmFjayA9IChuYW1lLCBldmVudCwgdGhpc09iaikgPT4gY29uc29sZS5sb2coJ0V2ZW50TG9nZ2VyJywgeyBuYW1lLCBldmVudCwgdGhpc09iaiB9KSkKV3JhcEV2ZW50KGhhbmRsZXIsIG5hbWUpCiAgZnVuY3Rpb24oZSkKICBnZXQob2JqLCBwcm9wKQpNZXNzYWdlUmVjZWl2ZXIKICBvbm1lc3NhZ2UobXNnKQpNZXNzYWdlVHJhbnNtaXR0ZXIKICBzZW5kTWVzc2FnZSgpCk1lc3NhZ2VUcmFuc2NlaXZlcigpCk1lc3NhZ2VUcmFuc2NlaXZlcgpNZXNzYWdlUmVjZWl2ZXIKTWVzc2FnZVRyYW5zbWl0dGVyCiAgdmFsdWU6IGluc3RhbmNlID0+CiAgY3RvciA9PgogIG5vbmUoKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIGpzb24odmVyYm9zZSA9IGZhbHNlKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIC5qcyA9IGZ1bmN0aW9uIGpzKHZlcmJvc2UgPSBmYWxzZSkKICBlbmNvZGU6IHYgPT4KICBkZWNvZGU6IHYgPT4KICAuYmpzb24gPSBmdW5jdGlvbiBianNvbigpCiAgZW5jb2RlOiB2ID0+CiAgZGVjb2RlOiB2ID0+ClJQQ0FwaShjKQpSUENBcGkKICBvID0+ClJQQ1Byb3h5KGMpClJQQ09iamVjdChpZCwgY29ubmVjdGlvbikKICByID0+ClJQQ09iamVjdApSUENGYWN0b3J5KGFwaSkKRmFjdG9yeShvcHRzKQpSUENPYmplY3QKUlBDRmFjdG9yeS5wcm90b3R5cGUgPSBmdW5jdGlvbigpClJQQ0ZhY3RvcnkKQ29ubmVjdGlvbgogIHN0YXRpYyBlcXVhbChhLCBiKQogIHN0YXRpYyBnZXQgbGFzdCgpCiAgbWFrZVNlcSgpCiAgY29uc3RydWN0b3Ioc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYyA9ICdub25lJykKICBsb2coLi4uYXJncykKICBlcnJvcihtZXNzYWdlKQogIGNsb3NlKHN0YXR1cywgcmVhc29uKQogIG9ubWVzc2FnZShtc2cpCiAgciA9PgogIHByb2Nlc3NNZXNzYWdlKGRhdGEpCiAgb25jb25uZWN0KHNvY2spCiAgb25wb25nKGRhdGEpCiAgb25lcnJvcihlcnJvcikKICBvbmNsb3NlKGNvZGUsIHdoeSkKICBjbGVhbnVwKCkKICBzZW5kTWVzc2FnZShvYmopCiAgc2VuZENvbW1hbmQoY29tbWFuZCwgcGFyYW1zID0ge30pCiAgc3RhdGljIGdldENhbGxiYWNrcyhpbnN0YW5jZSwgdmVyYm9zaXR5ID0gMCkKICAobXNnLCAuLi5hcmdzKSA9PgogICgpID0+CiAgaGFuZGxlID0gKHNvY2ssIGV2ZW50LCAuLi5hcmdzKSA9PgogIHRoZW46IGZuID0+CiAgcmVtb3ZlID0gc29jayA9PgogIG9uQ29ubmVjdChzb2NrLCByZXEpCiAgb25PcGVuKHNvY2spCiAgb25NZXNzYWdlKHNvY2ssIG1zZykKICBvbkVycm9yKHNvY2ssIGVycm9yKQogIG9uQ2xvc2Uoc29jaywgY29kZSwgd2h5KQogIG9uUG9uZyhzb2NrLCBkYXRhKQpSUENTZXJ2ZXJFbmRwb2ludChjbGFzc2VzID0ge30pCiAgbmV3KHsgY2xhc3M6IG5hbWUsIGFyZ3MgPSBbXSB9KQogIGxpc3QoKQooeyBpZCB9LCByZXNwb25kKSA9PgooeyBvYmosIG1ldGhvZCwgYXJncyA9IFtdIH0sIHJlc3BvbmQpID0+CiAgcmVzdWx0ID0+CiAgZXJyb3IgPT4KKHsgb2JqLCBlbnVtZXJhYmxlID0gdHJ1ZSB9LCByZXNwb25kKSA9PgogIG9iaiA9PgogIG9iaiA9PgooeyBvYmosIGVudW1lcmFibGUgPSB0cnVlIH0sIHJlc3BvbmQpID0+CiAgb2JqID0+Cih7IG9iaiwgZW51bWVyYWJsZSA9IHRydWUgfSwgcmVzcG9uZCkgPT4KICBvYmogPT4KICBzeW0gPT4KICB2ID0+CiAgdiA9PgooeyBvYmosIHByb3BlcnR5IH0sIHJlc3BvbmQpID0+Cih7IG9iaiwgcHJvcGVydHksIHZhbHVlIH0sIHJlc3BvbmQpID0+ClJQQ1NlcnZlcgogIG1ha2VJZCgpCiAgcHJvY2Vzc01lc3NhZ2UoZGF0YSkKUlBDU2VydmVyClJQQ0NsaWVudAogIGUgPT4KICBnZXQoKQogIHByb2Nlc3NNZXNzYWdlKHJlc3BvbnNlKQogIGNvbW1hbmQobmFtZSwgcGFyYW1zKQooYWNjZXB0LCByZWplY3QpID0+CiAgcmVzcG9uc2UgPT4KICBlID0+ClJQQ0NsaWVudApSUENTb2NrZXQodXJsLCBzZXJ2aWNlID0gUlBDU2VydmVyLCB2ZXJib3NpdHkgPSAxKQogICguLi5hcmdzKSA9PgogIGdldCBmZCgpCiAgZ2V0IHNvY2tldCgpCiAgZ2V0IGNvbm5lY3Rpb24oKQogIHJlZ2lzdGVyKGN0b3IpCiAgbGlzdGVuKG5ld193cywgb3MgPSBnbG9iYWxUaGlzLm9zKQooKSA9PgogIGNvbm5lY3QobmV3X3dzLCBvcyA9IGdsb2JhbFRoaXMub3MpCiAgZ2V0IGNvbm5lY3RlZCgpCiAgZ2V0IGxpc3QoKQogIGdldCBsYXN0KCkKUlBDU29ja2V0Ck1ha2VXZWJTb2NrZXQodXJsLCBjYWxsYmFja3MpCiAgLm9uY29ubmVjdCA9ICgpID0+CiAgLm9ub3BlbiA9ICgpID0+CiAgLm9uZXJyb3IgPSBlcnJvciA9PgogIC5vbm1lc3NhZ2UgPSBtc2cgPT4KICAub25wb25nID0gcG9uZyA9PgogIC5vbmNsb3NlID0gcmVhc29uID0+CiAgaXNUaGVuYWJsZSh2YWx1ZSkKICBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKQogIGNhbGxIYW5kbGVyKG9iaiwgZXZlbnROYW1lLCAuLi5hcmdzKQogIHBhcnNlVVJMKHVybF9vcl9wb3J0KQogIHRvU3RyaW5nKCkKR2V0UHJvcGVydGllcyhvYmosIG1ldGhvZCA9IG9iaiA9PiBPYmplY3QuCihvYmopLCBwcmVkID0gKG9iaiwgZGVwdGgpID0+IG9iaiAhPT0gT2JqZWN0LnByb3RvdHlwZSkKR2V0S2V5cyhvYmosIHByZWQgPSAob2JqLCBkZXB0aCkgPT4gb2JqICE9PSBPYmplY3QucHJvdG90eXBlKQogIG9iaiA9PgogIG9iaiA9PgogIGdldFByb3BlcnR5RGVzY3JpcHRvcnMob2JqLCBtZXJnZSA9IHRydWUsIHByZWQgPSAocHJvdG8sIGRlcHRoKSA9PiB0cnVlKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgc2V0SGFuZGxlcnMob3MsIGhhbmRsZXJzKQogIC5vbkZkID0gZnVuY3Rpb24oZmQsIHJlYWRhYmxlLCB3cml0YWJsZSkKICBzdGF0dXNSZXNwb25zZShzdWNjZXNzLCByZXN1bHRfb3JfZXJyb3IsIGRhdGEpCiAgb2JqZWN0Q29tbWFuZChmbikKICBmdW5jdGlvbihkYXRhKQogIHJlc3BvbmQgPSAoc3VjY2VzcywgcmVzdWx0KSA9PgpNYWtlTGlzdENvbW1hbmQocHJlZCA9IHYgPT4gdHlwZW9mIHYgIT0gJ2Z1bmN0aW9uJywgZGVmYXVsdHMgPSB7IG1heERlcHRoOiBJbmZpbml0eSB9KQooZGF0YSwgcmVzcG9uZCkgPT4KICAocHJvdG8sIGRlcHRoKSA9PgooYWNjLCBrZXkpID0+CiAgZ2V0UHJvdG90eXBlTmFtZShwcm90bykKRGVzZXJpYWxpemVFbnRyaWVzKGUpCiAgYSA9PgpEZXNlcmlhbGl6ZUtleXMoZSkKKFtrXSkgPT4KRGVzZXJpYWxpemVNYXAoZSkKRGVzZXJpYWxpemVPYmplY3QoZSkKRm9yd2FyZE1ldGhvZHMoZSwgcmV0ID0ge30sIHRoaXNPYmopCiAgbyA9PgpGb3J3YXJkT2JqZWN0KGUsIHRoaXNPYmopCk1ha2VDb21tYW5kRnVuY3Rpb24oY21kLCBnZXRDb25uZWN0aW9uLCB0aGlzT2JqLCB0KQogIGdldENvbm5lY3Rpb24gPSBvYmogPT4KICBmdW5jdGlvbihwYXJhbXMgPSB7fSkKKHJlc29sdmUsIHJlamVjdCkgPT4KICByID0+CiAgZnVuY3Rpb24ocGFyYW1zID0ge30pClNlcmlhbGl6ZVZhbHVlKHZhbHVlLCBzb3VyY2UgPSBmYWxzZSkKRGVzZXJpYWxpemVTeW1ib2xzKG5hbWVzKQogIG4gPT4KICBuID0+CkRlc2VyaWFsaXplVmFsdWUoZGVzYykKUlBDQ29ubmVjdCA9ICh1cmwsIHNlcnZpY2UgPSBSUENDbGllbnQpID0+ClJQQ0xpc3RlbiA9ICh1cmwsIHNlcnZpY2UgPSBSUENTZXJ2ZXIpID0+AAAAAAAAAAALEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					113,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/poll.c",
						"symkeys":
						[
							[
								2682,
								2697
							],
							[
								2779,
								2793
							],
							[
								3521,
								3549
							],
							[
								3685,
								3701
							],
							[
								3800,
								3823
							],
							[
								4126,
								4149
							],
							[
								7069,
								7099
							],
							[
								8168,
								8183
							],
							[
								9786,
								9790
							]
						],
						"symlist":
						[
							"IsConsoleHandle",
							"IsSocketHandle",
							"PFILE_PIPE_LOCAL_INFORMATION",
							"PIO_STATUS_BLOCK",
							"PFILE_INFORMATION_CLASS",
							"windows_compute_revents",
							"windows_compute_revents_socket",
							"compute_revents",
							"poll"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAALEAAAICAuTG9nV3JhcCA9IGZ1bmN0aW9uIExvZ1dyYXAobG9nKQogIGxvZyA9ICguLi5hcmdzKSA9PgogIGxvZyA9ICguLi5hcmdzKSA9PgogICh2YWx1ZSwgLi4uYXJncykgPT4KVmZuQWRhcHRlciA9IHZmbiA9PgogIGdldDogayA9PgogIHNldDogKGssIHYpID0+ClZmbkRlY29yYXRvciA9IHZmbiA9PgogIC5HZXRDbGFzc2VzID0gZnVuY3Rpb24qR2V0Q2xhc3NlcyhvYmopCk1hcHBlcihtYXAgPSAKKCkpCiAgc2VsZiA9IGZ1bmN0aW9uKGtleSwgdmFsdWUpCk1hcHBlcgpNYXBwZXIucHJvdG90eXBlID0gZnVuY3Rpb24oKQpNYXBwZXIKRGVmYXVsdENvbnN0cnVjdG9yKG1hcHBlciwgZm4gPSAoLi4uYXJncykgPT4gCiguLi5hcmdzKSkKICBzZWxmID0gZnVuY3Rpb24oLi4uYXJncykKRGVmYXVsdENvbnN0cnVjdG9yCkRlZmF1bHRDb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBmdW5jdGlvbigpCkRlZmF1bHRDb25zdHJ1Y3RvcgpFdmVudExvZ2dlcihpbnN0YW5jZSA9IHt9LCBjYWxsYmFjayA9IChuYW1lLCBldmVudCwgdGhpc09iaikgPT4gY29uc29sZS5sb2coJ0V2ZW50TG9nZ2VyJywgeyBuYW1lLCBldmVudCwgdGhpc09iaiB9KSkKV3JhcEV2ZW50KGhhbmRsZXIsIG5hbWUpCiAgZnVuY3Rpb24oZSkKICBnZXQob2JqLCBwcm9wKQpNZXNzYWdlUmVjZWl2ZXIKICBvbm1lc3NhZ2UobXNnKQpNZXNzYWdlVHJhbnNtaXR0ZXIKICBzZW5kTWVzc2FnZSgpCk1lc3NhZ2VUcmFuc2NlaXZlcigpCk1lc3NhZ2VUcmFuc2NlaXZlcgpNZXNzYWdlUmVjZWl2ZXIKTWVzc2FnZVRyYW5zbWl0dGVyCiAgdmFsdWU6IGluc3RhbmNlID0+CiAgY3RvciA9PgogIG5vbmUoKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIGpzb24odmVyYm9zZSA9IGZhbHNlKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIC5qcyA9IGZ1bmN0aW9uIGpzKHZlcmJvc2UgPSBmYWxzZSkKICBlbmNvZGU6IHYgPT4KICBkZWNvZGU6IHYgPT4KICAuYmpzb24gPSBmdW5jdGlvbiBianNvbigpCiAgZW5jb2RlOiB2ID0+CiAgZGVjb2RlOiB2ID0+ClJQQ0FwaShjKQpSUENBcGkKICBvID0+ClJQQ1Byb3h5KGMpClJQQ09iamVjdChpZCwgY29ubmVjdGlvbikKICByID0+ClJQQ09iamVjdApSUENGYWN0b3J5KGFwaSkKRmFjdG9yeShvcHRzKQpSUENPYmplY3QKUlBDRmFjdG9yeS5wcm90b3R5cGUgPSBmdW5jdGlvbigpClJQQ0ZhY3RvcnkKQ29ubmVjdGlvbgogIHN0YXRpYyBlcXVhbChhLCBiKQogIHN0YXRpYyBnZXQgbGFzdCgpCiAgbWFrZVNlcSgpCiAgY29uc3RydWN0b3Ioc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYyA9ICdub25lJykKICBsb2coLi4uYXJncykKICBlcnJvcihtZXNzYWdlKQogIGNsb3NlKHN0YXR1cywgcmVhc29uKQogIG9ubWVzc2FnZShtc2cpCiAgciA9PgogIHByb2Nlc3NNZXNzYWdlKGRhdGEpCiAgb25jb25uZWN0KHNvY2spCiAgb25wb25nKGRhdGEpCiAgb25lcnJvcihlcnJvcikKICBvbmNsb3NlKGNvZGUsIHdoeSkKICBjbGVhbnVwKCkKICBzZW5kTWVzc2FnZShvYmopCiAgc2VuZENvbW1hbmQoY29tbWFuZCwgcGFyYW1zID0ge30pCiAgc3RhdGljIGdldENhbGxiYWNrcyhpbnN0YW5jZSwgdmVyYm9zaXR5ID0gMCkKICAobXNnLCAuLi5hcmdzKSA9PgogICgpID0+CiAgaGFuZGxlID0gKHNvY2ssIGV2ZW50LCAuLi5hcmdzKSA9PgogIHRoZW46IGZuID0+CiAgcmVtb3ZlID0gc29jayA9PgogIG9uQ29ubmVjdChzb2NrLCByZXEpCiAgb25PcGVuKHNvY2spCiAgb25NZXNzYWdlKHNvY2ssIG1zZykKICBvbkVycm9yKHNvY2ssIGVycm9yKQogIG9uQ2xvc2Uoc29jaywgY29kZSwgd2h5KQogIG9uUG9uZyhzb2NrLCBkYXRhKQpSUENTZXJ2ZXJFbmRwb2ludChjbGFzc2VzID0ge30pCiAgbmV3KHsgY2xhc3M6IG5hbWUsIGFyZ3MgPSBbXSB9KQogIGxpc3QoKQooeyBpZCB9LCByZXNwb25kKSA9PgooeyBvYmosIG1ldGhvZCwgYXJncyA9IFtdIH0sIHJlc3BvbmQpID0+CiAgcmVzdWx0ID0+CiAgZXJyb3IgPT4KKHsgb2JqLCBlbnVtZXJhYmxlID0gdHJ1ZSB9LCByZXNwb25kKSA9PgogIG9iaiA9PgogIG9iaiA9PgooeyBvYmosIGVudW1lcmFibGUgPSB0cnVlIH0sIHJlc3BvbmQpID0+CiAgb2JqID0+Cih7IG9iaiwgZW51bWVyYWJsZSA9IHRydWUgfSwgcmVzcG9uZCkgPT4KICBvYmogPT4KICBzeW0gPT4KICB2ID0+CiAgdiA9PgooeyBvYmosIHByb3BlcnR5IH0sIHJlc3BvbmQpID0+Cih7IG9iaiwgcHJvcGVydHksIHZhbHVlIH0sIHJlc3BvbmQpID0+ClJQQ1NlcnZlcgogIG1ha2VJZCgpCiAgcHJvY2Vzc01lc3NhZ2UoZGF0YSkKUlBDU2VydmVyClJQQ0NsaWVudAogIGUgPT4KICBnZXQoKQogIHByb2Nlc3NNZXNzYWdlKHJlc3BvbnNlKQogIGNvbW1hbmQobmFtZSwgcGFyYW1zKQooYWNjZXB0LCByZWplY3QpID0+CiAgcmVzcG9uc2UgPT4KICBlID0+ClJQQ0NsaWVudApSUENTb2NrZXQodXJsLCBzZXJ2aWNlID0gUlBDU2VydmVyLCB2ZXJib3NpdHkgPSAxKQogICguLi5hcmdzKSA9PgogIGdldCBmZCgpCiAgZ2V0IHNvY2tldCgpCiAgZ2V0IGNvbm5lY3Rpb24oKQogIHJlZ2lzdGVyKGN0b3IpCiAgbGlzdGVuKG5ld193cywgb3MgPSBnbG9iYWxUaGlzLm9zKQooKSA9PgogIGNvbm5lY3QobmV3X3dzLCBvcyA9IGdsb2JhbFRoaXMub3MpCiAgZ2V0IGNvbm5lY3RlZCgpCiAgZ2V0IGxpc3QoKQogIGdldCBsYXN0KCkKUlBDU29ja2V0Ck1ha2VXZWJTb2NrZXQodXJsLCBjYWxsYmFja3MpCiAgLm9uY29ubmVjdCA9ICgpID0+CiAgLm9ub3BlbiA9ICgpID0+CiAgLm9uZXJyb3IgPSBlcnJvciA9PgogIC5vbm1lc3NhZ2UgPSBtc2cgPT4KICAub25wb25nID0gcG9uZyA9PgogIC5vbmNsb3NlID0gcmVhc29uID0+CiAgaXNUaGVuYWJsZSh2YWx1ZSkKICBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKQogIGNhbGxIYW5kbGVyKG9iaiwgZXZlbnROYW1lLCAuLi5hcmdzKQogIHBhcnNlVVJMKHVybF9vcl9wb3J0KQogIHRvU3RyaW5nKCkKR2V0UHJvcGVydGllcyhvYmosIG1ldGhvZCA9IG9iaiA9PiBPYmplY3QuCihvYmopLCBwcmVkID0gKG9iaiwgZGVwdGgpID0+IG9iaiAhPT0gT2JqZWN0LnByb3RvdHlwZSkKR2V0S2V5cyhvYmosIHByZWQgPSAob2JqLCBkZXB0aCkgPT4gb2JqICE9PSBPYmplY3QucHJvdG90eXBlKQogIG9iaiA9PgogIG9iaiA9PgogIGdldFByb3BlcnR5RGVzY3JpcHRvcnMob2JqLCBtZXJnZSA9IHRydWUsIHByZWQgPSAocHJvdG8sIGRlcHRoKSA9PiB0cnVlKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgc2V0SGFuZGxlcnMob3MsIGhhbmRsZXJzKQogIC5vbkZkID0gZnVuY3Rpb24oZmQsIHJlYWRhYmxlLCB3cml0YWJsZSkKICBzdGF0dXNSZXNwb25zZShzdWNjZXNzLCByZXN1bHRfb3JfZXJyb3IsIGRhdGEpCiAgb2JqZWN0Q29tbWFuZChmbikKICBmdW5jdGlvbihkYXRhKQogIHJlc3BvbmQgPSAoc3VjY2VzcywgcmVzdWx0KSA9PgpNYWtlTGlzdENvbW1hbmQocHJlZCA9IHYgPT4gdHlwZW9mIHYgIT0gJ2Z1bmN0aW9uJywgZGVmYXVsdHMgPSB7IG1heERlcHRoOiBJbmZpbml0eSB9KQooZGF0YSwgcmVzcG9uZCkgPT4KICAocHJvdG8sIGRlcHRoKSA9PgooYWNjLCBrZXkpID0+CiAgZ2V0UHJvdG90eXBlTmFtZShwcm90bykKRGVzZXJpYWxpemVFbnRyaWVzKGUpCiAgYSA9PgpEZXNlcmlhbGl6ZUtleXMoZSkKKFtrXSkgPT4KRGVzZXJpYWxpemVNYXAoZSkKRGVzZXJpYWxpemVPYmplY3QoZSkKRm9yd2FyZE1ldGhvZHMoZSwgcmV0ID0ge30sIHRoaXNPYmopCiAgbyA9PgpGb3J3YXJkT2JqZWN0KGUsIHRoaXNPYmopCk1ha2VDb21tYW5kRnVuY3Rpb24oY21kLCBnZXRDb25uZWN0aW9uLCB0aGlzT2JqLCB0KQogIGdldENvbm5lY3Rpb24gPSBvYmogPT4KICBmdW5jdGlvbihwYXJhbXMgPSB7fSkKKHJlc29sdmUsIHJlamVjdCkgPT4KICByID0+CiAgZnVuY3Rpb24ocGFyYW1zID0ge30pClNlcmlhbGl6ZVZhbHVlKHZhbHVlLCBzb3VyY2UgPSBmYWxzZSkKRGVzZXJpYWxpemVTeW1ib2xzKG5hbWVzKQogIG4gPT4KICBuID0+CkRlc2VyaWFsaXplVmFsdWUoZGVzYykKUlBDQ29ubmVjdCA9ICh1cmwsIHNlcnZpY2UgPSBSUENDbGllbnQpID0+ClJQQ0xpc3RlbiA9ICh1cmwsIHNlcnZpY2UgPSBSUENTZXJ2ZXIpID0+AAAAAAAAAAC4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "minnet-server-http.c",
			"settings":
			{
				"buffer_size": 20344,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					45,
					1,
					"insert",
					{
						"characters": "\n\n\nprintf"
					},
					"DgAAAKIBAAAAAAAAowEAAAAAAAAAAAAAowEAAAAAAAClAQAAAAAAAAAAAAClAQAAAAAAAKYBAAAAAAAAAAAAAKYBAAAAAAAAqAEAAAAAAAAAAAAAowEAAAAAAACjAQAAAAAAAAIAAAAgIKYBAAAAAAAApwEAAAAAAAAAAAAApwEAAAAAAACpAQAAAAAAAAAAAACkAQAAAAAAAKQBAAAAAAAAAgAAACAgpwEAAAAAAACoAQAAAAAAAAAAAACoAQAAAAAAAKkBAAAAAAAAAAAAAKkBAAAAAAAAqgEAAAAAAAAAAAAAqgEAAAAAAACrAQAAAAAAAAAAAACrAQAAAAAAAKwBAAAAAAAAAAAAAKwBAAAAAAAArQEAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKIBAAAAAAAAogEAAAAAAAAAAAAAAADwvw"
				],
				[
					46,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAK0BAAAAAAAArwEAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK0BAAAAAAAArQEAAAAAAAAAAAAAAADwvw"
				],
				[
					47,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAK4BAAAAAAAAsAEAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4BAAAAAAAArgEAAAAAAAAAAAAAAADwvw"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "vhost_"
					},
					"BgAAAK8BAAAAAAAAsAEAAAAAAAAAAAAAsAEAAAAAAACxAQAAAAAAAAAAAACxAQAAAAAAALIBAAAAAAAAAAAAALIBAAAAAAAAswEAAAAAAAAAAAAAswEAAAAAAAC0AQAAAAAAAAAAAAC0AQAAAAAAALUBAAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8BAAAAAAAArwEAAAAAAAAAAAAAAADwvw"
				],
				[
					50,
					1,
					"insert_completion",
					{
						"completion": "vhost_options_create",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "vhost_options_create"
					},
					"AgAAAK8BAAAAAAAArwEAAAAAAAAGAAAAdmhvc3RfrwEAAAAAAADDAQAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUBAAAAAAAAtQEAAAAAAAAAAAAAAADwvw"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " %s,"
					},
					"BAAAAMMBAAAAAAAAxAEAAAAAAAAAAAAAxAEAAAAAAADFAQAAAAAAAAAAAADFAQAAAAAAAMYBAAAAAAAAAAAAAMYBAAAAAAAAxwEAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMBAAAAAAAAwwEAAAAAAAAAAAAAAADwvw"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMcBAAAAAAAAyAEAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcBAAAAAAAAxwEAAAAAAAAAAAAAAADwvw"
				],
				[
					53,
					2,
					"left_delete",
					null,
					"AgAAAMcBAAAAAAAAxwEAAAAAAAABAAAAIMYBAAAAAAAAxgEAAAAAAAABAAAALA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgBAAAAAAAAyAEAAAAAAAAAAAAAAADwvw"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": " %s"
					},
					"AwAAAMYBAAAAAAAAxwEAAAAAAAAAAAAAxwEAAAAAAADIAQAAAAAAAAAAAADIAQAAAAAAAMkBAAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMYBAAAAAAAAxgEAAAAAAAAAAAAAAADwvw"
				],
				[
					56,
					1,
					"left_delete",
					null,
					"AQAAAMkBAAAAAAAAyQEAAAAAAAABAAAAIg",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoBAAAAAAAAygEAAAAAAAAAAAAAAADwvw"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "\\n\","
					},
					"BAAAAMkBAAAAAAAAygEAAAAAAAAAAAAAygEAAAAAAADLAQAAAAAAAAAAAADLAQAAAAAAAMwBAAAAAAAAAAAAAMwBAAAAAAAAzQEAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkBAAAAAAAAyQEAAAAAAAAAAAAAAADwvw"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " name,value"
					},
					"CwAAAM0BAAAAAAAAzgEAAAAAAAAAAAAAzgEAAAAAAADPAQAAAAAAAAAAAADPAQAAAAAAANABAAAAAAAAAAAAANABAAAAAAAA0QEAAAAAAAAAAAAA0QEAAAAAAADSAQAAAAAAAAAAAADSAQAAAAAAANMBAAAAAAAAAAAAANMBAAAAAAAA1AEAAAAAAAAAAAAA1AEAAAAAAADVAQAAAAAAAAAAAADVAQAAAAAAANYBAAAAAAAAAAAAANYBAAAAAAAA1wEAAAAAAAAAAAAA1wEAAAAAAADYAQAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0BAAAAAAAAzQEAAAAAAAAAAAAAAADwvw"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANkBAAAAAAAA2gEAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkBAAAAAAAA2QEAAAAAAAAAAAAAAADwvw"
				],
				[
					65,
					1,
					"revert",
					null,
					"",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoBAAAAAAAA2gEAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKMBAAAAAAAApAEAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMBAAAAAAAAowEAAAAAAAAAAAAAAAA0QA"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": " #"
					},
					"AgAAAKQBAAAAAAAApQEAAAAAAAAAAAAApQEAAAAAAACmAQAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQBAAAAAAAApAEAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					2,
					"left_delete",
					null,
					"AgAAAKUBAAAAAAAApQEAAAAAAAABAAAAI6QBAAAAAAAApAEAAAAAAAABAAAAIA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKYBAAAAAAAApgEAAAAAAAAAAAAAAADwvw"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "#ifdef"
					},
					"BgAAAKQBAAAAAAAApQEAAAAAAAAAAAAApQEAAAAAAACmAQAAAAAAAAAAAACmAQAAAAAAAKcBAAAAAAAAAAAAAKcBAAAAAAAAqAEAAAAAAAAAAAAAqAEAAAAAAACpAQAAAAAAAAAAAACpAQAAAAAAAKoBAAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQBAAAAAAAApAEAAAAAAAAAAAAAAADwvw"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": " DEBUG_OUTPUT"
					},
					"DQAAAKoBAAAAAAAAqwEAAAAAAAAAAAAAqwEAAAAAAACsAQAAAAAAAAAAAACsAQAAAAAAAK0BAAAAAAAAAAAAAK0BAAAAAAAArgEAAAAAAAAAAAAArgEAAAAAAACvAQAAAAAAAAAAAACvAQAAAAAAALABAAAAAAAAAAAAALABAAAAAAAAsQEAAAAAAAAAAAAAsQEAAAAAAACyAQAAAAAAAAAAAACyAQAAAAAAALMBAAAAAAAAAAAAALMBAAAAAAAAtAEAAAAAAAAAAAAAtAEAAAAAAAC1AQAAAAAAAAAAAAC1AQAAAAAAALYBAAAAAAAAAAAAALYBAAAAAAAAtwEAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKoBAAAAAAAAqgEAAAAAAAAAAAAAAADwvw"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "#endif"
					},
					"BgAAAO8BAAAAAAAA8AEAAAAAAAAAAAAA8AEAAAAAAADxAQAAAAAAAAAAAADxAQAAAAAAAPIBAAAAAAAAAAAAAPIBAAAAAAAA8wEAAAAAAAAAAAAA8wEAAAAAAAD0AQAAAAAAAAAAAAD0AQAAAAAAAPUBAAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8BAAAAAAAA7wEAAAAAAAAAAAAAAMBnQA"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPUBAAAAAAAA9gEAAAAAAAAAAAAA9gEAAAAAAAD4AQAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUBAAAAAAAA9QEAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "minnet-server.c",
			"settings":
			{
				"buffer_size": 10937,
				"line_ending": "Unix"
			}
		},
		{
			"file": "poll.c",
			"settings":
			{
				"buffer_size": 15927,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"cut",
					null,
					"AQAAAG0EAAAAAAAAbQQAAAAAAAAXAAAAICYmICFkZWZpbmVkIF9fQ1lHV0lOX18",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbQQAAAAAAACEBAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					2,
					"paste",
					null,
					"AgAAAG0EAAAAAAAAhAQAAAAAAAAAAAAAhAQAAAAAAACbBAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbQQAAAAAAABtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "MSYS"
					},
					"BQAAAJMEAAAAAAAAlAQAAAAAAAAAAAAAlAQAAAAAAACUBAAAAAAAAAYAAABDWUdXSU6UBAAAAAAAAJUEAAAAAAAAAAAAAJUEAAAAAAAAlgQAAAAAAAAAAAAAlgQAAAAAAACXBAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkwQAAAAAAACZBAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"left_delete",
					null,
					"AQAAAJAEAAAAAAAAkAQAAAAAAAABAAAAIA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkQQAAAAAAACRBAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "/("
					},
					"AgAAAJAEAAAAAAAAkQQAAAAAAAAAAAAAkQQAAAAAAACSBAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkAQAAAAAAACQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					2,
					"left_delete",
					null,
					"AgAAAJEEAAAAAAAAkQQAAAAAAAABAAAAKJAEAAAAAAAAkAQAAAAAAAABAAAALw",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkgQAAAAAAACSBAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAJAEAAAAAAAAkQQAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkAQAAAAAAACQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAJkEAAAAAAAAmgQAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmQQAAAAAAACZBAAAAAAAAP///////+9/"
				],
				[
					24,
					1,
					"left_delete",
					null,
					"AQAAAHkEAAAAAAAAeQQAAAAAAAABAAAAIA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAegQAAAAAAAB6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "/("
					},
					"AgAAAHkEAAAAAAAAegQAAAAAAAAAAAAAegQAAAAAAAB7BAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeQQAAAAAAAB5BAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					2,
					"left_delete",
					null,
					"AgAAAHoEAAAAAAAAegQAAAAAAAABAAAAKHkEAAAAAAAAeQQAAAAAAAABAAAALw",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAewQAAAAAAAB7BAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAHkEAAAAAAAAegQAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeQQAAAAAAAB5BAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAIQEAAAAAAAAhQQAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhAQAAAAAAACEBAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"left_delete",
					null,
					"AQAAAGYEAAAAAAAAZgQAAAAAAAABAAAAIA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZwQAAAAAAABnBAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAGYEAAAAAAAAZwQAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZgQAAAAAAABmBAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAG0EAAAAAAAAbgQAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbQQAAAAAAABtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"revert",
					null,
					"",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbgQAAAAAAABuBAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "event-emitter.js",
			"settings":
			{
				"buffer_size": 1296,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAADwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAA8FAAAAAAAAEAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwUAAAAAAAAPBQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "rpc.js",
			"settings":
			{
				"buffer_size": 28964,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					15,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAKcsAAAAAAAAqSwAAAAAAAAAAAAAKCwAAAAAAAAqLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApywAAAAAAAAoLAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "\n\ninherits"
					},
					"CgAAACYsAAAAAAAAJywAAAAAAAAAAAAAJywAAAAAAAAoLAAAAAAAAAAAAAAoLAAAAAAAACksAAAAAAAAAAAAACksAAAAAAAAKiwAAAAAAAAAAAAAKiwAAAAAAAArLAAAAAAAAAAAAAArLAAAAAAAACwsAAAAAAAAAAAAACwsAAAAAAAALSwAAAAAAAAAAAAALSwAAAAAAAAuLAAAAAAAAAAAAAAuLAAAAAAAAC8sAAAAAAAAAAAAAC8sAAAAAAAAMCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJiwAAAAAAAAmLAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADAsAAAAAAAAMiwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMCwAAAAAAAAwLAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "Connection"
					},
					"CgAAADEsAAAAAAAAMiwAAAAAAAAAAAAAMiwAAAAAAAAzLAAAAAAAAAAAAAAzLAAAAAAAADQsAAAAAAAAAAAAADQsAAAAAAAANSwAAAAAAAAAAAAANSwAAAAAAAA2LAAAAAAAAAAAAAA2LAAAAAAAADcsAAAAAAAAAAAAADcsAAAAAAAAOCwAAAAAAAAAAAAAOCwAAAAAAAA5LAAAAAAAAAAAAAA5LAAAAAAAADosAAAAAAAAAAAAADosAAAAAAAAOywAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMSwAAAAAAAAxLAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADssAAAAAAAAPCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOywAAAAAAAA7LAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADwsAAAAAAAAPSwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPCwAAAAAAAA8LAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "EventEmitter"
					},
					"DAAAAD0sAAAAAAAAPiwAAAAAAAAAAAAAPiwAAAAAAAA/LAAAAAAAAAAAAAA/LAAAAAAAAEAsAAAAAAAAAAAAAEAsAAAAAAAAQSwAAAAAAAAAAAAAQSwAAAAAAABCLAAAAAAAAAAAAABCLAAAAAAAAEMsAAAAAAAAAAAAAEMsAAAAAAAARCwAAAAAAAAAAAAARCwAAAAAAABFLAAAAAAAAAAAAABFLAAAAAAAAEYsAAAAAAAAAAAAAEYsAAAAAAAARywAAAAAAAAAAAAARywAAAAAAABILAAAAAAAAAAAAABILAAAAAAAAEksAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPSwAAAAAAAA9LAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEosAAAAAAAASywAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASiwAAAAAAABKLAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABNAAAAAAAAAAsAAAB3ZWFrQXNzaWduLA",
					"AQAAAAAAAAABAAAATAAAAAAAAABXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAKkXAAAAAAAAqxcAAAAAAAAAAAAAfhcAAAAAAACAFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqRcAAAAAAAB+FwAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAA4EAAAAAAAAEAQAAAAAAAAAAAAAxwIAAAAAAADJAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwIAAAAAAAAOBAAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAJI9AAAAAAAAkz0AAAAAAAAAAAAAkz0AAAAAAACXPQAAAAAAAAAAAACXPQAAAAAAAJg9AAAAAAAAAAAAAJg9AAAAAAAAmT0AAAAAAAAAAAAAmT0AAAAAAACaPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkj0AAAAAAACSPQAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": " api;"
					},
					"BQAAAJo9AAAAAAAAmz0AAAAAAAAAAAAAmz0AAAAAAACcPQAAAAAAAAAAAACcPQAAAAAAAJ09AAAAAAAAAAAAAJ09AAAAAAAAnj0AAAAAAAAAAAAAnj0AAAAAAACfPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmj0AAAAAAACaPQAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJ89AAAAAAAAoD0AAAAAAAAAAAAAoD0AAAAAAACkPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnz0AAAAAAACfPQAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AwAAANQ9AAAAAAAA1T0AAAAAAAAAAAAAoD0AAAAAAACgPQAAAAAAAAQAAAAgICAg0T0AAAAAAADSPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1D0AAAAAAADUPQAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAANI9AAAAAAAA0z0AAAAAAAAAAAAA0z0AAAAAAADUPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0j0AAAAAAADSPQAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAANQ9AAAAAAAA1T0AAAAAAAAAAAAA1T0AAAAAAADWPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1D0AAAAAAADUPQAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAANU9AAAAAAAA1j0AAAAAAAAAAAAA1j0AAAAAAADXPQAAAAAAAAAAAADXPQAAAAAAANg9AAAAAAAAAAAAANg9AAAAAAAA2T0AAAAAAAAAAAAA2T0AAAAAAADaPQAAAAAAAAAAAADaPQAAAAAAANs9AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1T0AAAAAAADVPQAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": " api"
					},
					"BAAAANs9AAAAAAAA3D0AAAAAAAAAAAAA3D0AAAAAAADdPQAAAAAAAAAAAADdPQAAAAAAAN49AAAAAAAAAAAAAN49AAAAAAAA3z0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2z0AAAAAAADbPQAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": " ??"
					},
					"AwAAAN89AAAAAAAA4D0AAAAAAAAAAAAA4D0AAAAAAADhPQAAAAAAAAAAAADhPQAAAAAAAOI9AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3z0AAAAAAADfPQAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOI9AAAAAAAA5D0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4j0AAAAAAADiPQAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "api="
					},
					"BAAAAOM9AAAAAAAA5D0AAAAAAAAAAAAA5D0AAAAAAADlPQAAAAAAAAAAAADlPQAAAAAAAOY9AAAAAAAAAAAAAOY9AAAAAAAA5z0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4z0AAAAAAADjPQAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					17,
					"right_delete",
					null,
					"EQAAAOc9AAAAAAAA5z0AAAAAAAABAAAAKec9AAAAAAAA5z0AAAAAAAABAAAAIOc9AAAAAAAA5z0AAAAAAAABAAAAOuc9AAAAAAAA5z0AAAAAAAABAAAAIOc9AAAAAAAA5z0AAAAAAAABAAAAbec9AAAAAAAA5z0AAAAAAAABAAAAZec9AAAAAAAA5z0AAAAAAAABAAAAbec9AAAAAAAA5z0AAAAAAAABAAAAb+c9AAAAAAAA5z0AAAAAAAABAAAAaec9AAAAAAAA5z0AAAAAAAABAAAAeuc9AAAAAAAA5z0AAAAAAAABAAAAZec9AAAAAAAA5z0AAAAAAAABAAAAKOc9AAAAAAAA5z0AAAAAAAABAAAAKOc9AAAAAAAA5z0AAAAAAAABAAAAKec9AAAAAAAA5z0AAAAAAAABAAAAIOc9AAAAAAAA5z0AAAAAAAABAAAAPec9AAAAAAAA5z0AAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAA5z0AAAAAAADnPQAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"left_delete",
					null,
					"AQAAAPg9AAAAAAAA+D0AAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA+T0AAAAAAAD5PQAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAPg9AAAAAAAA+T0AAAAAAAAAAAAA+T0AAAAAAAD6PQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+D0AAAAAAAD4PQAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"left_delete",
					null,
					"AQAAAKA9AAAAAAAAoD0AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAoT0AAAAAAAChPQAAAAAAAAAAAAAAEI1A"
				],
				[
					235,
					1,
					"cut",
					null,
					"AQAAAFsAAAAAAAAAWwAAAAAAAAAIAAAAbWVtb2l6ZSw",
					"AQAAAAAAAAABAAAAWwAAAAAAAABjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					283,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AwAAAPBrAAAAAAAA8WsAAAAAAAAAAAAA8WsAAAAAAADxawAAAAAAAAEAAAAg8WsAAAAAAADyawAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8GsAAAAAAADxawAAAAAAAAAAAAAAAPC/"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJhtAAAAAAAAmW0AAAAAAAAAAAAAmW0AAAAAAACabQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmG0AAAAAAACYbQAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					3,
					"left_delete",
					null,
					"AwAAAGMAAAAAAAAAYwAAAAAAAAARAAAAZ2V0UHJvdG90eXBlQ2hhaW5iAAAAAAAAAGIAAAAAAAAAAQAAACBhAAAAAAAAAGEAAAAAAAAAAQAAACw",
					"AQAAAAAAAAABAAAAYwAAAAAAAAB0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": "typeof"
					},
					"BgAAAHYEAAAAAAAAdwQAAAAAAAAAAAAAdwQAAAAAAAB4BAAAAAAAAAAAAAB4BAAAAAAAAHkEAAAAAAAAAAAAAHkEAAAAAAAAegQAAAAAAAAAAAAAegQAAAAAAAB7BAAAAAAAAAAAAAB7BAAAAAAAAHwEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgQAAAAAAAB2BAAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": " obj[name"
					},
					"CQAAAHwEAAAAAAAAfQQAAAAAAAAAAAAAfQQAAAAAAAB+BAAAAAAAAAAAAAB+BAAAAAAAAH8EAAAAAAAAAAAAAH8EAAAAAAAAgAQAAAAAAAAAAAAAgAQAAAAAAACBBAAAAAAAAAAAAACBBAAAAAAAAIIEAAAAAAAAAAAAAIIEAAAAAAAAgwQAAAAAAAAAAAAAgwQAAAAAAACEBAAAAAAAAAAAAACEBAAAAAAAAIUEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAQAAAAAAAB8BAAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": "]["
					},
					"AgAAAIUEAAAAAAAAhgQAAAAAAAAAAAAAhgQAAAAAAACHBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQQAAAAAAACFBAAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					1,
					"left_delete",
					null,
					"AQAAAIYEAAAAAAAAhgQAAAAAAAABAAAAWw",
					"AQAAAAAAAAABAAAAhwQAAAAAAACHBAAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAIYEAAAAAAAAhwQAAAAAAAAAAAAAhwQAAAAAAACIBAAAAAAAAAAAAACIBAAAAAAAAIkEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgQAAAAAAACGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": " 'function'"
					},
					"CwAAAIkEAAAAAAAAigQAAAAAAAAAAAAAigQAAAAAAACLBAAAAAAAAAAAAACLBAAAAAAAAIwEAAAAAAAAAAAAAIwEAAAAAAAAjQQAAAAAAAAAAAAAjQQAAAAAAACOBAAAAAAAAAAAAACOBAAAAAAAAI8EAAAAAAAAAAAAAI8EAAAAAAAAkAQAAAAAAAAAAAAAkAQAAAAAAACRBAAAAAAAAAAAAACRBAAAAAAAAJIEAAAAAAAAAAAAAJIEAAAAAAAAkwQAAAAAAAAAAAAAkwQAAAAAAACUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQQAAAAAAACJBAAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAJQEAAAAAAAAlQQAAAAAAAAAAAAAlQQAAAAAAACWBAAAAAAAAAAAAACWBAAAAAAAAJcEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAQAAAAAAACUBAAAAAAAAAAAAAAAAPC/"
				],
				[
					325,
					1,
					"insert",
					{
						"characters": " 'prototype"
					},
					"CwAAAJcEAAAAAAAAmAQAAAAAAAAAAAAAmAQAAAAAAACZBAAAAAAAAAAAAACZBAAAAAAAAJoEAAAAAAAAAAAAAJoEAAAAAAAAmwQAAAAAAAAAAAAAmwQAAAAAAACcBAAAAAAAAAAAAACcBAAAAAAAAJ0EAAAAAAAAAAAAAJ0EAAAAAAAAngQAAAAAAAAAAAAAngQAAAAAAACfBAAAAAAAAAAAAACfBAAAAAAAAKAEAAAAAAAAAAAAAKAEAAAAAAAAoQQAAAAAAAAAAAAAoQQAAAAAAACiBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwQAAAAAAACXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAKIEAAAAAAAAowQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogQAAAAAAACiBAAAAAAAAAAAAAAAAPC/"
				],
				[
					327,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAKMEAAAAAAAApAQAAAAAAAAAAAAApAQAAAAAAAClBAAAAAAAAAAAAAClBAAAAAAAAKYEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowQAAAAAAACjBAAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": " obj[name]"
					},
					"CgAAAKYEAAAAAAAApwQAAAAAAAAAAAAApwQAAAAAAACoBAAAAAAAAAAAAACoBAAAAAAAAKkEAAAAAAAAAAAAAKkEAAAAAAAAqgQAAAAAAAAAAAAAqgQAAAAAAACrBAAAAAAAAAAAAACrBAAAAAAAAKwEAAAAAAAAAAAAAKwEAAAAAAAArQQAAAAAAAAAAAAArQQAAAAAAACuBAAAAAAAAAAAAACuBAAAAAAAAK8EAAAAAAAAAAAAAK8EAAAAAAAAsAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgQAAAAAAACmBAAAAAAAAAAAAAAAAPC/"
				],
				[
					329,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAALAEAAAAAAAAsQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAQAAAAAAACwBAAAAAAAAAAAAAAAAPC/"
				],
				[
					332,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAALEEAAAAAAAAsgQAAAAAAAAAAAAAsgQAAAAAAACyBAAAAAAAAB8AAAB0eXBlcy5pc0NvbnN0cnVjdG9yKG9ialtuYW1lXSkp",
					"AQAAAAAAAAABAAAAsQQAAAAAAADQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					333,
					1,
					"right_delete",
					null,
					"AQAAALIEAAAAAAAAsgQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAsgQAAAAAAACyBAAAAAAAAAAAAAAAAPC/"
				],
				[
					347,
					4,
					"left_delete",
					null,
					"BAAAAFwAAAAAAAAAXAAAAAAAAAAFAAAAdHlwZXNbAAAAAAAAAFsAAAAAAAAAAQAAACBaAAAAAAAAAFoAAAAAAAAAAQAAACBZAAAAAAAAAFkAAAAAAAAAAQAAACw",
					"AQAAAAAAAAABAAAAXAAAAAAAAABhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					356,
					1,
					"left_delete",
					null,
					"AQAAAEMAAAAAAAAAQwAAAAAAAAAmAAAAaW1wb3J0IHsgICBleHRlbmRBcnJheSB9IGZyb20gJ3V0aWwnOwo",
					"AQAAAAAAAAABAAAAQwAAAAAAAABpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					363,
					1,
					"left_delete",
					null,
					"AQAAAJcAAAAAAAAAlwAAAAAAAAAeAAAAZXh0ZW5kQXJyYXkoQXJyYXkucHJvdG90eXBlKTsK",
					"AQAAAAAAAAABAAAAlwAAAAAAAAC1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					372,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAALI9AAAAAAAAsz0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsj0AAAAAAACyPQAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"insert",
					{
						"characters": "\nimport"
					},
					"BwAAAEIAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEUAAAAAAAAAAAAAAEUAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAABHAAAAAAAAAAAAAABHAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAASQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgAAAAAAAABCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					390,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEkAAAAAAAAASgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQAAAAAAAABJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					391,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEoAAAAAAAAATAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgAAAAAAAABKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": " inherits"
					},
					"CQAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABNAAAAAAAAAAAAAABNAAAAAAAAAE4AAAAAAAAAAAAAAE4AAAAAAAAATwAAAAAAAAAAAAAATwAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFEAAAAAAAAAAAAAAFEAAAAAAAAAUgAAAAAAAAAAAAAAUgAAAAAAAABTAAAAAAAAAAAAAABTAAAAAAAAAFQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwAAAAAAAABLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					393,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFQAAAAAAAAAVQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAAAAAAAAABUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": " from"
					},
					"BQAAAFYAAAAAAAAAVwAAAAAAAAAAAAAAVwAAAAAAAABYAAAAAAAAAAAAAABYAAAAAAAAAFkAAAAAAAAAAAAAAFkAAAAAAAAAWgAAAAAAAAAAAAAAWgAAAAAAAABbAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgAAAAAAAABWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					396,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFsAAAAAAAAAXAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwAAAAAAAABbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					397,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAFwAAAAAAAAAXgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAAAAAAAAABcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					398,
					1,
					"insert",
					{
						"characters": "util"
					},
					"BAAAAF0AAAAAAAAAXgAAAAAAAAAAAAAAXgAAAAAAAABfAAAAAAAAAAAAAABfAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAYQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQAAAAAAAABdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					400,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGIAAAAAAAAAYwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgAAAAAAAABiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					451,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAPwrAAAAAAAA/SsAAAAAAAAAAAAA/SsAAAAAAAD+KwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/CsAAAAAAAD8KwAAAAAAAAAAAAAAAPC/"
				],
				[
					459,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAEMAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABFAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					468,
					1,
					"left_delete",
					null,
					"AQAAADhxAAAAAAAAOHEAAAAAAAAOAAAAICBEZWJ1Z0ZsYWdzLAo",
					"AQAAAAAAAAABAAAAOHEAAAAAAABGcQAAAAAAAAAAAAAAAAAA"
				],
				[
					479,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAADpEAAAAAAAAPEQAAAAAAAAAAAAACkQAAAAAAAAMRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACkQAAAAAAAA6RAAAAAAAAAAAAAAAAPC/"
				],
				[
					482,
					2,
					"toggle_comment",
					{
						"block": true
					},
					"BgAAAJ1BAAAAAAAAnkEAAAAAAAAAAAAAnkEAAAAAAACgQQAAAAAAAAAAAACdQQAAAAAAAJ1BAAAAAAAAAQAAAHidQQAAAAAAAJ9BAAAAAAAAAAAAAJ1BAAAAAAAAnUEAAAAAAAACAAAALyqdQQAAAAAAAJ1BAAAAAAAAAgAAACov",
					"AQAAAAAAAAABAAAAnUEAAAAAAACdQQAAAAAAAAAAAAAAAPC/"
				],
				[
					485,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJ1BAAAAAAAAnkEAAAAAAAAAAAAAnkEAAAAAAACfQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnUEAAAAAAACdQQAAAAAAAAAAAAAAAPC/"
				],
				[
					496,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA0B8AAAAAAADQHwAAAAAAAAAAAAAAAPC/"
				],
				[
					504,
					1,
					"insert",
					{
						"characters": "."
					},
					"AgAAAIQAAAAAAAAAhQAAAAAAAAAAAAAAhQAAAAAAAACFAAAAAAAAAAYAAABldmVudHM",
					"AQAAAAAAAAABAAAAhAAAAAAAAACKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					505,
					1,
					"left_delete",
					null,
					"AQAAAIQAAAAAAAAAhAAAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAhQAAAAAAAACFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					506,
					1,
					"insert",
					{
						"characters": "./event-emit"
					},
					"DAAAAIQAAAAAAAAAhQAAAAAAAAAAAAAAhQAAAAAAAACGAAAAAAAAAAAAAACGAAAAAAAAAIcAAAAAAAAAAAAAAIcAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACJAAAAAAAAAAAAAACJAAAAAAAAAIoAAAAAAAAAAAAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAI0AAAAAAAAAAAAAAI0AAAAAAAAAjgAAAAAAAAAAAAAAjgAAAAAAAACPAAAAAAAAAAAAAACPAAAAAAAAAJAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					507,
					1,
					"insert",
					{
						"characters": "ter.js"
					},
					"BgAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACSAAAAAAAAAAAAAACSAAAAAAAAAJMAAAAAAAAAAAAAAJMAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACVAAAAAAAAAAAAAACVAAAAAAAAAJYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					514,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJkAAAAAAAAAmgAAAAAAAAAAAAAAmgAAAAAAAACbAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQAAAAAAAACZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					534,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAABmAAAALy9pbXBvcnQgaW5zcGVjdCBmcm9tICdpbnNwZWN0JzsKLy9pbXBvcnQgKiBhcyBianNvbiBmcm9tICdianNvbic7Ci8vaW1wb3J0IHsgaW5oZXJpdHMgfSBmcm9tICd1dGlsJzsK",
					"AQAAAAAAAAABAAAAAAAAAAAAAABmAAAAAAAAAAAAAAAAAAAA"
				],
				[
					537,
					1,
					"left_delete",
					null,
					"AQAAADMAAAAAAAAAMwAAAAAAAAAhAAAALy9pbXBvcnQgaW5zcGVjdCBmcm9tICdpbnNwZWN0JzsK",
					"AQAAAAAAAAABAAAAMwAAAAAAAABUAAAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 11227,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"insert",
					{
						"characters": "\nlist"
					},
					"BgAAAFwVAAAAAAAAXRUAAAAAAAAAAAAAXRUAAAAAAABfFQAAAAAAAAAAAABfFQAAAAAAAGAVAAAAAAAAAAAAAGAVAAAAAAAAYRUAAAAAAAAAAAAAYRUAAAAAAABiFQAAAAAAAAAAAABiFQAAAAAAAGMVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXBUAAAAAAABcFQAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGMVAAAAAAAAZRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYxUAAAAAAABjFQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "APPEND"
					},
					"BgAAAGQVAAAAAAAAZRUAAAAAAAAAAAAAZRUAAAAAAABmFQAAAAAAAAAAAABmFQAAAAAAAGcVAAAAAAAAAAAAAGcVAAAAAAAAaBUAAAAAAAAAAAAAaBUAAAAAAABpFQAAAAAAAAAAAABpFQAAAAAAAGoVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZBUAAAAAAABkFQAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " LIBWEBSOCKET"
					},
					"DQAAAGoVAAAAAAAAaxUAAAAAAAAAAAAAaxUAAAAAAABsFQAAAAAAAAAAAABsFQAAAAAAAG0VAAAAAAAAAAAAAG0VAAAAAAAAbhUAAAAAAAAAAAAAbhUAAAAAAABvFQAAAAAAAAAAAABvFQAAAAAAAHAVAAAAAAAAAAAAAHAVAAAAAAAAcRUAAAAAAAAAAAAAcRUAAAAAAAByFQAAAAAAAAAAAAByFQAAAAAAAHMVAAAAAAAAAAAAAHMVAAAAAAAAdBUAAAAAAAAAAAAAdBUAAAAAAAB1FQAAAAAAAAAAAAB1FQAAAAAAAHYVAAAAAAAAAAAAAHYVAAAAAAAAdxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAahUAAAAAAABqFQAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "S_C_FLAGS"
					},
					"CQAAAHcVAAAAAAAAeBUAAAAAAAAAAAAAeBUAAAAAAAB5FQAAAAAAAAAAAAB5FQAAAAAAAHoVAAAAAAAAAAAAAHoVAAAAAAAAexUAAAAAAAAAAAAAexUAAAAAAAB8FQAAAAAAAAAAAAB8FQAAAAAAAH0VAAAAAAAAAAAAAH0VAAAAAAAAfhUAAAAAAAAAAAAAfhUAAAAAAAB/FQAAAAAAAAAAAAB/FQAAAAAAAIAVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdxUAAAAAAAB3FQAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIAVAAAAAAAAgRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgBUAAAAAAACAFQAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAIEVAAAAAAAAgxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgRUAAAAAAACBFQAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "-D"
					},
					"AgAAAIIVAAAAAAAAgxUAAAAAAAAAAAAAgxUAAAAAAACEFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAghUAAAAAAACCFQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"paste",
					null,
					"AQAAAIQVAAAAAAAAmRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhBUAAAAAAACEFQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"cut",
					null,
					"AQAAAIIVAAAAAAAAghUAAAAAAAAXAAAALURMV1NfSEFWRV9ITUFDX0NUWF9uZXc",
					"AQAAAAAAAAABAAAAghUAAAAAAACZFQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFoVAAAAAAAAWxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWhUAAAAAAABaFQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"paste",
					null,
					"AQAAAFsVAAAAAAAAchUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWxUAAAAAAABbFQAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"left_delete",
					null,
					"AQAAAHUVAAAAAAAAdRUAAAAAAAAoAAAAICBsaXN0KEFQUEVORCBMSUJXRUJTT0NLRVRTX0NfRkxBR1MgIiIpCg",
					"AQAAAAAAAAABAAAAdRUAAAAAAACdFQAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"left_delete",
					null,
					"AQAAAFoVAAAAAAAAWhUAAAAAAAAYAAAAIC1ETFdTX0hBVkVfSE1BQ19DVFhfbmV3",
					"AQAAAAAAAAABAAAAWhUAAAAAAAByFQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "cmake/BuildLibwebsockets.cmake",
			"settings":
			{
				"buffer_size": 5263,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGISAAAAAAAAYxIAAAAAAAAAAAAAYxIAAAAAAABnEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYhIAAAAAAABiEgAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"paste",
					null,
					"AQAAAGcSAAAAAAAAfBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZxIAAAAAAABnEgAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " ON"
					},
					"AwAAAHwSAAAAAAAAfRIAAAAAAAAAAAAAfRIAAAAAAAB+EgAAAAAAAAAAAAB+EgAAAAAAAH8SAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfBIAAAAAAAB8EgAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFASAAAAAAAAURIAAAAAAAAAAAAAURIAAAAAAABVEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUBIAAAAAAABQEgAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"paste",
					null,
					"AQAAAFUSAAAAAAAAbBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVRIAAAAAAABVEgAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " ON"
					},
					"AwAAAGwSAAAAAAAAbRIAAAAAAAAAAAAAbRIAAAAAAABuEgAAAAAAAAAAAABuEgAAAAAAAG8SAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbBIAAAAAAABsEgAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIESAAAAAAAAghIAAAAAAAAAAAAAghIAAAAAAACGEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgRIAAAAAAACBEgAAAAAAAAAAAAAAwHJA"
				],
				[
					20,
					1,
					"paste",
					null,
					"AQAAAIYSAAAAAAAAmRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhhIAAAAAAACGEgAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " ON"
					},
					"AwAAAJkSAAAAAAAAmhIAAAAAAAAAAAAAmhIAAAAAAACbEgAAAAAAAAAAAACbEgAAAAAAAJwSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmRIAAAAAAACZEgAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAKESAAAAAAAAohIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoRIAAAAAAAChEgAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAEASAAAAAAAAQRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQBIAAAAAAABAEgAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " 3"
					},
					"AgAAACwSAAAAAAAALRIAAAAAAAAAAAAALRIAAAAAAAAuEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALBIAAAAAAAAsEgAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					2,
					"left_delete",
					null,
					"AgAAAC0SAAAAAAAALRIAAAAAAAABAAAAMywSAAAAAAAALBIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAALhIAAAAAAAAuEgAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAACwSAAAAAAAALRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALBIAAAAAAAAsEgAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADwSAAAAAAAAPRIAAAAAAAAAAAAAPRIAAAAAAABBEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPBIAAAAAAAA8EgAAAAAAAP///////+9/"
				],
				[
					42,
					1,
					"paste",
					null,
					"AQAAAEESAAAAAAAAVxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQRIAAAAAAABBEgAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " ON"
					},
					"AwAAAFcSAAAAAAAAWBIAAAAAAAAAAAAAWBIAAAAAAABZEgAAAAAAAAAAAABZEgAAAAAAAFoSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVxIAAAAAAABXEgAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "\n-D"
					},
					"BAAAACYNAAAAAAAAJw0AAAAAAAAAAAAAJw0AAAAAAAArDQAAAAAAAAAAAAArDQAAAAAAACwNAAAAAAAAAAAAACwNAAAAAAAALQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJg0AAAAAAAAmDQAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"paste",
					null,
					"AQAAAC0NAAAAAAAAQg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQ0AAAAAAAAtDQAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "=1"
					},
					"AgAAAEINAAAAAAAAQw0AAAAAAAAAAAAAQw0AAAAAAABEDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQg0AAAAAAABCDQAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					2,
					"left_delete",
					null,
					"AgAAAEMNAAAAAAAAQw0AAAAAAAABAAAAMUINAAAAAAAAQg0AAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAARA0AAAAAAABEDQAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAEINAAAAAAAAQw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQg0AAAAAAABCDQAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "T"
					},
					"AQAAAEMNAAAAAAAARA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQw0AAAAAAABDDQAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"left_delete",
					null,
					"AQAAAEMNAAAAAAAAQw0AAAAAAAABAAAAVA",
					"AQAAAAAAAAABAAAARA0AAAAAAABEDQAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "STRING:"
					},
					"BwAAAEMNAAAAAAAARA0AAAAAAAAAAAAARA0AAAAAAABFDQAAAAAAAAAAAABFDQAAAAAAAEYNAAAAAAAAAAAAAEYNAAAAAAAARw0AAAAAAAAAAAAARw0AAAAAAABIDQAAAAAAAAAAAABIDQAAAAAAAEkNAAAAAAAAAAAAAEkNAAAAAAAASg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQw0AAAAAAABDDQAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"left_delete",
					null,
					"AQAAAEkNAAAAAAAASQ0AAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAASg0AAAAAAABKDQAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "=1"
					},
					"AgAAAEkNAAAAAAAASg0AAAAAAAAAAAAASg0AAAAAAABLDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQ0AAAAAAABJDQAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEsNAAAAAAAATA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASw0AAAAAAABLDQAAAAAAAP///////+9/"
				],
				[
					140,
					1,
					"left_delete",
					null,
					"AQAAAEsNAAAAAAAASw0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAATA0AAAAAAABMDQAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": "\n-D"
					},
					"BAAAAEsNAAAAAAAATA0AAAAAAAAAAAAATA0AAAAAAABQDQAAAAAAAAAAAABQDQAAAAAAAFENAAAAAAAAAAAAAFENAAAAAAAAUg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASw0AAAAAAABLDQAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"paste",
					null,
					"AQAAAFINAAAAAAAAag0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUg0AAAAAAABSDQAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": ":STRING="
					},
					"CAAAAGoNAAAAAAAAaw0AAAAAAAAAAAAAaw0AAAAAAABsDQAAAAAAAAAAAABsDQAAAAAAAG0NAAAAAAAAAAAAAG0NAAAAAAAAbg0AAAAAAAAAAAAAbg0AAAAAAABvDQAAAAAAAAAAAABvDQAAAAAAAHANAAAAAAAAAAAAAHANAAAAAAAAcQ0AAAAAAAAAAAAAcQ0AAAAAAAByDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAag0AAAAAAABqDQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "wscli.js",
			"settings":
			{
				"buffer_size": 5962,
				"line_ending": "Unix"
			}
		},
		{
			"file": "cmake/FindBrotli.cmake",
			"settings":
			{
				"buffer_size": 2965,
				"line_ending": "Unix"
			}
		},
		{
			"file": "cmake/FindLibwebsockets.cmake",
			"settings":
			{
				"buffer_size": 2405,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					50,
					1,
					"paste",
					null,
					"AgAAANUAAAAAAAAA5gAAAAAAAAAAAAAA5gAAAAAAAADmAAAAAAAAABEAAABwa2dfc2VhcmNoX21vZHVsZQ",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1QAAAAAAAADmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAQBAAAAAAAABQEAAAAAAAAAAAAABQEAAAAAAAAGAQAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABAEAAAAAAAAEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "dump"
					},
					"BAAAAAUBAAAAAAAABgEAAAAAAAAAAAAABgEAAAAAAAAHAQAAAAAAAAAAAAAHAQAAAAAAAAgBAAAAAAAAAAAAAAgBAAAAAAAACQEAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABQEAAAAAAAAFAQAAAAAAAAAAAAAAAAAA"
				],
				[
					62,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAkBAAAAAAAACwEAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACQEAAAAAAAAJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"paste",
					null,
					"AQAAAAoBAAAAAAAARAIAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACgEAAAAAAAAKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					2,
					"left_delete",
					null,
					"AgAAAEQCAAAAAAAARAIAAAAAAAABAAAAKUMCAAAAAAAAQwIAAAAAAAABAAAACg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARQIAAAAAAABFAgAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAEMCAAAAAAAARAIAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQwIAAAAAAABDAgAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"paste",
					null,
					"AQAAAEsCAAAAAAAAbgIAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASwIAAAAAAABLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": " AND"
					},
					"BAAAAG4CAAAAAAAAbwIAAAAAAAAAAAAAbwIAAAAAAABwAgAAAAAAAAAAAABwAgAAAAAAAHECAAAAAAAAAAAAAHECAAAAAAAAcgIAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbgIAAAAAAABuAgAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHICAAAAAAAAcwIAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcgIAAAAAAAByAgAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"cut",
					null,
					"AQAAAEsCAAAAAAAASwIAAAAAAAAoAAAAcGtnY2ZnX2xpYl9MSUJXRUJTT0NLRVRTX3dlYnNvY2tldHMgQU5EIA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwIAAAAAAABLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"paste",
					null,
					"AQAAAEsCAAAAAAAAcwIAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASwIAAAAAAABLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"paste",
					null,
					"AQAAAB0DAAAAAAAARQMAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHQMAAAAAAAAdAwAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "\noif"
					},
					"BAAAAEUCAAAAAAAARgIAAAAAAAAAAAAARgIAAAAAAABHAgAAAAAAAAAAAABHAgAAAAAAAEgCAAAAAAAAAAAAAEgCAAAAAAAASQIAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARQIAAAAAAABFAgAAAAAAAAAAAAAAoH5A"
				],
				[
					123,
					3,
					"left_delete",
					null,
					"AwAAAEgCAAAAAAAASAIAAAAAAAABAAAAZkcCAAAAAAAARwIAAAAAAAABAAAAaUYCAAAAAAAARgIAAAAAAAABAAAAbw",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASQIAAAAAAABJAgAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAEYCAAAAAAAARwIAAAAAAAAAAAAARwIAAAAAAABIAgAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARgIAAAAAAABGAgAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEgCAAAAAAAASgIAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASAIAAAAAAABIAgAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "NOT"
					},
					"AwAAAEkCAAAAAAAASgIAAAAAAAAAAAAASgIAAAAAAABLAgAAAAAAAAAAAABLAgAAAAAAAEwCAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASQIAAAAAAABJAgAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEwCAAAAAAAATQIAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATAIAAAAAAABMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"paste",
					null,
					"AQAAAE0CAAAAAAAAZAIAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATQIAAAAAAABNAgAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJYDAAAAAAAAlwMAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlgMAAAAAAACWAwAAAAAAAAAAAAAAYHNA"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": " #"
					},
					"AgAAAJYDAAAAAAAAlwMAAAAAAAAAAAAAlwMAAAAAAACYAwAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlgMAAAAAAACWAwAAAAAAAAAAAAAAAAAA"
				],
				[
					144,
					2,
					"left_delete",
					null,
					"AgAAAJcDAAAAAAAAlwMAAAAAAAABAAAAI5YDAAAAAAAAlgMAAAAAAAABAAAAIA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmAMAAAAAAACYAwAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": "#endif"
					},
					"BgAAAJYDAAAAAAAAlwMAAAAAAAAAAAAAlwMAAAAAAACYAwAAAAAAAAAAAACYAwAAAAAAAJkDAAAAAAAAAAAAAJkDAAAAAAAAmgMAAAAAAAAAAAAAmgMAAAAAAACbAwAAAAAAAAAAAACbAwAAAAAAAJwDAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlgMAAAAAAACWAwAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					6,
					"left_delete",
					null,
					"BgAAAJsDAAAAAAAAmwMAAAAAAAABAAAAZpoDAAAAAAAAmgMAAAAAAAABAAAAaZkDAAAAAAAAmQMAAAAAAAABAAAAZJgDAAAAAAAAmAMAAAAAAAABAAAAbpcDAAAAAAAAlwMAAAAAAAABAAAAZZYDAAAAAAAAlgMAAAAAAAABAAAAIw",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnAMAAAAAAACcAwAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "endif"
					},
					"BQAAAJYDAAAAAAAAlwMAAAAAAAAAAAAAlwMAAAAAAACYAwAAAAAAAAAAAACYAwAAAAAAAJkDAAAAAAAAAAAAAJkDAAAAAAAAmgMAAAAAAAAAAAAAmgMAAAAAAACbAwAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlgMAAAAAAACWAwAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJsDAAAAAAAAnQMAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmwMAAAAAAACbAwAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"paste",
					null,
					"AQAAAJwDAAAAAAAAswMAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnAMAAAAAAACcAwAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"revert",
					null,
					"BgAAAAAAAAAAAAAAAAAAAAAAAAA4BwAAbWFjcm8oZmluZF9saWJ3ZWJzb2NrZXRzKQoKICBpbmNsdWRlKEZpbmRQa2dDb25maWcpCgogIHVuc2V0KExJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTIENBQ0hFKQogIHVuc2V0KExJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIgQ0FDSEUpCiAgdW5zZXQoTElCV0VCU09DS0VUU19MSUJSQVJJRVMgQ0FDSEUpCiAgdW5zZXQoTElCV0VCU09DS0VUU19GT1VORCBDQUNIRSkKCiAgcGtnX2NoZWNrX21vZHVsZXMoTElCV0VCU09DS0VUUyBsaWJ3ZWJzb2NrZXRzKQoKZHVtcChMSUJXRUJTT0NLRVRTX0ZPVU5EIExJQldFQlNPQ0tFVFNfTElCUkFSSUVTIExJQldFQlNPQ0tFVFNfTElOS19MSUJSQVJJRVMgTElCV0VCU09DS0VUU19MSUJSQVJZX0RJUlMgTElCV0VCU09DS0VUU19MREZMQUdTIExJQldFQlNPQ0tFVFNfTERGTEFHU19PVEhFUiBMSUJXRUJTT0NLRVRTX0lOQ0xVREVfRElSUyBMSUJXRUJTT0NLRVRTX0NGTEFHUyBMSUJXRUJTT0NLRVRTX0NGTEFHU19PVEhFUiBMSUJXRUJTT0NLRVRTX1ZFUlNJT04gTElCV0VCU09DS0VUU19QUkVGSVggTElCV0VCU09DS0VUU19JTkNMVURFRElSIExJQldFQlNPQ0tFVFNfTElCRElSKQoKaWYoTk9UIExJQldFQlNPQ0tFVFNfTElCUkFSSUVTKQogIGlmKHBrZ2NmZ19saWJfTElCV0VCU09DS0VUU193ZWJzb2NrZXRzIEFORCBFWElTVFMgIiR7cGtnY2ZnX2xpYl9MSUJXRUJTT0NLRVRTX3dlYnNvY2tldHN9IikKICAgIHNldChMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyAiJHtwa2djZmdfbGliX0xJQldFQlNPQ0tFVFNfd2Vic29ja2V0c30iIENBQ0hFIEZJTEVQQVRIICJsaWJ3ZWJzb2NrZXRzIGxpYnJhcnkiKQogIGVuZGlmKHBrZ2NmZ19saWJfTElCV0VCU09DS0VUU193ZWJzb2NrZXRzIEFORCBFWElTVFMgIiR7cGtnY2ZnX2xpYl9MSUJXRUJTT0NLRVRTX3dlYnNvY2tldHN9IikKZW5kaWYoTElCV0VCU09DS0VUU19MSUJSQVJJRVMpCgogIGlmKExJQldFQlNPQ0tFVFNfTElCUkFSSUVTIEFORCBMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyBNQVRDSEVTICIuKi8uKiIpCiAgICBzdHJpbmcoUkVHRVggUkVQTEFDRSAiL1teL10qJCIgIiIgTElCV0VCU09DS0VUU19MSUJSQVJZX0RJUiAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUklFU30iKQogICAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIi9saWIvLiokIiAiL2luY2x1ZGUiIExJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTICIke0xJQldFQlNPQ0tFVFNfTElCUkFSSUVTfSIpCiAgICBzZXQoTElCV0VCU09DS0VUU19MSUJSQVJZX0RJUiAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSfSIgQ0FDSEUgUEFUSCAibGlid2Vic29ja2V0cyBsaWJyYXJ5IGRpcmVjdG9yeSIpCiAgICBzZXQoTElCV0VCU09DS0VUU19JTkNMVURFX0RJUlMgIiR7TElCV0VCU09DS0VUU19JTkNMVURFX0RJUlN9IiBDQUNIRSBQQVRIICJsaWJ3ZWJzb2NrZXRzIGluY2x1ZGUgZGlyZWN0b3J5IikKICBlbmRpZihMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyBBTkQgTElCV0VCU09DS0VUU19MSUJSQVJJRVMgTUFUQ0hFUyAiLiovLioiKQoKICBpZihDTUFLRV9JTlNUQUxMX1JQQVRIKQogICAgc2V0KENNQUtFX0lOU1RBTExfUlBBVEggIiR7TElCV0VCU09DS0VUU19MSUJSQVJZX0RJUn06JHtDTUFLRV9JTlNUQUxMX1JQQVRIfSIgQ0FDSEUgUEFUSCAiSW5zdGFsbCBydW50aW1lIHBhdGgiKQogIGVsc2UoQ01BS0VfSU5TVEFMTF9SUEFUSCkKICAgIHNldChDTUFLRV9JTlNUQUxMX1JQQVRIICIke0xJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVJ9IiBDQUNIRSBQQVRIICJJbnN0YWxsIHJ1bnRpbWUgcGF0aCIpCiAgZW5kaWYoQ01BS0VfSU5TVEFMTF9SUEFUSCkKCmVuZG1hY3JvKGZpbmRfbGlid2Vic29ja2V0cykKAAAAAAAAAABRBwAAAAAAAAAAAAAAAAAAAAAAAFEHAAAAAAAAAAAAAAAAAAAAAAAAUQcAAAAAAAAAAAAAAAAAAAAAAABRBwAAAAAAAAAAAAAAAAAAAAAAAFEHAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABQEAAAAAAAAFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"cut",
					null,
					"AQAAANMAAAAAAAAA0wAAAAAAAAAxAAAAICBwa2dfY2hlY2tfbW9kdWxlcyhMSUJXRUJTT0NLRVRTIGxpYndlYnNvY2tldHMpCg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMAAAAAAAAABAEAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					2,
					"paste",
					null,
					"AgAAANMAAAAAAAAABAEAAAAAAAAAAAAABAEAAAAAAAA1AQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMAAAAAAAAA0wAAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "OPENSSL"
					},
					"CAAAABgBAAAAAAAAGQEAAAAAAAAAAAAAGQEAAAAAAAAZAQAAAAAAAA0AAABMSUJXRUJTT0NLRVRTGQEAAAAAAAAaAQAAAAAAAAAAAAAaAQAAAAAAABsBAAAAAAAAAAAAABsBAAAAAAAAHAEAAAAAAAAAAAAAHAEAAAAAAAAdAQAAAAAAAAAAAAAdAQAAAAAAAB4BAAAAAAAAAAAAAB4BAAAAAAAAHwEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgBAAAAAAAAJQEAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " openssl)"
					},
					"CQAAAB8BAAAAAAAAIAEAAAAAAAAAAAAAIAEAAAAAAAAhAQAAAAAAAAAAAAAhAQAAAAAAACIBAAAAAAAAAAAAACIBAAAAAAAAIwEAAAAAAAAAAAAAIwEAAAAAAAAkAQAAAAAAAAAAAAAkAQAAAAAAACUBAAAAAAAAAAAAACUBAAAAAAAAJgEAAAAAAAAAAAAAJgEAAAAAAAAnAQAAAAAAAAAAAAAnAQAAAAAAACgBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8BAAAAAAAAHwEAAAAAAAAAAAAAAADwvw"
				],
				[
					29,
					1,
					"cut",
					null,
					"AQAAACgBAAAAAAAAKAEAAAAAAAAPAAAAIGxpYndlYnNvY2tldHMp",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgBAAAAAAAANwEAAAAAAAD////////vfw"
				],
				[
					52,
					3,
					"join_lines",
					null,
					"CAAAADEBAAAAAAAAMQEAAAAAAAABAAAACjEBAAAAAAAAMQEAAAAAAAAEAAAAICAgIJQBAAAAAAAAlAEAAAAAAAABAAAACpQBAAAAAAAAlAEAAAAAAAAEAAAAICAgIJQBAAAAAAAAlQEAAAAAAAAAAAAA9gEAAAAAAAD2AQAAAAAAAAEAAAAK9gEAAAAAAAD2AQAAAAAAAAQAAAAgICAg9gEAAAAAAAD3AQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoBAAAAAAAAKgEAAAAAAAAAAAAAAAAAAA"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAACwBAAAAAAAALQEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwBAAAAAAAALAEAAAAAAAAAAAAAAAA0QA"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": ";${OP√®E"
					},
					"BwAAAKgFAAAAAAAAqQUAAAAAAAAAAAAAqQUAAAAAAACqBQAAAAAAAAAAAACqBQAAAAAAAKsFAAAAAAAAAAAAAKsFAAAAAAAArAUAAAAAAAAAAAAArAUAAAAAAACtBQAAAAAAAAAAAACtBQAAAAAAAK4FAAAAAAAAAAAAAK4FAAAAAAAArwUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKgFAAAAAAAAqAUAAAAAAAAAAAAAAADwvw"
				],
				[
					76,
					2,
					"left_delete",
					null,
					"AgAAAK4FAAAAAAAArgUAAAAAAAABAAAARa0FAAAAAAAArQUAAAAAAAACAAAAw6g",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8FAAAAAAAArwUAAAAAAAAAAAAAAADwvw"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "ENM"
					},
					"AwAAAK0FAAAAAAAArgUAAAAAAAAAAAAArgUAAAAAAACvBQAAAAAAAAAAAACvBQAAAAAAALAFAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK0FAAAAAAAArQUAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					1,
					"left_delete",
					null,
					"AQAAAK8FAAAAAAAArwUAAAAAAAABAAAATQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALAFAAAAAAAAsAUAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "SS√©L"
					},
					"BAAAAK8FAAAAAAAAsAUAAAAAAAAAAAAAsAUAAAAAAACxBQAAAAAAAAAAAACxBQAAAAAAALIFAAAAAAAAAAAAALIFAAAAAAAAswUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8FAAAAAAAArwUAAAAAAAAAAAAAAADwvw"
				],
				[
					80,
					2,
					"left_delete",
					null,
					"AgAAALIFAAAAAAAAsgUAAAAAAAABAAAATLEFAAAAAAAAsQUAAAAAAAACAAAAw6k",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALMFAAAAAAAAswUAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "L_INCLUDE_DIRS"
					},
					"DgAAALEFAAAAAAAAsgUAAAAAAAAAAAAAsgUAAAAAAACzBQAAAAAAAAAAAACzBQAAAAAAALQFAAAAAAAAAAAAALQFAAAAAAAAtQUAAAAAAAAAAAAAtQUAAAAAAAC2BQAAAAAAAAAAAAC2BQAAAAAAALcFAAAAAAAAAAAAALcFAAAAAAAAuAUAAAAAAAAAAAAAuAUAAAAAAAC5BQAAAAAAAAAAAAC5BQAAAAAAALoFAAAAAAAAAAAAALoFAAAAAAAAuwUAAAAAAAAAAAAAuwUAAAAAAAC8BQAAAAAAAAAAAAC8BQAAAAAAAL0FAAAAAAAAAAAAAL0FAAAAAAAAvgUAAAAAAAAAAAAAvgUAAAAAAAC/BQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALEFAAAAAAAAsQUAAAAAAAAAAAAAAADwvw"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAL8FAAAAAAAAwAUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL8FAAAAAAAAvwUAAAAAAAAAAAAAAADwvw"
				],
				[
					85,
					1,
					"cut",
					null,
					"AQAAAKgFAAAAAAAAqAUAAAAAAAAYAAAAOyR7T1BFTlNTTF9JTkNMVURFX0RJUlN9",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMAFAAAAAAAAqAUAAAAAAAAAAAAAAADwvw"
				],
				[
					86,
					1,
					"paste",
					null,
					"AQAAAKgFAAAAAAAAwAUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKgFAAAAAAAAqAUAAAAAAAAAAAAAAADwvw"
				],
				[
					91,
					1,
					"paste",
					null,
					"AQAAADcFAAAAAAAATwUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcFAAAAAAAANwUAAAAAAAAAAAAAAADwvw"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "L"
					},
					"AgAAAEIFAAAAAAAAQwUAAAAAAAAAAAAAQwUAAAAAAABDBQAAAAAAAAwAAABJTkNMVURFX0RJUlM",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIFAAAAAAAATgUAAAAAAAAAAAAAAADwvw"
				],
				[
					97,
					1,
					"left_delete",
					null,
					"AQAAAEIFAAAAAAAAQgUAAAAAAAABAAAATA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMFAAAAAAAAQwUAAAAAAAAAAAAAAADwvw"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "LIBRARY_DIR"
					},
					"CwAAAEIFAAAAAAAAQwUAAAAAAAAAAAAAQwUAAAAAAABEBQAAAAAAAAAAAABEBQAAAAAAAEUFAAAAAAAAAAAAAEUFAAAAAAAARgUAAAAAAAAAAAAARgUAAAAAAABHBQAAAAAAAAAAAABHBQAAAAAAAEgFAAAAAAAAAAAAAEgFAAAAAAAASQUAAAAAAAAAAAAASQUAAAAAAABKBQAAAAAAAAAAAABKBQAAAAAAAEsFAAAAAAAAAAAAAEsFAAAAAAAATAUAAAAAAAAAAAAATAUAAAAAAABNBQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIFAAAAAAAAQgUAAAAAAAAAAAAAAADwvw"
				],
				[
					123,
					1,
					"paste",
					null,
					"AgAAAMIFAAAAAAAA1QUAAAAAAAAAAAAA1QUAAAAAAADVBQAAAAAAABQAAABPUEVOU1NMX0lOQ0xVREVfRElSUw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMIFAAAAAAAA1gUAAAAAAAAAAAAAAADwvw"
				],
				[
					141,
					1,
					"left_delete",
					null,
					"AQAAADoFAAAAAAAAOgUAAAAAAAATAAAAT1BFTlNTTF9MSUJSQVJZX0RJUg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoFAAAAAAAATQUAAAAAAAAAAAAAAADwvw"
				],
				[
					142,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAADkFAAAAAAAAOQUAAAAAAAABAAAAezkFAAAAAAAAOQUAAAAAAAABAAAAfQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoFAAAAAAAAOgUAAAAAAAAAAAAAAADwvw"
				],
				[
					143,
					2,
					"left_delete",
					null,
					"AgAAADgFAAAAAAAAOAUAAAAAAAABAAAAJDcFAAAAAAAANwUAAAAAAAABAAAAOw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkFAAAAAAAAOQUAAAAAAAAAAAAAAADwvw"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "search"
					},
					"BwAAAAoBAAAAAAAACwEAAAAAAAAAAAAACwEAAAAAAAALAQAAAAAAAA0AAABjaGVja19tb2R1bGVzCwEAAAAAAAAMAQAAAAAAAAAAAAAMAQAAAAAAAA0BAAAAAAAAAAAAAA0BAAAAAAAADgEAAAAAAAAAAAAADgEAAAAAAAAPAQAAAAAAAAAAAAAPAQAAAAAAABABAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoBAAAAAAAAFwEAAAAAAAAAAAAAAADwvw"
				],
				[
					161,
					1,
					"paste",
					null,
					"AgAAAAYBAAAAAAAAFwEAAAAAAAAAAAAAFwEAAAAAAAAXAQAAAAAAAAoAAABwa2dfc2VhcmNo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYBAAAAAAAAEAEAAAAAAAAAAAAAAADwvw"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": "S"
					},
					"AQAAAL4FAAAAAAAAvwUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4FAAAAAAAAvgUAAAAAAAAAAAAAAADwvw"
				],
				[
					193,
					1,
					"paste",
					null,
					"AQAAAG0CAAAAAAAAYgMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0CAAAAAAAAbQIAAAAAAAAAAAAAAAAAAA"
				],
				[
					196,
					1,
					"right_delete",
					null,
					"AQAAAG8CAAAAAAAAbwIAAAAAAAABAAAAIw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8CAAAAAAAAbwIAAAAAAAAAAAAAAADwvw"
				],
				[
					214,
					1,
					"cut",
					null,
					"AQAAACoBAAAAAAAAKgEAAAAAAABDAQAAICAjZHVtcChMSUJXRUJTT0NLRVRTX0ZPVU5EIExJQldFQlNPQ0tFVFNfTElCUkFSSUVTIExJQldFQlNPQ0tFVFNfTElOS19MSUJSQVJJRVMgTElCV0VCU09DS0VUU19MSUJSQVJZX0RJUlMgTElCV0VCU09DS0VUU19MREZMQUdTIExJQldFQlNPQ0tFVFNfTERGTEFHU19PVEhFUiBMSUJXRUJTT0NLRVRTX0lOQ0xVREVfRElSUyBMSUJXRUJTT0NLRVRTX0NGTEFHUyBMSUJXRUJTT0NLRVRTX0NGTEFHU19PVEhFUiBMSUJXRUJTT0NLRVRTX1ZFUlNJT04gTElCV0VCU09DS0VUU19QUkVGSVggTElCV0VCU09DS0VUU19JTkNMVURFRElSIExJQldFQlNPQ0tFVFNfTElCRElSKQo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoBAAAAAAAAbQIAAAAAAAAAAAAAAADwvw"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAI0BAAAAAAAAjgEAAAAAAAAAAAAAjgEAAAAAAACOAQAAAAAAABUAAABPUEVOU1NMX0xERkxBR1NfT1RIRVI",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0BAAAAAAAAogEAAAAAAAAAAAAAAADwvw"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAALMBAAAAAAAAtAEAAAAAAAAAAAAAtAEAAAAAAAC0AQAAAAAAABQAAABPUEVOU1NMX0NGTEFHU19PVEhFUg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALMBAAAAAAAAxwEAAAAAAAAAAAAAAADwvw"
				],
				[
					271,
					1,
					"cut",
					null,
					"AQAAAIQEAAAAAAAAhAQAAAAAAAD2AAAAICBzZXQoTElCV0VCU09DS0VUU19MSUJSQVJZX0RJUiAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSfSIgQ0FDSEUgUEFUSCAibGlid2Vic29ja2V0cyBsaWJyYXJ5IGRpcmVjdG9yeSIpCiAgICBzZXQoTElCV0VCU09DS0VUU19JTkNMVURFX0RJUlMgIiR7TElCV0VCU09DS0VUU19JTkNMVURFX0RJUlN9OyR7T1BFTlNTTF9JTkNMVURFX0RJUlN9IiBDQUNIRSBQQVRIICJsaWJ3ZWJzb2NrZXRzIGluY2x1ZGUgZGlyZWN0b3J5IikK",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHoFAAAAAAAAhAQAAAAAAAAAAAAAAADwvw"
				],
				[
					274,
					1,
					"paste",
					null,
					"AQAAAPgFAAAAAAAA7gYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgFAAAAAAAA+AUAAAAAAAAAAAAAAADwvw"
				],
				[
					277,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAMBwAAbWFjcm8oZmluZF9saWJ3ZWJzb2NrZXRzKQoKICBpbmNsdWRlKEZpbmRQa2dDb25maWcpCgogIHVuc2V0KExJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTIENBQ0hFKQogIHVuc2V0KExJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIgQ0FDSEUpCiAgdW5zZXQoTElCV0VCU09DS0VUU19MSUJSQVJJRVMgQ0FDSEUpCiAgdW5zZXQoTElCV0VCU09DS0VUU19GT1VORCBDQUNIRSkKCiAgcGtnX2NoZWNrX21vZHVsZXMoTElCV0VCU09DS0VUUyBsaWJ3ZWJzb2NrZXRzKQogIHBrZ19zZWFyY2hfbW9kdWxlKE9QRU5TU0wgb3BlbnNzbCkKCiAgZHVtcChPUEVOU1NMX0ZPVU5EIE9QRU5TU0xfTElCUkFSSUVTIE9QRU5TU0xfTElOS19MSUJSQVJJRVMgT1BFTlNTTF9MSUJSQVJZX0RJUlMgT1BFTlNTTF9MREZMQUdTICAgT1BFTlNTTF9JTkNMVURFX0RJUlMgT1BFTlNTTF9DRkxBR1MgICBPUEVOU1NMX1ZFUlNJT04gT1BFTlNTTF9QUkVGSVggT1BFTlNTTF9JTkNMVURFRElSIE9QRU5TU0xfTElCRElSKQoKICBpZihOT1QgTElCV0VCU09DS0VUU19MSUJSQVJJRVMpCiAgICBpZihwa2djZmdfbGliX0xJQldFQlNPQ0tFVFNfd2Vic29ja2V0cyBBTkQgRVhJU1RTICIke3BrZ2NmZ19saWJfTElCV0VCU09DS0VUU193ZWJzb2NrZXRzfSIpCiAgICAgIHNldChMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyAiJHtwa2djZmdfbGliX0xJQldFQlNPQ0tFVFNfd2Vic29ja2V0c30iIENBQ0hFIEZJTEVQQVRIICJsaWJ3ZWJzb2NrZXRzIGxpYnJhcnkiKQogICAgZW5kaWYocGtnY2ZnX2xpYl9MSUJXRUJTT0NLRVRTX3dlYnNvY2tldHMgQU5EIEVYSVNUUyAiJHtwa2djZmdfbGliX0xJQldFQlNPQ0tFVFNfd2Vic29ja2V0c30iKQogIGVuZGlmKExJQldFQlNPQ0tFVFNfTElCUkFSSUVTKQoKICBpZihMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyBBTkQgTElCV0VCU09DS0VUU19MSUJSQVJJRVMgTUFUQ0hFUyAiLiovLioiKQogICAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIi9bXi9dKiQiICIiIExJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIgIiR7TElCV0VCU09DS0VUU19MSUJSQVJJRVN9IikKICAgIHN0cmluZyhSRUdFWCBSRVBMQUNFICIvbGliLy4qJCIgIi9pbmNsdWRlIiBMSUJXRUJTT0NLRVRTX0lOQ0xVREVfRElSUyAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUklFU30iKQogICAgZW5kaWYoTElCV0VCU09DS0VUU19MSUJSQVJJRVMgQU5EIExJQldFQlNPQ0tFVFNfTElCUkFSSUVTIE1BVENIRVMgIi4qLy4qIikKCiAgaWYoQ01BS0VfSU5TVEFMTF9SUEFUSCkKICAgIHNldChDTUFLRV9JTlNUQUxMX1JQQVRIICIke0xJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVJ9OiR7Q01BS0VfSU5TVEFMTF9SUEFUSH0iIENBQ0hFIFBBVEggIkluc3RhbGwgcnVudGltZSBwYXRoIikKICBlbHNlKENNQUtFX0lOU1RBTExfUlBBVEgpCiAgICBzZXQoQ01BS0VfSU5TVEFMTF9SUEFUSCAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSfSIgQ0FDSEUgUEFUSCAiSW5zdGFsbCBydW50aW1lIHBhdGgiKQogIGVuZGlmKENNQUtFX0lOU1RBTExfUlBBVEgpCiAgc2V0KExJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIgIiR7TElCV0VCU09DS0VUU19MSUJSQVJZX0RJUn0iIENBQ0hFIFBBVEggImxpYndlYnNvY2tldHMgbGlicmFyeSBkaXJlY3RvcnkiKQogICAgc2V0KExJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTICIke0xJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTfTske09QRU5TU0xfSU5DTFVERV9ESVJTfSIgQ0FDSEUgUEFUSCAibGlid2Vic29ja2V0cyBpbmNsdWRlIGRpcmVjdG9yeSIpCgplbmRtYWNybyhmaW5kX2xpYndlYnNvY2tldHMpCgAAAAAAAAAAEQcAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO4GAAAAAAAA7gYAAAAAAAAAAAAAAADwvw"
				],
				[
					279,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPgFAAAAAAAA+QUAAAAAAAAAAAAA+QUAAAAAAAD7BQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgFAAAAAAAA+AUAAAAAAAAAAAAAAGB9QA"
				],
				[
					282,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUBwAAbWFjcm8oZmluZF9saWJ3ZWJzb2NrZXRzKQoKICBpbmNsdWRlKEZpbmRQa2dDb25maWcpCgogIHVuc2V0KExJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTIENBQ0hFKQogIHVuc2V0KExJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIgQ0FDSEUpCiAgdW5zZXQoTElCV0VCU09DS0VUU19MSUJSQVJJRVMgQ0FDSEUpCiAgdW5zZXQoTElCV0VCU09DS0VUU19GT1VORCBDQUNIRSkKCiAgcGtnX2NoZWNrX21vZHVsZXMoTElCV0VCU09DS0VUUyBsaWJ3ZWJzb2NrZXRzKQogIHBrZ19zZWFyY2hfbW9kdWxlKE9QRU5TU0wgb3BlbnNzbCkKCiAgZHVtcChPUEVOU1NMX0ZPVU5EIE9QRU5TU0xfTElCUkFSSUVTIE9QRU5TU0xfTElOS19MSUJSQVJJRVMgT1BFTlNTTF9MSUJSQVJZX0RJUlMgT1BFTlNTTF9MREZMQUdTIE9QRU5TU0xfSU5DTFVERV9ESVJTCiAgICAgICBPUEVOU1NMX0NGTEFHUyBPUEVOU1NMX1ZFUlNJT04gT1BFTlNTTF9QUkVGSVggT1BFTlNTTF9JTkNMVURFRElSIE9QRU5TU0xfTElCRElSKQoKICBpZihOT1QgTElCV0VCU09DS0VUU19MSUJSQVJJRVMpCiAgICBpZihwa2djZmdfbGliX0xJQldFQlNPQ0tFVFNfd2Vic29ja2V0cyBBTkQgRVhJU1RTICIke3BrZ2NmZ19saWJfTElCV0VCU09DS0VUU193ZWJzb2NrZXRzfSIpCiAgICAgIHNldChMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyAiJHtwa2djZmdfbGliX0xJQldFQlNPQ0tFVFNfd2Vic29ja2V0c30iIENBQ0hFIEZJTEVQQVRIICJsaWJ3ZWJzb2NrZXRzIGxpYnJhcnkiKQogICAgZW5kaWYocGtnY2ZnX2xpYl9MSUJXRUJTT0NLRVRTX3dlYnNvY2tldHMgQU5EIEVYSVNUUyAiJHtwa2djZmdfbGliX0xJQldFQlNPQ0tFVFNfd2Vic29ja2V0c30iKQogIGVuZGlmKExJQldFQlNPQ0tFVFNfTElCUkFSSUVTKQoKICBpZihMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyBBTkQgTElCV0VCU09DS0VUU19MSUJSQVJJRVMgTUFUQ0hFUyAiLiovLioiKQogICAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIi9bXi9dKiQiICIiIExJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIgIiR7TElCV0VCU09DS0VUU19MSUJSQVJJRVN9IikKICAgIHN0cmluZyhSRUdFWCBSRVBMQUNFICIvbGliLy4qJCIgIi9pbmNsdWRlIiBMSUJXRUJTT0NLRVRTX0lOQ0xVREVfRElSUyAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUklFU30iKQogIGVuZGlmKExJQldFQlNPQ0tFVFNfTElCUkFSSUVTIEFORCBMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyBNQVRDSEVTICIuKi8uKiIpCgogIGlmKENNQUtFX0lOU1RBTExfUlBBVEgpCiAgICBzZXQoQ01BS0VfSU5TVEFMTF9SUEFUSCAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSfToke0NNQUtFX0lOU1RBTExfUlBBVEh9IiBDQUNIRSBQQVRIICJJbnN0YWxsIHJ1bnRpbWUgcGF0aCIpCiAgZWxzZShDTUFLRV9JTlNUQUxMX1JQQVRIKQogICAgc2V0KENNQUtFX0lOU1RBTExfUlBBVEggIiR7TElCV0VCU09DS0VUU19MSUJSQVJZX0RJUn0iIENBQ0hFIFBBVEggIkluc3RhbGwgcnVudGltZSBwYXRoIikKICBlbmRpZihDTUFLRV9JTlNUQUxMX1JQQVRIKQogIAogIHNldChMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSICIke0xJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVJ9IiBDQUNIRSBQQVRIICJsaWJ3ZWJzb2NrZXRzIGxpYnJhcnkgZGlyZWN0b3J5IikKICBzZXQoTElCV0VCU09DS0VUU19JTkNMVURFX0RJUlMgIiR7TElCV0VCU09DS0VUU19JTkNMVURFX0RJUlN9OyR7T1BFTlNTTF9JTkNMVURFX0RJUlN9IgogICAgICBDQUNIRSBQQVRIICJsaWJ3ZWJzb2NrZXRzIGluY2x1ZGUgZGlyZWN0b3J5IikKCmVuZG1hY3JvKGZpbmRfbGlid2Vic29ja2V0cykKAAAAAAAAAAASBwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPsFAAAAAAAA+wUAAAAAAAAAAAAAAADwvw"
				],
				[
					295,
					1,
					"join_lines",
					null,
					"AwAAAKEBAAAAAAAAoQEAAAAAAAABAAAACqEBAAAAAAAAoQEAAAAAAAAHAAAAICAgICAgIKEBAAAAAAAAogEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwBAAAAAAAALAEAAAAAAAAAAAAAAADwvw"
				],
				[
					298,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAACwBAAAAAAAALQEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwBAAAAAAAALAEAAAAAAAAAAAAAAAA0QA"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": "\n\n\nif"
					},
					"CgAAACgBAAAAAAAAKQEAAAAAAAAAAAAAKQEAAAAAAAArAQAAAAAAAAAAAAArAQAAAAAAACwBAAAAAAAAAAAAACwBAAAAAAAALgEAAAAAAAAAAAAAKQEAAAAAAAApAQAAAAAAAAIAAAAgICwBAAAAAAAALQEAAAAAAAAAAAAALQEAAAAAAAAvAQAAAAAAAAAAAAAqAQAAAAAAACoBAAAAAAAAAgAAACAgLQEAAAAAAAAuAQAAAAAAAAAAAAAuAQAAAAAAAC8BAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgBAAAAAAAAKAEAAAAAAAAAAAAAAADwvw"
				],
				[
					306,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAC8BAAAAAAAAMQEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8BAAAAAAAALwEAAAAAAAAAAAAAAADwvw"
				],
				[
					307,
					1,
					"paste",
					null,
					"AQAAADABAAAAAAAARgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADABAAAAAAAAMAEAAAAAAAAAAAAAAADwvw"
				],
				[
					309,
					1,
					"insert",
					{
						"characters": "\nset"
					},
					"BgAAAEcBAAAAAAAASAEAAAAAAAAAAAAASAEAAAAAAABKAQAAAAAAAAAAAABKAQAAAAAAAEwBAAAAAAAAAAAAAEwBAAAAAAAATQEAAAAAAAAAAAAATQEAAAAAAABOAQAAAAAAAAAAAABOAQAAAAAAAE8BAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcBAAAAAAAARwEAAAAAAAAAAAAAAADwvw"
				],
				[
					310,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAE8BAAAAAAAAUQEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8BAAAAAAAATwEAAAAAAAAAAAAAAADwvw"
				],
				[
					311,
					1,
					"insert",
					{
						"characters": "OPENSSL_SSL_"
					},
					"DAAAAFABAAAAAAAAUQEAAAAAAAAAAAAAUQEAAAAAAABSAQAAAAAAAAAAAABSAQAAAAAAAFMBAAAAAAAAAAAAAFMBAAAAAAAAVAEAAAAAAAAAAAAAVAEAAAAAAABVAQAAAAAAAAAAAABVAQAAAAAAAFYBAAAAAAAAAAAAAFYBAAAAAAAAVwEAAAAAAAAAAAAAVwEAAAAAAABYAQAAAAAAAAAAAABYAQAAAAAAAFkBAAAAAAAAAAAAAFkBAAAAAAAAWgEAAAAAAAAAAAAAWgEAAAAAAABbAQAAAAAAAAAAAABbAQAAAAAAAFwBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFABAAAAAAAAUAEAAAAAAAAAAAAAAADwvw"
				],
				[
					312,
					1,
					"insert",
					{
						"characters": "LIBRARY"
					},
					"BwAAAFwBAAAAAAAAXQEAAAAAAAAAAAAAXQEAAAAAAABeAQAAAAAAAAAAAABeAQAAAAAAAF8BAAAAAAAAAAAAAF8BAAAAAAAAYAEAAAAAAAAAAAAAYAEAAAAAAABhAQAAAAAAAAAAAABhAQAAAAAAAGIBAAAAAAAAAAAAAGIBAAAAAAAAYwEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFwBAAAAAAAAXAEAAAAAAAAAAAAAAADwvw"
				],
				[
					313,
					1,
					"insert",
					{
						"characters": " $"
					},
					"AgAAAGMBAAAAAAAAZAEAAAAAAAAAAAAAZAEAAAAAAABlAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMBAAAAAAAAYwEAAAAAAAAAAAAAAADwvw"
				],
				[
					314,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAGUBAAAAAAAAZwEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUBAAAAAAAAZQEAAAAAAAAAAAAAAADwvw"
				],
				[
					315,
					1,
					"paste",
					null,
					"AQAAAGYBAAAAAAAAfAEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYBAAAAAAAAZgEAAAAAAAAAAAAAAADwvw"
				],
				[
					317,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAH0BAAAAAAAAfwEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH0BAAAAAAAAfQEAAAAAAAAAAAAAAADwvw"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAGQBAAAAAAAAZQEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQBAAAAAAAAZAEAAAAAAAAAAAAAAADwvw"
				],
				[
					323,
					1,
					"right_delete",
					null,
					"AQAAAGUBAAAAAAAAZQEAAAAAAAABAAAAJA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUBAAAAAAAAZQEAAAAAAAAAAAAAAADwvw"
				],
				[
					325,
					2,
					"left_delete",
					null,
					"AgAAAH8BAAAAAAAAfwEAAAAAAAABAAAAKX4BAAAAAAAAfgEAAAAAAAABAAAAIg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIABAAAAAAAAgAEAAAAAAAD////////vfw"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": " CACHEPAT"
					},
					"CQAAAH4BAAAAAAAAfwEAAAAAAAAAAAAAfwEAAAAAAACAAQAAAAAAAAAAAACAAQAAAAAAAIEBAAAAAAAAAAAAAIEBAAAAAAAAggEAAAAAAAAAAAAAggEAAAAAAACDAQAAAAAAAAAAAACDAQAAAAAAAIQBAAAAAAAAAAAAAIQBAAAAAAAAhQEAAAAAAAAAAAAAhQEAAAAAAACGAQAAAAAAAAAAAACGAQAAAAAAAIcBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH4BAAAAAAAAfgEAAAAAAAAAAAAAAADwvw"
				],
				[
					327,
					3,
					"left_delete",
					null,
					"AwAAAIYBAAAAAAAAhgEAAAAAAAABAAAAVIUBAAAAAAAAhQEAAAAAAAABAAAAQYQBAAAAAAAAhAEAAAAAAAABAAAAUA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcBAAAAAAAAhwEAAAAAAAAAAAAAAADwvw"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": " PATH"
					},
					"BQAAAIQBAAAAAAAAhQEAAAAAAAAAAAAAhQEAAAAAAACGAQAAAAAAAAAAAACGAQAAAAAAAIcBAAAAAAAAAAAAAIcBAAAAAAAAiAEAAAAAAAAAAAAAiAEAAAAAAACJAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIQBAAAAAAAAhAEAAAAAAAAAAAAAAADwvw"
				],
				[
					329,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIkBAAAAAAAAigEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIkBAAAAAAAAiQEAAAAAAAAAAAAAAADwvw"
				],
				[
					330,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAIoBAAAAAAAAjAEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoBAAAAAAAAigEAAAAAAAAAAAAAAADwvw"
				],
				[
					331,
					1,
					"insert",
					{
						"characters": "Openss"
					},
					"BgAAAIsBAAAAAAAAjAEAAAAAAAAAAAAAjAEAAAAAAACNAQAAAAAAAAAAAACNAQAAAAAAAI4BAAAAAAAAAAAAAI4BAAAAAAAAjwEAAAAAAAAAAAAAjwEAAAAAAACQAQAAAAAAAAAAAACQAQAAAAAAAJEBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsBAAAAAAAAiwEAAAAAAAAAAAAAAADwvw"
				],
				[
					332,
					2,
					"left_delete",
					null,
					"AgAAAJABAAAAAAAAkAEAAAAAAAABAAAAc48BAAAAAAAAjwEAAAAAAAABAAAAcw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJEBAAAAAAAAkQEAAAAAAAAAAAAAAADwvw"
				],
				[
					333,
					1,
					"insert",
					{
						"characters": "SSL"
					},
					"AwAAAI8BAAAAAAAAkAEAAAAAAAAAAAAAkAEAAAAAAACRAQAAAAAAAAAAAACRAQAAAAAAAJIBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8BAAAAAAAAjwEAAAAAAAAAAAAAAADwvw"
				],
				[
					334,
					1,
					"insert",
					{
						"characters": " ssl"
					},
					"BAAAAJIBAAAAAAAAkwEAAAAAAAAAAAAAkwEAAAAAAACUAQAAAAAAAAAAAACUAQAAAAAAAJUBAAAAAAAAAAAAAJUBAAAAAAAAlgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJIBAAAAAAAAkgEAAAAAAAAAAAAAAADwvw"
				],
				[
					335,
					1,
					"insert",
					{
						"characters": " library"
					},
					"CAAAAJYBAAAAAAAAlwEAAAAAAAAAAAAAlwEAAAAAAACYAQAAAAAAAAAAAACYAQAAAAAAAJkBAAAAAAAAAAAAAJkBAAAAAAAAmgEAAAAAAAAAAAAAmgEAAAAAAACbAQAAAAAAAAAAAACbAQAAAAAAAJwBAAAAAAAAAAAAAJwBAAAAAAAAnQEAAAAAAAAAAAAAnQEAAAAAAACeAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYBAAAAAAAAlgEAAAAAAAAAAAAAAADwvw"
				],
				[
					337,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAJ8BAAAAAAAAoAEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8BAAAAAAAAnwEAAAAAAAAAAAAAAADwvw"
				],
				[
					340,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKABAAAAAAAAoQEAAAAAAAAAAAAAoQEAAAAAAAClAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKABAAAAAAAAoAEAAAAAAAAAAAAAAADwvw"
				],
				[
					341,
					1,
					"left_delete",
					null,
					"AQAAAKMBAAAAAAAAowEAAAAAAAACAAAAICA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKUBAAAAAAAApQEAAAAAAAAAAAAAAADwvw"
				],
				[
					344,
					1,
					"cut",
					null,
					"AQAAAC0BAAAAAAAALQEAAAAAAAAdAAAAaWYocGtnY2ZnX2xpYl9PUEVOU1NMX3NzbCkKICA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0BAAAAAAAASgEAAAAAAAAAAAAAAAA0QA"
				],
				[
					345,
					1,
					"paste",
					null,
					"AQAAAC0BAAAAAAAASgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0BAAAAAAAALQEAAAAAAAAAAAAAAADwvw"
				],
				[
					347,
					1,
					"paste",
					null,
					"AQAAAKMBAAAAAAAAwAEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMBAAAAAAAAowEAAAAAAAAAAAAAAAA0QA"
				],
				[
					349,
					1,
					"insert",
					{
						"characters": "end"
					},
					"AwAAAKMBAAAAAAAApAEAAAAAAAAAAAAApAEAAAAAAAClAQAAAAAAAAAAAAClAQAAAAAAAKYBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMBAAAAAAAAowEAAAAAAAAAAAAAAAA0QA"
				],
				[
					354,
					1,
					"cut",
					null,
					"AQAAAC0BAAAAAAAALQEAAAAAAACWAAAAaWYocGtnY2ZnX2xpYl9PUEVOU1NMX3NzbCkKICAgIHNldChPUEVOU1NMX1NTTF9MSUJSQVJZICJ7cGtnY2ZnX2xpYl9PUEVOU1NMX3NzbH0iIENBQ0hFIFBBVEggIk9wZW5TU0wgc3NsIGxpYnJhcnkiKQogIGVuZGlmKHBrZ2NmZ19saWJfT1BFTlNTTF9zc2wpCiAg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0BAAAAAAAAwwEAAAAAAAAAAAAAAAA0QA"
				],
				[
					355,
					2,
					"paste",
					null,
					"AgAAAC0BAAAAAAAAwwEAAAAAAAAAAAAAwwEAAAAAAABZAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0BAAAAAAAALQEAAAAAAAAAAAAAAADwvw"
				],
				[
					359,
					1,
					"insert",
					{
						"characters": "crypto"
					},
					"CAAAANkBAAAAAAAA2gEAAAAAAAAAAAAA2gEAAAAAAADaAQAAAAAAAAMAAABzc2xVAgAAAAAAAFUCAAAAAAAAAgAAACAg2gEAAAAAAADbAQAAAAAAAAAAAADbAQAAAAAAANwBAAAAAAAAAAAAANwBAAAAAAAA3QEAAAAAAAAAAAAA3QEAAAAAAADeAQAAAAAAAAAAAADeAQAAAAAAAN8BAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkBAAAAAAAA3AEAAAAAAAAAAAAAAADwvw"
				],
				[
					361,
					3,
					"left_delete",
					null,
					"AwAAAFcCAAAAAAAAVwIAAAAAAAABAAAAbFYCAAAAAAAAVgIAAAAAAAABAAAAc1UCAAAAAAAAVQIAAAAAAAABAAAAcw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgCAAAAAAAAWAIAAAAAAAAAAAAAAMByQA"
				],
				[
					362,
					1,
					"insert",
					{
						"characters": "crypto"
					},
					"BgAAAFUCAAAAAAAAVgIAAAAAAAAAAAAAVgIAAAAAAABXAgAAAAAAAAAAAABXAgAAAAAAAFgCAAAAAAAAAAAAAFgCAAAAAAAAWQIAAAAAAAAAAAAAWQIAAAAAAABaAgAAAAAAAAAAAABaAgAAAAAAAFsCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUCAAAAAAAAVQIAAAAAAAAAAAAAAADwvw"
				],
				[
					366,
					3,
					"right_delete",
					null,
					"AwAAAPEBAAAAAAAA8QEAAAAAAAABAAAAU/EBAAAAAAAA8QEAAAAAAAABAAAAU/EBAAAAAAAA8QEAAAAAAAABAAAATA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEBAAAAAAAA8QEAAAAAAAAAAAAAAADwvw"
				],
				[
					367,
					1,
					"insert",
					{
						"characters": "CRYTP"
					},
					"BQAAAPEBAAAAAAAA8gEAAAAAAAAAAAAA8gEAAAAAAADzAQAAAAAAAAAAAADzAQAAAAAAAPQBAAAAAAAAAAAAAPQBAAAAAAAA9QEAAAAAAAAAAAAA9QEAAAAAAAD2AQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEBAAAAAAAA8QEAAAAAAAAAAAAAAADwvw"
				],
				[
					368,
					2,
					"left_delete",
					null,
					"AgAAAPUBAAAAAAAA9QEAAAAAAAABAAAAUPQBAAAAAAAA9AEAAAAAAAABAAAAVA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYBAAAAAAAA9gEAAAAAAAAAAAAAAADwvw"
				],
				[
					369,
					1,
					"insert",
					{
						"characters": "PTO"
					},
					"AwAAAPQBAAAAAAAA9QEAAAAAAAAAAAAA9QEAAAAAAAD2AQAAAAAAAAAAAAD2AQAAAAAAAPcBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPQBAAAAAAAA9AEAAAAAAAAAAAAAAADwvw"
				],
				[
					372,
					1,
					"insert",
					{
						"characters": "CRY"
					},
					"BAAAABUCAAAAAAAAFgIAAAAAAAAAAAAAFgIAAAAAAAAWAgAAAAAAAAMAAABzc2wWAgAAAAAAABcCAAAAAAAAAAAAABcCAAAAAAAAGAIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUCAAAAAAAAGAIAAAAAAAAAAAAAAADwvw"
				],
				[
					373,
					3,
					"left_delete",
					null,
					"AwAAABcCAAAAAAAAFwIAAAAAAAABAAAAWRYCAAAAAAAAFgIAAAAAAAABAAAAUhUCAAAAAAAAFQIAAAAAAAABAAAAQw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgCAAAAAAAAGAIAAAAAAAAAAAAAAADwvw"
				],
				[
					374,
					1,
					"insert",
					{
						"characters": "crypto"
					},
					"BgAAABUCAAAAAAAAFgIAAAAAAAAAAAAAFgIAAAAAAAAXAgAAAAAAAAAAAAAXAgAAAAAAABgCAAAAAAAAAAAAABgCAAAAAAAAGQIAAAAAAAAAAAAAGQIAAAAAAAAaAgAAAAAAAAAAAAAaAgAAAAAAABsCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUCAAAAAAAAFQIAAAAAAAAAAAAAAADwvw"
				],
				[
					377,
					3,
					"left_delete",
					null,
					"AwAAADQCAAAAAAAANAIAAAAAAAABAAAAbDMCAAAAAAAAMwIAAAAAAAABAAAAczICAAAAAAAAMgIAAAAAAAABAAAAcw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUCAAAAAAAANQIAAAAAAAAAAAAAAADwvw"
				],
				[
					378,
					1,
					"insert",
					{
						"characters": "crypto"
					},
					"BgAAADICAAAAAAAAMwIAAAAAAAAAAAAAMwIAAAAAAAA0AgAAAAAAAAAAAAA0AgAAAAAAADUCAAAAAAAAAAAAADUCAAAAAAAANgIAAAAAAAAAAAAANgIAAAAAAAA3AgAAAAAAAAAAAAA3AgAAAAAAADgCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADICAAAAAAAAMgIAAAAAAAAAAAAAAADwvw"
				],
				[
					386,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMABAAAAAAAAwQEAAAAAAAAAAAAAwQEAAAAAAADDAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMABAAAAAAAAwAEAAAAAAAAAAAAAADCLQA"
				],
				[
					391,
					2,
					"left_delete",
					null,
					"AgAAAMEBAAAAAAAAwQEAAAAAAAACAAAAICDAAQAAAAAAAMABAAAAAAAAAQAAAAo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMBAAAAAAAAwwEAAAAAAAAAAAAAAADwvw"
				],
				[
					400,
					1,
					"insert",
					{
						"characters": "\n\nset"
					},
					"CAAAAGUCAAAAAAAAZgIAAAAAAAAAAAAAZgIAAAAAAABoAgAAAAAAAAAAAABoAgAAAAAAAGkCAAAAAAAAAAAAAGkCAAAAAAAAawIAAAAAAAAAAAAAZgIAAAAAAABmAgAAAAAAAAIAAAAgIGkCAAAAAAAAagIAAAAAAAAAAAAAagIAAAAAAABrAgAAAAAAAAAAAABrAgAAAAAAAGwCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUCAAAAAAAAZQIAAAAAAAD////////vfw"
				],
				[
					401,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGwCAAAAAAAAbgIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGwCAAAAAAAAbAIAAAAAAAAAAAAAAADwvw"
				],
				[
					402,
					1,
					"insert",
					{
						"characters": "OPENSSL_LIB"
					},
					"CwAAAG0CAAAAAAAAbgIAAAAAAAAAAAAAbgIAAAAAAABvAgAAAAAAAAAAAABvAgAAAAAAAHACAAAAAAAAAAAAAHACAAAAAAAAcQIAAAAAAAAAAAAAcQIAAAAAAAByAgAAAAAAAAAAAAByAgAAAAAAAHMCAAAAAAAAAAAAAHMCAAAAAAAAdAIAAAAAAAAAAAAAdAIAAAAAAAB1AgAAAAAAAAAAAAB1AgAAAAAAAHYCAAAAAAAAAAAAAHYCAAAAAAAAdwIAAAAAAAAAAAAAdwIAAAAAAAB4AgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0CAAAAAAAAbQIAAAAAAAAAAAAAAADwvw"
				],
				[
					403,
					1,
					"insert",
					{
						"characters": "RARIES"
					},
					"BgAAAHgCAAAAAAAAeQIAAAAAAAAAAAAAeQIAAAAAAAB6AgAAAAAAAAAAAAB6AgAAAAAAAHsCAAAAAAAAAAAAAHsCAAAAAAAAfAIAAAAAAAAAAAAAfAIAAAAAAAB9AgAAAAAAAAAAAAB9AgAAAAAAAH4CAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgCAAAAAAAAeAIAAAAAAAAAAAAAAADwvw"
				],
				[
					404,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAH4CAAAAAAAAfwIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH4CAAAAAAAAfgIAAAAAAAAAAAAAAADwvw"
				],
				[
					405,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAH8CAAAAAAAAgQIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8CAAAAAAAAfwIAAAAAAAAAAAAAAADwvw"
				],
				[
					406,
					1,
					"insert",
					{
						"characters": "${P√®"
					},
					"BAAAAIACAAAAAAAAgQIAAAAAAAAAAAAAgQIAAAAAAACCAgAAAAAAAAAAAACCAgAAAAAAAIMCAAAAAAAAAAAAAIMCAAAAAAAAhAIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIACAAAAAAAAgAIAAAAAAAAAAAAAAADwvw"
				],
				[
					407,
					2,
					"left_delete",
					null,
					"AgAAAIMCAAAAAAAAgwIAAAAAAAACAAAAw6iCAgAAAAAAAIICAAAAAAAAAQAAAFA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIQCAAAAAAAAhAIAAAAAAAAAAAAAAADwvw"
				],
				[
					408,
					1,
					"insert",
					{
						"characters": "OPENSSL_SSL_LIBRAR"
					},
					"EgAAAIICAAAAAAAAgwIAAAAAAAAAAAAAgwIAAAAAAACEAgAAAAAAAAAAAACEAgAAAAAAAIUCAAAAAAAAAAAAAIUCAAAAAAAAhgIAAAAAAAAAAAAAhgIAAAAAAACHAgAAAAAAAAAAAACHAgAAAAAAAIgCAAAAAAAAAAAAAIgCAAAAAAAAiQIAAAAAAAAAAAAAiQIAAAAAAACKAgAAAAAAAAAAAACKAgAAAAAAAIsCAAAAAAAAAAAAAIsCAAAAAAAAjAIAAAAAAAAAAAAAjAIAAAAAAACNAgAAAAAAAAAAAACNAgAAAAAAAI4CAAAAAAAAAAAAAI4CAAAAAAAAjwIAAAAAAAAAAAAAjwIAAAAAAACQAgAAAAAAAAAAAACQAgAAAAAAAJECAAAAAAAAAAAAAJECAAAAAAAAkgIAAAAAAAAAAAAAkgIAAAAAAACTAgAAAAAAAAAAAACTAgAAAAAAAJQCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIICAAAAAAAAggIAAAAAAAAAAAAAAADwvw"
				],
				[
					409,
					1,
					"insert",
					{
						"characters": "Y};${OPE"
					},
					"CAAAAJQCAAAAAAAAlQIAAAAAAAAAAAAAlQIAAAAAAACWAgAAAAAAAAAAAACWAgAAAAAAAJcCAAAAAAAAAAAAAJcCAAAAAAAAmAIAAAAAAAAAAAAAmAIAAAAAAACZAgAAAAAAAAAAAACZAgAAAAAAAJoCAAAAAAAAAAAAAJoCAAAAAAAAmwIAAAAAAAAAAAAAmwIAAAAAAACcAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQCAAAAAAAAlAIAAAAAAAAAAAAAAADwvw"
				],
				[
					410,
					1,
					"insert",
					{
						"characters": "NSSL_CRYPTO_LIBRA"
					},
					"EQAAAJwCAAAAAAAAnQIAAAAAAAAAAAAAnQIAAAAAAACeAgAAAAAAAAAAAACeAgAAAAAAAJ8CAAAAAAAAAAAAAJ8CAAAAAAAAoAIAAAAAAAAAAAAAoAIAAAAAAAChAgAAAAAAAAAAAAChAgAAAAAAAKICAAAAAAAAAAAAAKICAAAAAAAAowIAAAAAAAAAAAAAowIAAAAAAACkAgAAAAAAAAAAAACkAgAAAAAAAKUCAAAAAAAAAAAAAKUCAAAAAAAApgIAAAAAAAAAAAAApgIAAAAAAACnAgAAAAAAAAAAAACnAgAAAAAAAKgCAAAAAAAAAAAAAKgCAAAAAAAAqQIAAAAAAAAAAAAAqQIAAAAAAACqAgAAAAAAAAAAAACqAgAAAAAAAKsCAAAAAAAAAAAAAKsCAAAAAAAArAIAAAAAAAAAAAAArAIAAAAAAACtAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwCAAAAAAAAnAIAAAAAAAAAAAAAAADwvw"
				],
				[
					411,
					1,
					"insert",
					{
						"characters": "RY}"
					},
					"AwAAAK0CAAAAAAAArgIAAAAAAAAAAAAArgIAAAAAAACvAgAAAAAAAAAAAACvAgAAAAAAALACAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK0CAAAAAAAArQIAAAAAAAAAAAAAAADwvw"
				],
				[
					413,
					1,
					"insert",
					{
						"characters": " CACHE"
					},
					"BgAAALECAAAAAAAAsgIAAAAAAAAAAAAAsgIAAAAAAACzAgAAAAAAAAAAAACzAgAAAAAAALQCAAAAAAAAAAAAALQCAAAAAAAAtQIAAAAAAAAAAAAAtQIAAAAAAAC2AgAAAAAAAAAAAAC2AgAAAAAAALcCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALECAAAAAAAAsQIAAAAAAAAAAAAAAADwvw"
				],
				[
					414,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALcCAAAAAAAAuAIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcCAAAAAAAAtwIAAAAAAAAAAAAAAADwvw"
				],
				[
					415,
					7,
					"left_delete",
					null,
					"BwAAALcCAAAAAAAAtwIAAAAAAAABAAAAILYCAAAAAAAAtgIAAAAAAAABAAAARbUCAAAAAAAAtQIAAAAAAAABAAAASLQCAAAAAAAAtAIAAAAAAAABAAAAQ7MCAAAAAAAAswIAAAAAAAABAAAAQbICAAAAAAAAsgIAAAAAAAABAAAAQ7ECAAAAAAAAsQIAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgCAAAAAAAAuAIAAAAAAAAAAAAAAADwvw"
				],
				[
					424,
					1,
					"left_delete",
					null,
					"AQAAALMCAAAAAAAAswIAAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQCAAAAAAAAtAIAAAAAAAAAAAAAAAAAAA"
				],
				[
					458,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"AwAAAGYCAAAAAAAAZwIAAAAAAAAAAAAAZwIAAAAAAABoAgAAAAAAAAAAAABoAgAAAAAAAGkCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYCAAAAAAAAZgIAAAAAAAAAAAAAAADwvw"
				],
				[
					459,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGkCAAAAAAAAawIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGkCAAAAAAAAaQIAAAAAAAAAAAAAAADwvw"
				],
				[
					460,
					1,
					"insert",
					{
						"characters": "NOT"
					},
					"AwAAAGoCAAAAAAAAawIAAAAAAAAAAAAAawIAAAAAAABsAgAAAAAAAAAAAABsAgAAAAAAAG0CAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoCAAAAAAAAagIAAAAAAAAAAAAAAADwvw"
				],
				[
					461,
					1,
					"insert",
					{
						"characters": " OPENSSL_LIBRARIES"
					},
					"EgAAAG0CAAAAAAAAbgIAAAAAAAAAAAAAbgIAAAAAAABvAgAAAAAAAAAAAABvAgAAAAAAAHACAAAAAAAAAAAAAHACAAAAAAAAcQIAAAAAAAAAAAAAcQIAAAAAAAByAgAAAAAAAAAAAAByAgAAAAAAAHMCAAAAAAAAAAAAAHMCAAAAAAAAdAIAAAAAAAAAAAAAdAIAAAAAAAB1AgAAAAAAAAAAAAB1AgAAAAAAAHYCAAAAAAAAAAAAAHYCAAAAAAAAdwIAAAAAAAAAAAAAdwIAAAAAAAB4AgAAAAAAAAAAAAB4AgAAAAAAAHkCAAAAAAAAAAAAAHkCAAAAAAAAegIAAAAAAAAAAAAAegIAAAAAAAB7AgAAAAAAAAAAAAB7AgAAAAAAAHwCAAAAAAAAAAAAAHwCAAAAAAAAfQIAAAAAAAAAAAAAfQIAAAAAAAB+AgAAAAAAAAAAAAB+AgAAAAAAAH8CAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0CAAAAAAAAbQIAAAAAAAAAAAAAAADwvw"
				],
				[
					464,
					1,
					"cut",
					null,
					"AQAAAGcCAAAAAAAAZwIAAAAAAAAaAAAAaWYoTk9UIE9QRU5TU0xfTElCUkFSSUVTKQo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIECAAAAAAAAZwIAAAAAAAAAAAAAAAAAAA"
				],
				[
					465,
					1,
					"paste",
					null,
					"AQAAAGcCAAAAAAAAgQIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcCAAAAAAAAZwIAAAAAAAAAAAAAAADwvw"
				],
				[
					468,
					1,
					"paste",
					null,
					"AQAAAM0CAAAAAAAA5wIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0CAAAAAAAAzQIAAAAAAAAAAAAAAAAAAA"
				],
				[
					470,
					1,
					"insert",
					{
						"characters": "end"
					},
					"AwAAAM0CAAAAAAAAzgIAAAAAAAAAAAAAzgIAAAAAAADPAgAAAAAAAAAAAADPAgAAAAAAANACAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0CAAAAAAAAzQIAAAAAAAAAAAAAAAAAAA"
				],
				[
					474,
					1,
					"cut",
					null,
					"AQAAAGcCAAAAAAAAZwIAAAAAAAAaAAAAaWYoTk9UIE9QRU5TU0xfTElCUkFSSUVTKQo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcCAAAAAAAAgQIAAAAAAAAAAAAAAAAAAA"
				],
				[
					475,
					1,
					"paste",
					null,
					"AQAAAGcCAAAAAAAAgQIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcCAAAAAAAAZwIAAAAAAAAAAAAAAADwvw"
				],
				[
					481,
					1,
					"paste",
					null,
					"AQAAAC0BAAAAAAAARwEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0BAAAAAAAALQEAAAAAAAAAAAAAAADwvw"
				],
				[
					485,
					1,
					"insert",
					{
						"characters": "SSL_LIBRARY"
					},
					"DAAAADwBAAAAAAAAPQEAAAAAAAAAAAAAPQEAAAAAAAA9AQAAAAAAAAkAAABMSUJSQVJJRVM9AQAAAAAAAD4BAAAAAAAAAAAAAD4BAAAAAAAAPwEAAAAAAAAAAAAAPwEAAAAAAABAAQAAAAAAAAAAAABAAQAAAAAAAEEBAAAAAAAAAAAAAEEBAAAAAAAAQgEAAAAAAAAAAAAAQgEAAAAAAABDAQAAAAAAAAAAAABDAQAAAAAAAEQBAAAAAAAAAAAAAEQBAAAAAAAARQEAAAAAAAAAAAAARQEAAAAAAABGAQAAAAAAAAAAAABGAQAAAAAAAEcBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUBAAAAAAAAPAEAAAAAAAAAAAAAAADwvw"
				],
				[
					486,
					1,
					"insert",
					{
						"characters": " AND"
					},
					"BAAAAEcBAAAAAAAASAEAAAAAAAAAAAAASAEAAAAAAABJAQAAAAAAAAAAAABJAQAAAAAAAEoBAAAAAAAAAAAAAEoBAAAAAAAASwEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcBAAAAAAAARwEAAAAAAAAAAAAAAADwvw"
				],
				[
					487,
					1,
					"insert",
					{
						"characters": " NOT"
					},
					"BAAAAEsBAAAAAAAATAEAAAAAAAAAAAAATAEAAAAAAABNAQAAAAAAAAAAAABNAQAAAAAAAE4BAAAAAAAAAAAAAE4BAAAAAAAATwEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsBAAAAAAAASwEAAAAAAAAAAAAAAADwvw"
				],
				[
					488,
					1,
					"insert",
					{
						"characters": " OPENSSL_CRYPTO_"
					},
					"EAAAAE8BAAAAAAAAUAEAAAAAAAAAAAAAUAEAAAAAAABRAQAAAAAAAAAAAABRAQAAAAAAAFIBAAAAAAAAAAAAAFIBAAAAAAAAUwEAAAAAAAAAAAAAUwEAAAAAAABUAQAAAAAAAAAAAABUAQAAAAAAAFUBAAAAAAAAAAAAAFUBAAAAAAAAVgEAAAAAAAAAAAAAVgEAAAAAAABXAQAAAAAAAAAAAABXAQAAAAAAAFgBAAAAAAAAAAAAAFgBAAAAAAAAWQEAAAAAAAAAAAAAWQEAAAAAAABaAQAAAAAAAAAAAABaAQAAAAAAAFsBAAAAAAAAAAAAAFsBAAAAAAAAXAEAAAAAAAAAAAAAXAEAAAAAAABdAQAAAAAAAAAAAABdAQAAAAAAAF4BAAAAAAAAAAAAAF4BAAAAAAAAXwEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8BAAAAAAAATwEAAAAAAAAAAAAAAADwvw"
				],
				[
					489,
					1,
					"insert",
					{
						"characters": "LIBRARY"
					},
					"BwAAAF8BAAAAAAAAYAEAAAAAAAAAAAAAYAEAAAAAAABhAQAAAAAAAAAAAABhAQAAAAAAAGIBAAAAAAAAAAAAAGIBAAAAAAAAYwEAAAAAAAAAAAAAYwEAAAAAAABkAQAAAAAAAAAAAABkAQAAAAAAAGUBAAAAAAAAAAAAAGUBAAAAAAAAZgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8BAAAAAAAAXwEAAAAAAAAAAAAAAADwvw"
				],
				[
					494,
					1,
					"cut",
					null,
					"AQAAACsBAAAAAAAAKwEAAAAAAAA9AAAAICBpZihOT1QgT1BFTlNTTF9TU0xfTElCUkFSWSBBTkQgTk9UIE9QRU5TU0xfQ1JZUFRPX0xJQlJBUlkpCg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACsBAAAAAAAAaAEAAAAAAAAAAAAAAAAAAA"
				],
				[
					495,
					1,
					"paste",
					null,
					"AQAAACsBAAAAAAAAaAEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACsBAAAAAAAAKwEAAAAAAAAAAAAAAADwvw"
				],
				[
					497,
					1,
					"paste",
					null,
					"AQAAAKECAAAAAAAA3gIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKECAAAAAAAAoQIAAAAAAAAAAAAAAAAAAA"
				],
				[
					499,
					1,
					"insert",
					{
						"characters": "end"
					},
					"AwAAAKECAAAAAAAAogIAAAAAAAAAAAAAogIAAAAAAACjAgAAAAAAAAAAAACjAgAAAAAAAKQCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKECAAAAAAAAoQIAAAAAAAAAAAAAAAAAAA"
				],
				[
					500,
					3,
					"right_delete",
					null,
					"AwAAAKQCAAAAAAAApAIAAAAAAAABAAAAIKQCAAAAAAAApAIAAAAAAAABAAAAIKQCAAAAAAAApAIAAAAAAAABAAAAaQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQCAAAAAAAApAIAAAAAAAAAAAAAAADwvw"
				],
				[
					501,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAKQCAAAAAAAApQIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQCAAAAAAAApAIAAAAAAAAAAAAAAADwvw"
				],
				[
					506,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABGCQAAbWFjcm8oZmluZF9saWJ3ZWJzb2NrZXRzKQoKICBpbmNsdWRlKEZpbmRQa2dDb25maWcpCgogIHVuc2V0KExJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTIENBQ0hFKQogIHVuc2V0KExJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIgQ0FDSEUpCiAgdW5zZXQoTElCV0VCU09DS0VUU19MSUJSQVJJRVMgQ0FDSEUpCiAgdW5zZXQoTElCV0VCU09DS0VUU19GT1VORCBDQUNIRSkKCiAgcGtnX2NoZWNrX21vZHVsZXMoTElCV0VCU09DS0VUUyBsaWJ3ZWJzb2NrZXRzKQogIHBrZ19zZWFyY2hfbW9kdWxlKE9QRU5TU0wgb3BlbnNzbCkKCgogIGlmKE5PVCBPUEVOU1NMX1NTTF9MSUJSQVJZIEFORCBOT1QgT1BFTlNTTF9DUllQVE9fTElCUkFSWSkKaWYocGtnY2ZnX2xpYl9PUEVOU1NMX3NzbCkKICAgIHNldChPUEVOU1NMX1NTTF9MSUJSQVJZICJ7cGtnY2ZnX2xpYl9PUEVOU1NMX3NzbH0iIENBQ0hFIFBBVEggIk9wZW5TU0wgc3NsIGxpYnJhcnkiKQogIGVuZGlmKHBrZ2NmZ19saWJfT1BFTlNTTF9zc2wpCiAgaWYocGtnY2ZnX2xpYl9PUEVOU1NMX2NyeXB0bykKICAgIHNldChPUEVOU1NMX0NSWVBUT19MSUJSQVJZICJ7cGtnY2ZnX2xpYl9PUEVOU1NMX2NyeXB0b30iIENBQ0hFIFBBVEggIk9wZW5TU0wgY3J5cHRvIGxpYnJhcnkiKQogIGVuZGlmKHBrZ2NmZ19saWJfT1BFTlNTTF9jcnlwdG8pCmVuZGlmKE5PVCBPUEVOU1NMX1NTTF9MSUJSQVJZIEFORCBOT1QgT1BFTlNTTF9DUllQVE9fTElCUkFSWSkKCmlmKE5PVCBPUEVOU1NMX0xJQlJBUklFUykKICBzZXQoT1BFTlNTTF9MSUJSQVJJRVMgIiR7T1BFTlNTTF9TU0xfTElCUkFSWX07JHtPUEVOU1NMX0NSWVBUT19MSUJSQVJZfSIpCmVuZGlmKE5PVCBPUEVOU1NMX0xJQlJBUklFUykKCiAgI2R1bXAoT1BFTlNTTF9GT1VORCBPUEVOU1NMX0xJQlJBUklFUyBPUEVOU1NMX0xJTktfTElCUkFSSUVTIE9QRU5TU0xfTElCUkFSWV9ESVJTIE9QRU5TU0xfTERGTEFHUyBPUEVOU1NMX0lOQ0xVREVfRElSUyBPUEVOU1NMX0NGTEFHUyBPUEVOU1NMX1ZFUlNJT04gT1BFTlNTTF9QUkVGSVggT1BFTlNTTF9JTkNMVURFRElSIE9QRU5TU0xfTElCRElSKQoKICBpZihOT1QgTElCV0VCU09DS0VUU19MSUJSQVJJRVMpCiAgICBpZihwa2djZmdfbGliX0xJQldFQlNPQ0tFVFNfd2Vic29ja2V0cyBBTkQgRVhJU1RTICIke3BrZ2NmZ19saWJfTElCV0VCU09DS0VUU193ZWJzb2NrZXRzfSIpCiAgICAgIHNldChMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyAiJHtwa2djZmdfbGliX0xJQldFQlNPQ0tFVFNfd2Vic29ja2V0c30iIENBQ0hFIEZJTEVQQVRIICJsaWJ3ZWJzb2NrZXRzIGxpYnJhcnkiKQogICAgZW5kaWYocGtnY2ZnX2xpYl9MSUJXRUJTT0NLRVRTX3dlYnNvY2tldHMgQU5EIEVYSVNUUyAiJHtwa2djZmdfbGliX0xJQldFQlNPQ0tFVFNfd2Vic29ja2V0c30iKQogIGVuZGlmKExJQldFQlNPQ0tFVFNfTElCUkFSSUVTKQoKICBpZihMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyBBTkQgTElCV0VCU09DS0VUU19MSUJSQVJJRVMgTUFUQ0hFUyAiLiovLioiKQogICAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIi9bXi9dKiQiICIiIExJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIgIiR7TElCV0VCU09DS0VUU19MSUJSQVJJRVN9IikKICAgIHN0cmluZyhSRUdFWCBSRVBMQUNFICIvbGliLy4qJCIgIi9pbmNsdWRlIiBMSUJXRUJTT0NLRVRTX0lOQ0xVREVfRElSUyAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUklFU30iKQogIGVuZGlmKExJQldFQlNPQ0tFVFNfTElCUkFSSUVTIEFORCBMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyBNQVRDSEVTICIuKi8uKiIpCgogIGlmKENNQUtFX0lOU1RBTExfUlBBVEgpCiAgICBzZXQoQ01BS0VfSU5TVEFMTF9SUEFUSCAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSfToke0NNQUtFX0lOU1RBTExfUlBBVEh9IiBDQUNIRSBQQVRIICJJbnN0YWxsIHJ1bnRpbWUgcGF0aCIpCiAgZWxzZShDTUFLRV9JTlNUQUxMX1JQQVRIKQogICAgc2V0KENNQUtFX0lOU1RBTExfUlBBVEggIiR7TElCV0VCU09DS0VUU19MSUJSQVJZX0RJUn0iIENBQ0hFIFBBVEggIkluc3RhbGwgcnVudGltZSBwYXRoIikKICBlbmRpZihDTUFLRV9JTlNUQUxMX1JQQVRIKQoKICBzZXQoTElCV0VCU09DS0VUU19MSUJSQVJZX0RJUiAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSfSIgQ0FDSEUgUEFUSCAibGlid2Vic29ja2V0cyBsaWJyYXJ5IGRpcmVjdG9yeSIpCiAgc2V0KExJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTICIke0xJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTfTske09QRU5TU0xfSU5DTFVERV9ESVJTfSIKICAgICAgQ0FDSEUgUEFUSCAibGlid2Vic29ja2V0cyBpbmNsdWRlIGRpcmVjdG9yeSIpCgplbmRtYWNybyhmaW5kX2xpYndlYnNvY2tldHMpCgAAAAAAAAAAWwkAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKUCAAAAAAAApQIAAAAAAAAAAAAAAADwvw"
				],
				[
					511,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAHgDAAAAAAAAeQMAAAAAAAAAAAAAeQMAAAAAAAB6AwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgDAAAAAAAAeAMAAAAAAAAAAAAAAABuQA"
				],
				[
					513,
					1,
					"insert",
					{
						"characters": "dui"
					},
					"AwAAAHkDAAAAAAAAegMAAAAAAAAAAAAAegMAAAAAAAB7AwAAAAAAAAAAAAB7AwAAAAAAAHwDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHkDAAAAAAAAeQMAAAAAAAAAAAAAAAAAAA"
				],
				[
					514,
					1,
					"left_delete",
					null,
					"AQAAAHsDAAAAAAAAewMAAAAAAAABAAAAaQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwDAAAAAAAAfAMAAAAAAAAAAAAAAADwvw"
				],
				[
					515,
					1,
					"insert",
					{
						"characters": "mp"
					},
					"AgAAAHsDAAAAAAAAfAMAAAAAAAAAAAAAfAMAAAAAAAB9AwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsDAAAAAAAAewMAAAAAAAAAAAAAAADwvw"
				],
				[
					516,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAH0DAAAAAAAAfwMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH0DAAAAAAAAfQMAAAAAAAAAAAAAAADwvw"
				],
				[
					517,
					1,
					"insert",
					{
						"characters": "OPENSSL_:"
					},
					"CQAAAH4DAAAAAAAAfwMAAAAAAAAAAAAAfwMAAAAAAACAAwAAAAAAAAAAAACAAwAAAAAAAIEDAAAAAAAAAAAAAIEDAAAAAAAAggMAAAAAAAAAAAAAggMAAAAAAACDAwAAAAAAAAAAAACDAwAAAAAAAIQDAAAAAAAAAAAAAIQDAAAAAAAAhQMAAAAAAAAAAAAAhQMAAAAAAACGAwAAAAAAAAAAAACGAwAAAAAAAIcDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH4DAAAAAAAAfgMAAAAAAAAAAAAAAADwvw"
				],
				[
					518,
					1,
					"left_delete",
					null,
					"AQAAAIYDAAAAAAAAhgMAAAAAAAABAAAAOg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcDAAAAAAAAhwMAAAAAAAAAAAAAAADwvw"
				],
				[
					519,
					1,
					"insert",
					{
						"characters": "SSL_LIBRARY"
					},
					"CwAAAIYDAAAAAAAAhwMAAAAAAAAAAAAAhwMAAAAAAACIAwAAAAAAAAAAAACIAwAAAAAAAIkDAAAAAAAAAAAAAIkDAAAAAAAAigMAAAAAAAAAAAAAigMAAAAAAACLAwAAAAAAAAAAAACLAwAAAAAAAIwDAAAAAAAAAAAAAIwDAAAAAAAAjQMAAAAAAAAAAAAAjQMAAAAAAACOAwAAAAAAAAAAAACOAwAAAAAAAI8DAAAAAAAAAAAAAI8DAAAAAAAAkAMAAAAAAAAAAAAAkAMAAAAAAACRAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYDAAAAAAAAhgMAAAAAAAAAAAAAAADwvw"
				],
				[
					520,
					1,
					"insert",
					{
						"characters": " OPENSSL_CRYP"
					},
					"DQAAAJEDAAAAAAAAkgMAAAAAAAAAAAAAkgMAAAAAAACTAwAAAAAAAAAAAACTAwAAAAAAAJQDAAAAAAAAAAAAAJQDAAAAAAAAlQMAAAAAAAAAAAAAlQMAAAAAAACWAwAAAAAAAAAAAACWAwAAAAAAAJcDAAAAAAAAAAAAAJcDAAAAAAAAmAMAAAAAAAAAAAAAmAMAAAAAAACZAwAAAAAAAAAAAACZAwAAAAAAAJoDAAAAAAAAAAAAAJoDAAAAAAAAmwMAAAAAAAAAAAAAmwMAAAAAAACcAwAAAAAAAAAAAACcAwAAAAAAAJ0DAAAAAAAAAAAAAJ0DAAAAAAAAngMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJEDAAAAAAAAkQMAAAAAAAAAAAAAAADwvw"
				],
				[
					521,
					1,
					"insert_completion",
					{
						"completion": "OPENSSL_CRYPTO_LIBRARY",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "OPENSSL_CRYPTO_LIBRARY"
					},
					"AgAAAJIDAAAAAAAAkgMAAAAAAAAMAAAAT1BFTlNTTF9DUllQkgMAAAAAAACoAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ4DAAAAAAAAngMAAAAAAAAAAAAAAADwvw"
				],
				[
					522,
					1,
					"insert",
					{
						"characters": " OPENSSL_:"
					},
					"CgAAAKgDAAAAAAAAqQMAAAAAAAAAAAAAqQMAAAAAAACqAwAAAAAAAAAAAACqAwAAAAAAAKsDAAAAAAAAAAAAAKsDAAAAAAAArAMAAAAAAAAAAAAArAMAAAAAAACtAwAAAAAAAAAAAACtAwAAAAAAAK4DAAAAAAAAAAAAAK4DAAAAAAAArwMAAAAAAAAAAAAArwMAAAAAAACwAwAAAAAAAAAAAACwAwAAAAAAALEDAAAAAAAAAAAAALEDAAAAAAAAsgMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKgDAAAAAAAAqAMAAAAAAAAAAAAAAADwvw"
				],
				[
					523,
					1,
					"left_delete",
					null,
					"AQAAALEDAAAAAAAAsQMAAAAAAAABAAAAOg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIDAAAAAAAAsgMAAAAAAAAAAAAAAADwvw"
				],
				[
					524,
					1,
					"insert",
					{
						"characters": "LIBRAR"
					},
					"BgAAALEDAAAAAAAAsgMAAAAAAAAAAAAAsgMAAAAAAACzAwAAAAAAAAAAAACzAwAAAAAAALQDAAAAAAAAAAAAALQDAAAAAAAAtQMAAAAAAAAAAAAAtQMAAAAAAAC2AwAAAAAAAAAAAAC2AwAAAAAAALcDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALEDAAAAAAAAsQMAAAAAAAAAAAAAAADwvw"
				],
				[
					525,
					1,
					"insert_completion",
					{
						"completion": "OPENSSL_LIBRARIES",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "OPENSSL_LIBRARIES"
					},
					"AgAAAKkDAAAAAAAAqQMAAAAAAAAOAAAAT1BFTlNTTF9MSUJSQVKpAwAAAAAAALoDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcDAAAAAAAAtwMAAAAAAAAAAAAAAADwvw"
				],
				[
					526,
					1,
					"insert",
					{
						"characters": " OPENSSL_INCLUDE"
					},
					"EAAAALoDAAAAAAAAuwMAAAAAAAAAAAAAuwMAAAAAAAC8AwAAAAAAAAAAAAC8AwAAAAAAAL0DAAAAAAAAAAAAAL0DAAAAAAAAvgMAAAAAAAAAAAAAvgMAAAAAAAC/AwAAAAAAAAAAAAC/AwAAAAAAAMADAAAAAAAAAAAAAMADAAAAAAAAwQMAAAAAAAAAAAAAwQMAAAAAAADCAwAAAAAAAAAAAADCAwAAAAAAAMMDAAAAAAAAAAAAAMMDAAAAAAAAxAMAAAAAAAAAAAAAxAMAAAAAAADFAwAAAAAAAAAAAADFAwAAAAAAAMYDAAAAAAAAAAAAAMYDAAAAAAAAxwMAAAAAAAAAAAAAxwMAAAAAAADIAwAAAAAAAAAAAADIAwAAAAAAAMkDAAAAAAAAAAAAAMkDAAAAAAAAygMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoDAAAAAAAAugMAAAAAAAAAAAAAAADwvw"
				],
				[
					527,
					1,
					"insert",
					{
						"characters": "_DIRS"
					},
					"BQAAAMoDAAAAAAAAywMAAAAAAAAAAAAAywMAAAAAAADMAwAAAAAAAAAAAADMAwAAAAAAAM0DAAAAAAAAAAAAAM0DAAAAAAAAzgMAAAAAAAAAAAAAzgMAAAAAAADPAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoDAAAAAAAAygMAAAAAAAAAAAAAAADwvw"
				],
				[
					531,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC0CQAAbWFjcm8oZmluZF9saWJ3ZWJzb2NrZXRzKQoKICBpbmNsdWRlKEZpbmRQa2dDb25maWcpCgogIHVuc2V0KExJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTIENBQ0hFKQogIHVuc2V0KExJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIgQ0FDSEUpCiAgdW5zZXQoTElCV0VCU09DS0VUU19MSUJSQVJJRVMgQ0FDSEUpCiAgdW5zZXQoTElCV0VCU09DS0VUU19GT1VORCBDQUNIRSkKCiAgcGtnX2NoZWNrX21vZHVsZXMoTElCV0VCU09DS0VUUyBsaWJ3ZWJzb2NrZXRzKQogIHBrZ19zZWFyY2hfbW9kdWxlKE9QRU5TU0wgb3BlbnNzbCkKCiAgaWYoTk9UIE9QRU5TU0xfU1NMX0xJQlJBUlkgQU5EIE5PVCBPUEVOU1NMX0NSWVBUT19MSUJSQVJZKQogICAgaWYocGtnY2ZnX2xpYl9PUEVOU1NMX3NzbCkKICAgICAgc2V0KE9QRU5TU0xfU1NMX0xJQlJBUlkgIntwa2djZmdfbGliX09QRU5TU0xfc3NsfSIgQ0FDSEUgUEFUSCAiT3BlblNTTCBzc2wgbGlicmFyeSIpCiAgICBlbmRpZihwa2djZmdfbGliX09QRU5TU0xfc3NsKQogICAgaWYocGtnY2ZnX2xpYl9PUEVOU1NMX2NyeXB0bykKICAgICAgc2V0KE9QRU5TU0xfQ1JZUFRPX0xJQlJBUlkgIntwa2djZmdfbGliX09QRU5TU0xfY3J5cHRvfSIgQ0FDSEUgUEFUSCAiT3BlblNTTCBjcnlwdG8gbGlicmFyeSIpCiAgICBlbmRpZihwa2djZmdfbGliX09QRU5TU0xfY3J5cHRvKQogIGVuZGlmKE5PVCBPUEVOU1NMX1NTTF9MSUJSQVJZIEFORCBOT1QgT1BFTlNTTF9DUllQVE9fTElCUkFSWSkKCiAgaWYoTk9UIE9QRU5TU0xfTElCUkFSSUVTKQogICAgc2V0KE9QRU5TU0xfTElCUkFSSUVTICIke09QRU5TU0xfU1NMX0xJQlJBUll9OyR7T1BFTlNTTF9DUllQVE9fTElCUkFSWX0iKQogIGVuZGlmKE5PVCBPUEVOU1NMX0xJQlJBUklFUykKCmR1bXAoT1BFTlNTTF9TU0xfTElCUkFSWSBPUEVOU1NMX0NSWVBUT19MSUJSQVJZIE9QRU5TU0xfTElCUkFSSUVTIE9QRU5TU0xfSU5DTFVERV9ESVJTKQoKICAjZHVtcChPUEVOU1NMX0ZPVU5EIE9QRU5TU0xfTElCUkFSSUVTIE9QRU5TU0xfTElOS19MSUJSQVJJRVMgT1BFTlNTTF9MSUJSQVJZX0RJUlMgT1BFTlNTTF9MREZMQUdTIE9QRU5TU0xfSU5DTFVERV9ESVJTIE9QRU5TU0xfQ0ZMQUdTIE9QRU5TU0xfVkVSU0lPTiBPUEVOU1NMX1BSRUZJWCBPUEVOU1NMX0lOQ0xVREVESVIgT1BFTlNTTF9MSUJESVIpCgogIGlmKE5PVCBMSUJXRUJTT0NLRVRTX0xJQlJBUklFUykKICAgIGlmKHBrZ2NmZ19saWJfTElCV0VCU09DS0VUU193ZWJzb2NrZXRzIEFORCBFWElTVFMgIiR7cGtnY2ZnX2xpYl9MSUJXRUJTT0NLRVRTX3dlYnNvY2tldHN9IikKICAgICAgc2V0KExJQldFQlNPQ0tFVFNfTElCUkFSSUVTICIke3BrZ2NmZ19saWJfTElCV0VCU09DS0VUU193ZWJzb2NrZXRzfSIgQ0FDSEUgRklMRVBBVEggImxpYndlYnNvY2tldHMgbGlicmFyeSIpCiAgICBlbmRpZihwa2djZmdfbGliX0xJQldFQlNPQ0tFVFNfd2Vic29ja2V0cyBBTkQgRVhJU1RTICIke3BrZ2NmZ19saWJfTElCV0VCU09DS0VUU193ZWJzb2NrZXRzfSIpCiAgZW5kaWYoTElCV0VCU09DS0VUU19MSUJSQVJJRVMpCgogIGlmKExJQldFQlNPQ0tFVFNfTElCUkFSSUVTIEFORCBMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyBNQVRDSEVTICIuKi8uKiIpCiAgICBzdHJpbmcoUkVHRVggUkVQTEFDRSAiL1teL10qJCIgIiIgTElCV0VCU09DS0VUU19MSUJSQVJZX0RJUiAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUklFU30iKQogICAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIi9saWIvLiokIiAiL2luY2x1ZGUiIExJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTICIke0xJQldFQlNPQ0tFVFNfTElCUkFSSUVTfSIpCiAgZW5kaWYoTElCV0VCU09DS0VUU19MSUJSQVJJRVMgQU5EIExJQldFQlNPQ0tFVFNfTElCUkFSSUVTIE1BVENIRVMgIi4qLy4qIikKCiAgaWYoQ01BS0VfSU5TVEFMTF9SUEFUSCkKICAgIHNldChDTUFLRV9JTlNUQUxMX1JQQVRIICIke0xJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVJ9OiR7Q01BS0VfSU5TVEFMTF9SUEFUSH0iIENBQ0hFIFBBVEggIkluc3RhbGwgcnVudGltZSBwYXRoIikKICBlbHNlKENNQUtFX0lOU1RBTExfUlBBVEgpCiAgICBzZXQoQ01BS0VfSU5TVEFMTF9SUEFUSCAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSfSIgQ0FDSEUgUEFUSCAiSW5zdGFsbCBydW50aW1lIHBhdGgiKQogIGVuZGlmKENNQUtFX0lOU1RBTExfUlBBVEgpCgogIHNldChMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSICIke0xJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVJ9IiBDQUNIRSBQQVRIICJsaWJ3ZWJzb2NrZXRzIGxpYnJhcnkgZGlyZWN0b3J5IikKICBzZXQoTElCV0VCU09DS0VUU19JTkNMVURFX0RJUlMgIiR7TElCV0VCU09DS0VUU19JTkNMVURFX0RJUlN9OyR7T1BFTlNTTF9JTkNMVURFX0RJUlN9IgogICAgICBDQUNIRSBQQVRIICJsaWJ3ZWJzb2NrZXRzIGluY2x1ZGUgZGlyZWN0b3J5IikKCmVuZG1hY3JvKGZpbmRfbGlid2Vic29ja2V0cykKAAAAAAAAAAC2CQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANADAAAAAAAA0AMAAAAAAAAAAAAAAADwvw"
				],
				[
					539,
					1,
					"insert",
					{
						"characters": "$"
					},
					"AQAAAKUBAAAAAAAApgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKUBAAAAAAAApQEAAAAAAAAAAAAAAADwvw"
				],
				[
					546,
					1,
					"insert",
					{
						"characters": "$"
					},
					"AQAAAEgCAAAAAAAASQIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgCAAAAAAAASAIAAAAAAAAAAAAAAADwvw"
				],
				[
					555,
					1,
					"left_delete",
					null,
					"AQAAAPECAAAAAAAA8QIAAAAAAAAcAAAAICBpZihOT1QgT1BFTlNTTF9MSUJSQVJJRVMpCg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPECAAAAAAAADQMAAAAAAAAAAAAAAAAAAA"
				],
				[
					559,
					1,
					"left_delete",
					null,
					"AQAAAEADAAAAAAAAQAMAAAAAAAAeAAAAIGVuZGlmKE5PVCBPUEVOU1NMX0xJQlJBUklFUykK",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEADAAAAAAAAXgMAAAAAAAAAAAAAAAAkQA"
				],
				[
					561,
					1,
					"cut",
					null,
					"AQAAAPICAAAAAAAA8gIAAAAAAABOAAAAICAgc2V0KE9QRU5TU0xfTElCUkFSSUVTICIke09QRU5TU0xfU1NMX0xJQlJBUll9OyR7T1BFTlNTTF9DUllQVE9fTElCUkFSWX0iKQog",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEADAAAAAAAA8gIAAAAAAAAAAAAAAAAkQA"
				],
				[
					563,
					1,
					"paste",
					null,
					"AQAAALECAAAAAAAA/wIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALECAAAAAAAAsQIAAAAAAAAAAAAAAAAkQA"
				],
				[
					570,
					1,
					"left_delete",
					null,
					"AQAAAD0DAAAAAAAAPQMAAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD4DAAAAAAAAPgMAAAAAAAAAAAAAAAAkQA"
				],
				[
					586,
					1,
					"cut",
					null,
					"AQAAALACAAAAAAAAsAIAAAAAAABOAAAAICAgIHNldChPUEVOU1NMX0xJQlJBUklFUyAiJHtPUEVOU1NMX1NTTF9MSUJSQVJZfTske09QRU5TU0xfQ1JZUFRPX0xJQlJBUll9IikK",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALACAAAAAAAA/gIAAAAAAAAAAAAAAADwvw"
				],
				[
					589,
					1,
					"paste",
					null,
					"AQAAAPECAAAAAAAAPwMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPECAAAAAAAA8QIAAAAAAAAAAAAAAADwvw"
				],
				[
					591,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAPACAAAAAAAA8QIAAAAAAAAAAAAA8QIAAAAAAADyAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPACAAAAAAAA8AIAAAAAAAAAAAAAAAAAAA"
				],
				[
					593,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAPECAAAAAAAA8gIAAAAAAAAAAAAA8gIAAAAAAADzAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPECAAAAAAAA8QIAAAAAAAAAAAAAAAAAAA"
				],
				[
					594,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPMCAAAAAAAA9QIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMCAAAAAAAA8wIAAAAAAAAAAAAAAADwvw"
				],
				[
					595,
					1,
					"insert",
					{
						"characters": "OPENSSL_SSL_LIBRAR"
					},
					"EgAAAPQCAAAAAAAA9QIAAAAAAAAAAAAA9QIAAAAAAAD2AgAAAAAAAAAAAAD2AgAAAAAAAPcCAAAAAAAAAAAAAPcCAAAAAAAA+AIAAAAAAAAAAAAA+AIAAAAAAAD5AgAAAAAAAAAAAAD5AgAAAAAAAPoCAAAAAAAAAAAAAPoCAAAAAAAA+wIAAAAAAAAAAAAA+wIAAAAAAAD8AgAAAAAAAAAAAAD8AgAAAAAAAP0CAAAAAAAAAAAAAP0CAAAAAAAA/gIAAAAAAAAAAAAA/gIAAAAAAAD/AgAAAAAAAAAAAAD/AgAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAQMAAAAAAAAAAAAAAQMAAAAAAAACAwAAAAAAAAAAAAACAwAAAAAAAAMDAAAAAAAAAAAAAAMDAAAAAAAABAMAAAAAAAAAAAAABAMAAAAAAAAFAwAAAAAAAAAAAAAFAwAAAAAAAAYDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPQCAAAAAAAA9AIAAAAAAAAAAAAAAADwvw"
				],
				[
					596,
					1,
					"insert_completion",
					{
						"completion": "OPENSSL_SSL_LIBRARY",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "OPENSSL_SSL_LIBRARY"
					},
					"AgAAAPQCAAAAAAAA9AIAAAAAAAASAAAAT1BFTlNTTF9TU0xfTElCUkFS9AIAAAAAAAAHAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYDAAAAAAAABgMAAAAAAAAAAAAAAADwvw"
				],
				[
					597,
					1,
					"insert",
					{
						"characters": " AND"
					},
					"BAAAAAcDAAAAAAAACAMAAAAAAAAAAAAACAMAAAAAAAAJAwAAAAAAAAAAAAAJAwAAAAAAAAoDAAAAAAAAAAAAAAoDAAAAAAAACwMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcDAAAAAAAABwMAAAAAAAAAAAAAAADwvw"
				],
				[
					598,
					1,
					"insert",
					{
						"characters": " OPENSSL_C"
					},
					"CgAAAAsDAAAAAAAADAMAAAAAAAAAAAAADAMAAAAAAAANAwAAAAAAAAAAAAANAwAAAAAAAA4DAAAAAAAAAAAAAA4DAAAAAAAADwMAAAAAAAAAAAAADwMAAAAAAAAQAwAAAAAAAAAAAAAQAwAAAAAAABEDAAAAAAAAAAAAABEDAAAAAAAAEgMAAAAAAAAAAAAAEgMAAAAAAAATAwAAAAAAAAAAAAATAwAAAAAAABQDAAAAAAAAAAAAABQDAAAAAAAAFQMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsDAAAAAAAACwMAAAAAAAAAAAAAAADwvw"
				],
				[
					599,
					1,
					"insert_completion",
					{
						"completion": "OPENSSL_CRYPTO_LIBRARY",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "OPENSSL_CRYPTO_LIBRARY"
					},
					"AgAAAAwDAAAAAAAADAMAAAAAAAAJAAAAT1BFTlNTTF9DDAMAAAAAAAAiAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUDAAAAAAAAFQMAAAAAAAAAAAAAAADwvw"
				],
				[
					602,
					1,
					"cut",
					null,
					"AQAAAPECAAAAAAAA8QIAAAAAAAAzAAAAaWYoT1BFTlNTTF9TU0xfTElCUkFSWSBBTkQgT1BFTlNTTF9DUllQVE9fTElCUkFSWSkK",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQDAAAAAAAA8QIAAAAAAAAAAAAAAAAAAA"
				],
				[
					603,
					1,
					"paste",
					null,
					"AQAAAPECAAAAAAAAJAMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPECAAAAAAAA8QIAAAAAAAAAAAAAAADwvw"
				],
				[
					605,
					1,
					"paste",
					null,
					"AQAAAHMDAAAAAAAApgMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHMDAAAAAAAAcwMAAAAAAAAAAAAAAAAAAA"
				],
				[
					607,
					1,
					"insert",
					{
						"characters": "end"
					},
					"AwAAAHMDAAAAAAAAdAMAAAAAAAAAAAAAdAMAAAAAAAB1AwAAAAAAAAAAAAB1AwAAAAAAAHYDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHMDAAAAAAAAcwMAAAAAAAAAAAAAAAAAAA"
				],
				[
					610,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADnCQAAbWFjcm8oZmluZF9saWJ3ZWJzb2NrZXRzKQoKICBpbmNsdWRlKEZpbmRQa2dDb25maWcpCgogIHVuc2V0KExJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTIENBQ0hFKQogIHVuc2V0KExJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIgQ0FDSEUpCiAgdW5zZXQoTElCV0VCU09DS0VUU19MSUJSQVJJRVMgQ0FDSEUpCiAgdW5zZXQoTElCV0VCU09DS0VUU19GT1VORCBDQUNIRSkKCiAgcGtnX2NoZWNrX21vZHVsZXMoTElCV0VCU09DS0VUUyBsaWJ3ZWJzb2NrZXRzKQogIHBrZ19zZWFyY2hfbW9kdWxlKE9QRU5TU0wgb3BlbnNzbCkKCiAgaWYoTk9UIE9QRU5TU0xfU1NMX0xJQlJBUlkgQU5EIE5PVCBPUEVOU1NMX0NSWVBUT19MSUJSQVJZKQogICAgaWYocGtnY2ZnX2xpYl9PUEVOU1NMX3NzbCkKICAgICAgc2V0KE9QRU5TU0xfU1NMX0xJQlJBUlkgIiR7cGtnY2ZnX2xpYl9PUEVOU1NMX3NzbH0iIENBQ0hFIFBBVEggIk9wZW5TU0wgc3NsIGxpYnJhcnkiKQogICAgZW5kaWYocGtnY2ZnX2xpYl9PUEVOU1NMX3NzbCkKICAgIGlmKHBrZ2NmZ19saWJfT1BFTlNTTF9jcnlwdG8pCiAgICAgIHNldChPUEVOU1NMX0NSWVBUT19MSUJSQVJZICIke3BrZ2NmZ19saWJfT1BFTlNTTF9jcnlwdG99IiBDQUNIRSBQQVRIICJPcGVuU1NMIGNyeXB0byBsaWJyYXJ5IikKICAgIGVuZGlmKHBrZ2NmZ19saWJfT1BFTlNTTF9jcnlwdG8pCiAgZW5kaWYoTk9UIE9QRU5TU0xfU1NMX0xJQlJBUlkgQU5EIE5PVCBPUEVOU1NMX0NSWVBUT19MSUJSQVJZKQoKaWYoT1BFTlNTTF9TU0xfTElCUkFSWSBBTkQgT1BFTlNTTF9DUllQVE9fTElCUkFSWSkKICAgICBzZXQoT1BFTlNTTF9MSUJSQVJJRVMgIiR7T1BFTlNTTF9TU0xfTElCUkFSWX07JHtPUEVOU1NMX0NSWVBUT19MSUJSQVJZfSIpCmVuZGlmKE9QRU5TU0xfU1NMX0xJQlJBUlkgQU5EIE9QRU5TU0xfQ1JZUFRPX0xJQlJBUlkpCgogIGR1bXAoT1BFTlNTTF9TU0xfTElCUkFSWSBPUEVOU1NMX0NSWVBUT19MSUJSQVJZIE9QRU5TU0xfTElCUkFSSUVTIE9QRU5TU0xfSU5DTFVERV9ESVJTKQoKICAjZHVtcChPUEVOU1NMX0ZPVU5EIE9QRU5TU0xfTElCUkFSSUVTIE9QRU5TU0xfTElOS19MSUJSQVJJRVMgT1BFTlNTTF9MSUJSQVJZX0RJUlMgT1BFTlNTTF9MREZMQUdTIE9QRU5TU0xfSU5DTFVERV9ESVJTIE9QRU5TU0xfQ0ZMQUdTIE9QRU5TU0xfVkVSU0lPTiBPUEVOU1NMX1BSRUZJWCBPUEVOU1NMX0lOQ0xVREVESVIgT1BFTlNTTF9MSUJESVIpCgogIGlmKE5PVCBMSUJXRUJTT0NLRVRTX0xJQlJBUklFUykKICAgIGlmKHBrZ2NmZ19saWJfTElCV0VCU09DS0VUU193ZWJzb2NrZXRzIEFORCBFWElTVFMgIiR7cGtnY2ZnX2xpYl9MSUJXRUJTT0NLRVRTX3dlYnNvY2tldHN9IikKICAgICAgc2V0KExJQldFQlNPQ0tFVFNfTElCUkFSSUVTICIke3BrZ2NmZ19saWJfTElCV0VCU09DS0VUU193ZWJzb2NrZXRzfSIgQ0FDSEUgRklMRVBBVEggImxpYndlYnNvY2tldHMgbGlicmFyeSIpCiAgICBlbmRpZihwa2djZmdfbGliX0xJQldFQlNPQ0tFVFNfd2Vic29ja2V0cyBBTkQgRVhJU1RTICIke3BrZ2NmZ19saWJfTElCV0VCU09DS0VUU193ZWJzb2NrZXRzfSIpCiAgZW5kaWYoTElCV0VCU09DS0VUU19MSUJSQVJJRVMpCgogIGlmKExJQldFQlNPQ0tFVFNfTElCUkFSSUVTIEFORCBMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyBNQVRDSEVTICIuKi8uKiIpCiAgICBzdHJpbmcoUkVHRVggUkVQTEFDRSAiL1teL10qJCIgIiIgTElCV0VCU09DS0VUU19MSUJSQVJZX0RJUiAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUklFU30iKQogICAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIi9saWIvLiokIiAiL2luY2x1ZGUiIExJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTICIke0xJQldFQlNPQ0tFVFNfTElCUkFSSUVTfSIpCiAgZW5kaWYoTElCV0VCU09DS0VUU19MSUJSQVJJRVMgQU5EIExJQldFQlNPQ0tFVFNfTElCUkFSSUVTIE1BVENIRVMgIi4qLy4qIikKCiAgaWYoQ01BS0VfSU5TVEFMTF9SUEFUSCkKICAgIHNldChDTUFLRV9JTlNUQUxMX1JQQVRIICIke0xJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVJ9OiR7Q01BS0VfSU5TVEFMTF9SUEFUSH0iIENBQ0hFIFBBVEggIkluc3RhbGwgcnVudGltZSBwYXRoIikKICBlbHNlKENNQUtFX0lOU1RBTExfUlBBVEgpCiAgICBzZXQoQ01BS0VfSU5TVEFMTF9SUEFUSCAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSfSIgQ0FDSEUgUEFUSCAiSW5zdGFsbCBydW50aW1lIHBhdGgiKQogIGVuZGlmKENNQUtFX0lOU1RBTExfUlBBVEgpCgogIHNldChMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSICIke0xJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVJ9IiBDQUNIRSBQQVRIICJsaWJ3ZWJzb2NrZXRzIGxpYnJhcnkgZGlyZWN0b3J5IikKICBzZXQoTElCV0VCU09DS0VUU19JTkNMVURFX0RJUlMgIiR7TElCV0VCU09DS0VUU19JTkNMVURFX0RJUlN9OyR7T1BFTlNTTF9JTkNMVURFX0RJUlN9IgogICAgICBDQUNIRSBQQVRIICJsaWJ3ZWJzb2NrZXRzIGluY2x1ZGUgZGlyZWN0b3J5IikKCmVuZG1hY3JvKGZpbmRfbGlid2Vic29ja2V0cykKAAAAAAAAAADqCQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYDAAAAAAAAdgMAAAAAAAAAAAAAAADwvw"
				],
				[
					625,
					1,
					"insert",
					{
						"characters": "NOT"
					},
					"AwAAADMGAAAAAAAANAYAAAAAAAAAAAAANAYAAAAAAAA1BgAAAAAAAAAAAAA1BgAAAAAAADYGAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMGAAAAAAAAMwYAAAAAAAAAAAAAAADwvw"
				],
				[
					626,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADYGAAAAAAAANwYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYGAAAAAAAANgYAAAAAAAAAAAAAAADwvw"
				],
				[
					632,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAE8GAAAAAAAAUAYAAAAAAAAAAAAAUAYAAAAAAABSBgAAAAAAAAAAAABSBgAAAAAAAFMGAAAAAAAAAAAAAFMGAAAAAAAAVQYAAAAAAAAAAAAAUAYAAAAAAABQBgAAAAAAAAIAAAAgIFMGAAAAAAAAVAYAAAAAAAAAAAAAVAYAAAAAAABVBgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8GAAAAAAAATwYAAAAAAAD////////vfw"
				],
				[
					633,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFUGAAAAAAAAVwYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUGAAAAAAAAVQYAAAAAAAAAAAAAAADwvw"
				],
				[
					634,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAFUGAAAAAAAAVQYAAAAAAAABAAAAKFUGAAAAAAAAVQYAAAAAAAABAAAAKQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYGAAAAAAAAVgYAAAAAAAAAAAAAAADwvw"
				],
				[
					635,
					5,
					"left_delete",
					null,
					"BQAAAFQGAAAAAAAAVAYAAAAAAAABAAAAZlMGAAAAAAAAUwYAAAAAAAABAAAAaVEGAAAAAAAAUQYAAAAAAAACAAAAICBQBgAAAAAAAFAGAAAAAAAAAQAAAApPBgAAAAAAAE8GAAAAAAAAAQAAAAo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUGAAAAAAAAVQYAAAAAAAAAAAAAAADwvw"
				],
				[
					646,
					1,
					"paste",
					null,
					"AgAAAPwEAAAAAAAAHwUAAAAAAAAAAAAAHwUAAAAAAAAfBQAAAAAAACMAAABwa2djZmdfbGliX0xJQldFQlNPQ0tFVFNfd2Vic29ja2V0cw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwEAAAAAAAAHwUAAAAAAAAAAAAAAADwvw"
				],
				[
					653,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANUEAAAAAAAA1gQAAAAAAAAAAAAA1gQAAAAAAADWBAAAAAAAACEAAABpZihOT1QgTElCV0VCU09DS0VUU19MSUJSQVJJRVMpCiA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUEAAAAAAAA9gQAAAAAAAAAAAAAAADwvw"
				],
				[
					667,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAAsGAAAAAAAADAYAAAAAAAAAAAAADAYAAAAAAAAMBgAAAAAAACUAAAAgIGVuZGlmKE5PVCBMSUJXRUJTT0NLRVRTX0xJQlJBUklFUykK",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsGAAAAAAAAMAYAAAAAAAAAAAAAAADwvw"
				],
				[
					677,
					1,
					"paste",
					null,
					"AQAAAAwGAAAAAAAAfgYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAwGAAAAAAAADAYAAAAAAAAAAAAAAADwvw"
				],
				[
					687,
					1,
					"paste",
					null,
					"AgAAADEGAAAAAAAASAYAAAAAAAAAAAAASAYAAAAAAABIBgAAAAAAACMAAABwa2djZmdfbGliX0xJQldFQlNPQ0tFVFNfd2Vic29ja2V0cw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEGAAAAAAAAVAYAAAAAAAAAAAAAAADwvw"
				],
				[
					690,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAH8FAAAAAAAAgAUAAAAAAAAAAAAAgAUAAAAAAACABQAAAAAAACcAAAAgQ0FDSEUgRklMRVBBVEggImxpYndlYnNvY2tldHMgbGlicmFyeSI",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8FAAAAAAAApgUAAAAAAAAAAAAAAADwvw"
				],
				[
					695,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADqCQAAbWFjcm8oZmluZF9saWJ3ZWJzb2NrZXRzKQoKICBpbmNsdWRlKEZpbmRQa2dDb25maWcpCgogIHVuc2V0KExJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTIENBQ0hFKQogIHVuc2V0KExJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIgQ0FDSEUpCiAgdW5zZXQoTElCV0VCU09DS0VUU19MSUJSQVJJRVMgQ0FDSEUpCiAgdW5zZXQoTElCV0VCU09DS0VUU19GT1VORCBDQUNIRSkKCiAgcGtnX2NoZWNrX21vZHVsZXMoTElCV0VCU09DS0VUUyBsaWJ3ZWJzb2NrZXRzKQogIHBrZ19zZWFyY2hfbW9kdWxlKE9QRU5TU0wgb3BlbnNzbCkKCiAgaWYoTk9UIE9QRU5TU0xfU1NMX0xJQlJBUlkgQU5EIE5PVCBPUEVOU1NMX0NSWVBUT19MSUJSQVJZKQogICAgaWYocGtnY2ZnX2xpYl9PUEVOU1NMX3NzbCkKICAgICAgc2V0KE9QRU5TU0xfU1NMX0xJQlJBUlkgIiR7cGtnY2ZnX2xpYl9PUEVOU1NMX3NzbH0iIENBQ0hFIFBBVEggIk9wZW5TU0wgc3NsIGxpYnJhcnkiKQogICAgZW5kaWYocGtnY2ZnX2xpYl9PUEVOU1NMX3NzbCkKICAgIGlmKHBrZ2NmZ19saWJfT1BFTlNTTF9jcnlwdG8pCiAgICAgIHNldChPUEVOU1NMX0NSWVBUT19MSUJSQVJZICIke3BrZ2NmZ19saWJfT1BFTlNTTF9jcnlwdG99IiBDQUNIRSBQQVRIICJPcGVuU1NMIGNyeXB0byBsaWJyYXJ5IikKICAgIGVuZGlmKHBrZ2NmZ19saWJfT1BFTlNTTF9jcnlwdG8pCiAgZW5kaWYoTk9UIE9QRU5TU0xfU1NMX0xJQlJBUlkgQU5EIE5PVCBPUEVOU1NMX0NSWVBUT19MSUJSQVJZKQoKICBpZihPUEVOU1NMX1NTTF9MSUJSQVJZIEFORCBPUEVOU1NMX0NSWVBUT19MSUJSQVJZKQogICAgc2V0KE9QRU5TU0xfTElCUkFSSUVTICIke09QRU5TU0xfU1NMX0xJQlJBUll9OyR7T1BFTlNTTF9DUllQVE9fTElCUkFSWX0iKQogIGVuZGlmKE9QRU5TU0xfU1NMX0xJQlJBUlkgQU5EIE9QRU5TU0xfQ1JZUFRPX0xJQlJBUlkpCgogIGR1bXAoT1BFTlNTTF9TU0xfTElCUkFSWSBPUEVOU1NMX0NSWVBUT19MSUJSQVJZIE9QRU5TU0xfTElCUkFSSUVTIE9QRU5TU0xfSU5DTFVERV9ESVJTKQoKICAjZHVtcChPUEVOU1NMX0ZPVU5EIE9QRU5TU0xfTElCUkFSSUVTIE9QRU5TU0xfTElOS19MSUJSQVJJRVMgT1BFTlNTTF9MSUJSQVJZX0RJUlMgT1BFTlNTTF9MREZMQUdTIE9QRU5TU0xfSU5DTFVERV9ESVJTIE9QRU5TU0xfQ0ZMQUdTIE9QRU5TU0xfVkVSU0lPTiBPUEVOU1NMX1BSRUZJWCBPUEVOU1NMX0lOQ0xVREVESVIgT1BFTlNTTF9MSUJESVIpCgogICAgICBpZihwa2djZmdfbGliX0xJQldFQlNPQ0tFVFNfd2Vic29ja2V0cyBBTkQgRVhJU1RTICIke3BrZ2NmZ19saWJfTElCV0VCU09DS0VUU193ZWJzb2NrZXRzfSIpCiAgICAgIHNldChMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyAiJHtwa2djZmdfbGliX0xJQldFQlNPQ0tFVFNfd2Vic29ja2V0c30iICkKICAgIGVuZGlmKHBrZ2NmZ19saWJfTElCV0VCU09DS0VUU193ZWJzb2NrZXRzIEFORCBFWElTVFMgIiR7cGtnY2ZnX2xpYl9MSUJXRUJTT0NLRVRTX3dlYnNvY2tldHN9IikKICAgICAgIHNldChMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUklFU30iIENBQ0hFIEZJTEVQQVRIICJsaWJ3ZWJzb2NrZXRzIGxpYnJhcnkiKQogIGlmKExJQldFQlNPQ0tFVFNfTElCUkFSSUVTIEFORCBMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyBNQVRDSEVTICIuKi8uKiIpCiAgICBzdHJpbmcoUkVHRVggUkVQTEFDRSAiL1teL10qJCIgIiIgTElCV0VCU09DS0VUU19MSUJSQVJZX0RJUiAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUklFU30iKQogICAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIi9saWIvLiokIiAiL2luY2x1ZGUiIExJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTICIke0xJQldFQlNPQ0tFVFNfTElCUkFSSUVTfSIpCiAgZW5kaWYoTElCV0VCU09DS0VUU19MSUJSQVJJRVMgQU5EIExJQldFQlNPQ0tFVFNfTElCUkFSSUVTIE1BVENIRVMgIi4qLy4qIikKCiAgaWYoQ01BS0VfSU5TVEFMTF9SUEFUSCkKICAgIHNldChDTUFLRV9JTlNUQUxMX1JQQVRIICIke0xJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVJ9OiR7Q01BS0VfSU5TVEFMTF9SUEFUSH0iIENBQ0hFIFBBVEggIkluc3RhbGwgcnVudGltZSBwYXRoIikKICBlbHNlKENNQUtFX0lOU1RBTExfUlBBVEgpCiAgICBzZXQoQ01BS0VfSU5TVEFMTF9SUEFUSCAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSfSIgQ0FDSEUgUEFUSCAiSW5zdGFsbCBydW50aW1lIHBhdGgiKQogIGVuZGlmKENNQUtFX0lOU1RBTExfUlBBVEgpCgogIHNldChMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSICIke0xJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVJ9IiBDQUNIRSBQQVRIICJsaWJ3ZWJzb2NrZXRzIGxpYnJhcnkgZGlyZWN0b3J5IikKICBzZXQoTElCV0VCU09DS0VUU19JTkNMVURFX0RJUlMgIiR7TElCV0VCU09DS0VUU19JTkNMVURFX0RJUlN9OyR7T1BFTlNTTF9JTkNMVURFX0RJUlN9IgogICAgICBDQUNIRSBQQVRIICJsaWJ3ZWJzb2NrZXRzIGluY2x1ZGUgZGlyZWN0b3J5IikKCmVuZG1hY3JvKGZpbmRfbGlid2Vic29ja2V0cykKAAAAAAAAAADcCQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIAFAAAAAAAAgAUAAAAAAAAAAAAAAADwvw"
				],
				[
					698,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAD4GAAAAAAAAPwYAAAAAAAAAAAAAPwYAAAAAAABBBgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD4GAAAAAAAAPgYAAAAAAAD////////vfw"
				],
				[
					701,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADfCQAAbWFjcm8oZmluZF9saWJ3ZWJzb2NrZXRzKQoKICBpbmNsdWRlKEZpbmRQa2dDb25maWcpCgogIHVuc2V0KExJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTIENBQ0hFKQogIHVuc2V0KExJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIgQ0FDSEUpCiAgdW5zZXQoTElCV0VCU09DS0VUU19MSUJSQVJJRVMgQ0FDSEUpCiAgdW5zZXQoTElCV0VCU09DS0VUU19GT1VORCBDQUNIRSkKCiAgcGtnX2NoZWNrX21vZHVsZXMoTElCV0VCU09DS0VUUyBsaWJ3ZWJzb2NrZXRzKQogIHBrZ19zZWFyY2hfbW9kdWxlKE9QRU5TU0wgb3BlbnNzbCkKCiAgaWYoTk9UIE9QRU5TU0xfU1NMX0xJQlJBUlkgQU5EIE5PVCBPUEVOU1NMX0NSWVBUT19MSUJSQVJZKQogICAgaWYocGtnY2ZnX2xpYl9PUEVOU1NMX3NzbCkKICAgICAgc2V0KE9QRU5TU0xfU1NMX0xJQlJBUlkgIiR7cGtnY2ZnX2xpYl9PUEVOU1NMX3NzbH0iIENBQ0hFIFBBVEggIk9wZW5TU0wgc3NsIGxpYnJhcnkiKQogICAgZW5kaWYocGtnY2ZnX2xpYl9PUEVOU1NMX3NzbCkKICAgIGlmKHBrZ2NmZ19saWJfT1BFTlNTTF9jcnlwdG8pCiAgICAgIHNldChPUEVOU1NMX0NSWVBUT19MSUJSQVJZICIke3BrZ2NmZ19saWJfT1BFTlNTTF9jcnlwdG99IiBDQUNIRSBQQVRIICJPcGVuU1NMIGNyeXB0byBsaWJyYXJ5IikKICAgIGVuZGlmKHBrZ2NmZ19saWJfT1BFTlNTTF9jcnlwdG8pCiAgZW5kaWYoTk9UIE9QRU5TU0xfU1NMX0xJQlJBUlkgQU5EIE5PVCBPUEVOU1NMX0NSWVBUT19MSUJSQVJZKQoKICBpZihPUEVOU1NMX1NTTF9MSUJSQVJZIEFORCBPUEVOU1NMX0NSWVBUT19MSUJSQVJZKQogICAgc2V0KE9QRU5TU0xfTElCUkFSSUVTICIke09QRU5TU0xfU1NMX0xJQlJBUll9OyR7T1BFTlNTTF9DUllQVE9fTElCUkFSWX0iKQogIGVuZGlmKE9QRU5TU0xfU1NMX0xJQlJBUlkgQU5EIE9QRU5TU0xfQ1JZUFRPX0xJQlJBUlkpCgogIGR1bXAoT1BFTlNTTF9TU0xfTElCUkFSWSBPUEVOU1NMX0NSWVBUT19MSUJSQVJZIE9QRU5TU0xfTElCUkFSSUVTIE9QRU5TU0xfSU5DTFVERV9ESVJTKQoKICAjZHVtcChPUEVOU1NMX0ZPVU5EIE9QRU5TU0xfTElCUkFSSUVTIE9QRU5TU0xfTElOS19MSUJSQVJJRVMgT1BFTlNTTF9MSUJSQVJZX0RJUlMgT1BFTlNTTF9MREZMQUdTIE9QRU5TU0xfSU5DTFVERV9ESVJTIE9QRU5TU0xfQ0ZMQUdTIE9QRU5TU0xfVkVSU0lPTiBPUEVOU1NMX1BSRUZJWCBPUEVOU1NMX0lOQ0xVREVESVIgT1BFTlNTTF9MSUJESVIpCgogIGlmKHBrZ2NmZ19saWJfTElCV0VCU09DS0VUU193ZWJzb2NrZXRzIEFORCBFWElTVFMgIiR7cGtnY2ZnX2xpYl9MSUJXRUJTT0NLRVRTX3dlYnNvY2tldHN9IikKICAgIHNldChMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyAiJHtwa2djZmdfbGliX0xJQldFQlNPQ0tFVFNfd2Vic29ja2V0c30iKQogIGVuZGlmKHBrZ2NmZ19saWJfTElCV0VCU09DS0VUU193ZWJzb2NrZXRzIEFORCBFWElTVFMgIiR7cGtnY2ZnX2xpYl9MSUJXRUJTT0NLRVRTX3dlYnNvY2tldHN9IikKICBzZXQoTElCV0VCU09DS0VUU19MSUJSQVJJRVMgIiR7TElCV0VCU09DS0VUU19MSUJSQVJJRVN9IiBDQUNIRSBGSUxFUEFUSCAibGlid2Vic29ja2V0cyBsaWJyYXJ5IikKICAKICBpZihMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyBBTkQgTElCV0VCU09DS0VUU19MSUJSQVJJRVMgTUFUQ0hFUyAiLiovLioiKQogICAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIi9bXi9dKiQiICIiIExJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIgIiR7TElCV0VCU09DS0VUU19MSUJSQVJJRVN9IikKICAgIHN0cmluZyhSRUdFWCBSRVBMQUNFICIvbGliLy4qJCIgIi9pbmNsdWRlIiBMSUJXRUJTT0NLRVRTX0lOQ0xVREVfRElSUyAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUklFU30iKQogIGVuZGlmKExJQldFQlNPQ0tFVFNfTElCUkFSSUVTIEFORCBMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyBNQVRDSEVTICIuKi8uKiIpCgogIGlmKENNQUtFX0lOU1RBTExfUlBBVEgpCiAgICBzZXQoQ01BS0VfSU5TVEFMTF9SUEFUSCAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSfToke0NNQUtFX0lOU1RBTExfUlBBVEh9IiBDQUNIRSBQQVRIICJJbnN0YWxsIHJ1bnRpbWUgcGF0aCIpCiAgZWxzZShDTUFLRV9JTlNUQUxMX1JQQVRIKQogICAgc2V0KENNQUtFX0lOU1RBTExfUlBBVEggIiR7TElCV0VCU09DS0VUU19MSUJSQVJZX0RJUn0iIENBQ0hFIFBBVEggIkluc3RhbGwgcnVudGltZSBwYXRoIikKICBlbmRpZihDTUFLRV9JTlNUQUxMX1JQQVRIKQoKICBzZXQoTElCV0VCU09DS0VUU19MSUJSQVJZX0RJUiAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSfSIgQ0FDSEUgUEFUSCAibGlid2Vic29ja2V0cyBsaWJyYXJ5IGRpcmVjdG9yeSIpCiAgc2V0KExJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTICIke0xJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTfTske09QRU5TU0xfSU5DTFVERV9ESVJTfSIKICAgICAgQ0FDSEUgUEFUSCAibGlid2Vic29ja2V0cyBpbmNsdWRlIGRpcmVjdG9yeSIpCgplbmRtYWNybyhmaW5kX2xpYndlYnNvY2tldHMpCgAAAAAAAAAA3QkAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEGAAAAAAAAQQYAAAAAAAAAAAAAAADwvw"
				],
				[
					704,
					1,
					"left_delete",
					null,
					"AQAAAKwDAAAAAAAArAMAAAAAAAAmAQAACiAgZHVtcChPUEVOU1NMX1NTTF9MSUJSQVJZIE9QRU5TU0xfQ1JZUFRPX0xJQlJBUlkgT1BFTlNTTF9MSUJSQVJJRVMgT1BFTlNTTF9JTkNMVURFX0RJUlMpCgogICNkdW1wKE9QRU5TU0xfRk9VTkQgT1BFTlNTTF9MSUJSQVJJRVMgT1BFTlNTTF9MSU5LX0xJQlJBUklFUyBPUEVOU1NMX0xJQlJBUllfRElSUyBPUEVOU1NMX0xERkxBR1MgT1BFTlNTTF9JTkNMVURFX0RJUlMgT1BFTlNTTF9DRkxBR1MgT1BFTlNTTF9WRVJTSU9OIE9QRU5TU0xfUFJFRklYIE9QRU5TU0xfSU5DTFVERURJUiBPUEVOU1NMX0xJQkRJUikK",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANIEAAAAAAAArAMAAAAAAAAAAAAAAAAkQA"
				],
				[
					725,
					1,
					"insert",
					{
						"characters": "\"$"
					},
					"AgAAADsFAAAAAAAAPAUAAAAAAAAAAAAAPAUAAAAAAAA9BQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsFAAAAAAAAOwUAAAAAAAAAAAAAAADwvw"
				],
				[
					726,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAAD0FAAAAAAAAPgUAAAAAAAAAAAAAPgUAAAAAAAA/BQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0FAAAAAAAAPQUAAAAAAAAAAAAAAADwvw"
				],
				[
					727,
					2,
					"left_delete",
					null,
					"AgAAAD4FAAAAAAAAPgUAAAAAAAABAAAAez0FAAAAAAAAPQUAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8FAAAAAAAAPwUAAAAAAAAAAAAAAADwvw"
				],
				[
					728,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAD0FAAAAAAAAPgUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0FAAAAAAAAPQUAAAAAAAAAAAAAAADwvw"
				],
				[
					730,
					1,
					"insert",
					{
						"characters": "}\""
					},
					"AgAAAFUFAAAAAAAAVgUAAAAAAAAAAAAAVgUAAAAAAABXBQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUFAAAAAAAAVQUAAAAAAAAAAAAAAADwvw"
				],
				[
					735,
					1,
					"cut",
					null,
					"AQAAAB8FAAAAAAAAHwUAAAAAAABIAAAATElCV0VCU09DS0VUU19MSUJSQVJJRVMgQU5EICIke0xJQldFQlNPQ0tFVFNfTElCUkFSSUVTfSIgTUFUQ0hFUyAiLiovLioi",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8FAAAAAAAAZwUAAAAAAAAAAAAAAADwvw"
				],
				[
					736,
					1,
					"paste",
					null,
					"AQAAAB8FAAAAAAAAZwUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8FAAAAAAAAHwUAAAAAAAAAAAAAAADwvw"
				],
				[
					740,
					1,
					"paste",
					null,
					"AQAAADcGAAAAAAAAfwYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcGAAAAAAAANwYAAAAAAAAAAAAAAADwvw"
				],
				[
					744,
					1,
					"left_delete",
					null,
					"AQAAAH8GAAAAAAAAfwYAAAAAAABDAAAATElCV0VCU09DS0VUU19MSUJSQVJJRVMgQU5EIExJQldFQlNPQ0tFVFNfTElCUkFSSUVTIE1BVENIRVMgIi4qLy4qIg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8GAAAAAAAAwgYAAAAAAAAAAAAAAADwvw"
				],
				[
					796,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BQAAAGgFAAAAAAAAaQUAAAAAAAAAAAAAaQUAAAAAAABrBQAAAAAAAAAAAABrBQAAAAAAAG0FAAAAAAAAAAAAAG0FAAAAAAAAbgUAAAAAAAAAAAAAbgUAAAAAAABvBQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgFAAAAAAAAaAUAAAAAAAAAAAAAAADwvw"
				],
				[
					797,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAG8FAAAAAAAAcQUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8FAAAAAAAAbwUAAAAAAAAAAAAAAADwvw"
				],
				[
					798,
					1,
					"insert",
					{
						"characters": "NOT"
					},
					"AwAAAHAFAAAAAAAAcQUAAAAAAAAAAAAAcQUAAAAAAAByBQAAAAAAAAAAAAByBQAAAAAAAHMFAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHAFAAAAAAAAcAUAAAAAAAAAAAAAAADwvw"
				],
				[
					799,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHMFAAAAAAAAdAUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHMFAAAAAAAAcwUAAAAAAAAAAAAAAADwvw"
				],
				[
					800,
					1,
					"paste",
					null,
					"AQAAAHQFAAAAAAAAjQUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQFAAAAAAAAdAUAAAAAAAAAAAAAAADwvw"
				],
				[
					804,
					1,
					"insert",
					{
						"characters": "\nendif"
					},
					"BwAAAOwFAAAAAAAA7QUAAAAAAAAAAAAA7QUAAAAAAADxBQAAAAAAAAAAAADxBQAAAAAAAPIFAAAAAAAAAAAAAPIFAAAAAAAA8wUAAAAAAAAAAAAA8wUAAAAAAAD0BQAAAAAAAAAAAAD0BQAAAAAAAPUFAAAAAAAAAAAAAPUFAAAAAAAA9gUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOwFAAAAAAAA7AUAAAAAAAD////////vfw"
				],
				[
					805,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AwAAAPYFAAAAAAAA+AUAAAAAAAAAAAAA7QUAAAAAAADtBQAAAAAAAAQAAAAgICAg7QUAAAAAAADvBQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYFAAAAAAAA9gUAAAAAAAAAAAAAAADwvw"
				],
				[
					806,
					1,
					"insert",
					{
						"characters": "NOT"
					},
					"AwAAAPUFAAAAAAAA9gUAAAAAAAAAAAAA9gUAAAAAAAD3BQAAAAAAAAAAAAD3BQAAAAAAAPgFAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUFAAAAAAAA9QUAAAAAAAAAAAAAAADwvw"
				],
				[
					807,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPgFAAAAAAAA+QUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgFAAAAAAAA+AUAAAAAAAAAAAAAAADwvw"
				],
				[
					808,
					1,
					"paste",
					null,
					"AQAAAPkFAAAAAAAAEgYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkFAAAAAAAA+QUAAAAAAAAAAAAAAADwvw"
				],
				[
					810,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAABMGAAAAAAAAFAYAAAAAAAAAAAAAFAYAAAAAAAAWBgAAAAAAAAAAAAAWBgAAAAAAABcGAAAAAAAAAAAAABcGAAAAAAAAGAYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMGAAAAAAAAEwYAAAAAAAAAAAAAAADwvw"
				],
				[
					811,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABgGAAAAAAAAGgYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgGAAAAAAAAGAYAAAAAAAAAAAAAAADwvw"
				],
				[
					812,
					1,
					"insert",
					{
						"characters": "NOT"
					},
					"AwAAABkGAAAAAAAAGgYAAAAAAAAAAAAAGgYAAAAAAAAbBgAAAAAAAAAAAAAbBgAAAAAAABwGAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkGAAAAAAAAGQYAAAAAAAAAAAAAAADwvw"
				],
				[
					813,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABwGAAAAAAAAHQYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwGAAAAAAAAHAYAAAAAAAAAAAAAAADwvw"
				],
				[
					821,
					1,
					"left_delete",
					null,
					"AQAAAB0GAAAAAAAAHQYAAAAAAAABAAAAKQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4GAAAAAAAAHgYAAAAAAAAAAAAAAADwvw"
				],
				[
					822,
					1,
					"paste",
					null,
					"AQAAAB0GAAAAAAAANwYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0GAAAAAAAAHQYAAAAAAAAAAAAAAADwvw"
				],
				[
					823,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAADcGAAAAAAAAOAYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcGAAAAAAAANwYAAAAAAAAAAAAAAADwvw"
				],
				[
					826,
					1,
					"insert",
					{
						"characters": "\nendif"
					},
					"BwAAAKAGAAAAAAAAoQYAAAAAAAAAAAAAoQYAAAAAAAClBgAAAAAAAAAAAAClBgAAAAAAAKYGAAAAAAAAAAAAAKYGAAAAAAAApwYAAAAAAAAAAAAApwYAAAAAAACoBgAAAAAAAAAAAACoBgAAAAAAAKkGAAAAAAAAAAAAAKkGAAAAAAAAqgYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKAGAAAAAAAAoAYAAAAAAAD////////vfw"
				],
				[
					827,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AwAAAKoGAAAAAAAArAYAAAAAAAAAAAAAoQYAAAAAAAChBgAAAAAAAAQAAAAgICAgoQYAAAAAAACjBgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKoGAAAAAAAAqgYAAAAAAAAAAAAAAADwvw"
				],
				[
					828,
					1,
					"insert",
					{
						"characters": "NOT"
					},
					"AwAAAKkGAAAAAAAAqgYAAAAAAAAAAAAAqgYAAAAAAACrBgAAAAAAAAAAAACrBgAAAAAAAKwGAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkGAAAAAAAAqQYAAAAAAAAAAAAAAADwvw"
				],
				[
					829,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKwGAAAAAAAArQYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwGAAAAAAAArAYAAAAAAAAAAAAAAADwvw"
				],
				[
					830,
					1,
					"paste",
					null,
					"AQAAAK0GAAAAAAAAxwYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK0GAAAAAAAArQYAAAAAAAAAAAAAAADwvw"
				],
				[
					837,
					1,
					"revert",
					null,
					"BwAAAAAAAAAAAAAAAAAAAAAAAABbCQAAbWFjcm8oZmluZF9saWJ3ZWJzb2NrZXRzKQoKICBpbmNsdWRlKEZpbmRQa2dDb25maWcpCgogIHVuc2V0KExJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTIENBQ0hFKQogIHVuc2V0KExJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIgQ0FDSEUpCiAgdW5zZXQoTElCV0VCU09DS0VUU19MSUJSQVJJRVMgQ0FDSEUpCiAgdW5zZXQoTElCV0VCU09DS0VUU19GT1VORCBDQUNIRSkKCiAgcGtnX2NoZWNrX21vZHVsZXMoTElCV0VCU09DS0VUUyBsaWJ3ZWJzb2NrZXRzKQogIHBrZ19zZWFyY2hfbW9kdWxlKE9QRU5TU0wgb3BlbnNzbCkKCiAgaWYoTk9UIE9QRU5TU0xfU1NMX0xJQlJBUlkgQU5EIE5PVCBPUEVOU1NMX0NSWVBUT19MSUJSQVJZKQogICAgaWYocGtnY2ZnX2xpYl9PUEVOU1NMX3NzbCkKICAgICAgc2V0KE9QRU5TU0xfU1NMX0xJQlJBUlkgIiR7cGtnY2ZnX2xpYl9PUEVOU1NMX3NzbH0iIENBQ0hFIFBBVEggIk9wZW5TU0wgc3NsIGxpYnJhcnkiKQogICAgZW5kaWYocGtnY2ZnX2xpYl9PUEVOU1NMX3NzbCkKICAgIGlmKHBrZ2NmZ19saWJfT1BFTlNTTF9jcnlwdG8pCiAgICAgIHNldChPUEVOU1NMX0NSWVBUT19MSUJSQVJZICIke3BrZ2NmZ19saWJfT1BFTlNTTF9jcnlwdG99IiBDQUNIRSBQQVRIICJPcGVuU1NMIGNyeXB0byBsaWJyYXJ5IikKICAgIGVuZGlmKHBrZ2NmZ19saWJfT1BFTlNTTF9jcnlwdG8pCiAgZW5kaWYoTk9UIE9QRU5TU0xfU1NMX0xJQlJBUlkgQU5EIE5PVCBPUEVOU1NMX0NSWVBUT19MSUJSQVJZKQoKICBpZihPUEVOU1NMX1NTTF9MSUJSQVJZIEFORCBPUEVOU1NMX0NSWVBUT19MSUJSQVJZKQogICAgc2V0KE9QRU5TU0xfTElCUkFSSUVTICIke09QRU5TU0xfU1NMX0xJQlJBUll9OyR7T1BFTlNTTF9DUllQVE9fTElCUkFSWX0iKQogIGVuZGlmKE9QRU5TU0xfU1NMX0xJQlJBUlkgQU5EIE9QRU5TU0xfQ1JZUFRPX0xJQlJBUlkpCgogIGlmKHBrZ2NmZ19saWJfTElCV0VCU09DS0VUU193ZWJzb2NrZXRzIEFORCBFWElTVFMgIiR7cGtnY2ZnX2xpYl9MSUJXRUJTT0NLRVRTX3dlYnNvY2tldHN9IikKICAgIHNldChMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyAiJHtwa2djZmdfbGliX0xJQldFQlNPQ0tFVFNfd2Vic29ja2V0c30iKQogIGVuZGlmKHBrZ2NmZ19saWJfTElCV0VCU09DS0VUU193ZWJzb2NrZXRzIEFORCBFWElTVFMgIiR7cGtnY2ZnX2xpYl9MSUJXRUJTT0NLRVRTX3dlYnNvY2tldHN9IikKICBzZXQoTElCV0VCU09DS0VUU19MSUJSQVJJRVMgIiR7TElCV0VCU09DS0VUU19MSUJSQVJJRVN9IiBDQUNIRSBGSUxFUEFUSCAibGlid2Vic29ja2V0cyBsaWJyYXJ5IikKCiAgaWYoTElCV0VCU09DS0VUU19MSUJSQVJJRVMgQU5EICIke0xJQldFQlNPQ0tFVFNfTElCUkFSSUVTfSIgTUFUQ0hFUyAiLiovLioiKQogICAgaWYoTk9UIExJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIpCiAgICBzdHJpbmcoUkVHRVggUkVQTEFDRSAiL1teL10qJCIgIiIgTElCV0VCU09DS0VUU19MSUJSQVJZX0RJUiAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUklFU30iKQogIGVuZGlmKE5PVCBMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSKQogIGlmKE5PVCBMSUJXRUJTT0NLRVRTX0lOQ0xVREVfRElSUykKICAgIHN0cmluZyhSRUdFWCBSRVBMQUNFICIvbGliLy4qJCIgIi9pbmNsdWRlIiBMSUJXRUJTT0NLRVRTX0lOQ0xVREVfRElSUyAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUklFU30iKQogIGVuZGlmKE5PVCBMSUJXRUJTT0NLRVRTX0lOQ0xVREVfRElSUykKICBlbmRpZihMSUJXRUJTT0NLRVRTX0xJQlJBUklFUyBBTkQgIiR7TElCV0VCU09DS0VUU19MSUJSQVJJRVN9IiBNQVRDSEVTICIuKi8uKiIpCgogIGlmKENNQUtFX0lOU1RBTExfUlBBVEgpCiAgICBzZXQoQ01BS0VfSU5TVEFMTF9SUEFUSCAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSfToke0NNQUtFX0lOU1RBTExfUlBBVEh9IiBDQUNIRSBQQVRIICJJbnN0YWxsIHJ1bnRpbWUgcGF0aCIpCiAgZWxzZShDTUFLRV9JTlNUQUxMX1JQQVRIKQogICAgc2V0KENNQUtFX0lOU1RBTExfUlBBVEggIiR7TElCV0VCU09DS0VUU19MSUJSQVJZX0RJUn0iIENBQ0hFIFBBVEggIkluc3RhbGwgcnVudGltZSBwYXRoIikKICBlbmRpZihDTUFLRV9JTlNUQUxMX1JQQVRIKQoKICBzZXQoTElCV0VCU09DS0VUU19MSUJSQVJZX0RJUiAiJHtMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSfSIgQ0FDSEUgUEFUSCAibGlid2Vic29ja2V0cyBsaWJyYXJ5IGRpcmVjdG9yeSIpCiAgc2V0KExJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTICIke0xJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVJTfTske09QRU5TU0xfSU5DTFVERV9ESVJTfSIKICAgICAgQ0FDSEUgUEFUSCAibGlid2Vic29ja2V0cyBpbmNsdWRlIGRpcmVjdG9yeSIpCgplbmRtYWNybyhmaW5kX2xpYndlYnNvY2tldHMpCgAAAAAAAAAAZQkAAAAAAAAAAAAAAAAAAAAAAABlCQAAAAAAAAAAAAAAAAAAAAAAAGUJAAAAAAAAAAAAAAAAAAAAAAAAZQkAAAAAAAAAAAAAAAAAAAAAAABlCQAAAAAAAAAAAAAAAAAAAAAAAGUJAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEIAAAAAAAAQQgAAAAAAAAAAAAAAGB4QA"
				]
			]
		},
		{
			"file": "cmake/functions.cmake",
			"settings":
			{
				"buffer_size": 1841,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAMQcAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"inde",
				"Indentation: Detect"
			],
			[
				"add repo",
				"Package Control: Add Repository"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"cmake",
				"CMake Format: Format Selection"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"prettier",
				"Build With: prettier"
			],
			[
				"edit current",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"edit curr",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 393.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-net",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-fetch.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/http/server/server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-deaddrop/minimal-http-server-deaddrop.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-context-vhost.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-protocols-plugins.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server.h",
		"/home/roman/.config/sublime-text/Packages/User/Themes/stark-contrast.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-stream.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/poll.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-stream.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-proxy.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/rpi4/libwebsockets/include/libwebsockets/lws-context-vhost.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-raw-proxy/minimal-ws-raw-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-raw-proxy/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-logs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/jsutils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/output.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/h2/ops-h2.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/client/connect3.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/Makefile",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/client/connect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/close.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/h1/ops-h1.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-proxy-fallback/minimal-raw-proxy-fallback.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-proxy-fallback/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/rpi4/libwebsockets/include/libwebsockets/lws-logs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibwebsockets.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-fallback-http-server/minimal-raw-fallback-http-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-proxy/minimal-http-server-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/UseMultiArch.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/poll.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/test.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-fallback-http-server/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-w64-mingw32/libwebsockets/src/libwebsockets-stamp/libwebsockets-configure-err.log",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-w64-mingw32/libwebsockets/src/libwebsockets-stamp/libwebsockets-configure-out.log",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/buffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-spam/minimal-ws-client-spam.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-netcat/minimal-raw-netcat.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/gtk/minimal-gtk/main.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-adopt-tcp/minimal-raw-adopt-tcp.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/client-server/minimal-ws-proxy/protocol_lws_minimal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/abstract/transports/raw-skt.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-captive-portal/minimal-http-client-captive-portal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-certinfo/minimal-http-client-certinfo.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-client.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-custom-headers/minimal-http-client-custom-headers.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-h2-rxflow/minimal-http-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-attach/minimal-http-client-attach.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/test-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client/minimal-http-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client/minimal-ws-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-multi/minimal-http-client-multi.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-rx/minimal-ws-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/jsutils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/http/client/client-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/buffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-mimetypes/minimal-http-server-mimetypes.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-response.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.sublime-project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-xenial/libwebsockets/include/libwebsockets/lws-writeable.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-xenial/libwebsockets/include/libwebsockets/lws-protocols-plugins.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugins/deaddrop/protocol_lws_deaddrop.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-dynamic/minimal-http-server-dynamic.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-form-post-file/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-form-post/minimal-http-server-form-post.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-form-post-lwsac/minimal-http-server-form-post.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-form-post-file/minimal-http-server-form-post-file.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-proxy/minimal-raw-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-rx/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server-threadpool/minimal-ws-server-threadpool.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugin-standalone/protocol_example_standalone.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/test-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server/minimal-http-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-xenial/libwebsockets/include/libwebsockets/lws-context-vhost.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-h2-long-poll/minimal-http-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-sse/minimal-http-server-sse.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-sse-ring/minimal-http-server-sse-ring.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-tls/minimal-http-server-tls.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-tls-mem/minimal-http-server-tls-mem.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/http/server/lejp-conf.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/READMEs/README.http-fallback.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/READMEs/README.lwsws.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-tls-mem/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-response.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-button.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/tls/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindMbedTLS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake",
		"/home/roman/.config/sublime-text/Packages/User/SearchInProject.sublime-settings",
		"/home/roman/.config/sublime-text/Packages/Search in Project/SearchInProject.sublime-settings",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt.user",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/api-tests/api-test-lws_smd/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindBrotli.cmake",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Material.tmTheme",
		"/home/roman/Projects/c-utils/cfg.sh",
		"/home/roman/Projects/shish/cfg-autotools.sh",
		"/home/roman/Projects/shish/cfg.sh",
		"/home/roman/Projects/libunistring-0.9.10/cfg-android.sh",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/libwebsockets/include/libwebsockets/lws-context-vhost.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-proxy-fallback/minimal-raw-proxy-fallback.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/dummy-callback.c"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 109.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets,*.h,*.c",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets/*,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets,*.h,*.c",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets/*,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include,*.h",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include,*.h",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets*/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/libwebsockets/*,-*/brotli/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/libwebsockets/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/libwebsockets/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net.*.c,*.h,*.txt,*.cmake,-*/build/*,-*/libwebsockets/*",
			"*.c,*.h,*.txt,*.cmake,-*/build/*",
			"*.c,*.h,*.txt,*.cmakem,-*/build/*",
			"*.c,*.h,*.txt,-*/build/*",
			"*.c,*.h,-*/build/*",
			"*.c,*.h,-*/build/*,-*/libwebsockets/*",
			"*.c,*.h,-*/build/*",
			"*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/net,-*/build/*,*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/net,-*/build/*,-*/libwebsockets/*,*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/net,-*/build/*,*.c,*.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"inspect",
			"EventEmitter",
			"class Conn",
			"inherits",
			"GetClasses",
			"types\\.",
			"getPrototypeChain",
			"[^0-9]0[0-9]",
			"types\\.",
			"memoize",
			"RPCApi",
			"memoize",
			"DebugFlags",
			"memoize",
			"weakAssi",
			"WEBSOCKETS_C_FLAGS",
			"WEBSOCKETS_C_FLAGAS",
			"SSL",
			"BROTLI_LIBRAR",
			"ZLIB_LIBRARY",
			")\n",
			"link_lib",
			"BROTLI",
			"^\\s*message",
			"SYSTEM_NAME",
			"CMAKE_INSTALL_RPATH",
			"^\\s*(message|dump)",
			"^\\s*dump",
			"find_libweb",
			"lws-ws",
			"raw-",
			"\"vhost_opt",
			"\"pv",
			"extra_mime",
			"server_mimetypes",
			"\"application/",
			"lws_protocol_vhost_options",
			"http_vhost_options",
			"vhost_options_new",
			"lws-ws-raw-ws",
			"callback_proxy_ws_server",
			"lws_set_opaque_user_data",
			"lws-ws-raw-raw",
			"MINNET",
			"RESPOND",
			"createWS",
			"ReadHandler",
			"next",
			"vhost_options_free",
			"mimetypes",
			"mount_new",
			"Util\\.",
			"Memoize",
			"Util\\.memoize",
			"CURL_LIBRARY",
			"DROP_PROTO",
			"opaque",
			"context",
			"lwsl_debug",
			"POLLERR",
			"socket_errno",
			"HTTP_CLOSE",
			"CLOSE",
			"protocol_unbind",
			"LWS_CALLBACK_CLIENT_HTTP_DROP_PROTOCOL",
			"DROP_PROTO",
			"ESTABLISHED",
			"5\\.",
			"CLOSED_HTTp",
			"threads",
			"th",
			"threads",
			"LWS_WITH_PLUGINS_BUILTIN",
			"protocols",
			"LWS_SERVER_OPTION_ALLOW_NON_SSL_ON_SSL_PORT",
			"LWS_SERVER_OPTION_FALLBACK_TO_APPLY_LISTEN_ACCEPT_CONFIG",
			"LWS_PLUGIN_PROTOCOL_RAW_PROXY",
			"pvo1",
			"target_link",
			"ws2_",
			"rdynamic",
			"cb_connect",
			"lws_client_connect_via_info",
			"\\&minnet_server.cb_fd",
			"CHANGE_MODE",
			"->ssl_",
			"info.options.*SSL",
			"info.options",
			"lws_client_connect_via_info",
			"LWS_CALLBACK_LOCK_POLL",
			"minnet_server.cb_fd\\.",
			"://.*libweb",
			"://",
			"client_ssl_ca_filepath",
			"client_ssl_ca_filepath =",
			"cert\\.pem",
			"cert.pem",
			"client_ssl_ca_filepath",
			"ssl_conn",
			"COMPLETED_CLIENT_HTTP",
			"\"ws  ",
			"\"ws ",
			"\"ws  ",
			"client_protocols",
			"LWS_CALLBACK_COMPLETED_CLIENT_HTTP",
			"lws_http_client_read",
			"lws_http_client_read\n",
			"lws_http_client_read",
			"LWS_CALLBACK_RECEIVE_CLIENT_HTTP",
			"connect_client",
			"lws_client_connect_via_info",
			"buffer_from",
			"minnet_ws_new",
			"client_protocols",
			"\\), ",
			"JS_GetPropertyStr.ctx,",
			"lws_client_connect_via_info",
			"minnet_server.context",
			"minnet_lws_context",
			"innet_lws_context =",
			"innet_lws_context",
			"minnet_server.context",
			"minnet_server.ctx",
			"BIND",
			"BIND_PRO",
			"_INIT",
			"CALLBACK_RAW",
			"cb_close"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"cmake_minimum_required",
			"memoize",
			"cb",
			"->client_ssl_",
			"cb->",
			"\"client ",
			" ,",
			" ",
			"minnet_server.lws",
			"minnet_server.context",
			"minnet_lws_context",
			"DROP",
			"vhost_options_",
			"lwsl_debug",
			" ",
			"OPENSSL_",
			"",
			"}\\\\\\n  ${",
			"LIBWEBSOCKETS_LIBRARY_DIR",
			"${ESC}",
			" ",
			"",
			"brotli",
			"broli",
			"libbrotli",
			"  ",
			"${MBEDTLS_LIBRARIES}",
			"${MBEDTLS_CRYPTO_LIBRARY}",
			"${MBEDTLS_X509_LIBRARY}",
			"${MBEDTLS_LIBRARY}",
			"${MBEDTLS_CRYPTO_LIBRARY}",
			"TARGET ",
			"CMAKE_INSTALL_PREFIX",
			":INTERNAL",
			":STRING",
			"lwsl_debug",
			"JSBuffer",
			"#",
			"CMAKE_INSTALL_LIBDIR",
			"CMAKE_",
			"",
			"wsi#%",
			"\\1lwsl_user(",
			"\\1lwsl_user",
			"->headers\\1",
			"REQUEST_HEADERS",
			"buffer->",
			"url.",
			"url->",
			"\"",
			"->wsi[ONWARD]",
			"->wsi[ACCEPTED]",
			"->queue[ONWARD]",
			"->queue[ACCEPTED]",
			"ctx",
			"\"ws   ",
			"%-25s",
			"ctx",
			"http_headers(",
			"http_respond(",
			"",
			"opaque",
			"=",
			"mount",
			"STREAM_BUFFER",
			"stream",
			"cb_http",
			"case ",
			"minnet_server.",
			"serv->generator",
			"REQUEST_TYPE",
			"ws_obj",
			"case (int)LWS_CALLBACK",
			"",
			">normal<",
			"server.cb",
			"&server.info",
			"src",
			"url",
			"",
			"rsp",
			"_ws_",
			"->rsp",
			"state_dump",
			"RESPONSE_OFFSET",
			"RESPONSE_LENGTH",
			"static JSValue",
			"0",
			"res->body",
			"REQUEST_BODY",
			"\\\\n\"\\n\"\\1",
			"<br />",
			"\\\\n\"",
			"\\n\"",
			"#include <quickjs-libc.h>",
			"#include <list.h>",
			"#include <cutils.h>",
			"#include <quickjs.h>",
			"MinnetCallback",
			"_socket_",
			"MINNET_SOCKET_H",
			"inline",
			"static inline ",
			"hdr->",
			"",
			"request",
			"h->",
			"ctx",
			"equest",
			"req",
			"request",
			"args",
			"MinnetPollFd",
			"request->body.",
			"request->",
			"request",
			"body",
			"http_callback",
			"ws_callback",
			"protocols",
			"MinnetHttpHeader",
			"MinnetHttpMount",
			"struct lws_http_mount",
			"org",
			"JSUTILS_H",
			"io_handler",
			"make_handler",
			", "
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": false,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 184,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/quickjs/qjs-net/poll.c",
							"function_name_status_row": 0,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									2682,
									2697
								],
								[
									2779,
									2793
								],
								[
									3521,
									3549
								],
								[
									3685,
									3701
								],
								[
									3800,
									3823
								],
								[
									4126,
									4149
								],
								[
									7069,
									7099
								],
								[
									8168,
									8183
								],
								[
									9786,
									9790
								]
							],
							"symlist":
							[
								"IsConsoleHandle",
								"IsSocketHandle",
								"PFILE_PIPE_LOCAL_INFORMATION",
								"PIO_STATUS_BLOCK",
								"PFILE_INFORMATION_CLASS",
								"  windows_compute_revents",
								"  windows_compute_revents_socket",
								"  compute_revents",
								"  poll"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1639888461.92,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "minnet-server-http.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20344,
						"regions":
						{
						},
						"selection":
						[
							[
								504,
								504
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 19,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1639891431.14,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 114.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "minnet-server.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10937,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640213141.94,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 171.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "poll.c",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15927,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								157
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642086321.75,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 57.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "event-emitter.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1296,
						"regions":
						{
						},
						"selection":
						[
							[
								1296,
								1296
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 51,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642080111.65,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 156.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "rpc.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28964,
						"regions":
						{
						},
						"selection":
						[
							[
								51,
								51
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642086320.02,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11227,
						"regions":
						{
						},
						"selection":
						[
							[
								5466,
								5466
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 165,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642065884.72,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2885.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "cmake/BuildLibwebsockets.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5263,
						"regions":
						{
						},
						"selection":
						[
							[
								3442,
								3442
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 68,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642074014.43,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 752.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "wscli.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5962,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642061949.95,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "cmake/FindBrotli.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2965,
						"regions":
						{
						},
						"selection":
						[
							[
								2326,
								2342
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 45,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1641911312.18,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 445.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "cmake/FindLibwebsockets.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2405,
						"regions":
						{
						},
						"selection":
						[
							[
								940,
								940
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 24,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640845967.76,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 300.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "cmake/functions.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1841,
						"regions":
						{
						},
						"selection":
						[
							[
								1841,
								1841
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 63,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640214298.0,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 308.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.exec":
	{
		"height": 304.0
	},
	"output.find_results":
	{
		"height": 337.0
	},
	"pinned_build_system": "make",
	"project": "minnet.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"test-rpc",
				"test-rpc.js"
			],
			[
				"server-dead",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-deaddrop/minimal-http-server-deaddrop.c"
			],
			[
				"lws-conte",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"lws_raw_pr",
				"libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c"
			],
			[
				"lws-call",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"poll.c",
				"poll.c"
			],
			[
				"minnet-cli",
				"minnet-client.c"
			],
			[
				"libweb",
				"libwebsockets/include/libwebsockets.h"
			],
			[
				"output.c",
				"libwebsockets/lib/core-net/output.c"
			],
			[
				"connect3",
				"libwebsockets/lib/core-net/client/connect3.c"
			],
			[
				"connect.c",
				"libwebsockets/lib/core-net/client/connect.c"
			],
			[
				"close",
				"libwebsockets/lib/core-net/close.c"
			],
			[
				"lws-ca",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"lws-",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"lws_raw",
				"libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c"
			],
			[
				".js",
				"libwebsockets/test-apps/test.js"
			],
			[
				"libwebsockets/CM",
				"libwebsockets/CMakeLists.txt"
			],
			[
				"buffer.h",
				"buffer.h"
			],
			[
				"jsu",
				"jsutils.c"
			],
			[
				"lws-cal",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"vhost",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"mime",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-mimetypes/minimal-http-server-mimetypes.c"
			],
			[
				"form-post-file",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-form-post-file/minimal-http-server-form-post-file.c"
			],
			[
				"ops-h2",
				"libwebsockets/lib/roles/h2/ops-h2.c"
			],
			[
				"tls-mem",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-tls-mem/minimal-http-server-tls-mem.c"
			],
			[
				"minnet-client.c",
				"minnet-client.c"
			],
			[
				"",
				"wscli.js"
			],
			[
				"wscli",
				"wscli.js"
			],
			[
				"BuildLi",
				"cmake/BuildLibwebsockets.cmake"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"buffer.c",
				"buffer.c"
			],
			[
				"9",
				"libwebsockets/lib/drivers/devices/display/ili9341.h"
			],
			[
				"minnet.c",
				"minnet.c"
			],
			[
				"proxy.c",
				"minnet-server-proxy.c"
			],
			[
				"raw-proxy",
				"libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-proxy/minimal-raw-proxy.c"
			],
			[
				"ops-h1",
				"libwebsockets/lib/roles/h1/ops-h1.c"
			],
			[
				"ws-raw-",
				"libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-raw-proxy/minimal-ws-raw-proxy.c"
			],
			[
				"lws_raw_pro",
				"libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c"
			],
			[
				"rpc.js",
				"rpc.js"
			],
			[
				"ops-ws",
				"libwebsockets/lib/roles/ws/ops-ws.c"
			],
			[
				"lws-htt",
				"libwebsockets/include/libwebsockets/lws-http.h"
			],
			[
				"rpc",
				"rpc.js"
			],
			[
				"rpc.j",
				"rpc.js"
			],
			[
				"events.js",
				"~/Projects/plot-cv/lib/events.js"
			],
			[
				"debugger.js",
				"~/Projects/plot-cv/debugger.js"
			],
			[
				"server.c",
				"libwebsockets/lib/roles/http/server/server.c"
			],
			[
				"minnet-server",
				"minnet-server.c"
			],
			[
				"lws-ado",
				"libwebsockets/include/libwebsockets/lws-adopt.h"
			],
			[
				"test-rp",
				"~/Projects/plot-cv/test-rpc.js"
			],
			[
				"cmakelists-im",
				"libwebsockets/CMakeLists-implied-options.txt"
			],
			[
				"cmake",
				"libwebsockets/CMakeLists.txt"
			],
			[
				"roles-htt",
				"libwebsockets/lib/roles/http/private-lib-roles-http.h"
			],
			[
				"-roles",
				"libwebsockets/lib/roles/h2/private-lib-roles-h2.h"
			],
			[
				"private-lib-rol",
				"libwebsockets/lib/roles/private-lib-roles.h"
			],
			[
				"server",
				"libwebsockets/lib/roles/http/server/server.c"
			],
			[
				"sse.c",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-sse/minimal-http-server-sse.c"
			],
			[
				"minnet-ser",
				"minnet-server.c"
			],
			[
				"quicjs",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"quickj",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"minnet.h",
				"minnet.h"
			],
			[
				"quickjs.",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"webso",
				"minnet-websocket.c"
			],
			[
				"jsutil",
				"minnet-jsutils.h"
			],
			[
				"minnet",
				"minnet.c"
			],
			[
				"websoc",
				"websocket.c"
			],
			[
				"jsut",
				"jsutils.h"
			],
			[
				"minnet-",
				"minnet-server.h"
			],
			[
				"client.c",
				"client.c"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"minn",
				"minnet.c"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			],
			[
				"test_point",
				"tests/test_pointer.js"
			],
			[
				"bnflex",
				"lib/bnflexer.js"
			],
			[
				"bnf.y",
				"~/Projects/plot-cv/lib/grammars/bnf.y"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"grammar.ki",
				"grammar.kison"
			],
			[
				"test_pat",
				"tests/test_path.js"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"test_parse",
				"tests/test_parser.js"
			],
			[
				"test_path",
				"tests/test_path.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"test_tree",
				"tests/test_treewalker.js"
			],
			[
				"tree.h",
				"src/tree.h"
			],
			[
				"scan_ulongn",
				"lib/scan/scan_ulongn.c"
			],
			[
				"term_rest",
				"src/term/term_restore.c"
			],
			[
				"parse.h",
				"src/parse.h"
			],
			[
				"byte.h",
				"lib/byte.h"
			],
			[
				"shell.h",
				"lib/shell.h"
			],
			[
				"mmap_file",
				"lib/stralloc/mmap_filename.c"
			],
			[
				"uffer.h",
				"lib/buffer.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 346.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
