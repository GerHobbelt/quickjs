{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"minnet",
				"minnet_client_lws"
			],
			[
				"JS_To",
				"JS_ToCString"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"JS_GetP",
				"JS_GetPropertyUint32"
			],
			[
				"vhost_",
				"vhost_option_create"
			],
			[
				"OP",
				"OPENSSL_LIBRARY_DIR"
			],
			[
				"Content",
				"Content-Disposition"
			],
			[
				"LIBWEB",
				"LIBWEBSOCKETS_ARGS"
			],
			[
				"MBED",
				"MBEDTLS_LIBRARY_DIR"
			],
			[
				"LIBWEBSO",
				"LIBWEBSOCKETS_LIBRARY_DIR"
			],
			[
				"CMAKE_",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"JS_Throw",
				"JS_ThrowOutOfMemory"
			],
			[
				"opt_P",
				"opt_private_key"
			],
			[
				"JS_FRee",
				"JS_FreeValue"
			],
			[
				"LWS_WR",
				"LWS_WRITE_HTTP_FINAL"
			],
			[
				"MBEDTLS_LIB",
				"MBEDTLS_LIBRARY_DIR"
			],
			[
				"curl_mul",
				"curl_multi_cleanup"
			],
			[
				"LWS_CALLBACK_",
				"LWS_CALLBACK_HTTP_WRITEABLE"
			],
			[
				"lws_get",
				"lws_get_opaque_user_data"
			],
			[
				"Event",
				"EventTarget"
			],
			[
				"http_",
				"http_response"
			],
			[
				"STREAM",
				"STREAM_TEXT"
			],
			[
				"moun",
				"mountpoint_len"
			],
			[
				"ori",
				"origin_protocol"
			],
			[
				"mount",
				"mountpoint_len"
			],
			[
				"LWS",
				"LWSMPRO_CALLBACK"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"Minn",
				"MinnetWebsocket"
			],
			[
				"BUILD_",
				"BUILD_LIBWEBSOCKETS"
			],
			[
				"minnet_request",
				"minnet_request_class_id"
			],
			[
				"getOwn",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"js_loca",
				"js_location_data"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "‚Äî‚íª‚Äì vhost_options_create ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì vhost_options_new ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì vhost_options_free ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì mount_create ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì mount_new ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì mount_find ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì mount_free ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì http_respond ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì request_handler ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì file_size ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì serve_file ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì http_writable ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì http_callback ( ) { ‚Ä¶ } ‚Äî function",
			"settings":
			{
				"buffer_size": 505,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					858,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-certinfo/minimal-http-client-certinfo.c",
						"symkeys":
						[
							[
								547,
								560
							],
							[
								3673,
								3687
							],
							[
								3724,
								3728
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉcallback_http‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB0BAAAICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKSoSAgbWlubmV0X2ZldGNoICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgbHdzX2xvZ19jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9sd3NfdW5oYW5kbGVkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2V0X2xvZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9zZXRfbG9nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdXJsX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfcGFyc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cmxfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGhlYWRlcl9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBoZWFkZXJfc2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZmRfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpb19ldmVudHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpb19wYXJzZV9ldmVudHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCiAg4pOCICBQSU8g4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIG1pbm5ldF9pb19oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWFrZV9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2hhbmRsZXJzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2VtaXRfdGhpcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9lbWl0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmFsdWVfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21pbm5ldF9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzX2NhbGxiYWNrX25hbWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAABsAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					859,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server.c",
						"symkeys":
						[
							[
								278,
								292
							],
							[
								360,
								379
							],
							[
								447,
								458
							],
							[
								526,
								542
							],
							[
								610,
								623
							],
							[
								1991,
								2007
							],
							[
								7182,
								7194
							],
							[
								7967,
								7983
							]
						],
						"symlist":
						[
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉproxy_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉraw_client_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉws_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉdefprot_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉhttp_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_server‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_headers‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉdefprot_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACKAAAA4oCU4pK74oCTIGNhbGxiYWNrX2h0dHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzaWdpbnRfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1haW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAABxAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					860,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-client.h",
						"symkeys":
						[
							[
								1561,
								1600
							],
							[
								4272,
								4295
							],
							[
								8726,
								8757
							],
							[
								9581,
								9608
							],
							[
								10871,
								10896
							],
							[
								11996,
								12016
							],
							[
								12483,
								12512
							],
							[
								13014,
								13049
							],
							[
								14042,
								14070
							],
							[
								14692,
								14717
							],
							[
								15260,
								15283
							],
							[
								15960,
								15985
							]
						],
						"symlist":
						[
							"‚Äî‚í∏‚Äì‚ÄÉlws_client_connect_ssl_connection_flags‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉlws_client_connect_info‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÇ«É«É‚úî‚ÄÇ‚ÄÉXXX/...\" if you give XXX here.",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉlws_client_connect_via_info‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉlws_init_vhost_client_ssl‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉlws_http_client_read‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉlws_http_client_http_response‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉlws_tls_client_vhost_extra_cert_mem‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉlws_client_http_body_pending‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉlws_client_http_multipart‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉlws_http_basic_auth_gen‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉlws_tls_session_is_reused‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACjAQAAICDikqEgIHByb3h5X2NhbGxiYWNrICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogIOKSoSAgcmF3X2NsaWVudF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICDikqEgIHdzX2NhbGxiYWNrICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogIOKSoSAgZGVmcHJvdF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICDikqEgIGh0dHBfY2FsbGJhY2sgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3Nfc2VydmVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9oZWFkZXJzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZGVmcHJvdF9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAJgCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					861,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/test-client.c",
						"symkeys":
						[
							[
								995,
								1001
							],
							[
								1144,
								1156
							],
							[
								1189,
								1199
							],
							[
								2228,
								2242
							],
							[
								2354,
								2367
							],
							[
								2719,
								2736
							],
							[
								3054,
								3077
							],
							[
								9060,
								9079
							],
							[
								12535,
								12559
							],
							[
								13777,
								13787
							],
							[
								14802,
								14820
							],
							[
								15054,
								15058
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉrandom‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚í∏‚Äì‚ÄÉlws_poly_gen‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉblock_size‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚í∏‚Äì‚ÄÉdemo_protocols‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉlws_poly_rand‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉshow_http_content‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉcallback_dumb_increment‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉcallback_lws_mirror‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉcallback_test_raw_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsighandler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉratelimit_connects‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmAgAA4oCU4pK44oCTIGx3c19jbGllbnRfY29ubmVjdF9zc2xfY29ubmVjdGlvbl9mbGFncyB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK44oCTIGx3c19jbGllbnRfY29ubmVjdF9pbmZvIHsg4oCmIH0gOyDigJQgdHlwZQogIMeDx4PinJQgIFhYWC8uLi4iIGlmIHlvdSBnaXZlIFhYWCBoZXJlLgogIOKSoSAgbHdzX2NsaWVudF9jb25uZWN0X3ZpYV9pbmZvICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgbHdzX2luaXRfdmhvc3RfY2xpZW50X3NzbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICDikqEgIGx3c19odHRwX2NsaWVudF9yZWFkICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogIOKSoSAgbHdzX2h0dHBfY2xpZW50X2h0dHBfcmVzcG9uc2UgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyBsd3NfdGxzX2NsaWVudF92aG9zdF9leHRyYV9jZXJ0X21lbSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICDikqEgIGx3c19jbGllbnRfaHR0cF9ib2R5X3BlbmRpbmcgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyBsd3NfY2xpZW50X2h0dHBfbXVsdGlwYXJ0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKSoSAgbHdzX2h0dHBfYmFzaWNfYXV0aF9nZW4gKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBsd3NfdGxzX3Nlc3Npb25faXNfcmV1c2VkICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgAAAAAAAAAAzwEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					862,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
						"symkeys":
						[
							[
								203,
								218
							],
							[
								623,
								635
							],
							[
								811,
								823
							],
							[
								972,
								986
							],
							[
								1619,
								1633
							],
							[
								2444,
								2460
							],
							[
								5277,
								5292
							]
						],
						"symlist":
						[
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉclient_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉclose_status‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclose_reason‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsslcert_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclient_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA/AgAAICDik4IgIHJhbmRvbSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrjigJMgbHdzX3BvbHlfZ2VuIHsg4oCmIH0gOyDigJQgdHlwZQogIOKTgiAgYmxvY2tfc2l6ZSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrjigJMgZGVtb19wcm90b2NvbHMgeyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyBsd3NfcG9seV9yYW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2hvd19odHRwX2NvbnRlbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjYWxsYmFja19kdW1iX2luY3JlbWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNhbGxiYWNrX2x3c19taXJyb3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjYWxsYmFja190ZXN0X3Jhd19jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzaWdoYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmF0ZWxpbWl0X2Nvbm5lY3RzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWFpbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACABAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					863,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
						"symkeys":
						[
							[
								203,
								218
							],
							[
								623,
								635
							],
							[
								811,
								823
							],
							[
								972,
								986
							],
							[
								1619,
								1633
							],
							[
								2444,
								2460
							],
							[
								5277,
								5292
							]
						],
						"symlist":
						[
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉclient_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉclose_status‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclose_reason‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsslcert_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclient_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABgAQAAICDikqEgIGNsaWVudF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGNsb3NlX3N0YXR1cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsb3NlX3JlYXNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNzbGNlcnRfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29ubmVjdF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAIAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGABAAAgIOKSoSAgY2xpZW50X2NhbGxiYWNrICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgY2xvc2Vfc3RhdHVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xvc2VfcmVhc29uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc3NsY2VydF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjb25uZWN0X2NsaWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjbGllbnRfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAgAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					864,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-stream.h",
						"symkeys":
						[
							[
								32,
								47
							],
							[
								146,
								152
							],
							[
								224,
								236
							],
							[
								244,
								255
							],
							[
								284,
								295
							],
							[
								389,
								399
							],
							[
								418,
								429
							],
							[
								455,
								480
							],
							[
								548,
								565
							],
							[
								648,
								666
							],
							[
								1003,
								1021
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMINNET_STREAM_H‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚í∏‚Äì‚ÄÉstream‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉMinnetStream‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉstream_dump‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉstream_init‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉstream_new‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉstream_zero‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉminnet_stream_constructor‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉminnet_stream_new‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉminnet_stream_wrap‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉminnet_stream_data‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgAQAAICDikqEgIGNsaWVudF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGNsb3NlX3N0YXR1cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsb3NlX3JlYXNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNzbGNlcnRfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29ubmVjdF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAA5QEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					865,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								430,
								443
							],
							[
								1153,
								1171
							],
							[
								1420,
								1433
							],
							[
								1578,
								1594
							],
							[
								2157,
								2171
							],
							[
								2866,
								2883
							],
							[
								3499,
								3513
							],
							[
								4365,
								4382
							],
							[
								6062,
								6076
							],
							[
								6737,
								6751
							],
							[
								7412,
								7427
							],
							[
								8305,
								8321
							],
							[
								10019,
								10035
							],
							[
								10388,
								10409
							],
							[
								11567,
								11586
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_from_wsi‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_wrap‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_sslcert‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_send‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_ping‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_pong‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_close‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_getter‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_setter‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_finalizer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAfAgAAICDik4IgIE1JTk5FVF9TVFJFQU1fSCDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrjigJMgc3RyZWFtIHsg4oCmIH0gOyDigJQgdHlwZQogIOKTiSAgTWlubmV0U3RyZWFtIDsg4oCUIHR5cGVkZWYKICDikqEgIHN0cmVhbV9kdW1wICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogIOKSoSAgc3RyZWFtX2luaXQgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBzdHJlYW1fbmV3ICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogIOKSoSAgc3RyZWFtX3plcm8gKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBtaW5uZXRfc3RyZWFtX2NvbnN0cnVjdG9yICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogIOKSoSAgbWlubmV0X3N0cmVhbV9uZXcgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBtaW5uZXRfc3RyZWFtX3dyYXAgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyBtaW5uZXRfc3RyZWFtX2RhdGEgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAByAgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					870,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
						"symkeys":
						[
							[
								203,
								218
							],
							[
								623,
								635
							],
							[
								811,
								823
							],
							[
								972,
								986
							],
							[
								1619,
								1633
							],
							[
								2444,
								2460
							],
							[
								5277,
								5292
							]
						],
						"symlist":
						[
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉclient_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉclose_status‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclose_reason‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsslcert_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclient_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAwAA4oCU4pK74oCTIG1pbm5ldF93c19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfZnJvbV93c2kgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX29iamVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c193cmFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3NzbGNlcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3Nfc2VuZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19yZXNwb25kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3BpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfcG9uZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19jbG9zZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19nZXR0ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3Nfc2V0dGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACABAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABQEAAAAAAAAFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					873,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client/minimal-ws-client.c",
						"symkeys":
						[
							[
								516,
								523
							],
							[
								1475,
								1489
							],
							[
								2346,
								2362
							],
							[
								3702,
								3716
							],
							[
								3753,
								3757
							]
						],
						"symlist":
						[
							"‚Äî‚í∏‚Äì‚ÄÉmy_conn‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉcallback_minimal‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgAQAAICDikqEgIGNsaWVudF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGNsb3NlX3N0YXR1cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsb3NlX3JlYXNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNzbGNlcnRfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29ubmVjdF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAsgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADwAAAAAAAAAPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					874,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-rx/README.md",
						"symkeys":
						[
							[
								0,
								26
							],
							[
								28,
								36
							],
							[
								66,
								74
							]
						],
						"symlist":
						[
							"lws minimal ws client rx",
							" build",
							" usage"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADkAAAA4oCU4pK44oCTIG15X2Nvbm4geyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyBjb25uZWN0X2NsaWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNhbGxiYWNrX21pbmltYWwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzaWdpbnRfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1haW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAqAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					875,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-rx/minimal-ws-client.c",
						"symkeys":
						[
							[
								617,
								640
							],
							[
								1502,
								1516
							],
							[
								1553,
								1557
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉcallback_dumb_increment‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAqAAAAICBsd3MgbWluaW1hbCB3cyBjbGllbnQgcngKICBidWlsZAogIHVzYWdlAAAAAAAAAAB2AAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					876,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-binance/main.c",
						"symkeys":
						[
							[
								457,
								462
							],
							[
								547,
								554
							],
							[
								693,
								700
							],
							[
								4211,
								4225
							],
							[
								5190,
								5201
							],
							[
								5308,
								5324
							],
							[
								5479,
								5488
							],
							[
								6586,
								6593
							],
							[
								6816,
								6832
							],
							[
								9677,
								9691
							],
							[
								9728,
								9732
							]
						],
						"symlist":
						[
							"‚Äî‚í∏‚Äì‚ÄÉrange‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉrange_t‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚Äî‚í∏‚Äì‚ÄÉmy_conn‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrange_reset‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉget_us_timeofday‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsul_hz_cb‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉpennies‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉcallback_minimal‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACUAAAA4oCU4pK74oCTIGNhbGxiYWNrX2R1bWJfaW5jcmVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2lnaW50X2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAdwEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					877,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
						"symkeys":
						[
							[
								203,
								218
							],
							[
								623,
								635
							],
							[
								811,
								823
							],
							[
								972,
								986
							],
							[
								1619,
								1633
							],
							[
								2444,
								2460
							],
							[
								5277,
								5292
							]
						],
						"symlist":
						[
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉclient_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉclose_status‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclose_reason‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsslcert_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclient_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADfAQAA4oCU4pK44oCTIHJhbmdlIHsg4oCmIH0gOyDigJQgdHlwZQogIOKTiSAgcmFuZ2VfdCA7IOKAlCB0eXBlZGVmCuKAlOKSuOKAkyBteV9jb25uIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgY29ubmVjdF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByYW5nZV9yZXNldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdldF91c190aW1lb2ZkYXkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzdWxfaHpfY2IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwZW5uaWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2FsbGJhY2tfbWluaW1hbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNpZ2ludF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWFpbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACABAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					878,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
						"symkeys":
						[
							[
								203,
								218
							],
							[
								623,
								635
							],
							[
								811,
								823
							],
							[
								972,
								986
							],
							[
								1619,
								1633
							],
							[
								2446,
								2462
							],
							[
								5279,
								5294
							]
						],
						"symlist":
						[
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉclient_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉclose_status‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclose_reason‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsslcert_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclient_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAABgAQAAICDikqEgIGNsaWVudF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGNsb3NlX3N0YXR1cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsb3NlX3JlYXNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNzbGNlcnRfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29ubmVjdF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAIAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGABAAAgIOKSoSAgY2xpZW50X2NhbGxiYWNrICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgY2xvc2Vfc3RhdHVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xvc2VfcmVhc29uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc3NsY2VydF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjb25uZWN0X2NsaWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjbGllbnRfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAgAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAEAACAg4pKhICBjbGllbnRfY2FsbGJhY2sgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyBjbG9zZV9zdGF0dXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjbG9zZV9yZWFzb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzc2xjZXJ0X2NsaWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNvbm5lY3RfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX2NsaWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsaWVudF9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAACABAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					879,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
						"symkeys":
						[
							[
								203,
								218
							],
							[
								623,
								635
							],
							[
								811,
								823
							],
							[
								972,
								986
							],
							[
								1619,
								1633
							],
							[
								2449,
								2465
							],
							[
								5282,
								5297
							]
						],
						"symlist":
						[
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉclient_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉclose_status‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclose_reason‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsslcert_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclient_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABgAQAAICDikqEgIGNsaWVudF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGNsb3NlX3N0YXR1cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsb3NlX3JlYXNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNzbGNlcnRfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29ubmVjdF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAIAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGABAAAgIOKSoSAgY2xpZW50X2NhbGxiYWNrICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgY2xvc2Vfc3RhdHVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xvc2VfcmVhc29uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc3NsY2VydF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjb25uZWN0X2NsaWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjbGllbnRfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAgAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					880,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
						"symkeys":
						[
							[
								203,
								218
							],
							[
								623,
								635
							],
							[
								811,
								823
							],
							[
								972,
								986
							],
							[
								1619,
								1633
							],
							[
								2451,
								2467
							],
							[
								5284,
								5299
							]
						],
						"symlist":
						[
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉclient_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉclose_status‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclose_reason‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsslcert_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclient_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABgAQAAICDikqEgIGNsaWVudF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGNsb3NlX3N0YXR1cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsb3NlX3JlYXNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNzbGNlcnRfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29ubmVjdF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAIAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGABAAAgIOKSoSAgY2xpZW50X2NhbGxiYWNrICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgY2xvc2Vfc3RhdHVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xvc2VfcmVhc29uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc3NsY2VydF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjb25uZWN0X2NsaWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjbGllbnRfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAgAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					881,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
						"symkeys":
						[
							[
								203,
								218
							],
							[
								623,
								635
							],
							[
								811,
								823
							],
							[
								972,
								986
							],
							[
								1619,
								1633
							],
							[
								2444,
								2460
							],
							[
								5277,
								5292
							]
						],
						"symlist":
						[
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉclient_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉclose_status‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclose_reason‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsslcert_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclient_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABgAQAAICDikqEgIGNsaWVudF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGNsb3NlX3N0YXR1cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsb3NlX3JlYXNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNzbGNlcnRfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29ubmVjdF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAIAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGABAAAgIOKSoSAgY2xpZW50X2NhbGxiYWNrICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgY2xvc2Vfc3RhdHVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xvc2VfcmVhc29uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc3NsY2VydF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjb25uZWN0X2NsaWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjbGllbnRfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAgAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					882,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client/minimal-ws-client.c",
						"symkeys":
						[
							[
								516,
								523
							],
							[
								1475,
								1489
							],
							[
								2346,
								2362
							],
							[
								3702,
								3716
							],
							[
								3753,
								3757
							]
						],
						"symlist":
						[
							"‚Äî‚í∏‚Äì‚ÄÉmy_conn‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉcallback_minimal‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgAQAAICDikqEgIGNsaWVudF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGNsb3NlX3N0YXR1cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsb3NlX3JlYXNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNzbGNlcnRfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29ubmVjdF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAsgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					883,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
						"symkeys":
						[
							[
								203,
								218
							],
							[
								623,
								635
							],
							[
								811,
								823
							],
							[
								972,
								986
							],
							[
								1619,
								1633
							],
							[
								2444,
								2460
							],
							[
								5277,
								5292
							]
						],
						"symlist":
						[
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉclient_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉclose_status‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclose_reason‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsslcert_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclient_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADkAAAA4oCU4pK44oCTIG15X2Nvbm4geyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyBjb25uZWN0X2NsaWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNhbGxiYWNrX21pbmltYWwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzaWdpbnRfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1haW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAgAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					884,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-rx/minimal-ws-client.c",
						"symkeys":
						[
							[
								617,
								640
							],
							[
								1502,
								1516
							],
							[
								1553,
								1557
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉcallback_dumb_increment‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgAQAAICDikqEgIGNsaWVudF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGNsb3NlX3N0YXR1cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsb3NlX3JlYXNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNzbGNlcnRfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29ubmVjdF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAdgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					885,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACUAAAA4oCU4pK74oCTIGNhbGxiYWNrX2R1bWJfaW5jcmVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2lnaW50X2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					886,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client/minimal-ws-client.c",
						"symkeys":
						[
							[
								516,
								523
							],
							[
								1475,
								1489
							],
							[
								2346,
								2362
							],
							[
								3702,
								3716
							],
							[
								3753,
								3757
							]
						],
						"symlist":
						[
							"‚Äî‚í∏‚Äì‚ÄÉmy_conn‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉcallback_minimal‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAAsgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					887,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADkAAAA4oCU4pK44oCTIG15X2Nvbm4geyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyBjb25uZWN0X2NsaWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNhbGxiYWNrX21pbmltYWwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzaWdpbnRfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1haW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					888,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client/minimal-ws-client.c",
						"symkeys":
						[
							[
								516,
								523
							],
							[
								1475,
								1489
							],
							[
								2346,
								2362
							],
							[
								3702,
								3716
							],
							[
								3753,
								3757
							]
						],
						"symlist":
						[
							"‚Äî‚í∏‚Äì‚ÄÉmy_conn‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉcallback_minimal‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAAsgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					889,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADkAAAA4oCU4pK44oCTIG15X2Nvbm4geyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyBjb25uZWN0X2NsaWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNhbGxiYWNrX21pbmltYWwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzaWdpbnRfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1haW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					890,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-certinfo/minimal-http-client-certinfo.c",
						"symkeys":
						[
							[
								547,
								560
							],
							[
								3673,
								3687
							],
							[
								3724,
								3728
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉcallback_http‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAAbAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					891,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAACKAAAA4oCU4pK74oCTIGNhbGxiYWNrX2h0dHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzaWdpbnRfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1haW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					892,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/client-server/minimal-ws-proxy/protocol_lws_minimal.c",
						"symkeys":
						[
							[
								390,
								397
							],
							[
								406,
								418
							],
							[
								547,
								550
							],
							[
								675,
								700
							],
							[
								865,
								888
							],
							[
								1296,
								1321
							],
							[
								1435,
								1454
							],
							[
								2081,
								2097
							],
							[
								5955,
								5982
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_DLL‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_INTERNAL‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚í∏‚Äì‚ÄÉmsg‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉper_session_data__minimal‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉper_vhost_data__minimal‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉ__minimal_destroy_message‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsul_connect_attempt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉcallback_minimal‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_PLUGIN_PROTOCOL_MINIMAL‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AQAAAAAAAAAAAAAAawEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					893,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC5AQAAICDik4IgIExXU19ETEwg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIExXU19JTlRFUk5BTCDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrjigJMgbXNnIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrjigJMgcGVyX3Nlc3Npb25fZGF0YV9fbWluaW1hbCB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK44oCTIHBlcl92aG9zdF9kYXRhX19taW5pbWFsIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgX19taW5pbWFsX2Rlc3Ryb3lfbWVzc2FnZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHN1bF9jb25uZWN0X2F0dGVtcHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjYWxsYmFja19taW5pbWFsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTgiAgTFdTX1BMVUdJTl9QUk9UT0NPTF9NSU5JTUFMIOKApiDigJQgbWFjcm8gb2JqZWN0AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					894,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-adopt-tcp/minimal-raw-adopt-tcp.c",
						"symkeys":
						[
							[
								1029,
								1046
							],
							[
								1975,
								1989
							],
							[
								2026,
								2030
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉcallback_raw_test‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAAcAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					895,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACOAAAA4oCU4pK74oCTIGNhbGxiYWNrX3Jhd190ZXN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2lnaW50X2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					896,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client/minimal-ws-client.c",
						"symkeys":
						[
							[
								516,
								523
							],
							[
								1475,
								1489
							],
							[
								2346,
								2362
							],
							[
								3702,
								3716
							],
							[
								3753,
								3757
							]
						],
						"symlist":
						[
							"‚Äî‚í∏‚Äì‚ÄÉmy_conn‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉcallback_minimal‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAAsgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					897,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADkAAAA4oCU4pK44oCTIG15X2Nvbm4geyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyBjb25uZWN0X2NsaWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNhbGxiYWNrX21pbmltYWwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzaWdpbnRfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1haW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					898,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-rx/minimal-ws-client.c",
						"symkeys":
						[
							[
								617,
								640
							],
							[
								1502,
								1516
							],
							[
								1553,
								1557
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉcallback_dumb_increment‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAAdgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					899,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACUAAAA4oCU4pK74oCTIGNhbGxiYWNrX2R1bWJfaW5jcmVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2lnaW50X2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					900,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-rx/minimal-ws-client.c",
						"symkeys":
						[
							[
								617,
								640
							],
							[
								1502,
								1516
							],
							[
								1553,
								1557
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉcallback_dumb_increment‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAAdgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					901,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACUAAAA4oCU4pK74oCTIGNhbGxiYWNrX2R1bWJfaW5jcmVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2lnaW50X2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					902,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client/minimal-ws-client.c",
						"symkeys":
						[
							[
								516,
								523
							],
							[
								1475,
								1489
							],
							[
								2346,
								2362
							],
							[
								3702,
								3716
							],
							[
								3753,
								3757
							]
						],
						"symlist":
						[
							"‚Äî‚í∏‚Äì‚ÄÉmy_conn‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉcallback_minimal‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAAsgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					903,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
						"symkeys":
						[
							[
								203,
								218
							],
							[
								623,
								635
							],
							[
								811,
								823
							],
							[
								972,
								986
							],
							[
								1619,
								1633
							],
							[
								2444,
								2460
							],
							[
								5277,
								5292
							]
						],
						"symlist":
						[
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉclient_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉclose_status‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclose_reason‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsslcert_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclient_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADkAAAA4oCU4pK44oCTIG15X2Nvbm4geyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyBjb25uZWN0X2NsaWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNhbGxiYWNrX21pbmltYWwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzaWdpbnRfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1haW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAgAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					904,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
						"symkeys":
						[
							[
								203,
								218
							],
							[
								623,
								635
							],
							[
								811,
								823
							],
							[
								972,
								986
							],
							[
								1619,
								1633
							],
							[
								2444,
								2460
							],
							[
								5341,
								5356
							]
						],
						"symlist":
						[
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉclient_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉclose_status‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclose_reason‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsslcert_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclient_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABgAQAAICDikqEgIGNsaWVudF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGNsb3NlX3N0YXR1cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsb3NlX3JlYXNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNzbGNlcnRfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29ubmVjdF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAIAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGABAAAgIOKSoSAgY2xpZW50X2NhbGxiYWNrICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgY2xvc2Vfc3RhdHVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xvc2VfcmVhc29uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc3NsY2VydF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjb25uZWN0X2NsaWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjbGllbnRfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAgAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					905,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
						"symkeys":
						[
							[
								203,
								218
							],
							[
								623,
								635
							],
							[
								811,
								823
							],
							[
								972,
								986
							],
							[
								1619,
								1633
							],
							[
								2444,
								2460
							],
							[
								5341,
								5356
							]
						],
						"symlist":
						[
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉclient_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉclose_status‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclose_reason‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsslcert_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclient_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgAQAAICDikqEgIGNsaWVudF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGNsb3NlX3N0YXR1cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsb3NlX3JlYXNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNzbGNlcnRfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29ubmVjdF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAIAEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					906,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgAQAAICDikqEgIGNsaWVudF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGNsb3NlX3N0YXR1cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsb3NlX3JlYXNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNzbGNlcnRfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29ubmVjdF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					907,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-multi/minimal-http-client-multi.c",
						"symkeys":
						[
							[
								1853,
								1858
							],
							[
								1869,
								1876
							],
							[
								2245,
								2248
							],
							[
								2445,
								2457
							],
							[
								2901,
								2913
							],
							[
								3546,
								3562
							],
							[
								4361,
								4374
							],
							[
								9497,
								9513
							],
							[
								9935,
								9945
							],
							[
								9989,
								10014
							],
							[
								10607,
								10623
							],
							[
								11273,
								11282
							],
							[
								11485,
								11499
							],
							[
								11560,
								11572
							],
							[
								12367,
								12369
							],
							[
								12524,
								12534
							],
							[
								13088,
								13092
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉCOUNT‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚í∏‚Äì‚ÄÉcliuser‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉpss‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉsess_save_cb‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsess_load_cb‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉdump_conmon_data‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉcallback_http‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmy_metric_report‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉstagger_cb‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉlws_try_client_connection‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsystem_notify_cb‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsignal_cb‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉgettimeofday‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉus‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉstagger_cb‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAAbQIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					908,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAANAwAAICDik4IgIENPVU5UIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSuOKAkyBjbGl1c2VyIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrjigJMgcHNzIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgc2Vzc19zYXZlX2NiICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2Vzc19sb2FkX2NiICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZHVtcF9jb25tb25fZGF0YSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNhbGxiYWNrX2h0dHAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBteV9tZXRyaWNfcmVwb3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKSoSAgc3RhZ2dlcl9jYiAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGx3c190cnlfY2xpZW50X2Nvbm5lY3Rpb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzeXN0ZW1fbm90aWZ5X2NiICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2lnbmFsX2NiICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2lnaW50X2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZXR0aW1lb2ZkYXkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHN0YWdnZXJfY2IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					909,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-attach/minimal-http-client-attach.c",
						"symkeys":
						[
							[
								617,
								637
							],
							[
								853,
								866
							],
							[
								2648,
								2662
							],
							[
								2707,
								2722
							],
							[
								3482,
								3514
							],
							[
								4165,
								4175
							],
							[
								4812,
								4816
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉHAVE_STRUCT_TIMESPEC‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉcallback_http‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉattach_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉlws_attach_with_pthreads_locking‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉlws_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAAHgEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					910,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgAQAAICDik4IgIEhBVkVfU1RSVUNUX1RJTUVTUEVDIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBjYWxsYmFja19odHRwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2lnaW50X2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBhdHRhY2hfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBsd3NfYXR0YWNoX3dpdGhfcHRocmVhZHNfbG9ja2luZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGx3c19jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					911,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-h2-rxflow/minimal-http-client.c",
						"symkeys":
						[
							[
								669,
								672
							],
							[
								844,
								852
							],
							[
								1111,
								1124
							],
							[
								3109,
								3123
							],
							[
								3163,
								3167
							],
							[
								3216,
								3232
							],
							[
								5529,
								5533
							]
						],
						"symlist":
						[
							"‚Äî‚í∏‚Äì‚ÄÉpss‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉdrain_cb‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉcallback_http‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚í∏‚Äì‚ÄÉargs‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉsystem_notify_cb‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAA5wAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					912,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client/minimal-http-client.c",
						"symkeys":
						[
							[
								780,
								796
							],
							[
								1759,
								1772
							],
							[
								5008,
								5022
							],
							[
								5062,
								5066
							],
							[
								5115,
								5131
							],
							[
								8161,
								8165
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉdump_conmon_data‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉcallback_http‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚í∏‚Äì‚ÄÉargs‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉsystem_notify_cb‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAtAQAA4oCU4pK44oCTIHBzcyB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK74oCTIGRyYWluX2NiICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2FsbGJhY2tfaHR0cCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNpZ2ludF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrjigJMgYXJncyB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK74oCTIHN5c3RlbV9ub3RpZnlfY2IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAA2AAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					913,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-h2-rxflow/minimal-http-client.c",
						"symkeys":
						[
							[
								669,
								672
							],
							[
								844,
								852
							],
							[
								1111,
								1124
							],
							[
								3109,
								3123
							],
							[
								3163,
								3167
							],
							[
								3216,
								3232
							],
							[
								5529,
								5533
							]
						],
						"symlist":
						[
							"‚Äî‚í∏‚Äì‚ÄÉpss‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉdrain_cb‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉcallback_http‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚í∏‚Äì‚ÄÉargs‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉsystem_notify_cb‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAQAA4oCU4pK74oCTIGR1bXBfY29ubW9uX2RhdGEgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjYWxsYmFja19odHRwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2lnaW50X2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSuOKAkyBhcmdzIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgc3lzdGVtX25vdGlmeV9jYiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1haW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAADnAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					914,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client/minimal-http-client.c",
						"symkeys":
						[
							[
								780,
								796
							],
							[
								1759,
								1772
							],
							[
								5008,
								5022
							],
							[
								5062,
								5066
							],
							[
								5115,
								5131
							],
							[
								8161,
								8165
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉdump_conmon_data‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉcallback_http‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚í∏‚Äì‚ÄÉargs‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉsystem_notify_cb‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAtAQAA4oCU4pK44oCTIHBzcyB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK74oCTIGRyYWluX2NiICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2FsbGJhY2tfaHR0cCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNpZ2ludF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrjigJMgYXJncyB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK74oCTIHN5c3RlbV9ub3RpZnlfY2IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAA2AAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					915,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-rx/minimal-ws-client.c",
						"symkeys":
						[
							[
								617,
								640
							],
							[
								1502,
								1516
							],
							[
								1553,
								1557
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉcallback_dumb_increment‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAQAA4oCU4pK74oCTIGR1bXBfY29ubW9uX2RhdGEgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjYWxsYmFja19odHRwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2lnaW50X2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSuOKAkyBhcmdzIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgc3lzdGVtX25vdGlmeV9jYiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1haW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAB2AAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					916,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client/minimal-http-client.c",
						"symkeys":
						[
							[
								780,
								796
							],
							[
								1759,
								1772
							],
							[
								5008,
								5022
							],
							[
								5062,
								5066
							],
							[
								5115,
								5131
							],
							[
								8161,
								8165
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉdump_conmon_data‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉcallback_http‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚í∏‚Äì‚ÄÉargs‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉsystem_notify_cb‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACUAAAA4oCU4pK74oCTIGNhbGxiYWNrX2R1bWJfaW5jcmVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2lnaW50X2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAA2AAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					917,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-rx/minimal-ws-client.c",
						"symkeys":
						[
							[
								617,
								640
							],
							[
								1502,
								1516
							],
							[
								1553,
								1557
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉcallback_dumb_increment‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsigint_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAQAA4oCU4pK74oCTIGR1bXBfY29ubW9uX2RhdGEgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjYWxsYmFja19odHRwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2lnaW50X2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSuOKAkyBhcmdzIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgc3lzdGVtX25vdGlmeV9jYiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1haW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAB2AAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					918,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
						"symkeys":
						[
							[
								203,
								218
							],
							[
								623,
								635
							],
							[
								811,
								823
							],
							[
								972,
								986
							],
							[
								1619,
								1633
							],
							[
								2444,
								2460
							],
							[
								5343,
								5358
							]
						],
						"symlist":
						[
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉclient_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉclose_status‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclose_reason‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsslcert_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclient_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACUAAAA4oCU4pK74oCTIGNhbGxiYWNrX2R1bWJfaW5jcmVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2lnaW50X2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAIAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGABAAAgIOKSoSAgY2xpZW50X2NhbGxiYWNrICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgY2xvc2Vfc3RhdHVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xvc2VfcmVhc29uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc3NsY2VydF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjb25uZWN0X2NsaWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjbGllbnRfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAgAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					919,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
						"symkeys":
						[
							[
								203,
								218
							],
							[
								623,
								635
							],
							[
								811,
								823
							],
							[
								972,
								986
							],
							[
								1619,
								1633
							],
							[
								2444,
								2460
							],
							[
								5343,
								5358
							]
						],
						"symlist":
						[
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉclient_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉclose_status‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclose_reason‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsslcert_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclient_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgAQAAICDikqEgIGNsaWVudF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGNsb3NlX3N0YXR1cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsb3NlX3JlYXNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNzbGNlcnRfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29ubmVjdF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAIAEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgAQAAICDikqEgIGNsaWVudF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGNsb3NlX3N0YXR1cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsb3NlX3JlYXNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNzbGNlcnRfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29ubmVjdF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
						"symkeys":
						[
							[
								203,
								218
							],
							[
								623,
								635
							],
							[
								811,
								823
							],
							[
								972,
								986
							],
							[
								1619,
								1633
							],
							[
								2444,
								2460
							],
							[
								5343,
								5358
							]
						],
						"symlist":
						[
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉclient_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉclose_status‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclose_reason‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsslcert_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclient_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAAIAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								430,
								443
							],
							[
								1153,
								1171
							],
							[
								1420,
								1433
							],
							[
								1578,
								1594
							],
							[
								2157,
								2171
							],
							[
								2866,
								2883
							],
							[
								3499,
								3513
							],
							[
								4351,
								4368
							],
							[
								6048,
								6062
							],
							[
								6723,
								6737
							],
							[
								7398,
								7413
							],
							[
								8291,
								8307
							],
							[
								10005,
								10021
							],
							[
								10374,
								10395
							],
							[
								11553,
								11572
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_from_wsi‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_wrap‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_sslcert‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_send‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_ping‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_pong‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_close‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_getter‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_setter‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_finalizer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgAQAAICDikqEgIGNsaWVudF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGNsb3NlX3N0YXR1cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsb3NlX3JlYXNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNzbGNlcnRfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29ubmVjdF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAcgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.h",
						"symkeys":
						[
							[
								35,
								53
							],
							[
								104,
								107
							],
							[
								116,
								128
							],
							[
								137,
								150
							],
							[
								191,
								197
							],
							[
								280,
								295
							],
							[
								315,
								333
							],
							[
								365,
								378
							],
							[
								417,
								433
							],
							[
								472,
								486
							],
							[
								522,
								539
							],
							[
								618,
								639
							],
							[
								1067,
								1087
							],
							[
								1221,
								1231
							],
							[
								1587,
								1592
							],
							[
								1715,
								1729
							],
							[
								1832,
								1847
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMINNET_WEBSOCKET_H‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉlws‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉhttp_request‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉhttp_response‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉsocket‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉMinnetWebsocket‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉminnet_ws_from_wsi‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉminnet_ws_get‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉminnet_ws_object‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉminnet_ws_wrap‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉminnet_ws_sslcert‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉminnet_ws_constructor‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚í∏‚Äì‚ÄÉwsi_opaque_user_data‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚íª‚Äì‚ÄÉlws_opaque‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉws_fd‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_data‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_data2‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAwAA4oCU4pK74oCTIG1pbm5ldF93c19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfZnJvbV93c2kgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX29iamVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c193cmFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3NzbGNlcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3Nfc2VuZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19yZXNwb25kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3BpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfcG9uZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19jbG9zZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19nZXR0ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3Nfc2V0dGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAMECAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
						"symkeys":
						[
							[
								430,
								443
							],
							[
								1153,
								1171
							],
							[
								1420,
								1433
							],
							[
								1578,
								1594
							],
							[
								2157,
								2171
							],
							[
								2866,
								2883
							],
							[
								3499,
								3513
							],
							[
								4351,
								4368
							],
							[
								6048,
								6062
							],
							[
								6723,
								6737
							],
							[
								7398,
								7413
							],
							[
								8291,
								8307
							],
							[
								10005,
								10021
							],
							[
								10374,
								10395
							],
							[
								11553,
								11572
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_from_wsi‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_wrap‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_sslcert‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_send‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_ping‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_pong‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_close‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_getter‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_setter‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_finalizer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArAwAAICDik4IgIE1JTk5FVF9XRUJTT0NLRVRfSCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKSniAgbHdzIDsg4oCUIHR5cGUgZGVjbGFyYXRpb24KICDikp4gIGh0dHBfcmVxdWVzdCA7IOKAlCB0eXBlIGRlY2xhcmF0aW9uCiAg4pKeICBodHRwX3Jlc3BvbnNlIDsg4oCUIHR5cGUgZGVjbGFyYXRpb24K4oCU4pK44oCTIHNvY2tldCB7IOKApiB9IDsg4oCUIHR5cGUKICDik4kgIE1pbm5ldFdlYnNvY2tldCA7IOKAlCB0eXBlZGVmCiAg4pKhICBtaW5uZXRfd3NfZnJvbV93c2kgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBtaW5uZXRfd3NfZ2V0ICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogIOKSoSAgbWlubmV0X3dzX29iamVjdCAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICDikqEgIG1pbm5ldF93c193cmFwICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogIOKSoSAgbWlubmV0X3dzX3NzbGNlcnQgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBtaW5uZXRfd3NfY29uc3RydWN0b3IgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSuOKAkyB3c2lfb3BhcXVlX3VzZXJfZGF0YSB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK74oCTIGx3c19vcGFxdWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19mZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19kYXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX2RhdGEyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAcgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.h",
						"symkeys":
						[
							[
								32,
								47
							],
							[
								126,
								137
							],
							[
								187,
								199
							],
							[
								210,
								226
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMINNET_CLIENT_H‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚í∏‚Äì‚ÄÉclient_data‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉMinnetClient‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAwAA4oCU4pK74oCTIG1pbm5ldF93c19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfZnJvbV93c2kgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX29iamVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c193cmFwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3NzbGNlcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3Nfc2VuZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19yZXNwb25kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX3BpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfcG9uZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19jbG9zZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19nZXR0ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3Nfc2V0dGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3dzX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAJUAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
						"symkeys":
						[
							[
								203,
								218
							],
							[
								623,
								635
							],
							[
								811,
								823
							],
							[
								972,
								986
							],
							[
								1619,
								1633
							],
							[
								2444,
								2460
							],
							[
								5343,
								5358
							]
						],
						"symlist":
						[
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉclient_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉclose_status‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclose_reason‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsslcert_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclient_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACtAAAAICDik4IgIE1JTk5FVF9DTElFTlRfSCDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrjigJMgY2xpZW50X2RhdGEgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pOJICBNaW5uZXRDbGllbnQgOyDigJQgdHlwZWRlZgogIOKSoSAgbWlubmV0X3dzX2NsaWVudCAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24AAAAAAAAAACABAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.h",
						"symkeys":
						[
							[
								32,
								47
							],
							[
								126,
								137
							],
							[
								187,
								199
							],
							[
								210,
								226
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMINNET_CLIENT_H‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚í∏‚Äì‚ÄÉclient_data‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉMinnetClient‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgAQAAICDikqEgIGNsaWVudF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGNsb3NlX3N0YXR1cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsb3NlX3JlYXNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNzbGNlcnRfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29ubmVjdF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAlQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					11,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.h",
						"symkeys":
						[
							[
								32,
								47
							],
							[
								126,
								137
							],
							[
								205,
								217
							],
							[
								228,
								244
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMINNET_CLIENT_H‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚í∏‚Äì‚ÄÉclient_data‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉMinnetClient‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACtAAAAICDik4IgIE1JTk5FVF9DTElFTlRfSCDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrjigJMgY2xpZW50X2RhdGEgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pOJICBNaW5uZXRDbGllbnQgOyDigJQgdHlwZWRlZgogIOKSoSAgbWlubmV0X3dzX2NsaWVudCAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24AAAAAAAAAAJUAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
						"symkeys":
						[
							[
								203,
								218
							],
							[
								623,
								635
							],
							[
								811,
								823
							],
							[
								972,
								986
							],
							[
								1619,
								1633
							],
							[
								2444,
								2460
							],
							[
								5343,
								5358
							]
						],
						"symlist":
						[
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉclient_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉclose_status‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclose_reason‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsslcert_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclient_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACtAAAAICDik4IgIE1JTk5FVF9DTElFTlRfSCDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrjigJMgY2xpZW50X2RhdGEgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pOJICBNaW5uZXRDbGllbnQgOyDigJQgdHlwZWRlZgogIOKSoSAgbWlubmV0X3dzX2NsaWVudCAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24AAAAAAAAAACABAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					13,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
						"symkeys":
						[
							[
								203,
								218
							],
							[
								623,
								635
							],
							[
								811,
								823
							],
							[
								972,
								986
							],
							[
								1619,
								1633
							],
							[
								2444,
								2460
							],
							[
								5343,
								5358
							]
						],
						"symlist":
						[
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉclient_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉclose_status‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclose_reason‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉsslcert_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉconnect_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉminnet_ws_client‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉclient_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABgAQAAICDikqEgIGNsaWVudF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGNsb3NlX3N0YXR1cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsb3NlX3JlYXNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNzbGNlcnRfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29ubmVjdF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAIAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGABAAAgIOKSoSAgY2xpZW50X2NhbGxiYWNrICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgY2xvc2Vfc3RhdHVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xvc2VfcmVhc29uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc3NsY2VydF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjb25uZWN0X2NsaWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF93c19jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjbGllbnRfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAgAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
						"symkeys":
						[
							[
								271,
								291
							],
							[
								552,
								569
							],
							[
								1081,
								1099
							],
							[
								1293,
								1305
							],
							[
								1920,
								1929
							],
							[
								3557,
								3567
							],
							[
								4396,
								4406
							],
							[
								4643,
								4655
							],
							[
								6444,
								6459
							],
							[
								7080,
								7089
							],
							[
								7268,
								7278
							],
							[
								8486,
								8499
							],
							[
								9816,
								9829
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfile_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉserve_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_writable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgAQAAICDikqEgIGNsaWVudF9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIGNsb3NlX3N0YXR1cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsb3NlX3JlYXNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNzbGNlcnRfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29ubmVjdF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfd3NfY2xpZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAA+QEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					19,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB7AgAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZpbGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADoAQAAAAAAAOgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-callbacks.h",
						"symkeys":
						[
							[
								1642,
								1654
							],
							[
								1688,
								1709
							],
							[
								2342,
								2366
							],
							[
								2586,
								2614
							],
							[
								2714,
								2785
							],
							[
								2934,
								2954
							],
							[
								36781,
								36806
							],
							[
								36818,
								36845
							],
							[
								36857,
								36892
							],
							[
								36903,
								36936
							],
							[
								36947,
								36984
							],
							[
								36996,
								37031
							]
						],
						"symlist":
						[
							"‚Äî‚í∏‚Äì‚ÄÉlws_ssl_info‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉlws_cert_update_state‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉlws_acme_cert_aging_args‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉlws_filter_network_conn_args‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÇ‚ÄÇ‚úé‚ÄÇ‚ÄÉNOTE: These public enums are part of the abi.  If you want to add one,",
							"‚Äî‚í∏‚Äì‚ÄÉlws_callback_reasons‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__CGI‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__PROXY‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__CGI_CHUNK_END‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__CGI_HEADERS‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__PROXY_TRANS_END‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__PROXY_HEADERS‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AQAAAAAAAAAAAAAAYgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					21,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC6AgAA4oCU4pK44oCTIGx3c19zc2xfaW5mbyB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK44oCTIGx3c19jZXJ0X3VwZGF0ZV9zdGF0ZSB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK44oCTIGx3c19hY21lX2NlcnRfYWdpbmdfYXJncyB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK44oCTIGx3c19maWx0ZXJfbmV0d29ya19jb25uX2FyZ3MgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pyOICBOT1RFOiBUaGVzZSBwdWJsaWMgZW51bXMgYXJlIHBhcnQgb2YgdGhlIGFiaS4gIElmIHlvdSB3YW50IHRvIGFkZCBvbmUsCuKAlOKSuOKAkyBsd3NfY2FsbGJhY2tfcmVhc29ucyB7IOKApiB9IDsg4oCUIHR5cGUKICDik4IgIExXU19DQl9SRUFTT05fQVVYX0JGX19DR0kg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIExXU19DQl9SRUFTT05fQVVYX0JGX19QUk9YWSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTFdTX0NCX1JFQVNPTl9BVVhfQkZfX0NHSV9DSFVOS19FTkQg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIExXU19DQl9SRUFTT05fQVVYX0JGX19DR0lfSEVBREVSUyDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTFdTX0NCX1JFQVNPTl9BVVhfQkZfX1BST1hZX1RSQU5TX0VORCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTFdTX0NCX1JFQVNPTl9BVVhfQkZfX1BST1hZX0hFQURFUlMg4oCmIOKAlCBtYWNybyBvYmplY3QAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					22,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.h",
						"symkeys":
						[
							[
								37,
								57
							],
							[
								108,
								120
							],
							[
								129,
								142
							],
							[
								160,
								177
							],
							[
								341,
								359
							],
							[
								377,
								387
							],
							[
								628,
								643
							],
							[
								801,
								821
							],
							[
								877,
								895
							],
							[
								953,
								970
							],
							[
								1028,
								1040
							],
							[
								1160,
								1169
							],
							[
								1216,
								1226
							],
							[
								1254,
								1264
							],
							[
								1306,
								1319
							],
							[
								1372,
								1385
							],
							[
								1516,
								1521
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉMINNET_SERVER_HTTP_H‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉhttp_request‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚ÄÉ‚íû‚ÄÇ‚ÄÉhttp_response‚Äâ;‚ÄÉ‚Äî‚ÄÉtype declaration",
							"‚Äî‚í∏‚Äì‚ÄÉhttp_vhost_option‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉMinnetVhostOptions‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚Äî‚í∏‚Äì‚ÄÉhttp_mount‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìâ‚ÄÇ‚ÄÉMinnetHttpMount‚Äâ;‚ÄÉ‚Äî‚ÄÉtypedef",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉvhost_options_create‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉvhost_options_free‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉvhost_options_new‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉmount_create‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉmount_new‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉmount_find‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉmount_free‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉhttp_writable‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚ÄÉ‚í°‚ÄÇ‚ÄÉhttp_callback‚Äâ(‚Äâ)‚Äâ;‚ÄÉ‚Äî‚ÄÉfunction declaration",
							"‚Äî‚íª‚Äì‚ÄÉis_h2‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAA1QIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					23,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
						"symkeys":
						[
							[
								271,
								291
							],
							[
								552,
								569
							],
							[
								1081,
								1099
							],
							[
								1293,
								1305
							],
							[
								1920,
								1929
							],
							[
								3557,
								3567
							],
							[
								4396,
								4406
							],
							[
								4643,
								4655
							],
							[
								6444,
								6459
							],
							[
								7080,
								7089
							],
							[
								7268,
								7278
							],
							[
								8486,
								8499
							],
							[
								9816,
								9829
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfile_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉserve_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_writable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAtAwAAICDik4IgIE1JTk5FVF9TRVJWRVJfSFRUUF9IIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pKeICBodHRwX3JlcXVlc3QgOyDigJQgdHlwZSBkZWNsYXJhdGlvbgogIOKSniAgaHR0cF9yZXNwb25zZSA7IOKAlCB0eXBlIGRlY2xhcmF0aW9uCuKAlOKSuOKAkyBodHRwX3Zob3N0X29wdGlvbiB7IOKApiB9IDsg4oCUIHR5cGUKICDik4kgIE1pbm5ldFZob3N0T3B0aW9ucyA7IOKAlCB0eXBlZGVmCuKAlOKSuOKAkyBodHRwX21vdW50IHsg4oCmIH0gOyDigJQgdHlwZQogIOKTiSAgTWlubmV0SHR0cE1vdW50IDsg4oCUIHR5cGVkZWYKICDikqEgIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogIOKSoSAgdmhvc3Rfb3B0aW9uc19mcmVlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogIOKSoSAgdmhvc3Rfb3B0aW9uc19uZXcgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBtb3VudF9jcmVhdGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBtb3VudF9uZXcgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBtb3VudF9maW5kICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgogIOKSoSAgbW91bnRfZnJlZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICDikqEgIGh0dHBfd3JpdGFibGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBodHRwX2NhbGxiYWNrICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgaXNfaDIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAD5AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					24,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
						"symkeys":
						[
							[
								271,
								291
							],
							[
								552,
								569
							],
							[
								1081,
								1099
							],
							[
								1293,
								1305
							],
							[
								1920,
								1929
							],
							[
								3557,
								3567
							],
							[
								4396,
								4406
							],
							[
								4643,
								4655
							],
							[
								6444,
								6459
							],
							[
								7080,
								7089
							],
							[
								7268,
								7278
							],
							[
								8486,
								8499
							],
							[
								9816,
								9829
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfile_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉserve_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_writable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB7AgAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZpbGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPkBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB7AgAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZpbGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPkBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					25,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
						"symkeys":
						[
							[
								271,
								291
							],
							[
								552,
								569
							],
							[
								1081,
								1099
							],
							[
								1293,
								1305
							],
							[
								1920,
								1929
							],
							[
								3557,
								3567
							],
							[
								4396,
								4406
							],
							[
								4643,
								4655
							],
							[
								6444,
								6459
							],
							[
								7080,
								7089
							],
							[
								7268,
								7278
							],
							[
								8486,
								8499
							],
							[
								9816,
								9829
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfile_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉserve_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_writable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB7AgAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZpbGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPkBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB7AgAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZpbGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPkBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					26,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
						"symkeys":
						[
							[
								271,
								291
							],
							[
								552,
								569
							],
							[
								1081,
								1099
							],
							[
								1293,
								1305
							],
							[
								1920,
								1929
							],
							[
								3557,
								3567
							],
							[
								4396,
								4406
							],
							[
								4643,
								4655
							],
							[
								6444,
								6459
							],
							[
								7080,
								7089
							],
							[
								7268,
								7278
							],
							[
								8486,
								8499
							],
							[
								9816,
								9829
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfile_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉserve_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_writable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB7AgAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZpbGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPkBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					27,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
						"symkeys":
						[
							[
								271,
								291
							],
							[
								552,
								569
							],
							[
								1081,
								1099
							],
							[
								1293,
								1305
							],
							[
								1920,
								1929
							],
							[
								3557,
								3567
							],
							[
								4396,
								4406
							],
							[
								4643,
								4655
							],
							[
								6444,
								6459
							],
							[
								7080,
								7089
							],
							[
								7268,
								7278
							],
							[
								8486,
								8499
							],
							[
								9816,
								9829
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfile_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉserve_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_writable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB7AgAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZpbGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPkBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					28,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-callbacks.h",
						"symkeys":
						[
							[
								1642,
								1654
							],
							[
								1688,
								1709
							],
							[
								2342,
								2366
							],
							[
								2586,
								2614
							],
							[
								2714,
								2785
							],
							[
								2934,
								2954
							],
							[
								36781,
								36806
							],
							[
								36818,
								36845
							],
							[
								36857,
								36892
							],
							[
								36903,
								36936
							],
							[
								36947,
								36984
							],
							[
								36996,
								37031
							]
						],
						"symlist":
						[
							"‚Äî‚í∏‚Äì‚ÄÉlws_ssl_info‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉlws_cert_update_state‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉlws_acme_cert_aging_args‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉlws_filter_network_conn_args‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÇ‚ÄÇ‚úé‚ÄÇ‚ÄÉNOTE: These public enums are part of the abi.  If you want to add one,",
							"‚Äî‚í∏‚Äì‚ÄÉlws_callback_reasons‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__CGI‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__PROXY‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__CGI_CHUNK_END‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__CGI_HEADERS‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__PROXY_TRANS_END‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__PROXY_HEADERS‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB7AgAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZpbGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAGICAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					29,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
						"symkeys":
						[
							[
								271,
								291
							],
							[
								552,
								569
							],
							[
								1081,
								1099
							],
							[
								1293,
								1305
							],
							[
								1920,
								1929
							],
							[
								3557,
								3567
							],
							[
								4396,
								4406
							],
							[
								4643,
								4655
							],
							[
								6444,
								6459
							],
							[
								7080,
								7089
							],
							[
								7268,
								7278
							],
							[
								8486,
								8499
							],
							[
								9816,
								9829
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfile_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉserve_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_writable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC6AgAA4oCU4pK44oCTIGx3c19zc2xfaW5mbyB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK44oCTIGx3c19jZXJ0X3VwZGF0ZV9zdGF0ZSB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK44oCTIGx3c19hY21lX2NlcnRfYWdpbmdfYXJncyB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK44oCTIGx3c19maWx0ZXJfbmV0d29ya19jb25uX2FyZ3MgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pyOICBOT1RFOiBUaGVzZSBwdWJsaWMgZW51bXMgYXJlIHBhcnQgb2YgdGhlIGFiaS4gIElmIHlvdSB3YW50IHRvIGFkZCBvbmUsCuKAlOKSuOKAkyBsd3NfY2FsbGJhY2tfcmVhc29ucyB7IOKApiB9IDsg4oCUIHR5cGUKICDik4IgIExXU19DQl9SRUFTT05fQVVYX0JGX19DR0kg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIExXU19DQl9SRUFTT05fQVVYX0JGX19QUk9YWSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTFdTX0NCX1JFQVNPTl9BVVhfQkZfX0NHSV9DSFVOS19FTkQg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIExXU19DQl9SRUFTT05fQVVYX0JGX19DR0lfSEVBREVSUyDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTFdTX0NCX1JFQVNPTl9BVVhfQkZfX1BST1hZX1RSQU5TX0VORCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTFdTX0NCX1JFQVNPTl9BVVhfQkZfX1BST1hZX0hFQURFUlMg4oCmIOKAlCBtYWNybyBvYmplY3QAAAAAAAAAAPkBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					30,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
						"symkeys":
						[
							[
								271,
								291
							],
							[
								552,
								569
							],
							[
								1081,
								1099
							],
							[
								1293,
								1305
							],
							[
								1920,
								1929
							],
							[
								3557,
								3567
							],
							[
								4396,
								4406
							],
							[
								4643,
								4655
							],
							[
								6444,
								6459
							],
							[
								7080,
								7089
							],
							[
								7268,
								7278
							],
							[
								8486,
								8499
							],
							[
								9816,
								9829
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfile_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉserve_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_writable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB7AgAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZpbGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPkBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB7AgAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZpbGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPkBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					31,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
						"symkeys":
						[
							[
								271,
								291
							],
							[
								552,
								569
							],
							[
								1081,
								1099
							],
							[
								1293,
								1305
							],
							[
								1920,
								1929
							],
							[
								3557,
								3567
							],
							[
								4396,
								4406
							],
							[
								4643,
								4655
							],
							[
								6444,
								6459
							],
							[
								7080,
								7089
							],
							[
								7268,
								7278
							],
							[
								8486,
								8499
							],
							[
								9816,
								9829
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfile_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉserve_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_writable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB7AgAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZpbGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPkBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					32,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-callbacks.h",
						"symkeys":
						[
							[
								1642,
								1654
							],
							[
								1688,
								1709
							],
							[
								2342,
								2366
							],
							[
								2586,
								2614
							],
							[
								2714,
								2785
							],
							[
								2934,
								2954
							],
							[
								36781,
								36806
							],
							[
								36818,
								36845
							],
							[
								36857,
								36892
							],
							[
								36903,
								36936
							],
							[
								36947,
								36984
							],
							[
								36996,
								37031
							]
						],
						"symlist":
						[
							"‚Äî‚í∏‚Äì‚ÄÉlws_ssl_info‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉlws_cert_update_state‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉlws_acme_cert_aging_args‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉlws_filter_network_conn_args‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÇ‚ÄÇ‚úé‚ÄÇ‚ÄÉNOTE: These public enums are part of the abi.  If you want to add one,",
							"‚Äî‚í∏‚Äì‚ÄÉlws_callback_reasons‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__CGI‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__PROXY‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__CGI_CHUNK_END‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__CGI_HEADERS‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__PROXY_TRANS_END‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__PROXY_HEADERS‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB7AgAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZpbGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAGICAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					33,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC6AgAA4oCU4pK44oCTIGx3c19zc2xfaW5mbyB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK44oCTIGx3c19jZXJ0X3VwZGF0ZV9zdGF0ZSB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK44oCTIGx3c19hY21lX2NlcnRfYWdpbmdfYXJncyB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK44oCTIGx3c19maWx0ZXJfbmV0d29ya19jb25uX2FyZ3MgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pyOICBOT1RFOiBUaGVzZSBwdWJsaWMgZW51bXMgYXJlIHBhcnQgb2YgdGhlIGFiaS4gIElmIHlvdSB3YW50IHRvIGFkZCBvbmUsCuKAlOKSuOKAkyBsd3NfY2FsbGJhY2tfcmVhc29ucyB7IOKApiB9IDsg4oCUIHR5cGUKICDik4IgIExXU19DQl9SRUFTT05fQVVYX0JGX19DR0kg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIExXU19DQl9SRUFTT05fQVVYX0JGX19QUk9YWSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTFdTX0NCX1JFQVNPTl9BVVhfQkZfX0NHSV9DSFVOS19FTkQg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIExXU19DQl9SRUFTT05fQVVYX0JGX19DR0lfSEVBREVSUyDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTFdTX0NCX1JFQVNPTl9BVVhfQkZfX1BST1hZX1RSQU5TX0VORCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTFdTX0NCX1JFQVNPTl9BVVhfQkZfX1BST1hZX0hFQURFUlMg4oCmIOKAlCBtYWNybyBvYmplY3QAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					34,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
						"symkeys":
						[
							[
								271,
								291
							],
							[
								552,
								569
							],
							[
								1081,
								1099
							],
							[
								1293,
								1305
							],
							[
								1920,
								1929
							],
							[
								3557,
								3567
							],
							[
								4396,
								4406
							],
							[
								4643,
								4655
							],
							[
								6444,
								6459
							],
							[
								7080,
								7089
							],
							[
								7268,
								7278
							],
							[
								8486,
								8499
							],
							[
								9816,
								9829
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfile_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉserve_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_writable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AQAAAAAAAAAAAAAA+QEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					35,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-callbacks.h",
						"symkeys":
						[
							[
								1642,
								1654
							],
							[
								1688,
								1709
							],
							[
								2342,
								2366
							],
							[
								2586,
								2614
							],
							[
								2714,
								2785
							],
							[
								2934,
								2954
							],
							[
								36781,
								36806
							],
							[
								36818,
								36845
							],
							[
								36857,
								36892
							],
							[
								36903,
								36936
							],
							[
								36947,
								36984
							],
							[
								36996,
								37031
							]
						],
						"symlist":
						[
							"‚Äî‚í∏‚Äì‚ÄÉlws_ssl_info‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉlws_cert_update_state‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉlws_acme_cert_aging_args‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉlws_filter_network_conn_args‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÇ‚ÄÇ‚úé‚ÄÇ‚ÄÉNOTE: These public enums are part of the abi.  If you want to add one,",
							"‚Äî‚í∏‚Äì‚ÄÉlws_callback_reasons‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__CGI‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__PROXY‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__CGI_CHUNK_END‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__CGI_HEADERS‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__PROXY_TRANS_END‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__PROXY_HEADERS‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB7AgAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZpbGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAGICAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					36,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
						"symkeys":
						[
							[
								271,
								291
							],
							[
								552,
								569
							],
							[
								1081,
								1099
							],
							[
								1293,
								1305
							],
							[
								1920,
								1929
							],
							[
								3557,
								3567
							],
							[
								4396,
								4406
							],
							[
								4643,
								4655
							],
							[
								6444,
								6459
							],
							[
								7080,
								7089
							],
							[
								7268,
								7278
							],
							[
								8486,
								8499
							],
							[
								9816,
								9829
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfile_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉserve_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_writable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC6AgAA4oCU4pK44oCTIGx3c19zc2xfaW5mbyB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK44oCTIGx3c19jZXJ0X3VwZGF0ZV9zdGF0ZSB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK44oCTIGx3c19hY21lX2NlcnRfYWdpbmdfYXJncyB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK44oCTIGx3c19maWx0ZXJfbmV0d29ya19jb25uX2FyZ3MgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pyOICBOT1RFOiBUaGVzZSBwdWJsaWMgZW51bXMgYXJlIHBhcnQgb2YgdGhlIGFiaS4gIElmIHlvdSB3YW50IHRvIGFkZCBvbmUsCuKAlOKSuOKAkyBsd3NfY2FsbGJhY2tfcmVhc29ucyB7IOKApiB9IDsg4oCUIHR5cGUKICDik4IgIExXU19DQl9SRUFTT05fQVVYX0JGX19DR0kg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIExXU19DQl9SRUFTT05fQVVYX0JGX19QUk9YWSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTFdTX0NCX1JFQVNPTl9BVVhfQkZfX0NHSV9DSFVOS19FTkQg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIExXU19DQl9SRUFTT05fQVVYX0JGX19DR0lfSEVBREVSUyDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTFdTX0NCX1JFQVNPTl9BVVhfQkZfX1BST1hZX1RSQU5TX0VORCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTFdTX0NCX1JFQVNPTl9BVVhfQkZfX1BST1hZX0hFQURFUlMg4oCmIOKAlCBtYWNybyBvYmplY3QAAAAAAAAAAPkBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					37,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-callbacks.h",
						"symkeys":
						[
							[
								1642,
								1654
							],
							[
								1688,
								1709
							],
							[
								2342,
								2366
							],
							[
								2586,
								2614
							],
							[
								2714,
								2785
							],
							[
								2934,
								2954
							],
							[
								36781,
								36806
							],
							[
								36818,
								36845
							],
							[
								36857,
								36892
							],
							[
								36903,
								36936
							],
							[
								36947,
								36984
							],
							[
								36996,
								37031
							]
						],
						"symlist":
						[
							"‚Äî‚í∏‚Äì‚ÄÉlws_ssl_info‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉlws_cert_update_state‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉlws_acme_cert_aging_args‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚Äî‚í∏‚Äì‚ÄÉlws_filter_network_conn_args‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÇ‚ÄÇ‚úé‚ÄÇ‚ÄÉNOTE: These public enums are part of the abi.  If you want to add one,",
							"‚Äî‚í∏‚Äì‚ÄÉlws_callback_reasons‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚Äâ;‚ÄÉ‚Äî‚ÄÉtype",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__CGI‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__PROXY‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__CGI_CHUNK_END‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__CGI_HEADERS‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__PROXY_TRANS_END‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉLWS_CB_REASON_AUX_BF__PROXY_HEADERS‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB7AgAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZpbGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAGICAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					38,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
						"symkeys":
						[
							[
								271,
								291
							],
							[
								552,
								569
							],
							[
								1081,
								1099
							],
							[
								1293,
								1305
							],
							[
								1920,
								1929
							],
							[
								3557,
								3567
							],
							[
								4396,
								4406
							],
							[
								4643,
								4655
							],
							[
								6444,
								6459
							],
							[
								7080,
								7089
							],
							[
								7268,
								7278
							],
							[
								8486,
								8499
							],
							[
								9816,
								9829
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfile_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉserve_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_writable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC6AgAA4oCU4pK44oCTIGx3c19zc2xfaW5mbyB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK44oCTIGx3c19jZXJ0X3VwZGF0ZV9zdGF0ZSB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK44oCTIGx3c19hY21lX2NlcnRfYWdpbmdfYXJncyB7IOKApiB9IDsg4oCUIHR5cGUK4oCU4pK44oCTIGx3c19maWx0ZXJfbmV0d29ya19jb25uX2FyZ3MgeyDigKYgfSA7IOKAlCB0eXBlCiAg4pyOICBOT1RFOiBUaGVzZSBwdWJsaWMgZW51bXMgYXJlIHBhcnQgb2YgdGhlIGFiaS4gIElmIHlvdSB3YW50IHRvIGFkZCBvbmUsCuKAlOKSuOKAkyBsd3NfY2FsbGJhY2tfcmVhc29ucyB7IOKApiB9IDsg4oCUIHR5cGUKICDik4IgIExXU19DQl9SRUFTT05fQVVYX0JGX19DR0kg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIExXU19DQl9SRUFTT05fQVVYX0JGX19QUk9YWSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTFdTX0NCX1JFQVNPTl9BVVhfQkZfX0NHSV9DSFVOS19FTkQg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIExXU19DQl9SRUFTT05fQVVYX0JGX19DR0lfSEVBREVSUyDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTFdTX0NCX1JFQVNPTl9BVVhfQkZfX1BST1hZX1RSQU5TX0VORCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTFdTX0NCX1JFQVNPTl9BVVhfQkZfX1BST1hZX0hFQURFUlMg4oCmIOKAlCBtYWNybyBvYmplY3QAAAAAAAAAAPkBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					39,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
						"symkeys":
						[
							[
								271,
								291
							],
							[
								552,
								569
							],
							[
								1081,
								1099
							],
							[
								1293,
								1305
							],
							[
								1920,
								1929
							],
							[
								3557,
								3567
							],
							[
								4396,
								4406
							],
							[
								4643,
								4655
							],
							[
								6444,
								6459
							],
							[
								7080,
								7089
							],
							[
								7268,
								7278
							],
							[
								8486,
								8499
							],
							[
								9816,
								9829
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉvhost_options_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmount_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_respond‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉrequest_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉfile_size‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉserve_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_writable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉhttp_callback‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB7AgAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZpbGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPkBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB7AgAA4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfcmVzcG9uZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZpbGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPkBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				]
			]
		},
		{
			"file": "minnet-client.c",
			"settings":
			{
				"buffer_size": 10054,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2678,
					1,
					"paste",
					null,
					"AQAAAMIEAAAAAAAAQAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwgQAAAAAAADCBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2681,
					1,
					"insert",
					{
						"characters": "ss,l"
					},
					"BAAAANgEAAAAAAAA2QQAAAAAAAAAAAAA2QQAAAAAAADaBAAAAAAAAAAAAADaBAAAAAAAANsEAAAAAAAAAAAAANsEAAAAAAAA3AQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2AQAAAAAAADYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2682,
					2,
					"left_delete",
					null,
					"AgAAANsEAAAAAAAA2wQAAAAAAAABAAAAbNoEAAAAAAAA2gQAAAAAAAABAAAALA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3AQAAAAAAADcBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2683,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAANoEAAAAAAAA2wQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2gQAAAAAAADaBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2684,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAANsEAAAAAAAA3AQAAAAAAAAAAAAA3AQAAAAAAADdBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2wQAAAAAAADbBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2685,
					1,
					"insert",
					{
						"characters": " ("
					},
					"AgAAAN0EAAAAAAAA3gQAAAAAAAAAAAAA3gQAAAAAAADfBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3QQAAAAAAADdBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2692,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANcEAAAAAAAA2AQAAAAAAAAAAAAA2AQAAAAAAADYBAAAAAAAAAYAAAAgc3NsID8",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3QQAAAAAAADXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2696,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AwAAAKsEAAAAAAAArAQAAAAAAAAAAAAArAQAAAAAAACsBAAAAAAAABcAAABpLnNzbF9jb25uZWN0aW9uID0gc3NsO6wEAAAAAAAArQQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwgQAAAAAAACrBAAAAAAAAAAAAAAAAChA"
				],
				[
					2697,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAK0EAAAAAAAArwQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArQQAAAAAAACtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2698,
					1,
					"insert",
					{
						"characters": "ssl"
					},
					"AwAAAK4EAAAAAAAArwQAAAAAAAAAAAAArwQAAAAAAACwBAAAAAAAAAAAAACwBAAAAAAAALEEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArgQAAAAAAACuBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2702,
					1,
					"left_delete",
					null,
					"AQAAAMkEAAAAAAAAyQQAAAAAAAABAAAAKA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAygQAAAAAAADKBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2706,
					1,
					"paste",
					null,
					"AQAAADEFAAAAAAAAYgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMQUAAAAAAAAxBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2719,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALIEAAAAAAAAswQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsgQAAAAAAACyBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2720,
					1,
					"insert",
					{
						"characters": "¬¥"
					},
					"AQAAALMEAAAAAAAAtAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAswQAAAAAAACzBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2721,
					1,
					"left_delete",
					null,
					"AQAAALMEAAAAAAAAswQAAAAAAAACAAAAwrQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtAQAAAAAAAC0BAAAAAAAAAAAAAAAAPC/"
				],
				[
					2722,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALMEAAAAAAAAtQQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAswQAAAAAAACzBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2726,
					1,
					"left_delete",
					null,
					"AQAAALQEAAAAAAAAtAQAAAAAAAABAAAAfQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtQQAAAAAAAC1BAAAAAAAAAAAAAAAAFJA"
				],
				[
					2728,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAGQFAAAAAAAAZQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZAUAAAAAAABkBQAAAAAAAAAAAAAAgFBA"
				],
				[
					2731,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZQUAAAAAAABlBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2739,
					1,
					"cut",
					null,
					"AQAAACIFAAAAAAAAIgUAAAAAAAAxAAAAICAgIGkuc3NsX2Nvbm5lY3Rpb24gfD0gTENDU0NGX0FMTE9XX1NFTEZTSUdORUQ7Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIgUAAAAAAABTBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2740,
					2,
					"paste",
					null,
					"AgAAACIFAAAAAAAAUwUAAAAAAAAAAAAAUwUAAAAAAACEBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIgUAAAAAAAAiBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2743,
					1,
					"insert",
					{
						"characters": "INSEFCU"
					},
					"CAAAAHgFAAAAAAAAeQUAAAAAAAAAAAAAeQUAAAAAAAB5BQAAAAAAAAoAAABTRUxGU0lHTkVEeQUAAAAAAAB6BQAAAAAAAAAAAAB6BQAAAAAAAHsFAAAAAAAAAAAAAHsFAAAAAAAAfAUAAAAAAAAAAAAAfAUAAAAAAAB9BQAAAAAAAAAAAAB9BQAAAAAAAH4FAAAAAAAAAAAAAH4FAAAAAAAAfwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeAUAAAAAAACCBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2744,
					3,
					"left_delete",
					null,
					"AwAAAH4FAAAAAAAAfgUAAAAAAAABAAAAVX0FAAAAAAAAfQUAAAAAAAABAAAAQ3wFAAAAAAAAfAUAAAAAAAABAAAARg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfwUAAAAAAAB/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					2745,
					1,
					"insert",
					{
						"characters": "CURE"
					},
					"BAAAAHwFAAAAAAAAfQUAAAAAAAAAAAAAfQUAAAAAAAB+BQAAAAAAAAAAAAB+BQAAAAAAAH8FAAAAAAAAAAAAAH8FAAAAAAAAgAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfAUAAAAAAAB8BQAAAAAAAAAAAAAAAPC/"
				],
				[
					2759,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABMOAAAAAAAAFA4AAAAAAAAAAAAAFA4AAAAAAAAWDgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEw4AAAAAAAATDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2776,
					1,
					"insert",
					{
						"characters": "\ncase"
					},
					"CAAAAA8TAAAAAAAAEBMAAAAAAAAAAAAAEBMAAAAAAAASEwAAAAAAAAAAAAASEwAAAAAAABQTAAAAAAAAAAAAABQOAAAAAAAAFA4AAAAAAAACAAAAICASEwAAAAAAABMTAAAAAAAAAAAAABMTAAAAAAAAFBMAAAAAAAAAAAAAFBMAAAAAAAAVEwAAAAAAAAAAAAAVEwAAAAAAABYTAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADxMAAAAAAAAPEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2777,
					1,
					"insert",
					{
						"characters": " LWS_CALLBACK_"
					},
					"DgAAABYTAAAAAAAAFxMAAAAAAAAAAAAAFxMAAAAAAAAYEwAAAAAAAAAAAAAYEwAAAAAAABkTAAAAAAAAAAAAABkTAAAAAAAAGhMAAAAAAAAAAAAAGhMAAAAAAAAbEwAAAAAAAAAAAAAbEwAAAAAAABwTAAAAAAAAAAAAABwTAAAAAAAAHRMAAAAAAAAAAAAAHRMAAAAAAAAeEwAAAAAAAAAAAAAeEwAAAAAAAB8TAAAAAAAAAAAAAB8TAAAAAAAAIBMAAAAAAAAAAAAAIBMAAAAAAAAhEwAAAAAAAAAAAAAhEwAAAAAAACITAAAAAAAAAAAAACITAAAAAAAAIxMAAAAAAAAAAAAAIxMAAAAAAAAkEwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFhMAAAAAAAAWEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2778,
					1,
					"paste",
					null,
					"AQAAACQTAAAAAAAAShMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJBMAAAAAAAAkEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2779,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAEoTAAAAAAAASxMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAShMAAAAAAABKEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2780,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEsTAAAAAAAATRMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASxMAAAAAAABLEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2781,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAEwTAAAAAAAATRMAAAAAAAAAAAAATRMAAAAAAABREwAAAAAAAAAAAABREwAAAAAAAFITAAAAAAAAAAAAAFITAAAAAAAAVhMAAAAAAAAAAAAATRMAAAAAAABNEwAAAAAAAAQAAAAgICAgTRMAAAAAAABTEwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATBMAAAAAAABMEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2782,
					1,
					"insert",
					{
						"characters": "break;"
					},
					"BgAAAFMTAAAAAAAAVBMAAAAAAAAAAAAAVBMAAAAAAABVEwAAAAAAAAAAAABVEwAAAAAAAFYTAAAAAAAAAAAAAFYTAAAAAAAAVxMAAAAAAAAAAAAAVxMAAAAAAABYEwAAAAAAAAAAAABYEwAAAAAAAFkTAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUxMAAAAAAABTEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2785,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAEwTAAAAAAAATRMAAAAAAAAAAAAATRMAAAAAAABREwAAAAAAAAAAAABREwAAAAAAAFMTAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATBMAAAAAAABMEwAAAAAAAP///////+9/"
				],
				[
					2787,
					1,
					"insert",
					{
						"characters": "rewt"
					},
					"BQAAAFoTAAAAAAAAWxMAAAAAAAAAAAAATRMAAAAAAABNEwAAAAAAAAYAAAAgICAgICBVEwAAAAAAAFYTAAAAAAAAAAAAAFYTAAAAAAAAVxMAAAAAAAAAAAAAVxMAAAAAAABYEwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWhMAAAAAAABaEwAAAAAAAAAAAAAAAEhA"
				],
				[
					2788,
					1,
					"left_delete",
					null,
					"AQAAAFcTAAAAAAAAVxMAAAAAAAABAAAAdA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWBMAAAAAAABYEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2789,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAFcTAAAAAAAAWBMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVxMAAAAAAABXEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2790,
					1,
					"left_delete",
					null,
					"AQAAAFcTAAAAAAAAVxMAAAAAAAABAAAAdA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWBMAAAAAAABYEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2791,
					1,
					"insert",
					{
						"characters": "uir"
					},
					"AwAAAFcTAAAAAAAAWBMAAAAAAAAAAAAAWBMAAAAAAABZEwAAAAAAAAAAAABZEwAAAAAAAFoTAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVxMAAAAAAABXEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2792,
					4,
					"left_delete",
					null,
					"BAAAAFkTAAAAAAAAWRMAAAAAAAABAAAAclgTAAAAAAAAWBMAAAAAAAABAAAAaVcTAAAAAAAAVxMAAAAAAAABAAAAdVYTAAAAAAAAVhMAAAAAAAABAAAAdw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWhMAAAAAAABaEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2793,
					1,
					"insert",
					{
						"characters": "tuir"
					},
					"BAAAAFYTAAAAAAAAVxMAAAAAAAAAAAAAVxMAAAAAAABYEwAAAAAAAAAAAABYEwAAAAAAAFkTAAAAAAAAAAAAAFkTAAAAAAAAWhMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVhMAAAAAAABWEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2794,
					2,
					"left_delete",
					null,
					"AgAAAFkTAAAAAAAAWRMAAAAAAAABAAAAclgTAAAAAAAAWBMAAAAAAAABAAAAaQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWhMAAAAAAABaEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2795,
					1,
					"insert",
					{
						"characters": "rmn"
					},
					"AwAAAFgTAAAAAAAAWRMAAAAAAAAAAAAAWRMAAAAAAABaEwAAAAAAAAAAAABaEwAAAAAAAFsTAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWBMAAAAAAABYEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2796,
					1,
					"left_delete",
					null,
					"AQAAAFoTAAAAAAAAWhMAAAAAAAABAAAAbg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWxMAAAAAAABbEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2797,
					1,
					"insert",
					{
						"characters": "nn"
					},
					"AgAAAFoTAAAAAAAAWxMAAAAAAAAAAAAAWxMAAAAAAABcEwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWhMAAAAAAABaEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2798,
					3,
					"left_delete",
					null,
					"AwAAAFsTAAAAAAAAWxMAAAAAAAABAAAAbloTAAAAAAAAWhMAAAAAAAABAAAAblkTAAAAAAAAWRMAAAAAAAABAAAAbQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXBMAAAAAAABcEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2799,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAFkTAAAAAAAAWhMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWRMAAAAAAABZEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2800,
					1,
					"insert",
					{
						"characters": " 0:;"
					},
					"BAAAAFoTAAAAAAAAWxMAAAAAAAAAAAAAWxMAAAAAAABcEwAAAAAAAAAAAABcEwAAAAAAAF0TAAAAAAAAAAAAAF0TAAAAAAAAXhMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWhMAAAAAAABaEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2801,
					2,
					"left_delete",
					null,
					"AgAAAF0TAAAAAAAAXRMAAAAAAAABAAAAO1wTAAAAAAAAXBMAAAAAAAABAAAAOg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXhMAAAAAAABeEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2802,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAFwTAAAAAAAAXRMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXBMAAAAAAABcEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2806,
					2,
					"left_delete",
					null,
					"AgAAAF0TAAAAAAAAXRMAAAAAAAAGAAAAYnJlYWs7XBMAAAAAAABcEwAAAAAAAAEAAAA6",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXRMAAAAAAABjEwAAAAAAAP///////+9/"
				],
				[
					2807,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFwTAAAAAAAAXRMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXBMAAAAAAABcEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2829,
					1,
					"cut",
					null,
					"AQAAABUOAAAAAAAAFQ4AAAAAAAAqAAAAICBtaW5uZXRfd3Nfc3NsY2VydChjdHgsICZpbmZvLCBvcHRpb25zKTsK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFQ4AAAAAAAA/DgAAAAAAAAAAAAAAAPC/"
				],
				[
					2832,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAADAOAAAAAAAAMQ4AAAAAAAAAAAAAMQ4AAAAAAAAzDgAAAAAAAAAAAAAzDgAAAAAAADUOAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMA4AAAAAAAAwDgAAAAAAAAAAAAAAAHVA"
				],
				[
					2833,
					1,
					"paste",
					null,
					"AQAAADUOAAAAAAAAXw4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANQ4AAAAAAAA1DgAAAAAAAAAAAAAAAPC/"
				],
				[
					2834,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAF8OAAAAAAAAYA4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXw4AAAAAAABfDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2835,
					1,
					"left_delete",
					null,
					"AQAAAF8OAAAAAAAAXw4AAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYA4AAAAAAABgDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2838,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABOKAAAI2luY2x1ZGUgIm1pbm5ldC1jbGllbnQuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgPHF1aWNranMtbGliYy5oPgoKc3RhdGljIE1pbm5ldENhbGxiYWNrIGNsaWVudF9jYl9tZXNzYWdlLCBjbGllbnRfY2JfY29ubmVjdCwgY2xpZW50X2NiX2Nsb3NlLCBjbGllbnRfY2JfcG9uZywgY2xpZW50X2NiX2ZkOwoKc3RhdGljIGludCBjbGllbnRfY2FsbGJhY2soc3RydWN0IGx3cyogd3NpLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pOwoKVEhSRUFEX0xPQ0FMIHN0cnVjdCBsd3NfY29udGV4dCogbWlubmV0X2NsaWVudF9sd3MgPSAwOwpUSFJFQURfTE9DQUwgSlNDb250ZXh0KiBtaW5uZXRfY2xpZW50X2N0eCA9IDA7CgpzdGF0aWMgSlNWYWx1ZQpjbG9zZV9zdGF0dXMoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIGluLCBzaXplX3QgbGVuKSB7CiAgaWYobGVuID49IDIpCiAgICByZXR1cm4gSlNfTmV3SW50MzIoY3R4LCAoKHVpbnQ4X3QqKWluKVswXSA8PCA4IHwgKCh1aW50OF90KilpbilbMV0pOwogIHJldHVybiBKU19VTkRFRklORUQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmNsb3NlX3JlYXNvbihKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogaW4sIHNpemVfdCBsZW4pIHsKICBpZihsZW4gPiAyKQogICAgcmV0dXJuIEpTX05ld1N0cmluZ0xlbihjdHgsICZpblsyXSwgbGVuIC0gMik7CiAgcmV0dXJuIEpTX1VOREVGSU5FRDsKfQoKc3RhdGljIGludApjb25uZWN0X2NsaWVudChzdHJ1Y3QgbHdzX2NvbnRleHQqIGNvbnRleHQsIE1pbm5ldFVSTCogdXJsLCBCT09MIHNzbCwgQk9PTCByYXcsIHN0cnVjdCBsd3MqKiBwX3dzaSkgewogIHN0cnVjdCBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbyBpOwoKICBtZW1zZXQoJmksIDAsIHNpemVvZihpKSk7CgogIGkucHJvdG9jb2wgPSAid3MiOwogIGlmKHJhdykgewogICAgaS5tZXRob2QgPSAiUkFXIjsKICB9IGVsc2UgaWYoIXN0cm5jbXAodXJsLT5wcm90b2NvbCwgImh0dHAiLCA0KSkgewogICAgaS5hbHBuID0gImh0dHAvMS4xIjsKICAgIGkubWV0aG9kID0gIkdFVCI7CiAgICBpLnByb3RvY29sID0gImh0dHAiOwogIH0KCiAgaS5jb250ZXh0ID0gY29udGV4dDsKICBpLnBvcnQgPSB1cmwtPnBvcnQ7CiAgaS5hZGRyZXNzID0gdXJsLT5ob3N0OwogIGlmKHNzbCkgewogICAgaS5zc2xfY29ubmVjdGlvbiA9IExDQ1NDRl9VU0VfU1NMIHwgTENDU0NGX0gyX1FVSVJLX09WRVJGTE9XU19UWENSIHwgTENDU0NGX0gyX1FVSVJLX05HSFRUUDJfRU5EX1NUUkVBTTsKICAgIGkuc3NsX2Nvbm5lY3Rpb24gfD0gTENDU0NGX0FMTE9XX1NFTEZTSUdORUQ7CiAgICBpLnNzbF9jb25uZWN0aW9uIHw9IExDQ1NDRl9BTExPV19JTlNFQ1VSRTsKICB9CiAgaS5wYXRoID0gdXJsLT5sb2NhdGlvbjsKICBpLmhvc3QgPSBpLmFkZHJlc3M7CiAgaS5vcmlnaW4gPSBpLmFkZHJlc3M7CiAgaS5wd3NpID0gcF93c2k7CgogIHVybC0+aG9zdCA9IDA7CiAgdXJsLT5sb2NhdGlvbiA9IDA7CgogIHJldHVybiAhbHdzX2NsaWVudF9jb25uZWN0X3ZpYV9pbmZvKCZpKTsKfQoKc3RhdGljIGNvbnN0IHN0cnVjdCBsd3NfcHJvdG9jb2xzIGNsaWVudF9wcm90b2NvbHNbXSA9IHsKICAgIHsid3MiLCBjbGllbnRfY2FsbGJhY2ssIHNpemVvZihNaW5uZXRDbGllbnQpLCAwLCAwLCAwLCAwfSwKICAgIHsiaHR0cCIsIGNsaWVudF9jYWxsYmFjaywgc2l6ZW9mKE1pbm5ldENsaWVudCksIDAsIDAsIDAsIDB9LAogICAgezB9LAp9OwoKSlNWYWx1ZQptaW5uZXRfd3NfY2xpZW50KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QqIGFyZ3YpIHsKICBzdHJ1Y3QgbHdzX2NvbnRleHRfY3JlYXRpb25faW5mbyBpbmZvOwogIGludCBuID0gMDsKICBKU1ZhbHVlIHJldCA9IEpTX05VTEw7CiAgTWlubmV0VVJMIHVybDsKICBCT09MIHJhdyA9IEZBTFNFOwogIEpTVmFsdWUgb3B0aW9ucyA9IGFyZ3ZbMF07CiAgc3RydWN0IGx3cyogd3NpID0gMDsKCiAgU0VUTE9HKExMTF9JTkZPKQoKICBtZW1zZXQoJmluZm8sIDAsIHNpemVvZiBpbmZvKTsKICBpbmZvLm9wdGlvbnMgPSBMV1NfU0VSVkVSX09QVElPTl9ET19TU0xfR0xPQkFMX0lOSVQ7CiAgaW5mby5wb3J0ID0gQ09OVEVYVF9QT1JUX05PX0xJU1RFTjsKICBpbmZvLnByb3RvY29scyA9IGNsaWVudF9wcm90b2NvbHM7CgogIGlmKGFyZ2MgPj0gMikgewogICAgY29uc3QgY2hhciogdXJsU3RyID0gSlNfVG9DU3RyaW5nKGN0eCwgYXJndlswXSk7CiAgICB1cmwgPSB1cmxfcGFyc2UoY3R4LCB1cmxTdHIpOwogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCB1cmxTdHIpOwogICAgb3B0aW9ucyA9IGFyZ3ZbMV07CiAgfSBlbHNlIHsKICAgIGNvbnN0IGNoYXIgKmhvc3QsICpwYXRoID0gMDsKICAgIGludDMyX3QgcG9ydCA9IC0xLCBzc2wgPSAtMTsKCiAgICBKU1ZhbHVlIG9wdF9wb3J0ID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcHRpb25zLCAicG9ydCIpOwogICAgSlNWYWx1ZSBvcHRfaG9zdCA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb3B0aW9ucywgImhvc3QiKTsKICAgIEpTVmFsdWUgb3B0X3NzbCA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb3B0aW9ucywgInNzbCIpOwogICAgSlNWYWx1ZSBvcHRfcmF3ID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcHRpb25zLCAicmF3Iik7CiAgICBKU1ZhbHVlIG9wdF9wYXRoID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcHRpb25zLCAicGF0aCIpOwoKICAgIGhvc3QgPSBKU19Ub0NTdHJpbmcoY3R4LCBvcHRfaG9zdCk7CgogICAgaWYoSlNfSXNTdHJpbmcob3B0X3BhdGgpKQogICAgICBwYXRoID0gSlNfVG9DU3RyaW5nKGN0eCwgb3B0X3BhdGgpOwoKICAgIGlmKEpTX0lzTnVtYmVyKG9wdF9wb3J0KSkKICAgICAgSlNfVG9JbnQzMihjdHgsICZwb3J0LCBvcHRfcG9ydCk7CgogICAgc3NsID0gSlNfVG9Cb29sKGN0eCwgb3B0X3NzbCk7CiAgICByYXcgPSBKU19Ub0Jvb2woY3R4LCBvcHRfcmF3KTsKCiAgICB1cmwgPSB1cmxfaW5pdChjdHgsIHNzbCA/ICJ3c3MiIDogIndzIiwgaG9zdCwgcG9ydCwgcGF0aCk7CgogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBob3N0KTsKICAgIGlmKHBhdGgpCiAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcGF0aCk7CgogICAgSlNfRnJlZVZhbHVlKGN0eCwgb3B0X3BhdGgpOwogICAgSlNfRnJlZVZhbHVlKGN0eCwgb3B0X3NzbCk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCBvcHRfcmF3KTsKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIG9wdF9ob3N0KTsKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIG9wdF9wb3J0KTsKICB9CgogIEdFVENCUFJPUChvcHRpb25zLCAib25Qb25nIiwgY2xpZW50X2NiX3BvbmcpCiAgR0VUQ0JQUk9QKG9wdGlvbnMsICJvbkNsb3NlIiwgY2xpZW50X2NiX2Nsb3NlKQogIEdFVENCUFJPUChvcHRpb25zLCAib25Db25uZWN0IiwgY2xpZW50X2NiX2Nvbm5lY3QpCiAgR0VUQ0JQUk9QKG9wdGlvbnMsICJvbk1lc3NhZ2UiLCBjbGllbnRfY2JfbWVzc2FnZSkKICBHRVRDQlBST1Aob3B0aW9ucywgIm9uRmQiLCBjbGllbnRfY2JfZmQpCgoKICBpZighbWlubmV0X2NsaWVudF9sd3MpIHsKICAgICAgbWlubmV0X3dzX3NzbGNlcnQoY3R4LCAmaW5mbywgb3B0aW9ucyk7CgogICAgbWlubmV0X2NsaWVudF9sd3MgPSBsd3NfY3JlYXRlX2NvbnRleHQoJmluZm8pOwogICAgaWYoIW1pbm5ldF9jbGllbnRfbHdzKSB7CiAgICAgIGx3c2xfZXJyKCJMaWJ3ZWJzb2NrZXRzIGluaXQgZmFpbGVkXG4iKTsKICAgICAgcmV0dXJuIEpTX1Rocm93SW50ZXJuYWxFcnJvcihjdHgsICJMaWJ3ZWJzb2NrZXRzIGluaXQgZmFpbGVkIik7CiAgICB9CiAgfQoKICBtaW5uZXRfY2xpZW50X2N0eCA9IGN0eDsKCiAgY29ubmVjdF9jbGllbnQobWlubmV0X2NsaWVudF9sd3MsICZ1cmwsICFzdHJjbXAodXJsLnByb3RvY29sLCAid3NzIikgfHwgIXN0cmNtcCh1cmwucHJvdG9jb2wsICJodHRwcyIpLCByYXcsICZ3c2kpOwoKICBtaW5uZXRfZXhjZXB0aW9uID0gRkFMU0U7CiAgd2hpbGUobiA+PSAwKSB7CiAgICBpZihtaW5uZXRfZXhjZXB0aW9uKSB7CiAgICAgIHJldCA9IEpTX0VYQ0VQVElPTjsKICAgICAgYnJlYWs7CiAgICB9CiAgICBpZih3c2kpCiAgICAgIGJyZWFrOwogICAganNfc3RkX2xvb3AoY3R4KTsKCiAgICAvLyAgbHdzX3NlcnZpY2UobWlubmV0X2NsaWVudF9sd3MsIDUwMCk7CiAgfQogIGlmKHdzaSkgewogICAgcmV0ID0gbWlubmV0X3dzX29iamVjdChjdHgsIHdzaSk7CiAgICBKU1ZhbHVlIG9wdF9iaW5hcnkgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9wdGlvbnMsICJiaW5hcnkiKTsKICAgIGlmKEpTX0lzQm9vbChvcHRfYmluYXJ5KSkgewogICAgICBNaW5uZXRXZWJzb2NrZXQqIHdzID0gbWlubmV0X3dzX2RhdGEyKGN0eCwgcmV0KTsKICAgICAgd3MtPmJpbmFyeSA9IEpTX1RvQm9vbChjdHgsIG9wdF9iaW5hcnkpOwogICAgfQogIH0KICB1cmxfZnJlZShjdHgsICZ1cmwpOwogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBpbnQKY2xpZW50X2NhbGxiYWNrKHN0cnVjdCBsd3MqIHdzaSwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucyByZWFzb24sIHZvaWQqIHVzZXIsIHZvaWQqIGluLCBzaXplX3QgbGVuKSB7CiAgTWlubmV0Q2xpZW50KiBjbGkgPSB1c2VyOwoKICBsd3NsX2RlYnVnKCJjbGllbnQgIiBGRygiJWQiKSAiJS0yNXMiIE5DICIgaXNfc3NsPSVpIGluPSclLipzJ1xuIiwgMjIgKyAocmVhc29uICogMiksIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2lzX3NzbCh3c2kpLCAoaW50KU1JTihsZW4sIDMyKSwgKGNoYXIqKWluKTsKCiAgc3dpdGNoKHJlYXNvbikgewogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX0NMSUVOVF9WRVJJRllfQ0VSVFM6ewoKICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19DTElFTlRfSFRUUF9CSU5EX1BST1RPQ09MOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfQ0xJRU5UX0JJTkRfUFJPVE9DT0w6CiAgICBjYXNlIExXU19DQUxMQkFDS19SQVdfU0tUX0JJTkRfUFJPVE9DT0w6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19DTElFTlRfSFRUUF9EUk9QX1BST1RPQ09MOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfQ0xJRU5UX0RST1BfUFJPVE9DT0w6CiAgICBjYXNlIExXU19DQUxMQkFDS19SQVdfU0tUX0RST1BfUFJPVE9DT0w6IHsKCiAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfY2xpZW50X2N0eCwgY2xpLT53c19vYmopOwogICAgICByZXR1cm4gMDsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19DTElFTlRfRklMVEVSX1BSRV9FU1RBQkxJU0g6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTElFTlRfQVBQRU5EX0hBTkRTSEFLRV9IRUFERVI6CiAgICBjYXNlIExXU19DQUxMQkFDS19DT05ORUNUSU5HOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUFJPVE9DT0xfSU5JVDogewogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9DUkVBVEU6CiAgICBjYXNlIExXU19DQUxMQkFDS19TRVJWRVJfTkVXX0NMSUVOVF9JTlNUQU5USUFURUQ6IHsKICAgICAgYnVmZmVyX3plcm8oJmNsaS0+Ym9keSk7CiAgICAgIGNsaS0+d3Nfb2JqID0gbWlubmV0X3dzX29iamVjdChtaW5uZXRfY2xpZW50X2N0eCwgd3NpKTsKCiAgICAgIHJldHVybiAwOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfTE9DS19QT0xMOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfVU5MT0NLX1BPTEw6IHsKICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19DTE9TRURfQ0xJRU5UX0hUVFA6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTElFTlRfQ0xPU0VEOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkFXX0NMT1NFOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NfUEVFUl9JTklUSUFURURfQ0xPU0U6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTElFTlRfQ09OTkVDVElPTl9FUlJPUjogewogICAgICBKU0NvbnRleHQqIGN0eCA9IGNsaWVudF9jYl9jbG9zZS5jdHg7CiAgICAgIGlmKGN0eCkgewogICAgICAgIEpTVmFsdWVDb25zdCBjYl9hcmd2W10gPSB7CiAgICAgICAgICAgIG1pbm5ldF93c19vYmplY3QoY3R4LCB3c2kpLAogICAgICAgICAgICBjbG9zZV9zdGF0dXMoY3R4LCBpbiwgbGVuKSwKICAgICAgICAgICAgY2xvc2VfcmVhc29uKGN0eCwgaW4sIGxlbiksCiAgICAgICAgfTsKICAgICAgICBtaW5uZXRfZW1pdCgmY2xpZW50X2NiX2Nsb3NlLCAzLCBjYl9hcmd2KTsKICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCBjYl9hcmd2WzBdKTsKICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCBjYl9hcmd2WzFdKTsKICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCBjYl9hcmd2WzJdKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0VTVEFCTElTSEVEX0NMSUVOVF9IVFRQOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRVNUQUJMSVNIRUQ6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTElFTlRfRVNUQUJMSVNIRUQ6CiAgICBjYXNlIExXU19DQUxMQkFDS19SQVdfQ09OTkVDVEVEOiB7CiAgICAgIGx3c2xfdXNlcigiY2xpZW50ICAgIiBGR0MoMTcxLCAiJS0yNXMiKSAiIGZkPSVpLCBpbj0lLipzXG4iLCBsd3NfY2FsbGJhY2tfbmFtZShyZWFzb24pICsgMTMsIGx3c19nZXRfc29ja2V0X2ZkKGx3c19nZXRfbmV0d29ya193c2kod3NpKSksIChpbnQpbGVuLCAoY2hhciopaW4pOwoKICAgICAgaWYoY2xpZW50X2NiX2Nvbm5lY3QuY3R4KSB7CiAgICAgICAgSlNWYWx1ZSB3c19vYmogPSBtaW5uZXRfd3Nfb2JqZWN0KGNsaWVudF9jYl9jb25uZWN0LmN0eCwgd3NpKTsKICAgICAgICBtaW5uZXRfZW1pdCgmY2xpZW50X2NiX2Nvbm5lY3QsIDEsICZ3c19vYmopOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9XUklURUFCTEU6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTElFTlRfSFRUUF9XUklURUFCTEU6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTElFTlRfV1JJVEVBQkxFOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkFXX1dSSVRFQUJMRTogewogICAgICAvLyBsd3NfY2FsbGJhY2tfb25fd3JpdGFibGUod3NpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRV9DTElFTlRfSFRUUDogewogICAgICBjaGFyIGJ1ZmZlclsxMDI0ICsgTFdTX1BSRV07CiAgICAgIGNoYXIqIGJ1ZiA9IGJ1ZmZlciArIExXU19QUkU7CiAgICAgIGludCBsZW4gPSBzaXplb2YoYnVmZmVyKSAtIExXU19QUkU7CiAgICAgIGlmKGx3c19odHRwX2NsaWVudF9yZWFkKHdzaSwgJmJ1ZiwgJmxlbikpCiAgICAgICAgcmV0dXJuIC0xOwogICAgICByZXR1cm4gMDsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFX0NMSUVOVF9IVFRQX1JFQUQ6IHsKICAgICAgYnVmZmVyX2FwcGVuZCgmY2xpLT5ib2R5LCBpbiwgbGVuLCBtaW5uZXRfY2xpZW50X2N0eCk7CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0NPTVBMRVRFRF9DTElFTlRfSFRUUDogewoKICAgICAgaW4gPSBjbGktPmJvZHkucmVhZDsKICAgICAgbGVuID0gYnVmZmVyX1JFTUFJTigmY2xpLT5ib2R5KTsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX1JFQ0VJVkU6CiAgICBjYXNlIExXU19DQUxMQkFDS19DTElFTlRfUkVDRUlWRToKICAgIGNhc2UgTFdTX0NBTExCQUNLX1JBV19SWDogewogICAgICBNaW5uZXRXZWJzb2NrZXQqIHdzID0gbWlubmV0X3dzX2RhdGEoY2xpLT53c19vYmopOwoKICAgICAgaWYoY2xpZW50X2NiX21lc3NhZ2UuY3R4KSB7CiAgICAgICAgSlNWYWx1ZSB3c19vYmogPSBtaW5uZXRfd3Nfb2JqZWN0KGNsaWVudF9jYl9tZXNzYWdlLmN0eCwgd3NpKTsKICAgICAgICBKU1ZhbHVlIG1zZyA9IHdzLT5iaW5hcnkgPyBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY2xpZW50X2NiX21lc3NhZ2UuY3R4LCBpbiwgbGVuKSA6IEpTX05ld1N0cmluZ0xlbihjbGllbnRfY2JfbWVzc2FnZS5jdHgsIGluLCBsZW4pOwogICAgICAgIEpTVmFsdWUgY2JfYXJndlsyXSA9IHt3c19vYmosIG1zZ307CiAgICAgICAgbWlubmV0X2VtaXQoJmNsaWVudF9jYl9tZXNzYWdlLCAyLCBjYl9hcmd2KTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMSUVOVF9SRUNFSVZFX1BPTkc6IHsKICAgICAgaWYoY2xpZW50X2NiX3BvbmcuY3R4KSB7CiAgICAgICAgSlNWYWx1ZSB3c19vYmogPSBtaW5uZXRfd3Nfb2JqZWN0KGNsaWVudF9jYl9wb25nLmN0eCwgd3NpKTsKICAgICAgICBKU1ZhbHVlIGRhdGEgPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY2xpZW50X2NiX3BvbmcuY3R4LCBpbiwgbGVuKTsKICAgICAgICBKU1ZhbHVlIGNiX2FyZ3ZbMl0gPSB7d3Nfb2JqLCBkYXRhfTsKICAgICAgICBtaW5uZXRfZW1pdCgmY2xpZW50X2NiX3BvbmcsIDIsIGNiX2FyZ3YpOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfQUREX1BPTExfRkQ6IHsKICAgICAgc3RydWN0IGx3c19wb2xsYXJncyogYXJncyA9IGluOwogICAgICBpZihjbGllbnRfY2JfZmQuY3R4KSB7CiAgICAgICAgSlNWYWx1ZSBhcmd2WzNdID0ge0pTX05ld0ludDMyKGNsaWVudF9jYl9mZC5jdHgsIGFyZ3MtPmZkKX07CiAgICAgICAgbWlubmV0X2hhbmRsZXJzKGNsaWVudF9jYl9mZC5jdHgsIHdzaSwgYXJncywgJmFyZ3ZbMV0pOwoKICAgICAgICBtaW5uZXRfZW1pdCgmY2xpZW50X2NiX2ZkLCAzLCBhcmd2KTsKICAgICAgICBKU19GcmVlVmFsdWUoY2xpZW50X2NiX2ZkLmN0eCwgYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGNsaWVudF9jYl9mZC5jdHgsIGFyZ3ZbMV0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShjbGllbnRfY2JfZmQuY3R4LCBhcmd2WzJdKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0RFTF9QT0xMX0ZEOiB7CiAgICAgIHN0cnVjdCBsd3NfcG9sbGFyZ3MqIGFyZ3MgPSBpbjsKICAgICAgaWYoY2xpZW50X2NiX2ZkLmN0eCkgewogICAgICAgIEpTVmFsdWUgYXJndlszXSA9IHsKICAgICAgICAgICAgSlNfTmV3SW50MzIoY2xpZW50X2NiX2ZkLmN0eCwgYXJncy0+ZmQpLAogICAgICAgIH07CiAgICAgICAgbWlubmV0X2hhbmRsZXJzKGNsaWVudF9jYl9mZC5jdHgsIHdzaSwgYXJncywgJmFyZ3ZbMV0pOwogICAgICAgIG1pbm5ldF9lbWl0KCZjbGllbnRfY2JfZmQsIDMsIGFyZ3YpOwogICAgICAgIEpTX0ZyZWVWYWx1ZShjbGllbnRfY2JfZmQuY3R4LCBhcmd2WzBdKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0NIQU5HRV9NT0RFX1BPTExfRkQ6IHsKICAgICAgc3RydWN0IGx3c19wb2xsYXJncyogYXJncyA9IGluOwoKICAgICAgaWYoY2xpZW50X2NiX2ZkLmN0eCAmJiBhcmdzLT5ldmVudHMgIT0gYXJncy0+cHJldl9ldmVudHMpIHsKICAgICAgICBKU1ZhbHVlIGFyZ3ZbM10gPSB7SlNfTmV3SW50MzIoY2xpZW50X2NiX2ZkLmN0eCwgYXJncy0+ZmQpfTsKICAgICAgICBtaW5uZXRfaGFuZGxlcnMoY2xpZW50X2NiX2ZkLmN0eCwgd3NpLCBhcmdzLCAmYXJndlsxXSk7CgogICAgICAgIG1pbm5ldF9lbWl0KCZjbGllbnRfY2JfZmQsIDMsIGFyZ3YpOwogICAgICAgIEpTX0ZyZWVWYWx1ZShjbGllbnRfY2JfZmQuY3R4LCBhcmd2WzBdKTsKICAgICAgICBKU19GcmVlVmFsdWUoY2xpZW50X2NiX2ZkLmN0eCwgYXJndlsxXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGNsaWVudF9jYl9mZC5jdHgsIGFyZ3ZbMl0pOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGRlZmF1bHQ6IHsKICAgICAgLy8gbWlubmV0X2x3c191bmhhbmRsZWQocmVhc29uKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICBpZihyZWFzb24gPCBMV1NfQ0FMTEJBQ0tfQUREX1BPTExfRkQgfHwgcmVhc29uID4gTFdTX0NBTExCQUNLX1VOTE9DS19QT0xMKQogICAgbHdzbF91c2VyKCJjbGllbnQgICUtMjVzIGZkPSVpLCBpbj0nJS4qcydcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywgbHdzX2dldF9zb2NrZXRfZmQobHdzX2dldF9uZXR3b3JrX3dzaSh3c2kpKSwgKGludClsZW4sIChjaGFyKilpbik7CgogIHJldHVybiAwOwogIC8vICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwp9CgAAAAAAAAAATCgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXw4AAAAAAABfDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2856,
					1,
					"insert",
					{
						"characters": "buffer_free"
					},
					"CwAAAJsUAAAAAAAAnBQAAAAAAAAAAAAAnBQAAAAAAACdFAAAAAAAAAAAAACdFAAAAAAAAJ4UAAAAAAAAAAAAAJ4UAAAAAAAAnxQAAAAAAAAAAAAAnxQAAAAAAACgFAAAAAAAAAAAAACgFAAAAAAAAKEUAAAAAAAAAAAAAKEUAAAAAAAAohQAAAAAAAAAAAAAohQAAAAAAACjFAAAAAAAAAAAAACjFAAAAAAAAKQUAAAAAAAAAAAAAKQUAAAAAAAApRQAAAAAAAAAAAAApRQAAAAAAACmFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmxQAAAAAAACbFAAAAAAAAAAAAAAAAPC/"
				],
				[
					2857,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKYUAAAAAAAAqBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAphQAAAAAAACmFAAAAAAAAAAAAAAAAPC/"
				],
				[
					2858,
					1,
					"insert",
					{
						"characters": "&cli->"
					},
					"BgAAAKcUAAAAAAAAqBQAAAAAAAAAAAAAqBQAAAAAAACpFAAAAAAAAAAAAACpFAAAAAAAAKoUAAAAAAAAAAAAAKoUAAAAAAAAqxQAAAAAAAAAAAAAqxQAAAAAAACsFAAAAAAAAAAAAACsFAAAAAAAAK0UAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApxQAAAAAAACnFAAAAAAAAAAAAAAAAPC/"
				],
				[
					2859,
					1,
					"insert",
					{
						"characters": "body,"
					},
					"BQAAAK0UAAAAAAAArhQAAAAAAAAAAAAArhQAAAAAAACvFAAAAAAAAAAAAACvFAAAAAAAALAUAAAAAAAAAAAAALAUAAAAAAAAsRQAAAAAAAAAAAAAsRQAAAAAAACyFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArRQAAAAAAACtFAAAAAAAAAAAAAAAAPC/"
				],
				[
					2860,
					1,
					"insert",
					{
						"characters": " ctx"
					},
					"BAAAALIUAAAAAAAAsxQAAAAAAAAAAAAAsxQAAAAAAAC0FAAAAAAAAAAAAAC0FAAAAAAAALUUAAAAAAAAAAAAALUUAAAAAAAAthQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAshQAAAAAAACyFAAAAAAAAAAAAAAAAPC/"
				],
				[
					2862,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALcUAAAAAAAAuBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtxQAAAAAAAC3FAAAAAAAAAAAAAAAAPC/"
				],
				[
					2869,
					1,
					"insert",
					{
						"characters": "JS_GetRuntim"
					},
					"DQAAALMUAAAAAAAAtBQAAAAAAAAAAAAAtBQAAAAAAAC0FAAAAAAAAAMAAABjdHi0FAAAAAAAALUUAAAAAAAAAAAAALUUAAAAAAAAthQAAAAAAAAAAAAAthQAAAAAAAC3FAAAAAAAAAAAAAC3FAAAAAAAALgUAAAAAAAAAAAAALgUAAAAAAAAuRQAAAAAAAAAAAAAuRQAAAAAAAC6FAAAAAAAAAAAAAC6FAAAAAAAALsUAAAAAAAAAAAAALsUAAAAAAAAvBQAAAAAAAAAAAAAvBQAAAAAAAC9FAAAAAAAAAAAAAC9FAAAAAAAAL4UAAAAAAAAAAAAAL4UAAAAAAAAvxQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsxQAAAAAAAC2FAAAAAAAAAAAAAAAAPC/"
				],
				[
					2870,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAL8UAAAAAAAAwBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvxQAAAAAAAC/FAAAAAAAAAAAAAAAAPC/"
				],
				[
					2871,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMAUAAAAAAAAwhQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwBQAAAAAAADAFAAAAAAAAAAAAAAAAPC/"
				],
				[
					2872,
					1,
					"insert",
					{
						"characters": "ctx"
					},
					"AwAAAMEUAAAAAAAAwhQAAAAAAAAAAAAAwhQAAAAAAADDFAAAAAAAAAAAAADDFAAAAAAAAMQUAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwRQAAAAAAADBFAAAAAAAAAAAAAAAAPC/"
				],
				[
					2893,
					1,
					"paste",
					null,
					"AgAAAMEUAAAAAAAA0hQAAAAAAAAAAAAA0hQAAAAAAADSFAAAAAAAAAMAAABjdHg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwRQAAAAAAADEFAAAAAAAAAAAAAAAAPC/"
				],
				[
					2896,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0hQAAAAAAADSFAAAAAAAAAAAAAAAAPC/"
				],
				[
					2914,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPAhAAAAAAAA8SEAAAAAAAAAAAAA8SEAAAAAAADxIQAAAAAAAKUBAAB7CiAgICAgIHN0cnVjdCBsd3NfcG9sbGFyZ3MqIGFyZ3MgPSBpbjsKICAgICAgaWYoY2xpZW50X2NiX2ZkLmN0eCkgewogICAgICAgIEpTVmFsdWUgYXJndlszXSA9IHtKU19OZXdJbnQzMihjbGllbnRfY2JfZmQuY3R4LCBhcmdzLT5mZCl9OwogICAgICAgIG1pbm5ldF9oYW5kbGVycyhjbGllbnRfY2JfZmQuY3R4LCB3c2ksIGFyZ3MsICZhcmd2WzFdKTsKCiAgICAgICAgbWlubmV0X2VtaXQoJmNsaWVudF9jYl9mZCwgMywgYXJndik7CiAgICAgICAgSlNfRnJlZVZhbHVlKGNsaWVudF9jYl9mZC5jdHgsIGFyZ3ZbMF0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShjbGllbnRfY2JfZmQuY3R4LCBhcmd2WzFdKTsKICAgICAgICBKU19GcmVlVmFsdWUoY2xpZW50X2NiX2ZkLmN0eCwgYXJndlsyXSk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlSMAAAAAAADwIQAAAAAAAAAAAAAAAPC/"
				],
				[
					2917,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABQiAAAAAAAAFSIAAAAAAAAAAAAAFSIAAAAAAAAVIgAAAAAAAFoBAAAgewogICAgICBzdHJ1Y3QgbHdzX3BvbGxhcmdzKiBhcmdzID0gaW47CiAgICAgIGlmKGNsaWVudF9jYl9mZC5jdHgpIHsKICAgICAgICBKU1ZhbHVlIGFyZ3ZbM10gPSB7CiAgICAgICAgICAgIEpTX05ld0ludDMyKGNsaWVudF9jYl9mZC5jdHgsIGFyZ3MtPmZkKSwKICAgICAgICB9OwogICAgICAgIG1pbm5ldF9oYW5kbGVycyhjbGllbnRfY2JfZmQuY3R4LCB3c2ksIGFyZ3MsICZhcmd2WzFdKTsKICAgICAgICBtaW5uZXRfZW1pdCgmY2xpZW50X2NiX2ZkLCAzLCBhcmd2KTsKICAgICAgICBKU19GcmVlVmFsdWUoY2xpZW50X2NiX2ZkLmN0eCwgYXJndlswXSk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFCIAAAAAAABuIwAAAAAAAAAAAAAAAPC/"
				],
				[
					2925,
					1,
					"paste",
					null,
					"AgAAAM8hAAAAAAAAziIAAAAAAAAAAAAAziIAAAAAAADOIgAAAAAAAD0CAAAgIGNhc2UgTFdTX0NBTExCQUNLX0FERF9QT0xMX0ZEOiAgCiAgICBjYXNlIExXU19DQUxMQkFDS19ERUxfUE9MTF9GRDogCiAgICBjYXNlIExXU19DQUxMQkFDS19DSEFOR0VfTU9ERV9QT0xMX0ZEOiB7CiAgICAgIHN0cnVjdCBsd3NfcG9sbGFyZ3MqIGFyZ3MgPSBpbjsKCiAgICAgIGlmKGNsaWVudF9jYl9mZC5jdHggJiYgYXJncy0+ZXZlbnRzICE9IGFyZ3MtPnByZXZfZXZlbnRzKSB7CiAgICAgICAgSlNWYWx1ZSBhcmd2WzNdID0ge0pTX05ld0ludDMyKGNsaWVudF9jYl9mZC5jdHgsIGFyZ3MtPmZkKX07CiAgICAgICAgbWlubmV0X2hhbmRsZXJzKGNsaWVudF9jYl9mZC5jdHgsIHdzaSwgYXJncywgJmFyZ3ZbMV0pOwoKICAgICAgICBtaW5uZXRfZW1pdCgmY2xpZW50X2NiX2ZkLCAzLCBhcmd2KTsKICAgICAgICBKU19GcmVlVmFsdWUoY2xpZW50X2NiX2ZkLmN0eCwgYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGNsaWVudF9jYl9mZC5jdHgsIGFyZ3ZbMV0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShjbGllbnRfY2JfZmQuY3R4LCBhcmd2WzJdKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzyEAAAAAAAAMJAAAAAAAAAAAAAAAAPC/"
				],
				[
					2936,
					1,
					"paste",
					null,
					"AgAAAK4iAAAAAAAAuiIAAAAAAAAAAAAAuiIAAAAAAAC6IgAAAAAAAA0AAABtaW5uZXRfc2VydmVy",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAriIAAAAAAAC7IgAAAAAAAAAAAAAAAPC/"
				],
				[
					2937,
					6,
					"right_delete",
					null,
					"BgAAALoiAAAAAAAAuiIAAAAAAAABAAAALroiAAAAAAAAuiIAAAAAAAABAAAAY7oiAAAAAAAAuiIAAAAAAAABAAAAYroiAAAAAAAAuiIAAAAAAAABAAAAX7oiAAAAAAAAuiIAAAAAAAABAAAAZroiAAAAAAAAuiIAAAAAAAABAAAAZA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuiIAAAAAAAC6IgAAAAAAAAAAAAAAAPC/"
				],
				[
					2953,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAALwWAAAAAAAAvRYAAAAAAAAAAAAAvRYAAAAAAAC9FgAAAAAAAFwAAAAKICAgIGNhc2UgTFdTX0NBTExCQUNLX0xPQ0tfUE9MTDoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1VOTE9DS19QT0xMOiB7CiAgICAgIHJldHVybiAwOwogICAgfQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvBYAAAAAAAAYFwAAAAAAAAAAAAAAAPC/"
				],
				[
					2983,
					1,
					"cut",
					null,
					"AQAAADUGAAAAAAAANQYAAAAAAADGAAAACnN0YXRpYyBjb25zdCBzdHJ1Y3QgbHdzX3Byb3RvY29scyBjbGllbnRfcHJvdG9jb2xzW10gPSB7CiAgICB7IndzIiwgY2xpZW50X2NhbGxiYWNrLCBzaXplb2YoTWlubmV0Q2xpZW50KSwgMCwgMCwgMCwgMH0sCiAgICB7Imh0dHAiLCBjbGllbnRfY2FsbGJhY2ssIHNpemVvZihNaW5uZXRDbGllbnQpLCAwLCAwLCAwLCAwfSwKICAgIHswfSwKfTsK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANQYAAAAAAAD7BgAAAAAAAAAAAAAAAPC/"
				],
				[
					2993,
					1,
					"paste",
					null,
					"AQAAAJkBAAAAAAAAXwIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmQEAAAAAAACZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					3038,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdQQAAAAAAAB2BAAAAAAAAAAAAAAAAPC/"
				],
				[
					3053,
					1,
					"paste",
					null,
					"AQAAAHEIAAAAAAAAuQgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcQgAAAAAAABxCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3058,
					1,
					"paste",
					null,
					"AQAAAL8DAAAAAAAALQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvwMAAAAAAAC/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					3061,
					1,
					"right_delete",
					null,
					"AQAAAMUDAAAAAAAAxQMAAAAAAAAJAAAAbWlubmV0X3dz",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzgMAAAAAAADFAwAAAAAAAAAAAAAAAPC/"
				],
				[
					3064,
					1,
					"insert",
					{
						"characters": "_client"
					},
					"BwAAAM0DAAAAAAAAzgMAAAAAAAAAAAAAzgMAAAAAAADPAwAAAAAAAAAAAADPAwAAAAAAANADAAAAAAAAAAAAANADAAAAAAAA0QMAAAAAAAAAAAAA0QMAAAAAAADSAwAAAAAAAAAAAADSAwAAAAAAANMDAAAAAAAAAAAAANMDAAAAAAAA1AMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzQMAAAAAAADNAwAAAAAAAAAAAAAAAPC/"
				],
				[
					3066,
					1,
					"right_delete",
					null,
					"AQAAAMUDAAAAAAAAxQMAAAAAAAABAAAAXw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxQMAAAAAAADFAwAAAAAAAAAAAAAAAAAA"
				],
				[
					3075,
					1,
					"",
					null,
					"AQAAACUFAAAAAAAAMgUAAAAAAAAGAAAALT5zc2xf",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJQUAAAAAAAArBQAAAAAAAAAAAAAAAPC/"
				],
				[
					3076,
					1,
					"",
					null,
					"AQAAAJIFAAAAAAAAnwUAAAAAAAAGAAAALT5zc2xf",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkgUAAAAAAACYBQAAAAAAAAAAAAAAAPC/"
				],
				[
					3077,
					1,
					"",
					null,
					"AQAAAAQGAAAAAAAAEQYAAAAAAAAGAAAALT5zc2xf",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABAYAAAAAAAAKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					3082,
					1,
					"insert",
					{
						"characters": "static"
					},
					"BgAAAMADAAAAAAAAwQMAAAAAAAAAAAAAwQMAAAAAAADCAwAAAAAAAAAAAADCAwAAAAAAAMMDAAAAAAAAAAAAAMMDAAAAAAAAxAMAAAAAAAAAAAAAxAMAAAAAAADFAwAAAAAAAAAAAADFAwAAAAAAAMYDAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwAMAAAAAAADAAwAAAAAAAAAAAAAAAPC/"
				],
				[
					3083,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMYDAAAAAAAAxwMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxgMAAAAAAADGAwAAAAAAAAAAAAAAAPC/"
				],
				[
					3086,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEYGAAAAAAAARwYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARgYAAAAAAABGBgAAAAAAAAAAAAAAAPC/"
				],
				[
					3096,
					1,
					"insert",
					{
						"characters": "sslcert_client"
					},
					"DwAAAAQRAAAAAAAABREAAAAAAAAAAAAABREAAAAAAAAFEQAAAAAAABEAAABtaW5uZXRfd3Nfc3NsY2VydAURAAAAAAAABhEAAAAAAAAAAAAABhEAAAAAAAAHEQAAAAAAAAAAAAAHEQAAAAAAAAgRAAAAAAAAAAAAAAgRAAAAAAAACREAAAAAAAAAAAAACREAAAAAAAAKEQAAAAAAAAAAAAAKEQAAAAAAAAsRAAAAAAAAAAAAAAsRAAAAAAAADBEAAAAAAAAAAAAADBEAAAAAAAANEQAAAAAAAAAAAAANEQAAAAAAAA4RAAAAAAAAAAAAAA4RAAAAAAAADxEAAAAAAAAAAAAADxEAAAAAAAAQEQAAAAAAAAAAAAAQEQAAAAAAABERAAAAAAAAAAAAABERAAAAAAAAEhEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABBEAAAAAAAAVEQAAAAAAAAAAAAAAAPC/"
				],
				[
					3128,
					1,
					"left_delete",
					null,
					"AQAAAPQkAAAAAAAA9CQAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9SQAAAAAAAD1JAAAAAAAAAAAAAAAAPC/"
				],
				[
					3245,
					1,
					"insert",
					{
						"characters": " ew"
					},
					"AwAAAGkUAAAAAAAAahQAAAAAAAAAAAAAahQAAAAAAABrFAAAAAAAAAAAAABrFAAAAAAAAGwUAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaRQAAAAAAABpFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3246,
					1,
					"left_delete",
					null,
					"AQAAAGsUAAAAAAAAaxQAAAAAAAABAAAAdw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbBQAAAAAAABsFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3247,
					1,
					"insert",
					{
						"characters": " lse"
					},
					"BAAAAGsUAAAAAAAAbBQAAAAAAAAAAAAAbBQAAAAAAABtFAAAAAAAAAAAAABtFAAAAAAAAG4UAAAAAAAAAAAAAG4UAAAAAAAAbxQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaxQAAAAAAABrFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3248,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG8UAAAAAAAAcBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbxQAAAAAAABvFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3249,
					5,
					"left_delete",
					null,
					"BQAAAG8UAAAAAAAAbxQAAAAAAAABAAAAIG4UAAAAAAAAbhQAAAAAAAABAAAAZW0UAAAAAAAAbRQAAAAAAAABAAAAc2wUAAAAAAAAbBQAAAAAAAABAAAAbGsUAAAAAAAAaxQAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcBQAAAAAAABwFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3250,
					1,
					"insert",
					{
						"characters": "lse"
					},
					"AwAAAGsUAAAAAAAAbBQAAAAAAAAAAAAAbBQAAAAAAABtFAAAAAAAAAAAAABtFAAAAAAAAG4UAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaxQAAAAAAABrFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3251,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG4UAAAAAAAAbxQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbhQAAAAAAABuFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3252,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAG8UAAAAAAAAcRQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbxQAAAAAAABvFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3253,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAHAUAAAAAAAAcRQAAAAAAAAAAAAAcRQAAAAAAABzFAAAAAAAAAAAAABzFAAAAAAAAHQUAAAAAAAAAAAAAHQUAAAAAAAAdhQAAAAAAAAAAAAAcRQAAAAAAABxFAAAAAAAAAIAAAAgIHEUAAAAAAAAdRQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcBQAAAAAAABwFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3254,
					1,
					"insert",
					{
						"characters": "ret=JS_Thro"
					},
					"CwAAAHUUAAAAAAAAdhQAAAAAAAAAAAAAdhQAAAAAAAB3FAAAAAAAAAAAAAB3FAAAAAAAAHgUAAAAAAAAAAAAAHgUAAAAAAAAeRQAAAAAAAAAAAAAeRQAAAAAAAB6FAAAAAAAAAAAAAB6FAAAAAAAAHsUAAAAAAAAAAAAAHsUAAAAAAAAfBQAAAAAAAAAAAAAfBQAAAAAAAB9FAAAAAAAAAAAAAB9FAAAAAAAAH4UAAAAAAAAAAAAAH4UAAAAAAAAfxQAAAAAAAAAAAAAfxQAAAAAAACAFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdRQAAAAAAAB1FAAAAAAAAAAAAAAAAPC/"
				],
				[
					3255,
					1,
					"insert_completion",
					{
						"completion": "JS_ThrowInternalError",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "JS_ThrowInternalError"
					},
					"AgAAAHkUAAAAAAAAeRQAAAAAAAAHAAAASlNfVGhyb3kUAAAAAAAAjhQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgBQAAAAAAACAFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3256,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAI4UAAAAAAAAkBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjhQAAAAAAACOFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3257,
					1,
					"insert",
					{
						"characters": "ctx"
					},
					"AwAAAI8UAAAAAAAAkBQAAAAAAAAAAAAAkBQAAAAAAACRFAAAAAAAAAAAAACRFAAAAAAAAJIUAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjxQAAAAAAACPFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3258,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJIUAAAAAAAAkxQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkhQAAAAAAACSFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3259,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAJMUAAAAAAAAlRQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkxQAAAAAAACTFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3260,
					2,
					"left_delete",
					null,
					"AgAAAJMUAAAAAAAAkxQAAAAAAAABAAAAIpIUAAAAAAAAkhQAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlBQAAAAAAACUFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3261,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJIUAAAAAAAAkxQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkhQAAAAAAACSFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3262,
					1,
					"left_delete",
					null,
					"AQAAAJIUAAAAAAAAkhQAAAAAAAABAAAAOw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkxQAAAAAAACTFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3263,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJIUAAAAAAAAkxQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkhQAAAAAAACSFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3264,
					1,
					"insert",
					{
						"characters": " \"o"
					},
					"AwAAAJMUAAAAAAAAlBQAAAAAAAAAAAAAlBQAAAAAAACVFAAAAAAAAAAAAACVFAAAAAAAAJYUAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkxQAAAAAAACTFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3265,
					1,
					"left_delete",
					null,
					"AQAAAJUUAAAAAAAAlRQAAAAAAAABAAAAbw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlhQAAAAAAACWFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3266,
					1,
					"insert",
					{
						"characters": "NO"
					},
					"AgAAAJUUAAAAAAAAlhQAAAAAAAAAAAAAlhQAAAAAAACXFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlRQAAAAAAACVFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3267,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJcUAAAAAAAAmBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlxQAAAAAAACXFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3268,
					2,
					"left_delete",
					null,
					"AgAAAJcUAAAAAAAAlxQAAAAAAAABAAAAIJYUAAAAAAAAlhQAAAAAAAABAAAATw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmBQAAAAAAACYFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3269,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAAJYUAAAAAAAAlxQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlhQAAAAAAACWFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3270,
					1,
					"insert",
					{
						"characters": " websocket"
					},
					"CgAAAJcUAAAAAAAAmBQAAAAAAAAAAAAAmBQAAAAAAACZFAAAAAAAAAAAAACZFAAAAAAAAJoUAAAAAAAAAAAAAJoUAAAAAAAAmxQAAAAAAAAAAAAAmxQAAAAAAACcFAAAAAAAAAAAAACcFAAAAAAAAJ0UAAAAAAAAAAAAAJ0UAAAAAAAAnhQAAAAAAAAAAAAAnhQAAAAAAACfFAAAAAAAAAAAAACfFAAAAAAAAKAUAAAAAAAAAAAAAKAUAAAAAAAAoRQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlxQAAAAAAACXFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3272,
					1,
					"left_delete",
					null,
					"AQAAAKEUAAAAAAAAoRQAAAAAAAABAAAAIg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAohQAAAAAAACiFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3273,
					1,
					"insert",
					{
						"characters": "!\""
					},
					"AgAAAKEUAAAAAAAAohQAAAAAAAAAAAAAohQAAAAAAACjFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoRQAAAAAAAChFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3275,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKQUAAAAAAAApRQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApBQAAAAAAACkFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3280,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcBQAAAAAAABwFAAAAAAAAAAAAAAAAHpA"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOQcAAAAAAAA5RwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkHAAAAAAAAOQcAAAAAAAAAAAAAAAAAAA"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAOQcAAAAAAAA5RwAAAAAAAAAAAAA5RwAAAAAAADmHAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkHAAAAAAAAOQcAAAAAAAAAAAAAAAAAAA"
				],
				[
					47,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOYcAAAAAAAA6BwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmHAAAAAAAAOYcAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAOccAAAAAAAA6BwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnHAAAAAAAAOccAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "cli->connece"
					},
					"DAAAAOgcAAAAAAAA6RwAAAAAAAAAAAAA6RwAAAAAAADqHAAAAAAAAAAAAADqHAAAAAAAAOscAAAAAAAAAAAAAOscAAAAAAAA7BwAAAAAAAAAAAAA7BwAAAAAAADtHAAAAAAAAAAAAADtHAAAAAAAAO4cAAAAAAAAAAAAAO4cAAAAAAAA7xwAAAAAAAAAAAAA7xwAAAAAAADwHAAAAAAAAAAAAADwHAAAAAAAAPEcAAAAAAAAAAAAAPEcAAAAAAAA8hwAAAAAAAAAAAAA8hwAAAAAAADzHAAAAAAAAAAAAADzHAAAAAAAAPQcAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADoHAAAAAAAAOgcAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"left_delete",
					null,
					"AQAAAPMcAAAAAAAA8xwAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD0HAAAAAAAAPQcAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "ted"
					},
					"AwAAAPMcAAAAAAAA9BwAAAAAAAAAAAAA9BwAAAAAAAD1HAAAAAAAAAAAAAD1HAAAAAAAAPYcAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzHAAAAAAAAPMcAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPccAAAAAAAA+BwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3HAAAAAAAAPccAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPgcAAAAAAAA+hwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4HAAAAAAAAPgcAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"right_delete",
					null,
					"AQAAAPkcAAAAAAAA+RwAAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5HAAAAAAAAPkcAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAEYeAAAAAAAARx4AAAAAAAAAAAAARx4AAAAAAABNHgAAAAAAAAAAAABNHgAAAAAAAE4eAAAAAAAAAAAAAEceAAAAAAAARx4AAAAAAAAGAAAAICAgICAgRx4AAAAAAABLHgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGHgAAAAAAAEYeAAAAAAAAAAAAAAAAWEA"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "\ncli->connecgte"
					},
					"EAAAAEYeAAAAAAAARx4AAAAAAAAAAAAARx4AAAAAAABNHgAAAAAAAAAAAABNHgAAAAAAAE4eAAAAAAAAAAAAAE4eAAAAAAAATx4AAAAAAAAAAAAATx4AAAAAAABQHgAAAAAAAAAAAABQHgAAAAAAAFEeAAAAAAAAAAAAAFEeAAAAAAAAUh4AAAAAAAAAAAAAUh4AAAAAAABTHgAAAAAAAAAAAABTHgAAAAAAAFQeAAAAAAAAAAAAAFQeAAAAAAAAVR4AAAAAAAAAAAAAVR4AAAAAAABWHgAAAAAAAAAAAABWHgAAAAAAAFceAAAAAAAAAAAAAFceAAAAAAAAWB4AAAAAAAAAAAAAWB4AAAAAAABZHgAAAAAAAAAAAABZHgAAAAAAAFoeAAAAAAAAAAAAAFoeAAAAAAAAWx4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGHgAAAAAAAEYeAAAAAAAA////////738"
				],
				[
					63,
					3,
					"left_delete",
					null,
					"AwAAAFoeAAAAAAAAWh4AAAAAAAABAAAAZVkeAAAAAAAAWR4AAAAAAAABAAAAdFgeAAAAAAAAWB4AAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbHgAAAAAAAFseAAAAAAAAAAAAAAAA8L8"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "ted=TRUE;"
					},
					"CQAAAFgeAAAAAAAAWR4AAAAAAAAAAAAAWR4AAAAAAABaHgAAAAAAAAAAAABaHgAAAAAAAFseAAAAAAAAAAAAAFseAAAAAAAAXB4AAAAAAAAAAAAAXB4AAAAAAABdHgAAAAAAAAAAAABdHgAAAAAAAF4eAAAAAAAAAAAAAF4eAAAAAAAAXx4AAAAAAAAAAAAAXx4AAAAAAABgHgAAAAAAAAAAAABgHgAAAAAAAGEeAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYHgAAAAAAAFgeAAAAAAAAAAAAAAAA8L8"
				],
				[
					67,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhHgAAAAAAAGEeAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "minnet-client.h",
			"settings":
			{
				"buffer_size": 323,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"insert",
					{
						"characters": "\nBOOL"
					},
					"BgAAALgAAAAAAAAAuQAAAAAAAAAAAAAAuQAAAAAAAAC7AAAAAAAAAAAAAAC7AAAAAAAAALwAAAAAAAAAAAAAALwAAAAAAAAAvQAAAAAAAAAAAAAAvQAAAAAAAAC+AAAAAAAAAAAAAAC+AAAAAAAAAL8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4AAAAAAAAALgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " connected;"
					},
					"CwAAAL8AAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADBAAAAAAAAAAAAAADBAAAAAAAAAMIAAAAAAAAAAAAAAMIAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMUAAAAAAAAAAAAAAMUAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAADHAAAAAAAAAAAAAADHAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAyQAAAAAAAAAAAAAAyQAAAAAAAADKAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/AAAAAAAAAL8AAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": "/*\n * lws-minimal-ws-client\n *\n * Written in 2010-2019 by Andy Green <andy@warmcat.com>\n *\n * This file is made available under the Creative Commons CC0 1.0\n * Universal Public Domain Dedication.\n *\n * This demonstrates the a minimal ws client using lws.\n *\n * It connects to https://libwebsockets.org/ and makes a\n * wss connection to the dumb-increment protocol there.  While\n * connected, it prints the numbers it is being sent by\n * dumb-increment protocol.\n */\n\n#include <libwebsockets.h>\n#include <string.h>\n#include <signal.h>\n\nstatic int interrupted, rx_seen, test;\nstatic struct lws *client_wsi;\n\nstatic int\ncallback_dumb_increment(struct lws *wsi, enum lws_callback_reasons reason,\n\t      void *user, void *in, size_t len)\n{\n\tswitch (reason) {\n\n\t/* because we are protocols[0] ... */\n\tcase LWS_CALLBACK_CLIENT_CONNECTION_ERROR:\n\t\tlwsl_err(\"CLIENT_CONNECTION_ERROR: %s\\n\",\n\t\t\t in ? (char *)in : \"(null)\");\n\t\tclient_wsi = NULL;\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLIENT_ESTABLISHED:\n\t\tlwsl_user(\"%s: established\\n\", __func__);\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLIENT_RECEIVE:\n\t\tlwsl_user(\"RX: %s\\n\", (const char *)in);\n\t\trx_seen++;\n\t\tif (test && rx_seen == 10)\n\t\t\tinterrupted = 1;\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLIENT_CLOSED:\n\t\tclient_wsi = NULL;\n\t\tbreak;\n\n\tdefault:\n\t\tbreak;\n\t}\n\n\treturn lws_callback_http_dummy(wsi, reason, user, in, len);\n}\n\nstatic const struct lws_protocols protocols[] = {\n\t{\n\t\t\"dumb-increment-protocol\",\n\t\tcallback_dumb_increment,\n\t\t0,\n\t\t0,\n\t},\n\t{ NULL, NULL, 0, 0 }\n};\n\nstatic void\nsigint_handler(int sig)\n{\n\tinterrupted = 1;\n}\n\nint main(int argc, const char **argv)\n{\n\tstruct lws_context_creation_info info;\n\tstruct lws_client_connect_info i;\n\tstruct lws_context *context;\n\tconst char *p;\n\tint n = 0, logs = LLL_USER | LLL_ERR | LLL_WARN | LLL_NOTICE\n\t\t/* for LLL_ verbosity above NOTICE to be built into lws, lws\n\t\t * must have been configured with -DCMAKE_BUILD_TYPE=DEBUG\n\t\t * instead of =RELEASE */\n\t\t/* | LLL_INFO */ /* | LLL_PARSER */ /* | LLL_HEADER */\n\t\t/* | LLL_EXT */ /* | LLL_CLIENT */ /* | LLL_LATENCY */\n\t\t/* | LLL_DEBUG */;\n\n\tsignal(SIGINT, sigint_handler);\n\tif ((p = lws_cmdline_option(argc, argv, \"-d\")))\n\t\tlogs = atoi(p);\n\n\ttest = !!lws_cmdline_option(argc, argv, \"-t\");\n\n\tlws_set_log_level(logs, NULL);\n\tlwsl_user(\"LWS minimal ws client rx [-d <logs>] [--h2] [-t (test)]\\n\");\n\n\tmemset(&info, 0, sizeof info); /* otherwise uninitialized garbage */\n\tinfo.options = LWS_SERVER_OPTION_DO_SSL_GLOBAL_INIT;\n\tinfo.port = CONTEXT_PORT_NO_LISTEN; /* we do not run any server */\n\tinfo.protocols = protocols;\n\tinfo.timeout_secs = 10;\n\tinfo.connect_timeout_secs = 30;\n#if defined(LWS_WITH_MBEDTLS) || defined(USE_WOLFSSL)\n\t/*\n\t * OpenSSL uses the system trust store.  mbedTLS has to be told which\n\t * CA to trust explicitly.\n\t */\n\tinfo.client_ssl_ca_filepath = \"./libwebsockets.org.cer\";\n#endif\n\n\t/*\n\t * since we know this lws context is only ever going to be used with\n\t * one client wsis / fds / sockets at a time, let lws know it doesn't\n\t * have to use the default allocations for fd tables up to ulimit -n.\n\t * It will just allocate for 1 internal and 1 (+ 1 http2 nwsi) that we\n\t * will use.\n\t */\n\tinfo.fd_limit_per_thread = 1 + 1 + 1;\n\n\tcontext = lws_create_context(&info);\n\tif (!context) {\n\t\tlwsl_err(\"lws init failed\\n\");\n\t\treturn 1;\n\t}\n\n\tmemset(&i, 0, sizeof i); /* otherwise uninitialized garbage */\n\ti.context = context;\n\ti.port = 443;\n\ti.address = \"libwebsockets.org\";\n\ti.path = \"/\";\n\ti.host = i.address;\n\ti.origin = i.address;\n\ti.ssl_connection = LCCSCF_USE_SSL;\n\ti.protocol = protocols[0].name; /* \"dumb-increment-protocol\" */\n\ti.pwsi = &client_wsi;\n\n\tif (lws_cmdline_option(argc, argv, \"--h2\"))\n\t\ti.alpn = \"h2\";\n\n\tlws_client_connect_via_info(&i);\n\n\twhile (n >= 0 && client_wsi && !interrupted)\n\t\tn = lws_service(context, 0);\n\n\tlws_context_destroy(context);\n\n\tlwsl_user(\"Completed %s\\n\", rx_seen > 10 ? \"OK\" : \"Failed\");\n\n\treturn rx_seen > 10;\n}\n",
			"file": "libwebsockets/minimal-examples/ws-client/minimal-ws-client-rx/minimal-ws-client.c",
			"file_size": 3888,
			"file_write_time": 132774575772419894,
			"settings":
			{
				"buffer_size": 3888,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\n * lws-minimal-http-client-multi\n *\n * Written in 2010-2021 by Andy Green <andy@warmcat.com>\n *\n * This file is made available under the Creative Commons CC0 1.0\n * Universal Public Domain Dedication.\n *\n * This demonstrates the a minimal http client using lws, which makes\n * 8 downloads simultaneously from warmcat.com.\n *\n * Currently that takes the form of 8 individual simultaneous tcp and\n * tls connections, which happen concurrently.  Notice that the ordering\n * of the returned payload may be intermingled for the various connections.\n *\n * By default the connections happen all together at the beginning and operate\n * concurrently, which is fast.  However this is resource-intenstive, there are\n * 8 tcp connections, 8 tls tunnels on both the client and server.  You can\n * instead opt to have the connections happen one after the other inside a\n * single tcp connection and tls tunnel, using HTTP/1.1 pipelining.  To be\n * eligible to be pipelined on another existing connection to the same server,\n * the client connection must have the LCCSCF_PIPELINE flag on its\n * info.ssl_connection member (this is independent of whether the connection\n * is in ssl mode or not).\n *\n * HTTP/1.0: Pipelining only possible if Keep-Alive: yes sent by server\n * HTTP/1.1: always possible... serializes requests\n * HTTP/2:   always possible... all requests sent as individual streams in parallel\n *\n * Note: stats are kept on tls session reuse and checked depending on mode\n *\n *  - default: no reuse expected (connections made too quickly at once)\n *  - staggered, no pipeline: n - 1 reuse expected\n *  - staggered, pipelined: no reuse expected\n */\n\n#include <libwebsockets.h>\n#include <string.h>\n#include <signal.h>\n#include <assert.h>\n#include <time.h>\n#if !defined(WIN32)\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <unistd.h>\n#endif\n\n#define COUNT 8\n\nstruct cliuser {\n\tint index;\n};\n\nstatic int completed, failed, numbered, stagger_idx, posting, count = COUNT,\n\t   reuse, staggered;\nstatic lws_sorted_usec_list_t sul_stagger;\nstatic struct lws_client_connect_info i;\nstatic struct lws *client_wsi[COUNT];\nstatic char urlpath[64], intr;\nstatic struct lws_context *context;\n\n/* we only need this for tracking POST emit state */\n\nstruct pss {\n\tchar body_part;\n};\n\n#if defined(LWS_WITH_TLS_SESSIONS) && !defined(LWS_WITH_MBEDTLS) && !defined(WIN32)\n\n/* this should work OK on win32, but not adapted for non-posix file apis */\n\nstatic int\nsess_save_cb(struct lws_context *cx, struct lws_tls_session_dump *info)\n{\n\tchar path[128];\n\tint fd, n;\n\n\tlws_snprintf(path, sizeof(path), \"%s/lws_tls_sess_%s\", (const char *)info->opaque,\n\t\t\tinfo->tag);\n\tfd = open(path, LWS_O_WRONLY | O_CREAT | O_TRUNC, 0600);\n\tif (fd < 0) {\n\t\tlwsl_warn(\"%s: cannot open %s\\n\", __func__, path);\n\t\treturn 1;\n\t}\n\n\tn = (int)write(fd, info->blob, info->blob_len);\n\n\tclose(fd);\n\n\treturn n != (int)info->blob_len;\n}\n\nstatic int\nsess_load_cb(struct lws_context *cx, struct lws_tls_session_dump *info)\n{\n\tstruct stat sta;\n\tchar path[128];\n\tint fd, n;\n\n\tlws_snprintf(path, sizeof(path), \"%s/lws_tls_sess_%s\", (const char *)info->opaque,\n\t\t\tinfo->tag);\n\tfd = open(path, LWS_O_RDONLY);\n\tif (fd < 0)\n\t\treturn 1;\n\n\tif (fstat(fd, &sta) || !sta.st_size)\n\t\tgoto bail;\n\n\tinfo->blob = malloc((size_t)sta.st_size);\n\t/* caller will free this */\n\tif (!info->blob)\n\t\tgoto bail;\n\n\tinfo->blob_len = (size_t)sta.st_size;\n\n\tn = (int)read(fd, info->blob, info->blob_len);\n\tclose(fd);\n\n\treturn n != (int)info->blob_len;\n\nbail:\n\tclose(fd);\n\n\treturn 1;\n}\n#endif\n\n#if defined(LWS_WITH_CONMON)\nvoid\ndump_conmon_data(struct lws *wsi)\n{\n\tconst struct addrinfo *ai;\n\tstruct lws_conmon cm;\n\tchar ads[48];\n\n\tlws_conmon_wsi_take(wsi, &cm);\n\n\tlws_sa46_write_numeric_address(&cm.peer46, ads, sizeof(ads));\n\tlwsl_notice(\"%s: peer %s, dns: %uus, sockconn: %uus, tls: %uus, txn_resp: %uus\\n\",\n\t\t    __func__, ads,\n\t\t    (unsigned int)cm.ciu_dns,\n\t\t    (unsigned int)cm.ciu_sockconn,\n\t\t    (unsigned int)cm.ciu_tls,\n\t\t    (unsigned int)cm.ciu_txn_resp);\n\n\tai = cm.dns_results_copy;\n\twhile (ai) {\n\t\tlws_sa46_write_numeric_address((lws_sockaddr46 *)ai->ai_addr, ads, sizeof(ads));\n\t\tlwsl_notice(\"%s: DNS %s\\n\", __func__, ads);\n\t\tai = ai->ai_next;\n\t}\n\n\t/*\n\t * This destroys the DNS list in the lws_conmon that we took\n\t * responsibility for when we used lws_conmon_wsi_take()\n\t */\n\n\tlws_conmon_release(&cm);\n}\n#endif\n\nstatic int\ncallback_http(struct lws *wsi, enum lws_callback_reasons reason,\n\t      void *user, void *in, size_t len)\n{\n\tchar buf[LWS_PRE + 1024], *start = &buf[LWS_PRE], *p = start,\n\t     *end = &buf[sizeof(buf) - LWS_PRE - 1];\n\tint n, idx = (int)(intptr_t)lws_get_opaque_user_data(wsi);\n\tstruct pss *pss = (struct pss *)user;\n\n\tswitch (reason) {\n\n\tcase LWS_CALLBACK_ESTABLISHED_CLIENT_HTTP:\n\t\tlwsl_user(\"LWS_CALLBACK_ESTABLISHED_CLIENT_HTTP: idx: %d, resp %u: tls-session-reuse: %d\\n\",\n\t\t\t\tidx, lws_http_client_http_response(wsi), lws_tls_session_is_reused(wsi));\n\n\t\tif (lws_tls_session_is_reused(wsi))\n\t\t\treuse++;\n#if defined(LWS_WITH_TLS_SESSIONS) && !defined(LWS_WITH_MBEDTLS) && !defined(WIN32)\n\t\telse\n\t\t\t/*\n\t\t\t * Attempt to store any new session into\n\t\t\t * external storage\n\t\t\t */\n\t\t\tif (lws_tls_session_dump_save(lws_get_vhost_by_name(context, \"default\"),\n\t\t\t\t\ti.host, (uint16_t)i.port,\n\t\t\t\t\tsess_save_cb, \"/tmp\"))\n\t\tlwsl_warn(\"%s: session save failed\\n\", __func__);\n#endif\n\t\tbreak;\n\n\t/* because we are protocols[0] ... */\n\tcase LWS_CALLBACK_CLIENT_CONNECTION_ERROR:\n\t\tlwsl_err(\"CLIENT_CONNECTION_ERROR: %s\\n\",\n\t\t\t in ? (char *)in : \"(null)\");\n\t\tclient_wsi[idx] = NULL;\n\t\tfailed++;\n\n#if defined(LWS_WITH_CONMON)\n\t\tdump_conmon_data(wsi);\n#endif\n\n\t\tgoto finished;\n\n\t/* chunks of chunked content, with header removed */\n\tcase LWS_CALLBACK_RECEIVE_CLIENT_HTTP_READ:\n\t\tlwsl_user(\"RECEIVE_CLIENT_HTTP_READ: conn %d: read %d\\n\", idx, (int)len);\n\t\tlwsl_hexdump_info(in, len);\n\t\treturn 0; /* don't passthru */\n\n\tcase LWS_CALLBACK_CLIENT_APPEND_HANDSHAKE_HEADER:\n\n\t\t/*\n\t\t * Tell lws we are going to send the body next...\n\t\t */\n\t\tif (posting && !lws_http_is_redirected_to_get(wsi)) {\n\t\t\tlwsl_user(\"%s: conn %d, doing POST flow\\n\", __func__, idx);\n\t\t\tlws_client_http_body_pending(wsi, 1);\n\t\t\tlws_callback_on_writable(wsi);\n\t\t} else\n\t\t\tlwsl_user(\"%s: conn %d, doing GET flow\\n\", __func__, idx);\n\t\tbreak;\n\n\t/* uninterpreted http content */\n\tcase LWS_CALLBACK_RECEIVE_CLIENT_HTTP:\n\t\t{\n\t\t\tchar buffer[1024 + LWS_PRE];\n\t\t\tchar *px = buffer + LWS_PRE;\n\t\t\tint lenx = sizeof(buffer) - LWS_PRE;\n\n\t\t\tif (lws_http_client_read(wsi, &px, &lenx) < 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn 0; /* don't passthru */\n\n\tcase LWS_CALLBACK_COMPLETED_CLIENT_HTTP:\n\t\tlwsl_user(\"LWS_CALLBACK_COMPLETED_CLIENT_HTTP %s: idx %d\\n\",\n\t\t\t  lws_wsi_tag(wsi), idx);\n\t\tclient_wsi[idx] = NULL;\n\t\tgoto finished;\n\n\tcase LWS_CALLBACK_CLOSED_CLIENT_HTTP:\n\t\tlwsl_info(\"%s: closed: %s\\n\", __func__, lws_wsi_tag(client_wsi[idx]));\n\n#if defined(LWS_WITH_CONMON)\n\t\tdump_conmon_data(wsi);\n#endif\n\n\t\tif (client_wsi[idx]) {\n\t\t\t/*\n\t\t\t * If it completed normally, it will have been set to\n\t\t\t * NULL then already.  So we are dealing with an\n\t\t\t * abnormal, failing, close\n\t\t\t */\n\t\t\tclient_wsi[idx] = NULL;\n\t\t\tfailed++;\n\t\t\tgoto finished;\n\t\t}\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLIENT_HTTP_WRITEABLE:\n\t\tif (!posting)\n\t\t\tbreak;\n\t\tif (lws_http_is_redirected_to_get(wsi))\n\t\t\tbreak;\n\t\tlwsl_info(\"LWS_CALLBACK_CLIENT_HTTP_WRITEABLE: %s, idx %d,\"\n\t\t\t\t\" part %d\\n\", lws_wsi_tag(wsi), idx, pss->body_part);\n\n\t\tn = LWS_WRITE_HTTP;\n\n\t\t/*\n\t\t * For a small body like this, we could prepare it in memory and\n\t\t * send it all at once.  But to show how to handle, eg,\n\t\t * arbitrary-sized file payloads, or huge form-data fields, the\n\t\t * sending is done in multiple passes through the event loop.\n\t\t */\n\n\t\tswitch (pss->body_part++) {\n\t\tcase 0:\n\t\t\tif (lws_client_http_multipart(wsi, \"text\", NULL, NULL,\n\t\t\t\t\t\t      &p, end))\n\t\t\t\treturn -1;\n\t\t\t/* notice every usage of the boundary starts with -- */\n\t\t\tp += lws_snprintf(p, lws_ptr_diff_size_t(end, p), \"my text field\\xd\\xa\");\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tif (lws_client_http_multipart(wsi, \"file\", \"myfile.txt\",\n\t\t\t\t\t\t      \"text/plain\", &p, end))\n\t\t\t\treturn -1;\n\t\t\tp += lws_snprintf(p, lws_ptr_diff_size_t(end, p),\n\t\t\t\t\t\"This is the contents of the \"\n\t\t\t\t\t\"uploaded file.\\xd\\xa\"\n\t\t\t\t\t\"\\xd\\xa\");\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tif (lws_client_http_multipart(wsi, NULL, NULL, NULL,\n\t\t\t\t\t\t      &p, end))\n\t\t\t\treturn -1;\n\t\t\tlws_client_http_body_pending(wsi, 0);\n\t\t\t /* necessary to support H2, it means we will write no\n\t\t\t  * more on this stream */\n\t\t\tn = LWS_WRITE_HTTP_FINAL;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t/*\n\t\t\t * We can get extra callbacks here, if nothing to do,\n\t\t\t * then do nothing.\n\t\t\t */\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (lws_write(wsi, (uint8_t *)start, lws_ptr_diff_size_t(p, start), (enum lws_write_protocol)n)\n\t\t\t\t!= lws_ptr_diff(p, start))\n\t\t\treturn 1;\n\n\t\tif (n != LWS_WRITE_HTTP_FINAL)\n\t\t\tlws_callback_on_writable(wsi);\n\n\t\tbreak;\n\n\tdefault:\n\t\tbreak;\n\t}\n\n\treturn lws_callback_http_dummy(wsi, reason, user, in, len);\n\nfinished:\n\tif (++completed == count) {\n\t\tif (!failed)\n\t\t\tlwsl_user(\"Done: all OK\\n\");\n\t\telse\n\t\t\tlwsl_err(\"Done: failed: %d\\n\", failed);\n\t\tintr = 1;\n\t\t/*\n\t\t * This is how we can exit the event loop even when it's an\n\t\t * event library backing it... it will start and stage the\n\t\t * destroy to happen after we exited this service for each pt\n\t\t */\n\t\tlws_context_destroy(lws_get_context(wsi));\n\t}\n\n\treturn 0;\n}\n\nstatic const struct lws_protocols protocols[] = {\n\t{ \"http\", callback_http, sizeof(struct pss), 0, },\n\t{ NULL, NULL, 0, 0 }\n};\n\n#if defined(LWS_WITH_SYS_METRICS)\n\nstatic int\nmy_metric_report(lws_metric_pub_t *mp)\n{\n\tlws_metric_bucket_t *sub = mp->u.hist.head;\n\tchar buf[192];\n\n\tdo {\n\t\tif (lws_metrics_format(mp, &sub, buf, sizeof(buf)))\n\t\t\tlwsl_user(\"%s: %s\\n\", __func__, buf);\n\t} while ((mp->flags & LWSMTFL_REPORT_HIST) && sub);\n\n\t/* 0 = leave metric to accumulate, 1 = reset the metric */\n\n\treturn 1;\n}\n\nstatic const lws_system_ops_t system_ops = {\n\t.metric_report = my_metric_report,\n};\n\n#endif\n\nstatic void\nstagger_cb(lws_sorted_usec_list_t *sul);\n\nstatic void\nlws_try_client_connection(struct lws_client_connect_info *i, int m)\n{\n\tchar path[128];\n\n\tif (numbered) {\n\t\tlws_snprintf(path, sizeof(path), \"/%d.png\", m + 1);\n\t\ti->path = path;\n\t} else\n\t\ti->path = urlpath;\n\n\ti->pwsi = &client_wsi[m];\n\ti->opaque_user_data = (void *)(intptr_t)m;\n\n\tif (!lws_client_connect_via_info(i)) {\n\t\tfailed++;\n\t\tlwsl_user(\"%s: failed: conn idx %d\\n\", __func__, m);\n\t\tif (++completed == count) {\n\t\t\tlwsl_user(\"Done: failed: %d\\n\", failed);\n\t\t\tlws_context_destroy(context);\n\t\t}\n\t} else\n\t\tlwsl_user(\"started connection %s: idx %d (%s)\\n\",\n\t\t\t  lws_wsi_tag(client_wsi[m]), m, i->path);\n}\n\n\nstatic int\nsystem_notify_cb(lws_state_manager_t *mgr, lws_state_notify_link_t *link,\n\t\t   int current, int target)\n{\n\tstruct lws_context *context = mgr->parent;\n\tint m;\n\n\tif (current != LWS_SYSTATE_OPERATIONAL || target != LWS_SYSTATE_OPERATIONAL)\n\t\treturn 0;\n\n\t/* all the system prerequisites are ready */\n\n\tif (!staggered)\n\t\t/*\n\t\t * just pile on all the connections at once, testing the\n\t\t * pipeline queuing before the first is connected\n\t\t */\n\t\tfor (m = 0; m < count; m++)\n\t\t\tlws_try_client_connection(&i, m);\n\telse\n\t\t/*\n\t\t * delay the connections slightly\n\t\t */\n\t\tlws_sul_schedule(context, 0, &sul_stagger, stagger_cb,\n\t\t\t\t 50 * LWS_US_PER_MS);\n\n\treturn 0;\n}\n\nstatic void\nsignal_cb(void *handle, int signum)\n{\n\tswitch (signum) {\n\tcase SIGTERM:\n\tcase SIGINT:\n\t\tbreak;\n\tdefault:\n\t\tlwsl_err(\"%s: signal %d\\n\", __func__, signum);\n\t\tbreak;\n\t}\n\tlws_context_destroy(context);\n}\n\nstatic void\nsigint_handler(int sig)\n{\n\tsignal_cb(NULL, sig);\n}\n\n#if defined(WIN32)\nint gettimeofday(struct timeval * tp, struct timezone * tzp)\n{\n    // Note: some broken versions only have 8 trailing zero's, the correct epoch has 9 trailing zero's\n    // This magic number is the number of 100 nanosecond intervals since January 1, 1601 (UTC)\n    // until 00:00:00 January 1, 1970 \n    static const uint64_t EPOCH = ((uint64_t) 116444736000000000ULL);\n\n    SYSTEMTIME  system_time;\n    FILETIME    file_time;\n    uint64_t    time;\n\n    GetSystemTime( &system_time );\n    SystemTimeToFileTime( &system_time, &file_time );\n    time =  ((uint64_t)file_time.dwLowDateTime )      ;\n    time += ((uint64_t)file_time.dwHighDateTime) << 32;\n\n    tp->tv_sec  = (long) ((time - EPOCH) / 10000000L);\n    tp->tv_usec = (long) (system_time.wMilliseconds * 1000);\n    return 0;\n}\n#endif\n\nunsigned long long us(void)\n{\n\tstruct timeval t;\n\n\tgettimeofday(&t, NULL);\n\n\treturn ((unsigned long long)t.tv_sec * 1000000ull) + (unsigned long long)t.tv_usec;\n}\n\nstatic void\nstagger_cb(lws_sorted_usec_list_t *sul)\n{\n\tlws_usec_t next;\n\n\t/*\n\t * open the connections at 100ms intervals, with the\n\t * last one being after 1s, testing both queuing, and\n\t * direct H2 stream addition stability\n\t */\n\tlws_try_client_connection(&i, stagger_idx++);\n\n\tif (stagger_idx == count)\n\t\treturn;\n\n\tnext = 150 * LWS_US_PER_MS;\n\tif (stagger_idx == count - 1)\n\t\tnext += 400 * LWS_US_PER_MS;\n\n#if defined(LWS_WITH_TLS_SESSIONS)\n\tif (stagger_idx == 1)\n\t\tnext += 600 * LWS_US_PER_MS;\n#endif\n\n\tlws_sul_schedule(context, 0, &sul_stagger, stagger_cb, next);\n}\n\nint main(int argc, const char **argv)\n{\n\tlws_state_notify_link_t notifier = { {0}, system_notify_cb, \"app\" };\n\tlws_state_notify_link_t *na[] = { &notifier, NULL };\n\tstruct lws_context_creation_info info;\n\tunsigned long long start;\n\tconst char *p;\n#if defined(LWS_WITH_TLS_SESSIONS)\n\tint pl = 0;\n#endif\n\n\tmemset(&info, 0, sizeof info); /* otherwise uninitialized garbage */\n\tmemset(&i, 0, sizeof i); /* otherwise uninitialized garbage */\n\n\tlws_cmdline_option_handle_builtin(argc, argv, &info);\n\n\tinfo.signal_cb = signal_cb;\n\tinfo.options = LWS_SERVER_OPTION_DO_SSL_GLOBAL_INIT;\n\n\tif (lws_cmdline_option(argc, argv, \"--uv\"))\n\t\tinfo.options |= LWS_SERVER_OPTION_LIBUV;\n\telse\n\t\tif (lws_cmdline_option(argc, argv, \"--event\"))\n\t\t\tinfo.options |= LWS_SERVER_OPTION_LIBEVENT;\n\t\telse\n\t\t\tif (lws_cmdline_option(argc, argv, \"--ev\"))\n\t\t\t\tinfo.options |= LWS_SERVER_OPTION_LIBEV;\n\t\t\telse\n\t\t\t\tif (lws_cmdline_option(argc, argv, \"--glib\"))\n\t\t\t\t\tinfo.options |= LWS_SERVER_OPTION_GLIB;\n\t\t\t\telse\n\t\t\t\t\tsignal(SIGINT, sigint_handler);\n\n\tstaggered = !!lws_cmdline_option(argc, argv, \"-s\");\n\n\tlwsl_user(\"LWS minimal http client [-s (staggered)] [-p (pipeline)]\\n\");\n\tlwsl_user(\"   [--h1 (http/1 only)] [-l (localhost)] [-d <logs>]\\n\");\n\tlwsl_user(\"   [-n (numbered)] [--post]\\n\");\n\n\tinfo.port = CONTEXT_PORT_NO_LISTEN; /* we do not run any server */\n\tinfo.protocols = protocols;\n\t/*\n\t * since we know this lws context is only ever going to be used with\n\t * COUNT client wsis / fds / sockets at a time, let lws know it doesn't\n\t * have to use the default allocations for fd tables up to ulimit -n.\n\t * It will just allocate for 1 internal and COUNT + 1 (allowing for h2\n\t * network wsi) that we will use.\n\t */\n\tinfo.fd_limit_per_thread = 1 + COUNT + 1;\n\tinfo.register_notifier_list = na;\n\tinfo.pcontext = &context;\n\n#if defined(LWS_WITH_SYS_METRICS)\n\tinfo.system_ops = &system_ops;\n#endif\n\n#if defined(LWS_WITH_MBEDTLS) || defined(USE_WOLFSSL)\n\t/*\n\t * OpenSSL uses the system trust store.  mbedTLS has to be told which\n\t * CA to trust explicitly.\n\t */\n\tinfo.client_ssl_ca_filepath = \"./warmcat.com.cer\";\n#endif\n\n\t/* vhost option allowing tls session reuse, requires\n\t * LWS_WITH_TLS_SESSIONS build option */\n\tif (lws_cmdline_option(argc, argv, \"--no-tls-session-reuse\"))\n\t\tinfo.options |= LWS_SERVER_OPTION_DISABLE_TLS_SESSION_CACHE;\n\n\tif ((p = lws_cmdline_option(argc, argv, \"--limit\")))\n\t\tinfo.simultaneous_ssl_restriction = atoi(p);\n\n\tif (lws_cmdline_option(argc, argv, \"--ssl-handshake-serialize\"))\n\t\t/* We only consider simultaneous_ssl_restriction > 1 use cases.\n\t\t * If ssl isn't limited or only 1 is allowed, we don't care.\n\t\t */\n\t\tif (info.simultaneous_ssl_restriction > 1)\n\t\t\tinfo.ssl_handshake_serialize = 1;\n\n\tcontext = lws_create_context(&info);\n\tif (!context) {\n\t\tlwsl_err(\"lws init failed\\n\");\n\t\treturn 1;\n\t}\n\n#if defined(LWS_ROLE_H2) && defined(LWS_ROLE_H1)\n\ti.alpn = \"h2,http/1.1\";\n#elif defined(LWS_ROLE_H2)\n\ti.alpn = \"h2\";\n#elif defined(LWS_ROLE_H1)\n\ti.alpn = \"http/1.1\";\n#endif\n\n\ti.context = context;\n\ti.ssl_connection = LCCSCF_USE_SSL |\n\t\t\t   LCCSCF_H2_QUIRK_OVERFLOWS_TXCR |\n\t\t\t   LCCSCF_H2_QUIRK_NGHTTP2_END_STREAM;\n\n\tif (lws_cmdline_option(argc, argv, \"--post\")) {\n\t\tposting = 1;\n\t\ti.method = \"POST\";\n\t\ti.ssl_connection |= LCCSCF_HTTP_MULTIPART_MIME;\n\t} else\n\t\ti.method = \"GET\";\n\n\t/* enables h1 or h2 connection sharing */\n\tif (lws_cmdline_option(argc, argv, \"-p\")) {\n\t\ti.ssl_connection |= LCCSCF_PIPELINE;\n#if defined(LWS_WITH_TLS_SESSIONS)\n\t\tpl = 1;\n#endif\n\t}\n\n#if defined(LWS_WITH_CONMON)\n\tif (lws_cmdline_option(argc, argv, \"--conmon\"))\n\t\ti.ssl_connection |= LCCSCF_CONMON;\n#endif\n\n\t/* force h1 even if h2 available */\n\tif (lws_cmdline_option(argc, argv, \"--h1\"))\n\t\ti.alpn = \"http/1.1\";\n\n\tstrcpy(urlpath, \"/\");\n\n\tif (lws_cmdline_option(argc, argv, \"-l\")) {\n\t\ti.port = 7681;\n\t\ti.address = \"localhost\";\n\t\ti.ssl_connection |= LCCSCF_ALLOW_SELFSIGNED;\n\t\tif (posting)\n\t\t\tstrcpy(urlpath, \"/formtest\");\n\t} else {\n\t\ti.port = 443;\n\t\ti.address = \"libwebsockets.org\";\n\t\tif (posting)\n\t\t\tstrcpy(urlpath, \"/testserver/formtest\");\n\t}\n\n\tif (lws_cmdline_option(argc, argv, \"--no-tls\"))\n\t\ti.ssl_connection &= ~(LCCSCF_USE_SSL);\n\n\tif (lws_cmdline_option(argc, argv, \"-n\"))\n\t\tnumbered = 1;\n\n\tif ((p = lws_cmdline_option(argc, argv, \"--server\")))\n\t\ti.address = p;\n\n\tif ((p = lws_cmdline_option(argc, argv, \"--port\")))\n\t\ti.port = atoi(p);\n\n\tif ((p = lws_cmdline_option(argc, argv, \"--path\")))\n\t\tlws_strncpy(urlpath, p, sizeof(urlpath));\n\n\tif ((p = lws_cmdline_option(argc, argv, \"-c\")))\n\t\tif (atoi(p) <= COUNT && atoi(p))\n\t\t\tcount = atoi(p);\n\n\ti.host = i.address;\n\ti.origin = i.address;\n\ti.protocol = protocols[0].name;\n\n#if defined(LWS_WITH_TLS_SESSIONS) && !defined(LWS_WITH_MBEDTLS) && !defined(WIN32)\n\t/*\n\t * Attempt to preload a session from external storage\n\t */\n\tif (lws_tls_session_dump_load(lws_get_vhost_by_name(context, \"default\"),\n\t\t\t\t  i.host, (uint16_t)i.port, sess_load_cb, \"/tmp\"))\n\t\tlwsl_warn(\"%s: session load failed\\n\", __func__);\n#endif\n\n\tstart = us();\n\twhile (!intr && !lws_service(context, 0))\n\t\t;\n\n#if defined(LWS_WITH_TLS_SESSIONS)\n\tlwsl_user(\"%s: session reuse count %d\\n\", __func__, reuse);\n\n\tif (staggered && !pl && !reuse) {\n\t\tlwsl_err(\"%s: failing, expected 1 .. %d reused\\n\", __func__, count - 1);\n\t\t// too difficult to reproduce in CI\n\t\t// failed = 1;\n\t}\n#endif\n\n\tlwsl_user(\"Duration: %lldms\\n\", (us() - start) / 1000);\n\tlws_context_destroy(context);\n\n\tlwsl_user(\"Exiting with %d\\n\", failed || completed != count);\n\n\treturn failed || completed != count;\n}\n",
			"file": "libwebsockets/minimal-examples/http-client/minimal-http-client-multi/minimal-http-client-multi.c",
			"file_size": 18555,
			"file_write_time": 132774575772059894,
			"settings":
			{
				"buffer_size": 18555,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\n * lws-minimal-ws-client\n *\n * Written in 2010-2020 by Andy Green <andy@warmcat.com>\n *\n * This file is made available under the Creative Commons CC0 1.0\n * Universal Public Domain Dedication.\n *\n * This demonstrates a ws client that connects by default to libwebsockets.org\n * dumb increment ws server.\n */\n\n#include <libwebsockets.h>\n#include <string.h>\n#include <signal.h>\n\n/*\n * This represents your object that \"contains\" the client connection and has\n * the client connection bound to it\n */\n\nstatic struct my_conn {\n\tlws_sorted_usec_list_t\tsul;\t     /* schedule connection retry */\n\tstruct lws\t\t*wsi;\t     /* related wsi if any */\n\tuint16_t\t\tretry_count; /* count of consequetive retries */\n} mco;\n\nstatic struct lws_context *context;\nstatic int interrupted, port = 443, ssl_connection = LCCSCF_USE_SSL;\nstatic const char *server_address = \"libwebsockets.org\",\n\t\t  *pro = \"dumb-increment-protocol\";\n\n/*\n * The retry and backoff policy we want to use for our client connections\n */\n\nstatic const uint32_t backoff_ms[] = { 1000, 2000, 3000, 4000, 5000 };\n\nstatic const lws_retry_bo_t retry = {\n\t.retry_ms_table\t\t\t= backoff_ms,\n\t.retry_ms_table_count\t\t= LWS_ARRAY_SIZE(backoff_ms),\n\t.conceal_count\t\t\t= LWS_ARRAY_SIZE(backoff_ms),\n\n\t.secs_since_valid_ping\t\t= 3,  /* force PINGs after secs idle */\n\t.secs_since_valid_hangup\t= 10, /* hangup after secs idle */\n\n\t.jitter_percent\t\t\t= 20,\n};\n\n/*\n * Scheduled sul callback that starts the connection attempt\n */\n\nstatic void\nconnect_client(lws_sorted_usec_list_t *sul)\n{\n\tstruct my_conn *mco = lws_container_of(sul, struct my_conn, sul);\n\tstruct lws_client_connect_info i;\n\n\tmemset(&i, 0, sizeof(i));\n\n\ti.context = context;\n\ti.port = port;\n\ti.address = server_address;\n\ti.path = \"/\";\n\ti.host = i.address;\n\ti.origin = i.address;\n\ti.ssl_connection = ssl_connection;\n\ti.protocol = pro;\n\ti.local_protocol_name = \"lws-minimal-client\";\n\ti.pwsi = &mco->wsi;\n\ti.retry_and_idle_policy = &retry;\n\ti.userdata = mco;\n\n\tif (!lws_client_connect_via_info(&i))\n\t\t/*\n\t\t * Failed... schedule a retry... we can't use the _retry_wsi()\n\t\t * convenience wrapper api here because no valid wsi at this\n\t\t * point.\n\t\t */\n\t\tif (lws_retry_sul_schedule(context, 0, sul, &retry,\n\t\t\t\t\t   connect_client, &mco->retry_count)) {\n\t\t\tlwsl_err(\"%s: connection attempts exhausted\\n\", __func__);\n\t\t\tinterrupted = 1;\n\t\t}\n}\n\nstatic int\ncallback_minimal(struct lws *wsi, enum lws_callback_reasons reason,\n\t\t void *user, void *in, size_t len)\n{\n\tstruct my_conn *mco = (struct my_conn *)user;\n\n\tswitch (reason) {\n\n\tcase LWS_CALLBACK_CLIENT_CONNECTION_ERROR:\n\t\tlwsl_err(\"CLIENT_CONNECTION_ERROR: %s\\n\",\n\t\t\t in ? (char *)in : \"(null)\");\n\t\tgoto do_retry;\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLIENT_RECEIVE:\n\t\tlwsl_hexdump_notice(in, len);\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLIENT_ESTABLISHED:\n\t\tlwsl_user(\"%s: established\\n\", __func__);\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLIENT_CLOSED:\n\t\tgoto do_retry;\n\n\tdefault:\n\t\tbreak;\n\t}\n\n\treturn lws_callback_http_dummy(wsi, reason, user, in, len);\n\ndo_retry:\n\t/*\n\t * retry the connection to keep it nailed up\n\t *\n\t * For this example, we try to conceal any problem for one set of\n\t * backoff retries and then exit the app.\n\t *\n\t * If you set retry.conceal_count to be larger than the number of\n\t * elements in the backoff table, it will never give up and keep\n\t * retrying at the last backoff delay plus the random jitter amount.\n\t */\n\tif (lws_retry_sul_schedule_retry_wsi(wsi, &mco->sul, connect_client,\n\t\t\t\t\t     &mco->retry_count)) {\n\t\tlwsl_err(\"%s: connection attempts exhausted\\n\", __func__);\n\t\tinterrupted = 1;\n\t}\n\n\treturn 0;\n}\n\nstatic const struct lws_protocols protocols[] = {\n\t{ \"lws-minimal-client\", callback_minimal, 0, 0, },\n\t{ NULL, NULL, 0, 0 }\n};\n\nstatic void\nsigint_handler(int sig)\n{\n\tinterrupted = 1;\n}\n\nint main(int argc, const char **argv)\n{\n\tstruct lws_context_creation_info info;\n\tconst char *p;\n\tint n = 0;\n\n\tsignal(SIGINT, sigint_handler);\n\tmemset(&info, 0, sizeof info);\n\tlws_cmdline_option_handle_builtin(argc, argv, &info);\n\n\tlwsl_user(\"LWS minimal ws client\\n\");\n\n\tinfo.options = LWS_SERVER_OPTION_DO_SSL_GLOBAL_INIT;\n\tinfo.port = CONTEXT_PORT_NO_LISTEN; /* we do not run any server */\n\tinfo.protocols = protocols;\n\n#if defined(LWS_WITH_MBEDTLS) || defined(USE_WOLFSSL)\n\t/*\n\t * OpenSSL uses the system trust store.  mbedTLS has to be told which\n\t * CA to trust explicitly.\n\t */\n\tinfo.client_ssl_ca_filepath = \"./libwebsockets.org.cer\";\n#endif\n\n\tif ((p = lws_cmdline_option(argc, argv, \"--protocol\")))\n\t\tpro = p;\n\n\tif ((p = lws_cmdline_option(argc, argv, \"-s\")))\n\t\tserver_address = p;\n\n\tif ((p = lws_cmdline_option(argc, argv, \"-p\")))\n\t\tport = atoi(p);\n\n\tif (lws_cmdline_option(argc, argv, \"-n\"))\n\t\tssl_connection &= ~LCCSCF_USE_SSL;\n\n\tif (lws_cmdline_option(argc, argv, \"-j\"))\n\t\tssl_connection |= LCCSCF_ALLOW_SELFSIGNED;\n\n\tif (lws_cmdline_option(argc, argv, \"-k\"))\n\t\tssl_connection |= LCCSCF_ALLOW_INSECURE;\n\n\tif (lws_cmdline_option(argc, argv, \"-m\"))\n\t\tssl_connection |= LCCSCF_SKIP_SERVER_CERT_HOSTNAME_CHECK;\n\n\tif (lws_cmdline_option(argc, argv, \"-e\"))\n\t\tssl_connection |= LCCSCF_ALLOW_EXPIRED;\n\n\tinfo.fd_limit_per_thread = 1 + 1 + 1;\n\n\tcontext = lws_create_context(&info);\n\tif (!context) {\n\t\tlwsl_err(\"lws init failed\\n\");\n\t\treturn 1;\n\t}\n\n\t/* schedule the first client connection attempt to happen immediately */\n\tlws_sul_schedule(context, 0, &mco.sul, connect_client, 1);\n\n\twhile (n >= 0 && !interrupted)\n\t\tn = lws_service(context, 0);\n\n\tlws_context_destroy(context);\n\tlwsl_user(\"Completed\\n\");\n\n\treturn 0;\n}\n",
			"file": "libwebsockets/minimal-examples/ws-client/minimal-ws-client/minimal-ws-client.c",
			"file_size": 5470,
			"file_write_time": 132774575772419894,
			"settings":
			{
				"buffer_size": 5470,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\n * lws-minimal-http-client\n *\n * Written in 2010-2019 by Andy Green <andy@warmcat.com>\n *\n * This file is made available under the Creative Commons CC0 1.0\n * Universal Public Domain Dedication.\n *\n * This demonstrates the a minimal http client using lws.\n *\n * It visits https://warmcat.com/ and receives the html page there.  You\n * can dump the page data by changing the #if 0 below.\n */\n\n#include <libwebsockets.h>\n#include <string.h>\n#include <signal.h>\n\nstatic int interrupted, bad = 1, status, conmon;\n#if defined(LWS_WITH_HTTP2)\nstatic int long_poll;\n#endif\nstatic struct lws *client_wsi;\nstatic const char *ba_user, *ba_password;\n\nstatic const lws_retry_bo_t retry = {\n\t.secs_since_valid_ping = 3,\n\t.secs_since_valid_hangup = 10,\n};\n\n#if defined(LWS_WITH_CONMON)\nvoid\ndump_conmon_data(struct lws *wsi)\n{\n\tconst struct addrinfo *ai;\n\tstruct lws_conmon cm;\n\tchar ads[48];\n\n\tlws_conmon_wsi_take(wsi, &cm);\n\n\tlws_sa46_write_numeric_address(&cm.peer46, ads, sizeof(ads));\n\tlwsl_notice(\"%s: peer %s, dns: %uus, sockconn: %uus, tls: %uus, txn_resp: %uus\\n\",\n\t\t    __func__, ads,\n\t\t    (unsigned int)cm.ciu_dns,\n\t\t    (unsigned int)cm.ciu_sockconn,\n\t\t    (unsigned int)cm.ciu_tls,\n\t\t    (unsigned int)cm.ciu_txn_resp);\n\n\tai = cm.dns_results_copy;\n\twhile (ai) {\n\t\tlws_sa46_write_numeric_address((lws_sockaddr46 *)ai->ai_addr, ads, sizeof(ads));\n\t\tlwsl_notice(\"%s: DNS %s\\n\", __func__, ads);\n\t\tai = ai->ai_next;\n\t}\n\n\t/*\n\t * This destroys the DNS list in the lws_conmon that we took\n\t * responsibility for when we used lws_conmon_wsi_take()\n\t */\n\n\tlws_conmon_release(&cm);\n}\n#endif\n\nstatic const char *ua = \"Mozilla/5.0 (X11; Linux x86_64) \"\n\t\t\t\"AppleWebKit/537.36 (KHTML, like Gecko) \"\n\t\t\t\"Chrome/51.0.2704.103 Safari/537.36\",\n\t\t  *acc = \"*/*\";\n\nstatic int\ncallback_http(struct lws *wsi, enum lws_callback_reasons reason,\n\t      void *user, void *in, size_t len)\n{\n\tswitch (reason) {\n\n\t/* because we are protocols[0] ... */\n\tcase LWS_CALLBACK_CLIENT_CONNECTION_ERROR:\n\t\tlwsl_err(\"CLIENT_CONNECTION_ERROR: %s\\n\",\n\t\t\t in ? (char *)in : \"(null)\");\n\t\tinterrupted = 1;\n\t\tbad = 3; /* connection failed before we could make connection */\n\t\tlws_cancel_service(lws_get_context(wsi));\n\n#if defined(LWS_WITH_CONMON)\n\tif (conmon)\n\t\tdump_conmon_data(wsi);\n#endif\n\t\tbreak;\n\n\tcase LWS_CALLBACK_ESTABLISHED_CLIENT_HTTP:\n\t\t{\n\t\t\tchar buf[128];\n\n\t\t\tlws_get_peer_simple(wsi, buf, sizeof(buf));\n\t\t\tstatus = (int)lws_http_client_http_response(wsi);\n\n\t\t\tlwsl_user(\"Connected to %s, http response: %d\\n\",\n\t\t\t\t\tbuf, status);\n\t\t}\n#if defined(LWS_WITH_HTTP2)\n\t\tif (long_poll) {\n\t\t\tlwsl_user(\"%s: Client entering long poll mode\\n\", __func__);\n\t\t\tlws_h2_client_stream_long_poll_rxonly(wsi);\n\t\t}\n#endif\n\n\t\tif (lws_fi_user_wsi_fi(wsi, \"user_reject_at_est\"))\n\t\t\treturn -1;\n\n\t\tbreak;\n\n\t/* you only need this if you need to do Basic Auth */\n\tcase LWS_CALLBACK_CLIENT_APPEND_HANDSHAKE_HEADER:\n\t{\n\t\tunsigned char **p = (unsigned char **)in, *end = (*p) + len;\n\n\t\tif (lws_add_http_header_by_token(wsi, WSI_TOKEN_HTTP_USER_AGENT,\n\t\t\t\t(unsigned char *)ua, (int)strlen(ua), p, end))\n\t\t\treturn -1;\n\n\t\tif (lws_add_http_header_by_token(wsi, WSI_TOKEN_HTTP_ACCEPT,\n\t\t\t\t(unsigned char *)acc, (int)strlen(acc), p, end))\n\t\t\treturn -1;\n#if defined(LWS_WITH_HTTP_BASIC_AUTH)\n\t\t{\n\t\tchar b[128];\n\n\t\tif (!ba_user || !ba_password)\n\t\t\tbreak;\n\n\t\tif (lws_http_basic_auth_gen(ba_user, ba_password, b, sizeof(b)))\n\t\t\tbreak;\n\t\tif (lws_add_http_header_by_token(wsi, WSI_TOKEN_HTTP_AUTHORIZATION,\n\t\t\t\t(unsigned char *)b, (int)strlen(b), p, end))\n\t\t\treturn -1;\n\t\t}\n#endif\n\t\tbreak;\n\t}\n\n\t/* chunks of chunked content, with header removed */\n\tcase LWS_CALLBACK_RECEIVE_CLIENT_HTTP_READ:\n\t\tlwsl_user(\"RECEIVE_CLIENT_HTTP_READ: read %d\\n\", (int)len);\n#if defined(LWS_WITH_HTTP2)\n\t\tif (long_poll) {\n\t\t\tchar dotstar[128];\n\t\t\tlws_strnncpy(dotstar, (const char *)in, len,\n\t\t\t\t     sizeof(dotstar));\n\t\t\tlwsl_notice(\"long poll rx: %d '%s'\\n\", (int)len,\n\t\t\t\t\tdotstar);\n\t\t}\n#endif\n#if 0\n\t\tlwsl_hexdump_notice(in, len);\n#endif\n\n\t\treturn 0; /* don't passthru */\n\n\t/* uninterpreted http content */\n\tcase LWS_CALLBACK_RECEIVE_CLIENT_HTTP:\n\t\t{\n\t\t\tchar buffer[1024 + LWS_PRE];\n\t\t\tchar *px = buffer + LWS_PRE;\n\t\t\tint lenx = sizeof(buffer) - LWS_PRE;\n\n\t\t\tif (lws_fi_user_wsi_fi(wsi, \"user_reject_at_rx\"))\n\t\t\t\treturn -1;\n\n\t\t\tif (lws_http_client_read(wsi, &px, &lenx) < 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn 0; /* don't passthru */\n\n\tcase LWS_CALLBACK_COMPLETED_CLIENT_HTTP:\n\t\tlwsl_user(\"LWS_CALLBACK_COMPLETED_CLIENT_HTTP\\n\");\n\t\tinterrupted = 1;\n\t\tbad = status != 200;\n\t\tlws_cancel_service(lws_get_context(wsi)); /* abort poll wait */\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLOSED_CLIENT_HTTP:\n\t\tinterrupted = 1;\n\t\tbad = status != 200;\n\t\tlws_cancel_service(lws_get_context(wsi)); /* abort poll wait */\n#if defined(LWS_WITH_CONMON)\n\t\tif (conmon)\n\t\t\tdump_conmon_data(wsi);\n#endif\n\t\tbreak;\n\n\tdefault:\n\t\tbreak;\n\t}\n\n\treturn lws_callback_http_dummy(wsi, reason, user, in, len);\n}\n\nstatic const struct lws_protocols protocols[] = {\n\t{\n\t\t\"http\",\n\t\tcallback_http,\n\t\t0,\n\t\t0,\n\t},\n\t{ NULL, NULL, 0, 0 }\n};\n\nstatic void\nsigint_handler(int sig)\n{\n\tinterrupted = 1;\n}\n\nstruct args {\n\tint argc;\n\tconst char **argv;\n};\n\nstatic int\nsystem_notify_cb(lws_state_manager_t *mgr, lws_state_notify_link_t *link,\n\t\t   int current, int target)\n{\n\tstruct lws_context *context = mgr->parent;\n\tstruct lws_client_connect_info i;\n\tstruct args *a = lws_context_user(context);\n\tconst char *p;\n\n\tif (current != LWS_SYSTATE_OPERATIONAL || target != LWS_SYSTATE_OPERATIONAL)\n\t\treturn 0;\n\n\tlwsl_info(\"%s: operational\\n\", __func__);\n\n\tmemset(&i, 0, sizeof i); /* otherwise uninitialized garbage */\n\ti.context = context;\n\tif (!lws_cmdline_option(a->argc, a->argv, \"-n\")) {\n\t\ti.ssl_connection = LCCSCF_USE_SSL;\n#if defined(LWS_WITH_HTTP2)\n\t\t/* requires h2 */\n\t\tif (lws_cmdline_option(a->argc, a->argv, \"--long-poll\")) {\n\t\t\tlwsl_user(\"%s: long poll mode\\n\", __func__);\n\t\t\tlong_poll = 1;\n\t\t}\n#endif\n\t}\n\n\tif (lws_cmdline_option(a->argc, a->argv, \"-l\")) {\n\t\ti.port = 7681;\n\t\ti.address = \"localhost\";\n\t\ti.ssl_connection |= LCCSCF_ALLOW_SELFSIGNED;\n\t} else {\n\t\ti.port = 443;\n\t\ti.address = \"warmcat.com\";\n\t}\n\n\tif (lws_cmdline_option(a->argc, a->argv, \"--nossl\"))\n\t\ti.ssl_connection = 0;\n\n\ti.ssl_connection |= LCCSCF_H2_QUIRK_OVERFLOWS_TXCR |\n\t\t\t    LCCSCF_H2_QUIRK_NGHTTP2_END_STREAM;\n\n\ti.alpn = \"h2\";\n\tif (lws_cmdline_option(a->argc, a->argv, \"--h1\"))\n\t\ti.alpn = \"http/1.1\";\n\n\tif (lws_cmdline_option(a->argc, a->argv, \"--h2-prior-knowledge\"))\n\t\ti.ssl_connection |= LCCSCF_H2_PRIOR_KNOWLEDGE;\n\n\tif ((p = lws_cmdline_option(a->argc, a->argv, \"-p\")))\n\t\ti.port = atoi(p);\n\n\tif ((p = lws_cmdline_option(a->argc, a->argv, \"--user\")))\n\t\tba_user = p;\n\tif ((p = lws_cmdline_option(a->argc, a->argv, \"--password\")))\n\t\tba_password = p;\n\n\tif (lws_cmdline_option(a->argc, a->argv, \"-j\"))\n\t\ti.ssl_connection |= LCCSCF_ALLOW_SELFSIGNED;\n\n\tif (lws_cmdline_option(a->argc, a->argv, \"-k\"))\n\t\ti.ssl_connection |= LCCSCF_ALLOW_INSECURE;\n\n\tif (lws_cmdline_option(a->argc, a->argv, \"-m\"))\n\t\ti.ssl_connection |= LCCSCF_SKIP_SERVER_CERT_HOSTNAME_CHECK;\n\n\tif (lws_cmdline_option(a->argc, a->argv, \"-e\"))\n\t\ti.ssl_connection |= LCCSCF_ALLOW_EXPIRED;\n\n\tif ((p = lws_cmdline_option(a->argc, a->argv, \"-f\"))) {\n\t\ti.ssl_connection |= LCCSCF_H2_MANUAL_RXFLOW;\n\t\ti.manual_initial_tx_credit = atoi(p);\n\t\tlwsl_notice(\"%s: manual peer tx credit %d\\n\", __func__,\n\t\t\t\ti.manual_initial_tx_credit);\n\t}\n\n#if defined(LWS_WITH_CONMON)\n\tif (lws_cmdline_option(a->argc, a->argv, \"--conmon\")) {\n\t\ti.ssl_connection |= LCCSCF_CONMON;\n\t\tconmon = 1;\n\t}\n#endif\n\n\t/* the default validity check is 5m / 5m10s... -v = 3s / 10s */\n\n\tif (lws_cmdline_option(a->argc, a->argv, \"-v\"))\n\t\ti.retry_and_idle_policy = &retry;\n\n\tif ((p = lws_cmdline_option(a->argc, a->argv, \"--server\")))\n\t\ti.address = p;\n\n\tif ((p = lws_cmdline_option(a->argc, a->argv, \"--path\")))\n\t\ti.path = p;\n\telse\n\t\ti.path = \"/\";\n\n\ti.host = i.address;\n\ti.origin = i.address;\n\ti.method = \"GET\";\n\n\ti.protocol = protocols[0].name;\n\ti.pwsi = &client_wsi;\n\ti.fi_wsi_name = \"user\";\n\n\tif (!lws_client_connect_via_info(&i)) {\n\t\tlwsl_err(\"Client creation failed\\n\");\n\t\tinterrupted = 1;\n\t\tbad = 2; /* could not even start client connection */\n\t\tlws_cancel_service(context);\n\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nint main(int argc, const char **argv)\n{\n\tlws_state_notify_link_t notifier = { {0}, system_notify_cb, \"app\" };\n\tlws_state_notify_link_t *na[] = { &notifier, NULL };\n\tstruct lws_context_creation_info info;\n\tstruct lws_context *context;\n\tint n = 0, expected = 0;\n\tstruct args args;\n\tconst char *p;\n\t// uint8_t memcert[4096];\n\n\targs.argc = argc;\n\targs.argv = argv;\n\n\tsignal(SIGINT, sigint_handler);\n\n\tmemset(&info, 0, sizeof info); /* otherwise uninitialized garbage */\n\tlws_cmdline_option_handle_builtin(argc, argv, &info);\n\n\tlwsl_user(\"LWS minimal http client [-d<verbosity>] [-l] [--h1]\\n\");\n\n\tinfo.options = LWS_SERVER_OPTION_DO_SSL_GLOBAL_INIT |\n\t\t       LWS_SERVER_OPTION_H2_JUST_FIX_WINDOW_UPDATE_OVERFLOW;\n\tinfo.port = CONTEXT_PORT_NO_LISTEN; /* we do not run any server */\n\tinfo.protocols = protocols;\n\tinfo.user = &args;\n\tinfo.register_notifier_list = na;\n\tinfo.connect_timeout_secs = 30;\n\n\t/*\n\t * since we know this lws context is only ever going to be used with\n\t * one client wsis / fds / sockets at a time, let lws know it doesn't\n\t * have to use the default allocations for fd tables up to ulimit -n.\n\t * It will just allocate for 1 internal and 1 (+ 1 http2 nwsi) that we\n\t * will use.\n\t */\n\tinfo.fd_limit_per_thread = 1 + 1 + 1;\n\n#if defined(LWS_WITH_MBEDTLS) || defined(USE_WOLFSSL)\n\t/*\n\t * OpenSSL uses the system trust store.  mbedTLS has to be told which\n\t * CA to trust explicitly.\n\t */\n\tinfo.client_ssl_ca_filepath = \"./warmcat.com.cer\";\n#endif\n#if 0\n\tn = open(\"./warmcat.com.cer\", O_RDONLY);\n\tif (n >= 0) {\n\t\tinfo.client_ssl_ca_mem_len = read(n, memcert, sizeof(memcert));\n\t\tinfo.client_ssl_ca_mem = memcert;\n\t\tclose(n);\n\t\tn = 0;\n\t\tmemcert[info.client_ssl_ca_mem_len++] = '\\0';\n\t}\n#endif\n\tcontext = lws_create_context(&info);\n\tif (!context) {\n\t\tlwsl_err(\"lws init failed\\n\");\n\t\tbad = 5;\n\t\tgoto bail;\n\t}\n\n\twhile (n >= 0 && !interrupted)\n\t\tn = lws_service(context, 0);\n\n\tlws_context_destroy(context);\n\nbail:\n\tif ((p = lws_cmdline_option(argc, argv, \"--expected-exit\")))\n\t\texpected = atoi(p);\n\n\tif (bad == expected) {\n\t\tlwsl_user(\"Completed: OK (seen expected %d)\\n\", expected);\n\t\treturn 0;\n\t} else\n\t\tlwsl_err(\"Completed: failed: exit %d, expected %d\\n\", bad, expected);\n\n\treturn 1;\n}\n",
			"file": "libwebsockets/minimal-examples/http-client/minimal-http-client/minimal-http-client.c",
			"file_size": 10359,
			"file_write_time": 132774575772059894,
			"settings":
			{
				"buffer_size": 10359,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libwebsockets/test-apps/test-client.c",
			"settings":
			{
				"buffer_size": 22790,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAw0gAAAAAAADDSAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "/*\n * lws-minimal-http-client-attach\n *\n * Written in 2010-2019 by Andy Green <andy@warmcat.com>\n *\n * This file is made available under the Creative Commons CC0 1.0\n * Universal Public Domain Dedication.\n *\n * This demonstrates how to use the lws_system (*attach) api to allow a\n * different thread to arrange to join an existing lws event loop safely.  The\n * attached stuff does an http client GET from the lws event loop, even though\n * it was originally requested from a different thread than the lws event loop.\n */\n\n#include <libwebsockets.h>\n#include <string.h>\n#include <signal.h>\n#if defined(WIN32)\n#define HAVE_STRUCT_TIMESPEC\n#if defined(pid_t)\n#undef pid_t\n#endif\n#endif\n#include <pthread.h>\n\nstatic struct lws_context *context;\nstatic pthread_t lws_thread;\nstatic pthread_mutex_t lock;\nstatic int interrupted, bad = 1, status;\n\nstatic int\ncallback_http(struct lws *wsi, enum lws_callback_reasons reason,\n\t      void *user, void *in, size_t len)\n{\n\tswitch (reason) {\n\n\t/* because we are protocols[0] ... */\n\tcase LWS_CALLBACK_CLIENT_CONNECTION_ERROR:\n\t\tlwsl_err(\"CLIENT_CONNECTION_ERROR: %s\\n\",\n\t\t\t in ? (char *)in : \"(null)\");\n\t\tinterrupted = 1;\n\t\tbreak;\n\n\tcase LWS_CALLBACK_ESTABLISHED_CLIENT_HTTP:\n\t\t{\n\t\t\tchar buf[128];\n\n\t\t\tlws_get_peer_simple(wsi, buf, sizeof(buf));\n\t\t\tstatus = (int)lws_http_client_http_response(wsi);\n\n\t\t\tlwsl_user(\"Connected to %s, http response: %d\\n\",\n\t\t\t\t\tbuf, status);\n\t\t}\n\t\tbreak;\n\n\t/* chunks of chunked content, with header removed */\n\tcase LWS_CALLBACK_RECEIVE_CLIENT_HTTP_READ:\n\t\tlwsl_user(\"RECEIVE_CLIENT_HTTP_READ: read %d\\n\", (int)len);\n\n#if 0  /* enable to dump the html */\n\t\t{\n\t\t\tconst char *p = in;\n\n\t\t\twhile (len--)\n\t\t\t\tif (*p < 0x7f)\n\t\t\t\t\tputchar(*p++);\n\t\t\t\telse\n\t\t\t\t\tputchar('.');\n\t\t}\n#endif\n\t\treturn 0; /* don't passthru */\n\n\t/* uninterpreted http content */\n\tcase LWS_CALLBACK_RECEIVE_CLIENT_HTTP:\n\t\t{\n\t\t\tchar buffer[1024 + LWS_PRE];\n\t\t\tchar *px = buffer + LWS_PRE;\n\t\t\tint lenx = sizeof(buffer) - LWS_PRE;\n\n\t\t\tif (lws_http_client_read(wsi, &px, &lenx) < 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn 0; /* don't passthru */\n\n\tcase LWS_CALLBACK_COMPLETED_CLIENT_HTTP:\n\t\tlwsl_user(\"LWS_CALLBACK_COMPLETED_CLIENT_HTTP\\n\");\n\t\tinterrupted = 1;\n\t\tbad = status != 200;\n\t\tlws_cancel_service(lws_get_context(wsi)); /* abort poll wait */\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLOSED_CLIENT_HTTP:\n\t\tinterrupted = 1;\n\t\tbad = status != 200;\n\t\tlws_cancel_service(lws_get_context(wsi)); /* abort poll wait */\n\t\tbreak;\n\n\tdefault:\n\t\tbreak;\n\t}\n\n\treturn lws_callback_http_dummy(wsi, reason, user, in, len);\n}\n\nstatic const struct lws_protocols protocols[] = {\n\t{\n\t\t\"http\",\n\t\tcallback_http,\n\t\t0,\n\t\t0,\n\t},\n\t{ NULL, NULL, 0, 0 }\n};\n\nvoid sigint_handler(int sig)\n{\n\tinterrupted = 1;\n}\n\nstatic void\nattach_callback(struct lws_context *context, int tsi, void *opaque)\n{\n\tstruct lws_client_connect_info i;\n\n\t/*\n\t * Even though it was asked for from a different thread, we are called\n\t * back by lws from the lws event loop thread context\n\t *\n\t * We can set up our operations on the lws event loop and return so\n\t * they can happen asynchronously\n\t */\n\n\tmemset(&i, 0, sizeof i); /* otherwise uninitialized garbage */\n\ti.context = context;\n\ti.ssl_connection = LCCSCF_USE_SSL;\n\ti.ssl_connection |= LCCSCF_H2_QUIRK_OVERFLOWS_TXCR |\n\t\t\t    LCCSCF_H2_QUIRK_NGHTTP2_END_STREAM;\n\ti.port = 443;\n\ti.address = \"warmcat.com\";\n\ti.path = \"/\";\n\ti.host = i.address;\n\ti.origin = i.address;\n\ti.method = \"GET\";\n\n\ti.protocol = protocols[0].name;\n\n\tlws_client_connect_via_info(&i);\n}\n\n\nstatic int\nlws_attach_with_pthreads_locking(struct lws_context *context, int tsi,\n\t\t\t\t lws_attach_cb_t cb, lws_system_states_t state,\n\t\t\t\t void *opaque, struct lws_attach_item **get)\n{\n\tint n;\n\n\tpthread_mutex_lock(&lock);\n\t/*\n\t * We just provide system-specific locking around the lws non-threadsafe\n\t * helper that adds and removes things from the pt list\n\t */\n\tn = __lws_system_attach(context, tsi, cb, state, opaque, get);\n\tpthread_mutex_unlock(&lock);\n\n\treturn n;\n}\n\n\nlws_system_ops_t ops = {\n\t.attach = lws_attach_with_pthreads_locking\n};\n\n/*\n * We made this into a different thread to model it being run from completely\n * different codebase that's all linked together\n */\n\nstatic void *\nlws_create(void *d)\n{\n\tstruct lws_context_creation_info info;\n\n       lwsl_user(\"%s: tid %p\\n\", __func__, (void *)(intptr_t)pthread_self());\n\n\tmemset(&info, 0, sizeof info); /* otherwise uninitialized garbage */\n\tinfo.port = CONTEXT_PORT_NO_LISTEN;\n\tinfo.options = LWS_SERVER_OPTION_DO_SSL_GLOBAL_INIT;\n\tinfo.system_ops = &ops;\n\tinfo.protocols = protocols;\n\n\tcontext = lws_create_context(&info);\n\tif (!context) {\n\t\tlwsl_err(\"lws init failed\\n\");\n\t\tgoto bail;\n\t}\n\n\t/* start the event loop */\n\n\twhile (!interrupted)\n\t\tif (lws_service(context, 0))\n\t\t\tinterrupted = 1;\n\n\tlws_context_destroy(context);\n\nbail:\n\tpthread_exit(NULL);\n\n\treturn NULL;\n}\n\nint main(int argc, const char **argv)\n{\n\tint n = 0, logs = LLL_USER | LLL_ERR | LLL_WARN | LLL_NOTICE;\n\tconst char *p;\n\tvoid *retval;\n\n\tsignal(SIGINT, sigint_handler);\n\n\tif ((p = lws_cmdline_option(argc, argv, \"-d\")))\n\t\tlogs = atoi(p);\n\n\tlws_set_log_level(logs, NULL);\n\tlwsl_user(\"LWS minimal http client attach\\n\");\n\n\tpthread_mutex_init(&lock, NULL);\n\n\t/*\n\t * The idea of the example is we're going to split the lws context and\n\t * event loop off to be created from its own thread... this is like it\n\t * was actually started by some completely different code...\n\t */\n\n\tif (pthread_create(&lws_thread, NULL, lws_create, NULL)) {\n\t\tlwsl_err(\"thread creation failed\\n\");\n\t\tgoto bail1;\n\t}\n\n\t/*\n\t * Now on the original / different thread representing a different\n\t * codebase that wants to join this existing event loop, we'll ask to\n\t * get a callback from the event loop context when the event loop\n\t * thread is operational.  We have to wait around a bit because we\n\t * may run before the lws context was created.\n\t */\n\n\twhile (!context && n++ < 30)\n\t\tusleep(10000);\n\n\tif (!context) {\n\t\tlwsl_err(\"%s: context didn't start\\n\", __func__);\n\t\tgoto bail;\n\t}\n\n\t/*\n\t * From our different, non event loop thread, ask for our attach\n\t * callback to get called when lws system state is OPERATIONAL\n\t */\n\n\tlws_system_get_ops(context)->attach(context, 0, attach_callback,\n\t\t\t\t\t    LWS_SYSTATE_OPERATIONAL,\n\t\t\t\t\t    NULL, NULL);\n\n\t/*\n\t * That's all we wanted to do with our thread.  Just wait for the lws\n\t * thread to exit as well.\n\t */\n\nbail:\n\tpthread_join(lws_thread, &retval);\nbail1:\n\tpthread_mutex_destroy(&lock);\n\n\tlwsl_user(\"%s: finished\\n\", __func__);\n\n\treturn 0;\n}\n",
			"file": "libwebsockets/minimal-examples/http-client/minimal-http-client-attach/minimal-http-client-attach.c",
			"file_size": 6468,
			"file_write_time": 132774575772019894,
			"settings":
			{
				"buffer_size": 6468,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\n * lws-minimal-http-client-h2-rxflow\n *\n * Written in 2010-2019 by Andy Green <andy@warmcat.com>\n *\n * This file is made available under the Creative Commons CC0 1.0\n * Universal Public Domain Dedication.\n *\n * This demonstrates the a minimal http client using lws.\n *\n * It visits https://warmcat.com/ and receives the html page there.  You\n * can dump the page data by changing the #if 0 below.\n */\n\n#include <libwebsockets.h>\n#include <string.h>\n#include <signal.h>\n\nstatic int interrupted, bad = 1, status, each = 1024;\nstatic struct lws *client_wsi;\n\nstatic const lws_retry_bo_t retry = {\n\t.secs_since_valid_ping = 3,\n\t.secs_since_valid_hangup = 10,\n};\n\nstruct pss {\n\tlws_sorted_usec_list_t sul;\n\tstruct lws *wsi;\n};\n\n/*\n * Once we're established, we ask the server for another 1KB every 250ms\n * until we have it all.\n */\n\nstatic void\ndrain_cb(lws_sorted_usec_list_t *sul)\n{\n\tstruct pss *pss = lws_container_of(sul, struct pss, sul);\n\n\tlws_wsi_tx_credit(pss->wsi, LWSTXCR_PEER_TO_US, each);\n\n\tlws_sul_schedule(lws_get_context(pss->wsi), 0, &pss->sul, drain_cb,\n\t\t\t 250 * LWS_US_PER_MS);\n}\n\n\nstatic int\ncallback_http(struct lws *wsi, enum lws_callback_reasons reason,\n\t      void *user, void *in, size_t len)\n{\n\tstruct pss *pss = (struct pss *)user;\n\n\tswitch (reason) {\n\n\t/* because we are protocols[0] ... */\n\tcase LWS_CALLBACK_CLIENT_CONNECTION_ERROR:\n\t\tlwsl_err(\"CLIENT_CONNECTION_ERROR: %s\\n\",\n\t\t\t in ? (char *)in : \"(null)\");\n\t\tinterrupted = 1;\n\t\tbreak;\n\n\tcase LWS_CALLBACK_ESTABLISHED_CLIENT_HTTP:\n\t\t{\n\t\t\tchar buf[128];\n\n\t\t\tlws_get_peer_simple(wsi, buf, sizeof(buf));\n\t\t\tstatus = (int)lws_http_client_http_response(wsi);\n\n\t\t\tlwsl_user(\"Connected to %s, http response: %d\\n\",\n\t\t\t\t\tbuf, status);\n\t\t}\n\t\tpss->wsi = wsi;\n\t\tlws_sul_schedule(lws_get_context(wsi), 0, &pss->sul, drain_cb,\n\t\t\t\t 250 * LWS_US_PER_MS);\n\t\tbreak;\n\n\t/* chunks of chunked content, with header removed */\n\tcase LWS_CALLBACK_RECEIVE_CLIENT_HTTP_READ:\n\t\tlwsl_user(\"RECEIVE_CLIENT_HTTP_READ: read %d\\n\", (int)len);\n\n#if 0  /* enable to dump the html */\n\t\t{\n\t\t\tconst char *p = in;\n\n\t\t\twhile (len--)\n\t\t\t\tif (*p < 0x7f)\n\t\t\t\t\tputchar(*p++);\n\t\t\t\telse\n\t\t\t\t\tputchar('.');\n\t\t}\n#endif\n\t\treturn 0; /* don't passthru */\n\n\t/* uninterpreted http content */\n\tcase LWS_CALLBACK_RECEIVE_CLIENT_HTTP:\n\t\t{\n\t\t\tchar buffer[1024 + LWS_PRE];\n\t\t\tchar *px = buffer + LWS_PRE;\n\t\t\tint lenx = sizeof(buffer) - LWS_PRE;\n\n\t\t\tif (lws_http_client_read(wsi, &px, &lenx) < 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn 0; /* don't passthru */\n\n\tcase LWS_CALLBACK_COMPLETED_CLIENT_HTTP:\n\t\tlwsl_user(\"LWS_CALLBACK_COMPLETED_CLIENT_HTTP\\n\");\n\t\tinterrupted = 1;\n\t\tbad = status != 200;\n\t\tlws_cancel_service(lws_get_context(wsi)); /* abort poll wait */\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLOSED_CLIENT_HTTP:\n\t\tinterrupted = 1;\n\t\tbad = status != 200;\n\t\tlws_sul_cancel(&pss->sul);\n\t\tlws_cancel_service(lws_get_context(wsi)); /* abort poll wait */\n\t\tbreak;\n\n\tdefault:\n\t\tbreak;\n\t}\n\n\treturn lws_callback_http_dummy(wsi, reason, user, in, len);\n}\n\nstatic const struct lws_protocols protocols[] = {\n\t{\n\t\t\"http\",\n\t\tcallback_http,\n\t\tsizeof(struct pss),\n\t\t0,\n\t},\n\t{ NULL, NULL, 0, 0 }\n};\n\nstatic void\nsigint_handler(int sig)\n{\n\tinterrupted = 1;\n}\n\nstruct args {\n\tint argc;\n\tconst char **argv;\n};\n\nstatic int\nsystem_notify_cb(lws_state_manager_t *mgr, lws_state_notify_link_t *link,\n\t\t   int current, int target)\n{\n\tstruct lws_context *context = mgr->parent;\n\tstruct lws_client_connect_info i;\n\tstruct args *a = lws_context_user(context);\n\tconst char *p;\n\n\tif (current != LWS_SYSTATE_OPERATIONAL || target != LWS_SYSTATE_OPERATIONAL)\n\t\treturn 0;\n\n\tlwsl_info(\"%s: operational\\n\", __func__);\n\n\tmemset(&i, 0, sizeof i); /* otherwise uninitialized garbage */\n\ti.context = context;\n\tif (!lws_cmdline_option(a->argc, a->argv, \"-n\"))\n\t\ti.ssl_connection = LCCSCF_USE_SSL;\n\n\tif (lws_cmdline_option(a->argc, a->argv, \"-l\")) {\n\t\ti.port = 7681;\n\t\ti.address = \"localhost\";\n\t\ti.ssl_connection |= LCCSCF_ALLOW_SELFSIGNED;\n\t} else {\n\t\ti.port = 443;\n\t\ti.address = \"warmcat.com\";\n\t}\n\n\tif (lws_cmdline_option(a->argc, a->argv, \"--nossl\"))\n\t\ti.ssl_connection = 0;\n\n\ti.ssl_connection |= LCCSCF_H2_QUIRK_OVERFLOWS_TXCR |\n\t\t\t    LCCSCF_H2_QUIRK_NGHTTP2_END_STREAM;\n\n\ti.alpn = \"h2\";\n\tif (lws_cmdline_option(a->argc, a->argv, \"--h1\"))\n\t\ti.alpn = \"http/1.1\";\n\n\tif ((p = lws_cmdline_option(a->argc, a->argv, \"-p\")))\n\t\ti.port = atoi(p);\n\n\tif (lws_cmdline_option(a->argc, a->argv, \"-j\"))\n\t\ti.ssl_connection |= LCCSCF_ALLOW_SELFSIGNED;\n\n\tif (lws_cmdline_option(a->argc, a->argv, \"-k\"))\n\t\ti.ssl_connection |= LCCSCF_ALLOW_INSECURE;\n\n\tif (lws_cmdline_option(a->argc, a->argv, \"-m\"))\n\t\ti.ssl_connection |= LCCSCF_SKIP_SERVER_CERT_HOSTNAME_CHECK;\n\n\tif (lws_cmdline_option(a->argc, a->argv, \"-e\"))\n\t\ti.ssl_connection |= LCCSCF_ALLOW_EXPIRED;\n\n\tif ((p = lws_cmdline_option(a->argc, a->argv, \"-f\"))) {\n\t\ti.ssl_connection |= LCCSCF_H2_MANUAL_RXFLOW;\n\t\ti.manual_initial_tx_credit = atoi(p);\n\t\tlwsl_notice(\"%s: manual peer tx credit %d\\n\", __func__,\n\t\t\t\ti.manual_initial_tx_credit);\n\t}\n\n\tif ((p = lws_cmdline_option(a->argc, a->argv, \"--each\")))\n\t\teach = atoi(p);\n\n\t/* the default validity check is 5m / 5m10s... -v = 3s / 10s */\n\n\tif (lws_cmdline_option(a->argc, a->argv, \"-v\"))\n\t\ti.retry_and_idle_policy = &retry;\n\n\tif ((p = lws_cmdline_option(a->argc, a->argv, \"--server\")))\n\t\ti.address = p;\n\n\tif ((p = lws_cmdline_option(a->argc, a->argv, \"--path\")))\n\t\ti.path = p;\n\telse\n\t\ti.path = \"/\";\n\n\ti.host = i.address;\n\ti.origin = i.address;\n\ti.method = \"GET\";\n\n\ti.protocol = protocols[0].name;\n\ti.pwsi = &client_wsi;\n\n\treturn !lws_client_connect_via_info(&i);\n}\n\nint main(int argc, const char **argv)\n{\n\tlws_state_notify_link_t notifier = { {0}, system_notify_cb, \"app\" };\n\tlws_state_notify_link_t *na[] = { &notifier, NULL };\n\tstruct lws_context_creation_info info;\n\tstruct lws_context *context;\n\tstruct args args;\n\tint n = 0;\n\t// uint8_t memcert[4096];\n\n\targs.argc = argc;\n\targs.argv = argv;\n\n\tsignal(SIGINT, sigint_handler);\n\n\tmemset(&info, 0, sizeof info); /* otherwise uninitialized garbage */\n\tlws_cmdline_option_handle_builtin(argc, argv, &info);\n\n\tlwsl_user(\"LWS minimal http client [-d<verbosity>] [-l] [--h1]\\n\");\n\n\tinfo.options = LWS_SERVER_OPTION_DO_SSL_GLOBAL_INIT;\n\tinfo.port = CONTEXT_PORT_NO_LISTEN; /* we do not run any server */\n\tinfo.protocols = protocols;\n\tinfo.user = &args;\n\tinfo.register_notifier_list = na;\n\tinfo.timeout_secs = 10;\n\tinfo.connect_timeout_secs = 30;\n\n\t/*\n\t * since we know this lws context is only ever going to be used with\n\t * one client wsis / fds / sockets at a time, let lws know it doesn't\n\t * have to use the default allocations for fd tables up to ulimit -n.\n\t * It will just allocate for 1 internal and 1 (+ 1 http2 nwsi) that we\n\t * will use.\n\t */\n\tinfo.fd_limit_per_thread = 1 + 1 + 1;\n\n#if defined(LWS_WITH_MBEDTLS) || defined(USE_WOLFSSL)\n\t/*\n\t * OpenSSL uses the system trust store.  mbedTLS has to be told which\n\t * CA to trust explicitly.\n\t */\n\tinfo.client_ssl_ca_filepath = \"./warmcat.com.cer\";\n#endif\n#if 0\n\tn = open(\"./warmcat.com.cer\", O_RDONLY);\n\tif (n >= 0) {\n\t\tinfo.client_ssl_ca_mem_len = read(n, memcert, sizeof(memcert));\n\t\tinfo.client_ssl_ca_mem = memcert;\n\t\tclose(n);\n\t\tn = 0;\n\t\tmemcert[info.client_ssl_ca_mem_len++] = '\\0';\n\t}\n#endif\n\tcontext = lws_create_context(&info);\n\tif (!context) {\n\t\tlwsl_err(\"lws init failed\\n\");\n\t\treturn 1;\n\t}\n\n\twhile (n >= 0 && !interrupted)\n\t\tn = lws_service(context, 0);\n\n\tlws_context_destroy(context);\n\tlwsl_user(\"Completed: %s\\n\", bad ? \"failed\" : \"OK\");\n\n\treturn bad;\n}\n",
			"file": "libwebsockets/minimal-examples/http-client/minimal-http-client-h2-rxflow/minimal-http-client.c",
			"file_size": 7433,
			"file_write_time": 132774575772059894,
			"settings":
			{
				"buffer_size": 7433,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\n * lws-minimal-http-client\n *\n * Written in 2010-2019 by Andy Green <andy@warmcat.com>\n *\n * This file is made available under the Creative Commons CC0 1.0\n * Universal Public Domain Dedication.\n *\n * This demonstrates the a minimal http client using lws.\n *\n * It visits https://warmcat.com/ and receives the html page there.  You\n * can dump the page data by changing the #if 0 below.\n */\n\n#include <libwebsockets.h>\n#include <string.h>\n#include <signal.h>\n\nstatic int interrupted, bad = 1, status;\nstatic struct lws *client_wsi;\n\nstatic int\ncallback_http(struct lws *wsi, enum lws_callback_reasons reason,\n\t      void *user, void *in, size_t len)\n{\n\tchar val[32];\n\tint n;\n\n\tswitch (reason) {\n\n\t/* because we are protocols[0] ... */\n\tcase LWS_CALLBACK_CLIENT_CONNECTION_ERROR:\n\t\tlwsl_err(\"CLIENT_CONNECTION_ERROR: %s\\n\",\n\t\t\t in ? (char *)in : \"(null)\");\n\t\tclient_wsi = NULL;\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLIENT_APPEND_HANDSHAKE_HEADER:\n\t{\n\t\t unsigned char **p = (unsigned char **)in, *end = (*p) + len;\n\n\t\t /*\n\t\t  * How to send a custom header in the request to the server\n\t\t  */\n\n\t\t if (lws_add_http_header_by_name(wsi,\n\t\t\t\t (const unsigned char *)\"dnt\",\n\t\t\t\t (const unsigned char *)\"1\", 1, p, end))\n\t\t\t return -1;\n\t\tbreak;\n\t}\n\n\tcase LWS_CALLBACK_ESTABLISHED_CLIENT_HTTP:\n\t\tstatus = (int)lws_http_client_http_response(wsi);\n\t\tlwsl_user(\"Connected with server response: %d\\n\", status);\n\n\t\t/*\n\t\t * How to query custom headers (http 1.x only at the momemnt)\n\t\t *\n\t\t * warmcat.com sends a custom header \"test-custom-header\" for\n\t\t * testing, it has the fixed value \"hello\".\n\t\t */\n\n\t\tn = lws_hdr_custom_length(wsi, \"test-custom-header:\", 19);\n\t\tif (n < 0)\n\t\t\tlwsl_notice(\"%s: Can't find test-custom-header\\n\",\n\t\t\t\t    __func__);\n\t\telse {\n\t\t\tif (lws_hdr_custom_copy(wsi, val, sizeof(val),\n\t\t\t\t\t\t\"test-custom-header:\", 19) < 0)\n\t\t\t\tlwsl_notice(\"%s: custom header too long\\n\",\n\t\t\t\t\t    __func__);\n\t\t\telse\n\t\t\t\tlwsl_notice(\"%s: custom header: '%s'\\n\",\n\t\t\t\t\t\t__func__, val);\n\t\t}\n\t\tbreak;\n\n\t/* chunks of chunked content, with header removed */\n\tcase LWS_CALLBACK_RECEIVE_CLIENT_HTTP_READ:\n\t\tlwsl_user(\"RECEIVE_CLIENT_HTTP_READ: read %d\\n\", (int)len);\n#if 0  /* enable to dump the html */\n\t\t{\n\t\t\tconst char *p = in;\n\n\t\t\twhile (len--)\n\t\t\t\tif (*p < 0x7f)\n\t\t\t\t\tputchar(*p++);\n\t\t\t\telse\n\t\t\t\t\tputchar('.');\n\t\t}\n#endif\n\t\treturn 0; /* don't passthru */\n\n\t/* uninterpreted http content */\n\tcase LWS_CALLBACK_RECEIVE_CLIENT_HTTP:\n\t\t{\n\t\t\tchar buffer[1024 + LWS_PRE];\n\t\t\tchar *px = buffer + LWS_PRE;\n\t\t\tint lenx = sizeof(buffer) - LWS_PRE;\n\n\t\t\tif (lws_http_client_read(wsi, &px, &lenx) < 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn 0; /* don't passthru */\n\n\tcase LWS_CALLBACK_COMPLETED_CLIENT_HTTP:\n\t\tlwsl_user(\"LWS_CALLBACK_COMPLETED_CLIENT_HTTP\\n\");\n\t\tclient_wsi = NULL;\n\t\tbad = status != 200;\n\t\tlws_cancel_service(lws_get_context(wsi)); /* abort poll wait */\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLOSED_CLIENT_HTTP:\n\t\tclient_wsi = NULL;\n\t\tbad = status != 200;\n\t\tlws_cancel_service(lws_get_context(wsi)); /* abort poll wait */\n\t\tbreak;\n\n\tdefault:\n\t\tbreak;\n\t}\n\n\treturn lws_callback_http_dummy(wsi, reason, user, in, len);\n}\n\nstatic const struct lws_protocols protocols[] = {\n\t{\n\t\t\"http\",\n\t\tcallback_http,\n\t\t0,\n\t\t0,\n\t},\n\t{ NULL, NULL, 0, 0 }\n};\n\nstatic void\nsigint_handler(int sig)\n{\n\tinterrupted = 1;\n}\n\nint main(int argc, const char **argv)\n{\n\tstruct lws_context_creation_info info;\n\tstruct lws_client_connect_info i;\n\tstruct lws_context *context;\n\tconst char *p;\n\tint n = 0, logs = LLL_USER | LLL_ERR | LLL_WARN | LLL_NOTICE\n\t\t   /*\n\t\t    * For LLL_ verbosity above NOTICE to be built into lws,\n\t\t    * lws must have been configured and built with\n\t\t    * -DCMAKE_BUILD_TYPE=DEBUG instead of =RELEASE\n\t\t    *\n\t\t    * | LLL_INFO   | LLL_PARSER  | LLL_HEADER | LLL_EXT |\n\t\t    *   LLL_CLIENT | LLL_LATENCY | LLL_DEBUG\n\t\t    */ ;\n\n\tsignal(SIGINT, sigint_handler);\n\n\tif ((p = lws_cmdline_option(argc, argv, \"-d\")))\n\t\tlogs = atoi(p);\n\n\tlws_set_log_level(logs, NULL);\n\tlwsl_user(\"LWS minimal http client Custom Headers [-d<verbosity>] [-l] [--h1]\\n\");\n\n\tmemset(&info, 0, sizeof info); /* otherwise uninitialized garbage */\n\tinfo.options = LWS_SERVER_OPTION_DO_SSL_GLOBAL_INIT;\n\tinfo.port = CONTEXT_PORT_NO_LISTEN; /* we do not run any server */\n\tinfo.protocols = protocols;\n\t/*\n\t * since we know this lws context is only ever going to be used with\n\t * one client wsis / fds / sockets at a time, let lws know it doesn't\n\t * have to use the default allocations for fd tables up to ulimit -n.\n\t * It will just allocate for 1 internal and 1 (+ 1 http2 nwsi) that we\n\t * will use.\n\t */\n\tinfo.fd_limit_per_thread = 1 + 1 + 1;\n\n#if defined(LWS_WITH_MBEDTLS) || defined(USE_WOLFSSL)\n\t/*\n\t * OpenSSL uses the system trust store.  mbedTLS has to be told which\n\t * CA to trust explicitly.\n\t */\n\tinfo.client_ssl_ca_filepath = \"./warmcat.com.cer\";\n#endif\n\n\tcontext = lws_create_context(&info);\n\tif (!context) {\n\t\tlwsl_err(\"lws init failed\\n\");\n\t\treturn 1;\n\t}\n\n\tmemset(&i, 0, sizeof i); /* otherwise uninitialized garbage */\n\ti.context = context;\n\n\tif (!lws_cmdline_option(argc, argv, \"-n\"))\n\t\ti.ssl_connection = LCCSCF_USE_SSL;\n\n\tif (lws_cmdline_option(argc, argv, \"-l\")) {\n\t\ti.port = 7681;\n\t\ti.address = \"localhost\";\n\t\ti.ssl_connection |= LCCSCF_ALLOW_SELFSIGNED;\n\t} else {\n\t\ti.port = 443;\n\t\ti.address = \"warmcat.com\";\n\t}\n\n\t/* currently custom headers receive only works with h1 */\n\ti.alpn = \"http/1.1\";\n\n\ti.path = \"/\";\n\ti.host = i.address;\n\ti.origin = i.address;\n\ti.method = \"GET\";\n\n\ti.protocol = protocols[0].name;\n\ti.pwsi = &client_wsi;\n\tlws_client_connect_via_info(&i);\n\n\twhile (n >= 0 && client_wsi && !interrupted)\n\t\tn = lws_service(context, 0);\n\n\tlws_context_destroy(context);\n\tlwsl_user(\"Completed: %s\\n\", bad ? \"failed\" : \"OK\");\n\n\treturn bad;\n}\n",
			"file": "libwebsockets/minimal-examples/http-client/minimal-http-client-custom-headers/minimal-http-client-custom-headers.c",
			"file_size": 5699,
			"file_write_time": 132774575772059894,
			"settings":
			{
				"buffer_size": 5699,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libwebsockets/include/libwebsockets/lws-client.h",
			"settings":
			{
				"buffer_size": 16011,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAfRAAAAAAAAB9EAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "/*\n * lws-minimal-http-client\n *\n * Written in 2010-2019 by Andy Green <andy@warmcat.com>\n *\n * This file is made available under the Creative Commons CC0 1.0\n * Universal Public Domain Dedication.\n *\n * This demonstrates the a minimal http client using lws.\n *\n * It visits https://warmcat.com/ and receives the html page there.  You\n * can dump the page data by changing the #if 0 below.\n */\n\n#include <libwebsockets.h>\n#include <string.h>\n#include <signal.h>\n\nstatic int interrupted, bad = 1, status;\nstatic struct lws *client_wsi;\n\nstatic int\ncallback_http(struct lws *wsi, enum lws_callback_reasons reason,\n\t      void *user, void *in, size_t len)\n{\n\tuint8_t buf[1280];\n\tunion lws_tls_cert_info_results *ci =\n\t\t(union lws_tls_cert_info_results *)buf;\n#if defined(LWS_HAVE_CTIME_R)\n\tchar date[32];\n#endif\n\n\tswitch (reason) {\n\n\t/* because we are protocols[0] ... */\n\tcase LWS_CALLBACK_CLIENT_CONNECTION_ERROR:\n\t\tlwsl_err(\"CLIENT_CONNECTION_ERROR: %s\\n\",\n\t\t\t in ? (char *)in : \"(null)\");\n\t\tclient_wsi = NULL;\n\t\tbreak;\n\n\tcase LWS_CALLBACK_ESTABLISHED_CLIENT_HTTP:\n\t\tstatus = (int)lws_http_client_http_response(wsi);\n\t\tlwsl_notice(\"lws_http_client_http_response %d\\n\", status);\n\n\t\tif (!lws_tls_peer_cert_info(wsi, LWS_TLS_CERT_INFO_COMMON_NAME,\n\t\t\t\t\t    ci, sizeof(buf) - sizeof(*ci)))\n\t\t\tlwsl_notice(\" Peer Cert CN        : %s\\n\", ci->ns.name);\n\n\t\tif (!lws_tls_peer_cert_info(wsi, LWS_TLS_CERT_INFO_ISSUER_NAME,\n\t\t\t\t\t    ci, sizeof(ci->ns.name)))\n\t\t\tlwsl_notice(\" Peer Cert issuer    : %s\\n\", ci->ns.name);\n\n\t\tif (!lws_tls_peer_cert_info(wsi, LWS_TLS_CERT_INFO_VALIDITY_FROM,\n\t\t\t\t\t    ci, 0))\n#if defined(LWS_HAVE_CTIME_R)\n\t\t\tlwsl_notice(\" Peer Cert Valid from: %s\", \n\t\t\t\t\t\tctime_r(&ci->time, date));\n#else\n\t\t\tlwsl_notice(\" Peer Cert Valid from: %s\", \n\t\t\t\t\t\tctime(&ci->time));\n#endif\n\t\tif (!lws_tls_peer_cert_info(wsi, LWS_TLS_CERT_INFO_VALIDITY_TO,\n\t\t\t\t\t    ci, 0))\n#if defined(LWS_HAVE_CTIME_R)\n\t\t\tlwsl_notice(\" Peer Cert Valid to  : %s\",\n\t\t\t\t\t\tctime_r(&ci->time, date));\n#else\n\t\t\tlwsl_notice(\" Peer Cert Valid to  : %s\",\n\t\t\t\t\t\tctime(&ci->time));\n#endif\n\t\tif (!lws_tls_peer_cert_info(wsi, LWS_TLS_CERT_INFO_USAGE,\n\t\t\t\t\t    ci, 0))\n\t\t\tlwsl_notice(\" Peer Cert usage bits: 0x%x\\n\", ci->usage);\n\t\tif (!lws_tls_peer_cert_info(wsi,\n\t\t\t\t\t    LWS_TLS_CERT_INFO_OPAQUE_PUBLIC_KEY,\n\t\t\t\t\t    ci, sizeof(buf) - sizeof(*ci))) {\n\t\t\tlwsl_notice(\" Peer Cert public key:\\n\");\n\t\t\tlwsl_hexdump_notice(ci->ns.name, (unsigned int)ci->ns.len);\n\t\t}\n\t\tbreak;\n\n\t/* chunks of chunked content, with header removed */\n\tcase LWS_CALLBACK_RECEIVE_CLIENT_HTTP_READ:\n\t\tlwsl_user(\"RECEIVE_CLIENT_HTTP_READ: read %d\\n\", (int)len);\n#if 0  /* enable to dump the html */\n\t\t{\n\t\t\tconst char *p = in;\n\n\t\t\twhile (len--)\n\t\t\t\tif (*p < 0x7f)\n\t\t\t\t\tputchar(*p++);\n\t\t\t\telse\n\t\t\t\t\tputchar('.');\n\t\t}\n#endif\n\t\treturn 0; /* don't passthru */\n\n\t/* uninterpreted http content */\n\tcase LWS_CALLBACK_RECEIVE_CLIENT_HTTP:\n\t\t{\n\t\t\tchar buffer[1024 + LWS_PRE];\n\t\t\tchar *px = buffer + LWS_PRE;\n\t\t\tint lenx = sizeof(buffer) - LWS_PRE;\n\n\t\t\tif (lws_http_client_read(wsi, &px, &lenx) < 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn 0; /* don't passthru */\n\n\tcase LWS_CALLBACK_COMPLETED_CLIENT_HTTP:\n\t\tlwsl_user(\"LWS_CALLBACK_COMPLETED_CLIENT_HTTP\\n\");\n\t\tclient_wsi = NULL;\n\t\tbad = status != 200;\n\t\tlws_cancel_service(lws_get_context(wsi)); /* abort poll wait */\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLOSED_CLIENT_HTTP:\n\t\tclient_wsi = NULL;\n\t\tbad = status != 200;\n\t\tlws_cancel_service(lws_get_context(wsi)); /* abort poll wait */\n\t\tbreak;\n\n\tdefault:\n\t\tbreak;\n\t}\n\n\treturn lws_callback_http_dummy(wsi, reason, user, in, len);\n}\n\nstatic const struct lws_protocols protocols[] = {\n\t{\n\t\t\"http\",\n\t\tcallback_http,\n\t\t0,\n\t\t0,\n\t},\n\t{ NULL, NULL, 0, 0 }\n};\n\nstatic void\nsigint_handler(int sig)\n{\n\tinterrupted = 1;\n}\n\nint main(int argc, const char **argv)\n{\n\tstruct lws_context_creation_info info;\n\tstruct lws_client_connect_info i;\n\tstruct lws_context *context;\n\tconst char *p;\n\tint n = 0, logs = LLL_USER | LLL_ERR | LLL_WARN | LLL_NOTICE\n\t\t   /*\n\t\t    * For LLL_ verbosity above NOTICE to be built into lws,\n\t\t    * lws must have been configured and built with\n\t\t    * -DCMAKE_BUILD_TYPE=DEBUG instead of =RELEASE\n\t\t    *\n\t\t    * | LLL_INFO   | LLL_PARSER  | LLL_HEADER | LLL_EXT |\n\t\t    *   LLL_CLIENT | LLL_LATENCY | LLL_DEBUG\n\t\t    */ ;\n\n\tsignal(SIGINT, sigint_handler);\n\n\tif ((p = lws_cmdline_option(argc, argv, \"-d\")))\n\t\tlogs = atoi(p);\n\n\tlws_set_log_level(logs, NULL);\n\tlwsl_user(\"LWS minimal http client [<-d <verbosity>] [-l] [--h1]\\n\");\n\n\tmemset(&info, 0, sizeof info); /* otherwise uninitialized garbage */\n\tinfo.options = LWS_SERVER_OPTION_DO_SSL_GLOBAL_INIT;\n\tinfo.port = CONTEXT_PORT_NO_LISTEN; /* we do not run any server */\n\tinfo.protocols = protocols;\n\t/*\n\t * since we know this lws context is only ever going to be used with\n\t * one client wsis / fds / sockets at a time, let lws know it doesn't\n\t * have to use the default allocations for fd tables up to ulimit -n.\n\t * It will just allocate for 1 internal and 1 (+ 1 http2 nwsi) that we\n\t * will use.\n\t */\n\tinfo.fd_limit_per_thread = 1 + 1 + 1;\n\n#if defined(LWS_WITH_MBEDTLS) || defined(USE_WOLFSSL)\n\t/*\n\t * OpenSSL uses the system trust store.  mbedTLS has to be told which\n\t * CA to trust explicitly.\n\t */\n\tinfo.client_ssl_ca_filepath = \"./warmcat.com.cer\";\n#endif\n\n\tcontext = lws_create_context(&info);\n\tif (!context) {\n\t\tlwsl_err(\"lws init failed\\n\");\n\t\treturn 1;\n\t}\n\n\tmemset(&i, 0, sizeof i); /* otherwise uninitialized garbage */\n\ti.context = context;\n\ti.ssl_connection = LCCSCF_USE_SSL;\n\n\tif (lws_cmdline_option(argc, argv, \"-l\")) {\n\t\ti.port = 7681;\n\t\ti.address = \"localhost\";\n\t\ti.ssl_connection |= LCCSCF_ALLOW_SELFSIGNED;\n\t} else {\n\t\ti.port = 443;\n\t\ti.address = \"warmcat.com\";\n\t}\n\ti.path = \"/\";\n\ti.host = i.address;\n\ti.origin = i.address;\n\n\t/* force h1 even if h2 available */\n\tif (lws_cmdline_option(argc, argv, \"--h1\"))\n\t\ti.alpn = \"http/1.1\";\n\n\ti.method = \"GET\";\n\n\ti.protocol = protocols[0].name;\n\ti.pwsi = &client_wsi;\n\tlws_client_connect_via_info(&i);\n\n\twhile (n >= 0 && client_wsi && !interrupted)\n\t\tn = lws_service(context, 0);\n\n\tlws_context_destroy(context);\n\tlwsl_user(\"Completed: %s\\n\", bad ? \"failed\" : \"OK\");\n\n\treturn bad;\n}\n",
			"file": "libwebsockets/minimal-examples/http-client/minimal-http-client-certinfo/minimal-http-client-certinfo.c",
			"file_size": 6119,
			"file_write_time": 132774575772059894,
			"settings":
			{
				"buffer_size": 6119,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\n * lws-minimal-http-client-captive-portal\n *\n * Written in 2010-2020 by Andy Green <andy@warmcat.com>\n *\n * This file is made available under the Creative Commons CC0 1.0\n * Universal Public Domain Dedication.\n *\n * This demonstrates how to use the lws_system captive portal detect integration\n *\n * We check for a captive portal by doing a GET from\n * http://connectivitycheck.android.com/generate_204, if we really are going\n * out on the Internet he'll return with a 204 response code and we will\n * understand there's no captive portal.  If we get something else, we take it\n * there is a captive portal.\n */\n\n#include <libwebsockets.h>\n#include <string.h>\n#include <signal.h>\n\nstatic struct lws_context *context;\nstatic int interrupted, bad = 1, status;\nstatic lws_state_notify_link_t nl;\n\n/*\n * this is the user code http handler\n */\n\nstatic int\ncallback_http(struct lws *wsi, enum lws_callback_reasons reason,\n\t      void *user, void *in, size_t len)\n{\n\tswitch (reason) {\n\n\t/* because we are protocols[0] ... */\n\tcase LWS_CALLBACK_CLIENT_CONNECTION_ERROR:\n\t\tlwsl_err(\"CLIENT_CONNECTION_ERROR: %s\\n\",\n\t\t\t in ? (char *)in : \"(null)\");\n\t\tinterrupted = 1;\n\t\tbreak;\n\n\tcase LWS_CALLBACK_ESTABLISHED_CLIENT_HTTP:\n\t\t{\n\t\t\tchar buf[128];\n\n\t\t\tlws_get_peer_simple(wsi, buf, sizeof(buf));\n\t\t\tstatus = (int)lws_http_client_http_response(wsi);\n\n\t\t\tlwsl_user(\"Connected to %s, http response: %d\\n\",\n\t\t\t\t\tbuf, status);\n\t\t}\n\t\tbreak;\n\n\t/* chunks of chunked content, with header removed */\n\tcase LWS_CALLBACK_RECEIVE_CLIENT_HTTP_READ:\n\t\tlwsl_user(\"RECEIVE_CLIENT_HTTP_READ: read %d\\n\", (int)len);\n\n#if 0  /* enable to dump the html */\n\t\t{\n\t\t\tconst char *p = in;\n\n\t\t\twhile (len--)\n\t\t\t\tif (*p < 0x7f)\n\t\t\t\t\tputchar(*p++);\n\t\t\t\telse\n\t\t\t\t\tputchar('.');\n\t\t}\n#endif\n\t\treturn 0; /* don't passthru */\n\n\t/* uninterpreted http content */\n\tcase LWS_CALLBACK_RECEIVE_CLIENT_HTTP:\n\t\t{\n\t\t\tchar buffer[1024 + LWS_PRE];\n\t\t\tchar *px = buffer + LWS_PRE;\n\t\t\tint lenx = sizeof(buffer) - LWS_PRE;\n\n\t\t\tif (lws_http_client_read(wsi, &px, &lenx) < 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn 0; /* don't passthru */\n\n\tcase LWS_CALLBACK_COMPLETED_CLIENT_HTTP:\n\t\tlwsl_user(\"LWS_CALLBACK_COMPLETED_CLIENT_HTTP\\n\");\n\t\tinterrupted = 1;\n\t\tbad = status != 200;\n\t\tlws_cancel_service(lws_get_context(wsi)); /* abort poll wait */\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLOSED_CLIENT_HTTP:\n\t\tinterrupted = 1;\n\t\tbad = status != 200;\n\t\tlws_cancel_service(lws_get_context(wsi)); /* abort poll wait */\n\t\tbreak;\n\n\tdefault:\n\t\tbreak;\n\t}\n\n\treturn lws_callback_http_dummy(wsi, reason, user, in, len);\n}\n\n/*\n * This is the platform's custom captive portal detection handler\n */\n\nstatic int\ncallback_cpd_http(struct lws *wsi, enum lws_callback_reasons reason,\n\t\t  void *user, void *in, size_t len)\n{\n\tint resp;\n\n\tswitch (reason) {\n\n\tcase LWS_CALLBACK_ESTABLISHED_CLIENT_HTTP:\n\t\tresp = (int)lws_http_client_http_response(wsi);\n\t\tif (!resp)\n\t\t\tbreak;\n\t\tlwsl_user(\"%s: established with resp %d\\n\", __func__, resp);\n\t\tswitch (resp) {\n\n\t\tcase HTTP_STATUS_NO_CONTENT:\n\t\t\t/*\n\t\t\t * We got the 204 which is used to distinguish the real\n\t\t\t * endpoint\n\t\t\t */\n\t\t\tlws_system_cpd_set(lws_get_context(wsi),\n\t\t\t\t\t   LWS_CPD_INTERNET_OK);\n\t\t\treturn 0;\n\n\t\t/* also case HTTP_STATUS_OK: ... */\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\t/* fallthru */\n\n\tcase LWS_CALLBACK_CLIENT_HTTP_REDIRECT:\n\t\tlws_system_cpd_set(lws_get_context(wsi), LWS_CPD_CAPTIVE_PORTAL);\n\t\t/* don't follow it, just report it */\n\t\treturn 1;\n\n\tcase LWS_CALLBACK_CLIENT_CONNECTION_ERROR:\n\tcase LWS_CALLBACK_CLOSED_CLIENT_HTTP:\n\t\t/* only the first result counts */\n\t\tlws_system_cpd_set(lws_get_context(wsi), LWS_CPD_NO_INTERNET);\n\t\tbreak;\n\n\tdefault:\n\t\tbreak;\n\t}\n\n\treturn lws_callback_http_dummy(wsi, reason, user, in, len);\n}\n\nstatic const struct lws_protocols protocols[] = {\n\t{\n\t\t\"http\",\n\t\tcallback_http,\n\t\t0,\n\t\t0,\n\t}, {\n\t\t\"lws-cpd-http\",\n\t\tcallback_cpd_http\n\t},\n\t{ NULL, NULL, 0, 0 }\n};\n\nvoid sigint_handler(int sig)\n{\n\tinterrupted = 1;\n}\n\n/*\n * This triggers our platform implementation of captive portal detection, the\n * actual test can be whatever you need.\n *\n * In this example, we detect it using Android's\n *\n *   http://connectivitycheck.android.com/generate_204\n *\n * and seeing if we get an http 204 back.\n */\n\nstatic int\ncaptive_portal_detect_request(struct lws_context *context)\n{\n\tstruct lws_client_connect_info i;\n\n\tmemset(&i, 0, sizeof i);\n\ti.context = context;\n\ti.port = 80;\n\ti.address = \"connectivitycheck.android.com\";\n\ti.path = \"/generate_204\";\n\ti.host = i.address;\n\ti.origin = i.address;\n\ti.method = \"GET\";\n\n\ti.protocol = \"lws-cpd-http\";\n\n\treturn !lws_client_connect_via_info(&i);\n}\n\n\nlws_system_ops_t ops = {\n\t.captive_portal_detect_request = captive_portal_detect_request\n};\n\n\nstatic int\napp_system_state_nf(lws_state_manager_t *mgr, lws_state_notify_link_t *link,\n\t\t    int current, int target)\n{\n\tstruct lws_context *cx = lws_system_context_from_system_mgr(mgr);\n\n\tswitch (target) {\n\tcase LWS_SYSTATE_CPD_PRE_TIME:\n\t\tif (lws_system_cpd_state_get(cx))\n\t\t\treturn 0; /* allow it */\n\n\t\tlwsl_info(\"%s: LWS_SYSTATE_CPD_PRE_TIME\\n\", __func__);\n\t\tlws_system_cpd_start(cx);\n\t\t/* we'll move the state on when we get a result */\n\t\treturn 1;\n\n\tcase LWS_SYSTATE_OPERATIONAL:\n\t\tif (current == LWS_SYSTATE_OPERATIONAL) {\n\t\t\tstruct lws_client_connect_info i;\n\n\t\t\tlwsl_user(\"%s: OPERATIONAL, cpd %d\\n\", __func__,\n\t\t\t\t\tlws_system_cpd_state_get(cx));\n\n\t\t\t/*\n\t\t\t * When we reach the OPERATIONAL lws_system state, we\n\t\t\t * can do our main job knowing we have DHCP, ntpclient,\n\t\t\t * captive portal testing done.\n\t\t\t */\n\n\t\t\tif (lws_system_cpd_state_get(cx) != LWS_CPD_INTERNET_OK) {\n\t\t\t\tlwsl_warn(\"%s: There's no internet...\\n\", __func__);\n\t\t\t\tinterrupted = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tmemset(&i, 0, sizeof i);\n\t\t\ti.context = context;\n\t\t\ti.ssl_connection = LCCSCF_USE_SSL;\n\t\t\ti.ssl_connection |= LCCSCF_H2_QUIRK_OVERFLOWS_TXCR |\n\t\t\t\t\t    LCCSCF_H2_QUIRK_NGHTTP2_END_STREAM;\n\t\t\ti.port = 443;\n\t\t\ti.address = \"warmcat.com\";\n\t\t\ti.path = \"/\";\n\t\t\ti.host = i.address;\n\t\t\ti.origin = i.address;\n\t\t\ti.method = \"GET\";\n\n\t\t\ti.protocol = protocols[0].name;\n\n\t\t\tlws_client_connect_via_info(&i);\n\t\t\tbreak;\n\t\t}\n\tdefault:\n\t\tbreak;\n\t}\n\n\treturn 0;\n}\n\nstatic lws_state_notify_link_t * const app_notifier_list[] = {\n\t&nl, NULL\n};\n\n/*\n * We made this into a different thread to model it being run from completely\n * different codebase that's all linked together\n */\n\n\nint main(int argc, const char **argv)\n{\n\tint logs = LLL_USER | LLL_ERR | LLL_WARN | LLL_NOTICE;\n\tstruct lws_context_creation_info info;\n\tconst char *p;\n\n\tsignal(SIGINT, sigint_handler);\n\n\tif ((p = lws_cmdline_option(argc, argv, \"-d\")))\n\t\tlogs = atoi(p);\n\n\tlws_set_log_level(logs, NULL);\n\tlwsl_user(\"LWS minimal http client captive portal detect\\n\");\n\n\tmemset(&info, 0, sizeof info);\n\tinfo.port = CONTEXT_PORT_NO_LISTEN;\n\tinfo.options = LWS_SERVER_OPTION_DO_SSL_GLOBAL_INIT;\n\tinfo.system_ops = &ops;\n\tinfo.protocols = protocols;\n\n\t/* integrate us with lws system state management when context created */\n\n\tnl.name = \"app\";\n\tnl.notify_cb = app_system_state_nf;\n\tinfo.register_notifier_list = app_notifier_list;\n\n\tcontext = lws_create_context(&info);\n\tif (!context) {\n\t\tlwsl_err(\"lws init failed\\n\");\n\t\treturn 1;\n\t}\n\n\twhile (!interrupted)\n\t\tif (lws_service(context, 0))\n\t\t\tinterrupted = 1;\n\n\tlws_context_destroy(context);\n\n\tlwsl_user(\"%s: finished %s\\n\", __func__, bad ? \"FAIL\": \"OK\");\n\n\treturn bad;\n}\n",
			"file": "libwebsockets/minimal-examples/http-client/minimal-http-client-captive-portal/minimal-http-client-captive-portal.c",
			"file_size": 7299,
			"file_write_time": 132774575772019894,
			"settings":
			{
				"buffer_size": 7299,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libwebsockets/lib/abstract/transports/raw-skt.c",
			"settings":
			{
				"buffer_size": 10138,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\n * ws protocol handler plugin for \"lws-minimal\"\n *\n * Written in 2010-2019 by Andy Green <andy@warmcat.com>\n *\n * This file is made available under the Creative Commons CC0 1.0\n * Universal Public Domain Dedication.\n *\n * This version uses an lws_ring ringbuffer to cache up to 8 messages at a time,\n * so it's not so easy to lose messages.\n */\n\n#if !defined (LWS_PLUGIN_STATIC)\n#define LWS_DLL\n#define LWS_INTERNAL\n#include <libwebsockets.h>\n#endif\n\n#include <string.h>\n#include <stdlib.h>\n\n/* one of these created for each message */\n\nstruct msg {\n\tvoid *payload; /* is malloc'd */\n\tsize_t len;\n};\n\n/* one of these is created for each client connecting to us */\n\nstruct per_session_data__minimal {\n\tstruct per_session_data__minimal *pss_list;\n\tstruct lws *wsi;\n\tuint32_t tail;\n};\n\n/* one of these is created for each vhost our protocol is used with */\n\nstruct per_vhost_data__minimal {\n\tstruct lws_context *context;\n\tstruct lws_vhost *vhost;\n\tconst struct lws_protocols *protocol;\n\n\tlws_sorted_usec_list_t sul;\n\n\tstruct per_session_data__minimal *pss_list; /* linked-list of live pss*/\n\n\tstruct lws_ring *ring; /* ringbuffer holding unsent messages */\n\tstruct lws_client_connect_info i;\n\tstruct lws *client_wsi;\n};\n\n/* destroys the message when everyone has had a copy of it */\n\nstatic void\n__minimal_destroy_message(void *_msg)\n{\n\tstruct msg *msg = _msg;\n\n\tfree(msg->payload);\n\tmsg->payload = NULL;\n\tmsg->len = 0;\n}\n\nstatic void\nsul_connect_attempt(struct lws_sorted_usec_list *sul)\n{\n\tstruct per_vhost_data__minimal *vhd =\n\t\tlws_container_of(sul, struct per_vhost_data__minimal, sul);\n\n\tvhd->i.context = vhd->context;\n\tvhd->i.port = 443;\n\tvhd->i.address = \"libwebsockets.org\";\n\tvhd->i.path = \"/\";\n\tvhd->i.host = vhd->i.address;\n\tvhd->i.origin = vhd->i.address;\n\tvhd->i.ssl_connection = 1;\n\n\tvhd->i.protocol = \"dumb-increment-protocol\";\n\tvhd->i.local_protocol_name = \"lws-minimal-proxy\";\n\tvhd->i.pwsi = &vhd->client_wsi;\n\n\tif (!lws_client_connect_via_info(&vhd->i))\n\t\tlws_sul_schedule(vhd->context, 0, &vhd->sul,\n\t\t\t\t sul_connect_attempt, 10 * LWS_US_PER_SEC);\n}\n\nstatic int\ncallback_minimal(struct lws *wsi, enum lws_callback_reasons reason,\n\t\t\tvoid *user, void *in, size_t len)\n{\n\tstruct per_session_data__minimal *pss =\n\t\t\t(struct per_session_data__minimal *)user;\n\tstruct per_vhost_data__minimal *vhd =\n\t\t\t(struct per_vhost_data__minimal *)\n\t\t\tlws_protocol_vh_priv_get(lws_get_vhost(wsi),\n\t\t\t\t\tlws_get_protocol(wsi));\n\tconst struct msg *pmsg;\n\tstruct msg amsg;\n\tint m;\n\n\tswitch (reason) {\n\n\t/* --- protocol lifecycle callbacks --- */\n\n\tcase LWS_CALLBACK_PROTOCOL_INIT:\n\t\tvhd = lws_protocol_vh_priv_zalloc(lws_get_vhost(wsi),\n\t\t\t\tlws_get_protocol(wsi),\n\t\t\t\tsizeof(struct per_vhost_data__minimal));\n\t\tvhd->context = lws_get_context(wsi);\n\t\tvhd->protocol = lws_get_protocol(wsi);\n\t\tvhd->vhost = lws_get_vhost(wsi);\n\n\t\tvhd->ring = lws_ring_create(sizeof(struct msg), 8,\n\t\t\t\t\t    __minimal_destroy_message);\n\t\tif (!vhd->ring)\n\t\t\treturn 1;\n\n\t\tsul_connect_attempt(&vhd->sul);\n\t\tbreak;\n\n\tcase LWS_CALLBACK_PROTOCOL_DESTROY:\n\t\tlws_ring_destroy(vhd->ring);\n\t\tlws_sul_cancel(&vhd->sul);\n\t\tbreak;\n\n\t/* --- serving callbacks --- */\n\n\tcase LWS_CALLBACK_ESTABLISHED:\n\t\t/* add ourselves to the list of live pss held in the vhd */\n\t\tlws_ll_fwd_insert(pss, pss_list, vhd->pss_list);\n\t\tpss->tail = lws_ring_get_oldest_tail(vhd->ring);\n\t\tpss->wsi = wsi;\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLOSED:\n\t\t/* remove our closing pss from the list of live pss */\n\t\tlws_ll_fwd_remove(struct per_session_data__minimal, pss_list,\n\t\t\t\t  pss, vhd->pss_list);\n\t\tbreak;\n\n\tcase LWS_CALLBACK_SERVER_WRITEABLE:\n\t\tpmsg = lws_ring_get_element(vhd->ring, &pss->tail);\n\t\tif (!pmsg)\n\t\t\tbreak;\n\n\t\t/* notice we allowed for LWS_PRE in the payload already */\n\t\tm = lws_write(wsi, ((unsigned char *)pmsg->payload) + LWS_PRE,\n\t\t\t      pmsg->len, LWS_WRITE_TEXT);\n\t\tif (m < (int)pmsg->len) {\n\t\t\tlwsl_err(\"ERROR %d writing to ws socket\\n\", m);\n\t\t\treturn -1;\n\t\t}\n\n\t\tlws_ring_consume_and_update_oldest_tail(\n\t\t\tvhd->ring,\t/* lws_ring object */\n\t\t\tstruct per_session_data__minimal, /* type of objects with tails */\n\t\t\t&pss->tail,\t/* tail of guy doing the consuming */\n\t\t\t1,\t\t/* number of payload objects being consumed */\n\t\t\tvhd->pss_list,\t/* head of list of objects with tails */\n\t\t\ttail,\t\t/* member name of tail in objects with tails */\n\t\t\tpss_list\t/* member name of next object in objects with tails */\n\t\t);\n\n\t\t/* more to do? */\n\t\tif (lws_ring_get_element(vhd->ring, &pss->tail))\n\t\t\t/* come back as soon as we can write more */\n\t\t\tlws_callback_on_writable(pss->wsi);\n\t\tbreak;\n\n\t/* --- client callbacks --- */\n\n\tcase LWS_CALLBACK_CLIENT_CONNECTION_ERROR:\n\t\tlwsl_err(\"CLIENT_CONNECTION_ERROR: %s\\n\",\n\t\t\t in ? (char *)in : \"(null)\");\n\t\tvhd->client_wsi = NULL;\n\t\tlws_sul_schedule(vhd->context, 0, &vhd->sul,\n\t\t\t\t sul_connect_attempt, LWS_US_PER_SEC);\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLIENT_ESTABLISHED:\n\t\tlwsl_user(\"%s: established\\n\", __func__);\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLIENT_RECEIVE:\n\t\t/* if no clients, just drop incoming */\n\t\tif (!vhd->pss_list)\n\t\t\tbreak;\n\n\t\tif (!lws_ring_get_count_free_elements(vhd->ring)) {\n\t\t\tlwsl_user(\"dropping!\\n\");\n\t\t\tbreak;\n\t\t}\n\n\t\tamsg.len = len;\n\t\t/* notice we over-allocate by LWS_PRE */\n\t\tamsg.payload = malloc(LWS_PRE + len);\n\t\tif (!amsg.payload) {\n\t\t\tlwsl_user(\"OOM: dropping\\n\");\n\t\t\tbreak;\n\t\t}\n\n\t\tmemcpy((char *)amsg.payload + LWS_PRE, in, len);\n\t\tif (!lws_ring_insert(vhd->ring, &amsg, 1)) {\n\t\t\t__minimal_destroy_message(&amsg);\n\t\t\tlwsl_user(\"dropping!\\n\");\n\t\t\tbreak;\n\t\t}\n\n\t\t/*\n\t\t * let everybody know we want to write something on them\n\t\t * as soon as they are ready\n\t\t */\n\t\tlws_start_foreach_llp(struct per_session_data__minimal **,\n\t\t\t\t      ppss, vhd->pss_list) {\n\t\t\tlws_callback_on_writable((*ppss)->wsi);\n\t\t} lws_end_foreach_llp(ppss, pss_list);\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLIENT_CLOSED:\n\t\tvhd->client_wsi = NULL;\n\t\tlws_sul_schedule(vhd->context, 0, &vhd->sul,\n\t\t\t\t sul_connect_attempt, LWS_US_PER_SEC);\n\t\tbreak;\n\n\tdefault:\n\t\tbreak;\n\t}\n\n\treturn 0;\n}\n\n#define LWS_PLUGIN_PROTOCOL_MINIMAL \\\n\t{  \\\n\t\t\"lws-minimal-proxy\", \\\n\t\tcallback_minimal, \\\n\t\tsizeof(struct per_session_data__minimal), \\\n\t\t128, \\\n\t\t0, NULL, 0 \\\n\t}\n",
			"file": "libwebsockets/minimal-examples/client-server/minimal-ws-proxy/protocol_lws_minimal.c",
			"file_size": 6111,
			"file_write_time": 132774575772019894,
			"settings":
			{
				"buffer_size": 6111,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\n * lws-minimal-raw-adopt-tcp\n *\n * Written in 2010-2019 by Andy Green <andy@warmcat.com>\n *\n * This file is made available under the Creative Commons CC0 1.0\n * Universal Public Domain Dedication.\n *\n * This demonstrates integrating somebody else's connected tcp\n * socket into the lws event loop as a RAW wsi.  It's interesting in\n * the kind of situation where you already have a connected socket\n * in your application, and you need to hand it over to lws to deal with.\n *\n * Lws supports \"adopting\" these foreign sockets.\n *\n * If you simply want a connected client raw socket using lws alone, you\n * can just use lws_client_connect_via_info() with info.method = \"RAW\".\n *\n */\n\n#include <libwebsockets.h>\n#include <string.h>\n#include <signal.h>\n#if !defined(WIN32)\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <netdb.h>\n#include <arpa/inet.h>\n#endif\n#include <sys/types.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#if !defined(WIN32)\n#include <unistd.h>\n#endif\n#include <errno.h>\n\nstatic int\ncallback_raw_test(struct lws *wsi, enum lws_callback_reasons reason,\n\t\t\tvoid *user, void *in, size_t len)\n{\n\n\tswitch (reason) {\n\n\t/* callbacks related to raw socket descriptor */\n\n        case LWS_CALLBACK_RAW_ADOPT:\n\t\tlwsl_user(\"LWS_CALLBACK_RAW_ADOPT\\n\");\n\t\tlws_callback_on_writable(wsi);\n                break;\n\n\tcase LWS_CALLBACK_RAW_CLOSE:\n\t\tlwsl_user(\"LWS_CALLBACK_RAW_CLOSE\\n\");\n\t\tbreak;\n\n\tcase LWS_CALLBACK_RAW_RX:\n\t\tlwsl_user(\"LWS_CALLBACK_RAW_RX (%d)\\n\", (int)len);\n\t\tlwsl_hexdump_level(LLL_NOTICE, in, len);\n\t\tbreak;\n\n\tcase LWS_CALLBACK_RAW_WRITEABLE:\n\t\tif (lws_write(wsi,\n\t\t\t      (uint8_t *)\"GET / HTTP/1.1\\xd\\xa\\xd\\xa\", 18,\n\t\t\t      LWS_WRITE_RAW) != 18) {\n\t\t\tlwsl_notice(\"%s: raw write failed\\n\", __func__);\n\t\t\treturn 1;\n\t\t}\n\t\tbreak;\n\n\tdefault:\n\t\tbreak;\n\t}\n\n\treturn 0;\n}\n\nstatic struct lws_protocols protocols[] = {\n\t{ \"raw-test\", callback_raw_test, 0, 0 },\n\t{ NULL, NULL, 0, 0 } /* terminator */\n};\n\nstatic int interrupted;\n\nvoid sigint_handler(int sig)\n{\n\tinterrupted = 1;\n}\n\nint main(int argc, const char **argv)\n{\n\tstruct lws_context_creation_info info;\n\tstruct lws_context *context;\n\tlws_sock_file_fd_type sock;\n\tstruct addrinfo h, *r, *rp;\n\tstruct lws_vhost *vhost;\n\tconst char *p;\n\tint n = 0, logs = LLL_USER | LLL_ERR | LLL_WARN | LLL_NOTICE\n\t\t\t/* for LLL_ verbosity above NOTICE to be built into lws,\n\t\t\t * lws must have been configured and built with\n\t\t\t * -DCMAKE_BUILD_TYPE=DEBUG instead of =RELEASE */\n\t\t\t/* | LLL_INFO */ /* | LLL_PARSER */ /* | LLL_HEADER */\n\t\t\t/* | LLL_EXT */ /* | LLL_CLIENT */ /* | LLL_LATENCY */\n\t\t\t/* | LLL_DEBUG */;\n\n\tsignal(SIGINT, sigint_handler);\n\n\tif ((p = lws_cmdline_option(argc, argv, \"-d\")))\n\t\tlogs = atoi(p);\n\n\tlws_set_log_level(logs, NULL);\n\tlwsl_user(\"LWS minimal raw adopt tcp\\n\");\n\n\tmemset(&info, 0, sizeof info); /* otherwise uninitialized garbage */\n\tinfo.options = LWS_SERVER_OPTION_EXPLICIT_VHOSTS;\n\n\tcontext = lws_create_context(&info);\n\tif (!context) {\n\t\tlwsl_err(\"lws init failed\\n\");\n\t\treturn 1;\n\t}\n\n\tinfo.port = CONTEXT_PORT_NO_LISTEN_SERVER;\n\tinfo.protocols = protocols;\n\n\tvhost = lws_create_vhost(context, &info);\n\tif (!vhost) {\n\t\tlwsl_err(\"lws vhost creation failed\\n\");\n\t\tgoto bail;\n\t}\n\n\t/*\n\t * Connect our own \"foreign\" socket to libwebsockets.org:80\n\t *\n\t * Normally you would do this with lws_client_connect_via_info() inside\n\t * the lws event loop, hiding all this detail.  But this example\n\t * demonstrates how to integrate an externally-connected \"foreign\"\n\t * socket, so we create one by hand.\n\t */\n\n\tmemset(&h, 0, sizeof(h));\n\th.ai_family = AF_UNSPEC;    /* Allow IPv4 or IPv6 */\n\th.ai_socktype = SOCK_STREAM;\n\th.ai_protocol = IPPROTO_TCP;\n\n\tn = getaddrinfo(\"libwebsockets.org\", \"80\", &h, &r);\n\tif (n) {\n\t\tlwsl_err(\"%s: problem resolving libwebsockets.org: %s\\n\", __func__, gai_strerror(n));\n\t\treturn 1;\n\t}\n\n\tfor (rp = r; rp; rp = rp->ai_next) {\n\t\tsock.sockfd = socket(rp->ai_family, rp->ai_socktype, rp->ai_protocol);\n\t\tif (sock.sockfd != LWS_SOCK_INVALID)\n\t\t\tbreak;\n\t}\n\tif (!rp) {\n\t\tlwsl_err(\"%s: unable to create INET socket\\n\", __func__);\n\t\tfreeaddrinfo(r);\n\n\t\treturn 1;\n\t}\n\n\tlwsl_user(\"Starting connect...\\n\");\n\tif (connect(sock.sockfd, rp->ai_addr, sizeof(*rp->ai_addr)) < 0) {\n\t\tlwsl_err(\"%s: unable to connect to libwebsockets.org:80\\n\", __func__);\n\t\tfreeaddrinfo(r);\n\t\treturn 1;\n\t}\n\n\tfreeaddrinfo(r);\n\tsignal(SIGINT, sigint_handler);\n\tlwsl_user(\"Connected...\\n\");\n\n\t/* our foreign socket is connected... adopt it into lws */\n\n\tif (!lws_adopt_descriptor_vhost(vhost, LWS_ADOPT_SOCKET, sock,\n\t\t\t\t       protocols[0].name, NULL)) {\n\t\tlwsl_err(\"%s: foreign socket adoption failed\\n\", __func__);\n\t\tgoto bail;\n\t}\n\n\twhile (n >= 0 && !interrupted)\n\t\tn = lws_service(context, 0);\n\nbail:\n\tlws_context_destroy(context);\n\n\treturn 0;\n}\n",
			"file": "libwebsockets/minimal-examples/raw/minimal-raw-adopt-tcp/minimal-raw-adopt-tcp.c",
			"file_size": 4747,
			"file_write_time": 132774575772259894,
			"settings":
			{
				"buffer_size": 4747,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include <gtk/gtk.h>\n#include <libwebsockets.h>\n\nstatic int status = 0;\n\nstatic void\nprint_hello(GtkWidget *widget, gpointer data)\n{\n\tg_print(\"Hello World\\n\");\n}\n\nstatic void\nactivate(GtkApplication *app, gpointer user_data)\n{\n\tGtkWidget *window;\n\tGtkWidget *button, *bbox;\n\n\twindow = gtk_application_window_new(app);\n\tgtk_window_set_title(GTK_WINDOW(window), \"mywindow\");\n\tgtk_window_set_default_size(GTK_WINDOW(window), 200, 200);\n\n\tbbox = gtk_button_box_new(GTK_ORIENTATION_HORIZONTAL);\n\tgtk_container_add(GTK_CONTAINER(window), bbox);\n\n\tbutton = gtk_button_new_with_label(\"Hello World\");\n\tg_signal_connect(button, \"clicked\", G_CALLBACK(print_hello), NULL);\n\tg_signal_connect_swapped(button, \"clicked\",\n\t\t\t\t G_CALLBACK(gtk_widget_destroy), window);\n\tgtk_container_add(GTK_CONTAINER(bbox), button);\n\n\tgtk_widget_show_all(window);\n}\n\nstatic int\nsystem_notify_cb(lws_state_manager_t *mgr, lws_state_notify_link_t *link,\n\t\t   int current, int target)\n{\n\tstruct lws_context *context = mgr->parent;\n\tstruct lws_client_connect_info i;\n\n\tif (current != LWS_SYSTATE_OPERATIONAL ||\n\t    target != LWS_SYSTATE_OPERATIONAL)\n\t\treturn 0;\n\n\tlwsl_notice(\"%s: operational\\n\", __func__);\n\n\tmemset(&i, 0, sizeof i); /* otherwise uninitialized garbage */\n\ti.context = context;\n\ti.ssl_connection = LCCSCF_USE_SSL | LCCSCF_H2_QUIRK_OVERFLOWS_TXCR |\n\t\t\t   LCCSCF_H2_QUIRK_NGHTTP2_END_STREAM;\n\ti.port = 443;\n\ti.address = \"warmcat.com\";\n\ti.path = \"/\";\n\ti.host = i.address;\n\ti.origin = i.address;\n\ti.method = \"GET\";\n\n\ti.protocol = \"http\";\n\n\treturn !lws_client_connect_via_info(&i);\n}\n\nstatic int\ncallback_http(struct lws *wsi, enum lws_callback_reasons reason,\n\t      void *user, void *in, size_t len)\n{\n\tswitch (reason) {\n\n\t/* because we are protocols[0] ... */\n\tcase LWS_CALLBACK_CLIENT_CONNECTION_ERROR:\n\t\tlwsl_err(\"CLIENT_CONNECTION_ERROR: %s\\n\",\n\t\t\t in ? (char *)in : \"(null)\");\n\t\tbreak;\n\n\tcase LWS_CALLBACK_ESTABLISHED_CLIENT_HTTP:\n\t\t{\n\t\t\tchar buf[128];\n\n\t\t\tlws_get_peer_simple(wsi, buf, sizeof(buf));\n\t\t\tstatus = lws_http_client_http_response(wsi);\n\n\t\t\tlwsl_user(\"Connected to %s, http response: %d\\n\",\n\t\t\t\t\tbuf, status);\n\t\t}\n\t\tbreak;\n\n\t/* chunks of chunked content, with header removed */\n\tcase LWS_CALLBACK_RECEIVE_CLIENT_HTTP_READ:\n\t\tlwsl_user(\"RECEIVE_CLIENT_HTTP_READ: read %d\\n\", (int)len);\n\t\treturn 0; /* don't passthru */\n\n\t/* uninterpreted http content */\n\tcase LWS_CALLBACK_RECEIVE_CLIENT_HTTP:\n\t\t{\n\t\t\tchar buffer[1024 + LWS_PRE];\n\t\t\tchar *px = buffer + LWS_PRE;\n\t\t\tint lenx = sizeof(buffer) - LWS_PRE;\n\n\t\t\tif (lws_http_client_read(wsi, &px, &lenx) < 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn 0; /* don't passthru */\n\n\tcase LWS_CALLBACK_COMPLETED_CLIENT_HTTP:\n\t\tlwsl_user(\"LWS_CALLBACK_COMPLETED_CLIENT_HTTP\\n\");\n\t\tlws_cancel_service(lws_get_context(wsi)); /* abort poll wait */\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLOSED_CLIENT_HTTP:\n\t\tlws_cancel_service(lws_get_context(wsi)); /* abort poll wait */\n\t\tbreak;\n\n\tdefault:\n\t\tbreak;\n\t}\n\n\treturn lws_callback_http_dummy(wsi, reason, user, in, len);\n}\n\nstatic const struct lws_protocols protocols[] = {\n\t{\n\t\t\"http\",\n\t\tcallback_http,\n\t\t0,\n\t\t0,\n\t},\n\t{ NULL, NULL, 0, 0 }\n};\n\nstatic gpointer\nt1_main (gpointer user_data)\n{\n\tlws_state_notify_link_t notifier = { {0}, system_notify_cb, \"app\" };\n\tlws_state_notify_link_t *na[] = { &notifier, NULL };\n\tGMainContext *t1_mc = (GMainContext *)user_data;\n\tstruct lws_context_creation_info info;\n\tstruct lws_context *context;\n\tvoid *foreign_loops[1];\n\tGMainLoop *ml;\n\n\tg_print(\"%s: started\\n\", __func__);\n\n\tg_main_context_push_thread_default(t1_mc);\n\n\tml = g_main_loop_new(t1_mc, FALSE);\n\n\t/* attach our lws activities to the main loop of this thread */\n\n\tlws_set_log_level(LLL_USER | LLL_ERR | LLL_WARN | LLL_NOTICE, NULL);\n\tmemset(&info, 0, sizeof info);\n\tinfo.port = CONTEXT_PORT_NO_LISTEN;\n\tinfo.options = LWS_SERVER_OPTION_DO_SSL_GLOBAL_INIT |\n\t\t       LWS_SERVER_OPTION_GLIB;\n\tinfo.protocols = protocols;\n\tforeign_loops[0] = (void *)ml;\n\tinfo.foreign_loops = foreign_loops;\n\tinfo.register_notifier_list = na;\n\n#if defined(LWS_WITH_MBEDTLS) || defined(USE_WOLFSSL)\n\t/*\n\t * OpenSSL uses the system trust store.  mbedTLS has to be told which\n\t * CA to trust explicitly.\n\t */\n\tinfo.client_ssl_ca_filepath = \"./warmcat.com.cer\";\n#endif\n\n\tcontext = lws_create_context(&info);\n\tif (!context) {\n\t\tlwsl_err(\"lws init failed\\n\");\n\t\treturn NULL;\n\t}\n\n\t/*\n\t * We created the lws_context and bound it to this thread's main loop,\n\t * let's run the thread's main loop now...\n\t */\n\n\tg_main_loop_run(ml);\n\tg_main_loop_unref(ml);\n\n\tg_main_context_pop_thread_default(t1_mc);\n\tg_main_context_unref(t1_mc);\n\n\tg_print(\"%s: ending\\n\", __func__);\n\n\tlws_context_destroy(context);\n\n\treturn NULL;\n}\n\nint\nmain(int argc, char **argv)\n{\n\tGMainContext *t1_mc = g_main_context_new();\n\tGtkApplication *app;\n\tGThread *t1;\n\tint status;\n\n\tt1 = g_thread_new (\"t1\", t1_main, g_main_context_ref (t1_mc));\n\t(void)t1;\n\n\tapp = gtk_application_new(\"org.gtk.example\", G_APPLICATION_FLAGS_NONE);\n\tg_signal_connect(app, \"activate\", G_CALLBACK(activate), NULL);\n\n\tstatus = g_application_run(G_APPLICATION(app), argc, argv);\n\tg_object_unref(app);\n\n\treturn status;\n}\n\n",
			"file": "libwebsockets/minimal-examples/gtk/minimal-gtk/main.c",
			"file_size": 5083,
			"file_write_time": 132774575772019894,
			"settings":
			{
				"buffer_size": 5083,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\n * lws-minimal-raw-netcat\n *\n * Written in 2010-2019 by Andy Green <andy@warmcat.com>\n *\n * This file is made available under the Creative Commons CC0 1.0\n * Universal Public Domain Dedication.\n *\n * This demonstrates sending stdin to a remote socket and printing\n * what is returned to stdout.\n *\n * All the logging is on stderr, so you can tune it out with 2>log\n * or whatever.\n */\n\n#include <libwebsockets.h>\n#include <string.h>\n#include <signal.h>\n#if !defined(WIN32)\n#include <sys/socket.h>\n#include <sys/types.h>\n#include <netinet/in.h>\n#include <netdb.h>\n#include <arpa/inet.h>\n#endif\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#if !defined(WIN32)\n#include <unistd.h>\n#endif\n#include <errno.h>\n\nstatic struct lws *raw_wsi, *stdin_wsi;\nstatic uint8_t buf[LWS_PRE + 4096];\nstatic int waiting, interrupted;\nstatic struct lws_context *context;\nstatic int us_wait_after_input_close = LWS_USEC_PER_SEC / 10;\n\nstatic int\ncallback_raw_test(struct lws *wsi, enum lws_callback_reasons reason,\n\t\t  void *user, void *in, size_t len)\n{\n\tconst char *cp = (const char *)in;\n\n\tswitch (reason) {\n\n\t/* callbacks related to file descriptor */\n\n        case LWS_CALLBACK_RAW_ADOPT_FILE:\n        \tlwsl_user(\"LWS_CALLBACK_RAW_ADOPT_FILE\\n\");\n                break;\n\n\tcase LWS_CALLBACK_RAW_CLOSE_FILE:\n\t\tlwsl_user(\"LWS_CALLBACK_RAW_CLOSE_FILE\\n\");\n\t\t/* stdin close, wait 1s then close the raw skt */\n\t\tstdin_wsi = NULL; /* invalid now we close */\n\t\tif (raw_wsi)\n\t\t\tlws_set_timer_usecs(raw_wsi, us_wait_after_input_close);\n\t\telse {\n\t\t\tinterrupted = 1;\n\t\t\tlws_cancel_service(context);\n\t\t}\n\t\tbreak;\n\n\tcase LWS_CALLBACK_RAW_RX_FILE:\n\t\tlwsl_user(\"LWS_CALLBACK_RAW_RX_FILE\\n\");\n\t\twaiting = (int)read(0, buf, sizeof(buf));\n\t\tlwsl_notice(\"raw file read %d\\n\", waiting);\n\t\tif (waiting < 0)\n\t\t\treturn -1;\n\n\t\tif (raw_wsi)\n\t\t\tlws_callback_on_writable(raw_wsi);\n\t\tlws_rx_flow_control(wsi, 0);\n\t\tbreak;\n\n\n\t/* callbacks related to raw socket descriptor */\n\n        case LWS_CALLBACK_RAW_ADOPT:\n\t\tlwsl_user(\"LWS_CALLBACK_RAW_ADOPT\\n\");\n\t\tlws_callback_on_writable(wsi);\n                break;\n\n\tcase LWS_CALLBACK_RAW_CLOSE:\n\t\tlwsl_user(\"LWS_CALLBACK_RAW_CLOSE\\n\");\n\t\t/*\n\t\t * If the socket to the remote server closed, we must close\n\t\t * and drop any remaining stdin\n\t\t */\n\t\tinterrupted = 1;\n\t\tlws_cancel_service(context);\n\t\t/* our pointer to this wsi is invalid now we close */\n\t\traw_wsi = NULL;\n\t\tbreak;\n\n\tcase LWS_CALLBACK_RAW_RX:\n\t\tlwsl_user(\"LWS_CALLBACK_RAW_RX (%d)\\n\", (int)len);\n\t\twhile (len--)\n\t\t\tputchar(*cp++);\n\t\tfflush(stdout);\n\t\tbreak;\n\n\tcase LWS_CALLBACK_RAW_WRITEABLE:\n\t\tlwsl_user(\"LWS_CALLBACK_RAW_WRITEABLE\\n\");\n\t\t// lwsl_hexdump_info(buf, waiting);\n\t\tif (stdin_wsi)\n\t\t\tlws_rx_flow_control(stdin_wsi, 1);\n\t\tif (lws_write(wsi, buf, (unsigned int)waiting, LWS_WRITE_RAW) != waiting) {\n\t\t\tlwsl_notice(\"%s: raw skt write failed\\n\", __func__);\n\n\t\t\treturn -1;\n\t\t}\n\t\tbreak;\n\n\tcase LWS_CALLBACK_TIMER:\n\t\tlwsl_user(\"LWS_CALLBACK_TIMER\\n\");\n\t\tinterrupted = 1;\n\t\tlws_cancel_service(context);\n\t\treturn -1;\n\n\tdefault:\n\t\tbreak;\n\t}\n\n\treturn 0;\n}\n\nstatic struct lws_protocols protocols[] = {\n\t{ \"raw-test\", callback_raw_test, 0, 0 },\n\t{ NULL, NULL, 0, 0 } /* terminator */\n};\n\nvoid sigint_handler(int sig)\n{\n\tinterrupted = 1;\n}\n\nint main(int argc, const char **argv)\n{\n\tconst char *server = \"libwebsockets.org\", *port = \"80\";\n\tstruct lws_context_creation_info info;\n\tlws_sock_file_fd_type sock;\n\tstruct addrinfo h, *r, *rp;\n\tstruct lws_vhost *vhost;\n\tconst char *p;\n\tint n = 0, logs = LLL_USER | LLL_ERR | LLL_WARN | LLL_NOTICE;\n\n\tsignal(SIGINT, sigint_handler);\n\n\tif ((p = lws_cmdline_option(argc, argv, \"-d\")))\n\t\tlogs = atoi(p);\n\n\tlws_set_log_level(logs, NULL);\n\tlwsl_user(\"LWS minimal raw netcat [--server ip] [--port port] [-w ms]\\n\");\n\n\tmemset(&info, 0, sizeof info); /* otherwise uninitialized garbage */\n\tinfo.options = LWS_SERVER_OPTION_EXPLICIT_VHOSTS;\n\n\tcontext = lws_create_context(&info);\n\tif (!context) {\n\t\tlwsl_err(\"lws init failed\\n\");\n\t\treturn 1;\n\t}\n\n\tinfo.port = CONTEXT_PORT_NO_LISTEN_SERVER;\n\tinfo.protocols = protocols;\n\n\tvhost = lws_create_vhost(context, &info);\n\tif (!vhost) {\n\t\tlwsl_err(\"lws vhost creation failed\\n\");\n\t\tgoto bail;\n\t}\n\n\t/*\n\t * Connect our own \"foreign\" socket to libwebsockets.org:80\n\t *\n\t * Normally you would do this with lws_client_connect_via_info() inside\n\t * the lws event loop, hiding all this detail.  But this example\n\t * demonstrates how to integrate an externally-connected \"foreign\"\n\t * socket, so we create one by hand.\n\t */\n\n\tmemset(&h, 0, sizeof(h));\n\th.ai_family = AF_UNSPEC;    /* Allow IPv4 or IPv6 */\n\th.ai_socktype = SOCK_STREAM;\n\th.ai_protocol = IPPROTO_TCP;\n\n\tif ((p = lws_cmdline_option(argc, argv, \"--port\")))\n\t\tport = p;\n\n\tif ((p = lws_cmdline_option(argc, argv, \"--server\")))\n\t\tserver = p;\n\n\tif ((p = lws_cmdline_option(argc, argv, \"-w\")))\n\t\tus_wait_after_input_close = 1000 * atoi(p);\n\n\tn = getaddrinfo(server, port, &h, &r);\n\tif (n) {\n\t\tlwsl_err(\"%s: problem resolving %s: %s\\n\", __func__, \n\t\t\t server, gai_strerror(n));\n\t\treturn 1;\n\t}\n\n\tfor (rp = r; rp; rp = rp->ai_next) {\n\t\tsock.sockfd = socket(rp->ai_family, rp->ai_socktype,\n\t\t\t\t     rp->ai_protocol);\n\t\tif (sock.sockfd != LWS_SOCK_INVALID)\n\t\t\tbreak;\n\t}\n\tif (!rp) {\n\t\tlwsl_err(\"%s: unable to create INET socket\\n\", __func__);\n\t\tfreeaddrinfo(r);\n\n\t\treturn 1;\n\t}\n\n\tlwsl_user(\"Starting connect to %s:%s...\\n\", server, port);\n\tif (connect(sock.sockfd, rp->ai_addr, sizeof(*rp->ai_addr)) < 0) {\n\t\tlwsl_err(\"%s: unable to connect\\n\", __func__);\n\t\tfreeaddrinfo(r);\n\t\treturn 1;\n\t}\n\n\tfreeaddrinfo(r);\n\tsignal(SIGINT, sigint_handler);\n\tlwsl_user(\"Connected...\\n\");\n\n\t/* our foreign socket is connected... adopt it into lws */\n\n\traw_wsi = lws_adopt_descriptor_vhost(vhost, LWS_ADOPT_SOCKET, sock,\n\t\t\t\t\t     protocols[0].name, NULL);\n\tif (!raw_wsi) {\n\t\tlwsl_err(\"%s: foreign socket adoption failed\\n\", __func__);\n\t\tgoto bail;\n\t}\n\n\tsock.filefd = 0;\n\tstdin_wsi = lws_adopt_descriptor_vhost(vhost, LWS_ADOPT_RAW_FILE_DESC,\n\t\t\t\t\t       sock, protocols[0].name, NULL);\n\tif (!stdin_wsi) {\n\t\tlwsl_err(\"%s: stdin adoption failed\\n\", __func__);\n\t\tgoto bail;\n\t}\n\n\twhile (n >= 0 && !interrupted)\n\t\tn = lws_service(context, 0);\n\nbail:\n\n\tlwsl_user(\"%s: destroying context\\n\", __func__);\n\n\tlws_context_destroy(context);\n\n\treturn 0;\n}\n",
			"file": "libwebsockets/minimal-examples/raw/minimal-raw-netcat/minimal-raw-netcat.c",
			"file_size": 6218,
			"file_write_time": 132774575772259894,
			"settings":
			{
				"buffer_size": 6218,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\n * lws-minimal-ws-client-spam\n *\n * Written in 2010-2021 by Andy Green <andy@warmcat.com>\n *\n * This file is made available under the Creative Commons CC0 1.0\n * Universal Public Domain Dedication.\n *\n * This demonstrates a ws client that makes continuous mass ws connections\n * asynchronously\n */\n\n#include <libwebsockets.h>\n#include <string.h>\n#include <signal.h>\n#if defined(WIN32)\n#define HAVE_STRUCT_TIMESPEC\n#if defined(pid_t)\n#undef pid_t\n#endif\n#endif\n#include <pthread.h>\n\nenum {\n\tCLIENT_IDLE,\n\tCLIENT_CONNECTING,\n\tCLIENT_AWAITING_SEND,\n};\n\nstruct client {\n\tstruct lws *wsi;\n\tint index;\n\tint state;\n};\n\nstatic struct lws_context *context;\nstatic struct client clients[200];\nstatic int interrupted, port = 443, ssl_connection = LCCSCF_USE_SSL;\nstatic const char *server_address = \"libwebsockets.org\",\n\t\t  *pro = \"lws-mirror-protocol\";\nstatic int concurrent = 3, conn, tries, est, errors, closed, sent, limit = 15;\n\nstruct pss {\n\tint conn;\n};\n\nstatic int\nconnect_client(int idx)\n{\n\tstruct lws_client_connect_info i;\n\n\tif (tries == limit) {\n\t\tlwsl_user(\"Reached limit... finishing\\n\");\n\t\treturn 0;\n\t}\n\n\tmemset(&i, 0, sizeof(i));\n\n\ti.context = context;\n\ti.port = port;\n\ti.address = server_address;\n\ti.path = \"/\";\n\ti.host = i.address;\n\ti.origin = i.address;\n\ti.ssl_connection = ssl_connection;\n\ti.protocol = pro;\n\ti.local_protocol_name = pro;\n\ti.pwsi = &clients[idx].wsi;\n\n\tclients[idx].state = CLIENT_CONNECTING;\n\ttries++;\n\n\tlwsl_notice(\"%s: connection %s:%d\\n\", __func__, i.address, i.port);\n\tif (!lws_client_connect_via_info(&i)) {\n\t\tclients[idx].wsi = NULL;\n\t\tclients[idx].state = CLIENT_IDLE;\n\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nstatic int\ncallback_minimal_spam(struct lws *wsi, enum lws_callback_reasons reason,\n\t\t\tvoid *user, void *in, size_t len)\n{\n\tstruct pss *pss = (struct pss *)user;\n\tuint8_t ping[LWS_PRE + 125];\n\tint n, m;\n\n\tswitch (reason) {\n\n\tcase LWS_CALLBACK_PROTOCOL_INIT:\n\t\tfor (n = 0; n < concurrent; n++) {\n\t\t\tclients[n].index = n;\n\t\t\tconnect_client(n);\n\t\t}\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLIENT_CONNECTION_ERROR:\n\t\terrors++;\n\t\tlwsl_err(\"CLIENT_CONNECTION_ERROR: %s (try %d, est %d, closed %d, err %d)\\n\",\n\t\t\t in ? (char *)in : \"(null)\", tries, est, closed, errors);\n\t\tfor (n = 0; n < concurrent; n++) {\n\t\t\tif (clients[n].wsi == wsi) {\n\t\t\t\tclients[n].wsi = NULL;\n\t\t\t\tclients[n].state = CLIENT_IDLE;\n\t\t\t\tconnect_client(n);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (tries == closed + errors) {\n\t\t\tinterrupted = 1;\n\t\t\tlws_cancel_service(lws_get_context(wsi));\n\t\t}\n\t\tbreak;\n\n\t/* --- client callbacks --- */\n\n\tcase LWS_CALLBACK_CLIENT_ESTABLISHED:\n\t\tlwsl_user(\"%s: established (try %d, est %d, closed %d, err %d)\\n\",\n\t\t\t\t__func__, tries, est, closed, errors);\n\t\test++;\n\t\tpss->conn = conn++;\n\t\tlws_callback_on_writable(wsi);\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLIENT_CLOSED:\n\t\tclosed++;\n\t\tif (tries == closed + errors) {\n\t\t\tinterrupted = 1;\n\t\t\tlws_cancel_service(lws_get_context(wsi));\n\t\t}\n\t\tif (tries == limit) {\n\t\t\tlwsl_user(\"%s: leaving CLOSED (try %d, est %d, sent %d, closed %d, err %d)\\n\",\n\t\t\t\t\t__func__, tries, est, sent, closed, errors);\n\t\t\tbreak;\n\t\t}\n\n\t\tfor (n = 0; n < concurrent; n++) {\n\t\t\tif (clients[n].wsi == wsi) {\n\t\t\t\tconnect_client(n);\n\t\t\t\tlwsl_user(\"%s: reopening (try %d, est %d, closed %d, err %d)\\n\",\n\t\t\t\t\t\t__func__, tries, est, closed, errors);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (n == concurrent)\n\t\t\tlwsl_user(\"CLOSED: can't find client wsi\\n\");\n\t\tbreak;\n\n\tcase LWS_CALLBACK_CLIENT_WRITEABLE:\n\t\tn = lws_snprintf((char *)ping + LWS_PRE, sizeof(ping) - LWS_PRE,\n\t\t\t\t\t  \"hello %d\", pss->conn);\n\n\t\tm = lws_write(wsi, ping + LWS_PRE, (unsigned int)n, LWS_WRITE_TEXT);\n\t\tif (m < n) {\n\t\t\tlwsl_err(\"sending ping failed: %d\\n\", m);\n\n\t\t\treturn -1;\n\t\t}\n\t\tlws_set_timeout(wsi, PENDING_TIMEOUT_USER_OK, LWS_TO_KILL_ASYNC);\n\t\tbreak;\n\n\tdefault:\n\t\tbreak;\n\t}\n\n\treturn lws_callback_http_dummy(wsi, reason, user, in, len);\n}\n\nstatic const struct lws_protocols protocols[] = {\n\t{\n\t\t\"lws-spam-test\",\n\t\tcallback_minimal_spam,\n\t\tsizeof(struct pss),\n\t\t0,\n\t},\n\t{ NULL, NULL, 0, 0 }\n};\n\nstatic struct lws_protocol_vhost_options pvo = {\n        NULL,                  /* \"next\" pvo linked-list */\n        NULL,                 /* \"child\" pvo linked-list */\n        \"lws-spam-test\",        /* protocol name we belong to on this vhost */\n        \"OK\"                     /* ignored */\n};\n\nstatic void\nsigint_handler(int sig)\n{\n\tinterrupted = 1;\n}\n\nint main(int argc, const char **argv)\n{\n\tstruct lws_context_creation_info info;\n\tconst char *p;\n\tint n = 0, logs = LLL_USER | LLL_ERR | LLL_WARN | LLL_NOTICE\n\t\t\t/* for LLL_ verbosity above NOTICE to be built into lws,\n\t\t\t * lws must have been configured and built with\n\t\t\t * -DCMAKE_BUILD_TYPE=DEBUG instead of =RELEASE */\n\t\t\t/* | LLL_INFO */ /* | LLL_PARSER */ /* | LLL_HEADER */\n\t\t\t/* | LLL_EXT */ /* | LLL_CLIENT */ /* | LLL_LATENCY */\n\t\t\t/* | LLL_DEBUG */;\n\n\tsignal(SIGINT, sigint_handler);\n\n\tif ((p = lws_cmdline_option(argc, argv, \"-d\")))\n\t\tlogs = atoi(p);\n\n\tlws_set_log_level(logs, NULL);\n\tlwsl_user(\"LWS minimal ws client SPAM\\n\");\n\n\tmemset(&info, 0, sizeof info); /* otherwise uninitialized garbage */\n\tinfo.options = LWS_SERVER_OPTION_DO_SSL_GLOBAL_INIT;\n\tinfo.port = CONTEXT_PORT_NO_LISTEN; /* we do not run any server */\n\tinfo.protocols = protocols;\n\tinfo.pvo = &pvo;\n#if defined(LWS_WITH_MBEDTLS) || defined(USE_WOLFSSL)\n\t/*\n\t * OpenSSL uses the system trust store.  mbedTLS has to be told which\n\t * CA to trust explicitly.\n\t */\n\tinfo.client_ssl_ca_filepath = \"./libwebsockets.org.cer\";\n#endif\n\n\tif ((p = lws_cmdline_option(argc, argv, \"--server\"))) {\n\t\tserver_address = p;\n\t\tssl_connection |= LCCSCF_ALLOW_SELFSIGNED;\n\t}\n\n\tif ((p = lws_cmdline_option(argc, argv, \"--port\")))\n\t\tport = atoi(p);\n\n\tif ((p = lws_cmdline_option(argc, argv, \"-l\")))\n\t\tlimit = atoi(p);\n\n\tif ((p = lws_cmdline_option(argc, argv, \"-c\")))\n\t\tconcurrent = atoi(p);\n\n\tif (lws_cmdline_option(argc, argv, \"-n\")) {\n\t\tssl_connection = 0;\n\t\tinfo.options = 0;\n\t}\n\n\tif (concurrent < 0 ||\n\t    concurrent > (int)LWS_ARRAY_SIZE(clients)) {\n\t\tlwsl_err(\"%s: -c %d larger than max concurrency %d\\n\", __func__,\n\t\t\t\tconcurrent, (int)LWS_ARRAY_SIZE(clients));\n\n\t\treturn 1;\n\t}\n\n\t/*\n\t * since we know this lws context is only ever going to be used with\n\t * one client wsis / fds / sockets at a time, let lws know it doesn't\n\t * have to use the default allocations for fd tables up to ulimit -n.\n\t * It will just allocate for 1 internal and n (+ 1 http2 nwsi) that we\n\t * will use.\n\t */\n\tinfo.fd_limit_per_thread = (unsigned int)(1 + concurrent + 1);\n\n\tcontext = lws_create_context(&info);\n\tif (!context) {\n\t\tlwsl_err(\"lws init failed\\n\");\n\t\treturn 1;\n\t}\n\n\twhile (n >= 0 && !interrupted)\n\t\tn = lws_service(context, 0);\n\n\tlwsl_notice(\"%s: exiting service loop\\n\", __func__);\n\n\tlws_context_destroy(context);\n\n\tif (tries == limit && closed == tries) {\n\t\tlwsl_user(\"Completed\\n\");\n\t\treturn 0;\n\t}\n\n\tlwsl_err(\"Failed\\n\");\n\n\treturn 1;\n}\n",
			"file": "libwebsockets/minimal-examples/ws-client/minimal-ws-client-spam/minimal-ws-client-spam.c",
			"file_size": 6822,
			"file_write_time": 132774575772419894,
			"settings":
			{
				"buffer_size": 6822,
				"line_ending": "Unix"
			}
		},
		{
			"file": "minnet-server.c",
			"settings":
			{
				"buffer_size": 9862,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"paste",
					null,
					"AQAAAJoPAAAAAAAA4g8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmg8AAAAAAACaDwAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"paste",
					null,
					"AQAAAJwPAAAAAAAAqQ8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnA8AAAAAAACcDwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAKkPAAAAAAAAqg8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqQ8AAAAAAACpDwAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJoPAAAAAAAAmw8AAAAAAAAAAAAAmw8AAAAAAACcDwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmg8AAAAAAACaDwAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnA8AAAAAAACcDwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-server-http.c",
			"settings":
			{
				"buffer_size": 19922,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					17,
					1,
					"cut",
					null,
					"AQAAAF8pAAAAAAAAXykAAAAAAABKAgAACiAgaWYocmVhc29uICE9IExXU19DQUxMQkFDS19IVFRQX1dSSVRFQUJMRSAmJiAocmVhc29uIDwgTFdTX0NBTExCQUNLX0hUVFBfQklORF9QUk9UT0NPTCB8fCByZWFzb24gPiBMV1NfQ0FMTEJBQ0tfQ0hFQ0tfQUNDRVNTX1JJR0hUUykpIHsKICAgIGx3c2xfdXNlcigiaHR0cCAiIEZHKCIlZCIpICIlLTI1cyIgTkMgIiB3c2kjJSIgUFJJZDY0ICIgZmQ9JWkgaXNfaDI9JWkgaXNfc3NsPSVpIHVybD0lcyBtZXRob2Q9JXMgaW49JyUuKnMnXG4iLAogICAgICAgICAgICAgIDIyICsgKHJlYXNvbiAqIDIpLAogICAgICAgICAgICAgIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbikgKyAxMywKICAgICAgICAgICAgICBvcGFxdWUtPnNlcmlhbCwKICAgICAgICAgICAgICBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLAogICAgICAgICAgICAgIHNlcnYgJiYgc2Vydi0+aDIgfHwgaXNfaDIod3NpKSwKICAgICAgICAgICAgICBsd3NfaXNfc3NsKHdzaSksCiAgICAgICAgICAgICAgdXJsLAogICAgICAgICAgICAgIG1ldGhvZF9uYW1lKG1ldGhvZCksCiAgICAgICAgICAgICAgKGludClsZW4sCiAgICAgICAgICAgICAgKGNoYXIqKWluKTsKICB9Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfKQAAAAAAAKkrAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"paste",
					null,
					"AQAAAApLAAAAAAAAVE0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKSwAAAAAAAApLAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "int"
					},
					"BAAAAFdNAAAAAAAAWE0AAAAAAAAAAAAAWE0AAAAAAABYTQAAAAAAAAYAAAByZXR1cm5YTQAAAAAAAFlNAAAAAAAAAAAAAFlNAAAAAAAAWk0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXTQAAAAAAAF1NAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " ret="
					},
					"BQAAAFpNAAAAAAAAW00AAAAAAAAAAAAAW00AAAAAAABcTQAAAAAAAAAAAABcTQAAAAAAAF1NAAAAAAAAAAAAAF1NAAAAAAAAXk0AAAAAAAAAAAAAXk0AAAAAAABfTQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaTQAAAAAAAFpNAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "\n\nreturn"
					},
					"CwAAAJRNAAAAAAAAlU0AAAAAAAAAAAAAlU0AAAAAAACXTQAAAAAAAAAAAACXTQAAAAAAAJhNAAAAAAAAAAAAAJhNAAAAAAAAmk0AAAAAAAAAAAAAlU0AAAAAAACVTQAAAAAAAAIAAAAgIJhNAAAAAAAAmU0AAAAAAAAAAAAAmU0AAAAAAACaTQAAAAAAAAAAAACaTQAAAAAAAJtNAAAAAAAAAAAAAJtNAAAAAAAAnE0AAAAAAAAAAAAAnE0AAAAAAACdTQAAAAAAAAAAAACdTQAAAAAAAJ5NAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUTQAAAAAAAJRNAAAAAAAA////////738"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " rert"
					},
					"BQAAAJ5NAAAAAAAAn00AAAAAAAAAAAAAn00AAAAAAACgTQAAAAAAAAAAAACgTQAAAAAAAKFNAAAAAAAAAAAAAKFNAAAAAAAAok0AAAAAAAAAAAAAok0AAAAAAACjTQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeTQAAAAAAAJ5NAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					2,
					"left_delete",
					null,
					"AgAAAKJNAAAAAAAAok0AAAAAAAABAAAAdKFNAAAAAAAAoU0AAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjTQAAAAAAAKNNAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "t:"
					},
					"AgAAAKFNAAAAAAAAok0AAAAAAAAAAAAAok0AAAAAAACjTQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChTQAAAAAAAKFNAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"cut",
					null,
					"AQAAAFVNAAAAAAAAVU0AAAAAAABAAAAAICBpbnQgcmV0PSBsd3NfY2FsbGJhY2tfaHR0cF9kdW1teSh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVTQAAAAAAAJVNAAAAAAAAAAAAAAAAAAA"
				],
				[
					37,
					1,
					"paste",
					null,
					"AQAAAApLAAAAAAAASksAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKSwAAAAAAAApLAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " ret=%d"
					},
					"BwAAAENMAAAAAAAAREwAAAAAAAAAAAAAREwAAAAAAABFTAAAAAAAAAAAAABFTAAAAAAAAEZMAAAAAAAAAAAAAEZMAAAAAAAAR0wAAAAAAAAAAAAAR0wAAAAAAABITAAAAAAAAAAAAABITAAAAAAAAElMAAAAAAAAAAAAAElMAAAAAAAASkwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDTAAAAAAAAENMAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJRNAAAAAAAAlU0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUTQAAAAAAAJRNAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"left_delete",
					null,
					"AQAAAJRNAAAAAAAAlE0AAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVTQAAAAAAAJVNAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJRNAAAAAAAAlU0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUTQAAAAAAAJRNAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " ret"
					},
					"BAAAAJVNAAAAAAAAlk0AAAAAAAAAAAAAlk0AAAAAAACXTQAAAAAAAAAAAACXTQAAAAAAAJhNAAAAAAAAAAAAAJhNAAAAAAAAmU0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVTQAAAAAAAJVNAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZTQAAAAAAAJlNAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"left_delete",
					null,
					"AQAAALxNAAAAAAAAvE0AAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9TQAAAAAAAL1NAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALxNAAAAAAAAvU0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8TQAAAAAAALxNAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "\ner"
					},
					"AwAAABItAAAAAAAAEy0AAAAAAAAAAAAAEy0AAAAAAAAULQAAAAAAAAAAAAAULQAAAAAAABUtAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASLQAAAAAAABItAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					2,
					"left_delete",
					null,
					"AgAAABQtAAAAAAAAFC0AAAAAAAABAAAAchMtAAAAAAAAEy0AAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVLQAAAAAAABUtAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAABMtAAAAAAAAFC0AAAAAAAAAAAAAFC0AAAAAAAAVLQAAAAAAAAAAAAAVLQAAAAAAABYtAAAAAAAAAAAAABYtAAAAAAAAFy0AAAAAAAAAAAAAFy0AAAAAAAAYLQAAAAAAAAAAAAAYLQAAAAAAABktAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATLQAAAAAAABMtAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " 0;"
					},
					"AwAAABktAAAAAAAAGi0AAAAAAAAAAAAAGi0AAAAAAAAbLQAAAAAAAAAAAAAbLQAAAAAAABwtAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZLQAAAAAAABktAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					4,
					"left_delete",
					null,
					"BAAAAKMsAAAAAAAAoywAAAAAAAABAAAAIKIsAAAAAAAAoiwAAAAAAAABAAAAL6EsAAAAAAAAoSwAAAAAAAABAAAAL58sAAAAAAAAnywAAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkLAAAAAAAAKQsAAAAAAAAAAAAAACAT0A"
				],
				[
					112,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAKcrAAAAAAAAqSsAAAAAAAAAAAAAnisAAAAAAACgKwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeKwAAAAAAAKcrAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAxkAAAAAAAADMQAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "libwebsockets/include/libwebsockets/lws-callbacks.h",
			"settings":
			{
				"buffer_size": 37041,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAQzAAAAAAAABDMAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-server-ws.c",
			"settings":
			{
				"buffer_size": 5532,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					24,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAMwQAAAAAAAAzRAAAAAAAAAAAAAAzRAAAAAAAADNEAAAAAAAAAsAAAAgcmV0dXJuIDA7Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzBAAAAAAAADXEAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPEQAAAAAAAA8hAAAAAAAAAAAAAA8hAAAAAAAADyEAAAAAAAANsBAAB7CiAgICAgIHN0cnVjdCBsd3NfcG9sbGFyZ3MqIGFyZ3MgPSBpbjsKCiAgICAgIGlmKG1pbm5ldF9zZXJ2ZXIuY2JfZmQuY3R4KSB7CiAgICAgICAgSlNWYWx1ZSBhcmd2WzNdID0ge0pTX05ld0ludDMyKG1pbm5ldF9zZXJ2ZXIuY2JfZmQuY3R4LCBhcmdzLT5mZCl9OwogICAgICAgIG1pbm5ldF9oYW5kbGVycyhtaW5uZXRfc2VydmVyLmNiX2ZkLmN0eCwgd3NpLCBhcmdzLCAmYXJndlsxXSk7CgogICAgICAgIG1pbm5ldF9lbWl0KCZtaW5uZXRfc2VydmVyLmNiX2ZkLCAzLCBhcmd2KTsKCiAgICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2JfZmQuY3R4LCBhcmd2WzBdKTsKICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jYl9mZC5jdHgsIGFyZ3ZbMV0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfc2VydmVyLmNiX2ZkLmN0eCwgYXJndlsyXSk7CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8RAAAAAAAADMEgAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABURAAAAAAAAFhEAAAAAAAAAAAAAFhEAAAAAAAAWEQAAAAAAAPEBAAAgewogICAgICBzdHJ1Y3QgbHdzX3BvbGxhcmdzKiBhcmdzID0gaW47CgogICAgICBpZihtaW5uZXRfc2VydmVyLmNiX2ZkLmN0eCkgewogICAgICAgIEpTVmFsdWUgYXJndlszXSA9IHsKICAgICAgICAgICAgSlNfTmV3SW50MzIobWlubmV0X3NlcnZlci5jYl9mZC5jdHgsIGFyZ3MtPmZkKSwKICAgICAgICB9OwogICAgICAgIG1pbm5ldF9oYW5kbGVycyhtaW5uZXRfc2VydmVyLmNiX2ZkLmN0eCwgd3NpLCBhcmdzLCAmYXJndlsxXSk7CiAgICAgICAgbWlubmV0X2VtaXQoJm1pbm5ldF9zZXJ2ZXIuY2JfZmQsIDMsIGFyZ3YpOwogICAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfc2VydmVyLmNiX2ZkLmN0eCwgYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2JfZmQuY3R4LCBhcmd2WzFdKTsKICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jYl9mZC5jdHgsIGFyZ3ZbMl0pOwogICAgICB9CiAgICAgIHJldHVybiAwOwogICAgfQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFREAAAAAAAAGEwAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGoRAAAAAAAAaxEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAahEAAAAAAABqEQAAAAAAAAAAAAAAgHFA"
				],
				[
					42,
					1,
					"paste",
					null,
					"AQAAAGsRAAAAAAAAdhEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaxEAAAAAAABrEQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHYRAAAAAAAAeBEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdhEAAAAAAAB2EQAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "wsi,"
					},
					"BAAAAHcRAAAAAAAAeBEAAAAAAAAAAAAAeBEAAAAAAAB5EQAAAAAAAAAAAAB5EQAAAAAAAHoRAAAAAAAAAAAAAHoRAAAAAAAAexEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdxEAAAAAAAB3EQAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": " reason,"
					},
					"CAAAAHsRAAAAAAAAfBEAAAAAAAAAAAAAfBEAAAAAAAB9EQAAAAAAAAAAAAB9EQAAAAAAAH4RAAAAAAAAAAAAAH4RAAAAAAAAfxEAAAAAAAAAAAAAfxEAAAAAAACAEQAAAAAAAAAAAACAEQAAAAAAAIERAAAAAAAAAAAAAIERAAAAAAAAghEAAAAAAAAAAAAAghEAAAAAAACDEQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAexEAAAAAAAB7EQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIMRAAAAAAAAhBEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgxEAAAAAAACDEQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "  in,"
					},
					"BQAAAIQRAAAAAAAAhREAAAAAAAAAAAAAhREAAAAAAACGEQAAAAAAAAAAAACGEQAAAAAAAIcRAAAAAAAAAAAAAIcRAAAAAAAAiBEAAAAAAAAAAAAAiBEAAAAAAACJEQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhBEAAAAAAACEEQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIkRAAAAAAAAihEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiREAAAAAAACJEQAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "&/"
					},
					"AgAAAIoRAAAAAAAAixEAAAAAAAAAAAAAixEAAAAAAACMEQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAihEAAAAAAACKEQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"left_delete",
					null,
					"AQAAAIsRAAAAAAAAixEAAAAAAAABAAAALw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjBEAAAAAAACMEQAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "minnet_server.c"
					},
					"DwAAAIsRAAAAAAAAjBEAAAAAAAAAAAAAjBEAAAAAAACNEQAAAAAAAAAAAACNEQAAAAAAAI4RAAAAAAAAAAAAAI4RAAAAAAAAjxEAAAAAAAAAAAAAjxEAAAAAAACQEQAAAAAAAAAAAACQEQAAAAAAAJERAAAAAAAAAAAAAJERAAAAAAAAkhEAAAAAAAAAAAAAkhEAAAAAAACTEQAAAAAAAAAAAACTEQAAAAAAAJQRAAAAAAAAAAAAAJQRAAAAAAAAlREAAAAAAAAAAAAAlREAAAAAAACWEQAAAAAAAAAAAACWEQAAAAAAAJcRAAAAAAAAAAAAAJcRAAAAAAAAmBEAAAAAAAAAAAAAmBEAAAAAAACZEQAAAAAAAAAAAACZEQAAAAAAAJoRAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAixEAAAAAAACLEQAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "b_fd"
					},
					"BAAAAJoRAAAAAAAAmxEAAAAAAAAAAAAAmxEAAAAAAACcEQAAAAAAAAAAAACcEQAAAAAAAJ0RAAAAAAAAAAAAAJ0RAAAAAAAAnhEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmhEAAAAAAACaEQAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"cut",
					null,
					"AQAAAIURAAAAAAAAhREAAAAAAAAEAAAAIGluLA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhREAAAAAAACJEQAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": ",."
					},
					"AgAAAJoRAAAAAAAAmxEAAAAAAAAAAAAAmxEAAAAAAACcEQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmhEAAAAAAACaEQAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJwRAAAAAAAAnREAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnBEAAAAAAACcEQAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					2,
					"left_delete",
					null,
					"AgAAAJwRAAAAAAAAnBEAAAAAAAABAAAAIJsRAAAAAAAAmxEAAAAAAAABAAAALg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnREAAAAAAACdEQAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": " in0"
					},
					"BAAAAJsRAAAAAAAAnBEAAAAAAAAAAAAAnBEAAAAAAACdEQAAAAAAAAAAAACdEQAAAAAAAJ4RAAAAAAAAAAAAAJ4RAAAAAAAAnxEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmxEAAAAAAACbEQAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"left_delete",
					null,
					"AQAAAJ4RAAAAAAAAnhEAAAAAAAABAAAAMA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnxEAAAAAAACfEQAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJ8RAAAAAAAAoBEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnxEAAAAAAACfEQAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"left_delete",
					null,
					"AQAAAEMRAAAAAAAAQxEAAAAAAAAmAAAACiAgICAgIHN0cnVjdCBsd3NfcG9sbGFyZ3MqIGFyZ3MgPSBpbjs",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaREAAAAAAABDEQAAAAAAAAAAAAAAgHpA"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAEURAAAAAAAARhEAAAAAAAAAAAAARhEAAAAAAABHEQAAAAAAAAAAAABHEQAAAAAAAEgRAAAAAAAAAAAAAEgRAAAAAAAASREAAAAAAAAAAAAASREAAAAAAABKEQAAAAAAAAAAAABKEQAAAAAAAEsRAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARREAAAAAAABFEQAAAAAAAAAAAAAAAAAA"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEsRAAAAAAAATBEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASxEAAAAAAABLEQAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAIYRAAAAAAAAhxEAAAAAAAAAAAAAhxEAAAAAAACHEQAAAAAAAN0BAAAgIGlmKG1pbm5ldF9zZXJ2ZXIuY2JfZmQuY3R4KSB7CiAgICAgICAgaWYoYXJncy0+ZXZlbnRzICE9IGFyZ3MtPnByZXZfZXZlbnRzKSB7CiAgICAgICAgICBKU1ZhbHVlIGFyZ3ZbM10gPSB7SlNfTmV3SW50MzIobWlubmV0X3NlcnZlci5jYl9mZC5jdHgsIGFyZ3MtPmZkKX07CiAgICAgICAgICBtaW5uZXRfaGFuZGxlcnMobWlubmV0X3NlcnZlci5jYl9mZC5jdHgsIHdzaSwgYXJncywgJmFyZ3ZbMV0pOwoKICAgICAgICAgIG1pbm5ldF9lbWl0KCZtaW5uZXRfc2VydmVyLmNiX2ZkLCAzLCBhcmd2KTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfc2VydmVyLmNiX2ZkLmN0eCwgYXJndlswXSk7CiAgICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jYl9mZC5jdHgsIGFyZ3ZbMV0pOwogICAgICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2JfZmQuY3R4LCBhcmd2WzJdKTsKICAgICAgICB9CiAgICAgIH0",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhhEAAAAAAABjEwAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAIcRAAAAAAAAiBEAAAAAAAAAAAAAiBEAAAAAAACIEQAAAAAAABAAAAAKICAgICAgcmV0dXJuIDA7",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhxEAAAAAAACXEQAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"revert",
					null,
					"BQAAAAAAAAAAAAAAAAAAAAAAAACjFQAAI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1yZXF1ZXN0LmgiCgppbnQgaHR0cF9jYWxsYmFjayhzdHJ1Y3QgbHdzKiwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucywgdm9pZCosIHZvaWQqLCBzaXplX3QpOwoKaW50CndzX2NhbGxiYWNrKHN0cnVjdCBsd3MqIHdzaSwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucyByZWFzb24sIHZvaWQqIHVzZXIsIHZvaWQqIGluLCBzaXplX3QgbGVuKSB7CiAgTWlubmV0U2Vzc2lvbiogc2VzcyA9IHVzZXI7CiAgSlNDb250ZXh0KiBjdHggPSBtaW5uZXRfc2VydmVyLmN0eDsKCiAgc3dpdGNoKHJlYXNvbikgewogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX0NMSUVOVF9WRVJJRllfQ0VSVFM6CiAgICBjYXNlIExXU19DQUxMQkFDS19TRVJWRVJfTkVXX0NMSUVOVF9JTlNUQU5USUFURUQ6CiAgICBjYXNlIExXU19DQUxMQkFDS19QUk9UT0NPTF9JTklUOiB7CiAgICAgIHJldHVybiBsd3NfY2FsbGJhY2tfaHR0cF9kdW1teSh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9DT05GSVJNX1VQR1JBREU6IHsKCiAgICAgIGlmKCFsd3NfaXNfc3NsKHdzaSkgJiYgIXN0cmNtcChpbiwgImgyYyIpKQogICAgICAgIHJldHVybiAtMTsKICAgICAgLyogcmV0dXJuIDA7CiAgICAgICByZXR1cm4gaHR0cF9jYWxsYmFjayh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7Ki8KICAgICAgLyogaWYobWlubmV0X3NlcnZlci5jYl9jb25uZWN0LmN0eCkgeyovCiAgICAgIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CgogICAgICBvcGFxdWUtPnJlcSA9IHJlcXVlc3RfbmV3KGN0eCwgaW4sIGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fR0VUX1VSSSksIE1FVEhPRF9HRVQpOwoKICAgICAgaW50IG51bV9oZHIgPSBodHRwX2hlYWRlcnMoY3R4LCAmb3BhcXVlLT5yZXEtPmhlYWRlcnMsIHdzaSk7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0VTVEFCTElTSEVEOiB7CiAgICAgIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CgogICAgICBpZihtaW5uZXRfc2VydmVyLmNiX2Nvbm5lY3QuY3R4KSB7CiAgICAgICAgSlNDb250ZXh0KiBjdHggPSBtaW5uZXRfc2VydmVyLmNiX2Nvbm5lY3QuY3R4OwoKICAgICAgICBpZighb3BhcXVlLT5yZXEpCiAgICAgICAgICBvcGFxdWUtPnJlcSA9IHJlcXVlc3RfbmV3KGN0eCwgaW4sIGx3c19nZXRfdXJpKHdzaSwgY3R4LCBXU0lfVE9LRU5fR0VUX1VSSSksIE1FVEhPRF9HRVQpOwoKICAgICAgICBhc3NlcnQob3BhcXVlLT5yZXEpOwoKICAgICAgICBpZighSlNfSXNPYmplY3Qoc2Vzcy0+cmVxX29iaikpCiAgICAgICAgICBzZXNzLT5yZXFfb2JqID0gbWlubmV0X3JlcXVlc3Rfd3JhcChjdHgsIG9wYXF1ZS0+cmVxKTsKCiAgICAgICAgc2Vzcy0+d3Nfb2JqID0gbWlubmV0X3dzX3dyYXAoY3R4LCB3c2kpOwogICAgICAgIG9wYXF1ZS0+d3MgPSBtaW5uZXRfd3NfZGF0YTIoY3R4LCBzZXNzLT53c19vYmopOwoKICAgICAgICBsd3NsX3VzZXIoIndzICAgIiBGRygiJWQiKSAiJS0yNXMiIE5DICIgd3NpIyUiIFBSSWQ2NCAiIHJlcT0lcCB1cmw9JXNcbiIsIDIyICsgKHJlYXNvbiAqIDIpLCBsd3NfY2FsbGJhY2tfbmFtZShyZWFzb24pICsgMTMsIG9wYXF1ZS0+c2VyaWFsLCBvcGFxdWUtPnJlcSwgb3BhcXVlLT5yZXEtPnVybCk7CiAgICAgICAgbWlubmV0X2VtaXRfdGhpcygmbWlubmV0X3NlcnZlci5jYl9jb25uZWN0LCBzZXNzLT53c19vYmosIDIsICZzZXNzLT53c19vYmopOwogICAgICB9CgogICAgICByZXR1cm4gMDsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19XU19QRUVSX0lOSVRJQVRFRF9DTE9TRToKICAgIGNhc2UgTFdTX0NBTExCQUNLX0NMT1NFRDogewogICAgICBpZighc2Vzcy0+Y2xvc2VkKSB7CiAgICAgICAgSlNDb250ZXh0KiBjdHggPSBtaW5uZXRfc2VydmVyLmNiX2Nsb3NlLmN0eDsKICAgICAgICBKU1ZhbHVlIHdoeSA9IEpTX1VOREVGSU5FRDsKICAgICAgICBpbnQgY29kZSA9IC0xOwoKICAgICAgICBpZihpbikgewogICAgICAgICAgdWludDhfdCogY29kZXAgPSBpbjsKICAgICAgICAgIGNvZGUgPSAoY29kZXBbMF0gPDwgOCkgKyBjb2RlcFsxXTsKICAgICAgICAgIGlmKGxlbiAtIDIgPiAwKQogICAgICAgICAgICB3aHkgPSBKU19OZXdTdHJpbmdMZW4obWlubmV0X3NlcnZlci5jdHgsIChjaGFyKilpbiArIDIsIGxlbiAtIDIpOwogICAgICAgIH0KCiAgICAgICAgbHdzbF91c2VyKCJ3cyAgICIgRkcoIiVkIikgIiUtMjVzIiBOQyAiIGZkPSVkXG4iLCAyMiArIChyZWFzb24gKiAyKSwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLCBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpKTsKCiAgICAgICAgaWYoY3R4KSB7CiAgICAgICAgICBKU1ZhbHVlIGNiX2FyZ3ZbM10gPSB7SlNfRHVwVmFsdWUoY3R4LCBzZXNzLT53c19vYmopLCBjb2RlICE9IC0xID8gSlNfTmV3SW50MzIoY3R4LCBjb2RlKSA6IEpTX1VOREVGSU5FRCwgd2h5fTsKICAgICAgICAgIG1pbm5ldF9lbWl0KCZtaW5uZXRfc2VydmVyLmNiX2Nsb3NlLCBjb2RlICE9IC0xID8gMyA6IDEsIGNiX2FyZ3YpOwogICAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgY2JfYXJndlswXSk7CiAgICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCBjYl9hcmd2WzFdKTsKICAgICAgICB9CiAgICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY3R4LCB3aHkpOwogICAgICAgIEpTX0ZyZWVWYWx1ZShtaW5uZXRfc2VydmVyLmN0eCwgc2Vzcy0+d3Nfb2JqKTsKICAgICAgICBzZXNzLT53c19vYmogPSBKU19OVUxMOwogICAgICAgIHNlc3MtPmNsb3NlZCA9IDE7CiAgICAgIH0KICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfU0VSVkVSX1dSSVRFQUJMRTogewogICAgICAvKiAgIHByaW50Zigid3MgICAlcyBmZD0lZFxuIiwgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSwgbHdzX2dldF9zb2NrZXRfZmQod3NpKSk7CiAgICAgICAgIGx3c19jYWxsYmFja19vbl93cml0YWJsZSh3c2kpOyovCiAgICAgIHJldHVybiAwOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRTogewogICAgICBKU0NvbnRleHQqIGN0eCA9IG1pbm5ldF9zZXJ2ZXIuY2JfbWVzc2FnZS5jdHg7CiAgICAgIGlmKGN0eCkgewogICAgICAgIE1pbm5ldFdlYnNvY2tldCogd3MgPSBtaW5uZXRfd3NfZGF0YTIoY3R4LCBzZXNzLT53c19vYmopOwogICAgICAgIEpTVmFsdWUgbXNnID0gd3MtPmJpbmFyeSA/IEpTX05ld0FycmF5QnVmZmVyQ29weShjdHgsIGluLCBsZW4pIDogSlNfTmV3U3RyaW5nTGVuKGN0eCwgaW4sIGxlbik7CiAgICAgICAgSlNWYWx1ZSBjYl9hcmd2WzJdID0ge0pTX0R1cFZhbHVlKGN0eCwgc2Vzcy0+d3Nfb2JqKSwgbXNnfTsKICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYl9tZXNzYWdlLCAyLCBjYl9hcmd2KTsKICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCBjYl9hcmd2WzBdKTsKICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCBjYl9hcmd2WzFdKTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX1JFQ0VJVkVfUE9ORzogewogICAgICBpZihtaW5uZXRfc2VydmVyLmNiX3BvbmcuY3R4KSB7CiAgICAgICAgLy8gd3Nfb2JqID0gbWlubmV0X3dzX3dyYXAobWlubmV0X3NlcnZlci5jYl9wb25nLmN0eCwgd3NpKTsKICAgICAgICBKU1ZhbHVlIG1zZyA9IEpTX05ld0FycmF5QnVmZmVyQ29weShtaW5uZXRfc2VydmVyLmNiX3BvbmcuY3R4LCBpbiwgbGVuKTsKICAgICAgICBKU1ZhbHVlIGNiX2FyZ3ZbMl0gPSB7SlNfRHVwVmFsdWUobWlubmV0X3NlcnZlci5jYl9wb25nLmN0eCwgc2Vzcy0+d3Nfb2JqKSwgbXNnfTsKICAgICAgICBtaW5uZXRfZW1pdCgmbWlubmV0X3NlcnZlci5jYl9wb25nLCAyLCBjYl9hcmd2KTsKICAgICAgICBKU19GcmVlVmFsdWUobWlubmV0X3NlcnZlci5jYl9wb25nLmN0eCwgY2JfYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKG1pbm5ldF9zZXJ2ZXIuY2JfcG9uZy5jdHgsIGNiX2FyZ3ZbMV0pOwogICAgICB9CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0xPQ0tfUE9MTDoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1VOTE9DS19QT0xMOiAKICAgIGNhc2UgTFdTX0NBTExCQUNLX0FERF9QT0xMX0ZEOiAgCiAgICBjYXNlIExXU19DQUxMQkFDS19ERUxfUE9MTF9GRDogCiAgICBjYXNlIExXU19DQUxMQkFDS19DSEFOR0VfTU9ERV9QT0xMX0ZEOiB7CgpyZXR1cm4gZmRfY2FsbGJhY2sod3NpLCByZWFzb24sICAgJm1pbm5ldF9zZXJ2ZXIuY2JfZmQsIGluKTsKICAgICAgCiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfV1NJX0NSRUFURToKICAgIGNhc2UgTFdTX0NBTExCQUNLX1dTSV9ERVNUUk9ZOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRklMVEVSX05FVFdPUktfQ09OTkVDVElPTjoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0ZJTFRFUl9QUk9UT0NPTF9DT05ORUNUSU9OOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfQUREX0hFQURFUlM6CiAgICBjYXNlIExXU19DQUxMQkFDS19XU19TRVJWRVJfRFJPUF9QUk9UT0NPTDogewogICAgICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9CSU5EX1BST1RPQ09MOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9EUk9QX1BST1RPQ09MOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfQ0xPU0VEX0hUVFA6CiAgICBjYXNlIExXU19DQUxMQkFDS19GSUxURVJfSFRUUF9DT05ORUNUSU9OOiB7CiAgICAgIHJldHVybiBodHRwX2NhbGxiYWNrKHdzaSwgcmVhc29uLCB1c2VyLCBpbiwgbGVuKTsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0NPTVBMRVRFRF9DTElFTlRfSFRUUDoKICAgIGRlZmF1bHQ6IHsKICAgICAgbWlubmV0X2x3c191bmhhbmRsZWQoIldTIiwgcmVhc29uKTsKICAgICAgcmV0dXJuIDA7CiAgICB9CiAgfQoKICBsd3NsX3VzZXIoIndzICAgIiBGRygiJWQiKSAiJS0yNXMiIE5DICIgZmQ9JWQgdXJsPSclcycgaW49JyUuKnMnXG4iLAogICAgICAgICAgICAyMiArIChyZWFzb24gKiAyKSwKICAgICAgICAgICAgbHdzX2NhbGxiYWNrX25hbWUocmVhc29uKSArIDEzLAogICAgICAgICAgICBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpLAogICAgICAgICAgICBsd3NfZ2V0X3VyaSh3c2ksIG1pbm5ldF9zZXJ2ZXIuY3R4LCBXU0lfVE9LRU5fR0VUX1VSSSksCiAgICAgICAgICAgIChpbnQpbGVuLAogICAgICAgICAgICAoY2hhciopaW4pOwoKICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwp9CgAAAAAAAAAAnBUAAAAAAAAAAAAAAAAAAAAAAACcFQAAAAAAAAAAAAAAAAAAAAAAAJwVAAAAAAAAAAAAAAAAAAAAAAAAnBUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiBEAAAAAAACIEQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "#include \"buffer.h\"\n#include \"jsutils.h\"\n#include \"minnet-websocket.h\"\n#include \"minnet-server.h\"\n#include \"minnet-server-http.h\"\n\nTHREAD_LOCAL JSValue minnet_ws_proto, minnet_ws_ctor;\nTHREAD_LOCAL JSClassID minnet_ws_class_id;\n\nenum { WEBSOCKET_FD, WEBSOCKET_ADDRESS, WEBSOCKET_FAMILY, WEBSOCKET_PORT, WEBSOCKET_PEER, WEBSOCKET_SSL, WEBSOCKET_BINARY };\nenum { RESPONSE_BODY, RESPONSE_HEADER, RESPONSE_REDIRECT };\n\nstatic JSValue\nminnet_ws_new(JSContext* ctx, struct lws* wsi) {\n  MinnetWebsocket* ws;\n  JSValue ws_obj = JS_NewObjectProtoClass(ctx, minnet_ws_proto, minnet_ws_class_id);\n\n  if(JS_IsException(ws_obj))\n    return JS_EXCEPTION;\n\n  if(!(ws = js_mallocz(ctx, sizeof(MinnetWebsocket)))) {\n    JS_FreeValue(ctx, ws_obj);\n    return JS_EXCEPTION;\n  }\n\n  ws->lwsi = wsi;\n  ws->ref_count = 1;\n  ws->handlers[0] = JS_NULL;\n  ws->handlers[1] = JS_NULL;\n\n  JS_SetOpaque(ws_obj, ws);\n\n  struct wsi_opaque_user_data* opaque = lws_opaque(wsi, ctx);\n\n  opaque->obj = JS_VALUE_GET_OBJ(JS_DupValue(ctx, ws_obj));\n  opaque->ws = ws;\n\n  // lws_set_opaque_user_data(wsi, opaque);\n  //  lws_set_opaque_user_data(wsi,ws);\n\n  return ws_obj;\n}\n\nMinnetWebsocket*\nminnet_ws_from_wsi(struct lws* wsi) {\n  struct wsi_opaque_user_data* opaque;\n\n  if((opaque = lws_get_opaque_user_data(wsi)))\n    return opaque->ws ? opaque->ws : JS_GetOpaque(JS_MKPTR(JS_TAG_OBJECT, opaque->obj), minnet_ws_class_id);\n\n  return 0;\n}\n\nMinnetWebsocket*\nminnet_ws_get(struct lws* wsi, JSContext* ctx) {\n  JSValue ws_obj = minnet_ws_object(ctx, wsi);\n  return JS_GetOpaque(ws_obj, minnet_ws_class_id);\n}\n\nJSValue\nminnet_ws_object(JSContext* ctx, struct lws* wsi) {\n  struct wsi_opaque_user_data* opaque;\n\n  if((opaque = lws_get_opaque_user_data(wsi))) {\n    JSValue ws_obj;\n    MinnetWebsocket* ws;\n    if(opaque->obj) {\n      ws_obj = JS_DupValue(ctx, JS_MKPTR(JS_TAG_OBJECT, opaque->obj));\n      ws = JS_GetOpaque2(ctx, ws_obj, minnet_ws_class_id);\n      if(!ws)\n        return JS_EXCEPTION;\n      ws->ref_count++;\n    } else {\n      ws_obj = minnet_ws_wrap(ctx, wsi);\n      opaque->obj = JS_VALUE_GET_OBJ(ws_obj);\n    }\n    return ws_obj;\n  }\n\n  return minnet_ws_new(ctx, wsi);\n}\n\nJSValue\nminnet_ws_wrap(JSContext* ctx, struct lws* wsi) {\n  struct wsi_opaque_user_data* opaque;\n  MinnetWebsocket* ws;\n  JSValue ret = JS_NewObjectProtoClass(ctx, minnet_ws_proto, minnet_ws_class_id);\n\n  if(JS_IsException(ret))\n    return JS_EXCEPTION;\n\n  ws = js_mallocz(ctx, sizeof(MinnetWebsocket));\n\n  ws->lwsi = wsi;\n  ws->handlers[0] = JS_NULL;\n  ws->handlers[1] = JS_NULL;\n  ws->ref_count = 1;\n\n  JS_SetOpaque(ret, ws);\n\n  if(!(opaque = lws_get_opaque_user_data(wsi))) {\n    opaque = js_mallocz(ctx, sizeof(struct wsi_opaque_user_data));\n    lws_set_opaque_user_data(wsi, opaque);\n  }\n\n  assert(!opaque->ws);\n\n  opaque->obj = JS_VALUE_GET_OBJ(JS_DupValue(ctx, ret));\n  opaque->ws = ws;\n\n  return ret;\n}\n\nvoid\nminnet_ws_sslcert(JSContext* ctx, struct lws_context_creation_info* info, JSValueConst options) {\n  JSValue opt_ssl_cert = JS_GetPropertyStr(ctx, options, \"sslCert\");\n  JSValue opt_ssl_private_key = JS_GetPropertyStr(ctx, options, \"sslPrivateKey\");\n  JSValue opt_ssl_ca = JS_GetPropertyStr(ctx, options, \"sslCA\");\n\n  if(JS_IsString(opt_ssl_cert))\n    info->ssl_cert_filepath = JS_ToCString(ctx, opt_ssl_cert);\n  if(JS_IsString(opt_ssl_private_key))\n    info->ssl_private_key_filepath = JS_ToCString(ctx, opt_ssl_private_key);\n  if(JS_IsString(opt_ssl_ca))\n    info->ssl_ca_filepath = JS_ToCString(ctx, opt_ssl_ca);\n}\n\nstatic JSValue\nminnet_ws_send(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst* argv) {\n  MinnetWebsocket* ws;\n  int64_t m, len;\n  MinnetBuffer buffer = BUFFER_0();\n  JSValue ret = JS_UNDEFINED;\n\n  if(!(ws = JS_GetOpaque2(ctx, this_val, minnet_ws_class_id)))\n    return JS_EXCEPTION;\n\n  m = buffer_fromvalue(&buffer, argv[0], ctx);\n  if(!m)\n    return JS_ThrowTypeError(ctx, \"argument 1 expecting String/ArrayBuffer\");\n\n  if(m < 0) {\n    ret = JS_ThrowOutOfMemory(ctx);\n    goto fail;\n  }\n  len = buffer_REMAIN(&buffer);\n  m = lws_write(ws->lwsi, buffer.read, buffer_REMAIN(&buffer), JS_IsString(argv[0]) ?  : LWS_WRITE_BINARY);\n\n  if(m < len)\n    ret = JS_ThrowInternalError(ctx, \"lws write failed: %\" PRIi64 \"/%\" PRIi64, m, len);\n  else\n    ret = JS_NewInt64(ctx, m);\n\nfail:\n  buffer_free(&buffer, JS_GetRuntime(ctx));\n\n  return ret;\n}\n\nstatic JSValue\nminnet_ws_respond(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst* argv, int magic) {\n  MinnetWebsocket* ws;\n  JSValue ret = JS_UNDEFINED;\n\n  if(!(ws = JS_GetOpaque2(ctx, this_val, minnet_ws_class_id)))\n    return JS_EXCEPTION;\n  MinnetBuffer header = {0, 0, 0, 0, 0};\n\n  switch(magic) {\n    case RESPONSE_BODY: {\n      const char* msg = 0;\n      uint32_t status = 0;\n\n      JS_ToUint32(ctx, &status, argv[0]);\n      if(argc >= 2)\n        msg = JS_ToCString(ctx, argv[1]);\n      lws_return_http_status(ws->lwsi, status, msg);\n      if(msg)\n        JS_FreeCString(ctx, msg);\n      break;\n    }\n    case RESPONSE_REDIRECT: {\n      const char* msg = 0;\n      size_t len = 0;\n      uint32_t status = 0;\n      JS_ToUint32(ctx, &status, argv[0]);\n\n      if(argc >= 2)\n        msg = JS_ToCStringLen(ctx, &len, argv[1]);\n      if(lws_http_redirect(ws->lwsi, status, (unsigned char*)msg, len, &header.write, header.end) < 0)\n        ret = JS_NewInt32(ctx, -1);\n      if(msg)\n        JS_FreeCString(ctx, msg);\n      break;\n    }\n    case RESPONSE_HEADER: {\n      size_t namelen;\n      const char* namestr = JS_ToCStringLen(ctx, &namelen, argv[0]);\n      char* name = js_malloc(ctx, namelen + 2);\n      size_t len;\n      const char* value = JS_ToCStringLen(ctx, &len, argv[1]);\n      memcpy(name, namestr, namelen);\n      name[namelen] = ':';\n      name[namelen + 1] = '\\0';\n\n      if(lws_add_http_header_by_name(ws->lwsi, (const uint8_t*)name, (const uint8_t*)value, len, &header.write, header.end) < 0)\n        ret = JS_NewInt32(ctx, -1);\n\n      js_free(ctx, name);\n      JS_FreeCString(ctx, namestr);\n      JS_FreeCString(ctx, value);\n      break;\n    }\n  }\n\n  return ret;\n}\n\nstatic JSValue\nminnet_ws_ping(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst* argv) {\n  MinnetWebsocket* ws;\n  uint8_t* data;\n  size_t len;\n\n  if(!(ws = JS_GetOpaque2(ctx, this_val, minnet_ws_class_id)))\n    return JS_EXCEPTION;\n\n  data = JS_GetArrayBuffer(ctx, &len, argv[0]);\n  if(data) {\n    uint8_t buffer[len + LWS_PRE];\n    memcpy(&buffer[LWS_PRE], data, len);\n\n    int m = lws_write(ws->lwsi, &buffer[LWS_PRE], len, LWS_WRITE_PING);\n    if((size_t)m < len) {\n      // Sending ping failed\n      return JS_EXCEPTION;\n    }\n  } else {\n    uint8_t buffer[LWS_PRE];\n    lws_write(ws->lwsi, &buffer[LWS_PRE], 0, LWS_WRITE_PING);\n  }\n  return JS_UNDEFINED;\n}\n\nstatic JSValue\nminnet_ws_pong(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst* argv) {\n  MinnetWebsocket* ws;\n  uint8_t* data;\n  size_t len;\n\n  if(!(ws = JS_GetOpaque2(ctx, this_val, minnet_ws_class_id)))\n    return JS_EXCEPTION;\n\n  data = JS_GetArrayBuffer(ctx, &len, argv[0]);\n  if(data) {\n    uint8_t buffer[len + LWS_PRE];\n    memcpy(&buffer[LWS_PRE], data, len);\n\n    int m = lws_write(ws->lwsi, &buffer[LWS_PRE], len, LWS_WRITE_PONG);\n    if((size_t)m < len) {\n      // Sending pong failed\n      return JS_EXCEPTION;\n    }\n  } else {\n    uint8_t buffer[LWS_PRE];\n    lws_write(ws->lwsi, &buffer[LWS_PRE], 0, LWS_WRITE_PONG);\n  }\n  return JS_UNDEFINED;\n}\n\nstatic JSValue\nminnet_ws_close(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst* argv) {\n  MinnetWebsocket* ws;\n  const char* reason = 0;\n  size_t rlen = 0;\n\n  if(!(ws = minnet_ws_data2(ctx, this_val)))\n    return JS_EXCEPTION;\n\n  if(ws->lwsi) {\n    int optind = 0;\n    int32_t status = LWS_CLOSE_STATUS_NORMAL;\n\n    while(optind < argc) {\n      if(JS_IsNumber(argv[optind]) || optind + 1 < argc) {\n        JS_ToInt32(ctx, &status, argv[optind]);\n      } else {\n        reason = JS_ToCStringLen(ctx, &rlen, argv[optind]);\n        if(rlen > 124)\n          rlen = 124;\n      }\n      optind++;\n    }\n\n    // printf(\"minnet_ws_close fd=%d reason=%s\\n\", lws_get_socket_fd(ws->lwsi), reason);\n\n    lws_close_reason(ws->lwsi, status, (uint8_t*)reason, rlen);\n\n    lws_close_free_wsi(ws->lwsi, status, \"minnet_ws_close\");\n    ws->lwsi = 0;\n\n    return JS_TRUE;\n  }\n\n  return JS_FALSE;\n}\n\nstatic JSValue\nminnet_ws_getter(JSContext* ctx, JSValueConst this_val, int magic) {\n  MinnetWebsocket* ws;\n  JSValue ret = JS_UNDEFINED;\n\n  if(!(ws = minnet_ws_data(this_val)))\n    return JS_UNDEFINED;\n\n  if(!ws->lwsi)\n    return JS_NULL;\n\n  switch(magic) {\n    case WEBSOCKET_FD: {\n      ret = JS_NewInt32(ctx, lws_get_socket_fd(lws_get_network_wsi(ws->lwsi)));\n      break;\n    }\n    case WEBSOCKET_ADDRESS: {\n      struct sockaddr_in addr;\n      socklen_t addrlen = sizeof(addr);\n      int fd = lws_get_socket_fd(lws_get_network_wsi(ws->lwsi));\n\n      if(getpeername(fd, (struct sockaddr*)&addr, &addrlen) != -1) {\n        char address[1024];\n        lws_get_peer_simple(ws->lwsi, address, sizeof(address));\n\n        ret = JS_NewString(ctx, address);\n      }\n      break;\n    }\n    case WEBSOCKET_FAMILY:\n    case WEBSOCKET_PORT: {\n      struct sockaddr_in addr;\n      socklen_t addrlen = sizeof(addr);\n      int fd = lws_get_socket_fd(lws_get_network_wsi(ws->lwsi));\n\n      if(getpeername(fd, (struct sockaddr*)&addr, &addrlen) != -1) {\n        ret = JS_NewInt32(ctx, magic == 2 ? addr.sin_family : ntohs(addr.sin_port));\n      }\n      break;\n    }\n    case WEBSOCKET_PEER: {\n      struct sockaddr_in addr;\n      socklen_t addrlen = sizeof(addr);\n      int fd = lws_get_socket_fd(lws_get_network_wsi(ws->lwsi));\n\n      if(getpeername(fd, (struct sockaddr*)&addr, &addrlen) != -1) {\n        ret = JS_NewArrayBufferCopy(ctx, (const uint8_t*)&addr, addrlen);\n      }\n      break;\n    }\n    case WEBSOCKET_SSL: {\n      ret = JS_NewBool(ctx, lws_is_ssl(lws_get_network_wsi(ws->lwsi)));\n      break;\n    }\n    case WEBSOCKET_BINARY: {\n      ret = JS_NewBool(ctx, ws->binary);\n      break;\n    }\n  }\n  return ret;\n}\n\nstatic JSValue\nminnet_ws_setter(JSContext* ctx, JSValueConst this_val, JSValueConst value, int magic) {\n  MinnetWebsocket* ws;\n  JSValue ret = JS_UNDEFINED;\n  if(!(ws = JS_GetOpaque2(ctx, this_val, minnet_ws_class_id)))\n    return JS_EXCEPTION;\n\n  switch(magic) {\n\n    case WEBSOCKET_BINARY: {\n      ws->binary = JS_ToBool(ctx, value);\n      break;\n    }\n  }\n  return ret;\n}\n\nJSValue\nminnet_ws_constructor(JSContext* ctx, JSValueConst new_target, int argc, JSValueConst argv[]) {\n  JSValue proto, obj;\n  MinnetWebsocket* ws;\n\n  if(!(ws = js_mallocz(ctx, sizeof(MinnetWebsocket))))\n    return JS_ThrowOutOfMemory(ctx);\n\n  /* using new_target to get the prototype is necessary when the class is extended. */\n  proto = JS_GetPropertyStr(ctx, new_target, \"prototype\");\n  if(JS_IsException(proto))\n    proto = JS_DupValue(ctx, minnet_ws_proto);\n\n  obj = JS_NewObjectProtoClass(ctx, proto, minnet_ws_class_id);\n  JS_FreeValue(ctx, proto);\n  if(JS_IsException(obj))\n    goto fail;\n\n  ws->handlers[0] = JS_NULL;\n  ws->handlers[1] = JS_NULL;\n\n  if(argc > 0) {\n    if(JS_IsNumber(argv[0])) {\n      uint32_t fd;\n      JS_ToUint32(ctx, &fd, argv[0]);\n      ws->lwsi = lws_adopt_socket(minnet_server.lws, fd);\n    }\n  }\n\n  JS_SetOpaque(obj, ws);\n\n  if(ws->lwsi) {\n    struct wsi_opaque_user_data* opaque = js_malloc(ctx, sizeof(struct wsi_opaque_user_data));\n    opaque->obj = JS_VALUE_GET_OBJ(JS_DupValue(ctx, obj));\n    lws_set_opaque_user_data(ws->lwsi, opaque);\n  }\n\n  return obj;\n\nfail:\n  js_free(ctx, ws);\n  JS_FreeValue(ctx, obj);\n  return JS_EXCEPTION;\n}\n\nstatic void\nminnet_ws_finalizer(JSRuntime* rt, JSValue val) {\n  MinnetWebsocket* ws = JS_GetOpaque(val, minnet_ws_class_id);\n  if(ws) {\n    if(--ws->ref_count == 0)\n      js_free_rt(rt, ws);\n  }\n}\n\nJSClassDef minnet_ws_class = {\n    \"MinnetWebSocket\",\n    .finalizer = minnet_ws_finalizer,\n};\n\nconst JSCFunctionListEntry minnet_ws_proto_funcs[] = {\n    JS_CFUNC_DEF(\"send\", 1, minnet_ws_send),\n    JS_CFUNC_MAGIC_DEF(\"respond\", 1, minnet_ws_respond, RESPONSE_BODY),\n    JS_CFUNC_MAGIC_DEF(\"redirect\", 2, minnet_ws_respond, RESPONSE_REDIRECT),\n    JS_CFUNC_MAGIC_DEF(\"header\", 2, minnet_ws_respond, RESPONSE_HEADER),\n    JS_CFUNC_DEF(\"ping\", 1, minnet_ws_ping),\n    JS_CFUNC_DEF(\"pong\", 1, minnet_ws_pong),\n    JS_CFUNC_DEF(\"close\", 1, minnet_ws_close),\n    JS_CGETSET_MAGIC_FLAGS_DEF(\"fd\", minnet_ws_getter, 0, WEBSOCKET_FD, JS_PROP_ENUMERABLE),\n    JS_CGETSET_MAGIC_FLAGS_DEF(\"address\", minnet_ws_getter, 0, WEBSOCKET_ADDRESS, 0),\n    JS_ALIAS_DEF(\"remoteAddress\", \"address\"),\n    JS_CGETSET_MAGIC_FLAGS_DEF(\"family\", minnet_ws_getter, 0, WEBSOCKET_FAMILY, 0),\n    JS_CGETSET_MAGIC_FLAGS_DEF(\"port\", minnet_ws_getter, 0, WEBSOCKET_PORT, 0),\n    JS_CGETSET_MAGIC_FLAGS_DEF(\"peer\", minnet_ws_getter, 0, WEBSOCKET_PEER, 0),\n    JS_CGETSET_MAGIC_FLAGS_DEF(\"ssl\", minnet_ws_getter, 0, WEBSOCKET_SSL, JS_PROP_ENUMERABLE),\n    JS_CGETSET_MAGIC_FLAGS_DEF(\"binary\", minnet_ws_getter, minnet_ws_setter, WEBSOCKET_BINARY, 0),\n    JS_ALIAS_DEF(\"remote\", \"peer\"),\n    JS_PROP_STRING_DEF(\"[Symbol.toStringTag]\", \"MinnetWebSocket\", JS_PROP_CONFIGURABLE),\n\n};\n\nconst JSCFunctionListEntry minnet_ws_static_funcs[] = {\n\n};\n\nconst JSCFunctionListEntry minnet_ws_proto_defs[] = {\n    JS_PROP_INT32_DEF(\"CLOSE_STATUS_NORMAL\", LWS_CLOSE_STATUS_NORMAL, 0),\n    JS_PROP_INT32_DEF(\"CLOSE_STATUS_GOINGAWAY\", LWS_CLOSE_STATUS_GOINGAWAY, 0),\n    JS_PROP_INT32_DEF(\"CLOSE_STATUS_PROTOCOL_ERR\", LWS_CLOSE_STATUS_PROTOCOL_ERR, 0),\n    JS_PROP_INT32_DEF(\"CLOSE_STATUS_UNACCEPTABLE_OPCODE\", LWS_CLOSE_STATUS_UNACCEPTABLE_OPCODE, 0),\n    JS_PROP_INT32_DEF(\"CLOSE_STATUS_RESERVED\", LWS_CLOSE_STATUS_RESERVED, 0),\n    JS_PROP_INT32_DEF(\"CLOSE_STATUS_NO_STATUS\", LWS_CLOSE_STATUS_NO_STATUS, 0),\n    JS_PROP_INT32_DEF(\"CLOSE_STATUS_ABNORMAL_CLOSE\", LWS_CLOSE_STATUS_ABNORMAL_CLOSE, 0),\n    JS_PROP_INT32_DEF(\"CLOSE_STATUS_INVALID_PAYLOAD\", LWS_CLOSE_STATUS_INVALID_PAYLOAD, 0),\n    JS_PROP_INT32_DEF(\"CLOSE_STATUS_POLICY_VIOLATION\", LWS_CLOSE_STATUS_POLICY_VIOLATION, 0),\n    JS_PROP_INT32_DEF(\"CLOSE_STATUS_MESSAGE_TOO_LARGE\", LWS_CLOSE_STATUS_MESSAGE_TOO_LARGE, 0),\n    JS_PROP_INT32_DEF(\"CLOSE_STATUS_EXTENSION_REQUIRED\", LWS_CLOSE_STATUS_EXTENSION_REQUIRED, 0),\n    JS_PROP_INT32_DEF(\"CLOSE_STATUS_UNEXPECTED_CONDITION\", LWS_CLOSE_STATUS_UNEXPECTED_CONDITION, 0),\n    JS_PROP_INT32_DEF(\"CLOSE_STATUS_TLS_FAILURE\", LWS_CLOSE_STATUS_TLS_FAILURE, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_CONTINUE\", HTTP_STATUS_CONTINUE, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_OK\", HTTP_STATUS_OK, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_NO_CONTENT\", HTTP_STATUS_NO_CONTENT, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_PARTIAL_CONTENT\", HTTP_STATUS_PARTIAL_CONTENT, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_MOVED_PERMANENTLY\", HTTP_STATUS_MOVED_PERMANENTLY, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_FOUND\", HTTP_STATUS_FOUND, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_SEE_OTHER\", HTTP_STATUS_SEE_OTHER, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_NOT_MODIFIED\", HTTP_STATUS_NOT_MODIFIED, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_BAD_REQUEST\", HTTP_STATUS_BAD_REQUEST, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_UNAUTHORIZED\", HTTP_STATUS_UNAUTHORIZED, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_PAYMENT_REQUIRED\", HTTP_STATUS_PAYMENT_REQUIRED, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_FORBIDDEN\", HTTP_STATUS_FORBIDDEN, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_NOT_FOUND\", HTTP_STATUS_NOT_FOUND, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_METHOD_NOT_ALLOWED\", HTTP_STATUS_METHOD_NOT_ALLOWED, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_NOT_ACCEPTABLE\", HTTP_STATUS_NOT_ACCEPTABLE, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_PROXY_AUTH_REQUIRED\", HTTP_STATUS_PROXY_AUTH_REQUIRED, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_REQUEST_TIMEOUT\", HTTP_STATUS_REQUEST_TIMEOUT, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_CONFLICT\", HTTP_STATUS_CONFLICT, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_GONE\", HTTP_STATUS_GONE, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_LENGTH_REQUIRED\", HTTP_STATUS_LENGTH_REQUIRED, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_PRECONDITION_FAILED\", HTTP_STATUS_PRECONDITION_FAILED, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_REQ_ENTITY_TOO_LARGE\", HTTP_STATUS_REQ_ENTITY_TOO_LARGE, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_REQ_URI_TOO_LONG\", HTTP_STATUS_REQ_URI_TOO_LONG, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_UNSUPPORTED_MEDIA_TYPE\", HTTP_STATUS_UNSUPPORTED_MEDIA_TYPE, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_REQ_RANGE_NOT_SATISFIABLE\", HTTP_STATUS_REQ_RANGE_NOT_SATISFIABLE, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_EXPECTATION_FAILED\", HTTP_STATUS_EXPECTATION_FAILED, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_INTERNAL_SERVER_ERROR\", HTTP_STATUS_INTERNAL_SERVER_ERROR, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_NOT_IMPLEMENTED\", HTTP_STATUS_NOT_IMPLEMENTED, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_BAD_GATEWAY\", HTTP_STATUS_BAD_GATEWAY, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_SERVICE_UNAVAILABLE\", HTTP_STATUS_SERVICE_UNAVAILABLE, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_GATEWAY_TIMEOUT\", HTTP_STATUS_GATEWAY_TIMEOUT, 0),\n    JS_PROP_INT32_DEF(\"HTTP_STATUS_HTTP_VERSION_NOT_SUPPORTED\", HTTP_STATUS_HTTP_VERSION_NOT_SUPPORTED, 0),\n};\n\nconst size_t minnet_ws_proto_funcs_size = countof(minnet_ws_proto_funcs);\nconst size_t minnet_ws_static_funcs_size = countof(minnet_ws_static_funcs);\nconst size_t minnet_ws_proto_defs_size = countof(minnet_ws_proto_defs);\n",
			"file": "minnet-websocket.c",
			"file_size": 17298,
			"file_write_time": 132782252421902557,
			"settings":
			{
				"buffer_size": 17284,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					34,
					1,
					"left_delete",
					null,
					"AQAAAAgQAAAAAAAACBAAAAAAAAAOAAAATFdTX1dSSVRFX1RFWFQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACBAAAAAAAAAWEAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet.c",
			"settings":
			{
				"buffer_size": 19435,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					14,
					1,
					"paste",
					null,
					"AQAAAFUTAAAAAAAABBoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVRMAAAAAAABVEwAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"paste",
					null,
					"AQAAAFUTAAAAAAAAFBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVRMAAAAAAABVEwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJkTAAAAAAAAmhMAAAAAAAAAAAAAmhMAAAAAAACaEwAAAAAAAAsAAAB2b2lkKiB1c2VyLA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmRMAAAAAAACkEwAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"paste",
					null,
					"AgAAAJsTAAAAAAAAtRMAAAAAAAAAAAAAtRMAAAAAAAC1EwAAAAAAABQAAAB2b2lkKiBpbiwgc2l6ZV90IGxlbg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmxMAAAAAAACvEwAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "fd"
					},
					"AwAAAFoTAAAAAAAAWxMAAAAAAAAAAAAAWxMAAAAAAABbEwAAAAAAAAIAAAB3c1sTAAAAAAAAXBMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXBMAAAAAAABaEwAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"paste",
					null,
					"AQAAAJgTAAAAAAAAphMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmBMAAAAAAACYEwAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "*cbn"
					},
					"BAAAAKYTAAAAAAAApxMAAAAAAAAAAAAApxMAAAAAAACoEwAAAAAAAAAAAACoEwAAAAAAAKkTAAAAAAAAAAAAAKkTAAAAAAAAqhMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAphMAAAAAAACmEwAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"left_delete",
					null,
					"AQAAAKkTAAAAAAAAqRMAAAAAAAABAAAAbg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqhMAAAAAAACqEwAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKkTAAAAAAAAqhMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqRMAAAAAAACpEwAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKoTAAAAAAAAqxMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqhMAAAAAAACqEwAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"",
					null,
					"EgAAAIcaAAAAAAAAixoAAAAAAAAUAAAAbWlubmV0X3NlcnZlci5jYl9mZC5NGgAAAAAAAFEaAAAAAAAAFAAAAG1pbm5ldF9zZXJ2ZXIuY2JfZmQuExoAAAAAAAAXGgAAAAAAABQAAABtaW5uZXRfc2VydmVyLmNiX2ZkLpYZAAAAAAAAmhkAAAAAAAAUAAAAbWlubmV0X3NlcnZlci5jYl9mZC5XGQAAAAAAAFsZAAAAAAAAFAAAAG1pbm5ldF9zZXJ2ZXIuY2JfZmQu4xgAAAAAAADnGAAAAAAAABQAAABtaW5uZXRfc2VydmVyLmNiX2ZkLkUYAAAAAAAASRgAAAAAAAAUAAAAbWlubmV0X3NlcnZlci5jYl9mZC4NGAAAAAAAABEYAAAAAAAAFAAAAG1pbm5ldF9zZXJ2ZXIuY2JfZmQu1RcAAAAAAADZFwAAAAAAABQAAABtaW5uZXRfc2VydmVyLmNiX2ZkLl0XAAAAAAAAYRcAAAAAAAAUAAAAbWlubmV0X3NlcnZlci5jYl9mZC4WFwAAAAAAABoXAAAAAAAAFAAAAG1pbm5ldF9zZXJ2ZXIuY2JfZmQuxxYAAAAAAADLFgAAAAAAABQAAABtaW5uZXRfc2VydmVyLmNiX2ZkLjEWAAAAAAAANRYAAAAAAAAUAAAAbWlubmV0X3NlcnZlci5jYl9mZC75FQAAAAAAAP0VAAAAAAAAFAAAAG1pbm5ldF9zZXJ2ZXIuY2JfZmQuwRUAAAAAAADFFQAAAAAAABQAAABtaW5uZXRfc2VydmVyLmNiX2ZkLkcVAAAAAAAASxUAAAAAAAAUAAAAbWlubmV0X3NlcnZlci5jYl9mZC4KFQAAAAAAAA4VAAAAAAAAFAAAAG1pbm5ldF9zZXJ2ZXIuY2JfZmQuyBQAAAAAAADMFAAAAAAAABQAAABtaW5uZXRfc2VydmVyLmNiX2ZkLg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwRUAAAAAAADVFQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJgUAAAAAAAAmRQAAAAAAAAAAAAAmRQAAAAAAACZFAAAAAAAACYAAAAgICAgICBzdHJ1Y3QgbHdzX3BvbGxhcmdzKiBhcmdzID0gaW47Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvhQAAAAAAACYFAAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABIWAAAAAAAAExYAAAAAAAAAAAAAExYAAAAAAAATFgAAAAAAACYAAAAgICAgICBzdHJ1Y3QgbHdzX3BvbGxhcmdzKiBhcmdzID0gaW47Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEhYAAAAAAAA4FgAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAKkXAAAAAAAAqhcAAAAAAAAAAAAAqhcAAAAAAACqFwAAAAAAACYAAAAgICAgICBzdHJ1Y3QgbHdzX3BvbGxhcmdzKiBhcmdzID0gaW47Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqRcAAAAAAADPFwAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAEIZAAAAAAAAQxkAAAAAAAAAAAAAQxkAAAAAAABHGQAAAAAAAAAAAABHGQAAAAAAAEgZAAAAAAAAAAAAAEMZAAAAAAAAQxkAAAAAAAAEAAAAICAgIEMZAAAAAAAARRkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQhkAAAAAAABCGQAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAAEIZAAAAAAAAQxkAAAAAAAAAAAAAQxkAAAAAAABHGQAAAAAAAAAAAABHGQAAAAAAAEgZAAAAAAAAAAAAAEgZAAAAAAAASRkAAAAAAAAAAAAASRkAAAAAAABKGQAAAAAAAAAAAABKGQAAAAAAAEsZAAAAAAAAAAAAAEsZAAAAAAAATBkAAAAAAAAAAAAATBkAAAAAAABNGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQhkAAAAAAABCGQAAAAAAAP///////+9/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": " -1;"
					},
					"BAAAAE0ZAAAAAAAAThkAAAAAAAAAAAAAThkAAAAAAABPGQAAAAAAAAAAAABPGQAAAAAAAFAZAAAAAAAAAAAAAFAZAAAAAAAAURkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATRkAAAAAAABNGQAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFUZAAAAAAAAVhkAAAAAAAAAAAAAVhkAAAAAAABYGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVRkAAAAAAABVGQAAAAAAAAAAAAAAAFxA"
				],
				[
					131,
					1,
					"cut",
					null,
					"AQAAAOoTAAAAAAAA6hMAAAAAAAAmAAAAICBKU0NvbnRleHQqIGN0eCA9IG1pbm5ldF9zZXJ2ZXIuY3R4Owo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6hMAAAAAAAAQFAAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"cut",
					null,
					"AQAAAMwTAAAAAAAAzBMAAAAAAAAeAAAAICBNaW5uZXRTZXNzaW9uKiBzZXNzID0gdXNlcjsK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzBMAAAAAAADqEwAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVRMAAAAAAABVEwAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAPkYAAAAAAAA+hgAAAAAAAAAAAAA+hgAAAAAAAD+GAAAAAAAAAAAAAD+GAAAAAAAAP8YAAAAAAAAAAAAAPoYAAAAAAAA+hgAAAAAAAAEAAAAICAgIPoYAAAAAAAA/BgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+RgAAAAAAAD5GAAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/RgAAAAAAAD9GAAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"",
					null,
					"AQAAAH4WAAAAAAAAgBYAAAAAAAAUAAAAJm1pbm5ldF9zZXJ2ZXIuY2JfZmQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfhYAAAAAAACSFgAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"",
					null,
					"AQAAACIYAAAAAAAAJBgAAAAAAAAUAAAAJm1pbm5ldF9zZXJ2ZXIuY2JfZmQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIhgAAAAAAAA2GAAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"",
					null,
					"AQAAAO8UAAAAAAAA8RQAAAAAAAAUAAAAJm1pbm5ldF9zZXJ2ZXIuY2JfZmQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7xQAAAAAAAADFQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet.h",
			"settings":
			{
				"buffer_size": 4170,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"paste",
					null,
					"AQAAABULAAAAAAAAigsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFQsAAAAAAAAVCwAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"revert",
					null,
					"BQAAAAAAAAAAAAAAAAAAAAAAAABQEAAAI2lmbmRlZiBNSU5ORVRfSAojZGVmaW5lIE1JTk5FVF9ICgojaW5jbHVkZSA8Y3V0aWxzLmg+CiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CgpzdHJ1Y3QgYnl0ZV9idWZmZXI7CnN0cnVjdCBodHRwX3JlcXVlc3Q7CgojaWZkZWYgSlNfU0hBUkVEX0xJQlJBUlkKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZQojZWxzZQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlX21pbm5ldAojZW5kaWYKCiNkZWZpbmUgTUFYKGEsIGIpICgoYSkgPiAoYikgPyAoYSkgOiAoYikpCiNkZWZpbmUgTUlOKGEsIGIpICgoYSkgPCAoYikgPyAoYSkgOiAoYikpCgojZGVmaW5lIGNvdW50b2YoeCkgKHNpemVvZih4KSAvIHNpemVvZigoeClbMF0pKQojZGVmaW5lIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKHByb3BfbmFtZSwgZmdldHRlciwgZnNldHRlciwgbWFnaWNfbnVtLCBmbGFncykgXAogIHsgXAogICAgLm5hbWUgPSBwcm9wX25hbWUsIC5wcm9wX2ZsYWdzID0gZmxhZ3MsIC5kZWZfdHlwZSA9IEpTX0RFRl9DR0VUU0VUX01BR0lDLCAubWFnaWMgPSBtYWdpY19udW0sIC51ID0gey5nZXRzZXQgPSB7LmdldCA9IHsuZ2V0dGVyX21hZ2ljID0gZmdldHRlcn0sIC5zZXQgPSB7LnNldHRlcl9tYWdpYyA9IGZzZXR0ZXJ9fSB9IFwKICB9CiNkZWZpbmUgSlNfQ0dFVFNFVF9GTEFHU19ERUYocHJvcF9uYW1lLCBmZ2V0dGVyLCBmc2V0dGVyLCBmbGFncykgXAogIHsgXAogICAgLm5hbWUgPSBwcm9wX25hbWUsIC5wcm9wX2ZsYWdzID0gZmxhZ3MsIC5kZWZfdHlwZSA9IEpTX0RFRl9DR0VUU0VULCAudSA9IHsuZ2V0c2V0ID0gey5nZXQgPSB7LmdldHRlcl9tYWdpYyA9IGZnZXR0ZXJ9LCAuc2V0ID0gey5zZXR0ZXJfbWFnaWMgPSBmc2V0dGVyfX0gfSBcCiAgfQoKI2RlZmluZSBTRVRMT0cobWF4X2xldmVsKSBsd3Nfc2V0X2xvZ19sZXZlbCgoKCgobWF4X2xldmVsKSA8PCAxKSAtIDEpICYgKH5MTExfUEFSU0VSKSkgfCBMTExfVVNFUiwgTlVMTCk7CgojZGVmaW5lIEdFVENCUFJPUChvYmosIG9wdCwgY2JfcHRyKSBHRVRDQihKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgb3B0KSwgY2JfcHRyKQojZGVmaW5lIEdFVENCKG9wdCwgY2JfcHRyKSBHRVRDQlRISVMob3B0LCBjYl9wdHIsIHRoaXNfdmFsKQojZGVmaW5lIEdFVENCVEhJUyhvcHQsIGNiX3B0ciwgdGhpc19vYmopIFwKICBpZihKU19Jc0Z1bmN0aW9uKGN0eCwgb3B0KSkgeyBcCiAgICBjYl9wdHIgPSAoTWlubmV0Q2FsbGJhY2spe2N0eCwgSlNfRHVwVmFsdWUoY3R4LCB0aGlzX29iaiksIG9wdCwgI2NiX3B0cn07IFwKICB9CgojZGVmaW5lIEZSRUVDQihjYl9wdHIpIFwKICBkbyB7IFwKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX3B0ci50aGlzX29iaik7IFwKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGNiX3B0ci5mdW5jX29iaik7IFwKICB9IHdoaWxlKDApOwoKI2RlZmluZSBBREQocHRyLCBpbnN0LCBtZW1iZXIpIFwKICBkbyB7IFwKICAgICgqKHB0cikpID0gKGluc3QpOyBcCiAgICAocHRyKSA9ICYoKihwdHIpKS0+bWVtYmVyOyBcCiAgfSB3aGlsZSgwKTsKCiNkZWZpbmUgRkcoYykgIlx4MWJbMzg7NTsiIGMgIm0iCiNkZWZpbmUgQkcoYykgIlx4MWJbNDg7NTsiIGMgIm0iCiNkZWZpbmUgRkdDKGMsIHN0cikgRkcoI2MpIHN0ciBOQwojZGVmaW5lIEJHQyhjLCBzdHIpIEJHKCNjKSBzdHIgTkMKI2RlZmluZSBOQyAiXHgxYlswbSIKCiNpZmRlZiBfVGhyZWFkX2xvY2FsCiNkZWZpbmUgVEhSRUFEX0xPQ0FMIF9UaHJlYWRfbG9jYWwKI2VsaWYgZGVmaW5lZChfX0dOVUNfXykgfHwgZGVmaW5lZChfX0lOVEVMX0NPTVBJTEVSKSB8fCBkZWZpbmVkKF9fU1VOUFJPX0NDKSB8fCBkZWZpbmVkKF9fSUJNQ1BQX18pCiNkZWZpbmUgVEhSRUFEX0xPQ0FMIF9fdGhyZWFkCiNlbGlmIGRlZmluZWQoX1dJTjMyKQojZGVmaW5lIFRIUkVBRF9MT0NBTCBfX2RlY2xzcGVjKHRocmVhZCkKI2Vsc2UKI2Vycm9yIE5vIFRMUyBpbXBsZW1lbnRhdGlvbiBmb3VuZC4KI2VuZGlmCgplbnVtIHsgUkVBRF9IQU5ETEVSID0gMCwgV1JJVEVfSEFORExFUiB9OwplbnVtIGh0dHBfbWV0aG9kOwoKdHlwZWRlZiBzdHJ1Y3QgbHdzX3BvbGxmZCBNaW5uZXRQb2xsRmQ7Cgp0eXBlZGVmIHN0cnVjdCB3c19jYWxsYmFjayB7CiAgSlNDb250ZXh0KiBjdHg7CiAgSlNWYWx1ZSB0aGlzX29iajsKICBKU1ZhbHVlIGZ1bmNfb2JqOwogIGNvbnN0IGNoYXIqIG5hbWU7Cn0gTWlubmV0Q2FsbGJhY2s7Cgp0eXBlZGVmIHN0cnVjdCB1cmwgewogIGNoYXIqIHByb3RvY29sOwogIGNoYXIqIGhvc3Q7CiAgaW50IHBvcnQ7CiAgY2hhciogbG9jYXRpb247Cn0gTWlubmV0VVJMOwoKZXh0ZXJuIFRIUkVBRF9MT0NBTCBzdHJ1Y3QgbHdzX2NvbnRleHQqIG1pbm5ldF9sd3NfY29udGV4dDsKZXh0ZXJuIEpTQ29udGV4dCogbWlubmV0X2xvZ19jdHg7CmV4dGVybiBCT09MIG1pbm5ldF9leGNlcHRpb247CgpNaW5uZXRVUkwgdXJsX2luaXQoSlNDb250ZXh0KiwgY29uc3QgY2hhciogcHJvdG8sIGNvbnN0IGNoYXIqIGhvc3QsIHVpbnQxNl90IHBvcnQsIGNvbnN0IGNoYXIqIHBhdGgpOwpNaW5uZXRVUkwgdXJsX3BhcnNlKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiB1cmwpOwp2b2lkIHVybF9mcmVlKEpTQ29udGV4dCosIE1pbm5ldFVSTCogdXJsKTsKSlNWYWx1ZSBoZWFkZXJfb2JqZWN0KEpTQ29udGV4dCosIGNvbnN0IHN0cnVjdCBieXRlX2J1ZmZlciopOwpzc2l6ZV90IGhlYWRlcl9zZXQoSlNDb250ZXh0Kiwgc3RydWN0IGJ5dGVfYnVmZmVyKiwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogdmFsdWUpOwppbnQgICAgICAgZmRfY2FsbGJhY2soc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCBNaW5uZXRDYWxsYmFjayogY2IsIHN0cnVjdCBsd3NfcG9sbGFyZ3MqIGFyZ3MpOwppbnQgbWlubmV0X2x3c191bmhhbmRsZWQoY29uc3QgY2hhciogaGFuZGxlciwgaW50KTsKSlNWYWx1ZSBtaW5uZXRfZW1pdF90aGlzKGNvbnN0IHN0cnVjdCB3c19jYWxsYmFjayosIEpTVmFsdWVDb25zdCB0aGlzX29iaiwgaW50IGFyZ2MsIEpTVmFsdWUqIGFyZ3YpOwpKU1ZhbHVlIG1pbm5ldF9lbWl0KGNvbnN0IHN0cnVjdCB3c19jYWxsYmFjayosIGludCBhcmdjLCBKU1ZhbHVlKiBhcmd2KTsKdm9pZCBtaW5uZXRfaGFuZGxlcnMoSlNDb250ZXh0Kiwgc3RydWN0IGx3cyogd3NpLCBzdHJ1Y3QgbHdzX3BvbGxhcmdzKiBhcmdzLCBKU1ZhbHVlIG91dFsyXSk7CnZvaWQgdmFsdWVfZHVtcChKU0NvbnRleHQqLCBjb25zdCBjaGFyKiBuLCBKU1ZhbHVlIGNvbnN0KiB2KTsKSlNNb2R1bGVEZWYqIGpzX2luaXRfbW9kdWxlX21pbm5ldChKU0NvbnRleHQqLCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSk7CmNvbnN0IGNoYXIqIGx3c19jYWxsYmFja19uYW1lKGludCk7CgpzdGF0aWMgaW5saW5lIHNpemVfdApieXRlX2Nocihjb25zdCB2b2lkKiB4LCBzaXplX3QgbGVuLCBjaGFyIGMpIHsKICBjb25zdCBjaGFyICpzLCAqdCwgKnN0ciA9IHg7CiAgZm9yKHMgPSBzdHIsIHQgPSBzICsgbGVuOyBzIDwgdDsgKytzKQogICAgaWYoKnMgPT0gYykKICAgICAgYnJlYWs7CiAgcmV0dXJuIHMgLSBzdHI7Cn0KCnN0YXRpYyBpbmxpbmUgc2l6ZV90CmJ5dGVfY2hycyhjb25zdCB2b2lkKiBzdHIsIHNpemVfdCBsZW4sIGNvbnN0IGNoYXIgbmVlZGxlW10sIHNpemVfdCBubCkgewogIGNvbnN0IGNoYXIgKnMsICp0OwogIGZvcihzID0gc3RyLCB0ID0gc3RyICsgbGVuOyBzICE9IHQ7IHMrKykKICAgIGlmKGJ5dGVfY2hyKG5lZWRsZSwgbmwsICpzKSA8IG5sKQogICAgICBicmVhazsKICByZXR1cm4gcyAtIChjb25zdCBjaGFyKilzdHI7Cn0KCnN0YXRpYyBpbmxpbmUgY2hhcioKbHdzX2dldF91cmkoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCwgZW51bSBsd3NfdG9rZW5faW5kZXhlcyB0b2tlbikgewogIHNpemVfdCBsZW47CiAgY2hhciBidWZbMTAyNF07CgogIGlmKChsZW4gPSBsd3NfaGRyX2NvcHkod3NpLCBidWYsIHNpemVvZihidWYpIC0gMSwgdG9rZW4pKSA+IDApCiAgICBidWZbbGVuXSA9ICdcMCc7CiAgZWxzZQogICAgcmV0dXJuIDA7CgogIHJldHVybiBqc19zdHJuZHVwKGN0eCwgYnVmLCBsZW4pOwp9CgojZW5kaWYgLyogTUlOTkVUX0ggKi8KAAAAAAAAAABKEAAAAAAAAAAAAAAAAAAAAAAAAEoQAAAAAAAAAAAAAAAAAAAAAAAAShAAAAAAAAAAAAAAAAAAAAAAAABKEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHwsAAAAAAAAqCwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "minnet-server.h",
			"settings":
			{
				"buffer_size": 925,
				"line_ending": "Unix"
			}
		},
		{
			"file": "buffer.h",
			"settings":
			{
				"buffer_size": 2454,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"inde",
				"Indentation: Detect"
			],
			[
				"add repo",
				"Package Control: Add Repository"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"cmake",
				"CMake Format: Format Selection"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"prettier",
				"Build With: prettier"
			],
			[
				"edit current",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"edit curr",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 393.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-net"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-multi/minimal-http-client-multi.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/jsutils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/buffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/http/client/client-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client/minimal-http-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-h2-rxflow/minimal-http-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-rx/minimal-ws-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-certinfo/minimal-http-client-certinfo.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-client.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/client/connect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-captive-portal/minimal-http-client-captive-portal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-custom-headers/minimal-http-client-custom-headers.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/buffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/test-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-context-vhost.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-mimetypes/minimal-http-server-mimetypes.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-stream.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-stream.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-response.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.sublime-project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-xenial/libwebsockets/include/libwebsockets/lws-writeable.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-xenial/libwebsockets/include/libwebsockets/lws-protocols-plugins.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugins/deaddrop/protocol_lws_deaddrop.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-dynamic/minimal-http-server-dynamic.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-form-post-file/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-form-post/minimal-http-server-form-post.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-deaddrop/minimal-http-server-deaddrop.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-form-post-lwsac/minimal-http-server-form-post.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-form-post-file/minimal-http-server-form-post-file.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/h2/ops-h2.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-proxy/minimal-raw-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-rx/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server-threadpool/minimal-ws-server-threadpool.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugin-standalone/protocol_example_standalone.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/test-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server/minimal-http-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-xenial/libwebsockets/include/libwebsockets/lws-context-vhost.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-h2-long-poll/minimal-http-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-sse/minimal-http-server-sse.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-sse-ring/minimal-http-server-sse-ring.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-tls/minimal-http-server-tls.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-tls-mem/minimal-http-server-tls-mem.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/http/server/lejp-conf.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/READMEs/README.http-fallback.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/READMEs/README.lwsws.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-tls-mem/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-response.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-button.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibwebsockets.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/tls/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindMbedTLS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake",
		"/home/roman/.config/sublime-text/Packages/User/SearchInProject.sublime-settings",
		"/home/roman/.config/sublime-text/Packages/Search in Project/SearchInProject.sublime-settings",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt.user",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-fetch.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/api-tests/api-test-lws_smd/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindBrotli.cmake",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Material.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/jsutils.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/c-utils/cfg.sh",
		"/home/roman/Projects/shish/cfg-autotools.sh",
		"/home/roman/Projects/shish/cfg.sh",
		"/home/roman/Projects/libunistring-0.9.10/cfg-android.sh",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/UseMultiArch.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/libwebsockets/include/libwebsockets/lws-context-vhost.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-proxy-fallback/minimal-raw-proxy-fallback.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/dummy-callback.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/service.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-custom-headers/minimal-http-server-custom-headers.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-dynamic/minimal-http-server-dynamic.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-dynamic/localhost-100y.key",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-h2-long-poll/minimal-http-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/output.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/http/header.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugins/protocol_fulltext_demo.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/secure-streams/protocols/ss-h1.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-sse/minimal-http-server-sse.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-sse-ring/minimal-http-server-sse-ring.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-tls-mem/minimal-http-server-tls-mem.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/tls/mbedtls/wrapper/platform/ssl_pm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-h2-long-poll/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/libwebsockets/_CPack_Packages/Linux/TGZ/libwebsockets-4.2.99-v4.2.0-204-g00aa46fa-Linux/include/libwebsockets/lws-protocols-plugins.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/drivers/devices/display/ili9341.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-timeout-timer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-raw-proxy/minimal-ws-raw-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-proxy/minimal-raw-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/ws/ops-ws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/h1/ops-h1.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core/logs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-logs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/api-tests/api-test-lws_sequencer/main.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-tls-80/minimal-http-server-tls-80.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/x86_64-linux-debug/libwebsockets/include/libwebsockets/lws-protocols-plugins.h",
		"/home/roman/Projects/plot-cv/test-rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/http/server/server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/libwebsockets.dox",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/h2/private-lib-roles-h2.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/h2/http2.c"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 109.0,
		"where_history":
		[
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets*/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*,-*/libwebsockets/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/brotli/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/libwebsockets/*,-*/brotli/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/mbedtls/*,-*/libwebsockets/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.txt,*.cmake,-*/build/*,-*/libwebsockets/*",
			",/home/roman/Projects/plot-cv/quickjs/qjs-net.*.c,*.h,*.txt,*.cmake,-*/build/*,-*/libwebsockets/*",
			"*.c,*.h,*.txt,*.cmake,-*/build/*",
			"*.c,*.h,*.txt,*.cmakem,-*/build/*",
			"*.c,*.h,*.txt,-*/build/*",
			"*.c,*.h,-*/build/*",
			"*.c,*.h,-*/build/*,-*/libwebsockets/*",
			"*.c,*.h,-*/build/*",
			"*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/net,-*/build/*,*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/net,-*/build/*,-*/libwebsockets/*,*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/net,-*/build/*,*.c,*.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"cb_connect",
			"lws_client_connect_via_info",
			"\\&minnet_server.cb_fd",
			"CHANGE_MODE",
			"->ssl_",
			"info.options.*SSL",
			"info.options",
			"lws_client_connect_via_info",
			"LWS_CALLBACK_LOCK_POLL",
			"minnet_server.cb_fd\\.",
			"://.*libweb",
			"://",
			"client_ssl_ca_filepath",
			"client_ssl_ca_filepath =",
			"cert\\.pem",
			"cert.pem",
			"client_ssl_ca_filepath",
			"ssl_conn",
			"COMPLETED_CLIENT_HTTP",
			"\"ws  ",
			"\"ws ",
			"\"ws  ",
			"client_protocols",
			"LWS_CALLBACK_COMPLETED_CLIENT_HTTP",
			"lws_http_client_read",
			"lws_http_client_read\n",
			"lws_http_client_read",
			"LWS_CALLBACK_RECEIVE_CLIENT_HTTP",
			"connect_client",
			"lws_client_connect_via_info",
			"buffer_from",
			"minnet_ws_new",
			"client_protocols",
			"\\), ",
			"JS_GetPropertyStr.ctx,",
			"lws_client_connect_via_info",
			"minnet_server.context",
			"minnet_lws_context",
			"innet_lws_context =",
			"innet_lws_context",
			"minnet_server.context",
			"minnet_server.ctx",
			"BIND",
			"BIND_PRO",
			"_INIT",
			"CALLBACK_RAW",
			"cb_close",
			"cb_conn",
			"onConn",
			"LWS_CALLBACK_RAW",
			"lws_callback_on",
			"writable",
			"vhost_option_",
			"http_mount",
			"lws_http_mount",
			"pvo_mime",
			"http_callback",
			"message",
			"protocol_lws_raw_proxy.c",
			"lws_client_connect_via_info",
			"http_respond",
			"BODY_COM",
			"http_respond",
			"read_only",
			"201",
			"http_callback",
			"headers",
			"REQUEST_HEADERS",
			"http_respond",
			"http_respnd",
			"http_respond",
			"http_response",
			"http_status",
			"BODY_COM",
			"mount_find",
			"file_upload_cb",
			"200",
			"protocols =",
			"info.protocols",
			"protocols",
			"http-only",
			"protocols",
			"info.protocols =",
			"info.protocols",
			"protocols2",
			"protocol",
			"LWS_CALLBACK_HTTP_CONFIRM_UPGRADE",
			"CONFIRM_UPGRADE",
			"UPGRADE",
			"(HTTP_BIND_PROTOCOL|HTTP_CHECK_ACCESS)",
			"HTTP_BIND_PROTOCOL|HTTP_CHECK_ACCESS",
			"HTTP_BIND_PRO",
			"redirect-http",
			"redirect",
			"CHECK_ACCESS",
			"ADD_HEADERS",
			"mount_create",
			"->def",
			"terminal",
			"inspect",
			"createWS",
			"throw",
			"connect_client",
			"lws_client_connect_via_info",
			"_info",
			"protocols",
			"INSTALL_RPATH",
			"RPATH",
			"add_lib",
			"OPENSSL_LIBRARY_DIR",
			"WITH_MBEDTLS",
			"W",
			"WITH_MBEDTLS",
			"LWS_OPENSSL",
			"pkg_search",
			"OPENSSL_LIBRARIES",
			"OPENSSL_LIBRAR",
			"OPENSSL_INC",
			"OPENSSL_LIBRARIES",
			"LIBWEBSOCKETS_C_FLAGS",
			"_FLAGS",
			"lwsl_user",
			"lws_write",
			"byte_chr",
			"MinnetBuffer",
			"WRITE_HAN",
			"done",
			"LWS_EXTERN struct lws "
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"cb",
			"->client_ssl_",
			"cb->",
			"\"client ",
			" ,",
			" ",
			"minnet_server.lws",
			"minnet_server.context",
			"minnet_lws_context",
			"DROP",
			"vhost_options_",
			"lwsl_debug",
			" ",
			"OPENSSL_",
			"",
			"}\\\\\\n  ${",
			"LIBWEBSOCKETS_LIBRARY_DIR",
			"${ESC}",
			" ",
			"",
			"brotli",
			"broli",
			"libbrotli",
			"  ",
			"${MBEDTLS_LIBRARIES}",
			"${MBEDTLS_CRYPTO_LIBRARY}",
			"${MBEDTLS_X509_LIBRARY}",
			"${MBEDTLS_LIBRARY}",
			"${MBEDTLS_CRYPTO_LIBRARY}",
			"TARGET ",
			"CMAKE_INSTALL_PREFIX",
			":INTERNAL",
			":STRING",
			"lwsl_debug",
			"JSBuffer",
			"#",
			"CMAKE_INSTALL_LIBDIR",
			"CMAKE_",
			"",
			"wsi#%",
			"\\1lwsl_user(",
			"\\1lwsl_user",
			"->headers\\1",
			"REQUEST_HEADERS",
			"buffer->",
			"url.",
			"url->",
			"\"",
			"->wsi[ONWARD]",
			"->wsi[ACCEPTED]",
			"->queue[ONWARD]",
			"->queue[ACCEPTED]",
			"ctx",
			"\"ws   ",
			"%-25s",
			"ctx",
			"http_headers(",
			"http_respond(",
			"",
			"opaque",
			"=",
			"mount",
			"STREAM_BUFFER",
			"stream",
			"cb_http",
			"case ",
			"minnet_server.",
			"serv->generator",
			"REQUEST_TYPE",
			"ws_obj",
			"case (int)LWS_CALLBACK",
			"",
			">normal<",
			"server.cb",
			"&server.info",
			"src",
			"url",
			"",
			"rsp",
			"_ws_",
			"->rsp",
			"state_dump",
			"RESPONSE_OFFSET",
			"RESPONSE_LENGTH",
			"static JSValue",
			"0",
			"res->body",
			"REQUEST_BODY",
			"\\\\n\"\\n\"\\1",
			"<br />",
			"\\\\n\"",
			"\\n\"",
			"#include <quickjs-libc.h>",
			"#include <list.h>",
			"#include <cutils.h>",
			"#include <quickjs.h>",
			"MinnetCallback",
			"_socket_",
			"MINNET_SOCKET_H",
			"inline",
			"static inline ",
			"hdr->",
			"",
			"request",
			"h->",
			"ctx",
			"equest",
			"req",
			"request",
			"args",
			"MinnetPollFd",
			"request->body.",
			"request->",
			"request",
			"body",
			"http_callback",
			"ws_callback",
			"protocols",
			"MinnetHttpHeader",
			"MinnetHttpMount",
			"struct lws_http_mount",
			"org",
			"JSUTILS_H",
			"io_handler",
			"make_handler",
			", ",
			"MinnetWebsocketCallback",
			", "
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": false,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 505,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
							"function_name_status_row": 12,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									271,
									291
								],
								[
									552,
									569
								],
								[
									1081,
									1099
								],
								[
									1293,
									1305
								],
								[
									1920,
									1929
								],
								[
									3557,
									3567
								],
								[
									4396,
									4406
								],
								[
									4643,
									4655
								],
								[
									6444,
									6459
								],
								[
									7080,
									7089
								],
								[
									7268,
									7278
								],
								[
									8486,
									8499
								],
								[
									9816,
									9829
								]
							],
							"symlist":
							[
								"‚Äî‚íª‚Äì vhost_options_create ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì vhost_options_new ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì vhost_options_free ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì mount_create ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì mount_new ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì mount_find ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì mount_free ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì http_respond ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì request_handler ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì file_size ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì serve_file ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì http_writable ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì http_callback ( ) { ‚Ä¶ } ‚Äî function"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633805636.73,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "minnet-client.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10054,
						"regions":
						{
						},
						"selection":
						[
							[
								7777,
								7777
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 249,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633805633.61,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2870.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "minnet-client.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 323,
						"regions":
						{
						},
						"selection":
						[
							[
								202,
								202
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 10,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633800788.67,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "libwebsockets/minimal-examples/ws-client/minimal-ws-client-rx/minimal-ws-client.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3888,
						"regions":
						{
						},
						"selection":
						[
							[
								3656,
								3656
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 140,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633755614.25,
							"tabs_extra_last_activated_sheet_index": 1,
							"tabs_extra_moving":
							[
								5,
								1
							],
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1634.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "libwebsockets/minimal-examples/http-client/minimal-http-client-multi/minimal-http-client-multi.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18555,
						"regions":
						{
						},
						"selection":
						[
							[
								10268,
								10268
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 391,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"tabs_extra_last_activated": 1633755599.44,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5654.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "libwebsockets/minimal-examples/ws-client/minimal-ws-client/minimal-ws-client.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5470,
						"regions":
						{
						},
						"selection":
						[
							[
								1956,
								1956
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 74,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633755509.86,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 869.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "libwebsockets/minimal-examples/http-client/minimal-http-client/minimal-http-client.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10359,
						"regions":
						{
						},
						"selection":
						[
							[
								8749,
								8749
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 355,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633755613.97,
							"tabs_extra_last_activated_sheet_index": 4,
							"tabs_extra_moving":
							[
								5,
								1
							],
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5264.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "libwebsockets/test-apps/test-client.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22790,
						"regions":
						{
							"col_23456789":
							{
								"flags": 16,
								"regions":
								[
									[
										1594,
										1604
									],
									[
										1634,
										1644
									],
									[
										9484,
										9494
									]
								],
								"scope": "col_23456789"
							},
							"col_23456789_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_23456789_circle.png",
								"regions":
								[
									[
										1549,
										1549
									],
									[
										1610,
										1610
									],
									[
										9457,
										9457
									]
								],
								"scope": "col_gutter"
							},
							"col_7A5BC2E3":
							{
								"flags": 16,
								"regions":
								[
									[
										2622,
										2632
									]
								],
								"scope": "col_7A5BC2E3"
							},
							"col_7A5BC2E3_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_7A5BC2E3_circle.png",
								"regions":
								[
									[
										2572,
										2572
									]
								],
								"scope": "col_gutter"
							},
							"col_B4BCD35C":
							{
								"flags": 16,
								"regions":
								[
									[
										2444,
										2454
									],
									[
										2533,
										2543
									]
								],
								"scope": "col_B4BCD35C"
							},
							"col_B4BCD35C_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_B4BCD35C_circle.png",
								"regions":
								[
									[
										2394,
										2394
									],
									[
										2483,
										2483
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										11257,
										11265
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										11241,
										11241
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								18627,
								18627
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 741,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 7,
							"tabs_extra_last_activated": 1633754835.55,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 11114.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "libwebsockets/minimal-examples/http-client/minimal-http-client-attach/minimal-http-client-attach.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6468,
						"regions":
						{
						},
						"selection":
						[
							[
								3433,
								3433
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 146,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633755600.29,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1949.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "libwebsockets/minimal-examples/http-client/minimal-http-client-h2-rxflow/minimal-http-client.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7433,
						"regions":
						{
						},
						"selection":
						[
							[
								5480,
								5480
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 232,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633755610.77,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3014.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "libwebsockets/minimal-examples/http-client/minimal-http-client-custom-headers/minimal-http-client-custom-headers.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5699,
						"regions":
						{
						},
						"selection":
						[
							[
								5485,
								5485
							]
						],
						"settings":
						{
							"function_name_status_row": 218,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2894.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "libwebsockets/include/libwebsockets/lws-client.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16011,
						"regions":
						{
						},
						"selection":
						[
							[
								4221,
								4221
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 98,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633754834.74,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1229.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "libwebsockets/minimal-examples/http-client/minimal-http-client-certinfo/minimal-http-client-certinfo.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6119,
						"regions":
						{
						},
						"selection":
						[
							[
								5905,
								5905
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 221,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633755431.38,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2984.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "libwebsockets/minimal-examples/http-client/minimal-http-client-captive-portal/minimal-http-client-captive-portal.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7299,
						"regions":
						{
						},
						"selection":
						[
							[
								4518,
								4518
							]
						],
						"settings":
						{
							"function_name_status_row": 201,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2909.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "libwebsockets/lib/abstract/transports/raw-skt.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10138,
						"regions":
						{
						},
						"selection":
						[
							[
								7276,
								7276
							]
						],
						"settings":
						{
							"function_name_status_row": 285,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4034.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "libwebsockets/minimal-examples/client-server/minimal-ws-proxy/protocol_lws_minimal.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6111,
						"regions":
						{
						},
						"selection":
						[
							[
								1928,
								1928
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 82,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633755478.06,
							"tabs_extra_last_activated_sheet_index": 11,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 989.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "libwebsockets/minimal-examples/raw/minimal-raw-adopt-tcp/minimal-raw-adopt-tcp.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4747,
						"regions":
						{
						},
						"selection":
						[
							[
								605,
								605
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 16,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633755483.77,
							"tabs_extra_last_activated_sheet_index": 12,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "libwebsockets/minimal-examples/gtk/minimal-gtk/main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5083,
						"regions":
						{
						},
						"selection":
						[
							[
								1517,
								1517
							]
						],
						"settings":
						{
							"function_name_status_row": 59,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 644.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "libwebsockets/minimal-examples/raw/minimal-raw-netcat/minimal-raw-netcat.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6218,
						"regions":
						{
						},
						"selection":
						[
							[
								4215,
								4215
							]
						],
						"settings":
						{
							"function_name_status_row": 178,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 8,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2429.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "libwebsockets/minimal-examples/ws-client/minimal-ws-client-spam/minimal-ws-client-spam.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6822,
						"regions":
						{
						},
						"selection":
						[
							[
								1501,
								1501
							]
						],
						"settings":
						{
							"function_name_status_row": 73,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 8,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 764.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "minnet-server.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9862,
						"regions":
						{
						},
						"selection":
						[
							[
								3996,
								3996
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 110,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633754834.04,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1259.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "minnet-server-http.c",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19922,
						"regions":
						{
						},
						"selection":
						[
							[
								16582,
								16588
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 538,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633962610.98,
							"tabs_extra_last_activated_sheet_index": 20,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8920.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "libwebsockets/include/libwebsockets/lws-callbacks.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37041,
						"regions":
						{
						},
						"selection":
						[
							[
								12355,
								12355
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 311,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633805966.32,
							"tabs_extra_last_activated_sheet_index": 21,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4341.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "minnet-server-ws.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5532,
						"regions":
						{
						},
						"selection":
						[
							[
								4233,
								4488
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 116,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633753998.73,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1530.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "minnet-websocket.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17284,
						"regions":
						{
						},
						"selection":
						[
							[
								4104,
								4104
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 146,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633800786.23,
							"tabs_extra_last_activated_sheet_index": 21,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1859.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "minnet.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19435,
						"regions":
						{
						},
						"selection":
						[
							[
								5833,
								5833
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 212,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633754770.57,
							"tabs_extra_last_activated_sheet_index": 10,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2609.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "minnet.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4170,
						"regions":
						{
						},
						"selection":
						[
							[
								3268,
								3330
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 99,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633753402.93,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 945.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "minnet-server.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 925,
						"regions":
						{
						},
						"selection":
						[
							[
								251,
								265
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 13,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633753500.65,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "buffer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2454,
						"regions":
						{
						},
						"selection":
						[
							[
								1258,
								1269
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 38,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633752963.41,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.763542181388,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.exec":
	{
		"height": 304.0
	},
	"output.find_results":
	{
		"height": 337.0
	},
	"pinned_build_system": "make",
	"project": "minnet.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"lws-ca",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"buffer.h",
				"buffer.h"
			],
			[
				"lws-call",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"jsu",
				"jsutils.c"
			],
			[
				"lws-cal",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"vhost",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"mime",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-mimetypes/minimal-http-server-mimetypes.c"
			],
			[
				"form-post-file",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-form-post-file/minimal-http-server-form-post-file.c"
			],
			[
				"ops-h2",
				"libwebsockets/lib/roles/h2/ops-h2.c"
			],
			[
				"tls-mem",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-tls-mem/minimal-http-server-tls-mem.c"
			],
			[
				"minnet-client.c",
				"minnet-client.c"
			],
			[
				"",
				"wscli.js"
			],
			[
				"wscli",
				"wscli.js"
			],
			[
				"BuildLi",
				"cmake/BuildLibwebsockets.cmake"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"buffer.c",
				"buffer.c"
			],
			[
				"9",
				"libwebsockets/lib/drivers/devices/display/ili9341.h"
			],
			[
				"minnet.c",
				"minnet.c"
			],
			[
				"proxy.c",
				"minnet-server-proxy.c"
			],
			[
				"raw-proxy",
				"libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-proxy/minimal-raw-proxy.c"
			],
			[
				"ops-h1",
				"libwebsockets/lib/roles/h1/ops-h1.c"
			],
			[
				"ws-raw-",
				"libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-raw-proxy/minimal-ws-raw-proxy.c"
			],
			[
				"lws_raw_pro",
				"libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c"
			],
			[
				"rpc.js",
				"rpc.js"
			],
			[
				"ops-ws",
				"libwebsockets/lib/roles/ws/ops-ws.c"
			],
			[
				"lws-htt",
				"libwebsockets/include/libwebsockets/lws-http.h"
			],
			[
				"rpc",
				"rpc.js"
			],
			[
				"rpc.j",
				"rpc.js"
			],
			[
				"events.js",
				"~/Projects/plot-cv/lib/events.js"
			],
			[
				"debugger.js",
				"~/Projects/plot-cv/debugger.js"
			],
			[
				"test-rpc",
				"~/Projects/plot-cv/test-rpc.js"
			],
			[
				"server.c",
				"libwebsockets/lib/roles/http/server/server.c"
			],
			[
				"minnet-server",
				"minnet-server.c"
			],
			[
				"lws-ado",
				"libwebsockets/include/libwebsockets/lws-adopt.h"
			],
			[
				"test-rp",
				"~/Projects/plot-cv/test-rpc.js"
			],
			[
				"cmakelists-im",
				"libwebsockets/CMakeLists-implied-options.txt"
			],
			[
				"cmake",
				"libwebsockets/CMakeLists.txt"
			],
			[
				"roles-htt",
				"libwebsockets/lib/roles/http/private-lib-roles-http.h"
			],
			[
				"-roles",
				"libwebsockets/lib/roles/h2/private-lib-roles-h2.h"
			],
			[
				"private-lib-rol",
				"libwebsockets/lib/roles/private-lib-roles.h"
			],
			[
				"server",
				"libwebsockets/lib/roles/http/server/server.c"
			],
			[
				"sse.c",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-sse/minimal-http-server-sse.c"
			],
			[
				"minnet-ser",
				"minnet-server.c"
			],
			[
				"quicjs",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"quickj",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"minnet.h",
				"minnet.h"
			],
			[
				"quickjs.",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"webso",
				"minnet-websocket.c"
			],
			[
				"jsutil",
				"minnet-jsutils.h"
			],
			[
				"minnet",
				"minnet.c"
			],
			[
				"websoc",
				"websocket.c"
			],
			[
				"jsut",
				"jsutils.h"
			],
			[
				"minnet-",
				"minnet-server.h"
			],
			[
				"client.c",
				"client.c"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"minn",
				"minnet.c"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			],
			[
				"test_point",
				"tests/test_pointer.js"
			],
			[
				"bnflex",
				"lib/bnflexer.js"
			],
			[
				"bnf.y",
				"~/Projects/plot-cv/lib/grammars/bnf.y"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"grammar.ki",
				"grammar.kison"
			],
			[
				"test_pat",
				"tests/test_path.js"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"test_parse",
				"tests/test_parser.js"
			],
			[
				"test_path",
				"tests/test_path.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"test_tree",
				"tests/test_treewalker.js"
			],
			[
				"tree.h",
				"src/tree.h"
			],
			[
				"scan_ulongn",
				"lib/scan/scan_ulongn.c"
			],
			[
				"term_rest",
				"src/term/term_restore.c"
			],
			[
				"parse.h",
				"src/parse.h"
			],
			[
				"byte.h",
				"lib/byte.h"
			],
			[
				"shell.h",
				"lib/shell.h"
			],
			[
				"mmap_file",
				"lib/stralloc/mmap_filename.c"
			],
			[
				"uffer.h",
				"lib/buffer.h"
			],
			[
				"scan.h",
				"lib/scan.h"
			],
			[
				"stralloc.h",
				"lib/stralloc.h"
			],
			[
				"path.h",
				"lib/path.h"
			],
			[
				"str.h",
				"lib/str.h"
			],
			[
				"scan.",
				"lib/scan.h"
			],
			[
				"debug_char",
				"src/debug/debug_char.c"
			],
			[
				"source_pop",
				"src/source/source_pop.c"
			],
			[
				"builtin.h",
				"src/builtin.h"
			],
			[
				"debug_node",
				"src/debug/debug_node.c"
			],
			[
				"sig_in",
				"lib/sig_internal.h"
			],
			[
				"term_",
				"src/term/term_attr.c"
			],
			[
				"glob.h",
				"lib/glob.h"
			],
			[
				"source.h",
				"src/source.h"
			],
			[
				"fdtable",
				"src/fdtable.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 346.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
