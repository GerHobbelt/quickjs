{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"moun",
				"mountpoint_len"
			],
			[
				"ori",
				"origin_protocol"
			],
			[
				"mount",
				"mountpoint_len"
			],
			[
				"LWS",
				"LWSMPRO_CALLBACK"
			],
			[
				"JS_Free",
				"JS_FreeValue"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_Throw",
				"JS_ThrowReferenceError"
			],
			[
				"minnet",
				"minnet_response_class_id"
			],
			[
				"Minn",
				"MinnetWebsocket"
			],
			[
				"BUILD_",
				"BUILD_LIBWEBSOCKETS"
			],
			[
				"minnet_request",
				"minnet_request_class_id"
			],
			[
				"getOwn",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"Event",
				"EventEmitter"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"JS_GetP",
				"JS_GetPropertyUint32"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"js_loca",
				"js_location_data"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "—Ⓒ– wsi_opaque_user_data { … } ; — type\n—Ⓕ– minnet_ws_new ( ) { … } — \n—Ⓕ– minnet_ws_from_wsi ( ) { … } — \n—Ⓕ– minnet_ws_get ( ) { … } — \n—Ⓕ– minnet_ws_object ( ) { … } — \n—Ⓕ– minnet_ws_wrap ( ) { … } — \n—Ⓕ– minnet_ws_sslcert ( ) { … } — \n—Ⓕ– minnet_ws_send ( ) { … } — \n—Ⓕ– minnet_ws_respond ( ) { … } — \n—Ⓕ– minnet_ws_ping ( ) { … } — \n—Ⓕ– minnet_ws_pong ( ) { … } — \n—Ⓕ– minnet_ws_close ( ) { … } — \n—Ⓕ– minnet_ws_getter ( ) { … } — \n—Ⓕ– minnet_ws_constructor ( ) { … } — \n—Ⓕ– minnet_ws_finalizer ( ) { … } — ",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					680,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-rpc.js",
						"symkeys":
						[
							[
								936,
								963
							],
							[
								1137,
								1183
							],
							[
								1750,
								1780
							],
							[
								1836,
								1858
							],
							[
								2264,
								2274
							],
							[
								3203,
								3216
							],
							[
								3252,
								3266
							],
							[
								3357,
								3373
							],
							[
								3905,
								3944
							],
							[
								4044,
								4064
							],
							[
								4254,
								4287
							],
							[
								4506,
								4536
							],
							[
								4619,
								4653
							],
							[
								4923,
								4930
							],
							[
								4999,
								5007
							],
							[
								5063,
								5070
							],
							[
								5174,
								5189
							],
							[
								5223,
								5232
							],
							[
								5280,
								5300
							],
							[
								5858,
								5871
							],
							[
								5954,
								5966
							],
							[
								6042,
								6051
							],
							[
								6144,
								6160
							],
							[
								6516,
								6533
							],
							[
								7069,
								7089
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function main(...args)",
							" (a, v) =>",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							".createWS = (url, callbacks, listen) =>",
							" (level, ...args) =>",
							" function* index(req, res)",
							" function* config(req, res)",
							" function* files(req, resp)",
							"name =>",
							"entry =>",
							"file =>",
							"([file, st]) =>",
							"(a, b) =>",
							"(acc, [file, st]) =>",
							"onFd(...args)",
							"onConnect(s)",
							"onOpen(s)",
							"onHttp(req, rsp)",
							"get connections()",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA4AgAA4oCU4pOC4oCTIE1BWCAoICkg4oCmIOKAlCBtYWNybyAK4oCU4pOC4oCTIE1JTiAoICkg4oCmIOKAlCBtYWNybyAKICDikqEgIGNhbGxiYWNrX3dzICggKSA7IOKAlCBkZWNsYXJhdGlvbgogIOKSoSAgY2FsbGJhY2tfaHR0cCAoICkgOyDigJQgZGVjbGFyYXRpb24K4oCU4pK74oCTIG1vdW50X2NyZWF0ZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbW91bnRfZmluZCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtb3VudF9mcmVlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zZXJ2ZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgY2FsbGJhY2tfd3MgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgZ2V0X2NvbnRleHQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgcmVzcG9uZCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyByZXF1ZXN0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGlzX2gyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGNhbGxiYWNrX2h0dHAgKCApIHsg4oCmIH0g4oCUIAAAAAAAAAAA9wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					681,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/net/rpc.js",
						"symkeys":
						[
							[
								414,
								446
							],
							[
								503,
								521
							],
							[
								573,
								591
							],
							[
								626,
								646
							],
							[
								695,
								714
							],
							[
								720,
								729
							],
							[
								740,
								754
							],
							[
								783,
								804
							],
							[
								870,
								901
							],
							[
								959,
								974
							],
							[
								1041,
								1070
							],
							[
								1480,
								1484
							],
							[
								1511,
								1522
							],
							[
								1598,
								1637
							],
							[
								1850,
								1873
							],
							[
								1884,
								1887
							],
							[
								1904,
								1931
							],
							[
								2074,
								2080
							],
							[
								2095,
								2101
							],
							[
								2130,
								2136
							],
							[
								2176,
								2231
							],
							[
								2241,
								2251
							],
							[
								2268,
								2292
							],
							[
								2568,
								2586
							],
							[
								2601,
								2619
							],
							[
								2648,
								2666
							],
							[
								2718,
								2845
							],
							[
								2848,
								2883
							],
							[
								2896,
								2908
							],
							[
								2996,
								3010
							],
							[
								3193,
								3208
							],
							[
								3336,
								3350
							],
							[
								3474,
								3492
							],
							[
								3607,
								3620
							],
							[
								3798,
								3828
							],
							[
								3847,
								3865
							],
							[
								3877,
								3892
							],
							[
								3904,
								3922
							],
							[
								4002,
								4020
							],
							[
								4065,
								4072
							],
							[
								4133,
								4139
							],
							[
								4181,
								4193
							],
							[
								4203,
								4215
							],
							[
								4232,
								4253
							],
							[
								4295,
								4307
							],
							[
								4364,
								4376
							],
							[
								4439,
								4473
							],
							[
								4513,
								4525
							],
							[
								4594,
								4606
							],
							[
								4668,
								4693
							],
							[
								4736,
								4748
							],
							[
								4771,
								4783
							],
							[
								4819,
								4838
							],
							[
								5047,
								5053
							],
							[
								5095,
								5100
							],
							[
								5123,
								5144
							],
							[
								5262,
								5297
							],
							[
								5413,
								5417
							],
							[
								5444,
								5453
							],
							[
								5506,
								5531
							],
							[
								5536,
								5564
							],
							[
								5794,
								5803
							],
							[
								5904,
								5914
							],
							[
								5944,
								5954
							],
							[
								6048,
								6058
							],
							[
								6144,
								6162
							],
							[
								6273,
								6290
							],
							[
								6327,
								6336
							],
							[
								6373,
								6423
							],
							[
								6540,
								6552
							],
							[
								6986,
								7000
							],
							[
								7223,
								7237
							],
							[
								7406,
								7420
							],
							[
								8012,
								8016
							],
							[
								8110,
								8130
							],
							[
								8236,
								8254
							],
							[
								8464,
								8476
							],
							[
								8528,
								8542
							],
							[
								8664,
								8679
							],
							[
								8803,
								8812
							],
							[
								8902,
								8918
							],
							[
								9290,
								9323
							],
							[
								9828,
								9872
							],
							[
								9980,
								9993
							],
							[
								10019,
								10025
							],
							[
								10110,
								10144
							],
							[
								10398,
								10409
							],
							[
								10467,
								10483
							],
							[
								10564,
								10579
							],
							[
								10899,
								10911
							],
							[
								11088,
								11108
							],
							[
								11214,
								11234
							],
							[
								11409,
								11427
							],
							[
								11552,
								11570
							],
							[
								11686,
								11696
							],
							[
								11773,
								11813
							],
							[
								11831,
								11862
							],
							[
								12192,
								12198
							],
							[
								12363,
								12383
							],
							[
								12479,
								12519
							],
							[
								12679,
								12688
							],
							[
								12718,
								12726
							],
							[
								12904,
								12944
							],
							[
								13005,
								13012
							],
							[
								13031,
								13038
							],
							[
								13107,
								13147
							],
							[
								13212,
								13219
							],
							[
								13297,
								13337
							],
							[
								13402,
								13409
							],
							[
								13449,
								13455
							],
							[
								13522,
								13526
							],
							[
								13581,
								13585
							],
							[
								13657,
								13688
							],
							[
								13951,
								13989
							],
							[
								14073,
								14082
							],
							[
								14558,
								14566
							],
							[
								14602,
								14622
							],
							[
								15203,
								15212
							],
							[
								15522,
								15531
							],
							[
								15931,
								15936
							],
							[
								15992,
								15997
							],
							[
								16096,
								16101
							],
							[
								16133,
								16157
							],
							[
								16410,
								16431
							],
							[
								16457,
								16476
							],
							[
								16506,
								16518
							],
							[
								16562,
								16567
							],
							[
								16641,
								16650
							],
							[
								16958,
								17018
							],
							[
								17595,
								17608
							],
							[
								17780,
								17788
							],
							[
								17906,
								17918
							],
							[
								18249,
								18263
							],
							[
								18483,
								18517
							],
							[
								18816,
								18821
							],
							[
								18916,
								18957
							],
							[
								19251,
								19266
							],
							[
								19727,
								19737
							],
							[
								19774,
								19784
							],
							[
								19853,
								19862
							],
							[
								19920,
								19958
							],
							[
								20091,
								20109
							],
							[
								20139,
								20154
							],
							[
								20181,
								20200
							],
							[
								20235,
								20254
							],
							[
								20289,
								20306
							],
							[
								20339,
								20359
							],
							[
								20451,
								20478
							],
							[
								20577,
								20613
							],
							[
								20771,
								20817
							],
							[
								20916,
								20947
							],
							[
								21504,
								21514
							],
							[
								21648,
								21700
							],
							[
								21719,
								21774
							],
							[
								22093,
								22164
							],
							[
								22226,
								22233
							],
							[
								22324,
								22331
							],
							[
								22418,
								22500
							],
							[
								23042,
								23072
							],
							[
								23440,
								23475
							],
							[
								23488,
								23528
							],
							[
								23707,
								23763
							],
							[
								23992,
								24019
							],
							[
								24030,
								24045
							],
							[
								24058,
								24088
							],
							[
								24345,
								24441
							],
							[
								24467,
								24485
							],
							[
								24733,
								24751
							],
							[
								24854,
								24867
							],
							[
								25451,
								25484
							],
							[
								25553,
								25583
							],
							[
								25622,
								25626
							],
							[
								25713,
								25740
							],
							[
								25779,
								25787
							],
							[
								25867,
								25893
							],
							[
								25939,
								25968
							],
							[
								26025,
								26070
							],
							[
								26170,
								26175
							],
							[
								26275,
								26309
							],
							[
								26426,
								26486
							],
							[
								26701,
								26723
							],
							[
								26889,
								26911
							],
							[
								27009,
								27029
							],
							[
								27061,
								27066
							],
							[
								27195,
								27222
							],
							[
								27454,
								27501
							],
							[
								28319,
								28354
							],
							[
								28376,
								28380
							],
							[
								28412,
								28416
							],
							[
								28438,
								28470
							],
							[
								28604,
								28646
							],
							[
								28699,
								28740
							]
						],
						"symlist":
						[
							".LogWrap = function LogWrap(log)",
							"log = (...args) =>",
							"log = (...args) =>",
							" (value, ...args) =>",
							"VfnAdapter = vfn =>",
							"get: k =>",
							"set: (k, v) =>",
							"VfnDecorator = vfn =>",
							".memoize = function memoize(fn)",
							"(key, value) =>",
							"self = function(key, ...args)",
							"n =>",
							"(acc, n) =>",
							".GetClasses = function* GetClasses(obj)",
							" function Mapper(map = ",
							"())",
							"self = function(key, value)",
							"Mapper",
							"Mapper",
							"Mapper",
							" function DefaultConstructor(mapper, fn = (...args) => ",
							"(...args))",
							"self = function(...args)",
							"DefaultConstructor",
							"DefaultConstructor",
							"DefaultConstructor",
							" function EventLogger(instance = {}, callback = (name, event, thisObj) => console.log('EventLogger', { name, event, thisObj }))",
							" function WrapEvent(handler, name)",
							" function(e)",
							"get(obj, prop)",
							"MessageReceiver",
							"onmessage(msg)",
							"MessageTransmitter",
							"sendMessage()",
							" function MessageTransceiver()",
							"MessageTransceiver",
							"MessageReceiver",
							"MessageTransmitter",
							"value: instance =>",
							"ctor =>",
							"none()",
							"encode: v =>",
							"decode: v =>",
							"json(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".js = function js(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".bjson = function bjson()",
							"encode: v =>",
							"decode: v =>",
							" function RPCApi(c)",
							"RPCApi",
							" o =>",
							" function RPCProxy(c)",
							" function RPCObject(id, connection)",
							"r =>",
							"RPCObject",
							" function RPCFactory(api)",
							"async function Factory(opts)",
							"RPCObject",
							"RPCFactory",
							"RPCFactory",
							"Connection",
							"static equal(a, b)",
							"static get last()",
							"makeSeq()",
							"constructor(socket, instance, log, codec = 'none')",
							"log(...args)",
							"error(message)",
							"close(...args)",
							"onmessage(msg)",
							"r =>",
							"processMessage(data)",
							"onconnect(...args)",
							"onpong(data)",
							"onerror(error)",
							"onclose(reason)",
							"cleanup()",
							"sendMessage(obj)",
							"sendCommand(command, params = {})",
							"static getCallbacks(instance, verbosity = 0)",
							" (...args) =>",
							" () =>",
							"handle = (sock, event, ...args) =>",
							"then: fn =>",
							"remove = sock =>",
							"onConnect(sock)",
							"onOpen(sock)",
							"onMessage(sock, msg)",
							"onError(sock, error)",
							"onClose(sock, why)",
							"onPong(sock, data)",
							"Connection",
							"function RPCServerEndpoint(classes = {})",
							"new({ class: name, args = [] })",
							"list()",
							"({ id }, respond) =>",
							"({ obj, method, args = [] }, respond) =>",
							"result =>",
							"error =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"sym =>",
							"v =>",
							"v =>",
							"({ obj, property }, respond) =>",
							"({ obj, property, value }, respond) =>",
							"RPCServer",
							"makeId()",
							"processMessage(data)",
							"RPCServer",
							"RPCClient",
							" e =>",
							" r =>",
							"() =>",
							"processMessage(response)",
							"command(name, params)",
							"(accept, reject) =>",
							" response =>",
							" e =>",
							"RPCClient",
							" function RPCSocket(url, service = RPCServer, verbosity = 1)",
							" (...args) =>",
							"get fd()",
							"get socket()",
							"register(ctor)",
							"listen(new_ws, os = globalThis.os)",
							"() =>",
							"async connect(new_ws, os = globalThis.os)",
							"get connected()",
							"get list()",
							"get last()",
							"RPCSocket",
							"function MakeWebSocket(url, callbacks)",
							".onconnect = () =>",
							".onopen = () =>",
							".onerror = error =>",
							".onmessage = msg =>",
							".onpong = pong =>",
							".onclose = reason =>",
							" function isThenable(value)",
							" function hasHandler(obj, eventName)",
							" function callHandler(obj, eventName, ...args)",
							" function parseURL(url_or_port)",
							"toString()",
							" function GetProperties(obj, method = obj => Object.",
							"(obj), pred = (obj, depth) => obj !== Object.prototype)",
							" function GetKeys(obj, pred = (obj, depth) => obj !== Object.prototype)",
							" obj =>",
							" obj =>",
							" function getPropertyDescriptors(obj, merge = true, pred = (proto, depth) => true)",
							" function define(obj, ...args)",
							" function setHandlers(os, handlers)",
							".onFd = function(fd, readable, writable)",
							" function statusResponse(success, result_or_error, data)",
							" function objectCommand(fn)",
							" function(data)",
							"respond = (success, result) =>",
							" function MakeListCommand(pred = v => typeof v != 'function', defaults = { maxDepth: Infinity })",
							"(data, respond) =>",
							" (proto, depth) =>",
							"(acc, key) =>",
							" function getPrototypeName(proto)",
							"function DeserializeEntries(e)",
							"a =>",
							"function DeserializeKeys(e)",
							"([k]) =>",
							"function DeserializeMap(e)",
							"function DeserializeObject(e)",
							"function ForwardMethods(e, ret = {}, thisObj)",
							" o =>",
							"function ForwardObject(e, thisObj)",
							"function MakeCommandFunction(cmd, getConnection, thisObj, t)",
							"getConnection = obj =>",
							" function(params = {})",
							"(resolve, reject) =>",
							" r =>",
							"async function(params = {})",
							" function SerializeValue(value, source = false)",
							" function DeserializeSymbols(names)",
							"n =>",
							"n =>",
							" function DeserializeValue(desc)",
							"RPCConnect = (url, service = RPCClient) =>",
							"RPCListen = (url, service = RPCServer) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD3AAAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpCiAgbWFpbiguLi5hcmdzKQogICppbmRleChyZXEsIHJlcykKICAqY29uZmlnKHJlcSwgcmVzKQogICpmaWxlcyhyZXEsIHJlc3ApCiAgb25GZCguLi5hcmdzKQogIG9uQ29ubmVjdChzKQogIG9uT3BlbihzKQogIG9uSHR0cChyZXEsIHJzcCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHF1aXQod2h5KQAAAAAAAAAAwQgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					682,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADBCAAAICAuTG9nV3JhcCA9IExvZ1dyYXAobG9nKQogIC5tZW1vaXplID0gbWVtb2l6ZShmbikKICBzZWxmID0gKGtleSwgLi4uYXJncykKICAuR2V0Q2xhc3NlcyA9ICpHZXRDbGFzc2VzKG9iaikKTWFwcGVyKG1hcCA9IAogIHNlbGYgPSAoa2V5LCB2YWx1ZSkKTWFwcGVyCk1hcHBlcgpNYXBwZXIKICBzZWxmID0gKC4uLmFyZ3MpCkRlZmF1bHRDb25zdHJ1Y3RvcgpEZWZhdWx0Q29uc3RydWN0b3IKRGVmYXVsdENvbnN0cnVjdG9yCldyYXBFdmVudChoYW5kbGVyLCBuYW1lKQogIChlKQogIGdldChvYmosIHByb3ApCk1lc3NhZ2VSZWNlaXZlcgogIG9ubWVzc2FnZShtc2cpCk1lc3NhZ2VUcmFuc21pdHRlcgogIHNlbmRNZXNzYWdlKCkKTWVzc2FnZVRyYW5zY2VpdmVyKCkKTWVzc2FnZVRyYW5zY2VpdmVyCk1lc3NhZ2VSZWNlaXZlcgpNZXNzYWdlVHJhbnNtaXR0ZXIKICBub25lKCkKICBqc29uKHZlcmJvc2UgPSBmYWxzZSkKICAuanMgPSBqcyh2ZXJib3NlID0gZmFsc2UpCiAgLmJqc29uID0gYmpzb24oKQpSUENBcGkoYykKUlBDQXBpClJQQ1Byb3h5KGMpClJQQ09iamVjdChpZCwgY29ubmVjdGlvbikKUlBDT2JqZWN0ClJQQ0ZhY3RvcnkoYXBpKQpGYWN0b3J5KG9wdHMpClJQQ09iamVjdApSUENGYWN0b3J5ClJQQ0ZhY3RvcnkKQ29ubmVjdGlvbgogIHN0YXRpYyBlcXVhbChhLCBiKQogIHN0YXRpYyBnZXQgbGFzdCgpCiAgbWFrZVNlcSgpCiAgY29uc3RydWN0b3Ioc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYyA9ICdub25lJykKICBsb2coLi4uYXJncykKICBlcnJvcihtZXNzYWdlKQogIGNsb3NlKC4uLmFyZ3MpCiAgb25tZXNzYWdlKG1zZykKICBwcm9jZXNzTWVzc2FnZShkYXRhKQogIG9uY29ubmVjdCguLi5hcmdzKQogIG9ucG9uZyhkYXRhKQogIG9uZXJyb3IoZXJyb3IpCiAgb25jbG9zZShyZWFzb24pCiAgY2xlYW51cCgpCiAgc2VuZE1lc3NhZ2Uob2JqKQogIHNlbmRDb21tYW5kKGNvbW1hbmQsIHBhcmFtcyA9IHt9KQogIHN0YXRpYyBnZXRDYWxsYmFja3MoaW5zdGFuY2UsIHZlcmJvc2l0eSA9IDApCiAgb25Db25uZWN0KHNvY2spCiAgb25PcGVuKHNvY2spCiAgb25NZXNzYWdlKHNvY2ssIG1zZykKICBvbkVycm9yKHNvY2ssIGVycm9yKQogIG9uQ2xvc2Uoc29jaywgd2h5KQogIG9uUG9uZyhzb2NrLCBkYXRhKQpDb25uZWN0aW9uClJQQ1NlcnZlckVuZHBvaW50KGNsYXNzZXMgPSB7fSkKICBuZXcoeyBjbGFzczogbmFtZSwgYXJncyA9IFtdIH0pCiAgbGlzdCgpClJQQ1NlcnZlcgogIG1ha2VJZCgpCiAgcHJvY2Vzc01lc3NhZ2UoZGF0YSkKUlBDU2VydmVyClJQQ0NsaWVudAogIHByb2Nlc3NNZXNzYWdlKHJlc3BvbnNlKQogIGNvbW1hbmQobmFtZSwgcGFyYW1zKQpSUENDbGllbnQKUlBDU29ja2V0KHVybCwgc2VydmljZSA9IFJQQ1NlcnZlciwgdmVyYm9zaXR5ID0gMSkKICBnZXQgZmQoKQogIGdldCBzb2NrZXQoKQogIHJlZ2lzdGVyKGN0b3IpCiAgbGlzdGVuKG5ld193cywgb3MgPSBnbG9iYWxUaGlzLm9zKQogIGNvbm5lY3QobmV3X3dzLCBvcyA9IGdsb2JhbFRoaXMub3MpCiAgZ2V0IGNvbm5lY3RlZCgpCiAgZ2V0IGxpc3QoKQogIGdldCBsYXN0KCkKUlBDU29ja2V0Ck1ha2VXZWJTb2NrZXQodXJsLCBjYWxsYmFja3MpCiAgaXNUaGVuYWJsZSh2YWx1ZSkKICBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKQogIGNhbGxIYW5kbGVyKG9iaiwgZXZlbnROYW1lLCAuLi5hcmdzKQogIHBhcnNlVVJMKHVybF9vcl9wb3J0KQogIHRvU3RyaW5nKCkKICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIHNldEhhbmRsZXJzKG9zLCBoYW5kbGVycykKICAub25GZCA9IChmZCwgcmVhZGFibGUsIHdyaXRhYmxlKQogIHN0YXR1c1Jlc3BvbnNlKHN1Y2Nlc3MsIHJlc3VsdF9vcl9lcnJvciwgZGF0YSkKICBvYmplY3RDb21tYW5kKGZuKQogIChkYXRhKQogIGdldFByb3RvdHlwZU5hbWUocHJvdG8pCkRlc2VyaWFsaXplRW50cmllcyhlKQpEZXNlcmlhbGl6ZUtleXMoZSkKRGVzZXJpYWxpemVNYXAoZSkKRGVzZXJpYWxpemVPYmplY3QoZSkKRm9yd2FyZE1ldGhvZHMoZSwgcmV0ID0ge30sIHRoaXNPYmopCkZvcndhcmRPYmplY3QoZSwgdGhpc09iaikKTWFrZUNvbW1hbmRGdW5jdGlvbihjbWQsIGdldENvbm5lY3Rpb24sIHRoaXNPYmosIHQpCiAgKHBhcmFtcyA9IHt9KQoocGFyYW1zID0ge30pClNlcmlhbGl6ZVZhbHVlKHZhbHVlLCBzb3VyY2UgPSBmYWxzZSkKRGVzZXJpYWxpemVTeW1ib2xzKG5hbWVzKQpEZXNlcmlhbGl6ZVZhbHVlKGRlc2MpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					683,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/net/rpc.js",
						"symkeys":
						[
							[
								414,
								446
							],
							[
								503,
								521
							],
							[
								573,
								591
							],
							[
								626,
								646
							],
							[
								695,
								714
							],
							[
								720,
								729
							],
							[
								740,
								754
							],
							[
								783,
								804
							],
							[
								870,
								901
							],
							[
								959,
								974
							],
							[
								1041,
								1070
							],
							[
								1480,
								1484
							],
							[
								1511,
								1522
							],
							[
								1598,
								1637
							],
							[
								1850,
								1873
							],
							[
								1884,
								1887
							],
							[
								1904,
								1931
							],
							[
								2074,
								2080
							],
							[
								2095,
								2101
							],
							[
								2130,
								2136
							],
							[
								2176,
								2231
							],
							[
								2241,
								2251
							],
							[
								2268,
								2292
							],
							[
								2568,
								2586
							],
							[
								2601,
								2619
							],
							[
								2648,
								2666
							],
							[
								2718,
								2845
							],
							[
								2848,
								2883
							],
							[
								2896,
								2908
							],
							[
								2996,
								3010
							],
							[
								3193,
								3208
							],
							[
								3336,
								3350
							],
							[
								3474,
								3492
							],
							[
								3607,
								3620
							],
							[
								3798,
								3828
							],
							[
								3847,
								3865
							],
							[
								3877,
								3892
							],
							[
								3904,
								3922
							],
							[
								4002,
								4020
							],
							[
								4065,
								4072
							],
							[
								4133,
								4139
							],
							[
								4181,
								4193
							],
							[
								4203,
								4215
							],
							[
								4232,
								4253
							],
							[
								4295,
								4307
							],
							[
								4364,
								4376
							],
							[
								4439,
								4473
							],
							[
								4513,
								4525
							],
							[
								4594,
								4606
							],
							[
								4668,
								4693
							],
							[
								4736,
								4748
							],
							[
								4771,
								4783
							],
							[
								4819,
								4838
							],
							[
								5047,
								5053
							],
							[
								5095,
								5100
							],
							[
								5123,
								5144
							],
							[
								5262,
								5297
							],
							[
								5413,
								5417
							],
							[
								5444,
								5453
							],
							[
								5506,
								5531
							],
							[
								5536,
								5564
							],
							[
								5794,
								5803
							],
							[
								5904,
								5914
							],
							[
								5944,
								5954
							],
							[
								6048,
								6058
							],
							[
								6144,
								6162
							],
							[
								6273,
								6290
							],
							[
								6327,
								6336
							],
							[
								6373,
								6423
							],
							[
								6540,
								6552
							],
							[
								6986,
								7000
							],
							[
								7223,
								7237
							],
							[
								7406,
								7420
							],
							[
								8012,
								8016
							],
							[
								8110,
								8130
							],
							[
								8236,
								8254
							],
							[
								8464,
								8476
							],
							[
								8528,
								8542
							],
							[
								8664,
								8679
							],
							[
								8803,
								8812
							],
							[
								8902,
								8918
							],
							[
								9290,
								9323
							],
							[
								9828,
								9872
							],
							[
								9980,
								9993
							],
							[
								10019,
								10025
							],
							[
								10110,
								10144
							],
							[
								10398,
								10409
							],
							[
								10467,
								10483
							],
							[
								10564,
								10579
							],
							[
								10899,
								10911
							],
							[
								11088,
								11108
							],
							[
								11214,
								11234
							],
							[
								11409,
								11427
							],
							[
								11552,
								11570
							],
							[
								11686,
								11696
							],
							[
								11773,
								11813
							],
							[
								11831,
								11862
							],
							[
								12192,
								12198
							],
							[
								12363,
								12383
							],
							[
								12479,
								12519
							],
							[
								12679,
								12688
							],
							[
								12718,
								12726
							],
							[
								12904,
								12944
							],
							[
								13005,
								13012
							],
							[
								13031,
								13038
							],
							[
								13107,
								13147
							],
							[
								13212,
								13219
							],
							[
								13297,
								13337
							],
							[
								13402,
								13409
							],
							[
								13449,
								13455
							],
							[
								13522,
								13526
							],
							[
								13581,
								13585
							],
							[
								13657,
								13688
							],
							[
								13951,
								13989
							],
							[
								14073,
								14082
							],
							[
								14558,
								14566
							],
							[
								14602,
								14622
							],
							[
								15203,
								15212
							],
							[
								15522,
								15531
							],
							[
								15931,
								15936
							],
							[
								15992,
								15997
							],
							[
								16096,
								16101
							],
							[
								16133,
								16157
							],
							[
								16410,
								16431
							],
							[
								16457,
								16476
							],
							[
								16506,
								16518
							],
							[
								16562,
								16567
							],
							[
								16641,
								16650
							],
							[
								16958,
								17018
							],
							[
								17595,
								17608
							],
							[
								17780,
								17788
							],
							[
								17906,
								17918
							],
							[
								18249,
								18263
							],
							[
								18483,
								18517
							],
							[
								18816,
								18821
							],
							[
								18916,
								18957
							],
							[
								19251,
								19266
							],
							[
								19727,
								19737
							],
							[
								19774,
								19784
							],
							[
								19853,
								19862
							],
							[
								19920,
								19958
							],
							[
								20091,
								20109
							],
							[
								20139,
								20154
							],
							[
								20181,
								20200
							],
							[
								20235,
								20254
							],
							[
								20289,
								20306
							],
							[
								20339,
								20359
							],
							[
								20451,
								20478
							],
							[
								20577,
								20613
							],
							[
								20771,
								20817
							],
							[
								20916,
								20947
							],
							[
								21504,
								21514
							],
							[
								21648,
								21700
							],
							[
								21719,
								21774
							],
							[
								22093,
								22164
							],
							[
								22226,
								22233
							],
							[
								22324,
								22331
							],
							[
								22418,
								22500
							],
							[
								23042,
								23072
							],
							[
								23440,
								23475
							],
							[
								23488,
								23528
							],
							[
								23707,
								23763
							],
							[
								23992,
								24019
							],
							[
								24030,
								24045
							],
							[
								24058,
								24088
							],
							[
								24345,
								24441
							],
							[
								24467,
								24485
							],
							[
								24733,
								24751
							],
							[
								24854,
								24867
							],
							[
								25451,
								25484
							],
							[
								25553,
								25583
							],
							[
								25622,
								25626
							],
							[
								25713,
								25740
							],
							[
								25779,
								25787
							],
							[
								25867,
								25893
							],
							[
								25939,
								25968
							],
							[
								26025,
								26070
							],
							[
								26170,
								26175
							],
							[
								26275,
								26309
							],
							[
								26426,
								26486
							],
							[
								26701,
								26723
							],
							[
								26889,
								26911
							],
							[
								27009,
								27029
							],
							[
								27061,
								27066
							],
							[
								27195,
								27222
							],
							[
								27454,
								27501
							],
							[
								28319,
								28354
							],
							[
								28376,
								28380
							],
							[
								28412,
								28416
							],
							[
								28438,
								28470
							],
							[
								28604,
								28646
							],
							[
								28699,
								28740
							]
						],
						"symlist":
						[
							".LogWrap = function LogWrap(log)",
							"log = (...args) =>",
							"log = (...args) =>",
							" (value, ...args) =>",
							"VfnAdapter = vfn =>",
							"get: k =>",
							"set: (k, v) =>",
							"VfnDecorator = vfn =>",
							".memoize = function memoize(fn)",
							"(key, value) =>",
							"self = function(key, ...args)",
							"n =>",
							"(acc, n) =>",
							".GetClasses = function* GetClasses(obj)",
							" function Mapper(map = ",
							"())",
							"self = function(key, value)",
							"Mapper",
							"Mapper",
							"Mapper",
							" function DefaultConstructor(mapper, fn = (...args) => ",
							"(...args))",
							"self = function(...args)",
							"DefaultConstructor",
							"DefaultConstructor",
							"DefaultConstructor",
							" function EventLogger(instance = {}, callback = (name, event, thisObj) => console.log('EventLogger', { name, event, thisObj }))",
							" function WrapEvent(handler, name)",
							" function(e)",
							"get(obj, prop)",
							"MessageReceiver",
							"onmessage(msg)",
							"MessageTransmitter",
							"sendMessage()",
							" function MessageTransceiver()",
							"MessageTransceiver",
							"MessageReceiver",
							"MessageTransmitter",
							"value: instance =>",
							"ctor =>",
							"none()",
							"encode: v =>",
							"decode: v =>",
							"json(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".js = function js(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".bjson = function bjson()",
							"encode: v =>",
							"decode: v =>",
							" function RPCApi(c)",
							"RPCApi",
							" o =>",
							" function RPCProxy(c)",
							" function RPCObject(id, connection)",
							"r =>",
							"RPCObject",
							" function RPCFactory(api)",
							"async function Factory(opts)",
							"RPCObject",
							"RPCFactory",
							"RPCFactory",
							"Connection",
							"static equal(a, b)",
							"static get last()",
							"makeSeq()",
							"constructor(socket, instance, log, codec = 'none')",
							"log(...args)",
							"error(message)",
							"close(...args)",
							"onmessage(msg)",
							"r =>",
							"processMessage(data)",
							"onconnect(...args)",
							"onpong(data)",
							"onerror(error)",
							"onclose(reason)",
							"cleanup()",
							"sendMessage(obj)",
							"sendCommand(command, params = {})",
							"static getCallbacks(instance, verbosity = 0)",
							" (...args) =>",
							" () =>",
							"handle = (sock, event, ...args) =>",
							"then: fn =>",
							"remove = sock =>",
							"onConnect(sock)",
							"onOpen(sock)",
							"onMessage(sock, msg)",
							"onError(sock, error)",
							"onClose(sock, why)",
							"onPong(sock, data)",
							"Connection",
							"function RPCServerEndpoint(classes = {})",
							"new({ class: name, args = [] })",
							"list()",
							"({ id }, respond) =>",
							"({ obj, method, args = [] }, respond) =>",
							"result =>",
							"error =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"sym =>",
							"v =>",
							"v =>",
							"({ obj, property }, respond) =>",
							"({ obj, property, value }, respond) =>",
							"RPCServer",
							"makeId()",
							"processMessage(data)",
							"RPCServer",
							"RPCClient",
							" e =>",
							" r =>",
							"() =>",
							"processMessage(response)",
							"command(name, params)",
							"(accept, reject) =>",
							" response =>",
							" e =>",
							"RPCClient",
							" function RPCSocket(url, service = RPCServer, verbosity = 1)",
							" (...args) =>",
							"get fd()",
							"get socket()",
							"register(ctor)",
							"listen(new_ws, os = globalThis.os)",
							"() =>",
							"async connect(new_ws, os = globalThis.os)",
							"get connected()",
							"get list()",
							"get last()",
							"RPCSocket",
							"function MakeWebSocket(url, callbacks)",
							".onconnect = () =>",
							".onopen = () =>",
							".onerror = error =>",
							".onmessage = msg =>",
							".onpong = pong =>",
							".onclose = reason =>",
							" function isThenable(value)",
							" function hasHandler(obj, eventName)",
							" function callHandler(obj, eventName, ...args)",
							" function parseURL(url_or_port)",
							"toString()",
							" function GetProperties(obj, method = obj => Object.",
							"(obj), pred = (obj, depth) => obj !== Object.prototype)",
							" function GetKeys(obj, pred = (obj, depth) => obj !== Object.prototype)",
							" obj =>",
							" obj =>",
							" function getPropertyDescriptors(obj, merge = true, pred = (proto, depth) => true)",
							" function define(obj, ...args)",
							" function setHandlers(os, handlers)",
							".onFd = function(fd, readable, writable)",
							" function statusResponse(success, result_or_error, data)",
							" function objectCommand(fn)",
							" function(data)",
							"respond = (success, result) =>",
							" function MakeListCommand(pred = v => typeof v != 'function', defaults = { maxDepth: Infinity })",
							"(data, respond) =>",
							" (proto, depth) =>",
							"(acc, key) =>",
							" function getPrototypeName(proto)",
							"function DeserializeEntries(e)",
							"a =>",
							"function DeserializeKeys(e)",
							"([k]) =>",
							"function DeserializeMap(e)",
							"function DeserializeObject(e)",
							"function ForwardMethods(e, ret = {}, thisObj)",
							" o =>",
							"function ForwardObject(e, thisObj)",
							"function MakeCommandFunction(cmd, getConnection, thisObj, t)",
							"getConnection = obj =>",
							" function(params = {})",
							"(resolve, reject) =>",
							" r =>",
							"async function(params = {})",
							" function SerializeValue(value, source = false)",
							" function DeserializeSymbols(names)",
							"n =>",
							"n =>",
							" function DeserializeValue(desc)",
							"RPCConnect = (url, service = RPCClient) =>",
							"RPCListen = (url, service = RPCServer) =>"
						]
					},
					"AQAAAAAAAAAAAAAAwQgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					684,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADBCAAAICAuTG9nV3JhcCA9IExvZ1dyYXAobG9nKQogIC5tZW1vaXplID0gbWVtb2l6ZShmbikKICBzZWxmID0gKGtleSwgLi4uYXJncykKICAuR2V0Q2xhc3NlcyA9ICpHZXRDbGFzc2VzKG9iaikKTWFwcGVyKG1hcCA9IAogIHNlbGYgPSAoa2V5LCB2YWx1ZSkKTWFwcGVyCk1hcHBlcgpNYXBwZXIKICBzZWxmID0gKC4uLmFyZ3MpCkRlZmF1bHRDb25zdHJ1Y3RvcgpEZWZhdWx0Q29uc3RydWN0b3IKRGVmYXVsdENvbnN0cnVjdG9yCldyYXBFdmVudChoYW5kbGVyLCBuYW1lKQogIChlKQogIGdldChvYmosIHByb3ApCk1lc3NhZ2VSZWNlaXZlcgogIG9ubWVzc2FnZShtc2cpCk1lc3NhZ2VUcmFuc21pdHRlcgogIHNlbmRNZXNzYWdlKCkKTWVzc2FnZVRyYW5zY2VpdmVyKCkKTWVzc2FnZVRyYW5zY2VpdmVyCk1lc3NhZ2VSZWNlaXZlcgpNZXNzYWdlVHJhbnNtaXR0ZXIKICBub25lKCkKICBqc29uKHZlcmJvc2UgPSBmYWxzZSkKICAuanMgPSBqcyh2ZXJib3NlID0gZmFsc2UpCiAgLmJqc29uID0gYmpzb24oKQpSUENBcGkoYykKUlBDQXBpClJQQ1Byb3h5KGMpClJQQ09iamVjdChpZCwgY29ubmVjdGlvbikKUlBDT2JqZWN0ClJQQ0ZhY3RvcnkoYXBpKQpGYWN0b3J5KG9wdHMpClJQQ09iamVjdApSUENGYWN0b3J5ClJQQ0ZhY3RvcnkKQ29ubmVjdGlvbgogIHN0YXRpYyBlcXVhbChhLCBiKQogIHN0YXRpYyBnZXQgbGFzdCgpCiAgbWFrZVNlcSgpCiAgY29uc3RydWN0b3Ioc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYyA9ICdub25lJykKICBsb2coLi4uYXJncykKICBlcnJvcihtZXNzYWdlKQogIGNsb3NlKC4uLmFyZ3MpCiAgb25tZXNzYWdlKG1zZykKICBwcm9jZXNzTWVzc2FnZShkYXRhKQogIG9uY29ubmVjdCguLi5hcmdzKQogIG9ucG9uZyhkYXRhKQogIG9uZXJyb3IoZXJyb3IpCiAgb25jbG9zZShyZWFzb24pCiAgY2xlYW51cCgpCiAgc2VuZE1lc3NhZ2Uob2JqKQogIHNlbmRDb21tYW5kKGNvbW1hbmQsIHBhcmFtcyA9IHt9KQogIHN0YXRpYyBnZXRDYWxsYmFja3MoaW5zdGFuY2UsIHZlcmJvc2l0eSA9IDApCiAgb25Db25uZWN0KHNvY2spCiAgb25PcGVuKHNvY2spCiAgb25NZXNzYWdlKHNvY2ssIG1zZykKICBvbkVycm9yKHNvY2ssIGVycm9yKQogIG9uQ2xvc2Uoc29jaywgd2h5KQogIG9uUG9uZyhzb2NrLCBkYXRhKQpDb25uZWN0aW9uClJQQ1NlcnZlckVuZHBvaW50KGNsYXNzZXMgPSB7fSkKICBuZXcoeyBjbGFzczogbmFtZSwgYXJncyA9IFtdIH0pCiAgbGlzdCgpClJQQ1NlcnZlcgogIG1ha2VJZCgpCiAgcHJvY2Vzc01lc3NhZ2UoZGF0YSkKUlBDU2VydmVyClJQQ0NsaWVudAogIHByb2Nlc3NNZXNzYWdlKHJlc3BvbnNlKQogIGNvbW1hbmQobmFtZSwgcGFyYW1zKQpSUENDbGllbnQKUlBDU29ja2V0KHVybCwgc2VydmljZSA9IFJQQ1NlcnZlciwgdmVyYm9zaXR5ID0gMSkKICBnZXQgZmQoKQogIGdldCBzb2NrZXQoKQogIHJlZ2lzdGVyKGN0b3IpCiAgbGlzdGVuKG5ld193cywgb3MgPSBnbG9iYWxUaGlzLm9zKQogIGNvbm5lY3QobmV3X3dzLCBvcyA9IGdsb2JhbFRoaXMub3MpCiAgZ2V0IGNvbm5lY3RlZCgpCiAgZ2V0IGxpc3QoKQogIGdldCBsYXN0KCkKUlBDU29ja2V0Ck1ha2VXZWJTb2NrZXQodXJsLCBjYWxsYmFja3MpCiAgaXNUaGVuYWJsZSh2YWx1ZSkKICBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKQogIGNhbGxIYW5kbGVyKG9iaiwgZXZlbnROYW1lLCAuLi5hcmdzKQogIHBhcnNlVVJMKHVybF9vcl9wb3J0KQogIHRvU3RyaW5nKCkKICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIHNldEhhbmRsZXJzKG9zLCBoYW5kbGVycykKICAub25GZCA9IChmZCwgcmVhZGFibGUsIHdyaXRhYmxlKQogIHN0YXR1c1Jlc3BvbnNlKHN1Y2Nlc3MsIHJlc3VsdF9vcl9lcnJvciwgZGF0YSkKICBvYmplY3RDb21tYW5kKGZuKQogIChkYXRhKQogIGdldFByb3RvdHlwZU5hbWUocHJvdG8pCkRlc2VyaWFsaXplRW50cmllcyhlKQpEZXNlcmlhbGl6ZUtleXMoZSkKRGVzZXJpYWxpemVNYXAoZSkKRGVzZXJpYWxpemVPYmplY3QoZSkKRm9yd2FyZE1ldGhvZHMoZSwgcmV0ID0ge30sIHRoaXNPYmopCkZvcndhcmRPYmplY3QoZSwgdGhpc09iaikKTWFrZUNvbW1hbmRGdW5jdGlvbihjbWQsIGdldENvbm5lY3Rpb24sIHRoaXNPYmosIHQpCiAgKHBhcmFtcyA9IHt9KQoocGFyYW1zID0ge30pClNlcmlhbGl6ZVZhbHVlKHZhbHVlLCBzb3VyY2UgPSBmYWxzZSkKRGVzZXJpYWxpemVTeW1ib2xzKG5hbWVzKQpEZXNlcmlhbGl6ZVZhbHVlKGRlc2MpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					685,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/net/rpc.js",
						"symkeys":
						[
							[
								414,
								446
							],
							[
								503,
								521
							],
							[
								573,
								591
							],
							[
								626,
								646
							],
							[
								695,
								714
							],
							[
								720,
								729
							],
							[
								740,
								754
							],
							[
								783,
								804
							],
							[
								870,
								901
							],
							[
								959,
								974
							],
							[
								1041,
								1070
							],
							[
								1480,
								1484
							],
							[
								1511,
								1522
							],
							[
								1598,
								1637
							],
							[
								1850,
								1873
							],
							[
								1884,
								1887
							],
							[
								1904,
								1931
							],
							[
								2074,
								2080
							],
							[
								2095,
								2101
							],
							[
								2130,
								2136
							],
							[
								2176,
								2231
							],
							[
								2241,
								2251
							],
							[
								2268,
								2292
							],
							[
								2568,
								2586
							],
							[
								2601,
								2619
							],
							[
								2648,
								2666
							],
							[
								2718,
								2845
							],
							[
								2848,
								2883
							],
							[
								2896,
								2908
							],
							[
								2996,
								3010
							],
							[
								3193,
								3208
							],
							[
								3336,
								3350
							],
							[
								3474,
								3492
							],
							[
								3607,
								3620
							],
							[
								3798,
								3828
							],
							[
								3847,
								3865
							],
							[
								3877,
								3892
							],
							[
								3904,
								3922
							],
							[
								4002,
								4020
							],
							[
								4065,
								4072
							],
							[
								4133,
								4139
							],
							[
								4181,
								4193
							],
							[
								4203,
								4215
							],
							[
								4232,
								4253
							],
							[
								4295,
								4307
							],
							[
								4364,
								4376
							],
							[
								4439,
								4473
							],
							[
								4513,
								4525
							],
							[
								4594,
								4606
							],
							[
								4668,
								4693
							],
							[
								4736,
								4748
							],
							[
								4771,
								4783
							],
							[
								4819,
								4838
							],
							[
								5047,
								5053
							],
							[
								5095,
								5100
							],
							[
								5123,
								5144
							],
							[
								5262,
								5297
							],
							[
								5413,
								5417
							],
							[
								5444,
								5453
							],
							[
								5506,
								5531
							],
							[
								5536,
								5564
							],
							[
								5794,
								5803
							],
							[
								5904,
								5914
							],
							[
								5944,
								5954
							],
							[
								6048,
								6058
							],
							[
								6144,
								6162
							],
							[
								6273,
								6290
							],
							[
								6327,
								6336
							],
							[
								6373,
								6423
							],
							[
								6540,
								6552
							],
							[
								6986,
								7000
							],
							[
								7223,
								7237
							],
							[
								7406,
								7420
							],
							[
								8012,
								8016
							],
							[
								8110,
								8130
							],
							[
								8236,
								8254
							],
							[
								8464,
								8476
							],
							[
								8528,
								8542
							],
							[
								8664,
								8679
							],
							[
								8803,
								8812
							],
							[
								8902,
								8918
							],
							[
								9290,
								9323
							],
							[
								9828,
								9872
							],
							[
								9980,
								9993
							],
							[
								10019,
								10025
							],
							[
								10110,
								10144
							],
							[
								10398,
								10409
							],
							[
								10467,
								10483
							],
							[
								10564,
								10579
							],
							[
								10899,
								10911
							],
							[
								11088,
								11108
							],
							[
								11214,
								11234
							],
							[
								11409,
								11427
							],
							[
								11552,
								11570
							],
							[
								11686,
								11696
							],
							[
								11773,
								11813
							],
							[
								11831,
								11862
							],
							[
								12192,
								12198
							],
							[
								12363,
								12383
							],
							[
								12479,
								12519
							],
							[
								12679,
								12688
							],
							[
								12718,
								12726
							],
							[
								12904,
								12944
							],
							[
								13005,
								13012
							],
							[
								13031,
								13038
							],
							[
								13107,
								13147
							],
							[
								13212,
								13219
							],
							[
								13297,
								13337
							],
							[
								13402,
								13409
							],
							[
								13449,
								13455
							],
							[
								13522,
								13526
							],
							[
								13581,
								13585
							],
							[
								13657,
								13688
							],
							[
								13951,
								13989
							],
							[
								14073,
								14082
							],
							[
								14558,
								14566
							],
							[
								14602,
								14622
							],
							[
								15203,
								15212
							],
							[
								15522,
								15531
							],
							[
								15931,
								15936
							],
							[
								15992,
								15997
							],
							[
								16096,
								16101
							],
							[
								16133,
								16157
							],
							[
								16410,
								16431
							],
							[
								16457,
								16476
							],
							[
								16506,
								16518
							],
							[
								16562,
								16567
							],
							[
								16641,
								16650
							],
							[
								16958,
								17018
							],
							[
								17595,
								17608
							],
							[
								17780,
								17788
							],
							[
								17906,
								17918
							],
							[
								18249,
								18263
							],
							[
								18483,
								18517
							],
							[
								18816,
								18821
							],
							[
								18916,
								18957
							],
							[
								19251,
								19266
							],
							[
								19727,
								19737
							],
							[
								19774,
								19784
							],
							[
								19853,
								19862
							],
							[
								19920,
								19958
							],
							[
								20091,
								20109
							],
							[
								20139,
								20154
							],
							[
								20181,
								20200
							],
							[
								20235,
								20254
							],
							[
								20289,
								20306
							],
							[
								20339,
								20359
							],
							[
								20451,
								20478
							],
							[
								20577,
								20613
							],
							[
								20771,
								20817
							],
							[
								20916,
								20947
							],
							[
								21504,
								21514
							],
							[
								21648,
								21700
							],
							[
								21719,
								21774
							],
							[
								22093,
								22164
							],
							[
								22226,
								22233
							],
							[
								22324,
								22331
							],
							[
								22418,
								22500
							],
							[
								23042,
								23072
							],
							[
								23440,
								23475
							],
							[
								23488,
								23528
							],
							[
								23707,
								23763
							],
							[
								23992,
								24019
							],
							[
								24030,
								24045
							],
							[
								24058,
								24088
							],
							[
								24345,
								24441
							],
							[
								24467,
								24485
							],
							[
								24733,
								24751
							],
							[
								24854,
								24867
							],
							[
								25451,
								25484
							],
							[
								25553,
								25583
							],
							[
								25622,
								25626
							],
							[
								25713,
								25740
							],
							[
								25779,
								25787
							],
							[
								25867,
								25893
							],
							[
								25939,
								25968
							],
							[
								26025,
								26070
							],
							[
								26170,
								26175
							],
							[
								26275,
								26309
							],
							[
								26426,
								26486
							],
							[
								26701,
								26723
							],
							[
								26889,
								26911
							],
							[
								27009,
								27029
							],
							[
								27061,
								27066
							],
							[
								27195,
								27222
							],
							[
								27454,
								27501
							],
							[
								28319,
								28354
							],
							[
								28376,
								28380
							],
							[
								28412,
								28416
							],
							[
								28438,
								28470
							],
							[
								28604,
								28646
							],
							[
								28699,
								28740
							]
						],
						"symlist":
						[
							".LogWrap = function LogWrap(log)",
							"log = (...args) =>",
							"log = (...args) =>",
							" (value, ...args) =>",
							"VfnAdapter = vfn =>",
							"get: k =>",
							"set: (k, v) =>",
							"VfnDecorator = vfn =>",
							".memoize = function memoize(fn)",
							"(key, value) =>",
							"self = function(key, ...args)",
							"n =>",
							"(acc, n) =>",
							".GetClasses = function* GetClasses(obj)",
							" function Mapper(map = ",
							"())",
							"self = function(key, value)",
							"Mapper",
							"Mapper",
							"Mapper",
							" function DefaultConstructor(mapper, fn = (...args) => ",
							"(...args))",
							"self = function(...args)",
							"DefaultConstructor",
							"DefaultConstructor",
							"DefaultConstructor",
							" function EventLogger(instance = {}, callback = (name, event, thisObj) => console.log('EventLogger', { name, event, thisObj }))",
							" function WrapEvent(handler, name)",
							" function(e)",
							"get(obj, prop)",
							"MessageReceiver",
							"onmessage(msg)",
							"MessageTransmitter",
							"sendMessage()",
							" function MessageTransceiver()",
							"MessageTransceiver",
							"MessageReceiver",
							"MessageTransmitter",
							"value: instance =>",
							"ctor =>",
							"none()",
							"encode: v =>",
							"decode: v =>",
							"json(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".js = function js(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".bjson = function bjson()",
							"encode: v =>",
							"decode: v =>",
							" function RPCApi(c)",
							"RPCApi",
							" o =>",
							" function RPCProxy(c)",
							" function RPCObject(id, connection)",
							"r =>",
							"RPCObject",
							" function RPCFactory(api)",
							"async function Factory(opts)",
							"RPCObject",
							"RPCFactory",
							"RPCFactory",
							"Connection",
							"static equal(a, b)",
							"static get last()",
							"makeSeq()",
							"constructor(socket, instance, log, codec = 'none')",
							"log(...args)",
							"error(message)",
							"close(...args)",
							"onmessage(msg)",
							"r =>",
							"processMessage(data)",
							"onconnect(...args)",
							"onpong(data)",
							"onerror(error)",
							"onclose(reason)",
							"cleanup()",
							"sendMessage(obj)",
							"sendCommand(command, params = {})",
							"static getCallbacks(instance, verbosity = 0)",
							" (...args) =>",
							" () =>",
							"handle = (sock, event, ...args) =>",
							"then: fn =>",
							"remove = sock =>",
							"onConnect(sock)",
							"onOpen(sock)",
							"onMessage(sock, msg)",
							"onError(sock, error)",
							"onClose(sock, why)",
							"onPong(sock, data)",
							"Connection",
							"function RPCServerEndpoint(classes = {})",
							"new({ class: name, args = [] })",
							"list()",
							"({ id }, respond) =>",
							"({ obj, method, args = [] }, respond) =>",
							"result =>",
							"error =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"sym =>",
							"v =>",
							"v =>",
							"({ obj, property }, respond) =>",
							"({ obj, property, value }, respond) =>",
							"RPCServer",
							"makeId()",
							"processMessage(data)",
							"RPCServer",
							"RPCClient",
							" e =>",
							" r =>",
							"() =>",
							"processMessage(response)",
							"command(name, params)",
							"(accept, reject) =>",
							" response =>",
							" e =>",
							"RPCClient",
							" function RPCSocket(url, service = RPCServer, verbosity = 1)",
							" (...args) =>",
							"get fd()",
							"get socket()",
							"register(ctor)",
							"listen(new_ws, os = globalThis.os)",
							"() =>",
							"async connect(new_ws, os = globalThis.os)",
							"get connected()",
							"get list()",
							"get last()",
							"RPCSocket",
							"function MakeWebSocket(url, callbacks)",
							".onconnect = () =>",
							".onopen = () =>",
							".onerror = error =>",
							".onmessage = msg =>",
							".onpong = pong =>",
							".onclose = reason =>",
							" function isThenable(value)",
							" function hasHandler(obj, eventName)",
							" function callHandler(obj, eventName, ...args)",
							" function parseURL(url_or_port)",
							"toString()",
							" function GetProperties(obj, method = obj => Object.",
							"(obj), pred = (obj, depth) => obj !== Object.prototype)",
							" function GetKeys(obj, pred = (obj, depth) => obj !== Object.prototype)",
							" obj =>",
							" obj =>",
							" function getPropertyDescriptors(obj, merge = true, pred = (proto, depth) => true)",
							" function define(obj, ...args)",
							" function setHandlers(os, handlers)",
							".onFd = function(fd, readable, writable)",
							" function statusResponse(success, result_or_error, data)",
							" function objectCommand(fn)",
							" function(data)",
							"respond = (success, result) =>",
							" function MakeListCommand(pred = v => typeof v != 'function', defaults = { maxDepth: Infinity })",
							"(data, respond) =>",
							" (proto, depth) =>",
							"(acc, key) =>",
							" function getPrototypeName(proto)",
							"function DeserializeEntries(e)",
							"a =>",
							"function DeserializeKeys(e)",
							"([k]) =>",
							"function DeserializeMap(e)",
							"function DeserializeObject(e)",
							"function ForwardMethods(e, ret = {}, thisObj)",
							" o =>",
							"function ForwardObject(e, thisObj)",
							"function MakeCommandFunction(cmd, getConnection, thisObj, t)",
							"getConnection = obj =>",
							" function(params = {})",
							"(resolve, reject) =>",
							" r =>",
							"async function(params = {})",
							" function SerializeValue(value, source = false)",
							" function DeserializeSymbols(names)",
							"n =>",
							"n =>",
							" function DeserializeValue(desc)",
							"RPCConnect = (url, service = RPCClient) =>",
							"RPCListen = (url, service = RPCServer) =>"
						]
					},
					"AQAAAAAAAAAAAAAAwQgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					686,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAADBCAAAICAuTG9nV3JhcCA9IExvZ1dyYXAobG9nKQogIC5tZW1vaXplID0gbWVtb2l6ZShmbikKICBzZWxmID0gKGtleSwgLi4uYXJncykKICAuR2V0Q2xhc3NlcyA9ICpHZXRDbGFzc2VzKG9iaikKTWFwcGVyKG1hcCA9IAogIHNlbGYgPSAoa2V5LCB2YWx1ZSkKTWFwcGVyCk1hcHBlcgpNYXBwZXIKICBzZWxmID0gKC4uLmFyZ3MpCkRlZmF1bHRDb25zdHJ1Y3RvcgpEZWZhdWx0Q29uc3RydWN0b3IKRGVmYXVsdENvbnN0cnVjdG9yCldyYXBFdmVudChoYW5kbGVyLCBuYW1lKQogIChlKQogIGdldChvYmosIHByb3ApCk1lc3NhZ2VSZWNlaXZlcgogIG9ubWVzc2FnZShtc2cpCk1lc3NhZ2VUcmFuc21pdHRlcgogIHNlbmRNZXNzYWdlKCkKTWVzc2FnZVRyYW5zY2VpdmVyKCkKTWVzc2FnZVRyYW5zY2VpdmVyCk1lc3NhZ2VSZWNlaXZlcgpNZXNzYWdlVHJhbnNtaXR0ZXIKICBub25lKCkKICBqc29uKHZlcmJvc2UgPSBmYWxzZSkKICAuanMgPSBqcyh2ZXJib3NlID0gZmFsc2UpCiAgLmJqc29uID0gYmpzb24oKQpSUENBcGkoYykKUlBDQXBpClJQQ1Byb3h5KGMpClJQQ09iamVjdChpZCwgY29ubmVjdGlvbikKUlBDT2JqZWN0ClJQQ0ZhY3RvcnkoYXBpKQpGYWN0b3J5KG9wdHMpClJQQ09iamVjdApSUENGYWN0b3J5ClJQQ0ZhY3RvcnkKQ29ubmVjdGlvbgogIHN0YXRpYyBlcXVhbChhLCBiKQogIHN0YXRpYyBnZXQgbGFzdCgpCiAgbWFrZVNlcSgpCiAgY29uc3RydWN0b3Ioc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYyA9ICdub25lJykKICBsb2coLi4uYXJncykKICBlcnJvcihtZXNzYWdlKQogIGNsb3NlKC4uLmFyZ3MpCiAgb25tZXNzYWdlKG1zZykKICBwcm9jZXNzTWVzc2FnZShkYXRhKQogIG9uY29ubmVjdCguLi5hcmdzKQogIG9ucG9uZyhkYXRhKQogIG9uZXJyb3IoZXJyb3IpCiAgb25jbG9zZShyZWFzb24pCiAgY2xlYW51cCgpCiAgc2VuZE1lc3NhZ2Uob2JqKQogIHNlbmRDb21tYW5kKGNvbW1hbmQsIHBhcmFtcyA9IHt9KQogIHN0YXRpYyBnZXRDYWxsYmFja3MoaW5zdGFuY2UsIHZlcmJvc2l0eSA9IDApCiAgb25Db25uZWN0KHNvY2spCiAgb25PcGVuKHNvY2spCiAgb25NZXNzYWdlKHNvY2ssIG1zZykKICBvbkVycm9yKHNvY2ssIGVycm9yKQogIG9uQ2xvc2Uoc29jaywgd2h5KQogIG9uUG9uZyhzb2NrLCBkYXRhKQpDb25uZWN0aW9uClJQQ1NlcnZlckVuZHBvaW50KGNsYXNzZXMgPSB7fSkKICBuZXcoeyBjbGFzczogbmFtZSwgYXJncyA9IFtdIH0pCiAgbGlzdCgpClJQQ1NlcnZlcgogIG1ha2VJZCgpCiAgcHJvY2Vzc01lc3NhZ2UoZGF0YSkKUlBDU2VydmVyClJQQ0NsaWVudAogIHByb2Nlc3NNZXNzYWdlKHJlc3BvbnNlKQogIGNvbW1hbmQobmFtZSwgcGFyYW1zKQpSUENDbGllbnQKUlBDU29ja2V0KHVybCwgc2VydmljZSA9IFJQQ1NlcnZlciwgdmVyYm9zaXR5ID0gMSkKICBnZXQgZmQoKQogIGdldCBzb2NrZXQoKQogIHJlZ2lzdGVyKGN0b3IpCiAgbGlzdGVuKG5ld193cywgb3MgPSBnbG9iYWxUaGlzLm9zKQogIGNvbm5lY3QobmV3X3dzLCBvcyA9IGdsb2JhbFRoaXMub3MpCiAgZ2V0IGNvbm5lY3RlZCgpCiAgZ2V0IGxpc3QoKQogIGdldCBsYXN0KCkKUlBDU29ja2V0Ck1ha2VXZWJTb2NrZXQodXJsLCBjYWxsYmFja3MpCiAgaXNUaGVuYWJsZSh2YWx1ZSkKICBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKQogIGNhbGxIYW5kbGVyKG9iaiwgZXZlbnROYW1lLCAuLi5hcmdzKQogIHBhcnNlVVJMKHVybF9vcl9wb3J0KQogIHRvU3RyaW5nKCkKICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIHNldEhhbmRsZXJzKG9zLCBoYW5kbGVycykKICAub25GZCA9IChmZCwgcmVhZGFibGUsIHdyaXRhYmxlKQogIHN0YXR1c1Jlc3BvbnNlKHN1Y2Nlc3MsIHJlc3VsdF9vcl9lcnJvciwgZGF0YSkKICBvYmplY3RDb21tYW5kKGZuKQogIChkYXRhKQogIGdldFByb3RvdHlwZU5hbWUocHJvdG8pCkRlc2VyaWFsaXplRW50cmllcyhlKQpEZXNlcmlhbGl6ZUtleXMoZSkKRGVzZXJpYWxpemVNYXAoZSkKRGVzZXJpYWxpemVPYmplY3QoZSkKRm9yd2FyZE1ldGhvZHMoZSwgcmV0ID0ge30sIHRoaXNPYmopCkZvcndhcmRPYmplY3QoZSwgdGhpc09iaikKTWFrZUNvbW1hbmRGdW5jdGlvbihjbWQsIGdldENvbm5lY3Rpb24sIHRoaXNPYmosIHQpCiAgKHBhcmFtcyA9IHt9KQoocGFyYW1zID0ge30pClNlcmlhbGl6ZVZhbHVlKHZhbHVlLCBzb3VyY2UgPSBmYWxzZSkKRGVzZXJpYWxpemVTeW1ib2xzKG5hbWVzKQpEZXNlcmlhbGl6ZVZhbHVlKGRlc2MpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					687,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/net/rpc.js",
						"symkeys":
						[
							[
								414,
								446
							],
							[
								503,
								521
							],
							[
								573,
								591
							],
							[
								626,
								646
							],
							[
								695,
								714
							],
							[
								720,
								729
							],
							[
								740,
								754
							],
							[
								783,
								804
							],
							[
								870,
								901
							],
							[
								959,
								974
							],
							[
								1041,
								1070
							],
							[
								1480,
								1484
							],
							[
								1511,
								1522
							],
							[
								1598,
								1637
							],
							[
								1850,
								1873
							],
							[
								1884,
								1887
							],
							[
								1904,
								1931
							],
							[
								2074,
								2080
							],
							[
								2095,
								2101
							],
							[
								2130,
								2136
							],
							[
								2176,
								2231
							],
							[
								2241,
								2251
							],
							[
								2268,
								2292
							],
							[
								2568,
								2586
							],
							[
								2601,
								2619
							],
							[
								2648,
								2666
							],
							[
								2718,
								2845
							],
							[
								2848,
								2883
							],
							[
								2896,
								2908
							],
							[
								2996,
								3010
							],
							[
								3193,
								3208
							],
							[
								3336,
								3350
							],
							[
								3474,
								3492
							],
							[
								3607,
								3620
							],
							[
								3798,
								3828
							],
							[
								3847,
								3865
							],
							[
								3877,
								3892
							],
							[
								3904,
								3922
							],
							[
								4002,
								4020
							],
							[
								4065,
								4072
							],
							[
								4133,
								4139
							],
							[
								4181,
								4193
							],
							[
								4203,
								4215
							],
							[
								4232,
								4253
							],
							[
								4295,
								4307
							],
							[
								4364,
								4376
							],
							[
								4439,
								4473
							],
							[
								4513,
								4525
							],
							[
								4594,
								4606
							],
							[
								4668,
								4693
							],
							[
								4736,
								4748
							],
							[
								4771,
								4783
							],
							[
								4819,
								4838
							],
							[
								5047,
								5053
							],
							[
								5095,
								5100
							],
							[
								5123,
								5144
							],
							[
								5262,
								5297
							],
							[
								5413,
								5417
							],
							[
								5444,
								5453
							],
							[
								5506,
								5531
							],
							[
								5536,
								5564
							],
							[
								5794,
								5803
							],
							[
								5904,
								5914
							],
							[
								5944,
								5954
							],
							[
								6048,
								6058
							],
							[
								6144,
								6162
							],
							[
								6273,
								6290
							],
							[
								6327,
								6336
							],
							[
								6373,
								6423
							],
							[
								6540,
								6552
							],
							[
								6986,
								7000
							],
							[
								7223,
								7237
							],
							[
								7406,
								7420
							],
							[
								8012,
								8016
							],
							[
								8110,
								8130
							],
							[
								8236,
								8254
							],
							[
								8464,
								8476
							],
							[
								8528,
								8542
							],
							[
								8664,
								8679
							],
							[
								8803,
								8812
							],
							[
								8902,
								8918
							],
							[
								9290,
								9323
							],
							[
								9828,
								9872
							],
							[
								9980,
								9993
							],
							[
								10019,
								10025
							],
							[
								10110,
								10144
							],
							[
								10398,
								10409
							],
							[
								10467,
								10483
							],
							[
								10564,
								10579
							],
							[
								10899,
								10911
							],
							[
								11088,
								11108
							],
							[
								11214,
								11234
							],
							[
								11409,
								11427
							],
							[
								11552,
								11570
							],
							[
								11686,
								11696
							],
							[
								11773,
								11813
							],
							[
								11831,
								11862
							],
							[
								12192,
								12198
							],
							[
								12363,
								12383
							],
							[
								12479,
								12519
							],
							[
								12679,
								12688
							],
							[
								12718,
								12726
							],
							[
								12904,
								12944
							],
							[
								13005,
								13012
							],
							[
								13031,
								13038
							],
							[
								13107,
								13147
							],
							[
								13212,
								13219
							],
							[
								13297,
								13337
							],
							[
								13402,
								13409
							],
							[
								13449,
								13455
							],
							[
								13522,
								13526
							],
							[
								13581,
								13585
							],
							[
								13657,
								13688
							],
							[
								13951,
								13989
							],
							[
								14073,
								14082
							],
							[
								14558,
								14566
							],
							[
								14602,
								14622
							],
							[
								15203,
								15212
							],
							[
								15522,
								15531
							],
							[
								15931,
								15936
							],
							[
								15992,
								15997
							],
							[
								16096,
								16101
							],
							[
								16133,
								16157
							],
							[
								16410,
								16431
							],
							[
								16457,
								16476
							],
							[
								16506,
								16518
							],
							[
								16562,
								16567
							],
							[
								16641,
								16650
							],
							[
								16958,
								17018
							],
							[
								17595,
								17608
							],
							[
								17780,
								17788
							],
							[
								17906,
								17918
							],
							[
								18249,
								18263
							],
							[
								18483,
								18517
							],
							[
								18816,
								18821
							],
							[
								18916,
								18957
							],
							[
								19251,
								19266
							],
							[
								19727,
								19737
							],
							[
								19774,
								19784
							],
							[
								19853,
								19862
							],
							[
								19920,
								19958
							],
							[
								20091,
								20109
							],
							[
								20139,
								20154
							],
							[
								20181,
								20200
							],
							[
								20235,
								20254
							],
							[
								20289,
								20306
							],
							[
								20339,
								20359
							],
							[
								20451,
								20478
							],
							[
								20577,
								20613
							],
							[
								20771,
								20817
							],
							[
								20916,
								20947
							],
							[
								21504,
								21514
							],
							[
								21648,
								21700
							],
							[
								21719,
								21774
							],
							[
								22093,
								22164
							],
							[
								22226,
								22233
							],
							[
								22324,
								22331
							],
							[
								22418,
								22500
							],
							[
								23042,
								23072
							],
							[
								23440,
								23475
							],
							[
								23488,
								23528
							],
							[
								23707,
								23763
							],
							[
								23992,
								24019
							],
							[
								24030,
								24045
							],
							[
								24058,
								24088
							],
							[
								24345,
								24441
							],
							[
								24467,
								24485
							],
							[
								24733,
								24751
							],
							[
								24854,
								24867
							],
							[
								25451,
								25484
							],
							[
								25553,
								25583
							],
							[
								25622,
								25626
							],
							[
								25713,
								25740
							],
							[
								25779,
								25787
							],
							[
								25867,
								25893
							],
							[
								25939,
								25968
							],
							[
								26025,
								26070
							],
							[
								26170,
								26175
							],
							[
								26275,
								26309
							],
							[
								26426,
								26486
							],
							[
								26701,
								26723
							],
							[
								26889,
								26911
							],
							[
								27009,
								27029
							],
							[
								27061,
								27066
							],
							[
								27195,
								27222
							],
							[
								27454,
								27501
							],
							[
								28319,
								28354
							],
							[
								28376,
								28380
							],
							[
								28412,
								28416
							],
							[
								28438,
								28470
							],
							[
								28604,
								28646
							],
							[
								28699,
								28740
							]
						],
						"symlist":
						[
							".LogWrap = function LogWrap(log)",
							"log = (...args) =>",
							"log = (...args) =>",
							" (value, ...args) =>",
							"VfnAdapter = vfn =>",
							"get: k =>",
							"set: (k, v) =>",
							"VfnDecorator = vfn =>",
							".memoize = function memoize(fn)",
							"(key, value) =>",
							"self = function(key, ...args)",
							"n =>",
							"(acc, n) =>",
							".GetClasses = function* GetClasses(obj)",
							" function Mapper(map = ",
							"())",
							"self = function(key, value)",
							"Mapper",
							"Mapper",
							"Mapper",
							" function DefaultConstructor(mapper, fn = (...args) => ",
							"(...args))",
							"self = function(...args)",
							"DefaultConstructor",
							"DefaultConstructor",
							"DefaultConstructor",
							" function EventLogger(instance = {}, callback = (name, event, thisObj) => console.log('EventLogger', { name, event, thisObj }))",
							" function WrapEvent(handler, name)",
							" function(e)",
							"get(obj, prop)",
							"MessageReceiver",
							"onmessage(msg)",
							"MessageTransmitter",
							"sendMessage()",
							" function MessageTransceiver()",
							"MessageTransceiver",
							"MessageReceiver",
							"MessageTransmitter",
							"value: instance =>",
							"ctor =>",
							"none()",
							"encode: v =>",
							"decode: v =>",
							"json(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".js = function js(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".bjson = function bjson()",
							"encode: v =>",
							"decode: v =>",
							" function RPCApi(c)",
							"RPCApi",
							" o =>",
							" function RPCProxy(c)",
							" function RPCObject(id, connection)",
							"r =>",
							"RPCObject",
							" function RPCFactory(api)",
							"async function Factory(opts)",
							"RPCObject",
							"RPCFactory",
							"RPCFactory",
							"Connection",
							"static equal(a, b)",
							"static get last()",
							"makeSeq()",
							"constructor(socket, instance, log, codec = 'none')",
							"log(...args)",
							"error(message)",
							"close(...args)",
							"onmessage(msg)",
							"r =>",
							"processMessage(data)",
							"onconnect(...args)",
							"onpong(data)",
							"onerror(error)",
							"onclose(reason)",
							"cleanup()",
							"sendMessage(obj)",
							"sendCommand(command, params = {})",
							"static getCallbacks(instance, verbosity = 0)",
							" (...args) =>",
							" () =>",
							"handle = (sock, event, ...args) =>",
							"then: fn =>",
							"remove = sock =>",
							"onConnect(sock)",
							"onOpen(sock)",
							"onMessage(sock, msg)",
							"onError(sock, error)",
							"onClose(sock, why)",
							"onPong(sock, data)",
							"Connection",
							"function RPCServerEndpoint(classes = {})",
							"new({ class: name, args = [] })",
							"list()",
							"({ id }, respond) =>",
							"({ obj, method, args = [] }, respond) =>",
							"result =>",
							"error =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"sym =>",
							"v =>",
							"v =>",
							"({ obj, property }, respond) =>",
							"({ obj, property, value }, respond) =>",
							"RPCServer",
							"makeId()",
							"processMessage(data)",
							"RPCServer",
							"RPCClient",
							" e =>",
							" r =>",
							"() =>",
							"processMessage(response)",
							"command(name, params)",
							"(accept, reject) =>",
							" response =>",
							" e =>",
							"RPCClient",
							" function RPCSocket(url, service = RPCServer, verbosity = 1)",
							" (...args) =>",
							"get fd()",
							"get socket()",
							"register(ctor)",
							"listen(new_ws, os = globalThis.os)",
							"() =>",
							"async connect(new_ws, os = globalThis.os)",
							"get connected()",
							"get list()",
							"get last()",
							"RPCSocket",
							"function MakeWebSocket(url, callbacks)",
							".onconnect = () =>",
							".onopen = () =>",
							".onerror = error =>",
							".onmessage = msg =>",
							".onpong = pong =>",
							".onclose = reason =>",
							" function isThenable(value)",
							" function hasHandler(obj, eventName)",
							" function callHandler(obj, eventName, ...args)",
							" function parseURL(url_or_port)",
							"toString()",
							" function GetProperties(obj, method = obj => Object.",
							"(obj), pred = (obj, depth) => obj !== Object.prototype)",
							" function GetKeys(obj, pred = (obj, depth) => obj !== Object.prototype)",
							" obj =>",
							" obj =>",
							" function getPropertyDescriptors(obj, merge = true, pred = (proto, depth) => true)",
							" function define(obj, ...args)",
							" function setHandlers(os, handlers)",
							".onFd = function(fd, readable, writable)",
							" function statusResponse(success, result_or_error, data)",
							" function objectCommand(fn)",
							" function(data)",
							"respond = (success, result) =>",
							" function MakeListCommand(pred = v => typeof v != 'function', defaults = { maxDepth: Infinity })",
							"(data, respond) =>",
							" (proto, depth) =>",
							"(acc, key) =>",
							" function getPrototypeName(proto)",
							"function DeserializeEntries(e)",
							"a =>",
							"function DeserializeKeys(e)",
							"([k]) =>",
							"function DeserializeMap(e)",
							"function DeserializeObject(e)",
							"function ForwardMethods(e, ret = {}, thisObj)",
							" o =>",
							"function ForwardObject(e, thisObj)",
							"function MakeCommandFunction(cmd, getConnection, thisObj, t)",
							"getConnection = obj =>",
							" function(params = {})",
							"(resolve, reject) =>",
							" r =>",
							"async function(params = {})",
							" function SerializeValue(value, source = false)",
							" function DeserializeSymbols(names)",
							"n =>",
							"n =>",
							" function DeserializeValue(desc)",
							"RPCConnect = (url, service = RPCClient) =>",
							"RPCListen = (url, service = RPCServer) =>"
						]
					},
					"AQAAAAAAAAAAAAAAwQgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					688,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADBCAAAICAuTG9nV3JhcCA9IExvZ1dyYXAobG9nKQogIC5tZW1vaXplID0gbWVtb2l6ZShmbikKICBzZWxmID0gKGtleSwgLi4uYXJncykKICAuR2V0Q2xhc3NlcyA9ICpHZXRDbGFzc2VzKG9iaikKTWFwcGVyKG1hcCA9IAogIHNlbGYgPSAoa2V5LCB2YWx1ZSkKTWFwcGVyCk1hcHBlcgpNYXBwZXIKICBzZWxmID0gKC4uLmFyZ3MpCkRlZmF1bHRDb25zdHJ1Y3RvcgpEZWZhdWx0Q29uc3RydWN0b3IKRGVmYXVsdENvbnN0cnVjdG9yCldyYXBFdmVudChoYW5kbGVyLCBuYW1lKQogIChlKQogIGdldChvYmosIHByb3ApCk1lc3NhZ2VSZWNlaXZlcgogIG9ubWVzc2FnZShtc2cpCk1lc3NhZ2VUcmFuc21pdHRlcgogIHNlbmRNZXNzYWdlKCkKTWVzc2FnZVRyYW5zY2VpdmVyKCkKTWVzc2FnZVRyYW5zY2VpdmVyCk1lc3NhZ2VSZWNlaXZlcgpNZXNzYWdlVHJhbnNtaXR0ZXIKICBub25lKCkKICBqc29uKHZlcmJvc2UgPSBmYWxzZSkKICAuanMgPSBqcyh2ZXJib3NlID0gZmFsc2UpCiAgLmJqc29uID0gYmpzb24oKQpSUENBcGkoYykKUlBDQXBpClJQQ1Byb3h5KGMpClJQQ09iamVjdChpZCwgY29ubmVjdGlvbikKUlBDT2JqZWN0ClJQQ0ZhY3RvcnkoYXBpKQpGYWN0b3J5KG9wdHMpClJQQ09iamVjdApSUENGYWN0b3J5ClJQQ0ZhY3RvcnkKQ29ubmVjdGlvbgogIHN0YXRpYyBlcXVhbChhLCBiKQogIHN0YXRpYyBnZXQgbGFzdCgpCiAgbWFrZVNlcSgpCiAgY29uc3RydWN0b3Ioc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYyA9ICdub25lJykKICBsb2coLi4uYXJncykKICBlcnJvcihtZXNzYWdlKQogIGNsb3NlKC4uLmFyZ3MpCiAgb25tZXNzYWdlKG1zZykKICBwcm9jZXNzTWVzc2FnZShkYXRhKQogIG9uY29ubmVjdCguLi5hcmdzKQogIG9ucG9uZyhkYXRhKQogIG9uZXJyb3IoZXJyb3IpCiAgb25jbG9zZShyZWFzb24pCiAgY2xlYW51cCgpCiAgc2VuZE1lc3NhZ2Uob2JqKQogIHNlbmRDb21tYW5kKGNvbW1hbmQsIHBhcmFtcyA9IHt9KQogIHN0YXRpYyBnZXRDYWxsYmFja3MoaW5zdGFuY2UsIHZlcmJvc2l0eSA9IDApCiAgb25Db25uZWN0KHNvY2spCiAgb25PcGVuKHNvY2spCiAgb25NZXNzYWdlKHNvY2ssIG1zZykKICBvbkVycm9yKHNvY2ssIGVycm9yKQogIG9uQ2xvc2Uoc29jaywgd2h5KQogIG9uUG9uZyhzb2NrLCBkYXRhKQpDb25uZWN0aW9uClJQQ1NlcnZlckVuZHBvaW50KGNsYXNzZXMgPSB7fSkKICBuZXcoeyBjbGFzczogbmFtZSwgYXJncyA9IFtdIH0pCiAgbGlzdCgpClJQQ1NlcnZlcgogIG1ha2VJZCgpCiAgcHJvY2Vzc01lc3NhZ2UoZGF0YSkKUlBDU2VydmVyClJQQ0NsaWVudAogIHByb2Nlc3NNZXNzYWdlKHJlc3BvbnNlKQogIGNvbW1hbmQobmFtZSwgcGFyYW1zKQpSUENDbGllbnQKUlBDU29ja2V0KHVybCwgc2VydmljZSA9IFJQQ1NlcnZlciwgdmVyYm9zaXR5ID0gMSkKICBnZXQgZmQoKQogIGdldCBzb2NrZXQoKQogIHJlZ2lzdGVyKGN0b3IpCiAgbGlzdGVuKG5ld193cywgb3MgPSBnbG9iYWxUaGlzLm9zKQogIGNvbm5lY3QobmV3X3dzLCBvcyA9IGdsb2JhbFRoaXMub3MpCiAgZ2V0IGNvbm5lY3RlZCgpCiAgZ2V0IGxpc3QoKQogIGdldCBsYXN0KCkKUlBDU29ja2V0Ck1ha2VXZWJTb2NrZXQodXJsLCBjYWxsYmFja3MpCiAgaXNUaGVuYWJsZSh2YWx1ZSkKICBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKQogIGNhbGxIYW5kbGVyKG9iaiwgZXZlbnROYW1lLCAuLi5hcmdzKQogIHBhcnNlVVJMKHVybF9vcl9wb3J0KQogIHRvU3RyaW5nKCkKICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIHNldEhhbmRsZXJzKG9zLCBoYW5kbGVycykKICAub25GZCA9IChmZCwgcmVhZGFibGUsIHdyaXRhYmxlKQogIHN0YXR1c1Jlc3BvbnNlKHN1Y2Nlc3MsIHJlc3VsdF9vcl9lcnJvciwgZGF0YSkKICBvYmplY3RDb21tYW5kKGZuKQogIChkYXRhKQogIGdldFByb3RvdHlwZU5hbWUocHJvdG8pCkRlc2VyaWFsaXplRW50cmllcyhlKQpEZXNlcmlhbGl6ZUtleXMoZSkKRGVzZXJpYWxpemVNYXAoZSkKRGVzZXJpYWxpemVPYmplY3QoZSkKRm9yd2FyZE1ldGhvZHMoZSwgcmV0ID0ge30sIHRoaXNPYmopCkZvcndhcmRPYmplY3QoZSwgdGhpc09iaikKTWFrZUNvbW1hbmRGdW5jdGlvbihjbWQsIGdldENvbm5lY3Rpb24sIHRoaXNPYmosIHQpCiAgKHBhcmFtcyA9IHt9KQoocGFyYW1zID0ge30pClNlcmlhbGl6ZVZhbHVlKHZhbHVlLCBzb3VyY2UgPSBmYWxzZSkKRGVzZXJpYWxpemVTeW1ib2xzKG5hbWVzKQpEZXNlcmlhbGl6ZVZhbHVlKGRlc2MpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					689,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/net/rpc.js",
						"symkeys":
						[
							[
								414,
								446
							],
							[
								503,
								521
							],
							[
								573,
								591
							],
							[
								626,
								646
							],
							[
								695,
								714
							],
							[
								720,
								729
							],
							[
								740,
								754
							],
							[
								783,
								804
							],
							[
								870,
								901
							],
							[
								959,
								974
							],
							[
								1041,
								1070
							],
							[
								1480,
								1484
							],
							[
								1511,
								1522
							],
							[
								1598,
								1637
							],
							[
								1850,
								1873
							],
							[
								1884,
								1887
							],
							[
								1904,
								1931
							],
							[
								2074,
								2080
							],
							[
								2095,
								2101
							],
							[
								2130,
								2136
							],
							[
								2176,
								2231
							],
							[
								2241,
								2251
							],
							[
								2268,
								2292
							],
							[
								2568,
								2586
							],
							[
								2601,
								2619
							],
							[
								2648,
								2666
							],
							[
								2718,
								2845
							],
							[
								2848,
								2883
							],
							[
								2896,
								2908
							],
							[
								2996,
								3010
							],
							[
								3193,
								3208
							],
							[
								3336,
								3350
							],
							[
								3474,
								3492
							],
							[
								3607,
								3620
							],
							[
								3798,
								3828
							],
							[
								3847,
								3865
							],
							[
								3877,
								3892
							],
							[
								3904,
								3922
							],
							[
								4002,
								4020
							],
							[
								4065,
								4072
							],
							[
								4133,
								4139
							],
							[
								4181,
								4193
							],
							[
								4203,
								4215
							],
							[
								4232,
								4253
							],
							[
								4295,
								4307
							],
							[
								4364,
								4376
							],
							[
								4439,
								4473
							],
							[
								4513,
								4525
							],
							[
								4594,
								4606
							],
							[
								4668,
								4693
							],
							[
								4736,
								4748
							],
							[
								4771,
								4783
							],
							[
								4819,
								4838
							],
							[
								5047,
								5053
							],
							[
								5095,
								5100
							],
							[
								5123,
								5144
							],
							[
								5262,
								5297
							],
							[
								5413,
								5417
							],
							[
								5444,
								5453
							],
							[
								5506,
								5531
							],
							[
								5536,
								5564
							],
							[
								5794,
								5803
							],
							[
								5904,
								5914
							],
							[
								5944,
								5954
							],
							[
								6048,
								6058
							],
							[
								6144,
								6162
							],
							[
								6273,
								6290
							],
							[
								6327,
								6336
							],
							[
								6373,
								6423
							],
							[
								6540,
								6552
							],
							[
								6986,
								7000
							],
							[
								7223,
								7237
							],
							[
								7406,
								7420
							],
							[
								8012,
								8016
							],
							[
								8110,
								8130
							],
							[
								8236,
								8254
							],
							[
								8464,
								8476
							],
							[
								8528,
								8542
							],
							[
								8664,
								8679
							],
							[
								8803,
								8812
							],
							[
								8902,
								8918
							],
							[
								9290,
								9323
							],
							[
								9828,
								9872
							],
							[
								9980,
								9993
							],
							[
								10019,
								10025
							],
							[
								10110,
								10144
							],
							[
								10398,
								10409
							],
							[
								10467,
								10483
							],
							[
								10564,
								10579
							],
							[
								10899,
								10911
							],
							[
								11088,
								11108
							],
							[
								11214,
								11234
							],
							[
								11409,
								11427
							],
							[
								11552,
								11570
							],
							[
								11686,
								11696
							],
							[
								11773,
								11813
							],
							[
								11831,
								11862
							],
							[
								12192,
								12198
							],
							[
								12363,
								12383
							],
							[
								12479,
								12519
							],
							[
								12679,
								12688
							],
							[
								12718,
								12726
							],
							[
								12904,
								12944
							],
							[
								13005,
								13012
							],
							[
								13031,
								13038
							],
							[
								13107,
								13147
							],
							[
								13212,
								13219
							],
							[
								13297,
								13337
							],
							[
								13402,
								13409
							],
							[
								13449,
								13455
							],
							[
								13522,
								13526
							],
							[
								13581,
								13585
							],
							[
								13657,
								13688
							],
							[
								13951,
								13989
							],
							[
								14073,
								14082
							],
							[
								14558,
								14566
							],
							[
								14602,
								14622
							],
							[
								15203,
								15212
							],
							[
								15522,
								15531
							],
							[
								15931,
								15936
							],
							[
								15992,
								15997
							],
							[
								16096,
								16101
							],
							[
								16133,
								16157
							],
							[
								16410,
								16431
							],
							[
								16457,
								16476
							],
							[
								16506,
								16518
							],
							[
								16562,
								16567
							],
							[
								16641,
								16650
							],
							[
								16958,
								17018
							],
							[
								17595,
								17608
							],
							[
								17780,
								17788
							],
							[
								17906,
								17918
							],
							[
								18249,
								18263
							],
							[
								18483,
								18517
							],
							[
								18816,
								18821
							],
							[
								18916,
								18957
							],
							[
								19251,
								19266
							],
							[
								19727,
								19737
							],
							[
								19774,
								19784
							],
							[
								19853,
								19862
							],
							[
								19920,
								19958
							],
							[
								20091,
								20109
							],
							[
								20139,
								20154
							],
							[
								20181,
								20200
							],
							[
								20235,
								20254
							],
							[
								20289,
								20306
							],
							[
								20339,
								20359
							],
							[
								20451,
								20478
							],
							[
								20577,
								20613
							],
							[
								20771,
								20817
							],
							[
								20916,
								20947
							],
							[
								21504,
								21514
							],
							[
								21648,
								21700
							],
							[
								21719,
								21774
							],
							[
								22093,
								22164
							],
							[
								22226,
								22233
							],
							[
								22324,
								22331
							],
							[
								22418,
								22500
							],
							[
								23042,
								23072
							],
							[
								23440,
								23475
							],
							[
								23488,
								23528
							],
							[
								23707,
								23763
							],
							[
								23992,
								24019
							],
							[
								24030,
								24045
							],
							[
								24058,
								24088
							],
							[
								24345,
								24441
							],
							[
								24467,
								24485
							],
							[
								24733,
								24751
							],
							[
								24854,
								24867
							],
							[
								25451,
								25484
							],
							[
								25553,
								25583
							],
							[
								25622,
								25626
							],
							[
								25713,
								25740
							],
							[
								25779,
								25787
							],
							[
								25867,
								25893
							],
							[
								25939,
								25968
							],
							[
								26025,
								26070
							],
							[
								26170,
								26175
							],
							[
								26275,
								26309
							],
							[
								26426,
								26486
							],
							[
								26701,
								26723
							],
							[
								26889,
								26911
							],
							[
								27009,
								27029
							],
							[
								27061,
								27066
							],
							[
								27195,
								27222
							],
							[
								27454,
								27501
							],
							[
								28319,
								28354
							],
							[
								28376,
								28380
							],
							[
								28412,
								28416
							],
							[
								28438,
								28470
							],
							[
								28604,
								28646
							],
							[
								28699,
								28740
							]
						],
						"symlist":
						[
							".LogWrap = function LogWrap(log)",
							"log = (...args) =>",
							"log = (...args) =>",
							" (value, ...args) =>",
							"VfnAdapter = vfn =>",
							"get: k =>",
							"set: (k, v) =>",
							"VfnDecorator = vfn =>",
							".memoize = function memoize(fn)",
							"(key, value) =>",
							"self = function(key, ...args)",
							"n =>",
							"(acc, n) =>",
							".GetClasses = function* GetClasses(obj)",
							" function Mapper(map = ",
							"())",
							"self = function(key, value)",
							"Mapper",
							"Mapper",
							"Mapper",
							" function DefaultConstructor(mapper, fn = (...args) => ",
							"(...args))",
							"self = function(...args)",
							"DefaultConstructor",
							"DefaultConstructor",
							"DefaultConstructor",
							" function EventLogger(instance = {}, callback = (name, event, thisObj) => console.log('EventLogger', { name, event, thisObj }))",
							" function WrapEvent(handler, name)",
							" function(e)",
							"get(obj, prop)",
							"MessageReceiver",
							"onmessage(msg)",
							"MessageTransmitter",
							"sendMessage()",
							" function MessageTransceiver()",
							"MessageTransceiver",
							"MessageReceiver",
							"MessageTransmitter",
							"value: instance =>",
							"ctor =>",
							"none()",
							"encode: v =>",
							"decode: v =>",
							"json(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".js = function js(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".bjson = function bjson()",
							"encode: v =>",
							"decode: v =>",
							" function RPCApi(c)",
							"RPCApi",
							" o =>",
							" function RPCProxy(c)",
							" function RPCObject(id, connection)",
							"r =>",
							"RPCObject",
							" function RPCFactory(api)",
							"async function Factory(opts)",
							"RPCObject",
							"RPCFactory",
							"RPCFactory",
							"Connection",
							"static equal(a, b)",
							"static get last()",
							"makeSeq()",
							"constructor(socket, instance, log, codec = 'none')",
							"log(...args)",
							"error(message)",
							"close(...args)",
							"onmessage(msg)",
							"r =>",
							"processMessage(data)",
							"onconnect(...args)",
							"onpong(data)",
							"onerror(error)",
							"onclose(reason)",
							"cleanup()",
							"sendMessage(obj)",
							"sendCommand(command, params = {})",
							"static getCallbacks(instance, verbosity = 0)",
							" (...args) =>",
							" () =>",
							"handle = (sock, event, ...args) =>",
							"then: fn =>",
							"remove = sock =>",
							"onConnect(sock)",
							"onOpen(sock)",
							"onMessage(sock, msg)",
							"onError(sock, error)",
							"onClose(sock, why)",
							"onPong(sock, data)",
							"Connection",
							"function RPCServerEndpoint(classes = {})",
							"new({ class: name, args = [] })",
							"list()",
							"({ id }, respond) =>",
							"({ obj, method, args = [] }, respond) =>",
							"result =>",
							"error =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"sym =>",
							"v =>",
							"v =>",
							"({ obj, property }, respond) =>",
							"({ obj, property, value }, respond) =>",
							"RPCServer",
							"makeId()",
							"processMessage(data)",
							"RPCServer",
							"RPCClient",
							" e =>",
							" r =>",
							"() =>",
							"processMessage(response)",
							"command(name, params)",
							"(accept, reject) =>",
							" response =>",
							" e =>",
							"RPCClient",
							" function RPCSocket(url, service = RPCServer, verbosity = 1)",
							" (...args) =>",
							"get fd()",
							"get socket()",
							"register(ctor)",
							"listen(new_ws, os = globalThis.os)",
							"() =>",
							"async connect(new_ws, os = globalThis.os)",
							"get connected()",
							"get list()",
							"get last()",
							"RPCSocket",
							"function MakeWebSocket(url, callbacks)",
							".onconnect = () =>",
							".onopen = () =>",
							".onerror = error =>",
							".onmessage = msg =>",
							".onpong = pong =>",
							".onclose = reason =>",
							" function isThenable(value)",
							" function hasHandler(obj, eventName)",
							" function callHandler(obj, eventName, ...args)",
							" function parseURL(url_or_port)",
							"toString()",
							" function GetProperties(obj, method = obj => Object.",
							"(obj), pred = (obj, depth) => obj !== Object.prototype)",
							" function GetKeys(obj, pred = (obj, depth) => obj !== Object.prototype)",
							" obj =>",
							" obj =>",
							" function getPropertyDescriptors(obj, merge = true, pred = (proto, depth) => true)",
							" function define(obj, ...args)",
							" function setHandlers(os, handlers)",
							".onFd = function(fd, readable, writable)",
							" function statusResponse(success, result_or_error, data)",
							" function objectCommand(fn)",
							" function(data)",
							"respond = (success, result) =>",
							" function MakeListCommand(pred = v => typeof v != 'function', defaults = { maxDepth: Infinity })",
							"(data, respond) =>",
							" (proto, depth) =>",
							"(acc, key) =>",
							" function getPrototypeName(proto)",
							"function DeserializeEntries(e)",
							"a =>",
							"function DeserializeKeys(e)",
							"([k]) =>",
							"function DeserializeMap(e)",
							"function DeserializeObject(e)",
							"function ForwardMethods(e, ret = {}, thisObj)",
							" o =>",
							"function ForwardObject(e, thisObj)",
							"function MakeCommandFunction(cmd, getConnection, thisObj, t)",
							"getConnection = obj =>",
							" function(params = {})",
							"(resolve, reject) =>",
							" r =>",
							"async function(params = {})",
							" function SerializeValue(value, source = false)",
							" function DeserializeSymbols(names)",
							"n =>",
							"n =>",
							" function DeserializeValue(desc)",
							"RPCConnect = (url, service = RPCClient) =>",
							"RPCListen = (url, service = RPCServer) =>"
						]
					},
					"BQAAAAAAAAAAAAAAwQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMEIAAAgIC5Mb2dXcmFwID0gTG9nV3JhcChsb2cpCiAgLm1lbW9pemUgPSBtZW1vaXplKGZuKQogIHNlbGYgPSAoa2V5LCAuLi5hcmdzKQogIC5HZXRDbGFzc2VzID0gKkdldENsYXNzZXMob2JqKQpNYXBwZXIobWFwID0gCiAgc2VsZiA9IChrZXksIHZhbHVlKQpNYXBwZXIKTWFwcGVyCk1hcHBlcgogIHNlbGYgPSAoLi4uYXJncykKRGVmYXVsdENvbnN0cnVjdG9yCkRlZmF1bHRDb25zdHJ1Y3RvcgpEZWZhdWx0Q29uc3RydWN0b3IKV3JhcEV2ZW50KGhhbmRsZXIsIG5hbWUpCiAgKGUpCiAgZ2V0KG9iaiwgcHJvcCkKTWVzc2FnZVJlY2VpdmVyCiAgb25tZXNzYWdlKG1zZykKTWVzc2FnZVRyYW5zbWl0dGVyCiAgc2VuZE1lc3NhZ2UoKQpNZXNzYWdlVHJhbnNjZWl2ZXIoKQpNZXNzYWdlVHJhbnNjZWl2ZXIKTWVzc2FnZVJlY2VpdmVyCk1lc3NhZ2VUcmFuc21pdHRlcgogIG5vbmUoKQogIGpzb24odmVyYm9zZSA9IGZhbHNlKQogIC5qcyA9IGpzKHZlcmJvc2UgPSBmYWxzZSkKICAuYmpzb24gPSBianNvbigpClJQQ0FwaShjKQpSUENBcGkKUlBDUHJveHkoYykKUlBDT2JqZWN0KGlkLCBjb25uZWN0aW9uKQpSUENPYmplY3QKUlBDRmFjdG9yeShhcGkpCkZhY3Rvcnkob3B0cykKUlBDT2JqZWN0ClJQQ0ZhY3RvcnkKUlBDRmFjdG9yeQpDb25uZWN0aW9uCiAgc3RhdGljIGVxdWFsKGEsIGIpCiAgc3RhdGljIGdldCBsYXN0KCkKICBtYWtlU2VxKCkKICBjb25zdHJ1Y3Rvcihzb2NrZXQsIGluc3RhbmNlLCBsb2csIGNvZGVjID0gJ25vbmUnKQogIGxvZyguLi5hcmdzKQogIGVycm9yKG1lc3NhZ2UpCiAgY2xvc2UoLi4uYXJncykKICBvbm1lc3NhZ2UobXNnKQogIHByb2Nlc3NNZXNzYWdlKGRhdGEpCiAgb25jb25uZWN0KC4uLmFyZ3MpCiAgb25wb25nKGRhdGEpCiAgb25lcnJvcihlcnJvcikKICBvbmNsb3NlKHJlYXNvbikKICBjbGVhbnVwKCkKICBzZW5kTWVzc2FnZShvYmopCiAgc2VuZENvbW1hbmQoY29tbWFuZCwgcGFyYW1zID0ge30pCiAgc3RhdGljIGdldENhbGxiYWNrcyhpbnN0YW5jZSwgdmVyYm9zaXR5ID0gMCkKICBvbkNvbm5lY3Qoc29jaykKICBvbk9wZW4oc29jaykKICBvbk1lc3NhZ2Uoc29jaywgbXNnKQogIG9uRXJyb3Ioc29jaywgZXJyb3IpCiAgb25DbG9zZShzb2NrLCB3aHkpCiAgb25Qb25nKHNvY2ssIGRhdGEpCkNvbm5lY3Rpb24KUlBDU2VydmVyRW5kcG9pbnQoY2xhc3NlcyA9IHt9KQogIG5ldyh7IGNsYXNzOiBuYW1lLCBhcmdzID0gW10gfSkKICBsaXN0KCkKUlBDU2VydmVyCiAgbWFrZUlkKCkKICBwcm9jZXNzTWVzc2FnZShkYXRhKQpSUENTZXJ2ZXIKUlBDQ2xpZW50CiAgcHJvY2Vzc01lc3NhZ2UocmVzcG9uc2UpCiAgY29tbWFuZChuYW1lLCBwYXJhbXMpClJQQ0NsaWVudApSUENTb2NrZXQodXJsLCBzZXJ2aWNlID0gUlBDU2VydmVyLCB2ZXJib3NpdHkgPSAxKQogIGdldCBmZCgpCiAgZ2V0IHNvY2tldCgpCiAgcmVnaXN0ZXIoY3RvcikKICBsaXN0ZW4obmV3X3dzLCBvcyA9IGdsb2JhbFRoaXMub3MpCiAgY29ubmVjdChuZXdfd3MsIG9zID0gZ2xvYmFsVGhpcy5vcykKICBnZXQgY29ubmVjdGVkKCkKICBnZXQgbGlzdCgpCiAgZ2V0IGxhc3QoKQpSUENTb2NrZXQKTWFrZVdlYlNvY2tldCh1cmwsIGNhbGxiYWNrcykKICBpc1RoZW5hYmxlKHZhbHVlKQogIGhhc0hhbmRsZXIob2JqLCBldmVudE5hbWUpCiAgY2FsbEhhbmRsZXIob2JqLCBldmVudE5hbWUsIC4uLmFyZ3MpCiAgcGFyc2VVUkwodXJsX29yX3BvcnQpCiAgdG9TdHJpbmcoKQogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgc2V0SGFuZGxlcnMob3MsIGhhbmRsZXJzKQogIC5vbkZkID0gKGZkLCByZWFkYWJsZSwgd3JpdGFibGUpCiAgc3RhdHVzUmVzcG9uc2Uoc3VjY2VzcywgcmVzdWx0X29yX2Vycm9yLCBkYXRhKQogIG9iamVjdENvbW1hbmQoZm4pCiAgKGRhdGEpCiAgZ2V0UHJvdG90eXBlTmFtZShwcm90bykKRGVzZXJpYWxpemVFbnRyaWVzKGUpCkRlc2VyaWFsaXplS2V5cyhlKQpEZXNlcmlhbGl6ZU1hcChlKQpEZXNlcmlhbGl6ZU9iamVjdChlKQpGb3J3YXJkTWV0aG9kcyhlLCByZXQgPSB7fSwgdGhpc09iaikKRm9yd2FyZE9iamVjdChlLCB0aGlzT2JqKQpNYWtlQ29tbWFuZEZ1bmN0aW9uKGNtZCwgZ2V0Q29ubmVjdGlvbiwgdGhpc09iaiwgdCkKICAocGFyYW1zID0ge30pCihwYXJhbXMgPSB7fSkKU2VyaWFsaXplVmFsdWUodmFsdWUsIHNvdXJjZSA9IGZhbHNlKQpEZXNlcmlhbGl6ZVN5bWJvbHMobmFtZXMpCkRlc2VyaWFsaXplVmFsdWUoZGVzYykAAAAAAAAAAMEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADBCAAAICAuTG9nV3JhcCA9IExvZ1dyYXAobG9nKQogIC5tZW1vaXplID0gbWVtb2l6ZShmbikKICBzZWxmID0gKGtleSwgLi4uYXJncykKICAuR2V0Q2xhc3NlcyA9ICpHZXRDbGFzc2VzKG9iaikKTWFwcGVyKG1hcCA9IAogIHNlbGYgPSAoa2V5LCB2YWx1ZSkKTWFwcGVyCk1hcHBlcgpNYXBwZXIKICBzZWxmID0gKC4uLmFyZ3MpCkRlZmF1bHRDb25zdHJ1Y3RvcgpEZWZhdWx0Q29uc3RydWN0b3IKRGVmYXVsdENvbnN0cnVjdG9yCldyYXBFdmVudChoYW5kbGVyLCBuYW1lKQogIChlKQogIGdldChvYmosIHByb3ApCk1lc3NhZ2VSZWNlaXZlcgogIG9ubWVzc2FnZShtc2cpCk1lc3NhZ2VUcmFuc21pdHRlcgogIHNlbmRNZXNzYWdlKCkKTWVzc2FnZVRyYW5zY2VpdmVyKCkKTWVzc2FnZVRyYW5zY2VpdmVyCk1lc3NhZ2VSZWNlaXZlcgpNZXNzYWdlVHJhbnNtaXR0ZXIKICBub25lKCkKICBqc29uKHZlcmJvc2UgPSBmYWxzZSkKICAuanMgPSBqcyh2ZXJib3NlID0gZmFsc2UpCiAgLmJqc29uID0gYmpzb24oKQpSUENBcGkoYykKUlBDQXBpClJQQ1Byb3h5KGMpClJQQ09iamVjdChpZCwgY29ubmVjdGlvbikKUlBDT2JqZWN0ClJQQ0ZhY3RvcnkoYXBpKQpGYWN0b3J5KG9wdHMpClJQQ09iamVjdApSUENGYWN0b3J5ClJQQ0ZhY3RvcnkKQ29ubmVjdGlvbgogIHN0YXRpYyBlcXVhbChhLCBiKQogIHN0YXRpYyBnZXQgbGFzdCgpCiAgbWFrZVNlcSgpCiAgY29uc3RydWN0b3Ioc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYyA9ICdub25lJykKICBsb2coLi4uYXJncykKICBlcnJvcihtZXNzYWdlKQogIGNsb3NlKC4uLmFyZ3MpCiAgb25tZXNzYWdlKG1zZykKICBwcm9jZXNzTWVzc2FnZShkYXRhKQogIG9uY29ubmVjdCguLi5hcmdzKQogIG9ucG9uZyhkYXRhKQogIG9uZXJyb3IoZXJyb3IpCiAgb25jbG9zZShyZWFzb24pCiAgY2xlYW51cCgpCiAgc2VuZE1lc3NhZ2Uob2JqKQogIHNlbmRDb21tYW5kKGNvbW1hbmQsIHBhcmFtcyA9IHt9KQogIHN0YXRpYyBnZXRDYWxsYmFja3MoaW5zdGFuY2UsIHZlcmJvc2l0eSA9IDApCiAgb25Db25uZWN0KHNvY2spCiAgb25PcGVuKHNvY2spCiAgb25NZXNzYWdlKHNvY2ssIG1zZykKICBvbkVycm9yKHNvY2ssIGVycm9yKQogIG9uQ2xvc2Uoc29jaywgd2h5KQogIG9uUG9uZyhzb2NrLCBkYXRhKQpDb25uZWN0aW9uClJQQ1NlcnZlckVuZHBvaW50KGNsYXNzZXMgPSB7fSkKICBuZXcoeyBjbGFzczogbmFtZSwgYXJncyA9IFtdIH0pCiAgbGlzdCgpClJQQ1NlcnZlcgogIG1ha2VJZCgpCiAgcHJvY2Vzc01lc3NhZ2UoZGF0YSkKUlBDU2VydmVyClJQQ0NsaWVudAogIHByb2Nlc3NNZXNzYWdlKHJlc3BvbnNlKQogIGNvbW1hbmQobmFtZSwgcGFyYW1zKQpSUENDbGllbnQKUlBDU29ja2V0KHVybCwgc2VydmljZSA9IFJQQ1NlcnZlciwgdmVyYm9zaXR5ID0gMSkKICBnZXQgZmQoKQogIGdldCBzb2NrZXQoKQogIHJlZ2lzdGVyKGN0b3IpCiAgbGlzdGVuKG5ld193cywgb3MgPSBnbG9iYWxUaGlzLm9zKQogIGNvbm5lY3QobmV3X3dzLCBvcyA9IGdsb2JhbFRoaXMub3MpCiAgZ2V0IGNvbm5lY3RlZCgpCiAgZ2V0IGxpc3QoKQogIGdldCBsYXN0KCkKUlBDU29ja2V0Ck1ha2VXZWJTb2NrZXQodXJsLCBjYWxsYmFja3MpCiAgaXNUaGVuYWJsZSh2YWx1ZSkKICBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKQogIGNhbGxIYW5kbGVyKG9iaiwgZXZlbnROYW1lLCAuLi5hcmdzKQogIHBhcnNlVVJMKHVybF9vcl9wb3J0KQogIHRvU3RyaW5nKCkKICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIHNldEhhbmRsZXJzKG9zLCBoYW5kbGVycykKICAub25GZCA9IChmZCwgcmVhZGFibGUsIHdyaXRhYmxlKQogIHN0YXR1c1Jlc3BvbnNlKHN1Y2Nlc3MsIHJlc3VsdF9vcl9lcnJvciwgZGF0YSkKICBvYmplY3RDb21tYW5kKGZuKQogIChkYXRhKQogIGdldFByb3RvdHlwZU5hbWUocHJvdG8pCkRlc2VyaWFsaXplRW50cmllcyhlKQpEZXNlcmlhbGl6ZUtleXMoZSkKRGVzZXJpYWxpemVNYXAoZSkKRGVzZXJpYWxpemVPYmplY3QoZSkKRm9yd2FyZE1ldGhvZHMoZSwgcmV0ID0ge30sIHRoaXNPYmopCkZvcndhcmRPYmplY3QoZSwgdGhpc09iaikKTWFrZUNvbW1hbmRGdW5jdGlvbihjbWQsIGdldENvbm5lY3Rpb24sIHRoaXNPYmosIHQpCiAgKHBhcmFtcyA9IHt9KQoocGFyYW1zID0ge30pClNlcmlhbGl6ZVZhbHVlKHZhbHVlLCBzb3VyY2UgPSBmYWxzZSkKRGVzZXJpYWxpemVTeW1ib2xzKG5hbWVzKQpEZXNlcmlhbGl6ZVZhbHVlKGRlc2MpAAAAAAAAAADBCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					690,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/net/rpc.js",
						"symkeys":
						[
							[
								414,
								446
							],
							[
								503,
								521
							],
							[
								573,
								591
							],
							[
								626,
								646
							],
							[
								695,
								714
							],
							[
								720,
								729
							],
							[
								740,
								754
							],
							[
								783,
								804
							],
							[
								870,
								901
							],
							[
								959,
								974
							],
							[
								1041,
								1070
							],
							[
								1480,
								1484
							],
							[
								1511,
								1522
							],
							[
								1598,
								1637
							],
							[
								1850,
								1873
							],
							[
								1884,
								1887
							],
							[
								1904,
								1931
							],
							[
								2074,
								2080
							],
							[
								2095,
								2101
							],
							[
								2130,
								2136
							],
							[
								2176,
								2231
							],
							[
								2241,
								2251
							],
							[
								2268,
								2292
							],
							[
								2568,
								2586
							],
							[
								2601,
								2619
							],
							[
								2648,
								2666
							],
							[
								2718,
								2845
							],
							[
								2848,
								2883
							],
							[
								2896,
								2908
							],
							[
								2996,
								3010
							],
							[
								3193,
								3208
							],
							[
								3336,
								3350
							],
							[
								3474,
								3492
							],
							[
								3607,
								3620
							],
							[
								3798,
								3828
							],
							[
								3847,
								3865
							],
							[
								3877,
								3892
							],
							[
								3904,
								3922
							],
							[
								4002,
								4020
							],
							[
								4065,
								4072
							],
							[
								4133,
								4139
							],
							[
								4181,
								4193
							],
							[
								4203,
								4215
							],
							[
								4232,
								4253
							],
							[
								4295,
								4307
							],
							[
								4364,
								4376
							],
							[
								4439,
								4473
							],
							[
								4513,
								4525
							],
							[
								4594,
								4606
							],
							[
								4668,
								4693
							],
							[
								4736,
								4748
							],
							[
								4771,
								4783
							],
							[
								4819,
								4838
							],
							[
								5047,
								5053
							],
							[
								5095,
								5100
							],
							[
								5123,
								5144
							],
							[
								5262,
								5297
							],
							[
								5413,
								5417
							],
							[
								5444,
								5453
							],
							[
								5506,
								5531
							],
							[
								5536,
								5564
							],
							[
								5794,
								5803
							],
							[
								5904,
								5914
							],
							[
								5944,
								5954
							],
							[
								6048,
								6058
							],
							[
								6144,
								6162
							],
							[
								6273,
								6290
							],
							[
								6327,
								6336
							],
							[
								6373,
								6423
							],
							[
								6540,
								6552
							],
							[
								6986,
								7000
							],
							[
								7223,
								7237
							],
							[
								7406,
								7420
							],
							[
								8012,
								8016
							],
							[
								8110,
								8130
							],
							[
								8236,
								8254
							],
							[
								8464,
								8476
							],
							[
								8528,
								8542
							],
							[
								8664,
								8679
							],
							[
								8803,
								8812
							],
							[
								8902,
								8918
							],
							[
								9290,
								9323
							],
							[
								9828,
								9872
							],
							[
								9980,
								9993
							],
							[
								10019,
								10025
							],
							[
								10110,
								10144
							],
							[
								10398,
								10409
							],
							[
								10467,
								10483
							],
							[
								10564,
								10579
							],
							[
								10899,
								10911
							],
							[
								11088,
								11108
							],
							[
								11214,
								11234
							],
							[
								11409,
								11427
							],
							[
								11552,
								11570
							],
							[
								11686,
								11696
							],
							[
								11773,
								11813
							],
							[
								11831,
								11862
							],
							[
								12192,
								12198
							],
							[
								12363,
								12383
							],
							[
								12479,
								12519
							],
							[
								12679,
								12688
							],
							[
								12718,
								12726
							],
							[
								12904,
								12944
							],
							[
								13005,
								13012
							],
							[
								13031,
								13038
							],
							[
								13107,
								13147
							],
							[
								13212,
								13219
							],
							[
								13297,
								13337
							],
							[
								13402,
								13409
							],
							[
								13449,
								13455
							],
							[
								13522,
								13526
							],
							[
								13581,
								13585
							],
							[
								13657,
								13688
							],
							[
								13951,
								13989
							],
							[
								14073,
								14082
							],
							[
								14558,
								14566
							],
							[
								14602,
								14622
							],
							[
								15203,
								15212
							],
							[
								15522,
								15531
							],
							[
								15931,
								15936
							],
							[
								15992,
								15997
							],
							[
								16096,
								16101
							],
							[
								16133,
								16157
							],
							[
								16410,
								16431
							],
							[
								16457,
								16476
							],
							[
								16506,
								16518
							],
							[
								16562,
								16567
							],
							[
								16641,
								16650
							],
							[
								16958,
								17018
							],
							[
								17595,
								17608
							],
							[
								17780,
								17788
							],
							[
								17906,
								17918
							],
							[
								18249,
								18263
							],
							[
								18483,
								18517
							],
							[
								18816,
								18821
							],
							[
								18916,
								18957
							],
							[
								19251,
								19266
							],
							[
								19727,
								19737
							],
							[
								19774,
								19784
							],
							[
								19853,
								19862
							],
							[
								19920,
								19958
							],
							[
								20091,
								20109
							],
							[
								20139,
								20154
							],
							[
								20181,
								20200
							],
							[
								20235,
								20254
							],
							[
								20289,
								20306
							],
							[
								20339,
								20359
							],
							[
								20451,
								20478
							],
							[
								20577,
								20613
							],
							[
								20771,
								20817
							],
							[
								20916,
								20947
							],
							[
								21504,
								21514
							],
							[
								21648,
								21700
							],
							[
								21719,
								21774
							],
							[
								22093,
								22164
							],
							[
								22226,
								22233
							],
							[
								22324,
								22331
							],
							[
								22418,
								22500
							],
							[
								23042,
								23072
							],
							[
								23440,
								23475
							],
							[
								23488,
								23528
							],
							[
								23707,
								23763
							],
							[
								23992,
								24019
							],
							[
								24030,
								24045
							],
							[
								24058,
								24088
							],
							[
								24345,
								24441
							],
							[
								24467,
								24485
							],
							[
								24733,
								24751
							],
							[
								24854,
								24867
							],
							[
								25451,
								25484
							],
							[
								25553,
								25583
							],
							[
								25622,
								25626
							],
							[
								25713,
								25740
							],
							[
								25779,
								25787
							],
							[
								25867,
								25893
							],
							[
								25939,
								25968
							],
							[
								26025,
								26070
							],
							[
								26170,
								26175
							],
							[
								26275,
								26309
							],
							[
								26426,
								26486
							],
							[
								26701,
								26723
							],
							[
								26889,
								26911
							],
							[
								27009,
								27029
							],
							[
								27061,
								27066
							],
							[
								27195,
								27222
							],
							[
								27454,
								27501
							],
							[
								28319,
								28354
							],
							[
								28376,
								28380
							],
							[
								28412,
								28416
							],
							[
								28438,
								28470
							],
							[
								28604,
								28646
							],
							[
								28699,
								28740
							]
						],
						"symlist":
						[
							".LogWrap = function LogWrap(log)",
							"log = (...args) =>",
							"log = (...args) =>",
							" (value, ...args) =>",
							"VfnAdapter = vfn =>",
							"get: k =>",
							"set: (k, v) =>",
							"VfnDecorator = vfn =>",
							".memoize = function memoize(fn)",
							"(key, value) =>",
							"self = function(key, ...args)",
							"n =>",
							"(acc, n) =>",
							".GetClasses = function* GetClasses(obj)",
							" function Mapper(map = ",
							"())",
							"self = function(key, value)",
							"Mapper",
							"Mapper",
							"Mapper",
							" function DefaultConstructor(mapper, fn = (...args) => ",
							"(...args))",
							"self = function(...args)",
							"DefaultConstructor",
							"DefaultConstructor",
							"DefaultConstructor",
							" function EventLogger(instance = {}, callback = (name, event, thisObj) => console.log('EventLogger', { name, event, thisObj }))",
							" function WrapEvent(handler, name)",
							" function(e)",
							"get(obj, prop)",
							"MessageReceiver",
							"onmessage(msg)",
							"MessageTransmitter",
							"sendMessage()",
							" function MessageTransceiver()",
							"MessageTransceiver",
							"MessageReceiver",
							"MessageTransmitter",
							"value: instance =>",
							"ctor =>",
							"none()",
							"encode: v =>",
							"decode: v =>",
							"json(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".js = function js(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							".bjson = function bjson()",
							"encode: v =>",
							"decode: v =>",
							" function RPCApi(c)",
							"RPCApi",
							" o =>",
							" function RPCProxy(c)",
							" function RPCObject(id, connection)",
							"r =>",
							"RPCObject",
							" function RPCFactory(api)",
							"async function Factory(opts)",
							"RPCObject",
							"RPCFactory",
							"RPCFactory",
							"Connection",
							"static equal(a, b)",
							"static get last()",
							"makeSeq()",
							"constructor(socket, instance, log, codec = 'none')",
							"log(...args)",
							"error(message)",
							"close(...args)",
							"onmessage(msg)",
							"r =>",
							"processMessage(data)",
							"onconnect(...args)",
							"onpong(data)",
							"onerror(error)",
							"onclose(reason)",
							"cleanup()",
							"sendMessage(obj)",
							"sendCommand(command, params = {})",
							"static getCallbacks(instance, verbosity = 0)",
							" (...args) =>",
							" () =>",
							"handle = (sock, event, ...args) =>",
							"then: fn =>",
							"remove = sock =>",
							"onConnect(sock)",
							"onOpen(sock)",
							"onMessage(sock, msg)",
							"onError(sock, error)",
							"onClose(sock, why)",
							"onPong(sock, data)",
							"Connection",
							"function RPCServerEndpoint(classes = {})",
							"new({ class: name, args = [] })",
							"list()",
							"({ id }, respond) =>",
							"({ obj, method, args = [] }, respond) =>",
							"result =>",
							"error =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"({ obj, enumerable = true }, respond) =>",
							" obj =>",
							"sym =>",
							"v =>",
							"v =>",
							"({ obj, property }, respond) =>",
							"({ obj, property, value }, respond) =>",
							"RPCServer",
							"makeId()",
							"processMessage(data)",
							"RPCServer",
							"RPCClient",
							" e =>",
							" r =>",
							"() =>",
							"processMessage(response)",
							"command(name, params)",
							"(accept, reject) =>",
							" response =>",
							" e =>",
							"RPCClient",
							" function RPCSocket(url, service = RPCServer, verbosity = 1)",
							" (...args) =>",
							"get fd()",
							"get socket()",
							"register(ctor)",
							"listen(new_ws, os = globalThis.os)",
							"() =>",
							"async connect(new_ws, os = globalThis.os)",
							"get connected()",
							"get list()",
							"get last()",
							"RPCSocket",
							"function MakeWebSocket(url, callbacks)",
							".onconnect = () =>",
							".onopen = () =>",
							".onerror = error =>",
							".onmessage = msg =>",
							".onpong = pong =>",
							".onclose = reason =>",
							" function isThenable(value)",
							" function hasHandler(obj, eventName)",
							" function callHandler(obj, eventName, ...args)",
							" function parseURL(url_or_port)",
							"toString()",
							" function GetProperties(obj, method = obj => Object.",
							"(obj), pred = (obj, depth) => obj !== Object.prototype)",
							" function GetKeys(obj, pred = (obj, depth) => obj !== Object.prototype)",
							" obj =>",
							" obj =>",
							" function getPropertyDescriptors(obj, merge = true, pred = (proto, depth) => true)",
							" function define(obj, ...args)",
							" function setHandlers(os, handlers)",
							".onFd = function(fd, readable, writable)",
							" function statusResponse(success, result_or_error, data)",
							" function objectCommand(fn)",
							" function(data)",
							"respond = (success, result) =>",
							" function MakeListCommand(pred = v => typeof v != 'function', defaults = { maxDepth: Infinity })",
							"(data, respond) =>",
							" (proto, depth) =>",
							"(acc, key) =>",
							" function getPrototypeName(proto)",
							"function DeserializeEntries(e)",
							"a =>",
							"function DeserializeKeys(e)",
							"([k]) =>",
							"function DeserializeMap(e)",
							"function DeserializeObject(e)",
							"function ForwardMethods(e, ret = {}, thisObj)",
							" o =>",
							"function ForwardObject(e, thisObj)",
							"function MakeCommandFunction(cmd, getConnection, thisObj, t)",
							"getConnection = obj =>",
							" function(params = {})",
							"(resolve, reject) =>",
							" r =>",
							"async function(params = {})",
							" function SerializeValue(value, source = false)",
							" function DeserializeSymbols(names)",
							"n =>",
							"n =>",
							" function DeserializeValue(desc)",
							"RPCConnect = (url, service = RPCClient) =>",
							"RPCListen = (url, service = RPCServer) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADBCAAAICAuTG9nV3JhcCA9IExvZ1dyYXAobG9nKQogIC5tZW1vaXplID0gbWVtb2l6ZShmbikKICBzZWxmID0gKGtleSwgLi4uYXJncykKICAuR2V0Q2xhc3NlcyA9ICpHZXRDbGFzc2VzKG9iaikKTWFwcGVyKG1hcCA9IAogIHNlbGYgPSAoa2V5LCB2YWx1ZSkKTWFwcGVyCk1hcHBlcgpNYXBwZXIKICBzZWxmID0gKC4uLmFyZ3MpCkRlZmF1bHRDb25zdHJ1Y3RvcgpEZWZhdWx0Q29uc3RydWN0b3IKRGVmYXVsdENvbnN0cnVjdG9yCldyYXBFdmVudChoYW5kbGVyLCBuYW1lKQogIChlKQogIGdldChvYmosIHByb3ApCk1lc3NhZ2VSZWNlaXZlcgogIG9ubWVzc2FnZShtc2cpCk1lc3NhZ2VUcmFuc21pdHRlcgogIHNlbmRNZXNzYWdlKCkKTWVzc2FnZVRyYW5zY2VpdmVyKCkKTWVzc2FnZVRyYW5zY2VpdmVyCk1lc3NhZ2VSZWNlaXZlcgpNZXNzYWdlVHJhbnNtaXR0ZXIKICBub25lKCkKICBqc29uKHZlcmJvc2UgPSBmYWxzZSkKICAuanMgPSBqcyh2ZXJib3NlID0gZmFsc2UpCiAgLmJqc29uID0gYmpzb24oKQpSUENBcGkoYykKUlBDQXBpClJQQ1Byb3h5KGMpClJQQ09iamVjdChpZCwgY29ubmVjdGlvbikKUlBDT2JqZWN0ClJQQ0ZhY3RvcnkoYXBpKQpGYWN0b3J5KG9wdHMpClJQQ09iamVjdApSUENGYWN0b3J5ClJQQ0ZhY3RvcnkKQ29ubmVjdGlvbgogIHN0YXRpYyBlcXVhbChhLCBiKQogIHN0YXRpYyBnZXQgbGFzdCgpCiAgbWFrZVNlcSgpCiAgY29uc3RydWN0b3Ioc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYyA9ICdub25lJykKICBsb2coLi4uYXJncykKICBlcnJvcihtZXNzYWdlKQogIGNsb3NlKC4uLmFyZ3MpCiAgb25tZXNzYWdlKG1zZykKICBwcm9jZXNzTWVzc2FnZShkYXRhKQogIG9uY29ubmVjdCguLi5hcmdzKQogIG9ucG9uZyhkYXRhKQogIG9uZXJyb3IoZXJyb3IpCiAgb25jbG9zZShyZWFzb24pCiAgY2xlYW51cCgpCiAgc2VuZE1lc3NhZ2Uob2JqKQogIHNlbmRDb21tYW5kKGNvbW1hbmQsIHBhcmFtcyA9IHt9KQogIHN0YXRpYyBnZXRDYWxsYmFja3MoaW5zdGFuY2UsIHZlcmJvc2l0eSA9IDApCiAgb25Db25uZWN0KHNvY2spCiAgb25PcGVuKHNvY2spCiAgb25NZXNzYWdlKHNvY2ssIG1zZykKICBvbkVycm9yKHNvY2ssIGVycm9yKQogIG9uQ2xvc2Uoc29jaywgd2h5KQogIG9uUG9uZyhzb2NrLCBkYXRhKQpDb25uZWN0aW9uClJQQ1NlcnZlckVuZHBvaW50KGNsYXNzZXMgPSB7fSkKICBuZXcoeyBjbGFzczogbmFtZSwgYXJncyA9IFtdIH0pCiAgbGlzdCgpClJQQ1NlcnZlcgogIG1ha2VJZCgpCiAgcHJvY2Vzc01lc3NhZ2UoZGF0YSkKUlBDU2VydmVyClJQQ0NsaWVudAogIHByb2Nlc3NNZXNzYWdlKHJlc3BvbnNlKQogIGNvbW1hbmQobmFtZSwgcGFyYW1zKQpSUENDbGllbnQKUlBDU29ja2V0KHVybCwgc2VydmljZSA9IFJQQ1NlcnZlciwgdmVyYm9zaXR5ID0gMSkKICBnZXQgZmQoKQogIGdldCBzb2NrZXQoKQogIHJlZ2lzdGVyKGN0b3IpCiAgbGlzdGVuKG5ld193cywgb3MgPSBnbG9iYWxUaGlzLm9zKQogIGNvbm5lY3QobmV3X3dzLCBvcyA9IGdsb2JhbFRoaXMub3MpCiAgZ2V0IGNvbm5lY3RlZCgpCiAgZ2V0IGxpc3QoKQogIGdldCBsYXN0KCkKUlBDU29ja2V0Ck1ha2VXZWJTb2NrZXQodXJsLCBjYWxsYmFja3MpCiAgaXNUaGVuYWJsZSh2YWx1ZSkKICBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKQogIGNhbGxIYW5kbGVyKG9iaiwgZXZlbnROYW1lLCAuLi5hcmdzKQogIHBhcnNlVVJMKHVybF9vcl9wb3J0KQogIHRvU3RyaW5nKCkKICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIHNldEhhbmRsZXJzKG9zLCBoYW5kbGVycykKICAub25GZCA9IChmZCwgcmVhZGFibGUsIHdyaXRhYmxlKQogIHN0YXR1c1Jlc3BvbnNlKHN1Y2Nlc3MsIHJlc3VsdF9vcl9lcnJvciwgZGF0YSkKICBvYmplY3RDb21tYW5kKGZuKQogIChkYXRhKQogIGdldFByb3RvdHlwZU5hbWUocHJvdG8pCkRlc2VyaWFsaXplRW50cmllcyhlKQpEZXNlcmlhbGl6ZUtleXMoZSkKRGVzZXJpYWxpemVNYXAoZSkKRGVzZXJpYWxpemVPYmplY3QoZSkKRm9yd2FyZE1ldGhvZHMoZSwgcmV0ID0ge30sIHRoaXNPYmopCkZvcndhcmRPYmplY3QoZSwgdGhpc09iaikKTWFrZUNvbW1hbmRGdW5jdGlvbihjbWQsIGdldENvbm5lY3Rpb24sIHRoaXNPYmosIHQpCiAgKHBhcmFtcyA9IHt9KQoocGFyYW1zID0ge30pClNlcmlhbGl6ZVZhbHVlKHZhbHVlLCBzb3VyY2UgPSBmYWxzZSkKRGVzZXJpYWxpemVTeW1ib2xzKG5hbWVzKQpEZXNlcmlhbGl6ZVZhbHVlKGRlc2MpAAAAAAAAAADBCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwQgAACAgLkxvZ1dyYXAgPSBMb2dXcmFwKGxvZykKICAubWVtb2l6ZSA9IG1lbW9pemUoZm4pCiAgc2VsZiA9IChrZXksIC4uLmFyZ3MpCiAgLkdldENsYXNzZXMgPSAqR2V0Q2xhc3NlcyhvYmopCk1hcHBlcihtYXAgPSAKICBzZWxmID0gKGtleSwgdmFsdWUpCk1hcHBlcgpNYXBwZXIKTWFwcGVyCiAgc2VsZiA9ICguLi5hcmdzKQpEZWZhdWx0Q29uc3RydWN0b3IKRGVmYXVsdENvbnN0cnVjdG9yCkRlZmF1bHRDb25zdHJ1Y3RvcgpXcmFwRXZlbnQoaGFuZGxlciwgbmFtZSkKICAoZSkKICBnZXQob2JqLCBwcm9wKQpNZXNzYWdlUmVjZWl2ZXIKICBvbm1lc3NhZ2UobXNnKQpNZXNzYWdlVHJhbnNtaXR0ZXIKICBzZW5kTWVzc2FnZSgpCk1lc3NhZ2VUcmFuc2NlaXZlcigpCk1lc3NhZ2VUcmFuc2NlaXZlcgpNZXNzYWdlUmVjZWl2ZXIKTWVzc2FnZVRyYW5zbWl0dGVyCiAgbm9uZSgpCiAganNvbih2ZXJib3NlID0gZmFsc2UpCiAgLmpzID0ganModmVyYm9zZSA9IGZhbHNlKQogIC5ianNvbiA9IGJqc29uKCkKUlBDQXBpKGMpClJQQ0FwaQpSUENQcm94eShjKQpSUENPYmplY3QoaWQsIGNvbm5lY3Rpb24pClJQQ09iamVjdApSUENGYWN0b3J5KGFwaSkKRmFjdG9yeShvcHRzKQpSUENPYmplY3QKUlBDRmFjdG9yeQpSUENGYWN0b3J5CkNvbm5lY3Rpb24KICBzdGF0aWMgZXF1YWwoYSwgYikKICBzdGF0aWMgZ2V0IGxhc3QoKQogIG1ha2VTZXEoKQogIGNvbnN0cnVjdG9yKHNvY2tldCwgaW5zdGFuY2UsIGxvZywgY29kZWMgPSAnbm9uZScpCiAgbG9nKC4uLmFyZ3MpCiAgZXJyb3IobWVzc2FnZSkKICBjbG9zZSguLi5hcmdzKQogIG9ubWVzc2FnZShtc2cpCiAgcHJvY2Vzc01lc3NhZ2UoZGF0YSkKICBvbmNvbm5lY3QoLi4uYXJncykKICBvbnBvbmcoZGF0YSkKICBvbmVycm9yKGVycm9yKQogIG9uY2xvc2UocmVhc29uKQogIGNsZWFudXAoKQogIHNlbmRNZXNzYWdlKG9iaikKICBzZW5kQ29tbWFuZChjb21tYW5kLCBwYXJhbXMgPSB7fSkKICBzdGF0aWMgZ2V0Q2FsbGJhY2tzKGluc3RhbmNlLCB2ZXJib3NpdHkgPSAwKQogIG9uQ29ubmVjdChzb2NrKQogIG9uT3Blbihzb2NrKQogIG9uTWVzc2FnZShzb2NrLCBtc2cpCiAgb25FcnJvcihzb2NrLCBlcnJvcikKICBvbkNsb3NlKHNvY2ssIHdoeSkKICBvblBvbmcoc29jaywgZGF0YSkKQ29ubmVjdGlvbgpSUENTZXJ2ZXJFbmRwb2ludChjbGFzc2VzID0ge30pCiAgbmV3KHsgY2xhc3M6IG5hbWUsIGFyZ3MgPSBbXSB9KQogIGxpc3QoKQpSUENTZXJ2ZXIKICBtYWtlSWQoKQogIHByb2Nlc3NNZXNzYWdlKGRhdGEpClJQQ1NlcnZlcgpSUENDbGllbnQKICBwcm9jZXNzTWVzc2FnZShyZXNwb25zZSkKICBjb21tYW5kKG5hbWUsIHBhcmFtcykKUlBDQ2xpZW50ClJQQ1NvY2tldCh1cmwsIHNlcnZpY2UgPSBSUENTZXJ2ZXIsIHZlcmJvc2l0eSA9IDEpCiAgZ2V0IGZkKCkKICBnZXQgc29ja2V0KCkKICByZWdpc3RlcihjdG9yKQogIGxpc3RlbihuZXdfd3MsIG9zID0gZ2xvYmFsVGhpcy5vcykKICBjb25uZWN0KG5ld193cywgb3MgPSBnbG9iYWxUaGlzLm9zKQogIGdldCBjb25uZWN0ZWQoKQogIGdldCBsaXN0KCkKICBnZXQgbGFzdCgpClJQQ1NvY2tldApNYWtlV2ViU29ja2V0KHVybCwgY2FsbGJhY2tzKQogIGlzVGhlbmFibGUodmFsdWUpCiAgaGFzSGFuZGxlcihvYmosIGV2ZW50TmFtZSkKICBjYWxsSGFuZGxlcihvYmosIGV2ZW50TmFtZSwgLi4uYXJncykKICBwYXJzZVVSTCh1cmxfb3JfcG9ydCkKICB0b1N0cmluZygpCiAgZGVmaW5lKG9iaiwgLi4uYXJncykKICBzZXRIYW5kbGVycyhvcywgaGFuZGxlcnMpCiAgLm9uRmQgPSAoZmQsIHJlYWRhYmxlLCB3cml0YWJsZSkKICBzdGF0dXNSZXNwb25zZShzdWNjZXNzLCByZXN1bHRfb3JfZXJyb3IsIGRhdGEpCiAgb2JqZWN0Q29tbWFuZChmbikKICAoZGF0YSkKICBnZXRQcm90b3R5cGVOYW1lKHByb3RvKQpEZXNlcmlhbGl6ZUVudHJpZXMoZSkKRGVzZXJpYWxpemVLZXlzKGUpCkRlc2VyaWFsaXplTWFwKGUpCkRlc2VyaWFsaXplT2JqZWN0KGUpCkZvcndhcmRNZXRob2RzKGUsIHJldCA9IHt9LCB0aGlzT2JqKQpGb3J3YXJkT2JqZWN0KGUsIHRoaXNPYmopCk1ha2VDb21tYW5kRnVuY3Rpb24oY21kLCBnZXRDb25uZWN0aW9uLCB0aGlzT2JqLCB0KQogIChwYXJhbXMgPSB7fSkKKHBhcmFtcyA9IHt9KQpTZXJpYWxpemVWYWx1ZSh2YWx1ZSwgc291cmNlID0gZmFsc2UpCkRlc2VyaWFsaXplU3ltYm9scyhuYW1lcykKRGVzZXJpYWxpemVWYWx1ZShkZXNjKQAAAAAAAAAAwQgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					691,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/minnet-quickjs/minnet.c",
						"symkeys":
						[
							[
								359,
								373
							],
							[
								403,
								417
							],
							[
								600,
								616
							],
							[
								1645,
								1665
							],
							[
								1937,
								1944
							],
							[
								2318,
								2332
							],
							[
								2699,
								2711
							],
							[
								7073,
								7082
							],
							[
								7297,
								7312
							],
							[
								7473,
								7476
							],
							[
								7512,
								7522
							],
							[
								8946,
								8958
							],
							[
								9552,
								9567
							],
							[
								10032,
								10048
							],
							[
								10467,
								10478
							],
							[
								12033,
								12043
							],
							[
								12235,
								12249
							],
							[
								14913,
								14930
							]
						],
						"symlist":
						[
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							"—Ⓕ– lws_log_callback ( ) { … } — function",
							"—Ⓕ– minnet_lws_unhandled ( ) { … } — function",
							"—Ⓕ– set_log ( ) { … } — function",
							"—Ⓕ– minnet_set_log ( ) { … } — function",
							"—Ⓕ– minnet_fetch ( ) { … } — function",
							"—Ⓕ– io_events ( ) { … } — function",
							"—Ⓕ– io_parse_events ( ) { … } — function",
							" Ⓜ  PIO … — macro object",
							"—Ⓕ– io_handler ( ) { … } — function",
							"—Ⓕ– make_handler ( ) { … } — function",
							"—Ⓕ– minnet_handlers ( ) { … } — function",
							"—Ⓕ– minnet_emit_this ( ) { … } — function",
							"—Ⓕ– minnet_emit ( ) { … } — function",
							"—Ⓕ– value_dump ( ) { … } — function",
							"—Ⓕ– js_minnet_init ( ) { … } — function",
							"—Ⓕ– lws_callback_name ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADBCAAAICAuTG9nV3JhcCA9IExvZ1dyYXAobG9nKQogIC5tZW1vaXplID0gbWVtb2l6ZShmbikKICBzZWxmID0gKGtleSwgLi4uYXJncykKICAuR2V0Q2xhc3NlcyA9ICpHZXRDbGFzc2VzKG9iaikKTWFwcGVyKG1hcCA9IAogIHNlbGYgPSAoa2V5LCB2YWx1ZSkKTWFwcGVyCk1hcHBlcgpNYXBwZXIKICBzZWxmID0gKC4uLmFyZ3MpCkRlZmF1bHRDb25zdHJ1Y3RvcgpEZWZhdWx0Q29uc3RydWN0b3IKRGVmYXVsdENvbnN0cnVjdG9yCldyYXBFdmVudChoYW5kbGVyLCBuYW1lKQogIChlKQogIGdldChvYmosIHByb3ApCk1lc3NhZ2VSZWNlaXZlcgogIG9ubWVzc2FnZShtc2cpCk1lc3NhZ2VUcmFuc21pdHRlcgogIHNlbmRNZXNzYWdlKCkKTWVzc2FnZVRyYW5zY2VpdmVyKCkKTWVzc2FnZVRyYW5zY2VpdmVyCk1lc3NhZ2VSZWNlaXZlcgpNZXNzYWdlVHJhbnNtaXR0ZXIKICBub25lKCkKICBqc29uKHZlcmJvc2UgPSBmYWxzZSkKICAuanMgPSBqcyh2ZXJib3NlID0gZmFsc2UpCiAgLmJqc29uID0gYmpzb24oKQpSUENBcGkoYykKUlBDQXBpClJQQ1Byb3h5KGMpClJQQ09iamVjdChpZCwgY29ubmVjdGlvbikKUlBDT2JqZWN0ClJQQ0ZhY3RvcnkoYXBpKQpGYWN0b3J5KG9wdHMpClJQQ09iamVjdApSUENGYWN0b3J5ClJQQ0ZhY3RvcnkKQ29ubmVjdGlvbgogIHN0YXRpYyBlcXVhbChhLCBiKQogIHN0YXRpYyBnZXQgbGFzdCgpCiAgbWFrZVNlcSgpCiAgY29uc3RydWN0b3Ioc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYyA9ICdub25lJykKICBsb2coLi4uYXJncykKICBlcnJvcihtZXNzYWdlKQogIGNsb3NlKC4uLmFyZ3MpCiAgb25tZXNzYWdlKG1zZykKICBwcm9jZXNzTWVzc2FnZShkYXRhKQogIG9uY29ubmVjdCguLi5hcmdzKQogIG9ucG9uZyhkYXRhKQogIG9uZXJyb3IoZXJyb3IpCiAgb25jbG9zZShyZWFzb24pCiAgY2xlYW51cCgpCiAgc2VuZE1lc3NhZ2Uob2JqKQogIHNlbmRDb21tYW5kKGNvbW1hbmQsIHBhcmFtcyA9IHt9KQogIHN0YXRpYyBnZXRDYWxsYmFja3MoaW5zdGFuY2UsIHZlcmJvc2l0eSA9IDApCiAgb25Db25uZWN0KHNvY2spCiAgb25PcGVuKHNvY2spCiAgb25NZXNzYWdlKHNvY2ssIG1zZykKICBvbkVycm9yKHNvY2ssIGVycm9yKQogIG9uQ2xvc2Uoc29jaywgd2h5KQogIG9uUG9uZyhzb2NrLCBkYXRhKQpDb25uZWN0aW9uClJQQ1NlcnZlckVuZHBvaW50KGNsYXNzZXMgPSB7fSkKICBuZXcoeyBjbGFzczogbmFtZSwgYXJncyA9IFtdIH0pCiAgbGlzdCgpClJQQ1NlcnZlcgogIG1ha2VJZCgpCiAgcHJvY2Vzc01lc3NhZ2UoZGF0YSkKUlBDU2VydmVyClJQQ0NsaWVudAogIHByb2Nlc3NNZXNzYWdlKHJlc3BvbnNlKQogIGNvbW1hbmQobmFtZSwgcGFyYW1zKQpSUENDbGllbnQKUlBDU29ja2V0KHVybCwgc2VydmljZSA9IFJQQ1NlcnZlciwgdmVyYm9zaXR5ID0gMSkKICBnZXQgZmQoKQogIGdldCBzb2NrZXQoKQogIHJlZ2lzdGVyKGN0b3IpCiAgbGlzdGVuKG5ld193cywgb3MgPSBnbG9iYWxUaGlzLm9zKQogIGNvbm5lY3QobmV3X3dzLCBvcyA9IGdsb2JhbFRoaXMub3MpCiAgZ2V0IGNvbm5lY3RlZCgpCiAgZ2V0IGxpc3QoKQogIGdldCBsYXN0KCkKUlBDU29ja2V0Ck1ha2VXZWJTb2NrZXQodXJsLCBjYWxsYmFja3MpCiAgaXNUaGVuYWJsZSh2YWx1ZSkKICBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKQogIGNhbGxIYW5kbGVyKG9iaiwgZXZlbnROYW1lLCAuLi5hcmdzKQogIHBhcnNlVVJMKHVybF9vcl9wb3J0KQogIHRvU3RyaW5nKCkKICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIHNldEhhbmRsZXJzKG9zLCBoYW5kbGVycykKICAub25GZCA9IChmZCwgcmVhZGFibGUsIHdyaXRhYmxlKQogIHN0YXR1c1Jlc3BvbnNlKHN1Y2Nlc3MsIHJlc3VsdF9vcl9lcnJvciwgZGF0YSkKICBvYmplY3RDb21tYW5kKGZuKQogIChkYXRhKQogIGdldFByb3RvdHlwZU5hbWUocHJvdG8pCkRlc2VyaWFsaXplRW50cmllcyhlKQpEZXNlcmlhbGl6ZUtleXMoZSkKRGVzZXJpYWxpemVNYXAoZSkKRGVzZXJpYWxpemVPYmplY3QoZSkKRm9yd2FyZE1ldGhvZHMoZSwgcmV0ID0ge30sIHRoaXNPYmopCkZvcndhcmRPYmplY3QoZSwgdGhpc09iaikKTWFrZUNvbW1hbmRGdW5jdGlvbihjbWQsIGdldENvbm5lY3Rpb24sIHRoaXNPYmosIHQpCiAgKHBhcmFtcyA9IHt9KQoocGFyYW1zID0ge30pClNlcmlhbGl6ZVZhbHVlKHZhbHVlLCBzb3VyY2UgPSBmYWxzZSkKRGVzZXJpYWxpemVTeW1ib2xzKG5hbWVzKQpEZXNlcmlhbGl6ZVZhbHVlKGRlc2MpAAAAAAAAAAA3AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					697,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/minnet-quickjs/minnet-response.c",
						"symkeys":
						[
							[
								428,
								438
							],
							[
								705,
								716
							],
							[
								849,
								862
							],
							[
								1152,
								1165
							],
							[
								1271,
								1284
							],
							[
								1551,
								1564
							],
							[
								1938,
								1950
							],
							[
								2138,
								2157
							],
							[
								2451,
								2471
							],
							[
								2721,
								2743
							],
							[
								3084,
								3104
							],
							[
								3403,
								3423
							],
							[
								3722,
								3744
							],
							[
								4363,
								4382
							],
							[
								5443,
								5462
							],
							[
								6464,
								6491
							],
							[
								8002,
								8027
							]
						],
						"symlist":
						[
							"—Ⓕ– header_new ( ) { … } — function",
							"—Ⓕ– header_free ( ) { … } — function",
							"—Ⓕ– response_dump ( ) { … } — function",
							"—Ⓕ– response_zero ( ) { … } — function",
							"—Ⓕ– response_init ( ) { … } — function",
							"—Ⓕ– response_free ( ) { … } — function",
							"—Ⓕ– response_new ( ) { … } — function",
							"—Ⓕ– minnet_response_new ( ) { … } — function",
							"—Ⓕ– minnet_response_wrap ( ) { … } — function",
							"—Ⓕ– minnet_response_buffer ( ) { … } — function",
							"—Ⓕ– minnet_response_json ( ) { … } — function",
							"—Ⓕ– minnet_response_text ( ) { … } — function",
							"—Ⓕ– minnet_response_header ( ) { … } — function",
							"—Ⓕ– minnet_response_get ( ) { … } — function",
							"—Ⓕ– minnet_response_set ( ) { … } — function",
							"—Ⓕ– minnet_response_constructor ( ) { … } — function",
							"—Ⓕ– minnet_response_finalizer ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADfAgAAICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgbHdzX2xvZ19jYWxsYmFjayAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfbHdzX3VuaGFuZGxlZCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBzZXRfbG9nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9zZXRfbG9nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9mZXRjaCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpb19ldmVudHMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW9fcGFyc2VfZXZlbnRzICggKSB7IOKApiB9IOKAlCAKICDik4IgIFBJTyDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgaW9faGFuZGxlciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtYWtlX2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2hhbmRsZXJzICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9lbWl0X3RoaXMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2VtaXQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgdmFsdWVfZHVtcCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taW5uZXRfaW5pdCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBsd3NfY2FsbGJhY2tfbmFtZSAoICkgeyDigKYgfSDigJQgAAAAAAAAAABbAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAAQAAAAAAAMsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					702,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/minnet-quickjs/minnet.c",
						"symkeys":
						[
							[
								359,
								373
							],
							[
								403,
								417
							],
							[
								600,
								616
							],
							[
								1645,
								1665
							],
							[
								1937,
								1944
							],
							[
								2318,
								2332
							],
							[
								2699,
								2711
							],
							[
								7073,
								7082
							],
							[
								7297,
								7312
							],
							[
								7473,
								7476
							],
							[
								7512,
								7522
							],
							[
								8946,
								8958
							],
							[
								9552,
								9567
							],
							[
								10032,
								10048
							],
							[
								10467,
								10478
							],
							[
								12033,
								12043
							],
							[
								12235,
								12249
							],
							[
								14913,
								14930
							]
						],
						"symlist":
						[
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							"—Ⓕ– lws_log_callback ( ) { … } — function",
							"—Ⓕ– minnet_lws_unhandled ( ) { … } — function",
							"—Ⓕ– set_log ( ) { … } — function",
							"—Ⓕ– minnet_set_log ( ) { … } — function",
							"—Ⓕ– minnet_fetch ( ) { … } — function",
							"—Ⓕ– io_events ( ) { … } — function",
							"—Ⓕ– io_parse_events ( ) { … } — function",
							" Ⓜ  PIO … — macro object",
							"—Ⓕ– io_handler ( ) { … } — function",
							"—Ⓕ– make_handler ( ) { … } — function",
							"—Ⓕ– minnet_handlers ( ) { … } — function",
							"—Ⓕ– minnet_emit_this ( ) { … } — function",
							"—Ⓕ– minnet_emit ( ) { … } — function",
							"—Ⓕ– value_dump ( ) { … } — function",
							"—Ⓕ– js_minnet_init ( ) { … } — function",
							"—Ⓕ– lws_callback_name ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAFAwAA4oCU4pK74oCTIGhlYWRlcl9uZXcgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaGVhZGVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgcmVzcG9uc2VfZHVtcCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyByZXNwb25zZV96ZXJvICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIHJlc3BvbnNlX2luaXQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgcmVzcG9uc2VfZnJlZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyByZXNwb25zZV9uZXcgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3Jlc3BvbnNlX25ldyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfcmVzcG9uc2Vfd3JhcCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfcmVzcG9uc2VfYnVmZmVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9yZXNwb25zZV9qc29uICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9yZXNwb25zZV90ZXh0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9yZXNwb25zZV9oZWFkZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3Jlc3BvbnNlX2dldCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfcmVzcG9uc2Vfc2V0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9yZXNwb25zZV9jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfcmVzcG9uc2VfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCAAAAAAAAAAADcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbAgAAAAAAABsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					703,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/minnet-quickjs/minnet-response.c",
						"symkeys":
						[
							[
								428,
								438
							],
							[
								705,
								716
							],
							[
								849,
								862
							],
							[
								1152,
								1165
							],
							[
								1271,
								1284
							],
							[
								1551,
								1564
							],
							[
								1938,
								1950
							],
							[
								2138,
								2157
							],
							[
								2451,
								2471
							],
							[
								2721,
								2743
							],
							[
								3084,
								3104
							],
							[
								3403,
								3423
							],
							[
								3722,
								3744
							],
							[
								4363,
								4382
							],
							[
								5443,
								5462
							],
							[
								6464,
								6491
							],
							[
								8002,
								8027
							]
						],
						"symlist":
						[
							"—Ⓕ– header_new ( ) { … } — function",
							"—Ⓕ– header_free ( ) { … } — function",
							"—Ⓕ– response_dump ( ) { … } — function",
							"—Ⓕ– response_zero ( ) { … } — function",
							"—Ⓕ– response_init ( ) { … } — function",
							"—Ⓕ– response_free ( ) { … } — function",
							"—Ⓕ– response_new ( ) { … } — function",
							"—Ⓕ– minnet_response_new ( ) { … } — function",
							"—Ⓕ– minnet_response_wrap ( ) { … } — function",
							"—Ⓕ– minnet_response_buffer ( ) { … } — function",
							"—Ⓕ– minnet_response_json ( ) { … } — function",
							"—Ⓕ– minnet_response_text ( ) { … } — function",
							"—Ⓕ– minnet_response_header ( ) { … } — function",
							"—Ⓕ– minnet_response_get ( ) { … } — function",
							"—Ⓕ– minnet_response_set ( ) { … } — function",
							"—Ⓕ– minnet_response_constructor ( ) { … } — function",
							"—Ⓕ– minnet_response_finalizer ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADfAgAAICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgbHdzX2xvZ19jYWxsYmFjayAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfbHdzX3VuaGFuZGxlZCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBzZXRfbG9nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9zZXRfbG9nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9mZXRjaCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpb19ldmVudHMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW9fcGFyc2VfZXZlbnRzICggKSB7IOKApiB9IOKAlCAKICDik4IgIFBJTyDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgaW9faGFuZGxlciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtYWtlX2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2hhbmRsZXJzICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9lbWl0X3RoaXMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2VtaXQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgdmFsdWVfZHVtcCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taW5uZXRfaW5pdCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBsd3NfY2FsbGJhY2tfbmFtZSAoICkgeyDigKYgfSDigJQgAAAAAAAAAABbAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					706,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/minnet-quickjs/minnet-websocket.c",
						"symkeys":
						[
							[
								310,
								330
							],
							[
								392,
								405
							],
							[
								1135,
								1153
							],
							[
								1376,
								1389
							],
							[
								1534,
								1550
							],
							[
								1958,
								1972
							],
							[
								2193,
								2210
							],
							[
								2833,
								2847
							],
							[
								3807,
								3824
							],
							[
								5505,
								5519
							],
							[
								6180,
								6194
							],
							[
								6855,
								6870
							],
							[
								7640,
								7656
							],
							[
								8841,
								8860
							]
						],
						"symlist":
						[
							"—Ⓒ– wsi_opaque_user_data { … } ; — type",
							"—Ⓕ– minnet_ws_new ( ) { … } — function",
							"—Ⓕ– minnet_ws_from_wsi ( ) { … } — function",
							"—Ⓕ– minnet_ws_get ( ) { … } — function",
							"—Ⓕ– minnet_ws_object ( ) { … } — function",
							"—Ⓕ– minnet_ws_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ws_sslcert ( ) { … } — function",
							"—Ⓕ– minnet_ws_send ( ) { … } — function",
							"—Ⓕ– minnet_ws_respond ( ) { … } — function",
							"—Ⓕ– minnet_ws_ping ( ) { … } — function",
							"—Ⓕ– minnet_ws_pong ( ) { … } — function",
							"—Ⓕ– minnet_ws_close ( ) { … } — function",
							"—Ⓕ– minnet_ws_getter ( ) { … } — function",
							"—Ⓕ– minnet_ws_finalizer ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAFAwAA4oCU4pK74oCTIGhlYWRlcl9uZXcgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaGVhZGVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgcmVzcG9uc2VfZHVtcCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyByZXNwb25zZV96ZXJvICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIHJlc3BvbnNlX2luaXQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgcmVzcG9uc2VfZnJlZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyByZXNwb25zZV9uZXcgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3Jlc3BvbnNlX25ldyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfcmVzcG9uc2Vfd3JhcCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfcmVzcG9uc2VfYnVmZmVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9yZXNwb25zZV9qc29uICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9yZXNwb25zZV90ZXh0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9yZXNwb25zZV9oZWFkZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3Jlc3BvbnNlX2dldCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfcmVzcG9uc2Vfc2V0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9yZXNwb25zZV9jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfcmVzcG9uc2VfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCAAAAAAAAAAANkBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASAgAAAAAAABICAAAAAAAAAAAAAAAA8L8"
				],
				[
					709,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/minnet-quickjs/minnet-websocket.c",
						"symkeys":
						[
							[
								310,
								330
							],
							[
								392,
								405
							],
							[
								1135,
								1153
							],
							[
								1376,
								1389
							],
							[
								1534,
								1550
							],
							[
								1958,
								1972
							],
							[
								2193,
								2210
							],
							[
								2833,
								2847
							],
							[
								3807,
								3824
							],
							[
								5505,
								5519
							],
							[
								6180,
								6194
							],
							[
								6855,
								6870
							],
							[
								7640,
								7656
							],
							[
								8836,
								8857
							],
							[
								10376,
								10395
							]
						],
						"symlist":
						[
							"—Ⓒ– wsi_opaque_user_data { … } ; — type",
							"—Ⓕ– minnet_ws_new ( ) { … } — function",
							"—Ⓕ– minnet_ws_from_wsi ( ) { … } — function",
							"—Ⓕ– minnet_ws_get ( ) { … } — function",
							"—Ⓕ– minnet_ws_object ( ) { … } — function",
							"—Ⓕ– minnet_ws_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ws_sslcert ( ) { … } — function",
							"—Ⓕ– minnet_ws_send ( ) { … } — function",
							"—Ⓕ– minnet_ws_respond ( ) { … } — function",
							"—Ⓕ– minnet_ws_ping ( ) { … } — function",
							"—Ⓕ– minnet_ws_pong ( ) { … } — function",
							"—Ⓕ– minnet_ws_close ( ) { … } — function",
							"—Ⓕ– minnet_ws_getter ( ) { … } — function",
							"—Ⓕ– minnet_ws_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ws_finalizer ( ) { … } — function"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABlAgAA4oCU4pK44oCTIHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgbWlubmV0X3dzX25ldyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZnJvbV93c2kgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3dzX2dldCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3Nfb2JqZWN0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c193cmFwICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zc2xjZXJ0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zZW5kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19yZXNwb25kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19waW5nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19wb25nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jbG9zZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0dGVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJYCAADigJTikrjigJMgd3NpX29wYXF1ZV91c2VyX2RhdGEgeyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyBtaW5uZXRfd3NfbmV3ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19mcm9tX3dzaSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19vYmplY3QgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3dzX3dyYXAgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3dzX3NzbGNlcnQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3dzX3NlbmQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3dzX3Jlc3BvbmQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3dzX3BpbmcgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3dzX3BvbmcgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3dzX2Nsb3NlICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19nZXR0ZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3dzX2NvbnN0cnVjdG9yICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIAAAAAAAAAAAAAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbAQAAAAAAAJsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					710,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/minnet-quickjs/minnet-websocket.c",
						"symkeys":
						[
							[
								310,
								330
							],
							[
								392,
								405
							],
							[
								1135,
								1153
							],
							[
								1376,
								1389
							],
							[
								1534,
								1550
							],
							[
								1958,
								1972
							],
							[
								2193,
								2210
							],
							[
								2833,
								2847
							],
							[
								3807,
								3824
							],
							[
								5505,
								5519
							],
							[
								6180,
								6194
							],
							[
								6855,
								6870
							],
							[
								7640,
								7656
							],
							[
								8836,
								8857
							],
							[
								10374,
								10393
							]
						],
						"symlist":
						[
							"—Ⓒ– wsi_opaque_user_data { … } ; — type",
							"—Ⓕ– minnet_ws_new ( ) { … } — function",
							"—Ⓕ– minnet_ws_from_wsi ( ) { … } — function",
							"—Ⓕ– minnet_ws_get ( ) { … } — function",
							"—Ⓕ– minnet_ws_object ( ) { … } — function",
							"—Ⓕ– minnet_ws_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ws_sslcert ( ) { … } — function",
							"—Ⓕ– minnet_ws_send ( ) { … } — function",
							"—Ⓕ– minnet_ws_respond ( ) { … } — function",
							"—Ⓕ– minnet_ws_ping ( ) { … } — function",
							"—Ⓕ– minnet_ws_pong ( ) { … } — function",
							"—Ⓕ– minnet_ws_close ( ) { … } — function",
							"—Ⓕ– minnet_ws_getter ( ) { … } — function",
							"—Ⓕ– minnet_ws_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ws_finalizer ( ) { … } — function"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACWAgAA4oCU4pK44oCTIHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgbWlubmV0X3dzX25ldyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZnJvbV93c2kgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3dzX2dldCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3Nfb2JqZWN0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c193cmFwICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zc2xjZXJ0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zZW5kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19yZXNwb25kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19waW5nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19wb25nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jbG9zZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0dGVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACWAgAA4oCU4pK44oCTIHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgbWlubmV0X3dzX25ldyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZnJvbV93c2kgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3dzX2dldCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3Nfb2JqZWN0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c193cmFwICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zc2xjZXJ0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zZW5kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19yZXNwb25kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19waW5nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19wb25nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jbG9zZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0dGVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCAAAAAAAAAAAAACAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					711,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/minnet-quickjs/minnet-websocket.c",
						"symkeys":
						[
							[
								310,
								330
							],
							[
								392,
								405
							],
							[
								1135,
								1153
							],
							[
								1376,
								1389
							],
							[
								1534,
								1550
							],
							[
								1958,
								1972
							],
							[
								2193,
								2210
							],
							[
								2833,
								2847
							],
							[
								3807,
								3824
							],
							[
								5505,
								5519
							],
							[
								6180,
								6194
							],
							[
								6855,
								6870
							],
							[
								7640,
								7656
							],
							[
								8836,
								8857
							],
							[
								10373,
								10392
							]
						],
						"symlist":
						[
							"—Ⓒ– wsi_opaque_user_data { … } ; — type",
							"—Ⓕ– minnet_ws_new ( ) { … } — function",
							"—Ⓕ– minnet_ws_from_wsi ( ) { … } — function",
							"—Ⓕ– minnet_ws_get ( ) { … } — function",
							"—Ⓕ– minnet_ws_object ( ) { … } — function",
							"—Ⓕ– minnet_ws_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ws_sslcert ( ) { … } — function",
							"—Ⓕ– minnet_ws_send ( ) { … } — function",
							"—Ⓕ– minnet_ws_respond ( ) { … } — function",
							"—Ⓕ– minnet_ws_ping ( ) { … } — function",
							"—Ⓕ– minnet_ws_pong ( ) { … } — function",
							"—Ⓕ– minnet_ws_close ( ) { … } — function",
							"—Ⓕ– minnet_ws_getter ( ) { … } — function",
							"—Ⓕ– minnet_ws_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ws_finalizer ( ) { … } — function"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACWAgAA4oCU4pK44oCTIHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgbWlubmV0X3dzX25ldyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZnJvbV93c2kgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3dzX2dldCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3Nfb2JqZWN0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c193cmFwICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zc2xjZXJ0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zZW5kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19yZXNwb25kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19waW5nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19wb25nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jbG9zZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0dGVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACWAgAA4oCU4pK44oCTIHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgbWlubmV0X3dzX25ldyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZnJvbV93c2kgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3dzX2dldCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3Nfb2JqZWN0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c193cmFwICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zc2xjZXJ0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zZW5kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19yZXNwb25kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19waW5nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19wb25nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jbG9zZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0dGVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACWAgAA4oCU4pK44oCTIHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgbWlubmV0X3dzX25ldyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZnJvbV93c2kgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3dzX2dldCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3Nfb2JqZWN0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c193cmFwICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zc2xjZXJ0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zZW5kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19yZXNwb25kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19waW5nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19wb25nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jbG9zZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0dGVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCAAAAAAAAAAAAACAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					712,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/minnet-quickjs/minnet-websocket.c",
						"symkeys":
						[
							[
								310,
								330
							],
							[
								392,
								405
							],
							[
								1135,
								1153
							],
							[
								1376,
								1389
							],
							[
								1534,
								1550
							],
							[
								1958,
								1972
							],
							[
								2193,
								2210
							],
							[
								2833,
								2847
							],
							[
								3807,
								3824
							],
							[
								5505,
								5519
							],
							[
								6180,
								6194
							],
							[
								6855,
								6870
							],
							[
								7640,
								7656
							],
							[
								8837,
								8858
							],
							[
								10344,
								10363
							]
						],
						"symlist":
						[
							"—Ⓒ– wsi_opaque_user_data { … } ; — type",
							"—Ⓕ– minnet_ws_new ( ) { … } — function",
							"—Ⓕ– minnet_ws_from_wsi ( ) { … } — function",
							"—Ⓕ– minnet_ws_get ( ) { … } — function",
							"—Ⓕ– minnet_ws_object ( ) { … } — function",
							"—Ⓕ– minnet_ws_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ws_sslcert ( ) { … } — function",
							"—Ⓕ– minnet_ws_send ( ) { … } — function",
							"—Ⓕ– minnet_ws_respond ( ) { … } — function",
							"—Ⓕ– minnet_ws_ping ( ) { … } — function",
							"—Ⓕ– minnet_ws_pong ( ) { … } — function",
							"—Ⓕ– minnet_ws_close ( ) { … } — function",
							"—Ⓕ– minnet_ws_getter ( ) { … } — function",
							"—Ⓕ– minnet_ws_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ws_finalizer ( ) { … } — function"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACWAgAA4oCU4pK44oCTIHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgbWlubmV0X3dzX25ldyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZnJvbV93c2kgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3dzX2dldCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3Nfb2JqZWN0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c193cmFwICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zc2xjZXJ0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zZW5kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19yZXNwb25kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19waW5nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19wb25nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jbG9zZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0dGVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACWAgAA4oCU4pK44oCTIHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgbWlubmV0X3dzX25ldyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZnJvbV93c2kgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3dzX2dldCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3Nfb2JqZWN0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c193cmFwICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zc2xjZXJ0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zZW5kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19yZXNwb25kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19waW5nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19wb25nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jbG9zZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0dGVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCAAAAAAAAAAAAACAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					713,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/minnet-quickjs/minnet-websocket.c",
						"symkeys":
						[
							[
								310,
								330
							],
							[
								392,
								405
							],
							[
								1135,
								1153
							],
							[
								1376,
								1389
							],
							[
								1534,
								1550
							],
							[
								1958,
								1972
							],
							[
								2193,
								2210
							],
							[
								2833,
								2847
							],
							[
								3807,
								3824
							],
							[
								5505,
								5519
							],
							[
								6180,
								6194
							],
							[
								6855,
								6870
							],
							[
								7640,
								7656
							],
							[
								8837,
								8858
							],
							[
								9574,
								9593
							]
						],
						"symlist":
						[
							"—Ⓒ– wsi_opaque_user_data { … } ; — type",
							"—Ⓕ– minnet_ws_new ( ) { … } — function",
							"—Ⓕ– minnet_ws_from_wsi ( ) { … } — function",
							"—Ⓕ– minnet_ws_get ( ) { … } — function",
							"—Ⓕ– minnet_ws_object ( ) { … } — function",
							"—Ⓕ– minnet_ws_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ws_sslcert ( ) { … } — function",
							"—Ⓕ– minnet_ws_send ( ) { … } — function",
							"—Ⓕ– minnet_ws_respond ( ) { … } — function",
							"—Ⓕ– minnet_ws_ping ( ) { … } — function",
							"—Ⓕ– minnet_ws_pong ( ) { … } — function",
							"—Ⓕ– minnet_ws_close ( ) { … } — function",
							"—Ⓕ– minnet_ws_getter ( ) { … } — function",
							"—Ⓕ– minnet_ws_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ws_finalizer ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACWAgAA4oCU4pK44oCTIHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgbWlubmV0X3dzX25ldyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZnJvbV93c2kgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3dzX2dldCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3Nfb2JqZWN0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c193cmFwICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zc2xjZXJ0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zZW5kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19yZXNwb25kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19waW5nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19wb25nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jbG9zZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0dGVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCAAAAAAAAAAAAACAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					714,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/minnet-quickjs/minnet-websocket.h",
						"symkeys":
						[
							[
								279,
								294
							],
							[
								314,
								332
							],
							[
								364,
								377
							],
							[
								416,
								432
							],
							[
								471,
								485
							],
							[
								525,
								542
							],
							[
								979,
								993
							]
						],
						"symlist":
						[
							"MinnetWebsocket",
							"minnet_ws_from_wsi",
							"minnet_ws_get",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_data"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACWAgAA4oCU4pK44oCTIHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgbWlubmV0X3dzX25ldyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZnJvbV93c2kgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3dzX2dldCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3Nfb2JqZWN0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c193cmFwICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zc2xjZXJ0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zZW5kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19yZXNwb25kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19waW5nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19wb25nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jbG9zZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0dGVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCAAAAAAAAAAAH0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					715,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/minnet-quickjs/minnet-websocket.h",
						"symkeys":
						[
							[
								279,
								294
							],
							[
								314,
								332
							],
							[
								364,
								377
							],
							[
								425,
								441
							],
							[
								489,
								503
							],
							[
								555,
								572
							],
							[
								660,
								681
							],
							[
								1108,
								1122
							]
						],
						"symlist":
						[
							"MinnetWebsocket",
							"minnet_ws_from_wsi",
							"minnet_ws_get",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_constructor",
							"minnet_ws_data"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB9AAAATWlubmV0V2Vic29ja2V0CiAgbWlubmV0X3dzX2Zyb21fd3NpCiAgbWlubmV0X3dzX2dldAogIG1pbm5ldF93c19vYmplY3QKICBtaW5uZXRfd3Nfd3JhcAogIG1pbm5ldF93c19zc2xjZXJ0CiAgbWlubmV0X3dzX2RhdGEAAAAAAAAAAJUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACVAAAATWlubmV0V2Vic29ja2V0CiAgbWlubmV0X3dzX2Zyb21fd3NpCiAgbWlubmV0X3dzX2dldAogIG1pbm5ldF93c19vYmplY3QKICBtaW5uZXRfd3Nfd3JhcAogIG1pbm5ldF93c19zc2xjZXJ0CiAgbWlubmV0X3dzX2NvbnN0cnVjdG9yCiAgbWlubmV0X3dzX2RhdGEAAAAAAAAAAJUAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					716,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/minnet-quickjs/minnet-websocket.h",
						"symkeys":
						[
							[
								279,
								294
							],
							[
								314,
								332
							],
							[
								364,
								377
							],
							[
								425,
								441
							],
							[
								489,
								503
							],
							[
								555,
								572
							],
							[
								660,
								681
							],
							[
								1107,
								1121
							]
						],
						"symlist":
						[
							"MinnetWebsocket",
							"minnet_ws_from_wsi",
							"minnet_ws_get",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_constructor",
							"minnet_ws_data"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACVAAAATWlubmV0V2Vic29ja2V0CiAgbWlubmV0X3dzX2Zyb21fd3NpCiAgbWlubmV0X3dzX2dldAogIG1pbm5ldF93c19vYmplY3QKICBtaW5uZXRfd3Nfd3JhcAogIG1pbm5ldF93c19zc2xjZXJ0CiAgbWlubmV0X3dzX2NvbnN0cnVjdG9yCiAgbWlubmV0X3dzX2RhdGEAAAAAAAAAAJUAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					717,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/minnet-quickjs/minnet.c",
						"symkeys":
						[
							[
								359,
								373
							],
							[
								403,
								417
							],
							[
								600,
								616
							],
							[
								1645,
								1665
							],
							[
								1937,
								1944
							],
							[
								2318,
								2332
							],
							[
								2699,
								2711
							],
							[
								7073,
								7082
							],
							[
								7297,
								7312
							],
							[
								7473,
								7476
							],
							[
								7512,
								7522
							],
							[
								8946,
								8958
							],
							[
								9552,
								9567
							],
							[
								10032,
								10048
							],
							[
								10467,
								10478
							],
							[
								12033,
								12043
							],
							[
								12235,
								12249
							],
							[
								14913,
								14930
							]
						],
						"symlist":
						[
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							"—Ⓕ– lws_log_callback ( ) { … } — function",
							"—Ⓕ– minnet_lws_unhandled ( ) { … } — function",
							"—Ⓕ– set_log ( ) { … } — function",
							"—Ⓕ– minnet_set_log ( ) { … } — function",
							"—Ⓕ– minnet_fetch ( ) { … } — function",
							"—Ⓕ– io_events ( ) { … } — function",
							"—Ⓕ– io_parse_events ( ) { … } — function",
							" Ⓜ  PIO … — macro object",
							"—Ⓕ– io_handler ( ) { … } — function",
							"—Ⓕ– make_handler ( ) { … } — function",
							"—Ⓕ– minnet_handlers ( ) { … } — function",
							"—Ⓕ– minnet_emit_this ( ) { … } — function",
							"—Ⓕ– minnet_emit ( ) { … } — function",
							"—Ⓕ– value_dump ( ) { … } — function",
							"—Ⓕ– js_minnet_init ( ) { … } — function",
							"—Ⓕ– lws_callback_name ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACVAAAATWlubmV0V2Vic29ja2V0CiAgbWlubmV0X3dzX2Zyb21fd3NpCiAgbWlubmV0X3dzX2dldAogIG1pbm5ldF93c19vYmplY3QKICBtaW5uZXRfd3Nfd3JhcAogIG1pbm5ldF93c19zc2xjZXJ0CiAgbWlubmV0X3dzX2NvbnN0cnVjdG9yCiAgbWlubmV0X3dzX2RhdGEAAAAAAAAAADcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					718,
					5,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/minnet-quickjs/minnet.c",
						"symkeys":
						[
							[
								359,
								373
							],
							[
								403,
								417
							],
							[
								600,
								616
							],
							[
								1645,
								1665
							],
							[
								1937,
								1944
							],
							[
								2318,
								2332
							],
							[
								2699,
								2711
							],
							[
								7073,
								7082
							],
							[
								7297,
								7312
							],
							[
								7473,
								7476
							],
							[
								7512,
								7522
							],
							[
								8946,
								8958
							],
							[
								9552,
								9567
							],
							[
								10032,
								10048
							],
							[
								10467,
								10478
							],
							[
								12033,
								12043
							],
							[
								12235,
								12249
							],
							[
								14986,
								15003
							]
						],
						"symlist":
						[
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							"—Ⓕ– lws_log_callback ( ) { … } — function",
							"—Ⓕ– minnet_lws_unhandled ( ) { … } — function",
							"—Ⓕ– set_log ( ) { … } — function",
							"—Ⓕ– minnet_set_log ( ) { … } — function",
							"—Ⓕ– minnet_fetch ( ) { … } — function",
							"—Ⓕ– io_events ( ) { … } — function",
							"—Ⓕ– io_parse_events ( ) { … } — function",
							" Ⓜ  PIO … — macro object",
							"—Ⓕ– io_handler ( ) { … } — function",
							"—Ⓕ– make_handler ( ) { … } — function",
							"—Ⓕ– minnet_handlers ( ) { … } — function",
							"—Ⓕ– minnet_emit_this ( ) { … } — function",
							"—Ⓕ– minnet_emit ( ) { … } — function",
							"—Ⓕ– value_dump ( ) { … } — function",
							"—Ⓕ– js_minnet_init ( ) { … } — function",
							"—Ⓕ– lws_callback_name ( ) { … } — function"
						]
					},
					"CgAAAAAAAAAAAAAAAAAAAAAAAADfAgAAICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgbHdzX2xvZ19jYWxsYmFjayAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfbHdzX3VuaGFuZGxlZCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBzZXRfbG9nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9zZXRfbG9nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9mZXRjaCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpb19ldmVudHMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW9fcGFyc2VfZXZlbnRzICggKSB7IOKApiB9IOKAlCAKICDik4IgIFBJTyDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgaW9faGFuZGxlciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtYWtlX2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2hhbmRsZXJzICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9lbWl0X3RoaXMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2VtaXQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgdmFsdWVfZHVtcCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taW5uZXRfaW5pdCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBsd3NfY2FsbGJhY2tfbmFtZSAoICkgeyDigKYgfSDigJQgAAAAAAAAAAA3AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3wIAACAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIGx3c19sb2dfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2x3c191bmhhbmRsZWQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgc2V0X2xvZyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfc2V0X2xvZyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfZmV0Y2ggKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW9fZXZlbnRzICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGlvX3BhcnNlX2V2ZW50cyAoICkgeyDigKYgfSDigJQgCiAg4pOCICBQSU8g4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIGlvX2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWFrZV9oYW5kbGVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9oYW5kbGVycyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfZW1pdF90aGlzICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9lbWl0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIHZhbHVlX2R1bXAgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlubmV0X2luaXQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbHdzX2NhbGxiYWNrX25hbWUgKCApIHsg4oCmIH0g4oCUIAAAAAAAAAAANwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN8CAAAgIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBsd3NfbG9nX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9sd3NfdW5oYW5kbGVkICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIHNldF9sb2cgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3NldF9sb2cgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2ZldGNoICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGlvX2V2ZW50cyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpb19wYXJzZV9ldmVudHMgKCApIHsg4oCmIH0g4oCUIAogIOKTgiAgUElPIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBpb19oYW5kbGVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1ha2VfaGFuZGxlciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfaGFuZGxlcnMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2VtaXRfdGhpcyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfZW1pdCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyB2YWx1ZV9kdW1wICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pbm5ldF9pbml0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGx3c19jYWxsYmFja19uYW1lICggKSB7IOKApiB9IOKAlCAAAAAAAAAAADcCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADfAgAAICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgbHdzX2xvZ19jYWxsYmFjayAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfbHdzX3VuaGFuZGxlZCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBzZXRfbG9nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9zZXRfbG9nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9mZXRjaCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpb19ldmVudHMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW9fcGFyc2VfZXZlbnRzICggKSB7IOKApiB9IOKAlCAKICDik4IgIFBJTyDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgaW9faGFuZGxlciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtYWtlX2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2hhbmRsZXJzICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9lbWl0X3RoaXMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2VtaXQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgdmFsdWVfZHVtcCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taW5uZXRfaW5pdCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBsd3NfY2FsbGJhY2tfbmFtZSAoICkgeyDigKYgfSDigJQgAAAAAAAAAAA3AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3wIAACAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIGx3c19sb2dfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2x3c191bmhhbmRsZWQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgc2V0X2xvZyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfc2V0X2xvZyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfZmV0Y2ggKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW9fZXZlbnRzICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGlvX3BhcnNlX2V2ZW50cyAoICkgeyDigKYgfSDigJQgCiAg4pOCICBQSU8g4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIGlvX2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWFrZV9oYW5kbGVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9oYW5kbGVycyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfZW1pdF90aGlzICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9lbWl0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIHZhbHVlX2R1bXAgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlubmV0X2luaXQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbHdzX2NhbGxiYWNrX25hbWUgKCApIHsg4oCmIH0g4oCUIAAAAAAAAAAANwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					719,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/minnet-quickjs/minnet.c",
						"symkeys":
						[
							[
								359,
								373
							],
							[
								403,
								417
							],
							[
								600,
								616
							],
							[
								1645,
								1665
							],
							[
								1937,
								1944
							],
							[
								2318,
								2332
							],
							[
								2699,
								2711
							],
							[
								7073,
								7082
							],
							[
								7297,
								7312
							],
							[
								7473,
								7476
							],
							[
								7512,
								7522
							],
							[
								8946,
								8958
							],
							[
								9552,
								9567
							],
							[
								10032,
								10048
							],
							[
								10467,
								10478
							],
							[
								12033,
								12043
							],
							[
								12235,
								12249
							],
							[
								14986,
								15003
							]
						],
						"symlist":
						[
							" Ⓜ  JS_INIT_MODULE … — macro object",
							" Ⓜ  JS_INIT_MODULE … — macro object",
							"—Ⓕ– lws_log_callback ( ) { … } — function",
							"—Ⓕ– minnet_lws_unhandled ( ) { … } — function",
							"—Ⓕ– set_log ( ) { … } — function",
							"—Ⓕ– minnet_set_log ( ) { … } — function",
							"—Ⓕ– minnet_fetch ( ) { … } — function",
							"—Ⓕ– io_events ( ) { … } — function",
							"—Ⓕ– io_parse_events ( ) { … } — function",
							" Ⓜ  PIO … — macro object",
							"—Ⓕ– io_handler ( ) { … } — function",
							"—Ⓕ– make_handler ( ) { … } — function",
							"—Ⓕ– minnet_handlers ( ) { … } — function",
							"—Ⓕ– minnet_emit_this ( ) { … } — function",
							"—Ⓕ– minnet_emit ( ) { … } — function",
							"—Ⓕ– value_dump ( ) { … } — function",
							"—Ⓕ– js_minnet_init ( ) { … } — function",
							"—Ⓕ– lws_callback_name ( ) { … } — function"
						]
					},
					"CAAAAAAAAAAAAAAAAAAAAAAAAADfAgAAICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgbHdzX2xvZ19jYWxsYmFjayAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfbHdzX3VuaGFuZGxlZCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBzZXRfbG9nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9zZXRfbG9nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9mZXRjaCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpb19ldmVudHMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW9fcGFyc2VfZXZlbnRzICggKSB7IOKApiB9IOKAlCAKICDik4IgIFBJTyDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgaW9faGFuZGxlciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtYWtlX2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2hhbmRsZXJzICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9lbWl0X3RoaXMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2VtaXQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgdmFsdWVfZHVtcCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taW5uZXRfaW5pdCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBsd3NfY2FsbGJhY2tfbmFtZSAoICkgeyDigKYgfSDigJQgAAAAAAAAAAA3AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3wIAACAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIGx3c19sb2dfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2x3c191bmhhbmRsZWQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgc2V0X2xvZyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfc2V0X2xvZyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfZmV0Y2ggKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW9fZXZlbnRzICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGlvX3BhcnNlX2V2ZW50cyAoICkgeyDigKYgfSDigJQgCiAg4pOCICBQSU8g4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIGlvX2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWFrZV9oYW5kbGVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9oYW5kbGVycyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfZW1pdF90aGlzICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9lbWl0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIHZhbHVlX2R1bXAgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMganNfbWlubmV0X2luaXQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbHdzX2NhbGxiYWNrX25hbWUgKCApIHsg4oCmIH0g4oCUIAAAAAAAAAAANwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN8CAAAgIOKTgiAgSlNfSU5JVF9NT0RVTEUg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBsd3NfbG9nX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9sd3NfdW5oYW5kbGVkICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIHNldF9sb2cgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3NldF9sb2cgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2ZldGNoICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGlvX2V2ZW50cyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpb19wYXJzZV9ldmVudHMgKCApIHsg4oCmIH0g4oCUIAogIOKTgiAgUElPIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBpb19oYW5kbGVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1ha2VfaGFuZGxlciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfaGFuZGxlcnMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2VtaXRfdGhpcyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfZW1pdCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyB2YWx1ZV9kdW1wICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGpzX21pbm5ldF9pbml0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIGx3c19jYWxsYmFja19uYW1lICggKSB7IOKApiB9IOKAlCAAAAAAAAAAADcCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADfAgAAICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgbHdzX2xvZ19jYWxsYmFjayAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfbHdzX3VuaGFuZGxlZCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBzZXRfbG9nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9zZXRfbG9nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9mZXRjaCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpb19ldmVudHMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW9fcGFyc2VfZXZlbnRzICggKSB7IOKApiB9IOKAlCAKICDik4IgIFBJTyDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgaW9faGFuZGxlciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtYWtlX2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2hhbmRsZXJzICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9lbWl0X3RoaXMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2VtaXQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgdmFsdWVfZHVtcCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taW5uZXRfaW5pdCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBsd3NfY2FsbGJhY2tfbmFtZSAoICkgeyDigKYgfSDigJQgAAAAAAAAAAA3AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					720,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/minnet-quickjs/minnet-websocket.c",
						"symkeys":
						[
							[
								310,
								330
							],
							[
								392,
								405
							],
							[
								1135,
								1153
							],
							[
								1376,
								1389
							],
							[
								1534,
								1550
							],
							[
								1958,
								1972
							],
							[
								2193,
								2210
							],
							[
								2833,
								2847
							],
							[
								3807,
								3824
							],
							[
								5505,
								5519
							],
							[
								6180,
								6194
							],
							[
								6855,
								6870
							],
							[
								7640,
								7656
							],
							[
								8837,
								8858
							],
							[
								9573,
								9592
							]
						],
						"symlist":
						[
							"—Ⓒ– wsi_opaque_user_data { … } ; — type",
							"—Ⓕ– minnet_ws_new ( ) { … } — function",
							"—Ⓕ– minnet_ws_from_wsi ( ) { … } — function",
							"—Ⓕ– minnet_ws_get ( ) { … } — function",
							"—Ⓕ– minnet_ws_object ( ) { … } — function",
							"—Ⓕ– minnet_ws_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ws_sslcert ( ) { … } — function",
							"—Ⓕ– minnet_ws_send ( ) { … } — function",
							"—Ⓕ– minnet_ws_respond ( ) { … } — function",
							"—Ⓕ– minnet_ws_ping ( ) { … } — function",
							"—Ⓕ– minnet_ws_pong ( ) { … } — function",
							"—Ⓕ– minnet_ws_close ( ) { … } — function",
							"—Ⓕ– minnet_ws_getter ( ) { … } — function",
							"—Ⓕ– minnet_ws_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ws_finalizer ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADfAgAAICDik4IgIEpTX0lOSVRfTU9EVUxFIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBKU19JTklUX01PRFVMRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgbHdzX2xvZ19jYWxsYmFjayAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfbHdzX3VuaGFuZGxlZCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBzZXRfbG9nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9zZXRfbG9nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9mZXRjaCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBpb19ldmVudHMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgaW9fcGFyc2VfZXZlbnRzICggKSB7IOKApiB9IOKAlCAKICDik4IgIFBJTyDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgaW9faGFuZGxlciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtYWtlX2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2hhbmRsZXJzICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF9lbWl0X3RoaXMgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X2VtaXQgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgdmFsdWVfZHVtcCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBqc19taW5uZXRfaW5pdCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBsd3NfY2FsbGJhY2tfbmFtZSAoICkgeyDigKYgfSDigJQgAAAAAAAAAAAAAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					721,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/minnet-quickjs/minnet-websocket.h",
						"symkeys":
						[
							[
								279,
								294
							],
							[
								314,
								332
							],
							[
								364,
								377
							],
							[
								416,
								432
							],
							[
								471,
								485
							],
							[
								525,
								542
							],
							[
								621,
								642
							],
							[
								1068,
								1082
							]
						],
						"symlist":
						[
							"MinnetWebsocket",
							"minnet_ws_from_wsi",
							"minnet_ws_get",
							"minnet_ws_object",
							"minnet_ws_wrap",
							"minnet_ws_sslcert",
							"minnet_ws_constructor",
							"minnet_ws_data"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACWAgAA4oCU4pK44oCTIHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrvigJMgbWlubmV0X3dzX25ldyAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZnJvbV93c2kgKCApIHsg4oCmIH0g4oCUIArigJTikrvigJMgbWlubmV0X3dzX2dldCAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3Nfb2JqZWN0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c193cmFwICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zc2xjZXJ0ICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19zZW5kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19yZXNwb25kICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19waW5nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19wb25nICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jbG9zZSAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZ2V0dGVyICggKSB7IOKApiB9IOKAlCAK4oCU4pK74oCTIG1pbm5ldF93c19jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgCuKAlOKSu+KAkyBtaW5uZXRfd3NfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCAAAAAAAAAAAJUAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					722,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/minnet-quickjs/minnet-websocket.c",
						"symkeys":
						[
							[
								310,
								330
							],
							[
								392,
								405
							],
							[
								1135,
								1153
							],
							[
								1376,
								1389
							],
							[
								1534,
								1550
							],
							[
								1958,
								1972
							],
							[
								2193,
								2210
							],
							[
								2833,
								2847
							],
							[
								3807,
								3824
							],
							[
								5505,
								5519
							],
							[
								6180,
								6194
							],
							[
								6855,
								6870
							],
							[
								7640,
								7656
							],
							[
								8837,
								8858
							],
							[
								9573,
								9592
							]
						],
						"symlist":
						[
							"—Ⓒ– wsi_opaque_user_data { … } ; — type",
							"—Ⓕ– minnet_ws_new ( ) { … } — function",
							"—Ⓕ– minnet_ws_from_wsi ( ) { … } — function",
							"—Ⓕ– minnet_ws_get ( ) { … } — function",
							"—Ⓕ– minnet_ws_object ( ) { … } — function",
							"—Ⓕ– minnet_ws_wrap ( ) { … } — function",
							"—Ⓕ– minnet_ws_sslcert ( ) { … } — function",
							"—Ⓕ– minnet_ws_send ( ) { … } — function",
							"—Ⓕ– minnet_ws_respond ( ) { … } — function",
							"—Ⓕ– minnet_ws_ping ( ) { … } — function",
							"—Ⓕ– minnet_ws_pong ( ) { … } — function",
							"—Ⓕ– minnet_ws_close ( ) { … } — function",
							"—Ⓕ– minnet_ws_getter ( ) { … } — function",
							"—Ⓕ– minnet_ws_constructor ( ) { … } — function",
							"—Ⓕ– minnet_ws_finalizer ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACVAAAATWlubmV0V2Vic29ja2V0CiAgbWlubmV0X3dzX2Zyb21fd3NpCiAgbWlubmV0X3dzX2dldAogIG1pbm5ldF93c19vYmplY3QKICBtaW5uZXRfd3Nfd3JhcAogIG1pbm5ldF93c19zc2xjZXJ0CiAgbWlubmV0X3dzX2NvbnN0cnVjdG9yCiAgbWlubmV0X3dzX2RhdGEAAAAAAAAAAAACAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				]
			]
		},
		{
			"file": "minnet-server.c",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3684,
					1,
					"cut",
					null,
					"AQAAAOdMAAAAAAAA50wAAAAAAAAUAAAAIHNlcnZlci5jYl9ib2R5LmN0eCw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnTAAAAAAAAPtMAAAAAAAAAAAAAAAA8L8"
				],
				[
					3687,
					1,
					"paste",
					null,
					"AQAAAPdMAAAAAAAAC00AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3TAAAAAAAAPdMAAAAAAAAAAAAAAAA8L8"
				],
				[
					3798,
					1,
					"insert",
					{
						"characters": "serv"
					},
					"BQAAAMZNAAAAAAAAx00AAAAAAAAAAAAAx00AAAAAAADHTQAAAAAAAAQAAAByZXNwx00AAAAAAADITQAAAAAAAAAAAADITQAAAAAAAMlNAAAAAAAAAAAAAMlNAAAAAAAAyk0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGTQAAAAAAAMpNAAAAAAAAAAAAAAAA8L8"
				],
				[
					3808,
					1,
					"insert",
					{
						"characters": "serv"
					},
					"BQAAANY+AAAAAAAA1z4AAAAAAAAAAAAA1z4AAAAAAADXPgAAAAAAAAQAAAByZXNw1z4AAAAAAADYPgAAAAAAAAAAAADYPgAAAAAAANk+AAAAAAAAAAAAANk+AAAAAAAA2j4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWPgAAAAAAANo+AAAAAAAAAAAAAAAA8L8"
				],
				[
					3828,
					1,
					"",
					null,
					"AQAAAKpIAAAAAAAAuUgAAAAAAAAPAAAAcmVzcC0+Z2VuZXJhdG9y",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqSAAAAAAAALlIAAAAAAAAAAAAAAAA8L8"
				],
				[
					3833,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6SQAAAAAAAPpJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3835,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAOtJAAAAAAAA7UkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrSQAAAAAAAOtJAAAAAAAAAAAAAAAAAAA"
				],
				[
					3845,
					2,
					"left_delete",
					null,
					"AgAAAMhOAAAAAAAAyE4AAAAAAAAEAAAAZG9uZcdOAAAAAAAAx04AAAAAAAABAAAAIQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADITgAAAAAAAMxOAAAAAAAAAAAAAAAA8L8"
				],
				[
					3846,
					1,
					"insert",
					{
						"characters": "KS"
					},
					"AgAAAMdOAAAAAAAAyE4AAAAAAAAAAAAAyE4AAAAAAADJTgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHTgAAAAAAAMdOAAAAAAAAAAAAAAAA8L8"
				],
				[
					3847,
					2,
					"left_delete",
					null,
					"AgAAAMhOAAAAAAAAyE4AAAAAAAABAAAAU8dOAAAAAAAAx04AAAAAAAABAAAASw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJTgAAAAAAAMlOAAAAAAAAAAAAAAAA8L8"
				],
				[
					3848,
					1,
					"insert",
					{
						"characters": "JS_"
					},
					"AwAAAMdOAAAAAAAAyE4AAAAAAAAAAAAAyE4AAAAAAADJTgAAAAAAAAAAAADJTgAAAAAAAMpOAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHTgAAAAAAAMdOAAAAAAAAAAAAAAAA8L8"
				],
				[
					3849,
					3,
					"left_delete",
					null,
					"AwAAAMlOAAAAAAAAyU4AAAAAAAABAAAAX8hOAAAAAAAAyE4AAAAAAAABAAAAU8dOAAAAAAAAx04AAAAAAAABAAAASg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKTgAAAAAAAMpOAAAAAAAAAAAAAAAA8L8"
				],
				[
					3850,
					1,
					"insert",
					{
						"characters": "!JS_I"
					},
					"BQAAAMdOAAAAAAAAyE4AAAAAAAAAAAAAyE4AAAAAAADJTgAAAAAAAAAAAADJTgAAAAAAAMpOAAAAAAAAAAAAAMpOAAAAAAAAy04AAAAAAAAAAAAAy04AAAAAAADMTgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHTgAAAAAAAMdOAAAAAAAAAAAAAAAA8L8"
				],
				[
					3851,
					4,
					"left_delete",
					null,
					"BAAAAMtOAAAAAAAAy04AAAAAAAABAAAAScpOAAAAAAAAyk4AAAAAAAABAAAAX8lOAAAAAAAAyU4AAAAAAAABAAAAU8hOAAAAAAAAyE4AAAAAAAABAAAASg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMTgAAAAAAAMxOAAAAAAAAAAAAAAAA8L8"
				],
				[
					3852,
					1,
					"insert",
					{
						"characters": "js_is_nulli"
					},
					"CwAAAMhOAAAAAAAAyU4AAAAAAAAAAAAAyU4AAAAAAADKTgAAAAAAAAAAAADKTgAAAAAAAMtOAAAAAAAAAAAAAMtOAAAAAAAAzE4AAAAAAAAAAAAAzE4AAAAAAADNTgAAAAAAAAAAAADNTgAAAAAAAM5OAAAAAAAAAAAAAM5OAAAAAAAAz04AAAAAAAAAAAAAz04AAAAAAADQTgAAAAAAAAAAAADQTgAAAAAAANFOAAAAAAAAAAAAANFOAAAAAAAA0k4AAAAAAAAAAAAA0k4AAAAAAADTTgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADITgAAAAAAAMhOAAAAAAAAAAAAAAAA8L8"
				],
				[
					3853,
					1,
					"insert",
					{
						"characters": "sh"
					},
					"AgAAANNOAAAAAAAA1E4AAAAAAAAAAAAA1E4AAAAAAADVTgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTTgAAAAAAANNOAAAAAAAAAAAAAAAA8L8"
				],
				[
					3854,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANVOAAAAAAAA104AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVTgAAAAAAANVOAAAAAAAAAAAAAAAA8L8"
				],
				[
					3855,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAANZOAAAAAAAA104AAAAAAAAAAAAA104AAAAAAADYTgAAAAAAAAAAAADYTgAAAAAAANlOAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWTgAAAAAAANZOAAAAAAAAAAAAAAAA8L8"
				],
				[
					3897,
					1,
					"insert",
					{
						"characters": "\nif)"
					},
					"BQAAADRRAAAAAAAANVEAAAAAAAAAAAAANVEAAAAAAAA9UQAAAAAAAAAAAAA9UQAAAAAAAD5RAAAAAAAAAAAAAD5RAAAAAAAAP1EAAAAAAAAAAAAAP1EAAAAAAABAUQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0UQAAAAAAADRRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3898,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEBRAAAAAAAAQlEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAUQAAAAAAAEBRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3899,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAEBRAAAAAAAAQFEAAAAAAAABAAAAKEBRAAAAAAAAQFEAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBUQAAAAAAAEFRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3900,
					1,
					"left_delete",
					null,
					"AQAAAD9RAAAAAAAAP1EAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAUQAAAAAAAEBRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3901,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAD9RAAAAAAAAQVEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/UQAAAAAAAD9RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3902,
					1,
					"paste",
					null,
					"AQAAAEBRAAAAAAAAS1EAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAUQAAAAAAAEBRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3903,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEtRAAAAAAAATFEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLUQAAAAAAAEtRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3904,
					4,
					"left_delete",
					null,
					"BAAAAEtRAAAAAAAAS1EAAAAAAAABAAAAIEpRAAAAAAAASlEAAAAAAAABAAAAMElRAAAAAAAASVEAAAAAAAABAAAAIEhRAAAAAAAASFEAAAAAAAABAAAAPg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMUQAAAAAAAExRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3905,
					1,
					"insert",
					{
						"characters": "=="
					},
					"AgAAAEhRAAAAAAAASVEAAAAAAAAAAAAASVEAAAAAAABKUQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIUQAAAAAAAEhRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3906,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAEpRAAAAAAAAS1EAAAAAAAAAAAAAS1EAAAAAAABMUQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKUQAAAAAAAEpRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3908,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE1RAAAAAAAATlEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNUQAAAAAAAE1RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3909,
					1,
					"left_delete",
					null,
					"AQAAAE1RAAAAAAAATVEAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOUQAAAAAAAE5RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3910,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE1RAAAAAAAATlEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNUQAAAAAAAE1RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3911,
					2,
					"left_delete",
					null,
					"AgAAAE1RAAAAAAAATVEAAAAAAAABAAAAIExRAAAAAAAATFEAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOUQAAAAAAAE5RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3912,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAExRAAAAAAAATVEAAAAAAAAAAAAATVEAAAAAAABOUQAAAAAAAAAAAABOUQAAAAAAAE9RAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMUQAAAAAAAExRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3913,
					1,
					"insert",
					{
						"characters": " !done)"
					},
					"BwAAAE9RAAAAAAAAUFEAAAAAAAAAAAAAUFEAAAAAAABRUQAAAAAAAAAAAABRUQAAAAAAAFJRAAAAAAAAAAAAAFJRAAAAAAAAU1EAAAAAAAAAAAAAU1EAAAAAAABUUQAAAAAAAAAAAABUUQAAAAAAAFVRAAAAAAAAAAAAAFVRAAAAAAAAVlEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPUQAAAAAAAE9RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3914,
					1,
					"insert",
					{
						"characters": "\nl"
					},
					"BQAAAFZRAAAAAAAAV1EAAAAAAAAAAAAAV1EAAAAAAABfUQAAAAAAAAAAAABXUQAAAAAAAFdRAAAAAAAACAAAACAgICAgICAgV1EAAAAAAABhUQAAAAAAAAAAAABhUQAAAAAAAGJRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWUQAAAAAAAFZRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3915,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGJRAAAAAAAAY1EAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiUQAAAAAAAGJRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3916,
					1,
					"left_delete",
					null,
					"AQAAAGJRAAAAAAAAYlEAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjUQAAAAAAAGNRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3917,
					1,
					"insert",
					{
						"characters": "--;"
					},
					"AwAAAGJRAAAAAAAAY1EAAAAAAAAAAAAAY1EAAAAAAABkUQAAAAAAAAAAAABkUQAAAAAAAGVRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiUQAAAAAAAGJRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3920,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAEBRAAAAAAAAQVEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAUQAAAAAAAEBRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3921,
					1,
					"insert",
					{
						"characters": " >"
					},
					"AgAAAEFRAAAAAAAAQlEAAAAAAAAAAAAAQlEAAAAAAABDUQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBUQAAAAAAAEFRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3922,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAENRAAAAAAAARFEAAAAAAAAAAAAARFEAAAAAAABFUQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDUQAAAAAAAENRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3923,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAEVRAAAAAAAARlEAAAAAAAAAAAAARlEAAAAAAABHUQAAAAAAAAAAAABHUQAAAAAAAEhRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFUQAAAAAAAEVRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3924,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEhRAAAAAAAASVEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIUQAAAAAAAEhRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3948,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADVRAAAAAAAANlEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1UQAAAAAAADVRAAAAAAAAAAAAAAAAAAA"
				],
				[
					3950,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHBRAAAAAAAAcVEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwUQAAAAAAAHBRAAAAAAAAAAAAAAAAAAA"
				],
				[
					3962,
					1,
					"insert",
					{
						"characters": "\n\nuif"
					},
					"CgAAAG9RAAAAAAAAcFEAAAAAAAAAAAAAcFEAAAAAAAB6UQAAAAAAAAAAAABwUQAAAAAAAHBRAAAAAAAACgAAACAgICAgICAgICBwUQAAAAAAAHhRAAAAAAAAAAAAAHhRAAAAAAAAeVEAAAAAAAAAAAAAeVEAAAAAAACBUQAAAAAAAAAAAABwUQAAAAAAAHBRAAAAAAAACAAAACAgICAgICAgeVEAAAAAAAB6UQAAAAAAAAAAAAB6UQAAAAAAAHtRAAAAAAAAAAAAAHtRAAAAAAAAfFEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvUQAAAAAAAG9RAAAAAAAAAAAAAAAAdUA"
				],
				[
					3963,
					3,
					"left_delete",
					null,
					"AwAAAHtRAAAAAAAAe1EAAAAAAAABAAAAZnpRAAAAAAAAelEAAAAAAAABAAAAaXlRAAAAAAAAeVEAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8UQAAAAAAAHxRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3964,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAHlRAAAAAAAAelEAAAAAAAAAAAAAelEAAAAAAAB7UQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5UQAAAAAAAHlRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3965,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHtRAAAAAAAAfVEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7UQAAAAAAAHtRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3966,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAHxRAAAAAAAAfVEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8UQAAAAAAAHxRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3967,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAH1RAAAAAAAAflEAAAAAAAAAAAAAflEAAAAAAAB/UQAAAAAAAAAAAAB/UQAAAAAAAIBRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9UQAAAAAAAH1RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3968,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAIBRAAAAAAAAgVEAAAAAAAAAAAAAgVEAAAAAAACCUQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAUQAAAAAAAIBRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3970,
					1,
					"insert",
					{
						"characters": " break;"
					},
					"BwAAAINRAAAAAAAAhFEAAAAAAAAAAAAAhFEAAAAAAACFUQAAAAAAAAAAAACFUQAAAAAAAIZRAAAAAAAAAAAAAIZRAAAAAAAAh1EAAAAAAAAAAAAAh1EAAAAAAACIUQAAAAAAAAAAAACIUQAAAAAAAIlRAAAAAAAAAAAAAIlRAAAAAAAAilEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDUQAAAAAAAINRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3975,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAIRRAAAAAAAAhVEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEUQAAAAAAAIRRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3976,
					1,
					"insert",
					{
						"characters": " r"
					},
					"AgAAAIVRAAAAAAAAhlEAAAAAAAAAAAAAhlEAAAAAAACHUQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFUQAAAAAAAIVRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3977,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIdRAAAAAAAAiFEAAAAAAAAAAAAAiFEAAAAAAACJUQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHUQAAAAAAAIdRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3978,
					1,
					"insert",
					{
						"characters": " l;"
					},
					"AwAAAIlRAAAAAAAAilEAAAAAAAAAAAAAilEAAAAAAACLUQAAAAAAAAAAAACLUQAAAAAAAIxRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJUQAAAAAAAIlRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3979,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIxRAAAAAAAAjVEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMUQAAAAAAAIxRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3980,
					3,
					"left_delete",
					null,
					"AwAAAIxRAAAAAAAAjFEAAAAAAAABAAAAIItRAAAAAAAAi1EAAAAAAAABAAAAO4pRAAAAAAAAilEAAAAAAAABAAAAbA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNUQAAAAAAAI1RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3981,
					1,
					"insert",
					{
						"characters": "0;"
					},
					"AgAAAIpRAAAAAAAAi1EAAAAAAAAAAAAAi1EAAAAAAACMUQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKUQAAAAAAAIpRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3982,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIxRAAAAAAAAjVEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMUQAAAAAAAIxRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3984,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAJNRAAAAAAAAlFEAAAAAAAAAAAAAlFEAAAAAAACVUQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTUQAAAAAAAJNRAAAAAAAA////////738"
				],
				[
					3989,
					1,
					"insert",
					{
						"characters": "break;"
					},
					"BwAAAIRRAAAAAAAAhVEAAAAAAAAAAAAAhVEAAAAAAACFUQAAAAAAABEAAAB7IHIgPSAwOyBicmVhazsgfYVRAAAAAAAAhlEAAAAAAAAAAAAAhlEAAAAAAACHUQAAAAAAAAAAAACHUQAAAAAAAIhRAAAAAAAAAAAAAIhRAAAAAAAAiVEAAAAAAAAAAAAAiVEAAAAAAACKUQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEUQAAAAAAAJVRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3991,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKUQAAAAAAAIpRAAAAAAAAAAAAAAAA8L8"
				],
				[
					4018,
					1,
					"insert",
					{
						"characters": "server.cb_boy"
					},
					"DQAAAHU9AAAAAAAAdj0AAAAAAAAAAAAAdj0AAAAAAAB3PQAAAAAAAAAAAAB3PQAAAAAAAHg9AAAAAAAAAAAAAHg9AAAAAAAAeT0AAAAAAAAAAAAAeT0AAAAAAAB6PQAAAAAAAAAAAAB6PQAAAAAAAHs9AAAAAAAAAAAAAHs9AAAAAAAAfD0AAAAAAAAAAAAAfD0AAAAAAAB9PQAAAAAAAAAAAAB9PQAAAAAAAH49AAAAAAAAAAAAAH49AAAAAAAAfz0AAAAAAAAAAAAAfz0AAAAAAACAPQAAAAAAAAAAAACAPQAAAAAAAIE9AAAAAAAAAAAAAIE9AAAAAAAAgj0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1PQAAAAAAAHU9AAAAAAAAAAAAAAAA8L8"
				],
				[
					4019,
					1,
					"left_delete",
					null,
					"AQAAAIE9AAAAAAAAgT0AAAAAAAABAAAAeQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCPQAAAAAAAII9AAAAAAAAAAAAAAAA8L8"
				],
				[
					4020,
					1,
					"insert",
					{
						"characters": "dy.cc"
					},
					"BQAAAIE9AAAAAAAAgj0AAAAAAAAAAAAAgj0AAAAAAACDPQAAAAAAAAAAAACDPQAAAAAAAIQ9AAAAAAAAAAAAAIQ9AAAAAAAAhT0AAAAAAAAAAAAAhT0AAAAAAACGPQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBPQAAAAAAAIE9AAAAAAAAAAAAAAAA8L8"
				],
				[
					4021,
					1,
					"left_delete",
					null,
					"AQAAAIU9AAAAAAAAhT0AAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGPQAAAAAAAIY9AAAAAAAAAAAAAAAA8L8"
				],
				[
					4022,
					1,
					"insert",
					{
						"characters": "tx"
					},
					"AgAAAIU9AAAAAAAAhj0AAAAAAAAAAAAAhj0AAAAAAACHPQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFPQAAAAAAAIU9AAAAAAAAAAAAAAAA8L8"
				],
				[
					4023,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIc9AAAAAAAAiD0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHPQAAAAAAAIc9AAAAAAAAAAAAAAAA8L8"
				],
				[
					4024,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAIg9AAAAAAAAiT0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIPQAAAAAAAIg9AAAAAAAAAAAAAAAA8L8"
				],
				[
					4025,
					1,
					"insert",
					{
						"characters": " &server."
					},
					"CQAAAIk9AAAAAAAAij0AAAAAAAAAAAAAij0AAAAAAACLPQAAAAAAAAAAAACLPQAAAAAAAIw9AAAAAAAAAAAAAIw9AAAAAAAAjT0AAAAAAAAAAAAAjT0AAAAAAACOPQAAAAAAAAAAAACOPQAAAAAAAI89AAAAAAAAAAAAAI89AAAAAAAAkD0AAAAAAAAAAAAAkD0AAAAAAACRPQAAAAAAAAAAAACRPQAAAAAAAJI9AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJPQAAAAAAAIk9AAAAAAAAAAAAAAAA8L8"
				],
				[
					4026,
					1,
					"insert",
					{
						"characters": "cb_body"
					},
					"BwAAAJI9AAAAAAAAkz0AAAAAAAAAAAAAkz0AAAAAAACUPQAAAAAAAAAAAACUPQAAAAAAAJU9AAAAAAAAAAAAAJU9AAAAAAAAlj0AAAAAAAAAAAAAlj0AAAAAAACXPQAAAAAAAAAAAACXPQAAAAAAAJg9AAAAAAAAAAAAAJg9AAAAAAAAmT0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSPQAAAAAAAJI9AAAAAAAAAAAAAAAA8L8"
				],
				[
					4027,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAJk9AAAAAAAAmj0AAAAAAAAAAAAAmj0AAAAAAACbPQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZPQAAAAAAAJk9AAAAAAAAAAAAAAAA8L8"
				],
				[
					4028,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJs9AAAAAAAAnD0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbPQAAAAAAAJs9AAAAAAAAAAAAAAAA8L8"
				],
				[
					4034,
					16,
					"left_delete",
					null,
					"EAAAANE9AAAAAAAA0T0AAAAAAAABAAAAcNA9AAAAAAAA0D0AAAAAAAABAAAAdM89AAAAAAAAzz0AAAAAAAABAAAAdM49AAAAAAAAzj0AAAAAAAABAAAAaM09AAAAAAAAzT0AAAAAAAABAAAAX8w9AAAAAAAAzD0AAAAAAAABAAAAYss9AAAAAAAAyz0AAAAAAAABAAAAY8o9AAAAAAAAyj0AAAAAAAABAAAALsk9AAAAAAAAyT0AAAAAAAABAAAAcsg9AAAAAAAAyD0AAAAAAAABAAAAZcc9AAAAAAAAxz0AAAAAAAABAAAAdsY9AAAAAAAAxj0AAAAAAAABAAAAcsU9AAAAAAAAxT0AAAAAAAABAAAAZcQ9AAAAAAAAxD0AAAAAAAABAAAAc8M9AAAAAAAAwz0AAAAAAAABAAAAJsI9AAAAAAAAwj0AAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSPQAAAAAAANI9AAAAAAAAAAAAAAAA8L8"
				],
				[
					4035,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAMI9AAAAAAAAwz0AAAAAAAAAAAAAwz0AAAAAAADEPQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCPQAAAAAAAMI9AAAAAAAAAAAAAAAA8L8"
				],
				[
					4100,
					1,
					"insert",
					{
						"characters": "JS_IsObject("
					},
					"DAAAAGtNAAAAAAAAbE0AAAAAAAAAAAAAbE0AAAAAAABtTQAAAAAAAAAAAABtTQAAAAAAAG5NAAAAAAAAAAAAAG5NAAAAAAAAb00AAAAAAAAAAAAAb00AAAAAAABwTQAAAAAAAAAAAABwTQAAAAAAAHFNAAAAAAAAAAAAAHFNAAAAAAAAck0AAAAAAAAAAAAAck0AAAAAAABzTQAAAAAAAAAAAABzTQAAAAAAAHRNAAAAAAAAAAAAAHRNAAAAAAAAdU0AAAAAAAAAAAAAdU0AAAAAAAB2TQAAAAAAAAAAAAB2TQAAAAAAAHdNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrTQAAAAAAAGtNAAAAAAAAAAAAAAAA8L8"
				],
				[
					4101,
					1,
					"insert",
					{
						"characters": "serv->generator)"
					},
					"EAAAAHdNAAAAAAAAeE0AAAAAAAAAAAAAeE0AAAAAAAB5TQAAAAAAAAAAAAB5TQAAAAAAAHpNAAAAAAAAAAAAAHpNAAAAAAAAe00AAAAAAAAAAAAAe00AAAAAAAB8TQAAAAAAAAAAAAB8TQAAAAAAAH1NAAAAAAAAAAAAAH1NAAAAAAAAfk0AAAAAAAAAAAAAfk0AAAAAAAB/TQAAAAAAAAAAAAB/TQAAAAAAAIBNAAAAAAAAAAAAAIBNAAAAAAAAgU0AAAAAAAAAAAAAgU0AAAAAAACCTQAAAAAAAAAAAACCTQAAAAAAAINNAAAAAAAAAAAAAINNAAAAAAAAhE0AAAAAAAAAAAAAhE0AAAAAAACFTQAAAAAAAAAAAACFTQAAAAAAAIZNAAAAAAAAAAAAAIZNAAAAAAAAh00AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3TQAAAAAAAHdNAAAAAAAAAAAAAAAA8L8"
				],
				[
					4103,
					1,
					"left_delete",
					null,
					"AQAAAIdNAAAAAAAAh00AAAAAAAASAAAAc2VydmVyLmNiX2JvZHkuY3R4",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHTQAAAAAAAJlNAAAAAAAAAAAAAAAA8L8"
				],
				[
					4112,
					2,
					"right_delete",
					null,
					"AgAAANxNAAAAAAAA3E0AAAAAAAAHAAAAY2JfYm9kedxNAAAAAAAA3E0AAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcTQAAAAAAAONNAAAAAAAAAAAAAAAA8L8"
				],
				[
					4122,
					1,
					"paste",
					null,
					"AgAAAB9PAAAAAAAAKU8AAAAAAAAAAAAAKU8AAAAAAAApTwAAAAAAABIAAABzZXJ2ZXIuY2JfYm9keS5jdHg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfTwAAAAAAADFPAAAAAAAAAAAAAAAA8L8"
				],
				[
					4127,
					1,
					"paste",
					null,
					"AgAAAI9PAAAAAAAAmU8AAAAAAAAAAAAAmU8AAAAAAACZTwAAAAAAABIAAABzZXJ2ZXIuY2JfYm9keS5jdHg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPTwAAAAAAAKFPAAAAAAAAAAAAAAAA8L8"
				],
				[
					4162,
					1,
					"insert",
					{
						"characters": "\n\nassert"
					},
					"CwAAAOY+AAAAAAAA5z4AAAAAAAAAAAAA5z4AAAAAAADvPgAAAAAAAAAAAADvPgAAAAAAAPA+AAAAAAAAAAAAAPA+AAAAAAAA+D4AAAAAAAAAAAAA5z4AAAAAAADnPgAAAAAAAAgAAAAgICAgICAgIPA+AAAAAAAA8T4AAAAAAAAAAAAA8T4AAAAAAADyPgAAAAAAAAAAAADyPgAAAAAAAPM+AAAAAAAAAAAAAPM+AAAAAAAA9D4AAAAAAAAAAAAA9D4AAAAAAAD1PgAAAAAAAAAAAAD1PgAAAAAAAPY+AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmPgAAAAAAAOY+AAAAAAAAAAAAAAAA8L8"
				],
				[
					4163,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPY+AAAAAAAA+D4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2PgAAAAAAAPY+AAAAAAAAAAAAAAAA8L8"
				],
				[
					4164,
					1,
					"paste",
					null,
					"AQAAAPc+AAAAAAAABT8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3PgAAAAAAAPc+AAAAAAAAAAAAAAAA8L8"
				],
				[
					4165,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAU/AAAAAAAABz8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFPwAAAAAAAAU/AAAAAAAAAAAAAAAA8L8"
				],
				[
					4166,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAAY/AAAAAAAABz8AAAAAAAAAAAAABz8AAAAAAAAIPwAAAAAAAAAAAAAIPwAAAAAAAAk/AAAAAAAAAAAAAAk/AAAAAAAACj8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGPwAAAAAAAAY/AAAAAAAAAAAAAAAA8L8"
				],
				[
					4167,
					1,
					"insert",
					{
						"characters": " ret"
					},
					"BAAAAAo/AAAAAAAACz8AAAAAAAAAAAAACz8AAAAAAAAMPwAAAAAAAAAAAAAMPwAAAAAAAA0/AAAAAAAAAAAAAA0/AAAAAAAADj8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKPwAAAAAAAAo/AAAAAAAAAAAAAAAA8L8"
				],
				[
					4169,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABA/AAAAAAAAET8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQPwAAAAAAABA/AAAAAAAAAAAAAAAA8L8"
				],
				[
					4171,
					1,
					"cut",
					null,
					"AQAAAPA+AAAAAAAA8D4AAAAAAAAhAAAAYXNzZXJ0KGpzX2lzX2l0ZXJhdG9yKGN0eCwgcmV0KSk7",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARPwAAAAAAAPA+AAAAAAAAAAAAAAAAUEA"
				],
				[
					4172,
					1,
					"paste",
					null,
					"AQAAAPA+AAAAAAAAET8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwPgAAAAAAAPA+AAAAAAAAAAAAAAAA8L8"
				],
				[
					4190,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOFIAAAAAAAA4kgAAAAAAAAAAAAA4kgAAAAAAADuSAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhSAAAAAAAAOFIAAAAAAAAAAAAAAAA8L8"
				],
				[
					4191,
					1,
					"paste",
					null,
					"AQAAAO5IAAAAAAAAD0kAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuSAAAAAAAAO5IAAAAAAAAAAAAAAAA8L8"
				],
				[
					4206,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACsfAAAAAAAALB8AAAAAAAAAAAAALB8AAAAAAAA0HwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArHwAAAAAAACsfAAAAAAAA////////738"
				],
				[
					4209,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAOweAAAAAAAA7R4AAAAAAAAAAAAA7R4AAAAAAADzHgAAAAAAAAAAAADzHgAAAAAAAPUeAAAAAAAAAAAAADUfAAAAAAAANR8AAAAAAAAIAAAAICAgICAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsHgAAAAAAAOweAAAAAAAA////////738"
				],
				[
					4212,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1HgAAAAAAAPUeAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/home/roman/Projects/plot-cv/test-rpc.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"cut",
					null,
					"AQAAAKIQAAAAAAAAohAAAAAAAAD4AAAAICAgIGZ1bmN0aW9uKiBpbmRleChyZXEsIHJlcykgewogICAgICAgICAgY29uc29sZS5sb2cocmVxLnBhdGgsIHsgcmVxLCByZXMgfSk7CiAgICAgICAgICB5aWVsZCAnPGh0bWw+JzsKICAgICAgICAgIHlpZWxkICc8aGVhZD4nOwogICAgICAgICAgeWllbGQgJzwvaGVhZD4nOwogICAgICAgICAgeWllbGQgJzxib2R5Pic7CiAgICAgICAgICB5aWVsZCAnPC9ib2R5Pic7CiAgICAgICAgICB5aWVsZCAnPC9odG1sPic7CiAgICAgICAgfSw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiEAAAAAAAAJoRAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					2,
					"paste",
					null,
					"AgAAAKIQAAAAAAAAmhEAAAAAAAAAAAAAmhEAAAAAAACSEgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiEAAAAAAAAKIQAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "config"
					},
					"BwAAAKgRAAAAAAAAqREAAAAAAAAAAAAAqREAAAAAAACpEQAAAAAAAAUAAABpbmRleKkRAAAAAAAAqhEAAAAAAAAAAAAAqhEAAAAAAACrEQAAAAAAAAAAAACrEQAAAAAAAKwRAAAAAAAAAAAAAKwRAAAAAAAArREAAAAAAAAAAAAArREAAAAAAACuEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtEQAAAAAAAKgRAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					6,
					"left_delete",
					null,
					"BgAAAAASAAAAAAAAABIAAAAAAAABAAAAPv8RAAAAAAAA/xEAAAAAAAABAAAAbP4RAAAAAAAA/hEAAAAAAAABAAAAbf0RAAAAAAAA/REAAAAAAAABAAAAdPwRAAAAAAAA/BEAAAAAAAABAAAAaPsRAAAAAAAA+xEAAAAAAAABAAAAPA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABEgAAAAAAAAESAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "{}"
					},
					"AgAAAPsRAAAAAAAA/BEAAAAAAAAAAAAA/BEAAAAAAAD9EQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7EQAAAAAAAPsRAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"left_delete",
					null,
					"AQAAAAASAAAAAAAAABIAAAAAAACFAAAAICAgICAgICAgIHlpZWxkICc8aGVhZD4nOwogICAgICAgICAgeWllbGQgJzwvaGVhZD4nOwogICAgICAgICAgeWllbGQgJzxib2R5Pic7CiAgICAgICAgICB5aWVsZCAnPC9ib2R5Pic7CiAgICAgICAgICB5aWVsZCAnPC9odG1sPic7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAEgAAAAAAAIUSAAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "/home/roman/Projects/plot-cv/quickjs/net/rpc.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					124,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADRcQAALy9pbXBvcnQgaW5zcGVjdCBmcm9tICdpbnNwZWN0JzsKLy9pbXBvcnQgKiBhcyBianNvbiBmcm9tICdianNvbic7CmltcG9ydCB7IFN5c2NhbGxFcnJvciB9IGZyb20gJy4uLy4uL2xpYi9taXNjLmpzJzsKaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnLi4vLi4vbGliL2V2ZW50cy5qcyc7CmltcG9ydCBleHRlbmRBcnJheSBmcm9tICcuLi9tb2R1bGVzL2xpYi9leHRlbmRBcnJheS5qcyc7CmltcG9ydCB7IFJlcGVhdGVyIH0gZnJvbSAnLi4vLi4vbGliL3JlcGVhdGVyL3JlcGVhdGVyLmpzJzsKaW1wb3J0IGluc3BlY3QgZnJvbSAnLi4vLi4vbGliL29iamVjdEluc3BlY3QuanMnOwoKbGV0IHNvY2tJZDsKCmV4dGVuZEFycmF5KEFycmF5LnByb3RvdHlwZSk7CgpleHBvcnQgY29uc3QgTG9nV3JhcCA9IChnbG9iYWxUaGlzLkxvZ1dyYXAgPSBmdW5jdGlvbiBMb2dXcmFwKGxvZykgewogIGlmKHR5cGVvZiBsb2cgPT0gJ3N0cmluZycpIHsKICAgIGxldCBzdHIgPSBsb2c7CiAgICBsb2cgPSAoLi4uYXJncykgPT4gY29uc29sZS5sb2coc3RyLCAuLi5hcmdzKTsKICB9IGVsc2UgaWYoIWxvZykgewogICAgbG9nID0gKC4uLmFyZ3MpID0+IGNvbnNvbGUubG9nKC4uLmFyZ3MpOwogIH0KICByZXR1cm4gKHZhbHVlLCAuLi5hcmdzKSA9PiAobG9nKHZhbHVlLCAuLi5hcmdzKSwgdmFsdWUpOwp9KTsKCmV4cG9ydCBjb25zdCBWZm5BZGFwdGVyID0gdmZuID0+ICh7CiAgZ2V0OiBrID0+IHZmbihrKSwKICBzZXQ6IChrLCB2KSA9PiB2Zm4oaywgdikKfSk7CgpleHBvcnQgY29uc3QgVmZuRGVjb3JhdG9yID0gdmZuID0+IGRlZmluZSh2Zm4sIFZmbkFkYXB0ZXIodmZuKSk7CgpleHBvcnQgY29uc3QgTWVtb2l6ZSA9IChnbG9iYWxUaGlzLm1lbW9pemUgPSBmdW5jdGlvbiBtZW1vaXplKGZuKSB7CiAgbGV0IHNlbGYsCiAgICBzdG9yYWdlID0ge307CiAgY29uc3QgdiA9IFZmbkRlY29yYXRvcigoa2V5LCB2YWx1ZSkgPT4gKHZhbHVlICE9PSB1bmRlZmluZWQgPyAoc3RvcmFnZVtrZXldID0gdmFsdWUpIDogc3RvcmFnZVtrZXldKSk7CiAgc2VsZiA9IGZ1bmN0aW9uKGtleSwgLi4uYXJncykgewogICAgbGV0IHI7CgogICAgaWYoKHIgPSB2LmdldChrZXkpKSkgcmV0dXJuIHI7CiAgICByID0gZm4uY2FsbCh0aGlzLCBrZXksIC4uLmFyZ3MpOwogICAgdi5zZXQoa2V5LCByKTsKICAgIHJldHVybiByOwogIH07CiAgc2VsZi5jYWNoZSA9IHN0b3JhZ2U7CiAgcmV0dXJuIE9iamVjdC5mcmVlemUoc2VsZik7Cn0pOwoKZXhwb3J0IGNvbnN0IERlYnVnRmxhZ3MgPSAoZ2xvYmFsVGhpcy5EZWJ1Z0ZsYWdzID0gVXRpbC5tZW1vaXplKChlbnZpcm9uID0gKGdsb2JhbFRoaXMucHJvY2VzcyAmJiBwcm9jZXNzLmVudlsnREVCVUcnXSkgfHwgJycpID0+IHsKICBsZXQgYSA9IEFycmF5LmlzQXJyYXkoZW52aXJvbikgPyBlbnZpcm9uIDogZW52aXJvbi5zcGxpdCgvW15BLVphLXowLTlfXSsvZyk7CiAgYSA9IGEuZmlsdGVyKG4gPT4gbiAhPT0gJycpOwogIGEgPSBhLnJlZHVjZSgoYWNjLCBuKSA9PiB7CiAgICBhY2Nbbl0gPSB0cnVlOwogICAgcmV0dXJuIGFjYzsKICB9LCB7fSk7CiAgcmV0dXJuIGE7Cn0pKTsKCmdsb2JhbFRoaXMuR2V0Q2xhc3NlcyA9IGZ1bmN0aW9uKiBHZXRDbGFzc2VzKG9iaikgewogIGxldCBrZXlzID0gR2V0S2V5cyhvYmopOwoKICBmb3IobGV0IG5hbWUgb2Yga2V5cykgewogICAgdHJ5IHsKICAgICAgaWYoVXRpbC5pc0NvbnN0cnVjdG9yKG9ialtuYW1lXSkpIHlpZWxkIFtuYW1lLCBvYmpbbmFtZV1dOwogICAgfSBjYXRjaChlKSB7fQogIH0KCiAgLy8gY29uc29sZS5sb2coImRlc2M6IiwgZGVzYyk7CiAgcmV0dXJuIGRlc2M7Cn07CgpleHBvcnQgZnVuY3Rpb24gTWFwcGVyKG1hcCA9IG5ldyBXZWFrTWFwKCkpIHsKICBsZXQgc2VsZjsKICBzZWxmID0gZnVuY3Rpb24oa2V5LCB2YWx1ZSkgewogICAgaWYodmFsdWUgPT09IHVuZGVmaW5lZCkgdmFsdWUgPSBtYXAuZ2V0KGtleSk7CiAgICBlbHNlIG1hcC5zZXQoa2V5LCB2YWx1ZSk7CiAgICByZXR1cm4gdmFsdWU7CiAgfTsKICByZXR1cm4gT2JqZWN0LnNldFByb3RvdHlwZU9mKHNlbGYsIE1hcHBlci5wcm90b3R5cGUpOwp9Ck1hcHBlci5wcm90b3R5cGUgPSBuZXcgRnVuY3Rpb24oKTsKTWFwcGVyLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IE1hcHBlcjsKCmV4cG9ydCBmdW5jdGlvbiBEZWZhdWx0Q29uc3RydWN0b3IobWFwcGVyLCBmbiA9ICguLi5hcmdzKSA9PiBuZXcgT2JqZWN0KC4uLmFyZ3MpKSB7CiAgbGV0IHNlbGY7CiAgc2VsZiA9IGZ1bmN0aW9uKC4uLmFyZ3MpIHsKICAgIGxldCBba2V5LCB2YWx1ZV0gPSBhcmdzOwogICAgaWYoYXJncy5sZW5ndGggPD0gMSkgewogICAgICBpZighKHZhbHVlID0gbWFwLmdldChrZXkpKSkgewogICAgICAgIHZhbHVlID0gZm4oLi4uYXJncy5zbGljZSgxKSk7CiAgICAgICAgbWFwLnNldChrZXksIHZhbHVlKTsKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgbWFwLnNldChrZXksIHZhbHVlKTsKICAgIH0KICAgIHJldHVybiB2YWx1ZTsKICB9OwogIHJldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc2VsZiwgRGVmYXVsdENvbnN0cnVjdG9yLnByb3RvdHlwZSk7Cn0KRGVmYXVsdENvbnN0cnVjdG9yLnByb3RvdHlwZSA9IG5ldyBGdW5jdGlvbigpOwpEZWZhdWx0Q29uc3RydWN0b3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gRGVmYXVsdENvbnN0cnVjdG9yOwoKZXhwb3J0IGZ1bmN0aW9uIEV2ZW50TG9nZ2VyKGluc3RhbmNlID0ge30sIGNhbGxiYWNrID0gKG5hbWUsIGV2ZW50LCB0aGlzT2JqKSA9PiBjb25zb2xlLmxvZygnRXZlbnRMb2dnZXInLCB7IG5hbWUsIGV2ZW50LCB0aGlzT2JqIH0pKSB7CiAgZnVuY3Rpb24gV3JhcEV2ZW50KGhhbmRsZXIsIG5hbWUpIHsKICAgIHJldHVybiBmdW5jdGlvbihlKSB7CiAgICAgIHJldHVybiBjYWxsYmFjayhuYW1lLCBlLCB0aGlzKTsKICAgIH07CiAgfQoKICByZXR1cm4gbmV3IFByb3h5KGluc3RhbmNlLCB7CiAgICBnZXQob2JqLCBwcm9wKSB7CiAgICAgIGlmKHByb3Auc3RhcnRzV2l0aCgnb24nKSkgewogICAgICAgIHJldHVybiBXcmFwRXZlbnQob2JqW3Byb3BdLCBwcm9wLnNsaWNlKDIpKTsKICAgICAgfQogICAgICByZXR1cm4gb2JqW3Byb3BdOwogICAgfQogIH0pOwp9CgovKiogQGludGVyZmFjZSBNZXNzYWdlUmVjZWl2ZXIgKi8KZXhwb3J0IGNsYXNzIE1lc3NhZ2VSZWNlaXZlciBleHRlbmRzIEV2ZW50RW1pdHRlciB7CiAgc3RhdGljIFtTeW1ib2wuaGFzSW5zdGFuY2VdKGluc3RhbmNlKSB7CiAgICByZXR1cm4gJ29ubWVzc2FnZScgaW4gaW5zdGFuY2U7CiAgfQoKICAvKiogQGFic3RyYWN0ICovCiAgb25tZXNzYWdlKG1zZykgewogICAgdGhyb3cgbmV3IEVycm9yKGBNZXNzYWdlUmVjZWl2ZXIub25tZXNzYWdlIHVuaW1wbGVtZW50ZWRgKTsKICB9Cn0KCi8qKiBAaW50ZXJmYWNlIE1lc3NhZ2VUcmFuc21pdHRlciAqLwpleHBvcnQgY2xhc3MgTWVzc2FnZVRyYW5zbWl0dGVyIHsKICBzdGF0aWMgW1N5bWJvbC5oYXNJbnN0YW5jZV0oaW5zdGFuY2UpIHsKICAgIHJldHVybiB0eXBlb2Ygc2VuZE1lc3NhZ2UgPT0gJ2Z1bmN0aW9uJzsKICB9CiAgLyoqIEBhYnN0cmFjdCAqLwogIHNlbmRNZXNzYWdlKCkgewogICAgdGhyb3cgbmV3IEVycm9yKGBNZXNzYWdlUmVjZWl2ZXIuc2VuZE1lc3NhZ2UgdW5pbXBsZW1lbnRlZGApOwogIH0KfQoKLyoqCiAqIEBpbnRlcmZhY2UgTWVzc2FnZVRyYW5zY2VpdmVyCiAqIEBtaXhlcyBNZXNzYWdlUmVjZWl2ZXIKICogQG1peGVzIE1lc3NhZ2VUcmFuc21pdHRlcgogKi8KZXhwb3J0IGZ1bmN0aW9uIE1lc3NhZ2VUcmFuc2NlaXZlcigpIHt9CgpPYmplY3QuYXNzaWduKE1lc3NhZ2VUcmFuc2NlaXZlci5wcm90b3R5cGUsIE1lc3NhZ2VSZWNlaXZlci5wcm90b3R5cGUsIE1lc3NhZ2VUcmFuc21pdHRlci5wcm90b3R5cGUpOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KE1lc3NhZ2VUcmFuc2NlaXZlciwgU3ltYm9sLmhhc0luc3RhbmNlLCB7CiAgdmFsdWU6IGluc3RhbmNlID0+IFtNZXNzYWdlUmVjZWl2ZXIsIE1lc3NhZ2VUcmFuc21pdHRlcl0uZXZlcnkoY3RvciA9PiBjdG9yW1N5bWJvbC5oYXNJbnN0YW5jZV0oaW5zdGFuY2UpKQp9KTsKCmNvbnN0IGNvZGVjcyA9IHsKICBub25lKCkgewogICAgcmV0dXJuIHsKICAgICAgbmFtZTogJ25vbmUnLAogICAgICBlbmNvZGU6IHYgPT4gdiwKICAgICAgZGVjb2RlOiB2ID0+IHYKICAgIH07CiAgfSwKICBqc29uKHZlcmJvc2UgPSBmYWxzZSkgewogICAgcmV0dXJuIHsKICAgICAgbmFtZTogJ2pzb24nLAogICAgICBlbmNvZGU6IHYgPT4gSlNPTi5zdHJpbmdpZnkodiwgLi4uKHZlcmJvc2UgPyBbbnVsbCwgMl0gOiBbXSkpLAogICAgICBkZWNvZGU6IHYgPT4gSlNPTi5wYXJzZSh2KQogICAgfTsKICB9Cn07CgppZihnbG9iYWxUaGlzLmluc3BlY3QpIHsKICBjb2RlY3MuanMgPSBmdW5jdGlvbiBqcyh2ZXJib3NlID0gZmFsc2UpIHsKICAgIHJldHVybiB7CiAgICAgIG5hbWU6ICdqcycsCiAgICAgIGVuY29kZTogdiA9PiBpbnNwZWN0KHYsIHsgY29sb3JzOiBmYWxzZSwgY29tcGFjdDogdmVyYm9zZSA/IGZhbHNlIDogLTIgfSksCiAgICAgIGRlY29kZTogdiA9PiBldmFsKGAoJHt2fSlgKQogICAgfTsKICB9Owp9CgppZihnbG9iYWxUaGlzLmJqc29uKSB7CiAgY29kZWNzLmJqc29uID0gZnVuY3Rpb24gYmpzb24oKSB7CiAgICByZXR1cm4gewogICAgICBuYW1lOiAnYmpzb24nLAogICAgICBlbmNvZGU6IHYgPT4gYmpzb24ud3JpdGUodiksCiAgICAgIGRlY29kZTogdiA9PiBianNvbi5yZWFkKHYpCiAgICB9OwogIH07Cn0KCmV4cG9ydCBmdW5jdGlvbiBSUENBcGkoYykgewogIGxldCBhcGk7CiAgYXBpID0gZGVmaW5lKG5ldy50YXJnZXQgPyB0aGlzIDogbmV3IFJQQ0FwaShjKSwgeyBjb25uZWN0aW9uOiBjIH0pOwoKICByZXR1cm4gYXBpOwp9Cgpmb3IobGV0IGNtZCBvZiBbJ2xpc3QnLCAnbmV3JywgJ21ldGhvZHMnLCAncHJvcGVydGllcycsICdrZXlzJywgJ25hbWVzJywgJ3N5bWJvbHMnLCAnY2FsbCcsICdzZXQnLCAnZ2V0J10pIFJQQ0FwaS5wcm90b3R5cGVbY21kXSA9IE1ha2VDb21tYW5kRnVuY3Rpb24oY21kLCBvID0+IG8uY29ubmVjdGlvbik7CgpleHBvcnQgZnVuY3Rpb24gUlBDUHJveHkoYykgewogIGxldCBvYmogPSBkZWZpbmUobmV3LnRhcmdldCA/IHRoaXMgOiBuZXcgUlBDUHJveHkoYyksIHsgY29ubmVjdGlvbjogYyB9KTsKCiAgcmV0dXJuIG5ldyBQcm94eShvYmosIHt9KTsKfQoKZXhwb3J0IGZ1bmN0aW9uIFJQQ09iamVjdChpZCwgY29ubmVjdGlvbikgewogIGxldCBvYmogPSBkZWZpbmUobmV3LnRhcmdldCA/IHRoaXMgOiBuZXcgUlBDT2JqZWN0KGlkKSwgeyBjb25uZWN0aW9uLCBpZCB9KTsKICByZXR1cm4gYXBpLm1ldGhvZHMoeyBpZCB9KS50aGVuKHIgPT4gT2JqZWN0LmFzc2lnbihvYmosIHIpKTsKfQpSUENPYmplY3QucHJvdG90eXBlW1N5bWJvbC50b1N0cmluZ1RhZ10gPSAnUlBDT2JqZWN0JzsKCmV4cG9ydCBmdW5jdGlvbiBSUENGYWN0b3J5KGFwaSkgewogIGFzeW5jIGZ1bmN0aW9uIEZhY3Rvcnkob3B0cykgewogICAgaWYodHlwZW9mIG9wdHMgPT0gJ3N0cmluZycpIHsKICAgICAgY29uc3QgbmFtZSA9IG9wdHM7CiAgICAgIG9wdHMgPSB7IGNsYXNzOiBuYW1lIH07CiAgICB9CiAgICBsZXQgaW5zdGFuY2UgPSBhd2FpdCBhcGkubmV3KG9wdHMpOwogICAgbGV0IHsgY29ubmVjdGlvbiB9ID0gYXBpOwogICAgbGV0IG9iaiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZih7IGluc3RhbmNlLCBjb25uZWN0aW9uIH0sIFJQQ09iamVjdC5wcm90b3R5cGUpOwoKICAgIGRlZmluZShvYmosIGF3YWl0IGFwaS5tZXRob2RzKGluc3RhbmNlKSk7CiAgICByZXR1cm4gb2JqOwogIH0KCiAgcmV0dXJuIEZhY3Rvcnk7Cn0KUlBDRmFjdG9yeS5wcm90b3R5cGUgPSBuZXcgRnVuY3Rpb24oKTsKClJQQ0ZhY3RvcnkucHJvdG90eXBlW1N5bWJvbC50b1N0cmluZ1RhZ10gPSAnUlBDRmFjdG9yeSc7CgovKioKICogQGludGVyZmFjZSBDb25uZWN0aW9uCiAqLwpleHBvcnQgY2xhc3MgQ29ubmVjdGlvbiBleHRlbmRzIE1lc3NhZ2VUcmFuc2NlaXZlciB7CiAgc3RhdGljIGZyb21Tb2NrZXQgPSBuZXcgV2Vha01hcCgpOwoKICBsYXN0U2VxID0gMDsKCiAgc3RhdGljIGVxdWFsKGEsIGIpIHsKICAgIHJldHVybiAoYS5zb2NrZXQgIT0gbnVsbCAmJiBhLnNvY2tldCA9PT0gYi5zb2NrZXQpIHx8ICh0eXBlb2YgYS5mZCA9PSAnbnVtYmVyJyAmJiBhLmZkID09PSBiLmZkKTsKICB9CiAgc3RhdGljIGdldCBsYXN0KCkgewogICAgcmV0dXJuIHRoaXMubGlzdC5sYXN0OwogIH0KCiAgbWFrZVNlcSgpIHsKICAgIHJldHVybiArK3RoaXMubGFzdFNlcTsKICB9CgogIGNvbnN0cnVjdG9yKHNvY2tldCwgaW5zdGFuY2UsIGxvZywgY29kZWMgPSAnbm9uZScpIHsKICAgIHN1cGVyKCk7CiAgICB0aGlzLmZkID0gc29ja2V0LmZkOwogICAgZGVmaW5lKHRoaXMsIHsKICAgICAgc2VxOiAwLAogICAgICBzb2NrZXQsCiAgICAgIGV4Y2VwdGlvbjogbnVsbCwKICAgICAgbG9nKC4uLmFyZ3MpIHsKICAgICAgICBpZihEZWJ1Z0ZsYWdzKClbdGhpc1tTeW1ib2wudG9TdHJpbmdUYWddXSkgY29uc29sZS5sb2coLi4uYXJncyk7CiAgICAgIH0sCiAgICAgIG1lc3NhZ2VzOiB7IHJlcXVlc3RzOiB7fSwgcmVzcG9uc2VzOiB7fSB9CiAgICB9KTsKICAgIGRlZmluZSh0aGlzLCB0eXBlb2YgY29kZWMgPT0gJ3N0cmluZycgJiYgY29kZWNzW2NvZGVjXSA/IHsgY29kZWNOYW1lOiBjb2RlYywgY29kZWM6IGNvZGVjc1tjb2RlY10oKSB9IDoge30pOwogICAgZGVmaW5lKHRoaXMsIHR5cGVvZiBjb2RlYyA9PSAnb2JqZWN0JyAmJiBjb2RlYy5uYW1lID8geyBjb2RlY05hbWU6IGNvZGVjLm5hbWUsIGNvZGVjIH0gOiB7fSk7CiAgICBDb25uZWN0aW9uLnNldC5hZGQodGhpcyk7CiAgICBDb25uZWN0aW9uLmZyb21Tb2NrZXQuc2V0KHNvY2tldCwgdGhpcyk7CiAgfQoKICBlcnJvcihtZXNzYWdlKSB7CiAgICBjb25zdCB7IHNvY2tldCB9ID0gdGhpczsKICAgIHRoaXMubG9nKGBFUlJPUjogJHttZXNzYWdlfWApOwogICAgdGhpcy5leGNlcHRpb24gPSBuZXcgRXJyb3IobWVzc2FnZSk7CiAgICB0aGlzLmNsb3NlKHNvY2tldC5DTE9TRV9TVEFUVVNfUFJPVE9DT0xfRVJSIHx8IDEwMDAsIG1lc3NhZ2Uuc2xpY2UoMCwgMTI4KSk7CiAgICByZXR1cm4gdGhpcy5leGNlcHRpb247CiAgfQoKICBjbG9zZSguLi5hcmdzKSB7CiAgICBjb25zdCB7IHNvY2tldCB9ID0gdGhpczsKICAgIHRoaXMubG9nKCdjbG9zZSgnLCAuLi5hcmdzLCAnKScpOwogICAgc29ja2V0LmNsb3NlKCk7CiAgICBkZWxldGUgdGhpcy5zb2NrZXQ7CiAgICBkZWxldGUgdGhpcy5mZDsKICAgIHRoaXMuY29ubmVjdGVkID0gZmFsc2U7CiAgfQoKICBvbm1lc3NhZ2UobXNnKSB7CiAgICBsZXQgeyBjb2RlYywgY29kZWNOYW1lIH0gPSB0aGlzOwogICAgaWYoIW1zZykgcmV0dXJuOwogICAgaWYodHlwZW9mIG1zZyA9PSAnc3RyaW5nJyAmJiBtc2cudHJpbSgpID09ICcnKSByZXR1cm47CiAgICAvL3RoaXMubG9nKCdDb25uZWN0aW9uLm9ubWVzc2FnZScsIHsgbXNnLCBjb2RlYywgY29kZWNOYW1lIH0pOwogICAgbGV0IGRhdGE7CiAgICB0cnkgewogICAgICBkYXRhID0gY29kZWMuZGVjb2RlKChtc2cgJiYgbXNnLmRhdGEpIHx8IG1zZyk7CiAgICB9IGNhdGNoKGVycikgewogICAgICB0aHJvdyB0aGlzLmVycm9yKGBDb25uZWN0aW9uLm9ubWVzc2FnZSAke3RoaXMuY29kZWMubmFtZX0gcGFyc2UgZXJyb3I6ICckeyhlcnIgJiYgZXJyLm1lc3NhZ2UpIHx8IG1zZ30nYCArIGVyci5zdGFjayk7CiAgICAgIHJldHVybiB0aGlzLmV4Y2VwdGlvbjsKICAgIH0KICAgIGxldCByZXNwb25zZSA9IHRoaXMucHJvY2Vzc01lc3NhZ2UoZGF0YSk7CiAgICAvL3RoaXMubG9nKCdDb25uZWN0aW9uLm9ubWVzc2FnZScsIHsgZGF0YSwgcmVzcG9uc2UgfSk7CiAgICBpZihpc1RoZW5hYmxlKHJlc3BvbnNlKSkgcmVzcG9uc2UudGhlbihyID0+IHRoaXMuc2VuZE1lc3NhZ2UocikpOwogICAgZWxzZSBpZihyZXNwb25zZSAhPT0gdW5kZWZpbmVkKSB0aGlzLnNlbmRNZXNzYWdlKHJlc3BvbnNlKTsKICB9CgogIHByb2Nlc3NNZXNzYWdlKGRhdGEpIHsKICAgIHRoaXMubG9nKCdDb25uZWN0aW9uJywgJy5wcm9jZXNzTWVzc2FnZScsIHsgZGF0YSB9KTsKICAgIHRocm93IG5ldyBFcnJvcignVmlydHVhbCBtZXRob2QnKTsKICB9CgogIG9uY29ubmVjdCguLi5hcmdzKSB7CmNvbnNvbGUubG9nKCJDb25uZWN0aW9uLm9uY29ubmVjdCIsIHthcmdzfSwgdGhpcyk7CiAgfSAvLz0gTG9nV3JhcCgnQ29ubmVjdGlvbi5vbmNvbm5lY3QnKTsKICBvbm9wZW4gPSBMb2dXcmFwKCdDb25uZWN0aW9uLm9ub3BlbicpOwoKICAvKiAgb25vcGVuKGFyZykgewogICAgdGhpcy5sb2coJ0Nvbm5lY3Rpb24ub25vcGVuJywgeyBhcmcgfSk7CiAgfSovCgogIG9ucG9uZyhkYXRhKSB7CiAgICB0aGlzLmxvZygnQ29ubmVjdGlvbi5vbnBvbmc6JywgZGF0YSk7CiAgfQoKICBvbmVycm9yKGVycm9yKSB7CiAgICB0aGlzLmxvZygnQ29ubmVjdGlvbi5vbmVycm9yJywgZXJyb3IgPyBgICgke2Vycm9yfSlgIDogJycpOwogICAgdGhpcy5jb25uZWN0ZWQgPSBmYWxzZTsKICAgIHRoaXMuY2xlYW51cCgpOwogIH0KCiAgb25jbG9zZShyZWFzb24pIHsKICAgIHRoaXMubG9nKCdDb25uZWN0aW9uLm9uY2xvc2UnLCByZWFzb24gPyBgICgke3JlYXNvbn0pYCA6ICcnKTsKICAgIHRoaXMuY29ubmVjdGVkID0gZmFsc2U7CiAgICB0aGlzLmNsZWFudXAoKTsKICB9CgogIGNsZWFudXAoKSB7CiAgICBpZih0aGlzLmluc3RhbmNlcykgZm9yKGxldCBpZCBpbiB0aGlzLmluc3RhbmNlcykgZGVsZXRlIHRoaXMuaW5zdGFuY2VzW2lkXTsKICB9CgogIHNlbmRNZXNzYWdlKG9iaikgewogICAgLy90aGlzLmxvZygnQ29ubmVjdGlvbi5zZW5kTWVzc2FnZScsIG9iaik7CiAgICBpZih0eXBlb2Ygb2JqID09ICdvYmplY3QnKQogICAgICBpZih0eXBlb2Ygb2JqLnNlcSA9PSAnbnVtYmVyJykgewogICAgICAgIGlmKHRoaXMubWVzc2FnZXMgJiYgdGhpcy5tZXNzYWdlcy5yZXF1ZXN0cykgdGhpcy5tZXNzYWdlcy5yZXF1ZXN0c1tvYmouc2VxXSA9IG9iajsKICAgICAgfSBlbHNlIHsKICAgICAgICBvYmouc2VxID0gdGhpcy5tYWtlU2VxKCk7CiAgICAgIH0KICAgIGxldCBtc2cgPSB0eXBlb2Ygb2JqICE9ICdzdHJpbmcnID8gdGhpcy5jb2RlYy5lbmNvZGUob2JqKSA6IG9iajsKCiAgICB0aGlzLnNvY2tldC5zZW5kKG1zZyk7CiAgfQoKICBzZW5kQ29tbWFuZChjb21tYW5kLCBwYXJhbXMgPSB7fSkgewogICAgbGV0IG1lc3NhZ2UgPSB7IGNvbW1hbmQsIC4uLnBhcmFtcyB9OwogICAgdGhpcy5sb2coJ0Nvbm5lY3Rpb24uc2VuZENvbW1hbmQnLCB7IGNvbW1hbmQsIHBhcmFtcywgbWVzc2FnZSB9KTsKICAgIGlmKHR5cGVvZiBwYXJhbXMgPT0gJ29iamVjdCcgJiYgcGFyYW1zICE9IG51bGwgJiYgdHlwZW9mIHBhcmFtcy5zZXEgIT0gJ251bWJlcicpIHBhcmFtcy5zZXEgPSB0aGlzLnNlcSA9ICh0aGlzLnNlcSB8IDApICsgMTsKICAgIGlmKHRoaXMubWVzc2FnZXMgJiYgdGhpcy5tZXNzYWdlcy5yZXF1ZXN0cykgaWYgKHR5cGVvZiBwYXJhbXMuc2VxID09ICdudW1iZXInKSB0aGlzLm1lc3NhZ2VzLnJlcXVlc3RzW3BhcmFtcy5zZXFdID0gbWVzc2FnZTsKICAgIGlmKHRoaXMubWVzc2FnZXMgJiYgdGhpcy5tZXNzYWdlcy5yZXF1ZXN0cykgdGhpcy5tZXNzYWdlcy5yZXF1ZXN0c1twYXJhbXMuc2VxXSA9IG1lc3NhZ2U7CiAgICB0aGlzLnNlbmRNZXNzYWdlKG1lc3NhZ2UpOwogIH0KCiAgc3RhdGljIGdldENhbGxiYWNrcyhpbnN0YW5jZSwgdmVyYm9zaXR5ID0gMCkgewogICAgY29uc3QgeyBjbGFzc2VzLCBmZGxpc3QsIGxvZyB9ID0gaW5zdGFuY2U7CiAgICBjb25zdCBjdG9yID0gdGhpczsKICAgIGNvbnN0IHZlcmJvc2UgPSB2ZXJib3NpdHkgPiAxID8gKC4uLmFyZ3MpID0+IGxvZygnVkVSQk9TRScsIC4uLmFyZ3MpIDogKCkgPT4ge307CiAgICAvL2xvZyhgJHtjdG9yLm5hbWV9LmdldENhbGxiYWNrc2AsIHsgaW5zdGFuY2UsIGxvZywgdmVyYm9zaXR5IH0pOwogICAgY29uc3QgaGFuZGxlID0gKHNvY2ssIGV2ZW50LCAuLi5hcmdzKSA9PiB7CiAgICAgIGxldCBjb25uLCBvYmo7CiAgICAgIGlmKChjb25uID0gZmRsaXN0W3NvY2suZmRdKSkgewogICAgICAgIHZlcmJvc2UoYEhhbmRsZSBmZCAjJHtzb2NrLmZkfSAke2V2ZW50fWApOwogICAgICAgIGNhbGxIYW5kbGVyKGNvbm4sIGV2ZW50LCAuLi5hcmdzKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE5vIGNvbm5lY3Rpb24gZm9yIGZkICMke3NvY2suZmR9IWApOwogICAgICB9CiAgICAgIG9iaiA9IHsgdGhlbjogZm4gPT4gKGZuKHNvY2suZmQpLCBvYmopIH07CiAgICAgIHJldHVybiBvYmo7CiAgICB9OwogICAgY29uc3QgcmVtb3ZlID0gc29jayA9PiB7CiAgICAgIGNvbnN0IHsgZmQgfSA9IHNvY2s7CiAgICAgIGRlbGV0ZSBmZGxpc3RbZmRdOwogICAgfTsKICAgIHJldHVybiB7CiAgICAgIG9uQ29ubmVjdChzb2NrKSB7CiAgICAgICAgdmVyYm9zZShgQ29ubmVjdGVkYCwgeyBmZDogc29jay5mZCB9LCBjdG9yLm5hbWUpOwogICAgICAgIGxldCBjb25uZWN0aW9uID0gZmRsaXN0W3NvY2suZmRdOwogICAgICAgIGlmKCFjb25uZWN0aW9uKSBjb25uZWN0aW9uID0gbmV3IGN0b3Ioc29jaywgaW5zdGFuY2UsIGxvZywgJ2pzb24nLCBjbGFzc2VzKTsKICAgICAgICB2ZXJib3NlKGBDb25uZWN0ZWRgLCB7IGNvbm5lY3Rpb24gfSk7CiAgICAgICAgZmRsaXN0W3NvY2suZmRdID0gY29ubmVjdGlvbjsKICAgICAgICBoYW5kbGUoc29jaywgJ2Nvbm5lY3QnKTsKICAgICAgfSwKICAgICAgb25PcGVuKHNvY2spIHsKICAgICAgICB2ZXJib3NlKGBPcGVuZWRgLCB7IGZkOiBzb2NrLmZkIH0sIGN0b3IubmFtZSk7CiAgICAgICAgZmRsaXN0W3NvY2suZmRdID0gbmV3IGN0b3Ioc29jaywgaW5zdGFuY2UsIGxvZywgJ2pzb24nLCBjbGFzc2VzKTsKICAgICAgICBoYW5kbGUoc29jaywgJ29wZW4nKTsKICAgICAgfSwKICAgICAgb25NZXNzYWdlKHNvY2ssIG1zZykgewogICAgICAgIHZlcmJvc2UoYE1lc3NhZ2VgLCB7IGZkOiBzb2NrLmZkIH0sIG1zZyk7CiAgICAgICAgaGFuZGxlKHNvY2ssICdtZXNzYWdlJywgbXNnKTsKICAgICAgfSwKICAgICAgb25FcnJvcihzb2NrLCBlcnJvcikgewogICAgICAgIHZlcmJvc2UoYEVycm9yYCwgeyBmZDogc29jay5mZCB9LCBlcnJvcik7CiAgICAgICAgY2FsbEhhbmRsZXIoaW5zdGFuY2UsICdlcnJvcicsIGVycm9yKTsKICAgICAgICBoYW5kbGUoc29jaywgJ2Vycm9yJywgZXJyb3IpOwogICAgICAgIHJlbW92ZShzb2NrKTsKICAgICAgfSwKICAgICAgb25DbG9zZShzb2NrLCB3aHkpIHsKICAgICAgICB2ZXJib3NlKGBDbG9zZWRgLCB7IGZkOiBzb2NrLmZkIH0sIHdoeSk7CiAgICAgICAgaGFuZGxlKHNvY2ssICdjbG9zZScsIHdoeSk7CiAgICAgICAgcmVtb3ZlKHNvY2spOwogICAgICB9LAogICAgICBvblBvbmcoc29jaywgZGF0YSkgewogICAgICAgIHZlcmJvc2UoYFBvbmdgLCB7IGZkOiBzb2NrLmZkIH0sIGRhdGEpOwogICAgICAgIGhhbmRsZShzb2NrLCAncG9uZycsIGRhdGEpOwogICAgICB9CiAgICB9OwogIH0KfQoKZGVmaW5lKENvbm5lY3Rpb24ucHJvdG90eXBlLCB7IFtTeW1ib2wudG9TdHJpbmdUYWddOiAnQ29ubmVjdGlvbicgfSk7CgpDb25uZWN0aW9uLmxpc3QgPSBbXTsKCmZ1bmN0aW9uIFJQQ1NlcnZlckVuZHBvaW50KGNsYXNzZXMgPSB7fSkgewogIHJldHVybiB7CiAgICBuZXcoeyBjbGFzczogbmFtZSwgYXJncyA9IFtdIH0pIHsKICAgICAgdGhpcy5sb2coJ1JQQ1NlcnZlckVuZHBvaW50Lm5ldycpOwogICAgICBsZXQgb2JqLCByZXQsIGlkOwogICAgICB0cnkgewogICAgICAgIG9iaiA9IG5ldyB0aGlzLmNsYXNzZXNbbmFtZV0oLi4uYXJncyk7CiAgICAgICAgaWQgPSB0aGlzLm1ha2VJZCgpOwogICAgICAgIHRoaXMuaW5zdGFuY2VzW2lkXSA9IG9iajsKICAgICAgfSBjYXRjaChlKSB7CiAgICAgICAgcmV0dXJuIHN0YXR1c1Jlc3BvbnNlKGZhbHNlLCBlLm1lc3NhZ2UpOwogICAgICB9CiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIHJlc3VsdDogeyBpZCwgbmFtZSB9IH07CiAgICB9LAogICAgbGlzdCgpIHsKICAgICAgdGhpcy5sb2coJ1JQQ1NlcnZlckVuZHBvaW50Lmxpc3QnKTsKCiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIHJlc3VsdDogT2JqZWN0LmtleXMoeyAuLi5jbGFzc2VzLCAuLi50aGlzLmNsYXNzZXMgfSkgfTsKICAgIH0sCiAgICBkZWxldGU6IG9iamVjdENvbW1hbmQoKHsgaWQgfSwgcmVzcG9uZCkgPT4gewogICAgICBkZWxldGUgdGhpcy5pbnN0YW5jZXNbaWRdOwogICAgICByZXR1cm4gcmVzcG9uZCh0cnVlKTsKICAgIH0pLAogICAgY2FsbDogb2JqZWN0Q29tbWFuZCgoeyBvYmosIG1ldGhvZCwgYXJncyA9IFtdIH0sIHJlc3BvbmQpID0+IHsKICAgICAgaWYobWV0aG9kIGluIG9iaiAmJiB0eXBlb2Ygb2JqW21ldGhvZF0gPT0gJ2Z1bmN0aW9uJykgewogICAgICAgIGNvbnN0IHJlc3VsdCA9IG9ialttZXRob2RdKC4uLmFyZ3MpOwogICAgICAgIGlmKGlzVGhlbmFibGUocmVzdWx0KSkgcmV0dXJuIHJlc3VsdC50aGVuKHJlc3VsdCA9PiByZXNwb25kKHRydWUsIHJlc3VsdCkpLmNhdGNoKGVycm9yID0+IHJlc3BvbmQoZmFsc2UsIGVycm9yKSk7CiAgICAgICAgcmV0dXJuIHJlc3BvbmQodHJ1ZSwgcmVzdWx0KTsKICAgICAgfQogICAgICByZXR1cm4gcmVzcG9uZChmYWxzZSwgYE5vIHN1Y2ggbWV0aG9kIG9uIG9iamVjdCAjJHtpZH06ICR7bWV0aG9kfWApOwogICAgfSksCiAgICBrZXlzOiBvYmplY3RDb21tYW5kKCh7IG9iaiwgZW51bWVyYWJsZSA9IHRydWUgfSwgcmVzcG9uZCkgPT4gewogICAgICByZXR1cm4gcmVzcG9uZCh0cnVlLCBHZXRQcm9wZXJ0aWVzKG9iaiwgZW51bWVyYWJsZSA/IG9iaiA9PiBPYmplY3Qua2V5cyhvYmopIDogb2JqID0+IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG9iaikpKTsKICAgIH0pLAogICAgbmFtZXM6IG9iamVjdENvbW1hbmQoKHsgb2JqLCBlbnVtZXJhYmxlID0gdHJ1ZSB9LCByZXNwb25kKSA9PiB7CiAgICAgIHJldHVybiByZXNwb25kKAogICAgICAgIHRydWUsCiAgICAgICAgR2V0UHJvcGVydGllcyhvYmosIG9iaiA9PiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhvYmopKQogICAgICApOwogICAgfSksCiAgICBzeW1ib2xzOiBvYmplY3RDb21tYW5kKCh7IG9iaiwgZW51bWVyYWJsZSA9IHRydWUgfSwgcmVzcG9uZCkgPT4gewogICAgICByZXR1cm4gcmVzcG9uZCgKICAgICAgICB0cnVlLAogICAgICAgIEdldFByb3BlcnRpZXMob2JqLCBvYmogPT4gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmopKS5tYXAoc3ltID0+IHN5bS5kZXNjcmlwdGlvbikKICAgICAgKTsKICAgIH0pLAogICAgcHJvcGVydGllczogTWFrZUxpc3RDb21tYW5kKHYgPT4gdHlwZW9mIHYgIT0gJ2Z1bmN0aW9uJyksCiAgICBtZXRob2RzOiBNYWtlTGlzdENvbW1hbmQodiA9PiB0eXBlb2YgdiA9PSAnZnVuY3Rpb24nLCB7IGVudW1lcmFibGU6IGZhbHNlIH0pLAogICAgZ2V0OiBvYmplY3RDb21tYW5kKCh7IG9iaiwgcHJvcGVydHkgfSwgcmVzcG9uZCkgPT4gewogICAgICBpZihwcm9wZXJ0eSBpbiBvYmogJiYgdHlwZW9mIG9ialtwcm9wZXJ0eV0gIT0gJ2Z1bmN0aW9uJykgewogICAgICAgIGNvbnN0IHJlc3VsdCA9IG9ialtwcm9wZXJ0eV07CiAgICAgICAgcmV0dXJuIHJlc3BvbmQodHJ1ZSwgcmVzdWx0KTsKICAgICAgfQogICAgICByZXR1cm4gcmVzcG9uZChmYWxzZSwgYE5vIHN1Y2ggcHJvcGVydHkgb24gb2JqZWN0ICMke2lkfTogJHtwcm9wZXJ0eX1gKTsKICAgIH0pLAogICAgc2V0OiBvYmplY3RDb21tYW5kKCh7IG9iaiwgcHJvcGVydHksIHZhbHVlIH0sIHJlc3BvbmQpID0+IHsKICAgICAgcmV0dXJuIHJlc3BvbmQodHJ1ZSwgKG9ialtwcm9wZXJ0eV0gPSB2YWx1ZSkpOwogICAgfSkKICB9Owp9CgpleHBvcnQgY2xhc3MgUlBDU2VydmVyIGV4dGVuZHMgQ29ubmVjdGlvbiB7CiAgY29uc3RydWN0b3Ioc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYyA9IGNvZGVjcy5qc29uKGZhbHNlKSwgY2xhc3NlcykgewogICAgLy9sb2coJ1JQQ1NlcnZlci5jb25zdHJ1Y3RvcicsIHsgc29ja2V0LCBjbGFzc2VzLCBpbnN0YW5jZSwgbG9nIH0pOwogICAgc3VwZXIoc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYyk7CgogICAgbGV0IGNvbm5lY3Rpb24gPSB0aGlzOwogICAgZGVmaW5lKGNvbm5lY3Rpb24sIHsKICAgICAgY2xhc3NlcywKICAgICAgaW5zdGFuY2VzOiB7fSwKICAgICAgbGFzdElkOiAwLAogICAgICBjb25uZWN0ZWQ6IHRydWUsCiAgICAgIG1lc3NhZ2VzOiB7IHJlcXVlc3RzOiB7fSwgcmVzcG9uc2VzOiB7fSB9LAogICAgICBjb21tYW5kczogUlBDU2VydmVyRW5kcG9pbnQoKQogICAgfSk7CgogICAgUlBDU2VydmVyLnNldC5hZGQoY29ubmVjdGlvbik7CiAgfQoKICBtYWtlSWQoKSB7CiAgICByZXR1cm4gKyt0aGlzLmxhc3RJZDsKICB9CgogIHByb2Nlc3NNZXNzYWdlKGRhdGEpIHsKICAgIGxldCBmbiwKICAgICAgcmV0ID0gbnVsbDsKICAgIGlmKCEoJ2NvbW1hbmQnIGluIGRhdGEpKSByZXR1cm4gc3RhdHVzUmVzcG9uc2UoZmFsc2UsIGBObyBjb21tYW5kIHNwZWNpZmllZGApOwogICAgY29uc3QgeyBjb21tYW5kLCBzZXEsIHBhcmFtcyB9ID0gZGF0YTsKICAgIGNvbnN0IHsgY29tbWFuZHMgfSA9IHRoaXM7CiAgICBmbiA9IGNvbW1hbmRzW2NvbW1hbmRdOwogICAgdGhpcy5sb2coJ1JQQ1NlcnZlci5wcm9jZXNzTWVzc2FnZScsIHsgY29tbWFuZCwgc2VxLCBwYXJhbXMgfSk7CiAgICBpZih0eXBlb2Ygc2VxID09ICdudW1iZXInKSB0aGlzLm1lc3NhZ2VzLnJlcXVlc3RzW3NlcV0gPSBkYXRhOwogICAgaWYodHlwZW9mIGZuID09ICdmdW5jdGlvbicpIHJldHVybiBmbi5jYWxsKHRoaXMsIGRhdGEpOwogICAgc3dpdGNoIChjb21tYW5kKSB7CiAgICAgIGRlZmF1bHQ6IHsKICAgICAgICByZXQgPSBzdGF0dXNSZXNwb25zZShmYWxzZSwgYE5vIHN1Y2ggY29tbWFuZCAnJHtjb21tYW5kfSdgKTsKICAgICAgICBicmVhazsKICAgICAgfQogICAgfQogICAgcmV0dXJuIHJldDsKICB9Cn0KCmRlZmluZShSUENTZXJ2ZXIucHJvdG90eXBlLCB7IFtTeW1ib2wudG9TdHJpbmdUYWddOiAnUlBDU2VydmVyJyB9KTsKClJQQ1NlcnZlci5saXN0ID0gW107CgovKioKICogQGNsYXNzIFRoaXMgY2xhc3MgZGVzY3JpYmVzIGEgY2xpZW50IGNvbm5lY3Rpb24uCiAqCiAqIEBjbGFzcyAgICAgIFJQQ0NsaWVudAogKiBAcGFyYW0gICAgICB7T2JqZWN0fSBzb2NrZXQKICogQHBhcmFtICAgICAge09iamVjdH0gY2xhc3NlcwogKiBAcGFyYW0gICAgICB7T2JqZWN0fSBpbnN0YW5jZQogKiBAcGFyYW0gICAgICB7RnVuY3Rpb259IGluc3RhbmNlCiAqCiAqLwpleHBvcnQgY2xhc3MgUlBDQ2xpZW50IGV4dGVuZHMgQ29ubmVjdGlvbiB7CiAgY29uc3RydWN0b3Ioc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYyA9IGNvZGVjcy5qc29uKGZhbHNlKSwgY2xhc3NlcykgewogICAgc3VwZXIoc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYyk7CiAgICB0aGlzLmluc3RhbmNlcyA9IHt9OwogICAgdGhpcy5jbGFzc2VzID0gY2xhc3NlczsKICAgIHRoaXMuY29ubmVjdGVkID0gdHJ1ZTsKICAgIFJQQ0NsaWVudC5zZXQuYWRkKHRoaXMpOwogICAgLy90aGlzLmxvZygnUlBDQ2xpZW50LmNvbnN0cnVjdG9yJywgeyBzb2NrZXQsIGluc3RhbmNlLCBsb2csIGNvZGVjLCBjbGFzc2VzIH0gLyosIG5ldyBFcnJvcigpLnN0YWNrLnJlcGxhY2UoL0Vycm9yXG4/LywgJycpKi8pOwogICAgdGhpcy5vbignZXJyb3InLCBlID0+IGNvbnNvbGUuZXJyb3IoJ1JQQ0NsaWVudCcsIGUpKTsKICAgIHRoaXMub24oJ3Jlc3BvbnNlJywgciA9PiBjb25zb2xlLmxvZygnUlBDQ2xpZW50Lm9ucmVzcG9uc2UnLCByKSk7CgogICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGhpcywgeyBhcGk6IHsgZ2V0OiBtZW1vaXplKCgpID0+IG5ldyBSUENBcGkodGhpcykpIH0gfSk7CiAgfQoKICBwcm9jZXNzTWVzc2FnZShyZXNwb25zZSkgewogICAgdGhpcy5sb2coJ1JQQ0NsaWVudC5wcm9jZXNzTWVzc2FnZScsIHJlc3BvbnNlLCBuZXcgRXJyb3IoKS5zdGFjay5yZXBsYWNlKC9FcnJvclxuPy8sICcnKSk7CiAgICBjb25zdCB7IHN1Y2Nlc3MsIGVycm9yLCByZXN1bHQsIHNlcSB9ID0gcmVzcG9uc2U7CgogICAgaWYoc3VjY2VzcykgdGhpcy5lbWl0KCdyZXNwb25zZScsIHJlc3VsdCk7CiAgICBlbHNlIGlmKGVycm9yKSB0aGlzLmVtaXQoJ2Vycm9yJywgZXJyb3IpOwogIH0KCiAgY29tbWFuZChuYW1lLCBwYXJhbXMpIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZSgoYWNjZXB0LCByZWplY3QpID0+IHsKICAgICAgdGhpcy5vbmNlKCdyZXNwb25zZScsIHJlc3BvbnNlID0+IGFjY2VwdChyZXNwb25zZSkpOwogICAgICB0aGlzLm9uY2UoJ2Vycm9yJywgZSA9PiByZWplY3QoZSkpOwoKICAgICAgdGhpcy5zZW5kQ29tbWFuZChuYW1lLCBwYXJhbXMpOwogICAgfSk7CiAgfQp9CgpkZWZpbmUoUlBDQ2xpZW50LnByb3RvdHlwZSwgeyBbU3ltYm9sLnRvU3RyaW5nVGFnXTogJ1JQQ0NsaWVudCcgfSk7CgovKioKICogQGNsYXNzIENyZWF0ZXMgbmV3IFJQQyBzb2NrZXQKICoKICogQHBhcmFtICAgICAge3N0cmluZ30gICAgIFt1cmw9d2luZG93LmxvY2F0aW9uLmhyZWZdICAgICBVUkwgKHdzOi8vMTI3LjAuMC4xKSBvciBQb3J0CiAqIEBwYXJhbSAgICAgIHtmdW5jdGlvbn0gICBbc2VydmljZT1SUENTZXJ2ZXJdICBUaGUgc2VydmljZSBjb25zdHJ1Y3RvcgogKiBAcmV0dXJuICAgICB7UlBDU29ja2V0fSAgVGhlIFJQQyBzb2NrZXQuCiAqLwpleHBvcnQgZnVuY3Rpb24gUlBDU29ja2V0KHVybCwgc2VydmljZSA9IFJQQ1NlcnZlciwgdmVyYm9zaXR5ID0gMSkgewogIGlmKCFuZXcudGFyZ2V0KSByZXR1cm4gbmV3IFJQQ1NvY2tldCh1cmwsIHNlcnZpY2UsIHZlcmJvc2l0eSk7CgogIGNvbnN0IGluc3RhbmNlID0gbmV3LnRhcmdldCA/IHRoaXMgOiBuZXcgUlBDU29ja2V0KHVybCwgc2VydmljZSwgdmVyYm9zaXR5KTsKICBjb25zdCBsb2cgPSAvKmNvbnNvbGUuY29uZmlnCiAgICA/IChtc2csIC4uLmFyZ3MpID0+IHsKICAgICAgICBjb25zdCB7IGNvbnNvbGUgfSA9IGdsb2JhbFRoaXM7CiAgICAgICAgY29uc29sZSAKICAgICAgICAgIC5sb2coCiAgICAgICAgICAgIHsgbXNnIH0sCiAgICAgICAgICAgIGNvbnNvbGUuY29uZmlnKHsKICAgICAgICAgICAgICBtdWx0aWxpbmU6IGZhbHNlLAogICAgICAgICAgICAgIGNvbXBhY3Q6IGZhbHNlLAogICAgICAgICAgICAgIG1heFN0cmluZ0xlbmd0aDogMTAwLAogICAgICAgICAgICAgIHN0cmluZ0JyZWFrTmV3bGluZTogZmFsc2UsCiAgICAgICAgICAgICAgaGlkZUtleXM6IFsnb2JqJ10KICAgICAgICAgICAgfSksCiAgICAgICAgICAgIC4uLmFyZ3MKICAgICAgICAgICk7CiAgICAgIH0KICAgIDogY29uc29sZS5sb2c7ICovICguLi5hcmdzKSA9PiB7CiAgICBsZXQgdG9rID0gKGFyZ3NbMF0gfHwgJycpLnJlcGxhY2UoL1teQS1aYS16MC05X10uKi9nLCAnJyk7CgogICAgaWYoREVCVUdbdG9rXSkgY29uc29sZS5kZWJ1ZyguLi5hcmdzKTsKICAgIGVsc2UgY29uc29sZS5sb2coLi4uYXJncyk7CiAgfTsKCiAgZGVmaW5lKGluc3RhbmNlLCB7CiAgICBnZXQgZmQoKSB7CiAgICAgIGxldCByZXQgPSBPYmplY3Qua2V5cyh0aGlzLmZkbGlzdClbMF0gPz8gLTE7CiAgICAgIGlmKCFpc05hTigrcmV0KSkgcmV0ID0gK3JldDsKICAgICAgcmV0dXJuIHJldDsKICAgIH0sCiAgICBnZXQgc29ja2V0KCkgewogICAgICByZXR1cm4gdGhpcy5mZGxpc3RbdGhpcy5mZF0/LnNvY2tldDsKICAgIH0sCiAgICBmZGxpc3Q6IHt9LAogICAgY2xhc3Nlczoge30sCiAgICBsb2cKICB9KTsKCiAgY29uc3QgY2FsbGJhY2tzID0gc2VydmljZS5nZXRDYWxsYmFja3MoaW5zdGFuY2UsIHZlcmJvc2l0eSk7CgogIGlmKCF1cmwpIHVybCA9IGdsb2JhbFRoaXMubG9jYXRpb24/LmhyZWY7CiAgaWYodHlwZW9mIHVybCAhPSAnb2JqZWN0JykgdXJsID0gcGFyc2VVUkwodXJsKTsKCiAgZGVmaW5lKGluc3RhbmNlLCB7CiAgICBzZXJ2aWNlLAogICAgY2FsbGJhY2tzLAogICAgdXJsLAogICAgbG9nLAogICAgcmVnaXN0ZXIoY3RvcikgewogICAgICBpZih0eXBlb2YgY3RvciA9PSAnb2JqZWN0JyAmJiBjdG9yICE9PSBudWxsKSB7CiAgICAgICAgZm9yKGxldCBuYW1lIGluIGN0b3IpIGluc3RhbmNlLmNsYXNzZXNbbmFtZV0gPSBjdG9yW25hbWVdOwogICAgICB9IGVsc2UgewogICAgICAgIGluc3RhbmNlLmNsYXNzZXNbY3Rvci5uYW1lXSA9IGN0b3I7CiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXM7CiAgICB9LAogICAgbGlzdGVuKG5ld193cywgb3MgPSBnbG9iYWxUaGlzLm9zKSB7CiAgICAgIGlmKCFuZXdfd3MpIG5ld193cyA9IE1ha2VXZWJTb2NrZXQ7CiAgICAgIHRoaXMubG9nKGAke3NlcnZpY2UubmFtZX0gbGlzdGVuaW5nIG9uICR7dGhpcy51cmx9YCk7CiAgICAgIGlmKG9zKSBzZXRIYW5kbGVycyhvcywgY2FsbGJhY2tzKTsKICAgICAgdGhpcy5saXN0ZW5pbmcgPSB0cnVlOwogICAgICB0aGlzLndzID0gbmV3X3dzKHRoaXMudXJsLCBjYWxsYmFja3MsIHRydWUpOwogICAgICBpZihuZXdfd3MgIT09IE1ha2VXZWJTb2NrZXQpCiAgICAgICAgaWYodGhpcy53cy50aGVuKSB0aGlzLndzLnRoZW4oKCkgPT4gKHRoaXMubGlzdGVuaW5nID0gZmFsc2UpKTsKICAgICAgICBlbHNlIHRoaXMubGlzdGVuaW5nID0gZmFsc2U7CiAgICAgIHJldHVybiB0aGlzOwogICAgfSwKICAgIGFzeW5jIGNvbm5lY3QobmV3X3dzLCBvcyA9IGdsb2JhbFRoaXMub3MpIHsKICAgICAgaWYoIW5ld193cykgbmV3X3dzID0gTWFrZVdlYlNvY2tldDsKICAgICAgdGhpcy5sb2coYCR7c2VydmljZS5uYW1lfSBjb25uZWN0aW5nIHRvICR7dGhpcy51cmx9YCk7CiAgICAgIGlmKG9zKSBzZXRIYW5kbGVycyhvcywgY2FsbGJhY2tzKTsKICAgICAgdGhpcy53cyA9IG5ld193cyh0aGlzLnVybCwgY2FsbGJhY2tzLCBmYWxzZSk7CiAgICAgIC8vY29uc29sZS5sb2coJ2Nvbm5lY3QoKScsIHRoaXMud3MpOwogICAgICByZXR1cm4gdGhpczsKICAgIH0sCiAgICAvKiBwcmV0dGllci1pZ25vcmUgKi8gZ2V0IGNvbm5lY3RlZCgpIHsKICAgICAgY29uc3Qgd3MgPSB0aGlzLndzOwogICAgICBjb25zb2xlLmxvZygid3MiLCB3cyk7CiAgICAgIGlmKHdzKQogICAgICByZXR1cm4gdHlwZW9mIHdzLnJlYWR5U3RhdGUgPT0gJ251bWJlcicgPyB3cy5yZWFkeVN0YXRlID09IHdzLk9QRU4gOiBmYWxzZTsKICAgIGNvbnN0IHtmZGxpc3R9ID0gaW5zdGFuY2U7CiAgICAgIGNvbnNvbGUubG9nKCJmZGxpc3QiLCBmZGxpc3QpOwoKICAgIHJldHVybiAgZmRsaXN0W09iamVjdC5rZXlzKCBmZGxpc3QpWzBdXS5jb25uZWN0ZWQ7CiAgICB9CiAgfSk7CgogIFJQQ1NvY2tldC5zZXQuYWRkKGluc3RhbmNlKTsKCiAgcmV0dXJuIGluc3RhbmNlOwp9CmZvcihsZXQgY3RvciBvZiBbUlBDU29ja2V0LCBDb25uZWN0aW9uLCBSUENDbGllbnQsIFJQQ1NlcnZlcl0pIHsKICBsZXQgc2V0ID0gbmV3IFNldCgpOwogIGRlZmluZShjdG9yLCB7CiAgICBzZXQsCiAgICBnZXQgbGlzdCgpIHsKICAgICAgcmV0dXJuIFsuLi5zZXRdOwogICAgfSwKICAgIGdldCBsYXN0KCkgewogICAgICByZXR1cm4gdGhpcy5saXN0Lmxhc3Q7CiAgICB9CiAgfSk7Cn0KCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShSUENTb2NrZXQucHJvdG90eXBlLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdSUENTb2NrZXQnIH0pOwoKZnVuY3Rpb24gTWFrZVdlYlNvY2tldCh1cmwsIGNhbGxiYWNrcykgewogIGxldCB3czsKICB0cnkgewogICAgd3MgPSBuZXcgV2ViU29ja2V0KHVybCArICcnKTsKICB9IGNhdGNoKGVycm9yKSB7CiAgICBjYWxsYmFja3Mub25FcnJvcih3cywgZXJyb3IpOwogICAgcmV0dXJuIG51bGw7CiAgfQogIHdzLm9uY29ubmVjdCA9ICgpID0+IGNhbGxiYWNrcy5vbkNvbm5lY3Qod3MpOwogIHdzLm9ub3BlbiA9ICgpID0+IGNhbGxiYWNrcy5vbk9wZW4od3MpOwogIHdzLm9uZXJyb3IgPSBlcnJvciA9PiBjYWxsYmFja3Mub25FcnJvcih3cywgZXJyb3IpOwogIHdzLm9ubWVzc2FnZSA9IG1zZyA9PiBjYWxsYmFja3Mub25NZXNzYWdlKHdzLCBtc2cpOwogIHdzLm9ucG9uZyA9IHBvbmcgPT4gY2FsbGJhY2tzLm9uUG9uZyh3cywgcG9uZyk7CiAgd3Mub25jbG9zZSA9IHJlYXNvbiA9PiBjYWxsYmFja3Mub25DbG9zZSh3cywgcmVhc29uKTsKICB3cy5mZCA9IHNvY2tJZCA9IChzb2NrSWQgfCAwKSArIDE7CgogIHJldHVybiB3czsKfQoKZXhwb3J0IGZ1bmN0aW9uIGlzVGhlbmFibGUodmFsdWUpIHsKICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdvYmplY3QnICYmIHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlLnRoZW4gPT0gJ2Z1bmN0aW9uJzsKfQoKZXhwb3J0IGZ1bmN0aW9uIGhhc0hhbmRsZXIob2JqLCBldmVudE5hbWUpIHsKICBpZih0eXBlb2Ygb2JqID09ICdvYmplY3QnICYmIG9iaiAhPSBudWxsKSB7CiAgICBjb25zdCBoYW5kbGVyID0gb2JqWydvbicgKyBldmVudE5hbWVdOwogICAgaWYodHlwZW9mIGhhbmRsZXIgPT0gJ2Z1bmN0aW9uJykgcmV0dXJuIGhhbmRsZXI7CiAgfQp9CgpleHBvcnQgZnVuY3Rpb24gY2FsbEhhbmRsZXIob2JqLCBldmVudE5hbWUsIC4uLmFyZ3MpIHsKICBsZXQgcmV0LAogICAgZm4gPSBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKTsKICBpZihmbikgcmV0dXJuIGZuLmNhbGwob2JqLCAuLi5hcmdzKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIHBhcnNlVVJMKHVybF9vcl9wb3J0KSB7CiAgbGV0IHByb3RvY29sLCBob3N0LCBwb3J0OwogIGlmKCFpc05hTigrdXJsX29yX3BvcnQpKSBbcHJvdG9jb2wsIGhvc3QsIHBvcnRdID0gWyd3cycsICcwLjAuMC4wJywgdXJsX29yX3BvcnRdOwogIGVsc2UgewogICAgW3Byb3RvY29sID0gJ3dzJywgaG9zdCwgcG9ydCA9IDgwXSA9IFsuLi4vKC4qOlwvXC98KShbXjovXSopKDpbMC05XSt8KS4qLy5leGVjKHVybF9vcl9wb3J0KV0uc2xpY2UoMSk7CiAgICBpZih0eXBlb2YgcG9ydCA9PSAnc3RyaW5nJykgcG9ydCA9IHBvcnQuc2xpY2UoMSk7CiAgfQogIHBvcnQgPSArcG9ydDsKICBpZihwcm90b2NvbCkgewogICAgcHJvdG9jb2wgPSBwcm90b2NvbC5zbGljZSgwLCAtMyk7CiAgICBpZihwcm90b2NvbC5zdGFydHNXaXRoKCdodHRwJykpIHByb3RvY29sID0gcHJvdG9jb2wucmVwbGFjZSgnaHR0cCcsICd3cycpOwogIH0gZWxzZSB7CiAgICBwcm90b2NvbCA9ICd3cyc7CiAgfQoKICByZXR1cm4gZGVmaW5lKAogICAgewogICAgICBwcm90b2NvbCwKICAgICAgaG9zdCwKICAgICAgcG9ydAogICAgfSwKICAgIHsKICAgICAgdG9TdHJpbmcoKSB7CiAgICAgICAgY29uc3QgeyBwcm90b2NvbCwgaG9zdCwgcG9ydCB9ID0gdGhpczsKICAgICAgICByZXR1cm4gYCR7cHJvdG9jb2wgfHwgJ3dzJ306Ly8ke2hvc3R9OiR7cG9ydH1gOwogICAgICB9CiAgICB9CiAgKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIEdldFByb3BlcnRpZXMob2JqLCBtZXRob2QgPSBvYmogPT4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMob2JqKSwgcHJlZCA9IChvYmosIGRlcHRoKSA9PiBvYmogIT09IE9iamVjdC5wcm90b3R5cGUpIHsKICBsZXQgc2V0ID0gbmV3IFNldCgpOwogIGxldCBkZXB0aCA9IDA7CiAgZG8gewogICAgaWYoIXByZWQob2JqLCBkZXB0aCkpIGJyZWFrOwogICAgZm9yKGxldCBwcm9wIG9mIG1ldGhvZChvYmosIGRlcHRoKSkgc2V0LmFkZChwcm9wKTsKICAgIGxldCBwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmopOwogICAgaWYocHJvdG8gPT09IG9iaikgYnJlYWs7CiAgICBvYmogPSBwcm90bzsKICAgICsrZGVwdGg7CiAgfSB3aGlsZSh0eXBlb2Ygb2JqID09ICdvYmplY3QnICYmIG9iaiAhPSBudWxsKTsKICByZXR1cm4gWy4uLnNldF07Cn0KCmV4cG9ydCBmdW5jdGlvbiBHZXRLZXlzKG9iaiwgcHJlZCA9IChvYmosIGRlcHRoKSA9PiBvYmogIT09IE9iamVjdC5wcm90b3R5cGUpIHsKICBsZXQga2V5cyA9IG5ldyBTZXQoKTsKICBmb3IobGV0IGtleSBvZiBHZXRQcm9wZXJ0aWVzKG9iaiwgb2JqID0+IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG9iaiksIHByZWQpKSBrZXlzLmFkZChrZXkpOwogIGZvcihsZXQga2V5IG9mIEdldFByb3BlcnRpZXMob2JqLCBvYmogPT4gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmopLCBwcmVkKSkga2V5cy5hZGQoa2V5KTsKICByZXR1cm4gWy4uLmtleXNdOwp9CgpleHBvcnQgZnVuY3Rpb24gZ2V0UHJvcGVydHlEZXNjcmlwdG9ycyhvYmosIG1lcmdlID0gdHJ1ZSwgcHJlZCA9IChwcm90bywgZGVwdGgpID0+IHRydWUpIHsKICBsZXQgYSA9IFtdOwogIGxldCBkZXB0aCA9IDAsCiAgICBkZXNjLAogICAgb2s7CiAgZG8gewogICAgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKG9iaik7CiAgICB0cnkgewogICAgICBvayA9IHByZWQob2JqLCBkZXB0aCk7CiAgICB9IGNhdGNoKGUpIHt9CiAgICBpZihvaykgYS5wdXNoKGRlc2MpOwogICAgbGV0IHByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaik7CiAgICBpZihwcm90byA9PT0gb2JqKSBicmVhazsKICAgIG9iaiA9IHByb3RvOwogICAgKytkZXB0aDsKICB9IHdoaWxlKHR5cGVvZiBvYmogPT0gJ29iamVjdCcgJiYgb2JqICE9IG51bGwpOwogIGlmKG1lcmdlKSB7CiAgICBsZXQgaSA9IDA7CiAgICBsZXQgcmVzdWx0ID0ge307CiAgICBmb3IobGV0IGRlc2Mgb2YgYSkgZm9yIChsZXQgcHJvcCBvZiBHZXRLZXlzKGRlc2MpKSBpZighKHByb3AgaW4gcmVzdWx0KSkgcmVzdWx0W3Byb3BdID0gZGVzY1twcm9wXTsKICAgIHJldHVybiByZXN1bHQ7CiAgfQogIHJldHVybiBhOwp9CgpleHBvcnQgZnVuY3Rpb24gZGVmaW5lKG9iaiwgLi4uYXJncykgewogIGxldCBwcm9wZGVzYyA9IHt9OwogIGZvcihsZXQgcHJvcHMgb2YgYXJncykgewogICAgbGV0IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhwcm9wcyk7CiAgICBmb3IobGV0IHByb3Agb2YgR2V0S2V5cyhkZXNjKSkgewogICAgICBwcm9wZGVzY1twcm9wXSA9IHsgLi4uZGVzY1twcm9wXSwgZW51bWVyYWJsZTogZmFsc2UsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9OwogICAgICBpZigndmFsdWUnIGluIHByb3BkZXNjW3Byb3BdKSBwcm9wZGVzY1twcm9wXS53cml0YWJsZSA9IHRydWU7CiAgICB9CiAgfQogIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKG9iaiwgcHJvcGRlc2MpOwogIHJldHVybiBvYmo7Cn0KCmV4cG9ydCBmdW5jdGlvbiBzZXRIYW5kbGVycyhvcywgaGFuZGxlcnMpIHsKICBoYW5kbGVycy5vbkZkID0gZnVuY3Rpb24oZmQsIHJlYWRhYmxlLCB3cml0YWJsZSkgewogICAgLy9jb25zb2xlLmxvZygnXHgxYlszODs1OzgybW9uRmRceDFiWzBtKCcsIGZkLCAnLCcsIHJlYWRhYmxlLCAnLCcsIHdyaXRhYmxlLCAnKScpOwogICAgb3Muc2V0UmVhZEhhbmRsZXIoZmQsIHJlYWRhYmxlKTsKICAgIG9zLnNldFdyaXRlSGFuZGxlcihmZCwgd3JpdGFibGUpOwogIH07Cn0KCmV4cG9ydCBmdW5jdGlvbiBzdGF0dXNSZXNwb25zZShzdWNjZXNzLCByZXN1bHRfb3JfZXJyb3IsIGRhdGEpIHsKICBsZXQgciA9IHsgc3VjY2VzcyB9OwogIGlmKHJlc3VsdF9vcl9lcnJvciAhPT0gdW5kZWZpbmVkKSByW3N1Y2Nlc3MgPyAncmVzdWx0JyA6ICdlcnJvciddID0gcmVzdWx0X29yX2Vycm9yOwogIGlmKHR5cGVvZiBkYXRhID09ICdvYmplY3QnICYmIGRhdGEgIT0gbnVsbCAmJiB0eXBlb2YgZGF0YS5zZXEgPT0gJ251bWJlcicpIHIuc2VxID0gZGF0YS5zZXE7CiAgcmV0dXJuIHI7Cn0KCmV4cG9ydCBmdW5jdGlvbiBvYmplY3RDb21tYW5kKGZuKSB7CiAgcmV0dXJuIGZ1bmN0aW9uKGRhdGEpIHsKICAgIGNvbnN0IHJlc3BvbmQgPSAoc3VjY2VzcywgcmVzdWx0KSA9PiBzdGF0dXNSZXNwb25zZShzdWNjZXNzLCByZXN1bHQsIGRhdGEpOwogICAgY29uc3QgeyBpZCwgLi4ucmVzdCB9ID0gZGF0YTsKICAgIGlmKGlkIGluIHRoaXMuaW5zdGFuY2VzKSB7CiAgICAgIGRhdGEub2JqID0gdGhpcy5pbnN0YW5jZXNbaWRdOwogICAgICByZXR1cm4gZm4uY2FsbCh0aGlzLCBkYXRhLCByZXNwb25kKTsKICAgIH0KICAgIHJldHVybiByZXNwb25kKGZhbHNlLCBgTm8gc3VjaCBvYmplY3QgIyR7aWR9YCk7CiAgfTsKfQoKZXhwb3J0IGZ1bmN0aW9uIE1ha2VMaXN0Q29tbWFuZChwcmVkID0gdiA9PiB0eXBlb2YgdiAhPSAnZnVuY3Rpb24nLCBkZWZhdWx0cyA9IHsgbWF4RGVwdGg6IEluZmluaXR5IH0pIHsKICByZXR1cm4gb2JqZWN0Q29tbWFuZCgoZGF0YSwgcmVzcG9uZCkgPT4gewogICAgY29uc3QgeyBvYmosIGVudW1lcmFibGUgPSB0cnVlLCBzb3VyY2UgPSBmYWxzZSwga2V5RGVzY3JpcHRvciA9IHRydWUsIHZhbHVlRGVzY3JpcHRvciA9IHRydWUgfSA9IGRhdGE7CiAgICBkZWZhdWx0cyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgLi4uZGVmYXVsdHMgfTsKICAgIGxldCBwcm9wRGVzYyA9IGdldFByb3BlcnR5RGVzY3JpcHRvcnMob2JqLCB0cnVlLCAocHJvdG8sIGRlcHRoKSA9PiBkZXB0aCA8IChkZWZhdWx0cy5tYXhEZXB0aCA/PyBJbmZpbml0eSkpOwogICAgbGV0IGtleXMgPSBHZXRLZXlzKHByb3BEZXNjKTsKICAgIGxldCBtYXAgPSBrZXlzLnJlZHVjZSgoYWNjLCBrZXkpID0+IHsKICAgICAgY29uc3QgZGVzYyA9IHByb3BEZXNjW2tleV07CiAgICAgIGxldCB2YWx1ZSA9IGRlc2M/LnZhbHVlIHx8IG9ialtrZXldOwogICAgICBpZihwcmVkKHZhbHVlKSkgewogICAgICAgIGlmKHZhbHVlRGVzY3JpcHRvcikgewogICAgICAgICAgdmFsdWUgPSBTZXJpYWxpemVWYWx1ZSh2YWx1ZSwgc291cmNlKTsKICAgICAgICAgIGZvcihsZXQgZmxhZyBvZiBbJ2VudW1lcmFibGUnLCAnd3JpdGFibGUnLCAnY29uZmlndXJhYmxlJ10pIGlmKGRlc2NbZmxhZ10gIT09IHVuZGVmaW5lZCkgaWYgKGRlc2NbZmxhZ10gIT0gZGVmYXVsdHNbZmxhZ10pIHZhbHVlW2ZsYWddID0gZGVzY1tmbGFnXTsKICAgICAgICB9IGVsc2UgaWYodHlwZW9mIHZhbHVlID09ICdmdW5jdGlvbicpIHsKICAgICAgICAgIHZhbHVlID0gdmFsdWUgKyAnJzsKICAgICAgICB9CiAgICAgICAgYWNjLnB1c2goW2tleURlc2NyaXB0b3IgPyBTZXJpYWxpemVWYWx1ZShrZXkpIDoga2V5LCB2YWx1ZV0pOwogICAgICB9CiAgICAgIHJldHVybiBhY2M7CiAgICB9LCBbXSk7CiAgICByZXR1cm4gcmVzcG9uZCh0cnVlLCBtYXApOwogIH0pOwp9CgpleHBvcnQgZnVuY3Rpb24gZ2V0UHJvdG90eXBlTmFtZShwcm90bykgewogIHJldHVybiBwcm90by5jb25zdHJ1Y3Rvcj8ubmFtZSA/PyBwcm90b1tTeW1ib2wudG9TdHJpbmdUYWddOwp9CgpmdW5jdGlvbiBEZXNlcmlhbGl6ZUVudHJpZXMoZSkgewogIGlmKEFycmF5LmlzQXJyYXkoZSkpIHJldHVybiBlLm1hcChhID0+IGEubWFwKERlc2VyaWFsaXplVmFsdWUpKTsKICB0aHJvdyBuZXcgRXJyb3IoYERlc2VyaWFsaXplRW50cmllcyBlPSR7aW5zcGVjdChlKX1gKTsKfQoKZnVuY3Rpb24gRGVzZXJpYWxpemVLZXlzKGUpIHsKICBpZihBcnJheS5pc0FycmF5KGUpKSByZXR1cm4gZS5tYXAoKFtrXSkgPT4gRGVzZXJpYWxpemVWYWx1ZShrKSk7CiAgdGhyb3cgbmV3IEVycm9yKGBEZXNlcmlhbGl6ZUtleXMgZT0ke2luc3BlY3QoZSl9YCk7Cn0KCmZ1bmN0aW9uIERlc2VyaWFsaXplTWFwKGUpIHsKICByZXR1cm4gbmV3IE1hcChEZXNlcmlhbGl6ZUVudHJpZXMoZSkpOwp9CmZ1bmN0aW9uIERlc2VyaWFsaXplT2JqZWN0KGUpIHsKICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKERlc2VyaWFsaXplRW50cmllcyhlKSk7Cn0KZnVuY3Rpb24gRm9yd2FyZE1ldGhvZHMoZSwgcmV0ID0ge30sIHRoaXNPYmopIHsKICBsZXQga2V5cyA9IERlc2VyaWFsaXplS2V5cyhlKTsKICBmb3IobGV0IGtleSBvZiBrZXlzKSB7CiAgICByZXRba2V5XSA9IE1ha2VDb21tYW5kRnVuY3Rpb24oa2V5LCBvID0+IG8uY29ubmVjdGlvbiwgdGhpc09iaik7CiAgfQogIC8vIGNvbnNvbGUubG9nKGBGb3J3YXJkTWV0aG9kc2AsIHsgZSwga2V5cywgcmV0IH0pOwogIHJldHVybiByZXQ7Cn0KCmZ1bmN0aW9uIEZvcndhcmRPYmplY3QoZSwgdGhpc09iaikgewogIGxldCBvYmogPSBGb3J3YXJkTWV0aG9kcyhlLCB7fSwgdGhpc09iaik7CiAgY29uc29sZS5sb2coYEZvcndhcmRPYmplY3RgLCB7IGUsIG9iaiwgdGhpc09iaiB9KTsKICByZXR1cm4gb2JqOwp9CgpmdW5jdGlvbiBNYWtlQ29tbWFuZEZ1bmN0aW9uKGNtZCwgZ2V0Q29ubmVjdGlvbiwgdGhpc09iaiwgdCkgewogIGNvbnN0IHBmeCA9IFtgUkVTUE9OU0UgdG9gLCB0eXBlb2YgY21kID09ICdzeW1ib2wnID8gY21kIDogYCIke2NtZH0iYF07CiAgdCA/Pz0geyBtZXRob2RzOiBGb3J3YXJkTWV0aG9kcywgcHJvcGVydGllczogRGVzZXJpYWxpemVPYmplY3QsIHN5bWJvbHM6IERlc2VyaWFsaXplU3ltYm9scyB9OwogIGlmKHR5cGVvZiBnZXRDb25uZWN0aW9uICE9ICdmdW5jdGlvbicpIGdldENvbm5lY3Rpb24gPSBvYmogPT4gKHR5cGVvZiBvYmogPT0gJ29iamVjdCcgJiYgb2JqICE9IG51bGwgJiYgJ2Nvbm5lY3Rpb24nIGluIG9iaiAmJiBvYmouY29ubmVjdGlvbikgfHwgb2JqOwogIC8vY29uc29sZS5sb2coIk1ha2VDb21tYW5kRnVuY3Rpb24iLHtjbWQsZ2V0Q29ubmVjdGlvbix0aGlzT2JqfSk7CiAgcmV0dXJuIGZ1bmN0aW9uKHBhcmFtcyA9IHt9KSB7CiAgICB0aGlzT2JqID0gdGhpc09iaiB8fCB0aGlzOwogICAgbGV0IGNsaWVudCA9IGdldENvbm5lY3Rpb24odGhpc09iaik7CiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgICBjbGllbnQub25jZSgncmVzcG9uc2UnLCByID0+IHsKICAgICAgICBpZih0W2NtZF0pIHIgPSB0W2NtZF0ocik7CiAgICAgICAgcmVzb2x2ZShyKTsKICAgICAgfSk7CgogICAgICBjbGllbnQuc2VuZENvbW1hbmQoY21kLCBwYXJhbXMpOwogICAgfSk7CiAgfTsKICByZXR1cm4gYXN5bmMgZnVuY3Rpb24ocGFyYW1zID0ge30pIHsKICAgIGxldCBjbGllbnQgPSBnZXRDb25uZWN0aW9uKHRoaXMpOwogICAgYXdhaXQgY2xpZW50LnNlbmRDb21tYW5kKGNtZCwgcGFyYW1zKTsKICAgIGxldCByID0gYXdhaXQgY2xpZW50LndhaXRGb3IoJ3Jlc3BvbnNlJyk7CiAgICBpZih0W2NtZF0pIHIgPSB0W2NtZF0ocik7CiAgICBjb25zb2xlLmxvZyhgUkVTUE9OU0UgdG8gJyR7Y21kfSdgLCByKTsKICAgIHJldHVybiByOwogIH07Cn0KCmV4cG9ydCBmdW5jdGlvbiBTZXJpYWxpemVWYWx1ZSh2YWx1ZSwgc291cmNlID0gZmFsc2UpIHsKICBjb25zdCB0eXBlID0gdHlwZW9mIHZhbHVlOwogIGxldCBkZXNjID0geyB0eXBlIH07CiAgaWYodHlwZSA9PSAnb2JqZWN0JyAmJiB2YWx1ZSAhPSBudWxsKSB7CiAgICBkZXNjWydjbGFzcyddID0gZ2V0UHJvdG90eXBlTmFtZSh2YWx1ZSkgPz8gZ2V0UHJvdG90eXBlTmFtZShPYmplY3QuZ2V0UHJvdG90eXBlT2YodmFsdWUpKTsKICAgIGRlc2NbJ2NoYWluJ10gPSBVdGlsLmdldFByb3RvdHlwZUNoYWluKHZhbHVlKS5tYXAoZ2V0UHJvdG90eXBlTmFtZSk7CiAgfSBlbHNlIGlmKHR5cGUgPT0gJ3N5bWJvbCcpIHsKICAgIGRlc2NbJ2Rlc2NyaXB0aW9uJ10gPSB2YWx1ZS5kZXNjcmlwdGlvbjsKICAgIGRlc2NbJ3N5bWJvbCddID0gdmFsdWUudG9TdHJpbmcoKTsKICB9IGVsc2UgaWYodHlwZSA9PSAnZnVuY3Rpb24nKSB7CiAgICBpZih2YWx1ZS5sZW5ndGggIT09IHVuZGVmaW5lZCkgZGVzY1snbGVuZ3RoJ10gPSB2YWx1ZS5sZW5ndGg7CiAgfQogIGlmKHZhbHVlIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHsKICAgIGxldCBhcnJheSA9IG5ldyBVaW50OEFycmF5KHZhbHVlKTsKICAgIHZhbHVlID0gWy4uLmFycmF5XTsKICAgIGRlc2NbJ2NsYXNzJ10gPSAnQXJyYXlCdWZmZXInOwogICAgZGVsZXRlIGRlc2NbJ2NoYWluJ107CiAgfQogIGlmKHR5cGVvZiB2YWx1ZSA9PSAnZnVuY3Rpb24nKSB7CiAgICBpZihzb3VyY2UpIGRlc2Muc291cmNlID0gdmFsdWUgKyAnJzsKICB9IGVsc2UgaWYodHlwZW9mIHZhbHVlICE9ICdzeW1ib2wnKSB7CiAgICBkZXNjLnZhbHVlID0gdmFsdWU7CiAgfQogIHJldHVybiBkZXNjOwp9CgpleHBvcnQgZnVuY3Rpb24gRGVzZXJpYWxpemVTeW1ib2xzKG5hbWVzKSB7CiAgcmV0dXJuIG5hbWVzLm1hcChuID0+IG4ucmVwbGFjZSgvU3ltYm9sXC4vLCAnJykpLm1hcChuID0+IFN5bWJvbFtuXSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBEZXNlcmlhbGl6ZVZhbHVlKGRlc2MpIHsKICBpZihkZXNjLnR5cGUgPT0gJ3N5bWJvbCcpIHJldHVybiBTeW1ib2wuZm9yKGRlc2MuZGVzY3JpcHRpb24pOwogIC8vIGlmKGRlc2MudHlwZT09J3N0cmluZycpCiAgcmV0dXJuIGRlc2MudmFsdWU7Cn0KCmV4cG9ydCBjb25zdCBSUENDb25uZWN0ID0gKHVybCwgc2VydmljZSA9IFJQQ0NsaWVudCkgPT4gbmV3IFJQQ1NvY2tldCh1cmwsIHNlcnZpY2UpLmNvbm5lY3QoKTsKZXhwb3J0IGNvbnN0IFJQQ0xpc3RlbiA9ICh1cmwsIHNlcnZpY2UgPSBSUENTZXJ2ZXIpID0+IG5ldyBSUENTb2NrZXQodXJsLCBzZXJ2aWNlKS5saXN0ZW4oKTsKCmV4cG9ydCBkZWZhdWx0IHsKICBTZXJ2ZXJDb25uZWN0aW9uOiBSUENTZXJ2ZXIsCiAgQ2xpZW50Q29ubmVjdGlvbjogUlBDQ2xpZW50LAogIENvbW1hbmRzOiBSUENTZXJ2ZXJFbmRwb2ludCwKICBTb2NrZXQ6IFJQQ1NvY2tldCwKICBBcGk6IFJQQ0FwaSwKICBGYWN0b3J5OiBSUENGYWN0b3J5LAogIE1lc3NhZ2VSZWNlaXZlciwKICBNZXNzYWdlVHJhbnNtaXR0ZXIsCiAgTWVzc2FnZVRyYW5zY2VpdmVyLAogIFNlcmlhbGl6ZVZhbHVlLAogIERlc2VyaWFsaXplVmFsdWUsCiAgRXZlbnRMb2dnZXIsCiAgU3lzY2FsbEVycm9yLAogIGRlZmluZSwKICBjb25uZWN0OiBSUENDb25uZWN0LAogIGxpc3RlbjogUlBDTGlzdGVuCn07CgAAAAAAAAAA13EAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkKAAAAAAAACgoAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "minnet.c",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					36,
					1,
					"paste",
					null,
					"AgAAAGk2AAAAAAAAyDYAAAAAAAAAAAAAyDYAAAAAAADINgAAAAAAABMAAAAgSlNfTmV3T2JqZWN0KGN0eCk7",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpNgAAAAAAAHw2AAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "MinnetWbe"
					},
					"CgAAAJw2AAAAAAAAnTYAAAAAAAAAAAAAnTYAAAAAAACdNgAAAAAAAA0AAABNaW5uZXRSZXF1ZXN0nTYAAAAAAACeNgAAAAAAAAAAAACeNgAAAAAAAJ82AAAAAAAAAAAAAJ82AAAAAAAAoDYAAAAAAAAAAAAAoDYAAAAAAAChNgAAAAAAAAAAAAChNgAAAAAAAKI2AAAAAAAAAAAAAKI2AAAAAAAAozYAAAAAAAAAAAAAozYAAAAAAACkNgAAAAAAAAAAAACkNgAAAAAAAKU2AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcNgAAAAAAAKk2AAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					2,
					"left_delete",
					null,
					"AgAAAKQ2AAAAAAAApDYAAAAAAAABAAAAZaM2AAAAAAAAozYAAAAAAAABAAAAYg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClNgAAAAAAAKU2AAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "ebsocket"
					},
					"CAAAAKM2AAAAAAAApDYAAAAAAAAAAAAApDYAAAAAAAClNgAAAAAAAAAAAAClNgAAAAAAAKY2AAAAAAAAAAAAAKY2AAAAAAAApzYAAAAAAAAAAAAApzYAAAAAAACoNgAAAAAAAAAAAACoNgAAAAAAAKk2AAAAAAAAAAAAAKk2AAAAAAAAqjYAAAAAAAAAAAAAqjYAAAAAAACrNgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjNgAAAAAAAKM2AAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AwAAAIY2AAAAAAAAhzYAAAAAAAAAAAAAhzYAAAAAAACHNgAAAAAAAAcAAAByZXF1ZXN0hzYAAAAAAACINgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGNgAAAAAAAI02AAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAKk2AAAAAAAAqjYAAAAAAAAAAAAAqjYAAAAAAACqNgAAAAAAAAEAAAAw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpNgAAAAAAAKo2AAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpNgAAAAAAAHk2AAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "minnet-response.c",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "minnet-websocket.c",
			"settings":
			{
				"buffer_size": 15161,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AQAAAHsiAAAAAAAAgCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7IgAAAAAAAHsiAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AwAAAIsiAAAAAAAAjCIAAAAAAAAAAAAAjCIAAAAAAACMIgAAAAAAAAgAAAByZXNwb25zZYwiAAAAAAAAjSIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLIgAAAAAAAJMiAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "Websio"
					},
					"BwAAAAIjAAAAAAAAAyMAAAAAAAAAAAAAAyMAAAAAAAADIwAAAAAAAAkAAABSZXNwb25zZSoDIwAAAAAAAAQjAAAAAAAAAAAAAAQjAAAAAAAABSMAAAAAAAAAAAAABSMAAAAAAAAGIwAAAAAAAAAAAAAGIwAAAAAAAAcjAAAAAAAAAAAAAAcjAAAAAAAACCMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACIwAAAAAAAAsjAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					2,
					"left_delete",
					null,
					"AgAAAAcjAAAAAAAAByMAAAAAAAABAAAAbwYjAAAAAAAABiMAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIIwAAAAAAAAgjAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "ocket*ws"
					},
					"CAAAAAYjAAAAAAAAByMAAAAAAAAAAAAAByMAAAAAAAAIIwAAAAAAAAAAAAAIIwAAAAAAAAkjAAAAAAAAAAAAAAkjAAAAAAAACiMAAAAAAAAAAAAACiMAAAAAAAALIwAAAAAAAAAAAAALIwAAAAAAAAwjAAAAAAAAAAAAAAwjAAAAAAAADSMAAAAAAAAAAAAADSMAAAAAAAAOIwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGIwAAAAAAAAYjAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					5,
					"right_delete",
					null,
					"BQAAAA4jAAAAAAAADiMAAAAAAAABAAAAIA4jAAAAAAAADiMAAAAAAAABAAAAcg4jAAAAAAAADiMAAAAAAAABAAAAZQ4jAAAAAAAADiMAAAAAAAABAAAAcw4jAAAAAAAADiMAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOIwAAAAAAAA4jAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AwAAACEjAAAAAAAAIiMAAAAAAAAAAAAAIiMAAAAAAAAiIwAAAAAAAAQAAAByZXNwIiMAAAAAAAAjIwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhIwAAAAAAACUjAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"paste",
					null,
					"AgAAAD0jAAAAAAAATCMAAAAAAAAAAAAATCMAAAAAAABMIwAAAAAAAA4AAABNaW5uZXRSZXNwb25zZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9IwAAAAAAAEsjAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"paste",
					null,
					"AgAAAHsiAAAAAAAAWCgAAAAAAAAAAAAAWCgAAAAAAABYKAAAAAAAAPsFAAAKSlNWYWx1ZQptaW5uZXRfd3NfY29uc3RydWN0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcHJvdG8sIG9iajsKICBNaW5uZXRXZWJzb2NrZXQqd3M7CiAgaW50IGk7CgogIGlmKCEod3MgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKE1pbm5ldFdlYnNvY2tldCkpKSkKICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlCiAgICAgY2xhc3MgaXMgZXh0ZW5kZWQuICovCiAgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICBwcm90byA9IEpTX0R1cFZhbHVlKGN0eCwgbWlubmV0X3Jlc3BvbnNlX3Byb3RvKTsKCiAgb2JqID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHByb3RvLCBtaW5uZXRfcmVzcG9uc2VfY2xhc3NfaWQpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHByb3RvKTsKICBpZihKU19Jc0V4Y2VwdGlvbihvYmopKQogICAgZ290byBmYWlsOwoKICBpZihhcmdjID49IDEgJiYgYXJnYyA8IDMpIHsKCiAgICBpZighanNfaXNfbnVsbGlzaChhcmd2WzBdKSkKICAgICAgYnVmZmVyX2Zyb212YWx1ZSgmcmVzcC0+Ym9keSwgYXJndlswXSwgY3R4KTsKCiAgICBhcmdjLS07CiAgICBhcmd2Kys7CiAgfQoKICBmb3IoaSA9IDA7IGkgPCBhcmdjOyBpKyspIHsKICAgIGlmKEpTX0lzT2JqZWN0KGFyZ3ZbaV0pICYmICFKU19Jc051bGwoYXJndltpXSkpIHsKICAgICAganNfY29weV9wcm9wZXJ0aWVzKGN0eCwgb2JqLCBhcmd2W2ldLCBKU19HUE5fU1RSSU5HX01BU0spOwogICAgICBhcmdjLS07CiAgICAgIGFyZ3YrKzsKICAgIH0gZWxzZSBpZihKU19Jc1N0cmluZyhhcmd2W2ldKSkgewogICAgICBjb25zdCBjaGFyKiBzdHIgPSBKU19Ub0NTdHJpbmcoY3R4LCBhcmd2W2ldKTsKICAgICAgaWYoIXJlc3AtPnVybCkKICAgICAgICByZXNwLT51cmwgPSBqc19zdHJkdXAoY3R4LCBzdHIpOwogICAgICBlbHNlIGlmKCFyZXNwLT50eXBlKQogICAgICAgIHJlc3AtPnR5cGUgPSBqc19zdHJkdXAoY3R4LCBzdHIpOwogICAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHN0cik7CgogICAgfSBlbHNlIGlmKEpTX0lzQm9vbChhcmd2W2ldKSkgewogICAgICByZXNwLT5vayA9IEpTX1RvQm9vbChjdHgsIGFyZ3ZbaV0pOwogICAgfSBlbHNlIGlmKEpTX0lzTnVtYmVyKGFyZ3ZbaV0pKSB7CiAgICAgIGludDMyX3QgczsKICAgICAgaWYoIUpTX1RvSW50MzIoY3R4LCAmcywgYXJndltpXSkpCiAgICAgICAgcmVzcC0+c3RhdHVzID0gczsKICAgIH0KICB9CgogIEpTX1NldE9wYXF1ZShvYmosIHJlc3ApOwoKICByZXR1cm4gb2JqOwoKZmFpbDoKICBqc19mcmVlKGN0eCwgcmVzcCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2KAAAAAAAAHsiAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHsiAAAAAAAAfCIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7IgAAAAAAAHsiAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAOAkAAAAAAAA4SQAAAAAAAAAAAAA4SQAAAAAAADhJAAAAAAAAAMDAAAKICBpZihhcmdjID49IDEgJiYgYXJnYyA8IDMpIHsKCiAgICBpZighanNfaXNfbnVsbGlzaChhcmd2WzBdKSkKICAgICAgYnVmZmVyX2Zyb212YWx1ZSgmd3MtPmJvZHksIGFyZ3ZbMF0sIGN0eCk7CgogICAgYXJnYy0tOwogICAgYXJndisrOwogIH0KCiAgZm9yKGkgPSAwOyBpIDwgYXJnYzsgaSsrKSB7CiAgICBpZihKU19Jc09iamVjdChhcmd2W2ldKSAmJiAhSlNfSXNOdWxsKGFyZ3ZbaV0pKSB7CiAgICAgIGpzX2NvcHlfcHJvcGVydGllcyhjdHgsIG9iaiwgYXJndltpXSwgSlNfR1BOX1NUUklOR19NQVNLKTsKICAgICAgYXJnYy0tOwogICAgICBhcmd2Kys7CiAgICB9IGVsc2UgaWYoSlNfSXNTdHJpbmcoYXJndltpXSkpIHsKICAgICAgY29uc3QgY2hhciogc3RyID0gSlNfVG9DU3RyaW5nKGN0eCwgYXJndltpXSk7CiAgICAgIGlmKCF3cy0+dXJsKQogICAgICAgIHdzLT51cmwgPSBqc19zdHJkdXAoY3R4LCBzdHIpOwogICAgICBlbHNlIGlmKCF3cy0+dHlwZSkKICAgICAgICB3cy0+dHlwZSA9IGpzX3N0cmR1cChjdHgsIHN0cik7CiAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgc3RyKTsKCiAgICB9IGVsc2UgaWYoSlNfSXNCb29sKGFyZ3ZbaV0pKSB7CiAgICAgIHdzLT5vayA9IEpTX1RvQm9vbChjdHgsIGFyZ3ZbaV0pOwogICAgfSBlbHNlIGlmKEpTX0lzTnVtYmVyKGFyZ3ZbaV0pKSB7CiAgICAgIGludDMyX3QgczsKICAgICAgaWYoIUpTX1RvSW50MzIoY3R4LCAmcywgYXJndltpXSkpCiAgICAgICAgd3MtPnN0YXR1cyA9IHM7CiAgICB9CiAgfQo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgJAAAAAAAAOMnAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhJAAAAAAAAOEkAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "minnet-websocket.h",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AgAAACkBAAAAAAAA5QIAAAAAAAAAAAAA5QIAAAAAAADlAgAAAAAAADsBAABNaW5uZXRXZWJzb2NrZXQqIG1pbm5ldF93c19mcm9tX3dzaShzdHJ1Y3QgbHdzKik7Ck1pbm5ldFdlYnNvY2tldCogbWlubmV0X3dzX2dldChzdHJ1Y3QgbHdzKiwgSlNDb250ZXh0KiBjdHgpOwpKU1ZhbHVlIG1pbm5ldF93c19vYmplY3QoSlNDb250ZXh0Kiwgc3RydWN0IGx3cyogd3NpKTsKSlNWYWx1ZSBtaW5uZXRfd3Nfd3JhcChKU0NvbnRleHQqLCBNaW5uZXRXZWJzb2NrZXQqIHdzKTsKdm9pZCBtaW5uZXRfd3Nfc3NsY2VydChKU0NvbnRleHQqLCBzdHJ1Y3QgbHdzX2NvbnRleHRfY3JlYXRpb25faW5mbyogaW5mbywgSlNWYWx1ZSBvcHRpb25zKTs",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkAgAAAAAAACkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAAOQCAAAAAAAA5AIAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlAgAAAAAAAOUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADfBAAAI2lmbmRlZiBNSU5ORVRfV0VCU09DS0VUX0gKI2RlZmluZSBNSU5ORVRfV0VCU09DS0VUX0gKCiNpbmNsdWRlIDxxdWlja2pzLmg+CgpzdHJ1Y3QgbHdzOwpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKCi8qIGNsYXNzIFdlYlNvY2tldCAqLwoKdHlwZWRlZiBzdHJ1Y3Qgc29ja2V0IHsKICBzdHJ1Y3QgbHdzKiBsd3NpOwogIC8qIEpTVmFsdWUgcmVxdWVzdCwgcmVzcG9uc2U7Ki8KICBzaXplX3QgcmVmX2NvdW50OwogIEpTVmFsdWUgaGFuZGxlcnNbMl07Cn0gTWlubmV0V2Vic29ja2V0OwoKTWlubmV0V2Vic29ja2V0KiBtaW5uZXRfd3NfZnJvbV93c2koc3RydWN0IGx3cyopOwpNaW5uZXRXZWJzb2NrZXQqIG1pbm5ldF93c19nZXQoc3RydWN0IGx3cyosIEpTQ29udGV4dCogY3R4KTsKSlNWYWx1ZSAgICAgICAgICBtaW5uZXRfd3Nfb2JqZWN0KEpTQ29udGV4dCosIHN0cnVjdCBsd3MqIHdzaSk7CkpTVmFsdWUgICAgICAgICAgbWlubmV0X3dzX3dyYXAoSlNDb250ZXh0KiwgTWlubmV0V2Vic29ja2V0KiB3cyk7CnZvaWQgICAgICAgICAgICAgbWlubmV0X3dzX3NzbGNlcnQoSlNDb250ZXh0Kiwgc3RydWN0IGx3c19jb250ZXh0X2NyZWF0aW9uX2luZm8qIGluZm8sIEpTVmFsdWUgb3B0aW9ucyk7CkpTVmFsdWUgICAgICAgICAgbWlubmV0X3dzX2NvbnN0cnVjdG9yKEpTQ29udGV4dCosIEpTVmFsdWUgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWUgYXJndltdKTsKCmV4dGVybiBKU1ZhbHVlIG1pbm5ldF93c19wcm90bywgbWlubmV0X3dzX2N0b3I7CmV4dGVybiBKU0NsYXNzRGVmIG1pbm5ldF93c19jbGFzczsKZXh0ZXJuIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IG1pbm5ldF93c19wcm90b19mdW5jc1tdLCBtaW5uZXRfd3Nfc3RhdGljX2Z1bmNzW10sIG1pbm5ldF93c19wcm90b19kZWZzW107CmV4dGVybiBjb25zdCBzaXplX3QgbWlubmV0X3dzX3Byb3RvX2Z1bmNzX3NpemUsIG1pbm5ldF93c19zdGF0aWNfZnVuY3Nfc2l6ZSwgbWlubmV0X3dzX3Byb3RvX2RlZnNfc2l6ZTsKZXh0ZXJuIEpTQ2xhc3NJRCBtaW5uZXRfd3NfY2xhc3NfaWQ7CgpzdGF0aWMgaW5saW5lIE1pbm5ldFdlYnNvY2tldCoKbWlubmV0X3dzX2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICByZXR1cm4gSlNfR2V0T3BhcXVlMihjdHgsIG9iaiwgbWlubmV0X3dzX2NsYXNzX2lkKTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9XRUJTT0NLRVRfSCAqLwoAAAAAAAAAALgEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkAgAAAAAAAOQCAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": "Searching 855 files for \"log.*Connection\" (regex, case sensitive)\n\n0 matches",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "minnet-server.h",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "jsutils.h",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AgAAAOoBAAAAAAAAzQUAAAAAAAAAAAAAzQUAAAAAAADNBQAAAAAAANADAAAKSlNWYWx1ZSB2ZWN0b3IyYXJyYXkoSlNDb250ZXh0KiwgaW50IGFyZ2MsIEpTVmFsdWUgYXJndltdKTsKdm9pZCBqc19jb25zb2xlX2xvZyhKU0NvbnRleHQqLCBKU1ZhbHVlKiBjb25zb2xlLCBKU1ZhbHVlKiBjb25zb2xlX2xvZyk7CkpTVmFsdWUganNfZnVuY3Rpb25fYm91bmQoSlNDb250ZXh0KiwgSlNWYWx1ZSB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWUgYXJndltdLCBpbnQgbWFnaWMsIEpTVmFsdWUqIGZ1bmNfZGF0YSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZChKU0NvbnRleHQqLCBKU1ZhbHVlIGZ1bmMsIGludCBhcmdjLCBKU1ZhbHVlIGFyZ3ZbXSk7CkpTVmFsdWUganNfZnVuY3Rpb25fYmluZF8xKEpTQ29udGV4dCosIEpTVmFsdWUgZnVuYywgSlNWYWx1ZSBhcmcpOwpCT09MIGpzX2lzX2l0ZXJhdG9yKEpTQ29udGV4dCosIEpTVmFsdWUgb2JqKTsKSlNWYWx1ZSBqc19pdGVyYXRvcl9uZXh0KEpTQ29udGV4dCosIEpTVmFsdWUgb2JqLCBKU1ZhbHVlKiBuZXh0LCBCT09MKiBkb25lX3AsIGludCBhcmdjLCBKU1ZhbHVlIGFyZ3ZbXSk7CmludCBqc19jb3B5X3Byb3BlcnRpZXMoSlNDb250ZXh0KiwgSlNWYWx1ZSBkc3QsIEpTVmFsdWUgc3JjLCBpbnQgZmxhZ3MpOwpKU0J1ZmZlciBqc19idWZmZXJfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlIHZhbHVlKTsKQk9PTCBqc19idWZmZXJfdmFsaWQoY29uc3QgSlNCdWZmZXIqKTsKSlNCdWZmZXIganNfYnVmZmVyX2Nsb25lKGNvbnN0IEpTQnVmZmVyKiwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIGpzX2J1ZmZlcl9kdW1wKGNvbnN0IEpTQnVmZmVyKiwgRHluQnVmKiBkYik7CnZvaWQganNfYnVmZmVyX2ZyZWUoSlNCdWZmZXIqLCBKU0NvbnRleHQqIGN0eCk7CmNvbnN0IHVpbnQ4X3QqIGpzX2J1ZmZlcl9wZWVrKEpTQnVmZmVyKiwgc2l6ZV90KiBsZW5wKTsKY29uc3QgdWludDhfdCoganNfYnVmZmVyX2dldChKU0J1ZmZlciosIHNpemVfdCogbGVucCk7",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6BQAAAAAAAOoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAOkBAAAAAAAA6gEAAAAAAAAAAAAA6gEAAAAAAADrAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpAQAAAAAAAOkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfDwAAI2lmbmRlZiBNSU5ORVRfSlNVVElMU19ICiNkZWZpbmUgTUlOTkVUX0pTVVRJTFNfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSA8bGlzdC5oPgoKdHlwZWRlZiBzdHJ1Y3QgSlNUaHJlYWRTdGF0ZSB7CiAgc3RydWN0IGxpc3RfaGVhZCBvc19yd19oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3NpZ25hbF9oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3RpbWVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIHBvcnRfbGlzdDsKICBpbnQgZXZhbF9zY3JpcHRfcmVjdXJzZTsKICB2b2lkICpyZWN2X3BpcGUsICpzZW5kX3BpcGU7Cn0gSlNUaHJlYWRTdGF0ZTsKCnR5cGVkZWYgc3RydWN0IGlucHV0X2J1ZmZlciB7CiAgdWludDhfdCogZGF0YTsKICBzaXplX3Qgc2l6ZTsKICB2b2lkICgqZnJlZSkoSlNDb250ZXh0KiwgdWludDhfdCosIEpTVmFsdWUpOwogIEpTVmFsdWUgdmFsdWU7Cn0gSlNCdWZmZXI7CgoKSlNWYWx1ZSAgdmVjdG9yMmFycmF5KEpTQ29udGV4dCosIGludCBhcmdjLCBKU1ZhbHVlIGFyZ3ZbXSk7CnZvaWQgICAgIGpzX2NvbnNvbGVfbG9nKEpTQ29udGV4dCosIEpTVmFsdWUqIGNvbnNvbGUsIEpTVmFsdWUqIGNvbnNvbGVfbG9nKTsKSlNWYWx1ZSAganNfZnVuY3Rpb25fYm91bmQoSlNDb250ZXh0KiwgSlNWYWx1ZSB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWUgYXJndltdLCBpbnQgbWFnaWMsIEpTVmFsdWUqIGZ1bmNfZGF0YSk7CkpTVmFsdWUgIGpzX2Z1bmN0aW9uX2JpbmQoSlNDb250ZXh0KiwgSlNWYWx1ZSBmdW5jLCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10pOwpKU1ZhbHVlICBqc19mdW5jdGlvbl9iaW5kXzEoSlNDb250ZXh0KiwgSlNWYWx1ZSBmdW5jLCBKU1ZhbHVlIGFyZyk7CkJPT0wgICAgIGpzX2lzX2l0ZXJhdG9yKEpTQ29udGV4dCosIEpTVmFsdWUgb2JqKTsKSlNWYWx1ZSAganNfaXRlcmF0b3JfbmV4dChKU0NvbnRleHQqLCBKU1ZhbHVlIG9iaiwgSlNWYWx1ZSogbmV4dCwgQk9PTCogZG9uZV9wLCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10pOwppbnQgICAgICBqc19jb3B5X3Byb3BlcnRpZXMoSlNDb250ZXh0KiwgSlNWYWx1ZSBkc3QsIEpTVmFsdWUgc3JjLCBpbnQgZmxhZ3MpOwpKU0J1ZmZlciBqc19idWZmZXJfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlIHZhbHVlKTsKQk9PTCAgICAganNfYnVmZmVyX3ZhbGlkKGNvbnN0IEpTQnVmZmVyKik7CkpTQnVmZmVyIGpzX2J1ZmZlcl9jbG9uZShjb25zdCBKU0J1ZmZlciosIEpTQ29udGV4dCogY3R4KTsKdm9pZCAgICAganNfYnVmZmVyX2R1bXAoY29uc3QgSlNCdWZmZXIqLCBEeW5CdWYqIGRiKTsKdm9pZCAgICAganNfYnVmZmVyX2ZyZWUoSlNCdWZmZXIqLCBKU0NvbnRleHQqIGN0eCk7CkJPT0wgICAgIGpzX2lzX2l0ZXJhYmxlKEpTQ29udGV4dCosIEpTVmFsdWUgb2JqKTsKQk9PTCAgICAganNfaXNfaXRlcmF0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSBvYmopOwoKc3RhdGljIGlubGluZSB2b2lkCmpzX2R1bXBfc3RyaW5nKGNvbnN0IGNoYXIqIHN0ciwgc2l6ZV90IGxlbiwgc2l6ZV90IG1heGxlbikgewogIHNpemVfdCBpLCBuID0gMjsKICBwdXRjaGFyKCdcJycpOwogIGZvcihpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICBpZihzdHJbaV0gPT0gJ1xuJykgewogICAgICBwdXRjaGFyKCdcXCcpOwogICAgICBwdXRjaGFyKCduJyk7CiAgICAgIG4gKz0gMjsKICAgIH0gZWxzZSB7CiAgICAgIHB1dGNoYXIoc3RyW2ldKTsKICAgICAgbisrOwogICAgfQogICAgaWYobWF4bGVuID4gMCAmJiBuICsgMSA+PSBtYXhsZW4pIHsKICAgICAgZnB1dHMoIicuLi4iLCBzdGRvdXQpOwogICAgICByZXR1cm47CiAgICB9CiAgfQogIHB1dGNoYXIoJ1wnJyk7Cn0KCnN0YXRpYyBpbmxpbmUgY2hhcioKanNfdG9fc3RyaW5nKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBjb25zdCBjaGFyKiBzOwogIGNoYXIqIHJldCA9IDA7CgogIGlmKChzID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpKSkgewogICAgcmV0ID0ganNfc3RyZHVwKGN0eCwgcyk7CiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHMpOwogIH0KICByZXR1cm4gcmV0Owp9Cgp0eXBlZGVmIHVuaW9uIHBvaW50ZXIgewogIHZvaWQqIHA7CiAgc3RydWN0IHsKICAgIGludDMyX3QgbG8zMiwgaGkzMjsKICB9OwogIHVpbnQ2NF90IHU2NDsKICBpbnQ2NF90IHM2NDsKICB1aW50MzJfdCB1MzJbMl07CiAgaW50MzJfdCBzMzJbMl07CiAgdWludDE2X3QgdTE2WzRdOwogIGludDE2X3QgczE2WzRdOwogIHVpbnQ4X3QgdThbOF07CiAgaW50OF90IHM4WzhdOwp9IFBvaW50ZXI7CgpzdGF0aWMgaW5saW5lIFBvaW50ZXIKcHRyKGNvbnN0IHZvaWQqIHB0cikgewogIFBvaW50ZXIgciA9IHswfTsKICByLnAgPSAodm9pZCopcHRyOwogIHJldHVybiByOwp9CgpzdGF0aWMgaW5saW5lIEpTVmFsdWUKcHRyMnZhbHVlKEpTQ29udGV4dCogY3R4LCBjb25zdCB2b2lkKiBwdHIpIHsKICBjaGFyIGJ1ZlsxMjhdOwogIHNpemVfdCBsZW47CiAgbGVuID0gc25wcmludGYoYnVmLCBzaXplb2YoYnVmKSwgIjB4JWxseCIsIChsb25nIGxvbmcpcHRyKTsKICByZXR1cm4gSlNfTmV3U3RyaW5nTGVuKGN0eCwgYnVmLCBsZW4pOwp9CgpzdGF0aWMgaW5saW5lIHZvaWQqCnZhbHVlMnB0cihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgUG9pbnRlciByID0ge3B0cn07CgogIGlmKEpTX1RvSW5kZXgoY3R4LCAmci51NjQsIHZhbHVlKSkgewogICAgY29uc3QgY2hhciogc3RyID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpOwogICAgQk9PTCBoZXggPSBzdHJbMF0gPT0gJzAnICYmIHN0clsxXSA9PSAneCc7CgogICAgci51NjQgPSBzdHJ0b3VsbChoZXggPyBzdHIgKyAyIDogc3RyLCAwLCBoZXggPyAxNiA6IDEwKTsKICB9CiAgcmV0dXJuIHIucDsKfQoKc3RhdGljIGlubGluZSB2b2lkKgpwdHIzMih1aW50MzJfdCBsbywgdWludDMyX3QgaGkpIHsKICBQb2ludGVyIHIgPSB7MH07CiAgci51MzJbMF0gPSBsbzsKICByLnUzMlsxXSA9IGhpOwogIHJldHVybiByLnA7Cn0KCnN0YXRpYyBpbmxpbmUgdm9pZCoKdmFsdWVzMzJwdHIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZXNbMl0pIHsKICB1aW50MzJfdCBsbywgaGk7CiAgSlNfVG9VaW50MzIoY3R4LCAmbG8sIHZhbHVlc1swXSk7CiAgSlNfVG9VaW50MzIoY3R4LCAmaGksIHZhbHVlc1sxXSk7CiAgcmV0dXJuIHB0cjMyKGxvLCBoaSk7Cn0KCnN0YXRpYyBpbmxpbmUgSlNWYWx1ZQpwdHIzMnZhbHVlKEpTQ29udGV4dCogY3R4LCBjb25zdCB2b2lkKiBwdHIsIGludCBpbmRleCkgewogIFBvaW50ZXIgciA9IHsodm9pZCopcHRyfTsKICByZXR1cm4gSlNfTmV3VWludDMyKGN0eCwgci51MzJbaW5kZXhdKTsKfQoKc3RhdGljIGlubGluZSBCT09MCmpzX2lzX251bGxpc2goSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgcmV0dXJuIEpTX0lzTnVsbCh2YWx1ZSkgfHwgSlNfSXNVbmRlZmluZWQodmFsdWUpOwp9CgpzdGF0aWMgaW5saW5lIHZvaWQKanNfYnVmZmVyX2ZyZWVfZGVmYXVsdChKU0NvbnRleHQqIGN0eCwgdWludDhfdCogZGF0YSwgSlNWYWx1ZSB2YWwpIHsKCiAgaWYoSlNfSXNTdHJpbmcodmFsKSkKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgZGF0YSk7CgogIGlmKCFKU19Jc1VuZGVmaW5lZCh2YWwpKQogICAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsKTsKfQoKc3RhdGljIGlubGluZSBjb25zdCB1aW50OF90Kgpqc19idWZmZXJfYmVnaW4oY29uc3QgSlNCdWZmZXIqIGluKSB7CiAgcmV0dXJuIGluLT5kYXRhOwp9CgpzdGF0aWMgaW5saW5lIGNvbnN0IHVpbnQ4X3QqCmpzX2J1ZmZlcl9lbmQoY29uc3QgSlNCdWZmZXIqIGluKSB7CiAgcmV0dXJuIGluLT5kYXRhICsgaW4tPnNpemU7Cn0KCiNlbmRpZiAvKiBNSU5ORVRfSlNfVVRJTFNfSCAqLwoAAAAAAAAAADgPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrAQAAAAAAAOsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"paste",
					null,
					"AgAAAOsBAAAAAAAAPgYAAAAAAAAAAAAAPgYAAAAAAAA+BgAAAAAAALwDAABKU1ZhbHVlIHZlY3RvcjJhcnJheShKU0NvbnRleHQqLCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10pOwp2b2lkIGpzX2NvbnNvbGVfbG9nKEpTQ29udGV4dCosIEpTVmFsdWUqIGNvbnNvbGUsIEpTVmFsdWUqIGNvbnNvbGVfbG9nKTsKSlNWYWx1ZSBqc19mdW5jdGlvbl9ib3VuZChKU0NvbnRleHQqLCBKU1ZhbHVlIHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10sIGludCBtYWdpYywgSlNWYWx1ZSogZnVuY19kYXRhKTsKSlNWYWx1ZSBqc19mdW5jdGlvbl9iaW5kKEpTQ29udGV4dCosIEpTVmFsdWUgZnVuYywgaW50IGFyZ2MsIEpTVmFsdWUgYXJndltdKTsKSlNWYWx1ZSBqc19mdW5jdGlvbl9iaW5kXzEoSlNDb250ZXh0KiwgSlNWYWx1ZSBmdW5jLCBKU1ZhbHVlIGFyZyk7CkJPT0wganNfaXNfaXRlcmF0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSBvYmopOwpKU1ZhbHVlIGpzX2l0ZXJhdG9yX25leHQoSlNDb250ZXh0KiwgSlNWYWx1ZSBvYmosIEpTVmFsdWUqIG5leHQsIEJPT0wqIGRvbmVfcCwgaW50IGFyZ2MsIEpTVmFsdWUgYXJndltdKTsKaW50IGpzX2NvcHlfcHJvcGVydGllcyhKU0NvbnRleHQqLCBKU1ZhbHVlIGRzdCwgSlNWYWx1ZSBzcmMsIGludCBmbGFncyk7CkpTQnVmZmVyIGpzX2J1ZmZlcl9mcm9tKEpTQ29udGV4dCosIEpTVmFsdWUgdmFsdWUpOwpCT09MIGpzX2J1ZmZlcl92YWxpZChjb25zdCBKU0J1ZmZlciopOwpKU0J1ZmZlciBqc19idWZmZXJfY2xvbmUoY29uc3QgSlNCdWZmZXIqLCBKU0NvbnRleHQqIGN0eCk7CnZvaWQganNfYnVmZmVyX2R1bXAoY29uc3QgSlNCdWZmZXIqLCBEeW5CdWYqIGRiKTsKdm9pZCBqc19idWZmZXJfZnJlZShKU0J1ZmZlciosIEpTQ29udGV4dCogY3R4KTsKQk9PTCBqc19pc19pdGVyYWJsZShKU0NvbnRleHQqLCBKU1ZhbHVlIG9iaik7CkJPT0wganNfaXNfaXRlcmF0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSBvYmopOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnBQAAAAAAAOsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"paste",
					null,
					"AgAAAOsBAAAAAAAAdAYAAAAAAAAAAAAAdAYAAAAAAAB0BgAAAAAAAFIEAABKU1ZhbHVlICB2ZWN0b3IyYXJyYXkoSlNDb250ZXh0KiwgaW50IGFyZ2MsIEpTVmFsdWUgYXJndltdKTsKdm9pZCAgICAganNfY29uc29sZV9sb2coSlNDb250ZXh0KiwgSlNWYWx1ZSogY29uc29sZSwgSlNWYWx1ZSogY29uc29sZV9sb2cpOwpKU1ZhbHVlICBqc19mdW5jdGlvbl9ib3VuZChKU0NvbnRleHQqLCBKU1ZhbHVlIHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10sIGludCBtYWdpYywgSlNWYWx1ZSogZnVuY19kYXRhKTsKSlNWYWx1ZSAganNfZnVuY3Rpb25fYmluZChKU0NvbnRleHQqLCBKU1ZhbHVlIGZ1bmMsIGludCBhcmdjLCBKU1ZhbHVlIGFyZ3ZbXSk7CkpTVmFsdWUgIGpzX2Z1bmN0aW9uX2JpbmRfMShKU0NvbnRleHQqLCBKU1ZhbHVlIGZ1bmMsIEpTVmFsdWUgYXJnKTsKSlNWYWx1ZSAganNfaXRlcmF0b3JfbmV4dChKU0NvbnRleHQqLCBKU1ZhbHVlIG9iaiwgSlNWYWx1ZSogbmV4dCwgQk9PTCogZG9uZV9wLCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10pOwppbnQgICAgICBqc19jb3B5X3Byb3BlcnRpZXMoSlNDb250ZXh0KiwgSlNWYWx1ZSBkc3QsIEpTVmFsdWUgc3JjLCBpbnQgZmxhZ3MpOwpKU0J1ZmZlciBqc19idWZmZXJfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlIHZhbHVlKTsKQk9PTCAgICAganNfYnVmZmVyX3ZhbGlkKGNvbnN0IEpTQnVmZmVyKik7CkpTQnVmZmVyIGpzX2J1ZmZlcl9jbG9uZShjb25zdCBKU0J1ZmZlciosIEpTQ29udGV4dCogY3R4KTsKdm9pZCAgICAganNfYnVmZmVyX2R1bXAoY29uc3QgSlNCdWZmZXIqLCBEeW5CdWYqIGRiKTsKdm9pZCAgICAganNfYnVmZmVyX2ZyZWUoSlNCdWZmZXIqLCBKU0NvbnRleHQqIGN0eCk7CkJPT0wgICAgIGpzX2lzX2l0ZXJhYmxlKEpTQ29udGV4dCosIEpTVmFsdWUgb2JqKTsKQk9PTCAgICAganNfaXNfaXRlcmF0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSBvYmopOwpKU0F0b20gICBqc19zeW1ib2xfc3RhdGljX2F0b20oSlNDb250ZXh0KiwgY29uc3QgY2hhciogbmFtZSk7CkpTVmFsdWUgIGpzX3N5bWJvbF9zdGF0aWNfdmFsdWUoSlNDb250ZXh0KiwgY29uc3QgY2hhciogbmFtZSk7CkpTVmFsdWUgIGpzX3N5bWJvbF9jdG9yKEpTQ29udGV4dCopOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9BgAAAAAAAOsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAGEAAAI2lmbmRlZiBNSU5ORVRfSlNVVElMU19ICiNkZWZpbmUgTUlOTkVUX0pTVVRJTFNfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSA8bGlzdC5oPgoKdHlwZWRlZiBzdHJ1Y3QgSlNUaHJlYWRTdGF0ZSB7CiAgc3RydWN0IGxpc3RfaGVhZCBvc19yd19oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3NpZ25hbF9oYW5kbGVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIG9zX3RpbWVyczsKICBzdHJ1Y3QgbGlzdF9oZWFkIHBvcnRfbGlzdDsKICBpbnQgZXZhbF9zY3JpcHRfcmVjdXJzZTsKICB2b2lkICpyZWN2X3BpcGUsICpzZW5kX3BpcGU7Cn0gSlNUaHJlYWRTdGF0ZTsKCnR5cGVkZWYgc3RydWN0IGlucHV0X2J1ZmZlciB7CiAgdWludDhfdCogZGF0YTsKICBzaXplX3Qgc2l6ZTsKICB2b2lkICgqZnJlZSkoSlNDb250ZXh0KiwgdWludDhfdCosIEpTVmFsdWUpOwogIEpTVmFsdWUgdmFsdWU7Cn0gSlNCdWZmZXI7CgpKU1ZhbHVlICB2ZWN0b3IyYXJyYXkoSlNDb250ZXh0KiwgaW50IGFyZ2MsIEpTVmFsdWUgYXJndltdKTsKdm9pZCAgICAganNfY29uc29sZV9sb2coSlNDb250ZXh0KiwgSlNWYWx1ZSogY29uc29sZSwgSlNWYWx1ZSogY29uc29sZV9sb2cpOwpKU1ZhbHVlICBqc19mdW5jdGlvbl9ib3VuZChKU0NvbnRleHQqLCBKU1ZhbHVlIHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10sIGludCBtYWdpYywgSlNWYWx1ZSogZnVuY19kYXRhKTsKSlNWYWx1ZSAganNfZnVuY3Rpb25fYmluZChKU0NvbnRleHQqLCBKU1ZhbHVlIGZ1bmMsIGludCBhcmdjLCBKU1ZhbHVlIGFyZ3ZbXSk7CkpTVmFsdWUgIGpzX2Z1bmN0aW9uX2JpbmRfMShKU0NvbnRleHQqLCBKU1ZhbHVlIGZ1bmMsIEpTVmFsdWUgYXJnKTsKSlNWYWx1ZSAganNfaXRlcmF0b3JfbmV4dChKU0NvbnRleHQqLCBKU1ZhbHVlIG9iaiwgSlNWYWx1ZSogbmV4dCwgQk9PTCogZG9uZV9wLCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10pOwppbnQgICAgICBqc19jb3B5X3Byb3BlcnRpZXMoSlNDb250ZXh0KiwgSlNWYWx1ZSBkc3QsIEpTVmFsdWUgc3JjLCBpbnQgZmxhZ3MpOwpKU0J1ZmZlciBqc19idWZmZXJfZnJvbShKU0NvbnRleHQqLCBKU1ZhbHVlIHZhbHVlKTsKQk9PTCAgICAganNfYnVmZmVyX3ZhbGlkKGNvbnN0IEpTQnVmZmVyKik7CkpTQnVmZmVyIGpzX2J1ZmZlcl9jbG9uZShjb25zdCBKU0J1ZmZlciosIEpTQ29udGV4dCogY3R4KTsKdm9pZCAgICAganNfYnVmZmVyX2R1bXAoY29uc3QgSlNCdWZmZXIqLCBEeW5CdWYqIGRiKTsKdm9pZCAgICAganNfYnVmZmVyX2ZyZWUoSlNCdWZmZXIqLCBKU0NvbnRleHQqIGN0eCk7CkJPT0wgICAgIGpzX2lzX2l0ZXJhYmxlKEpTQ29udGV4dCosIEpTVmFsdWUgb2JqKTsKQk9PTCAgICAganNfaXNfaXRlcmF0b3IoSlNDb250ZXh0KiwgSlNWYWx1ZSBvYmopOwpKU0F0b20gICBqc19zeW1ib2xfc3RhdGljX2F0b20oSlNDb250ZXh0KiwgY29uc3QgY2hhciogbmFtZSk7CkpTVmFsdWUgIGpzX3N5bWJvbF9zdGF0aWNfdmFsdWUoSlNDb250ZXh0KiwgY29uc3QgY2hhciogbmFtZSk7CkpTVmFsdWUgIGpzX3N5bWJvbF9jdG9yKEpTQ29udGV4dCopOwpKU1ZhbHVlICBqc19nbG9iYWxfZ2V0KEpTQ29udGV4dCosIGNvbnN0IGNoYXIqIHByb3ApOwoKCgpzdGF0aWMgaW5saW5lIHZvaWQKanNfZHVtcF9zdHJpbmcoY29uc3QgY2hhciogc3RyLCBzaXplX3QgbGVuLCBzaXplX3QgbWF4bGVuKSB7CiAgc2l6ZV90IGksIG4gPSAyOwogIHB1dGNoYXIoJ1wnJyk7CiAgZm9yKGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKICAgIGlmKHN0cltpXSA9PSAnXG4nKSB7CiAgICAgIHB1dGNoYXIoJ1xcJyk7CiAgICAgIHB1dGNoYXIoJ24nKTsKICAgICAgbiArPSAyOwogICAgfSBlbHNlIHsKICAgICAgcHV0Y2hhcihzdHJbaV0pOwogICAgICBuKys7CiAgICB9CiAgICBpZihtYXhsZW4gPiAwICYmIG4gKyAxID49IG1heGxlbikgewogICAgICBmcHV0cygiJy4uLiIsIHN0ZG91dCk7CiAgICAgIHJldHVybjsKICAgIH0KICB9CiAgcHV0Y2hhcignXCcnKTsKfQoKc3RhdGljIGlubGluZSBjaGFyKgpqc190b19zdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIGNvbnN0IGNoYXIqIHM7CiAgY2hhciogcmV0ID0gMDsKCiAgaWYoKHMgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSkpKSB7CiAgICByZXQgPSBqc19zdHJkdXAoY3R4LCBzKTsKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcyk7CiAgfQogIHJldHVybiByZXQ7Cn0KCnR5cGVkZWYgdW5pb24gcG9pbnRlciB7CiAgdm9pZCogcDsKICBzdHJ1Y3QgewogICAgaW50MzJfdCBsbzMyLCBoaTMyOwogIH07CiAgdWludDY0X3QgdTY0OwogIGludDY0X3QgczY0OwogIHVpbnQzMl90IHUzMlsyXTsKICBpbnQzMl90IHMzMlsyXTsKICB1aW50MTZfdCB1MTZbNF07CiAgaW50MTZfdCBzMTZbNF07CiAgdWludDhfdCB1OFs4XTsKICBpbnQ4X3QgczhbOF07Cn0gUG9pbnRlcjsKCnN0YXRpYyBpbmxpbmUgUG9pbnRlcgpwdHIoY29uc3Qgdm9pZCogcHRyKSB7CiAgUG9pbnRlciByID0gezB9OwogIHIucCA9ICh2b2lkKilwdHI7CiAgcmV0dXJuIHI7Cn0KCnN0YXRpYyBpbmxpbmUgSlNWYWx1ZQpwdHIydmFsdWUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IHZvaWQqIHB0cikgewogIGNoYXIgYnVmWzEyOF07CiAgc2l6ZV90IGxlbjsKICBsZW4gPSBzbnByaW50ZihidWYsIHNpemVvZihidWYpLCAiMHglbGx4IiwgKGxvbmcgbG9uZylwdHIpOwogIHJldHVybiBKU19OZXdTdHJpbmdMZW4oY3R4LCBidWYsIGxlbik7Cn0KCnN0YXRpYyBpbmxpbmUgdm9pZCoKdmFsdWUycHRyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBQb2ludGVyIHIgPSB7cHRyfTsKCiAgaWYoSlNfVG9JbmRleChjdHgsICZyLnU2NCwgdmFsdWUpKSB7CiAgICBjb25zdCBjaGFyKiBzdHIgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWx1ZSk7CiAgICBCT09MIGhleCA9IHN0clswXSA9PSAnMCcgJiYgc3RyWzFdID09ICd4JzsKCiAgICByLnU2NCA9IHN0cnRvdWxsKGhleCA/IHN0ciArIDIgOiBzdHIsIDAsIGhleCA/IDE2IDogMTApOwogIH0KICByZXR1cm4gci5wOwp9CgpzdGF0aWMgaW5saW5lIHZvaWQqCnB0cjMyKHVpbnQzMl90IGxvLCB1aW50MzJfdCBoaSkgewogIFBvaW50ZXIgciA9IHswfTsKICByLnUzMlswXSA9IGxvOwogIHIudTMyWzFdID0gaGk7CiAgcmV0dXJuIHIucDsKfQoKc3RhdGljIGlubGluZSB2b2lkKgp2YWx1ZXMzMnB0cihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlc1syXSkgewogIHVpbnQzMl90IGxvLCBoaTsKICBKU19Ub1VpbnQzMihjdHgsICZsbywgdmFsdWVzWzBdKTsKICBKU19Ub1VpbnQzMihjdHgsICZoaSwgdmFsdWVzWzFdKTsKICByZXR1cm4gcHRyMzIobG8sIGhpKTsKfQoKc3RhdGljIGlubGluZSBKU1ZhbHVlCnB0cjMydmFsdWUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IHZvaWQqIHB0ciwgaW50IGluZGV4KSB7CiAgUG9pbnRlciByID0geyh2b2lkKilwdHJ9OwogIHJldHVybiBKU19OZXdVaW50MzIoY3R4LCByLnUzMltpbmRleF0pOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKanNfaXNfbnVsbGlzaChKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICByZXR1cm4gSlNfSXNOdWxsKHZhbHVlKSB8fCBKU19Jc1VuZGVmaW5lZCh2YWx1ZSk7Cn0KCnN0YXRpYyBpbmxpbmUgdm9pZApqc19idWZmZXJfZnJlZV9kZWZhdWx0KEpTQ29udGV4dCogY3R4LCB1aW50OF90KiBkYXRhLCBKU1ZhbHVlIHZhbCkgewoKICBpZihKU19Jc1N0cmluZyh2YWwpKQogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBkYXRhKTsKCiAgaWYoIUpTX0lzVW5kZWZpbmVkKHZhbCkpCiAgICBKU19GcmVlVmFsdWUoY3R4LCB2YWwpOwp9CgpzdGF0aWMgaW5saW5lIGNvbnN0IHVpbnQ4X3QqCmpzX2J1ZmZlcl9iZWdpbihjb25zdCBKU0J1ZmZlciogaW4pIHsKICByZXR1cm4gaW4tPmRhdGE7Cn0KCnN0YXRpYyBpbmxpbmUgY29uc3QgdWludDhfdCoKanNfYnVmZmVyX2VuZChjb25zdCBKU0J1ZmZlciogaW4pIHsKICByZXR1cm4gaW4tPmRhdGEgKyBpbi0+c2l6ZTsKfQoKI2VuZGlmIC8qIE1JTk5FVF9KU19VVElMU19IICovCgAAAAAAAAAA3Q8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0BgAAAAAAAHQGAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "jsutils.c",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC6EQAAI2luY2x1ZGUgImpzdXRpbHMuaCIKCkpTVmFsdWUKdmVjdG9yMmFycmF5KEpTQ29udGV4dCogY3R4LCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10pIHsKICBpbnQgaTsKICBKU1ZhbHVlIHJldCA9IEpTX05ld0FycmF5KGN0eCk7CiAgZm9yKGkgPSAwOyBpIDwgYXJnYzsgaSsrKSBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHJldCwgaSwgYXJndltpXSk7CiAgcmV0dXJuIHJldDsKfQoKdm9pZApqc19jb25zb2xlX2xvZyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZSogY29uc29sZSwgSlNWYWx1ZSogY29uc29sZV9sb2cpIHsKICBKU1ZhbHVlIGdsb2JhbCA9IEpTX0dldEdsb2JhbE9iamVjdChjdHgpOwogICpjb25zb2xlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBnbG9iYWwsICJjb25zb2xlIik7CiAgKmNvbnNvbGVfbG9nID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCAqY29uc29sZSwgImxvZyIpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIGdsb2JhbCk7Cn0KCkpTVmFsdWUKanNfZnVuY3Rpb25fYm91bmQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYywgSlNWYWx1ZSogZnVuY19kYXRhKSB7CiAgSlNWYWx1ZSBhcmdzW2FyZ2MgKyBtYWdpY107CiAgaW50IGksIGo7CiAgZm9yKGkgPSAwOyBpIDwgbWFnaWM7IGkrKykgYXJnc1tpXSA9IGZ1bmNfZGF0YVtpICsgMV07CiAgZm9yKGogPSAwOyBqIDwgYXJnYzsgaisrKSBhcmdzW2krK10gPSBhcmd2W2pdOwoKICByZXR1cm4gSlNfQ2FsbChjdHgsIGZ1bmNfZGF0YVswXSwgdGhpc192YWwsIGksIGFyZ3MpOwp9CgpKU1ZhbHVlCmpzX2Z1bmN0aW9uX2JpbmQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBmdW5jLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgZGF0YVthcmdjICsgMV07CiAgaW50IGk7CiAgZGF0YVswXSA9IEpTX0R1cFZhbHVlKGN0eCwgZnVuYyk7CiAgZm9yKGkgPSAwOyBpIDwgYXJnYzsgaSsrKSBkYXRhW2kgKyAxXSA9IEpTX0R1cFZhbHVlKGN0eCwgYXJndltpXSk7CiAgcmV0dXJuIEpTX05ld0NGdW5jdGlvbkRhdGEoY3R4LCBqc19mdW5jdGlvbl9ib3VuZCwgMCwgYXJnYywgYXJnYyArIDEsIGRhdGEpOwp9CgpKU1ZhbHVlCmpzX2Z1bmN0aW9uX2JpbmRfMShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IGZ1bmMsIEpTVmFsdWVDb25zdCBhcmcpIHsKICByZXR1cm4ganNfZnVuY3Rpb25fYmluZChjdHgsIGZ1bmMsIDEsICZhcmcpOwp9CgovKkpTVmFsdWUKanNfaXRlcmF0b3JfbWV0aG9kKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgSlNBdG9tIGF0b207CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgYXRvbSA9IGpzX3N5bWJvbF9zdGF0aWNfYXRvbShjdHgsICJpdGVyYXRvciIpOwogIGlmKEpTX0hhc1Byb3BlcnR5KGN0eCwgb2JqLCBhdG9tKSkKICAgIHJldCA9IEpTX0dldFByb3BlcnR5KGN0eCwgb2JqLCBhdG9tKTsKCiAgSlNfRnJlZUF0b20oY3R4LCBhdG9tKTsKICBpZighSlNfSXNGdW5jdGlvbihjdHgsIHJldCkpIHsKICAgIGF0b20gPSBqc19zeW1ib2xfc3RhdGljX2F0b20oY3R4LCAiYXN5bmNJdGVyYXRvciIpOwogICAgaWYoSlNfSGFzUHJvcGVydHkoY3R4LCBvYmosIGF0b20pKQogICAgICByZXQgPSBKU19HZXRQcm9wZXJ0eShjdHgsIG9iaiwgYXRvbSk7CgogICAgSlNfRnJlZUF0b20oY3R4LCBhdG9tKTsKICB9CiAgcmV0dXJuIHJldDsKfQoKSlNWYWx1ZQpqc19pdGVyYXRvcl9uZXcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICBKU1ZhbHVlIGZuLCByZXQ7CiAgZm4gPSBqc19pdGVyYXRvcl9tZXRob2QoY3R4LCBvYmopOwogIHJldCA9IEpTX0NhbGwoY3R4LCBmbiwgb2JqLCAwLCAwKTsKICBKU19GcmVlVmFsdWUoY3R4LCBmbik7CiAgcmV0dXJuIHJldDsKfSovCgpCT09MCmpzX2lzX2l0ZXJhdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgaWYoSlNfSXNPYmplY3Qob2JqKSkgewogICAgSlNWYWx1ZSBuZXh0ID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmosICJuZXh0Iik7CiAgICBpZihKU19Jc0Z1bmN0aW9uKGN0eCwgbmV4dCkpCiAgICAgIHJldHVybiBUUlVFOwogIH0KICByZXR1cm4gRkFMU0U7Cn0KCkpTVmFsdWUKanNfaXRlcmF0b3JfbmV4dChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaiwgSlNWYWx1ZSogbmV4dCwgQk9PTCogZG9uZV9wLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgZm4sIHJlc3VsdCwgZG9uZSwgdmFsdWU7CgogIGlmKCFKU19Jc09iamVjdChvYmopKQogICAgcmV0dXJuIEpTX1Rocm93VHlwZUVycm9yKGN0eCwgImFyZ3VtZW50IGlzIG5vdCBhbiBvYmplY3QgKCVkKSBcIiVzXCIiLCBKU19WQUxVRV9HRVRfVEFHKG9iaiksIEpTX1RvQ1N0cmluZyhjdHgsIG9iaikpOwoKICBpZihKU19Jc09iamVjdCgqbmV4dCkgJiYgSlNfSXNGdW5jdGlvbihjdHgsICpuZXh0KSkgewogICAgZm4gPSAqbmV4dDsKICB9IGVsc2UgewogICAgZm4gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgIm5leHQiKTsKCiAgICBpZihKU19Jc1VuZGVmaW5lZChmbikpCiAgICAgIHJldHVybiBKU19UaHJvd1R5cGVFcnJvcihjdHgsICJvYmplY3QgZG9lcyBub3QgaGF2ZSAnbmV4dCcgbWV0aG9kIik7CgogICAgaWYoIUpTX0lzRnVuY3Rpb24oY3R4LCBmbikpCiAgICAgIHJldHVybiBKU19UaHJvd1R5cGVFcnJvcihjdHgsICJvYmplY3QubmV4dCBpcyBub3QgYSBmdW5jdGlvbiIpOwoKICAgICpuZXh0ID0gZm47CiAgfQoKICByZXN1bHQgPSBKU19DYWxsKGN0eCwgZm4sIG9iaiwgYXJnYywgYXJndik7CiAgLy8gSlNfRnJlZVZhbHVlKGN0eCwgZm4pOwoKICBpZihKU19Jc0V4Y2VwdGlvbihyZXN1bHQpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgZG9uZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgcmVzdWx0LCAiZG9uZSIpOwogIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCByZXN1bHQsICJ2YWx1ZSIpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHJlc3VsdCk7CiAgKmRvbmVfcCA9IEpTX1RvQm9vbChjdHgsIGRvbmUpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIGRvbmUpOwogIHJldHVybiB2YWx1ZTsKfQoKaW50CmpzX2NvcHlfcHJvcGVydGllcyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IGRzdCwgSlNWYWx1ZUNvbnN0IHNyYywgaW50IGZsYWdzKSB7CiAgSlNQcm9wZXJ0eUVudW0qIHRhYjsKICB1aW50MzJfdCB0YWJfbGVuLCBpOwoKICBpZihKU19HZXRPd25Qcm9wZXJ0eU5hbWVzKGN0eCwgJnRhYiwgJnRhYl9sZW4sIHNyYywgZmxhZ3MpKQogICAgcmV0dXJuIC0xOwoKICBmb3IoaSA9IDA7IGkgPCB0YWJfbGVuOyBpKyspIHsKICAgIEpTVmFsdWUgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eShjdHgsIHNyYywgdGFiW2ldLmF0b20pOwogICAgSlNfU2V0UHJvcGVydHkoY3R4LCBkc3QsIHRhYltpXS5hdG9tLCB2YWx1ZSk7CiAgfQogIHJldHVybiBpOwp9CgpKU0J1ZmZlcgpqc19idWZmZXJfZnJvbShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgSlNCdWZmZXIgcmV0ID0gezAsIDAsICZqc19idWZmZXJfZnJlZV9kZWZhdWx0LCBKU19VTkRFRklORUR9OwogIHJldC52YWx1ZSA9IEpTX0R1cFZhbHVlKGN0eCwgdmFsdWUpOwogIHJldC5mcmVlID0gJmpzX2J1ZmZlcl9mcmVlX2RlZmF1bHQ7CgogIGlmKEpTX0lzU3RyaW5nKHZhbHVlKSkgewogICAgcmV0LmRhdGEgPSAodWludDhfdCopSlNfVG9DU3RyaW5nTGVuKGN0eCwgJnJldC5zaXplLCB2YWx1ZSk7CiAgfSBlbHNlIHsKICAgIHJldC5kYXRhID0gSlNfR2V0QXJyYXlCdWZmZXIoY3R4LCAmcmV0LnNpemUsIHJldC52YWx1ZSk7CiAgfQogIHJldHVybiByZXQ7Cn0KCkJPT0wKanNfYnVmZmVyX3ZhbGlkKGNvbnN0IEpTQnVmZmVyKiBpbikgewogIHJldHVybiAhSlNfSXNFeGNlcHRpb24oaW4tPnZhbHVlKTsKfQoKSlNCdWZmZXIKanNfYnVmZmVyX2Nsb25lKGNvbnN0IEpTQnVmZmVyKiBpbiwgSlNDb250ZXh0KiBjdHgpIHsKICBKU0J1ZmZlciByZXQgPSBqc19idWZmZXJfZnJvbShjdHgsIGluLT52YWx1ZSk7CgogIC8qICByZXQuc2l6ZSA9IGluLT5zaXplOwogICByZXQuZnJlZSA9IGluLT5mcmVlOyovCgogIHJldHVybiByZXQ7Cn0KCnZvaWQKanNfYnVmZmVyX2R1bXAoY29uc3QgSlNCdWZmZXIqIGluLCBEeW5CdWYqIGRiKSB7CiAgZGJ1Zl9wcmludGYoZGIsICIoSlNCdWZmZXIpeyAuZGF0YSA9ICVwLCAuc2l6ZSA9ICV6dSwgLmZyZWUgPSAlcCB9IiwgaW4tPmRhdGEsIGluLT5zaXplLCBpbi0+ZnJlZSk7Cn0KCnZvaWQKanNfYnVmZmVyX2ZyZWUoSlNCdWZmZXIqIGluLCBKU0NvbnRleHQqIGN0eCkgewogIGlmKGluLT5kYXRhKSB7CiAgICBpbi0+ZnJlZShjdHgsIGluLT5kYXRhLCBpbi0+dmFsdWUpOwogICAgaW4tPmRhdGEgPSAwOwogICAgaW4tPnNpemUgPSAwOwogICAgaW4tPnZhbHVlID0gSlNfVU5ERUZJTkVEOwogIH0KfQoAAAAAAAAAABsUAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1BgAAAAAAALUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAKEHAAAAAAAAogcAAAAAAAAAAAAAogcAAAAAAACiBwAAAAAAANQAAAAKCkJPT0wKanNfaXNfaXRlcmF0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICBpZihKU19Jc09iamVjdChvYmopKSB7CiAgICBKU1ZhbHVlIG5leHQgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgIm5leHQiKTsKICAgIGlmKEpTX0lzRnVuY3Rpb24oY3R4LCBuZXh0KSkKICAgICAgcmV0dXJuIFRSVUU7CiAgfQogIHJldHVybiBGQUxTRTsKfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1CAAAAAAAAKEHAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABIEwAAI2luY2x1ZGUgImpzdXRpbHMuaCIKCkpTVmFsdWUKdmVjdG9yMmFycmF5KEpTQ29udGV4dCogY3R4LCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10pIHsKICBpbnQgaTsKICBKU1ZhbHVlIHJldCA9IEpTX05ld0FycmF5KGN0eCk7CiAgZm9yKGkgPSAwOyBpIDwgYXJnYzsgaSsrKSBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHJldCwgaSwgYXJndltpXSk7CiAgcmV0dXJuIHJldDsKfQoKdm9pZApqc19jb25zb2xlX2xvZyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZSogY29uc29sZSwgSlNWYWx1ZSogY29uc29sZV9sb2cpIHsKICBKU1ZhbHVlIGdsb2JhbCA9IEpTX0dldEdsb2JhbE9iamVjdChjdHgpOwogICpjb25zb2xlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBnbG9iYWwsICJjb25zb2xlIik7CiAgKmNvbnNvbGVfbG9nID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCAqY29uc29sZSwgImxvZyIpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIGdsb2JhbCk7Cn0KCkpTVmFsdWUKanNfZnVuY3Rpb25fYm91bmQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYywgSlNWYWx1ZSogZnVuY19kYXRhKSB7CiAgSlNWYWx1ZSBhcmdzW2FyZ2MgKyBtYWdpY107CiAgaW50IGksIGo7CiAgZm9yKGkgPSAwOyBpIDwgbWFnaWM7IGkrKykgYXJnc1tpXSA9IGZ1bmNfZGF0YVtpICsgMV07CiAgZm9yKGogPSAwOyBqIDwgYXJnYzsgaisrKSBhcmdzW2krK10gPSBhcmd2W2pdOwoKICByZXR1cm4gSlNfQ2FsbChjdHgsIGZ1bmNfZGF0YVswXSwgdGhpc192YWwsIGksIGFyZ3MpOwp9CgpKU1ZhbHVlCmpzX2Z1bmN0aW9uX2JpbmQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBmdW5jLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgZGF0YVthcmdjICsgMV07CiAgaW50IGk7CiAgZGF0YVswXSA9IEpTX0R1cFZhbHVlKGN0eCwgZnVuYyk7CiAgZm9yKGkgPSAwOyBpIDwgYXJnYzsgaSsrKSBkYXRhW2kgKyAxXSA9IEpTX0R1cFZhbHVlKGN0eCwgYXJndltpXSk7CiAgcmV0dXJuIEpTX05ld0NGdW5jdGlvbkRhdGEoY3R4LCBqc19mdW5jdGlvbl9ib3VuZCwgMCwgYXJnYywgYXJnYyArIDEsIGRhdGEpOwp9CgpKU1ZhbHVlCmpzX2Z1bmN0aW9uX2JpbmRfMShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IGZ1bmMsIEpTVmFsdWVDb25zdCBhcmcpIHsKICByZXR1cm4ganNfZnVuY3Rpb25fYmluZChjdHgsIGZ1bmMsIDEsICZhcmcpOwp9CgovKkpTVmFsdWUKanNfaXRlcmF0b3JfbWV0aG9kKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgSlNBdG9tIGF0b207CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgYXRvbSA9IGpzX3N5bWJvbF9zdGF0aWNfYXRvbShjdHgsICJpdGVyYXRvciIpOwogIGlmKEpTX0hhc1Byb3BlcnR5KGN0eCwgb2JqLCBhdG9tKSkKICAgIHJldCA9IEpTX0dldFByb3BlcnR5KGN0eCwgb2JqLCBhdG9tKTsKCiAgSlNfRnJlZUF0b20oY3R4LCBhdG9tKTsKICBpZighSlNfSXNGdW5jdGlvbihjdHgsIHJldCkpIHsKICAgIGF0b20gPSBqc19zeW1ib2xfc3RhdGljX2F0b20oY3R4LCAiYXN5bmNJdGVyYXRvciIpOwogICAgaWYoSlNfSGFzUHJvcGVydHkoY3R4LCBvYmosIGF0b20pKQogICAgICByZXQgPSBKU19HZXRQcm9wZXJ0eShjdHgsIG9iaiwgYXRvbSk7CgogICAgSlNfRnJlZUF0b20oY3R4LCBhdG9tKTsKICB9CiAgcmV0dXJuIHJldDsKfQoKSlNWYWx1ZQpqc19pdGVyYXRvcl9uZXcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICBKU1ZhbHVlIGZuLCByZXQ7CiAgZm4gPSBqc19pdGVyYXRvcl9tZXRob2QoY3R4LCBvYmopOwogIHJldCA9IEpTX0NhbGwoY3R4LCBmbiwgb2JqLCAwLCAwKTsKICBKU19GcmVlVmFsdWUoY3R4LCBmbik7CiAgcmV0dXJuIHJldDsKfSovIAoKSlNWYWx1ZQpqc19pdGVyYXRvcl9uZXh0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqLCBKU1ZhbHVlKiBuZXh0LCBCT09MKiBkb25lX3AsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSBmbiwgcmVzdWx0LCBkb25lLCB2YWx1ZTsKCiAgaWYoIUpTX0lzT2JqZWN0KG9iaikpCiAgICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiYXJndW1lbnQgaXMgbm90IGFuIG9iamVjdCAoJWQpIFwiJXNcIiIsIEpTX1ZBTFVFX0dFVF9UQUcob2JqKSwgSlNfVG9DU3RyaW5nKGN0eCwgb2JqKSk7CgogIGlmKEpTX0lzT2JqZWN0KCpuZXh0KSAmJiBKU19Jc0Z1bmN0aW9uKGN0eCwgKm5leHQpKSB7CiAgICBmbiA9ICpuZXh0OwogIH0gZWxzZSB7CiAgICBmbiA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqLCAibmV4dCIpOwoKICAgIGlmKEpTX0lzVW5kZWZpbmVkKGZuKSkKICAgICAgcmV0dXJuIEpTX1Rocm93VHlwZUVycm9yKGN0eCwgIm9iamVjdCBkb2VzIG5vdCBoYXZlICduZXh0JyBtZXRob2QiKTsKCiAgICBpZighSlNfSXNGdW5jdGlvbihjdHgsIGZuKSkKICAgICAgcmV0dXJuIEpTX1Rocm93VHlwZUVycm9yKGN0eCwgIm9iamVjdC5uZXh0IGlzIG5vdCBhIGZ1bmN0aW9uIik7CgogICAgKm5leHQgPSBmbjsKICB9CgogIHJlc3VsdCA9IEpTX0NhbGwoY3R4LCBmbiwgb2JqLCBhcmdjLCBhcmd2KTsKICAvLyBKU19GcmVlVmFsdWUoY3R4LCBmbik7CgogIGlmKEpTX0lzRXhjZXB0aW9uKHJlc3VsdCkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBkb25lID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCByZXN1bHQsICJkb25lIik7CiAgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIHJlc3VsdCwgInZhbHVlIik7CiAgSlNfRnJlZVZhbHVlKGN0eCwgcmVzdWx0KTsKICAqZG9uZV9wID0gSlNfVG9Cb29sKGN0eCwgZG9uZSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgZG9uZSk7CiAgcmV0dXJuIHZhbHVlOwp9CgppbnQKanNfY29weV9wcm9wZXJ0aWVzKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgZHN0LCBKU1ZhbHVlQ29uc3Qgc3JjLCBpbnQgZmxhZ3MpIHsKICBKU1Byb3BlcnR5RW51bSogdGFiOwogIHVpbnQzMl90IHRhYl9sZW4sIGk7CgogIGlmKEpTX0dldE93blByb3BlcnR5TmFtZXMoY3R4LCAmdGFiLCAmdGFiX2xlbiwgc3JjLCBmbGFncykpCiAgICByZXR1cm4gLTE7CgogIGZvcihpID0gMDsgaSA8IHRhYl9sZW47IGkrKykgewogICAgSlNWYWx1ZSB2YWx1ZSA9IEpTX0dldFByb3BlcnR5KGN0eCwgc3JjLCB0YWJbaV0uYXRvbSk7CiAgICBKU19TZXRQcm9wZXJ0eShjdHgsIGRzdCwgdGFiW2ldLmF0b20sIHZhbHVlKTsKICB9CiAgcmV0dXJuIGk7Cn0KCkpTQnVmZmVyCmpzX2J1ZmZlcl9mcm9tKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBKU0J1ZmZlciByZXQgPSB7MCwgMCwgJmpzX2J1ZmZlcl9mcmVlX2RlZmF1bHQsIEpTX1VOREVGSU5FRH07CiAgcmV0LnZhbHVlID0gSlNfRHVwVmFsdWUoY3R4LCB2YWx1ZSk7CiAgcmV0LmZyZWUgPSAmanNfYnVmZmVyX2ZyZWVfZGVmYXVsdDsKCiAgaWYoSlNfSXNTdHJpbmcodmFsdWUpKSB7CiAgICByZXQuZGF0YSA9ICh1aW50OF90KilKU19Ub0NTdHJpbmdMZW4oY3R4LCAmcmV0LnNpemUsIHZhbHVlKTsKICB9IGVsc2UgewogICAgcmV0LmRhdGEgPSBKU19HZXRBcnJheUJ1ZmZlcihjdHgsICZyZXQuc2l6ZSwgcmV0LnZhbHVlKTsKICB9CiAgcmV0dXJuIHJldDsKfQoKQk9PTApqc19idWZmZXJfdmFsaWQoY29uc3QgSlNCdWZmZXIqIGluKSB7CiAgcmV0dXJuICFKU19Jc0V4Y2VwdGlvbihpbi0+dmFsdWUpOwp9CgpKU0J1ZmZlcgpqc19idWZmZXJfY2xvbmUoY29uc3QgSlNCdWZmZXIqIGluLCBKU0NvbnRleHQqIGN0eCkgewogIEpTQnVmZmVyIHJldCA9IGpzX2J1ZmZlcl9mcm9tKGN0eCwgaW4tPnZhbHVlKTsKCiAgLyogIHJldC5zaXplID0gaW4tPnNpemU7CiAgIHJldC5mcmVlID0gaW4tPmZyZWU7Ki8KCiAgcmV0dXJuIHJldDsKfQoKdm9pZApqc19idWZmZXJfZHVtcChjb25zdCBKU0J1ZmZlciogaW4sIER5bkJ1ZiogZGIpIHsKICBkYnVmX3ByaW50ZihkYiwgIihKU0J1ZmZlcil7IC5kYXRhID0gJXAsIC5zaXplID0gJXp1LCAuZnJlZSA9ICVwIH0iLCBpbi0+ZGF0YSwgaW4tPnNpemUsIGluLT5mcmVlKTsKfQoKdm9pZApqc19idWZmZXJfZnJlZShKU0J1ZmZlciogaW4sIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoaW4tPmRhdGEpIHsKICAgIGluLT5mcmVlKGN0eCwgaW4tPmRhdGEsIGluLT52YWx1ZSk7CiAgICBpbi0+ZGF0YSA9IDA7CiAgICBpbi0+c2l6ZSA9IDA7CiAgICBpbi0+dmFsdWUgPSBKU19VTkRFRklORUQ7CiAgfQp9CgpCT09MCmpzX2lzX2l0ZXJhYmxlKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgSlNBdG9tIGF0b207CiAgQk9PTCByZXQgPSBGQUxTRTsKICBhdG9tID0ganNfc3ltYm9sX3N0YXRpY19hdG9tKGN0eCwgIml0ZXJhdG9yIik7CiAgaWYoSlNfSGFzUHJvcGVydHkoY3R4LCBvYmosIGF0b20pKQogICAgcmV0ID0gVFJVRTsKCiAgSlNfRnJlZUF0b20oY3R4LCBhdG9tKTsKICBpZighcmV0KSB7CiAgICBhdG9tID0ganNfc3ltYm9sX3N0YXRpY19hdG9tKGN0eCwgImFzeW5jSXRlcmF0b3IiKTsKICAgIGlmKEpTX0hhc1Byb3BlcnR5KGN0eCwgb2JqLCBhdG9tKSkKICAgICAgcmV0ID0gVFJVRTsKCiAgICBKU19GcmVlQXRvbShjdHgsIGF0b20pOwogIH0KICByZXR1cm4gcmV0Owp9CgpCT09MCmpzX2lzX2l0ZXJhdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgaWYoSlNfSXNPYmplY3Qob2JqKSkgewogICAgSlNWYWx1ZSBuZXh0ID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmosICJuZXh0Iik7CgogICAgaWYoSlNfSXNGdW5jdGlvbihjdHgsIG5leHQpKQogICAgICByZXR1cm4gVFJVRTsKICB9CiAgcmV0dXJuIEZBTFNFOwp9CgAAAAAAAAAARxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiBwAAAAAAAKIHAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPYEAAAAAAAA9wQAAAAAAAAAAAAA9wQAAAAAAAD3BAAAAAAAAKwCAAAKLypKU1ZhbHVlCmpzX2l0ZXJhdG9yX21ldGhvZChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaikgewogIEpTQXRvbSBhdG9tOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIGF0b20gPSBqc19zeW1ib2xfc3RhdGljX2F0b20oY3R4LCAiaXRlcmF0b3IiKTsKICBpZihKU19IYXNQcm9wZXJ0eShjdHgsIG9iaiwgYXRvbSkpCiAgICByZXQgPSBKU19HZXRQcm9wZXJ0eShjdHgsIG9iaiwgYXRvbSk7CgogIEpTX0ZyZWVBdG9tKGN0eCwgYXRvbSk7CiAgaWYoIUpTX0lzRnVuY3Rpb24oY3R4LCByZXQpKSB7CiAgICBhdG9tID0ganNfc3ltYm9sX3N0YXRpY19hdG9tKGN0eCwgImFzeW5jSXRlcmF0b3IiKTsKICAgIGlmKEpTX0hhc1Byb3BlcnR5KGN0eCwgb2JqLCBhdG9tKSkKICAgICAgcmV0ID0gSlNfR2V0UHJvcGVydHkoY3R4LCBvYmosIGF0b20pOwoKICAgIEpTX0ZyZWVBdG9tKGN0eCwgYXRvbSk7CiAgfQogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKanNfaXRlcmF0b3JfbmV3KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgSlNWYWx1ZSBmbiwgcmV0OwogIGZuID0ganNfaXRlcmF0b3JfbWV0aG9kKGN0eCwgb2JqKTsKICByZXQgPSBKU19DYWxsKGN0eCwgZm4sIG9iaiwgMCwgMCk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgZm4pOwogIHJldHVybiByZXQ7Cn0qLwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiBwAAAAAAAPYEAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"paste",
					null,
					"AQAAAJwQAAAAAAAAohIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcEAAAAAAAAJwQAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"paste",
					null,
					"AQAAAKISAAAAAAAAgxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiEgAAAAAAAKISAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACDEwAAI2luY2x1ZGUgImpzdXRpbHMuaCIKCkpTVmFsdWUKdmVjdG9yMmFycmF5KEpTQ29udGV4dCogY3R4LCBpbnQgYXJnYywgSlNWYWx1ZSBhcmd2W10pIHsKICBpbnQgaTsKICBKU1ZhbHVlIHJldCA9IEpTX05ld0FycmF5KGN0eCk7CiAgZm9yKGkgPSAwOyBpIDwgYXJnYzsgaSsrKSBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHJldCwgaSwgYXJndltpXSk7CiAgcmV0dXJuIHJldDsKfQoKdm9pZApqc19jb25zb2xlX2xvZyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZSogY29uc29sZSwgSlNWYWx1ZSogY29uc29sZV9sb2cpIHsKICBKU1ZhbHVlIGdsb2JhbCA9IEpTX0dldEdsb2JhbE9iamVjdChjdHgpOwogICpjb25zb2xlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBnbG9iYWwsICJjb25zb2xlIik7CiAgKmNvbnNvbGVfbG9nID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCAqY29uc29sZSwgImxvZyIpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIGdsb2JhbCk7Cn0KCkpTVmFsdWUKanNfZnVuY3Rpb25fYm91bmQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYywgSlNWYWx1ZSogZnVuY19kYXRhKSB7CiAgSlNWYWx1ZSBhcmdzW2FyZ2MgKyBtYWdpY107CiAgaW50IGksIGo7CiAgZm9yKGkgPSAwOyBpIDwgbWFnaWM7IGkrKykgYXJnc1tpXSA9IGZ1bmNfZGF0YVtpICsgMV07CiAgZm9yKGogPSAwOyBqIDwgYXJnYzsgaisrKSBhcmdzW2krK10gPSBhcmd2W2pdOwoKICByZXR1cm4gSlNfQ2FsbChjdHgsIGZ1bmNfZGF0YVswXSwgdGhpc192YWwsIGksIGFyZ3MpOwp9CgpKU1ZhbHVlCmpzX2Z1bmN0aW9uX2JpbmQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBmdW5jLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgZGF0YVthcmdjICsgMV07CiAgaW50IGk7CiAgZGF0YVswXSA9IEpTX0R1cFZhbHVlKGN0eCwgZnVuYyk7CiAgZm9yKGkgPSAwOyBpIDwgYXJnYzsgaSsrKSBkYXRhW2kgKyAxXSA9IEpTX0R1cFZhbHVlKGN0eCwgYXJndltpXSk7CiAgcmV0dXJuIEpTX05ld0NGdW5jdGlvbkRhdGEoY3R4LCBqc19mdW5jdGlvbl9ib3VuZCwgMCwgYXJnYywgYXJnYyArIDEsIGRhdGEpOwp9CgpKU1ZhbHVlCmpzX2Z1bmN0aW9uX2JpbmRfMShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IGZ1bmMsIEpTVmFsdWVDb25zdCBhcmcpIHsKICByZXR1cm4ganNfZnVuY3Rpb25fYmluZChjdHgsIGZ1bmMsIDEsICZhcmcpOwp9CiAKSlNWYWx1ZQpqc19pdGVyYXRvcl9uZXh0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqLCBKU1ZhbHVlKiBuZXh0LCBCT09MKiBkb25lX3AsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgSlNWYWx1ZSBmbiwgcmVzdWx0LCBkb25lLCB2YWx1ZTsKCiAgaWYoIUpTX0lzT2JqZWN0KG9iaikpCiAgICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiYXJndW1lbnQgaXMgbm90IGFuIG9iamVjdCAoJWQpIFwiJXNcIiIsIEpTX1ZBTFVFX0dFVF9UQUcob2JqKSwgSlNfVG9DU3RyaW5nKGN0eCwgb2JqKSk7CgogIGlmKEpTX0lzT2JqZWN0KCpuZXh0KSAmJiBKU19Jc0Z1bmN0aW9uKGN0eCwgKm5leHQpKSB7CiAgICBmbiA9ICpuZXh0OwogIH0gZWxzZSB7CiAgICBmbiA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqLCAibmV4dCIpOwoKICAgIGlmKEpTX0lzVW5kZWZpbmVkKGZuKSkKICAgICAgcmV0dXJuIEpTX1Rocm93VHlwZUVycm9yKGN0eCwgIm9iamVjdCBkb2VzIG5vdCBoYXZlICduZXh0JyBtZXRob2QiKTsKCiAgICBpZighSlNfSXNGdW5jdGlvbihjdHgsIGZuKSkKICAgICAgcmV0dXJuIEpTX1Rocm93VHlwZUVycm9yKGN0eCwgIm9iamVjdC5uZXh0IGlzIG5vdCBhIGZ1bmN0aW9uIik7CgogICAgKm5leHQgPSBmbjsKICB9CgogIHJlc3VsdCA9IEpTX0NhbGwoY3R4LCBmbiwgb2JqLCBhcmdjLCBhcmd2KTsKICAvLyBKU19GcmVlVmFsdWUoY3R4LCBmbik7CgogIGlmKEpTX0lzRXhjZXB0aW9uKHJlc3VsdCkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBkb25lID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCByZXN1bHQsICJkb25lIik7CiAgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIHJlc3VsdCwgInZhbHVlIik7CiAgSlNfRnJlZVZhbHVlKGN0eCwgcmVzdWx0KTsKICAqZG9uZV9wID0gSlNfVG9Cb29sKGN0eCwgZG9uZSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgZG9uZSk7CiAgcmV0dXJuIHZhbHVlOwp9CgppbnQKanNfY29weV9wcm9wZXJ0aWVzKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgZHN0LCBKU1ZhbHVlQ29uc3Qgc3JjLCBpbnQgZmxhZ3MpIHsKICBKU1Byb3BlcnR5RW51bSogdGFiOwogIHVpbnQzMl90IHRhYl9sZW4sIGk7CgogIGlmKEpTX0dldE93blByb3BlcnR5TmFtZXMoY3R4LCAmdGFiLCAmdGFiX2xlbiwgc3JjLCBmbGFncykpCiAgICByZXR1cm4gLTE7CgogIGZvcihpID0gMDsgaSA8IHRhYl9sZW47IGkrKykgewogICAgSlNWYWx1ZSB2YWx1ZSA9IEpTX0dldFByb3BlcnR5KGN0eCwgc3JjLCB0YWJbaV0uYXRvbSk7CiAgICBKU19TZXRQcm9wZXJ0eShjdHgsIGRzdCwgdGFiW2ldLmF0b20sIHZhbHVlKTsKICB9CiAgcmV0dXJuIGk7Cn0KCkpTQnVmZmVyCmpzX2J1ZmZlcl9mcm9tKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBKU0J1ZmZlciByZXQgPSB7MCwgMCwgJmpzX2J1ZmZlcl9mcmVlX2RlZmF1bHQsIEpTX1VOREVGSU5FRH07CiAgcmV0LnZhbHVlID0gSlNfRHVwVmFsdWUoY3R4LCB2YWx1ZSk7CiAgcmV0LmZyZWUgPSAmanNfYnVmZmVyX2ZyZWVfZGVmYXVsdDsKCiAgaWYoSlNfSXNTdHJpbmcodmFsdWUpKSB7CiAgICByZXQuZGF0YSA9ICh1aW50OF90KilKU19Ub0NTdHJpbmdMZW4oY3R4LCAmcmV0LnNpemUsIHZhbHVlKTsKICB9IGVsc2UgewogICAgcmV0LmRhdGEgPSBKU19HZXRBcnJheUJ1ZmZlcihjdHgsICZyZXQuc2l6ZSwgcmV0LnZhbHVlKTsKICB9CiAgcmV0dXJuIHJldDsKfQoKQk9PTApqc19idWZmZXJfdmFsaWQoY29uc3QgSlNCdWZmZXIqIGluKSB7CiAgcmV0dXJuICFKU19Jc0V4Y2VwdGlvbihpbi0+dmFsdWUpOwp9CgpKU0J1ZmZlcgpqc19idWZmZXJfY2xvbmUoY29uc3QgSlNCdWZmZXIqIGluLCBKU0NvbnRleHQqIGN0eCkgewogIEpTQnVmZmVyIHJldCA9IGpzX2J1ZmZlcl9mcm9tKGN0eCwgaW4tPnZhbHVlKTsKCiAgLyogIHJldC5zaXplID0gaW4tPnNpemU7CiAgIHJldC5mcmVlID0gaW4tPmZyZWU7Ki8KCiAgcmV0dXJuIHJldDsKfQoKdm9pZApqc19idWZmZXJfZHVtcChjb25zdCBKU0J1ZmZlciogaW4sIER5bkJ1ZiogZGIpIHsKICBkYnVmX3ByaW50ZihkYiwgIihKU0J1ZmZlcil7IC5kYXRhID0gJXAsIC5zaXplID0gJXp1LCAuZnJlZSA9ICVwIH0iLCBpbi0+ZGF0YSwgaW4tPnNpemUsIGluLT5mcmVlKTsKfQoKdm9pZApqc19idWZmZXJfZnJlZShKU0J1ZmZlciogaW4sIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoaW4tPmRhdGEpIHsKICAgIGluLT5mcmVlKGN0eCwgaW4tPmRhdGEsIGluLT52YWx1ZSk7CiAgICBpbi0+ZGF0YSA9IDA7CiAgICBpbi0+c2l6ZSA9IDA7CiAgICBpbi0+dmFsdWUgPSBKU19VTkRFRklORUQ7CiAgfQp9CgpCT09MCmpzX2lzX2l0ZXJhYmxlKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgSlNBdG9tIGF0b207CiAgQk9PTCByZXQgPSBGQUxTRTsKICBhdG9tID0ganNfc3ltYm9sX3N0YXRpY19hdG9tKGN0eCwgIml0ZXJhdG9yIik7CiAgaWYoSlNfSGFzUHJvcGVydHkoY3R4LCBvYmosIGF0b20pKQogICAgcmV0ID0gVFJVRTsKCiAgSlNfRnJlZUF0b20oY3R4LCBhdG9tKTsKICBpZighcmV0KSB7CiAgICBhdG9tID0ganNfc3ltYm9sX3N0YXRpY19hdG9tKGN0eCwgImFzeW5jSXRlcmF0b3IiKTsKICAgIGlmKEpTX0hhc1Byb3BlcnR5KGN0eCwgb2JqLCBhdG9tKSkKICAgICAgcmV0ID0gVFJVRTsKCiAgICBKU19GcmVlQXRvbShjdHgsIGF0b20pOwogIH0KICByZXR1cm4gcmV0Owp9CgpCT09MCmpzX2lzX2l0ZXJhdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgaWYoSlNfSXNPYmplY3Qob2JqKSkgewogICAgSlNWYWx1ZSBuZXh0ID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmosICJuZXh0Iik7CgogICAgaWYoSlNfSXNGdW5jdGlvbihjdHgsIG5leHQpKQogICAgICByZXR1cm4gVFJVRTsKICB9CiAgcmV0dXJuIEZBTFNFOwp9CgoKSlNBdG9tCmpzX3N5bWJvbF9zdGF0aWNfYXRvbShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbmFtZSkgewogIEpTVmFsdWUgc3ltID0ganNfc3ltYm9sX3N0YXRpY192YWx1ZShjdHgsIG5hbWUpOwogIEpTQXRvbSByZXQgPSBKU19WYWx1ZVRvQXRvbShjdHgsIHN5bSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgc3ltKTsKICByZXR1cm4gcmV0Owp9CgpKU1ZhbHVlCmpzX3N5bWJvbF9zdGF0aWNfdmFsdWUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIG5hbWUpIHsKICBKU1ZhbHVlIHN5bWJvbF9jdG9yLCByZXQ7CiAgc3ltYm9sX2N0b3IgPSBqc19zeW1ib2xfY3RvcihjdHgpOwogIHJldCA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgc3ltYm9sX2N0b3IsIG5hbWUpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHN5bWJvbF9jdG9yKTsKICByZXR1cm4gcmV0Owp9CgpKU1ZhbHVlCmpzX3N5bWJvbF9jdG9yKEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIGpzX2dsb2JhbF9nZXQoY3R4LCAiU3ltYm9sIik7Cn0KCkpTVmFsdWUKanNfZ2xvYmFsX2dldChKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogcHJvcCkgewogIEpTVmFsdWUgZ2xvYmFsX29iaiwgcmV0OwogIGdsb2JhbF9vYmogPSBKU19HZXRHbG9iYWxPYmplY3QoY3R4KTsKICByZXQgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIGdsb2JhbF9vYmosIHByb3ApOwogIEpTX0ZyZWVWYWx1ZShjdHgsIGdsb2JhbF9vYmopOwogIHJldHVybiByZXQ7Cn0KAAAAAAAAAACBEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNDwAAAAAAANsPAAAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"prettier",
				"Build With: prettier"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit current",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"edit curr",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 393.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/minnet-quickjs",
		"/home/roman/Projects/minnet-quickjs/libwebsockets"
	],
	"file_history":
	[
		"/home/roman/Projects/minnet-quickjs/minnet-server.h",
		"/home/roman/Projects/minnet-quickjs/minnet-response.h",
		"/home/roman/Projects/minnet-quickjs/buffer.h",
		"/home/roman/Projects/minnet-quickjs/buffer.c",
		"/home/roman/Projects/minnet-quickjs/jsutils.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/minnet-quickjs/jsutils.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/minimal-examples/http-server/minimal-http-server/minimal-http-server.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/minimal-examples/http-server/minimal-http-server-h2-long-poll/minimal-http-server.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/minimal-examples/http-server/minimal-http-server-dynamic/minimal-http-server-dynamic.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/roles/http/server/server.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/roles/h2/ops-h2.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/roles/http/header.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/test-rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/net/rpc.js",
		"/home/roman/Projects/minnet-quickjs/minnet.c",
		"/home/roman/Projects/minnet-quickjs/minnet.h",
		"/home/roman/Projects/minnet-quickjs/minnet-response.c",
		"/home/roman/Projects/minnet-quickjs/minnet-request.h",
		"/home/roman/Projects/minnet-quickjs/minnet-request.c",
		"/home/roman/Projects/minnet-quickjs/minnet-websocket.h",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/minnet-quickjs/example.mjs",
		"/home/roman/Projects/minnet-quickjs/minnet-websocket.c",
		"/home/roman/Projects/minnet-quickjs/minnet-server.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/core-net/wsi.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/core-net/vhost.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/core-net/output.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/core-net/private-lib-core-net.h",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/roles/h2/hpack.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/roles/h2/http2.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/roles/http/server/ranges.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/roles/private-lib-roles.h",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/roles/h2/minihuf.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/roles/h2/huftable.h",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/roles/h2/private-lib-roles-h2.h",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/roles/http/private-lib-roles-http.h",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/CMakeLists.txt",
		"/home/roman/Projects/minnet-quickjs/CMakeLists.txt",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/CMakeLists-implied-options.txt",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/roles/http/cookie.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/roles/http/date.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/roles/http/lextable-strings.h",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/roles/http/lextable.h",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/roles/http/minilex.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/roles/http/parsers.c",
		"/home/roman/Projects/minnet-quickjs/rpc.js",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/minimal-examples/http-server/minimal-http-server-sse/minimal-http-server-sse.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/include/libwebsockets/lws-http.h",
		"/home/roman/Projects/minnet-quickjs/minnet.c.orig",
		"/home/roman/.config/sublime-text/Packages/Outroot Color Schemes/Luscious.tmTheme",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Next (New).tmTheme",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/.mailmap",
		"/home/roman/Projects/minnet-quickjs/minnet-client.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/include/libwebsockets/lws-writeable.h",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/core-net/dummy-callback.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/include/libwebsockets/lws-context-vhost.h",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/include/libwebsockets/lws-misc.h",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/include/libwebsockets/lws-lecp.h",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/include/libwebsockets/lws-client.h",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/include/libwebsockets/lws-service.h",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/roles/http/server/lejp-conf.c",
		"/home/roman/Projects/plot-cv/quickjs/cutils.c",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.h",
		"/home/roman/Projects/plot-cv/cutils.h",
		"/home/roman/Projects/minnet-quickjs/minnet-client.h",
		"/home/roman/Projects/plot-cv/ws-worker.js",
		"/home/roman/Projects/minnet-quickjs/minnet-jsutils.h",
		"/home/roman/Projects/minnet-quickjs/minnet-socket.h",
		"/home/roman/Projects/minnet-quickjs/minnet-socket.c",
		"/home/roman/Projects/minnet-quickjs/minnet.sublime-project",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/include/libwebsockets/lws-context-vhost.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/test-apps/test-server.c",
		"/home/roman/Projects/plot-cv/quickjs/net/minnet.c",
		"/home/roman/Projects/minnet-quickjs/libwebsockets/lib/core/libwebsockets.c",
		"/home/roman/Projects/plot-cv/quickjs/net/minnet-server.c",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/lib/core-net/network.c",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/include/libwebsockets/lws-network-helper.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/include/libwebsockets/lws-http.h",
		"/home/roman/Projects/plot-cv/quickjs/net/minnet-websocket.h",
		"/home/roman/Projects/plot-cv/quickjs/net/minnet.h",
		"/home/roman/Projects/plot-cv/quickjs/net/minnet-websocket.c",
		"/home/roman/Projects/plot-cv/quickjs/net/minnet-request.h",
		"/home/roman/Projects/plot-cv/quickjs/net/minnet-response.c",
		"/home/roman/Projects/plot-cv/quickjs/net/minnet-server.h",
		"/home/roman/Projects/plot-cv/quickjs/net/minnet-response.h",
		"/home/roman/Projects/plot-cv/quickjs/net/build/x86_64-linux-release/libwebsockets/include/libwebsockets/lws-network-helper.h",
		"/home/roman/Projects/plot-cv/quickjs/net/minnet-jsutils.h",
		"/home/roman/Projects/plot-cv/quickjs/net/minnet-client.c",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/include/libwebsockets.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/minimal-examples/http-server/minimal-http-server-dynamic/minimal-http-server-dynamic.c",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/minimal-examples/http-server/minimal-http-server-dynamic/minimal-http-server-dynamic",
		"/home/roman/Projects/plot-cv/quickjs/net/jsutils.h",
		"/home/roman/Projects/plot-cv/quickjs/net/websocket.c",
		"/home/roman/Projects/plot-cv/quickjs/net/client.c",
		"/home/roman/Projects/plot-cv/quickjs/net/minnet-client.h",
		"/home/roman/Projects/plot-cv/quickjs/net/response.c",
		"/home/roman/Projects/plot-cv/quickjs/net/websocket.h",
		"/home/roman/Projects/plot-cv/quickjs/net/response.h",
		"/home/roman/Projects/plot-cv/quickjs/net/server.c",
		"/home/roman/Projects/plot-cv/quickjs/net/server.h",
		"/home/roman/Projects/plot-cv/quickjs/net/rpc.js.orig",
		"/home/roman/Projects/plot-cv/quickjs/net/client.h",
		"/home/roman/Projects/plot-cv/quickjs/net/minnet.sublime-project",
		"/home/roman/Projects/plot-cv/quickjs/net/CMakeLists.txt",
		"/home/roman/mnt/v3server/var/www/html/index.html",
		"/home/roman/Projects/plot-cv/quickjs/net/y.diff",
		"/home/roman/.config/sublime-text/Packages/User/Themes/ES6 Next.tmTheme",
		"/home/roman/.config/sublime-text/Packages/Outline/outline-Dark.hidden-tmTheme",
		"/home/roman/.config/sublime-text/Packages/Outline/outline.hidden-tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_misc.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/modules/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/pointer.c"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 109.0,
		"where_history":
		[
			"*.c,*.h,*.txt,*.cmake,-*/build/*",
			"*.c,*.h,*.txt,*.cmakem,-*/build/*",
			"*.c,*.h,*.txt,-*/build/*",
			"*.c,*.h,-*/build/*",
			"*.c,*.h,-*/build/*,-*/libwebsockets/*",
			"*.c,*.h,-*/build/*",
			"*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/net,-*/build/*,*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/net,-*/build/*,-*/libwebsockets/*,*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/net,-*/build/*,*.c,*.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"callHandler",
			"on[Cc]onnect",
			"onconnect",
			"cb_connect",
			"log.*Connection",
			"onconnect",
			"generator =",
			"js_iterator",
			"generator =",
			"generator",
			"argument is",
			"resp->generator",
			"->generator",
			"JS_FreeCString",
			"byte_",
			"byte_rchr",
			"js_buffer_free",
			"js_buffer_from",
			"404",
			"555",
			"is_h2",
			"lws.*h2",
			"lws.*is_",
			"wsi.*H2",
			"lws_wsi_is",
			"malloc_usable_size",
			"len",
			"lws_http_transaction_completed",
			"request\\(",
			"request",
			"read.only",
			"binary",
			"params",
			"`params",
			"'params",
			"repl.historyLoad",
			"repl.history",
			"createWS",
			"onFd",
			"LWS_WRITE_HTTP_FINAL",
			"->type",
			"REQUEST_METHOD",
			"->type",
			"%s",
			"\"%s",
			"\"lws_callback_on_writable",
			"in:",
			"js_dump_string",
			"'on",
			"'onFd",
			"mount",
			"request_init",
			"method",
			"MinnetHttpMethod",
			"lws_uri_and_method",
			"JS_IsObject",
			"serv->ws_obj",
			"minnet_log_cb",
			"\"POST ",
			"case LWS_CALLBACK",
			"LWS_CALLBACK_HTTP_BODY",
			"HTTP_BODY",
			"\"lws_call",
			"callback_on",
			"lws_write\\(",
			"mount_find",
			"LWS_CALLBACK_CHECK_ACCESS_RIGHTS",
			"tx_cred",
			"CREDIT",
			"lws_wsi_txc_check_skint",
			"lwsi_state",
			"buflist_out",
			"lws_has_buffered_out",
			"LLL_",
			"minnet_log",
			"\n      ",
			"LWS_WITH_SERVER",
			"option.LWS_WITH_SERVER",
			"option(LWS_WITH_SERVER",
			"LWS_WITH_SERVER",
			"LWS_WITH_SE",
			"LWS_WITH_SERVER",
			"lws_serve_http_file_fr",
			"lws_serve_http_file",
			"lws_h2_frame_write",
			"266",
			"lws_http_action",
			"lws_serve_http_file",
			"lws_http_serve",
			"lws_serve_http_file",
			"on_writ",
			"lws_h2_frame_write",
			"lws_handle_POLLOUT_event_h2",
			"on_writable",
			"writable",
			"onFD",
			"createWS",
			"callbacks",
			"callbcks",
			"static inline ",
			"HTTP",
			"HTTP2",
			"HTTP",
			"H2",
			"ADD_HEAD",
			"quit",
			"WriteJSON",
			"ast",
			"LWS_CALLBACK_HTTP",
			">italic<",
			"minnet_request_new",
			"WSI_TOKEN_GET_URI",
			"_emit",
			"lws_callback",
			"server_info",
			"server_cb",
			"\\&info",
			"callback_ws",
			"lws_serve_http_file",
			"lws_http_action",
			"LWS_WITH_FILE_OPS",
			"lws_serve_http_file",
			"LWS_CALLBACK_HTTP_FILE_COMPLETION",
			"argument is not",
			"argument ",
			"lws_context_creation",
			"lws_context_create",
			"\"emit"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"serv->generator",
			"REQUEST_TYPE",
			"ws_obj",
			"case (int)LWS_CALLBACK",
			"",
			">normal<",
			"server.cb",
			"&server.info",
			"src",
			"url",
			"",
			"rsp",
			"_ws_",
			"->rsp",
			"state_dump",
			"RESPONSE_OFFSET",
			"RESPONSE_LENGTH",
			"static JSValue",
			"0",
			"res->body",
			"REQUEST_BODY",
			"\\\\n\"\\n\"\\1",
			"<br />",
			"\\\\n\"",
			"\\n\"",
			"#include <quickjs-libc.h>",
			"#include <list.h>",
			"#include <cutils.h>",
			"#include <quickjs.h>",
			"MinnetCallback",
			"_socket_",
			"MINNET_SOCKET_H",
			"inline",
			"static inline ",
			"hdr->",
			"",
			"request",
			"h->",
			"ctx",
			"equest",
			"req",
			"request",
			"args",
			"MinnetPollFd",
			"request->body.",
			"request->",
			"request",
			"body",
			"http_callback",
			"ws_callback",
			"protocols",
			"MinnetHttpHeader",
			"MinnetHttpMount",
			"struct lws_http_mount",
			"org",
			"JSUTILS_H",
			"io_handler",
			"make_handler",
			", ",
			"MinnetWebsocketCallback",
			", ",
			"MinnetWebsocketCallback",
			"websocket_callback(",
			"websocket_callback",
			"MINNET_JSUTILS_H",
			"static struct minnet_ws_callback",
			"static JSValue\nminnet_ws",
			"static &",
			"JSValue",
			"",
			"header->",
			"struct",
			"extern struct",
			"struct",
			"extern struct",
			"get_websocket_obj",
			"respondtype",
			"typeName",
			"respond",
			"}, respond) =>",
			"statusResponse",
			"callbacks",
			"function",
			"log",
			"MessageTransmitter"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"color_scheme": "Packages/Outline/outline-Dark.hidden-tmTheme",
							"current_file": "/home/roman/Projects/minnet-quickjs/minnet-websocket.c",
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									310,
									330
								],
								[
									392,
									405
								],
								[
									1135,
									1153
								],
								[
									1376,
									1389
								],
								[
									1534,
									1550
								],
								[
									1958,
									1972
								],
								[
									2193,
									2210
								],
								[
									2833,
									2847
								],
								[
									3807,
									3824
								],
								[
									5505,
									5519
								],
								[
									6180,
									6194
								],
								[
									6855,
									6870
								],
								[
									7640,
									7656
								],
								[
									8837,
									8858
								],
								[
									9573,
									9592
								]
							],
							"symlist":
							[
								"—Ⓒ– wsi_opaque_user_data { … } ; — type",
								"—Ⓕ– minnet_ws_new ( ) { … } — ",
								"—Ⓕ– minnet_ws_from_wsi ( ) { … } — ",
								"—Ⓕ– minnet_ws_get ( ) { … } — ",
								"—Ⓕ– minnet_ws_object ( ) { … } — ",
								"—Ⓕ– minnet_ws_wrap ( ) { … } — ",
								"—Ⓕ– minnet_ws_sslcert ( ) { … } — ",
								"—Ⓕ– minnet_ws_send ( ) { … } — ",
								"—Ⓕ– minnet_ws_respond ( ) { … } — ",
								"—Ⓕ– minnet_ws_ping ( ) { … } — ",
								"—Ⓕ– minnet_ws_pong ( ) { … } — ",
								"—Ⓕ– minnet_ws_close ( ) { … } — ",
								"—Ⓕ– minnet_ws_getter ( ) { … } — ",
								"—Ⓕ– minnet_ws_constructor ( ) { … } — ",
								"—Ⓕ– minnet_ws_finalizer ( ) { … } — "
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "minnet-server.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/roman/Projects/plot-cv/test-rpc.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/home/roman/Projects/plot-cv/quickjs/net/rpc.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "minnet.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "minnet-response.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "minnet-websocket.c",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15161,
						"regions":
						{
						},
						"selection":
						[
							[
								9441,
								9441
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5118.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "minnet-websocket.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "minnet-server.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "jsutils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "jsutils.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.718329622507,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.exec":
	{
		"height": 304.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Build debug",
	"project": "minnet.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"test-rpc",
				"~/Projects/plot-cv/test-rpc.js"
			],
			[
				"server.c",
				"libwebsockets/lib/roles/http/server/server.c"
			],
			[
				"ops-h2",
				"libwebsockets/lib/roles/h2/ops-h2.c"
			],
			[
				"test-rp",
				"~/Projects/plot-cv/test-rpc.js"
			],
			[
				"lws-call",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"minnet.c",
				"minnet.c"
			],
			[
				"cmakelists-im",
				"libwebsockets/CMakeLists-implied-options.txt"
			],
			[
				"cmake",
				"libwebsockets/CMakeLists.txt"
			],
			[
				"roles-htt",
				"libwebsockets/lib/roles/http/private-lib-roles-http.h"
			],
			[
				"-roles",
				"libwebsockets/lib/roles/h2/private-lib-roles-h2.h"
			],
			[
				"private-lib-rol",
				"libwebsockets/lib/roles/private-lib-roles.h"
			],
			[
				"minnet-server",
				"minnet-server.c"
			],
			[
				"server",
				"libwebsockets/lib/roles/http/server/server.c"
			],
			[
				"rpc.js",
				"rpc.js"
			],
			[
				"sse.c",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-sse/minimal-http-server-sse.c"
			],
			[
				"lws-htt",
				"libwebsockets/include/libwebsockets/lws-http.h"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"minnet-ser",
				"minnet-server.c"
			],
			[
				"quicjs",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"buffer.h",
				"buffer.h"
			],
			[
				"quickj",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"minnet.h",
				"minnet.h"
			],
			[
				"quickjs.",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"webso",
				"minnet-websocket.c"
			],
			[
				"jsutil",
				"minnet-jsutils.h"
			],
			[
				"minnet",
				"minnet.c"
			],
			[
				"websoc",
				"websocket.c"
			],
			[
				"jsut",
				"jsutils.h"
			],
			[
				"minnet-",
				"minnet-server.h"
			],
			[
				"client.c",
				"client.c"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"minn",
				"minnet.c"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"",
				"tests/test_qjsm.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			],
			[
				"test_point",
				"tests/test_pointer.js"
			],
			[
				"bnflex",
				"lib/bnflexer.js"
			],
			[
				"bnf.y",
				"~/Projects/plot-cv/lib/grammars/bnf.y"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"grammar.ki",
				"grammar.kison"
			],
			[
				"test_pat",
				"tests/test_path.js"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"test_parse",
				"tests/test_parser.js"
			],
			[
				"test_path",
				"tests/test_path.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"test_tree",
				"tests/test_treewalker.js"
			],
			[
				"tree.h",
				"src/tree.h"
			],
			[
				"scan_ulongn",
				"lib/scan/scan_ulongn.c"
			],
			[
				"term_rest",
				"src/term/term_restore.c"
			],
			[
				"parse.h",
				"src/parse.h"
			],
			[
				"byte.h",
				"lib/byte.h"
			],
			[
				"shell.h",
				"lib/shell.h"
			],
			[
				"mmap_file",
				"lib/stralloc/mmap_filename.c"
			],
			[
				"uffer.h",
				"lib/buffer.h"
			],
			[
				"scan.h",
				"lib/scan.h"
			],
			[
				"stralloc.h",
				"lib/stralloc.h"
			],
			[
				"path.h",
				"lib/path.h"
			],
			[
				"str.h",
				"lib/str.h"
			],
			[
				"scan.",
				"lib/scan.h"
			],
			[
				"debug_char",
				"src/debug/debug_char.c"
			],
			[
				"source_pop",
				"src/source/source_pop.c"
			],
			[
				"builtin.h",
				"src/builtin.h"
			],
			[
				"debug_node",
				"src/debug/debug_node.c"
			],
			[
				"sig_in",
				"lib/sig_internal.h"
			],
			[
				"term_",
				"src/term/term_attr.c"
			],
			[
				"glob.h",
				"lib/glob.h"
			],
			[
				"source.h",
				"src/source.h"
			],
			[
				"fdtable",
				"src/fdtable.h"
			],
			[
				"fd.h",
				"src/fd.h"
			],
			[
				"eval",
				"src/eval.h"
			],
			[
				"ieee",
				"doc/posix/ieee-p1003.2-d11.2-s3.txt"
			],
			[
				"expand.h",
				"src/expand.h"
			],
			[
				"builtin_dum",
				"src/builtin/builtin_dump.c"
			],
			[
				"h_main",
				"src/sh/sh_main.c"
			],
			[
				"parse_cha",
				"src/parse/parse_chartable.c"
			],
			[
				"debug.h",
				"src/debug.h"
			],
			[
				"exec_c",
				"src/exec/exec_command.c"
			],
			[
				"eval.h",
				"src/eval.h"
			],
			[
				"test-op",
				"test-operators.js"
			],
			[
				"filesys",
				"lib/filesystem.js"
			],
			[
				"repl.",
				"repl.js"
			],
			[
				"test-str",
				"plot-cv/quickjs/modules/test-str0.c"
			],
			[
				"property-en",
				"plot-cv/quickjs/modules/property-enumeration.h"
			],
			[
				"cutil",
				"plot-cv/quickjs/cutils.c"
			],
			[
				"test-libre",
				"plot-cv/quickjs/modules/test-libregexp.c"
			],
			[
				"clang-as",
				"plot-cv/clang-ast.js"
			],
			[
				"repl",
				"plot-cv/repl.js"
			],
			[
				"consoleS",
				"plot-cv/lib/consoleSetup.js"
			],
			[
				"test-ed",
				"plot-cv/test-editline.js"
			],
			[
				"gl.js",
				"plot-cv/gl.js"
			],
			[
				"editline",
				"plot-cv/editline.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 397.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
