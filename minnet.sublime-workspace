{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"JS_ToCStr",
				"JS_ToCStringLen"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"add_",
				"add_dependencies"
			],
			[
				"ch",
				"chunks_written"
			],
			[
				"defineP",
				"defineProperties(...)"
			],
			[
				"CMAKE_CURR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"gener",
				"generate_module_header"
			],
			[
				"RINGBUFFER_C",
				"RINGBUFFER_CONSUMERANGE"
			],
			[
				"RINGBUFFER_CONSU",
				"RINGBUFFER_CONSUMERANGE"
			],
			[
				"JS_NewArra",
				"JS_NewArrayBufferCopy"
			],
			[
				"RINGBU",
				"RINGBUFFER_INSERT"
			],
			[
				"hea",
				"headers_sent"
			],
			[
				"JS_ToCS",
				"JS_ToCStringLen"
			],
			[
				"PR",
				"PRIi64"
			],
			[
				"JS_Set",
				"JS_SetPropertyStr"
			],
			[
				"db",
				"dbuf_init2"
			],
			[
				"JS_Get",
				"JS_GetProperty"
			],
			[
				"Ret",
				"ReturnValuePathFunction"
			],
			[
				"cFunc",
				"cFuncListObjects"
			],
			[
				"isC",
				"isCFuncCall"
			],
			[
				"En",
				"EntityNames"
			],
			[
				"parseFrom",
				"parseFromString"
			],
			[
				"pseu",
				"pseudoClassArg"
			],
			[
				"pseudoC",
				"pseudoClassName"
			],
			[
				"Key",
				"KeyboardEvent"
			],
			[
				"getOp",
				"getOptionEntries"
			],
			[
				"setProp",
				"setPropertyValue"
			],
			[
				"parse",
				"parseSelectors"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyStr"
			],
			[
				"jsm_buil",
				"jsm_builtin_init"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"JS_New",
				"JS_NewObject"
			],
			[
				"ide",
				"importIdentifiers"
			],
			[
				"iden",
				"importIdentifiers"
			],
			[
				"import",
				"importIdentifiers"
			],
			[
				"ident",
				"identifierSets"
			],
			[
				"path_is",
				"path_is_absolute"
			],
			[
				"js_is_",
				"js_is_null_or_undefined"
			],
			[
				"path_skip_se",
				"path_skip_separator_s"
			],
			[
				"WRITABLE_METHO",
				"WRITABLE_METHOD_CLOSE"
			],
			[
				"list_fo",
				"list_for_each_prev"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"underly",
				"underlying_source"
			],
			[
				"Tok",
				"TokenSequence"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"getAt",
				"getAttributeNames"
			],
			[
				"self",
				"self_closing_tags"
			],
			[
				"self_",
				"self_closing_tags"
			],
			[
				"JS_PROP",
				"JS_PROP_ENUMERABLE"
			],
			[
				"depe",
				"dependencyMap"
			],
			[
				"de",
				"dependencyMap"
			],
			[
				"dep",
				"dependencyMap"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"spec",
				"specifiers"
			],
			[
				"Num",
				"NumericRange"
			],
			[
				"token_r",
				"token_release_rt"
			],
			[
				"JS_Thr",
				"JS_ThrowTypeError"
			],
			[
				"js_",
				"js_location_data"
			],
			[
				"debug_js_mall",
				"debug_js_malloc_usable_size"
			],
			[
				"repl",
				"replaceRange"
			],
			[
				"js_malloc_u",
				"js_malloc_usable_size_rt"
			],
			[
				"malloc",
				"malloc_usable_size"
			],
			[
				"all",
				"alloc_block_list"
			],
			[
				"alloc",
				"alloc_block_list"
			],
			[
				"path_skip",
				"path_skip_component"
			],
			[
				"jsm_mo",
				"jsm_module_loader"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"getOwn",
				"getOwnPropertySymbols(...)"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			],
			[
				"REP",
				"REPEATER_DONE"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"JS_NEwCFun",
				"JS_NewCFunctionData"
			],
			[
				"js_function",
				"js_function_bind_this"
			],
			[
				"js_repeater_iter",
				"js_repeater_iteration"
			],
			[
				"REPEA",
				"REPEATER_REJECTED"
			],
			[
				"exe",
				"execution"
			],
			[
				"REPEAT",
				"REPEATER_STOPPED"
			],
			[
				"JS_THro",
				"JS_ThrowOutOfMemory"
			],
			[
				"repeater",
				"repeater_finalizer"
			],
			[
				"BACK",
				"BACKGROUND_RED"
			],
			[
				"js_inspec",
				"js_inspect_tostring"
			],
			[
				"JS_Atom",
				"JS_AtomToValue"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  (level, message) =>\n'/404.html': function*(req, res)\n*generator(req, res)\n  onFd: (fd, rd, wr) =>",
			"settings":
			{
				"buffer_size": 99,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					1268,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/form-parser.c",
						"symkeys":
						[
							[
								93,
								113
							],
							[
								2111,
								2127
							],
							[
								2744,
								2761
							],
							[
								2905,
								2922
							],
							[
								3289,
								3309
							],
							[
								3686,
								3702
							],
							[
								3866,
								3885
							],
							[
								4061,
								4083
							],
							[
								4259,
								4282
							],
							[
								4430,
								4453
							],
							[
								4530,
								4553
							],
							[
								4764,
								4788
							],
							[
								4904,
								4923
							]
						],
						"symlist":
						[
							"—Ⓕ– form_parser_callback ( ) { … } — function",
							"—Ⓕ– form_parser_init ( ) { … } — function",
							"—Ⓕ– form_parser_alloc ( ) { … } — function",
							"—Ⓕ– form_parser_clear ( ) { … } — function",
							"—Ⓕ– form_parser_clear_rt ( ) { … } — function",
							"—Ⓕ– form_parser_free ( ) { … } — function",
							"—Ⓕ– form_parser_free_rt ( ) { … } — function",
							"—Ⓕ– form_parser_param_name ( ) { … } — function",
							"—Ⓕ– form_parser_param_valid ( ) { … } — function",
							"—Ⓕ– form_parser_param_count ( ) { … } — function",
							"—Ⓕ– form_parser_param_index ( ) { … } — function",
							"—Ⓕ– form_parser_param_exists ( ) { … } — function",
							"—Ⓕ– form_parser_process ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABMAQAAUUpTTkVUX0xJQl9IRUFERVJTX0gKICBoZWFkZXJzX29iamVjdAogIGhlYWRlcnNfd3JpdGUKICBsd3MKICBoZWFkZXJzX2Zyb21vYmoKICBoZWFkZXJzX2ZpbmRiCiAgaGVhZGVyc19hdAogIGhlYWRlcnNfZ2V0bGVuCiAgaGVhZGVyc19nZXQKICBoZWFkZXJzX2ZpbmQKICBoZWFkZXJzX3RvYnVmZmVyCiAgbHdzCiAgaGVhZGVyc19nZXR0b2tlbgogIGx3cwogIGhlYWRlcnNfdW5zZXRiCiAgaGVhZGVyc19zZXQKICBoZWFkZXJzX2FwcGVuZGIKICBoZWFkZXJzX2xlbmd0aAogIGhlYWRlcnNfbmV4dAogIGhlYWRlcnNfbmFtZWxlbgogIGhlYWRlcnNfdmFsdWUKICBoZWFkZXJzX25hbWUAAAAAAAAAAFQCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1269,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/form-parser.h",
						"symkeys":
						[
							[
								41,
								65
							],
							[
								145,
								156
							],
							[
								185,
								204
							],
							[
								231,
								238
							],
							[
								254,
								259
							],
							[
								282,
								288
							],
							[
								427,
								443
							],
							[
								451,
								462
							],
							[
								472,
								478
							],
							[
								556,
								567
							],
							[
								569,
								586
							],
							[
								607,
								618
							],
							[
								620,
								635
							],
							[
								643,
								654
							],
							[
								663,
								680
							],
							[
								688,
								699
							],
							[
								724,
								744
							],
							[
								752,
								763
							],
							[
								787,
								803
							],
							[
								811,
								822
							],
							[
								847,
								866
							],
							[
								874,
								885
							],
							[
								916,
								938
							],
							[
								946,
								957
							],
							[
								978,
								1001
							],
							[
								1009,
								1020
							],
							[
								1042,
								1065
							],
							[
								1073,
								1084
							],
							[
								1092,
								1115
							],
							[
								1123,
								1134
							],
							[
								1162,
								1186
							],
							[
								1194,
								1205
							],
							[
								1231,
								1250
							],
							[
								1258,
								1269
							]
						],
						"symlist":
						[
							"QJSNET_LIB_FORM_PARSER_H",
							"form_parser",
							"lws_spa_create_info",
							"lws_spa",
							"lwsac",
							"socket",
							"form_parser_init",
							"form_parser",
							"socket",
							"form_parser",
							" form_parser_alloc",
							"form_parser",
							" form_parser_dup",
							"form_parser",
							" form_parser_clear",
							"form_parser",
							" form_parser_clear_rt",
							"form_parser",
							" form_parser_free",
							"form_parser",
							" form_parser_free_rt",
							"form_parser",
							" form_parser_param_name",
							"form_parser",
							" form_parser_param_valid",
							"form_parser",
							" form_parser_param_count",
							"form_parser",
							" form_parser_param_index",
							"form_parser",
							" form_parser_param_exists",
							"form_parser",
							" form_parser_process",
							"form_parser"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADWAgAA4oCU4pK74oCTIGZvcm1fcGFyc2VyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX2FsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfY2xlYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9jbGVhcl9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9mcmVlX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfcGFyYW1fbmFtZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX3BhcmFtX3ZhbGlkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfcGFyYW1fY291bnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9wYXJhbV9pbmRleCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX3BhcmFtX2V4aXN0cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX3Byb2Nlc3MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAABJAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1270,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/generator.c",
						"symkeys":
						[
							[
								59,
								72
							],
							[
								143,
								156
							],
							[
								223,
								237
							],
							[
								438,
								455
							],
							[
								577,
								591
							],
							[
								838,
								851
							],
							[
								1143,
								1160
							],
							[
								1448,
								1464
							],
							[
								2211,
								2225
							],
							[
								2700,
								2715
							],
							[
								3550,
								3564
							],
							[
								4027,
								4042
							],
							[
								4764,
								4779
							],
							[
								5503,
								5523
							],
							[
								6121,
								6134
							],
							[
								6524,
								6537
							]
						],
						"symlist":
						[
							"—Ⓕ– enqueue_block ( ) { … } — function",
							"—Ⓕ– enqueue_value ( ) { … } — function",
							"—Ⓕ– generator_zero ( ) { … } — function",
							"—Ⓕ– generator_destroy ( ) { … } — function",
							"—Ⓕ– generator_free ( ) { … } — function",
							"—Ⓕ– generator_new ( ) { … } — function",
							"—Ⓕ– generator_dequeue ( ) { … } — function",
							"—Ⓕ– generator_update ( ) { … } — function",
							"—Ⓕ– generator_next ( ) { … } — function",
							"—Ⓕ– generator_write ( ) { … } — function",
							"—Ⓕ– generator_push ( ) { … } — function",
							"—Ⓕ– generator_yield ( ) { … } — function",
							"—Ⓕ– generator_close ( ) { … } — function",
							"—Ⓕ– generator_continuous ( ) { … } — function",
							"—Ⓕ– enqueue_block ( ) { … } — function",
							"—Ⓕ– enqueue_value ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABJAgAAUUpTTkVUX0xJQl9GT1JNX1BBUlNFUl9ICiAgZm9ybV9wYXJzZXIKICBsd3Nfc3BhX2NyZWF0ZV9pbmZvCiAgbHdzX3NwYQogIGx3c2FjCiAgc29ja2V0CiAgZm9ybV9wYXJzZXJfaW5pdAogIGZvcm1fcGFyc2VyCiAgc29ja2V0CiAgZm9ybV9wYXJzZXIKICBmb3JtX3BhcnNlcl9hbGxvYwogIGZvcm1fcGFyc2VyCiAgZm9ybV9wYXJzZXJfZHVwCiAgZm9ybV9wYXJzZXIKICBmb3JtX3BhcnNlcl9jbGVhcgogIGZvcm1fcGFyc2VyCiAgZm9ybV9wYXJzZXJfY2xlYXJfcnQKICBmb3JtX3BhcnNlcgogIGZvcm1fcGFyc2VyX2ZyZWUKICBmb3JtX3BhcnNlcgogIGZvcm1fcGFyc2VyX2ZyZWVfcnQKICBmb3JtX3BhcnNlcgogIGZvcm1fcGFyc2VyX3BhcmFtX25hbWUKICBmb3JtX3BhcnNlcgogIGZvcm1fcGFyc2VyX3BhcmFtX3ZhbGlkCiAgZm9ybV9wYXJzZXIKICBmb3JtX3BhcnNlcl9wYXJhbV9jb3VudAogIGZvcm1fcGFyc2VyCiAgZm9ybV9wYXJzZXJfcGFyYW1faW5kZXgKICBmb3JtX3BhcnNlcgogIGZvcm1fcGFyc2VyX3BhcmFtX2V4aXN0cwogIGZvcm1fcGFyc2VyCiAgZm9ybV9wYXJzZXJfcHJvY2VzcwogIGZvcm1fcGFyc2VyAAAAAAAAAACLAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1271,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/form-parser.h",
						"symkeys":
						[
							[
								41,
								65
							],
							[
								145,
								156
							],
							[
								185,
								204
							],
							[
								231,
								238
							],
							[
								254,
								259
							],
							[
								282,
								288
							],
							[
								427,
								443
							],
							[
								451,
								462
							],
							[
								472,
								478
							],
							[
								556,
								567
							],
							[
								569,
								586
							],
							[
								607,
								618
							],
							[
								620,
								635
							],
							[
								643,
								654
							],
							[
								663,
								680
							],
							[
								688,
								699
							],
							[
								724,
								744
							],
							[
								752,
								763
							],
							[
								787,
								803
							],
							[
								811,
								822
							],
							[
								847,
								866
							],
							[
								874,
								885
							],
							[
								916,
								938
							],
							[
								946,
								957
							],
							[
								978,
								1001
							],
							[
								1009,
								1020
							],
							[
								1042,
								1065
							],
							[
								1073,
								1084
							],
							[
								1092,
								1115
							],
							[
								1123,
								1134
							],
							[
								1162,
								1186
							],
							[
								1194,
								1205
							],
							[
								1231,
								1250
							],
							[
								1258,
								1269
							]
						],
						"symlist":
						[
							"QJSNET_LIB_FORM_PARSER_H",
							"form_parser",
							"lws_spa_create_info",
							"lws_spa",
							"lwsac",
							"socket",
							"form_parser_init",
							"form_parser",
							"socket",
							"form_parser",
							" form_parser_alloc",
							"form_parser",
							" form_parser_dup",
							"form_parser",
							" form_parser_clear",
							"form_parser",
							" form_parser_clear_rt",
							"form_parser",
							" form_parser_free",
							"form_parser",
							" form_parser_free_rt",
							"form_parser",
							" form_parser_param_name",
							"form_parser",
							" form_parser_param_valid",
							"form_parser",
							" form_parser_param_count",
							"form_parser",
							" form_parser_param_index",
							"form_parser",
							" form_parser_param_exists",
							"form_parser",
							" form_parser_process",
							"form_parser"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArAwAA4oCU4pK74oCTIGVucXVldWVfYmxvY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBlbnF1ZXVlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfZGVzdHJveSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9kZXF1ZXVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3VwZGF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3B1c2ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfeWllbGQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfY2xvc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfY29udGludW91cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGVucXVldWVfYmxvY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBlbnF1ZXVlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAASQIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1272,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/form-parser.h",
						"symkeys":
						[
							[
								41,
								65
							],
							[
								153,
								164
							],
							[
								193,
								212
							],
							[
								239,
								246
							],
							[
								262,
								267
							],
							[
								290,
								296
							],
							[
								446,
								462
							],
							[
								470,
								481
							],
							[
								491,
								497
							],
							[
								575,
								586
							],
							[
								588,
								605
							],
							[
								626,
								637
							],
							[
								639,
								654
							],
							[
								662,
								673
							],
							[
								682,
								699
							],
							[
								707,
								718
							],
							[
								743,
								763
							],
							[
								771,
								782
							],
							[
								806,
								822
							],
							[
								830,
								841
							],
							[
								866,
								885
							],
							[
								893,
								904
							],
							[
								935,
								957
							],
							[
								965,
								976
							],
							[
								997,
								1020
							],
							[
								1028,
								1039
							],
							[
								1061,
								1084
							],
							[
								1092,
								1103
							],
							[
								1111,
								1134
							],
							[
								1142,
								1153
							],
							[
								1181,
								1205
							],
							[
								1213,
								1224
							],
							[
								1250,
								1269
							],
							[
								1277,
								1288
							]
						],
						"symlist":
						[
							"QJSNET_LIB_FORM_PARSER_H",
							"form_parser",
							"lws_spa_create_info",
							"lws_spa",
							"lwsac",
							"socket",
							"form_parser_init",
							"form_parser",
							"socket",
							"form_parser",
							" form_parser_alloc",
							"form_parser",
							" form_parser_dup",
							"form_parser",
							" form_parser_clear",
							"form_parser",
							" form_parser_clear_rt",
							"form_parser",
							" form_parser_free",
							"form_parser",
							" form_parser_free_rt",
							"form_parser",
							" form_parser_param_name",
							"form_parser",
							" form_parser_param_valid",
							"form_parser",
							" form_parser_param_count",
							"form_parser",
							" form_parser_param_index",
							"form_parser",
							" form_parser_param_exists",
							"form_parser",
							" form_parser_process",
							"form_parser"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABJAgAAUUpTTkVUX0xJQl9GT1JNX1BBUlNFUl9ICiAgZm9ybV9wYXJzZXIKICBsd3Nfc3BhX2NyZWF0ZV9pbmZvCiAgbHdzX3NwYQogIGx3c2FjCiAgc29ja2V0CiAgZm9ybV9wYXJzZXJfaW5pdAogIGZvcm1fcGFyc2VyCiAgc29ja2V0CiAgZm9ybV9wYXJzZXIKICBmb3JtX3BhcnNlcl9hbGxvYwogIGZvcm1fcGFyc2VyCiAgZm9ybV9wYXJzZXJfZHVwCiAgZm9ybV9wYXJzZXIKICBmb3JtX3BhcnNlcl9jbGVhcgogIGZvcm1fcGFyc2VyCiAgZm9ybV9wYXJzZXJfY2xlYXJfcnQKICBmb3JtX3BhcnNlcgogIGZvcm1fcGFyc2VyX2ZyZWUKICBmb3JtX3BhcnNlcgogIGZvcm1fcGFyc2VyX2ZyZWVfcnQKICBmb3JtX3BhcnNlcgogIGZvcm1fcGFyc2VyX3BhcmFtX25hbWUKICBmb3JtX3BhcnNlcgogIGZvcm1fcGFyc2VyX3BhcmFtX3ZhbGlkCiAgZm9ybV9wYXJzZXIKICBmb3JtX3BhcnNlcl9wYXJhbV9jb3VudAogIGZvcm1fcGFyc2VyCiAgZm9ybV9wYXJzZXJfcGFyYW1faW5kZXgKICBmb3JtX3BhcnNlcgogIGZvcm1fcGFyc2VyX3BhcmFtX2V4aXN0cwogIGZvcm1fcGFyc2VyCiAgZm9ybV9wYXJzZXJfcHJvY2VzcwogIGZvcm1fcGFyc2VyAAAAAAAAAABJAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASQIAAFFKU05FVF9MSUJfRk9STV9QQVJTRVJfSAogIGZvcm1fcGFyc2VyCiAgbHdzX3NwYV9jcmVhdGVfaW5mbwogIGx3c19zcGEKICBsd3NhYwogIHNvY2tldAogIGZvcm1fcGFyc2VyX2luaXQKICBmb3JtX3BhcnNlcgogIHNvY2tldAogIGZvcm1fcGFyc2VyCiAgZm9ybV9wYXJzZXJfYWxsb2MKICBmb3JtX3BhcnNlcgogIGZvcm1fcGFyc2VyX2R1cAogIGZvcm1fcGFyc2VyCiAgZm9ybV9wYXJzZXJfY2xlYXIKICBmb3JtX3BhcnNlcgogIGZvcm1fcGFyc2VyX2NsZWFyX3J0CiAgZm9ybV9wYXJzZXIKICBmb3JtX3BhcnNlcl9mcmVlCiAgZm9ybV9wYXJzZXIKICBmb3JtX3BhcnNlcl9mcmVlX3J0CiAgZm9ybV9wYXJzZXIKICBmb3JtX3BhcnNlcl9wYXJhbV9uYW1lCiAgZm9ybV9wYXJzZXIKICBmb3JtX3BhcnNlcl9wYXJhbV92YWxpZAogIGZvcm1fcGFyc2VyCiAgZm9ybV9wYXJzZXJfcGFyYW1fY291bnQKICBmb3JtX3BhcnNlcgogIGZvcm1fcGFyc2VyX3BhcmFtX2luZGV4CiAgZm9ybV9wYXJzZXIKICBmb3JtX3BhcnNlcl9wYXJhbV9leGlzdHMKICBmb3JtX3BhcnNlcgogIGZvcm1fcGFyc2VyX3Byb2Nlc3MKICBmb3JtX3BhcnNlcgAAAAAAAAAASQIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1273,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/form-parser.h",
						"symkeys":
						[
							[
								41,
								65
							],
							[
								153,
								164
							],
							[
								193,
								212
							],
							[
								239,
								246
							],
							[
								262,
								267
							],
							[
								290,
								296
							],
							[
								453,
								469
							],
							[
								490,
								496
							],
							[
								579,
								596
							],
							[
								622,
								639
							],
							[
								682,
								702
							],
							[
								744,
								760
							],
							[
								803,
								822
							],
							[
								864,
								886
							],
							[
								924,
								947
							],
							[
								985,
								1008
							],
							[
								1035,
								1058
							],
							[
								1103,
								1127
							],
							[
								1172,
								1191
							]
						],
						"symlist":
						[
							"QJSNET_LIB_FORM_PARSER_H",
							"form_parser",
							"lws_spa_create_info",
							"lws_spa",
							"lwsac",
							"socket",
							"form_parser_init",
							"socket",
							"form_parser_alloc",
							"form_parser_clear",
							"form_parser_clear_rt",
							"form_parser_free",
							"form_parser_free_rt",
							"form_parser_param_name",
							"form_parser_param_valid",
							"form_parser_param_count",
							"form_parser_param_index",
							"form_parser_param_exists",
							"form_parser_process"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABJAgAAUUpTTkVUX0xJQl9GT1JNX1BBUlNFUl9ICiAgZm9ybV9wYXJzZXIKICBsd3Nfc3BhX2NyZWF0ZV9pbmZvCiAgbHdzX3NwYQogIGx3c2FjCiAgc29ja2V0CiAgZm9ybV9wYXJzZXJfaW5pdAogIGZvcm1fcGFyc2VyCiAgc29ja2V0CiAgZm9ybV9wYXJzZXIKICBmb3JtX3BhcnNlcl9hbGxvYwogIGZvcm1fcGFyc2VyCiAgZm9ybV9wYXJzZXJfZHVwCiAgZm9ybV9wYXJzZXIKICBmb3JtX3BhcnNlcl9jbGVhcgogIGZvcm1fcGFyc2VyCiAgZm9ybV9wYXJzZXJfY2xlYXJfcnQKICBmb3JtX3BhcnNlcgogIGZvcm1fcGFyc2VyX2ZyZWUKICBmb3JtX3BhcnNlcgogIGZvcm1fcGFyc2VyX2ZyZWVfcnQKICBmb3JtX3BhcnNlcgogIGZvcm1fcGFyc2VyX3BhcmFtX25hbWUKICBmb3JtX3BhcnNlcgogIGZvcm1fcGFyc2VyX3BhcmFtX3ZhbGlkCiAgZm9ybV9wYXJzZXIKICBmb3JtX3BhcnNlcl9wYXJhbV9jb3VudAogIGZvcm1fcGFyc2VyCiAgZm9ybV9wYXJzZXJfcGFyYW1faW5kZXgKICBmb3JtX3BhcnNlcgogIGZvcm1fcGFyc2VyX3BhcmFtX2V4aXN0cwogIGZvcm1fcGFyc2VyCiAgZm9ybV9wYXJzZXJfcHJvY2VzcwogIGZvcm1fcGFyc2VyAAAAAAAAAABzAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcwEAAFFKU05FVF9MSUJfRk9STV9QQVJTRVJfSAogIGZvcm1fcGFyc2VyCiAgbHdzX3NwYV9jcmVhdGVfaW5mbwogIGx3c19zcGEKICBsd3NhYwogIHNvY2tldAogIGZvcm1fcGFyc2VyX2luaXQKICBzb2NrZXQKICBmb3JtX3BhcnNlcl9hbGxvYwogIGZvcm1fcGFyc2VyX2NsZWFyCiAgZm9ybV9wYXJzZXJfY2xlYXJfcnQKICBmb3JtX3BhcnNlcl9mcmVlCiAgZm9ybV9wYXJzZXJfZnJlZV9ydAogIGZvcm1fcGFyc2VyX3BhcmFtX25hbWUKICBmb3JtX3BhcnNlcl9wYXJhbV92YWxpZAogIGZvcm1fcGFyc2VyX3BhcmFtX2NvdW50CiAgZm9ybV9wYXJzZXJfcGFyYW1faW5kZXgKICBmb3JtX3BhcnNlcl9wYXJhbV9leGlzdHMKICBmb3JtX3BhcnNlcl9wcm9jZXNzAAAAAAAAAABzAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1274,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/form-parser.h",
						"symkeys":
						[
							[
								41,
								65
							],
							[
								153,
								164
							],
							[
								193,
								212
							],
							[
								239,
								246
							],
							[
								262,
								267
							],
							[
								290,
								296
							],
							[
								453,
								469
							],
							[
								490,
								496
							],
							[
								579,
								596
							],
							[
								622,
								639
							],
							[
								682,
								702
							],
							[
								744,
								760
							],
							[
								803,
								822
							],
							[
								864,
								886
							],
							[
								923,
								946
							],
							[
								984,
								1007
							],
							[
								1034,
								1057
							],
							[
								1101,
								1125
							],
							[
								1170,
								1189
							]
						],
						"symlist":
						[
							"QJSNET_LIB_FORM_PARSER_H",
							"form_parser",
							"lws_spa_create_info",
							"lws_spa",
							"lwsac",
							"socket",
							"form_parser_init",
							"socket",
							"form_parser_alloc",
							"form_parser_clear",
							"form_parser_clear_rt",
							"form_parser_free",
							"form_parser_free_rt",
							"form_parser_param_name",
							"form_parser_param_valid",
							"form_parser_param_count",
							"form_parser_param_index",
							"form_parser_param_exists",
							"form_parser_process"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABzAQAAUUpTTkVUX0xJQl9GT1JNX1BBUlNFUl9ICiAgZm9ybV9wYXJzZXIKICBsd3Nfc3BhX2NyZWF0ZV9pbmZvCiAgbHdzX3NwYQogIGx3c2FjCiAgc29ja2V0CiAgZm9ybV9wYXJzZXJfaW5pdAogIHNvY2tldAogIGZvcm1fcGFyc2VyX2FsbG9jCiAgZm9ybV9wYXJzZXJfY2xlYXIKICBmb3JtX3BhcnNlcl9jbGVhcl9ydAogIGZvcm1fcGFyc2VyX2ZyZWUKICBmb3JtX3BhcnNlcl9mcmVlX3J0CiAgZm9ybV9wYXJzZXJfcGFyYW1fbmFtZQogIGZvcm1fcGFyc2VyX3BhcmFtX3ZhbGlkCiAgZm9ybV9wYXJzZXJfcGFyYW1fY291bnQKICBmb3JtX3BhcnNlcl9wYXJhbV9pbmRleAogIGZvcm1fcGFyc2VyX3BhcmFtX2V4aXN0cwogIGZvcm1fcGFyc2VyX3Byb2Nlc3MAAAAAAAAAAHMBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABzAQAAUUpTTkVUX0xJQl9GT1JNX1BBUlNFUl9ICiAgZm9ybV9wYXJzZXIKICBsd3Nfc3BhX2NyZWF0ZV9pbmZvCiAgbHdzX3NwYQogIGx3c2FjCiAgc29ja2V0CiAgZm9ybV9wYXJzZXJfaW5pdAogIHNvY2tldAogIGZvcm1fcGFyc2VyX2FsbG9jCiAgZm9ybV9wYXJzZXJfY2xlYXIKICBmb3JtX3BhcnNlcl9jbGVhcl9ydAogIGZvcm1fcGFyc2VyX2ZyZWUKICBmb3JtX3BhcnNlcl9mcmVlX3J0CiAgZm9ybV9wYXJzZXJfcGFyYW1fbmFtZQogIGZvcm1fcGFyc2VyX3BhcmFtX3ZhbGlkCiAgZm9ybV9wYXJzZXJfcGFyYW1fY291bnQKICBmb3JtX3BhcnNlcl9wYXJhbV9pbmRleAogIGZvcm1fcGFyc2VyX3BhcmFtX2V4aXN0cwogIGZvcm1fcGFyc2VyX3Byb2Nlc3MAAAAAAAAAAHMBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1275,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/form-parser.h",
						"symkeys":
						[
							[
								41,
								65
							],
							[
								153,
								164
							],
							[
								193,
								212
							],
							[
								239,
								246
							],
							[
								262,
								267
							],
							[
								290,
								296
							],
							[
								453,
								469
							],
							[
								490,
								496
							],
							[
								579,
								596
							],
							[
								622,
								639
							],
							[
								682,
								702
							],
							[
								744,
								760
							],
							[
								803,
								822
							],
							[
								864,
								886
							],
							[
								923,
								946
							],
							[
								984,
								1007
							],
							[
								1034,
								1057
							],
							[
								1101,
								1125
							],
							[
								1170,
								1189
							]
						],
						"symlist":
						[
							"QJSNET_LIB_FORM_PARSER_H",
							"form_parser",
							"lws_spa_create_info",
							"lws_spa",
							"lwsac",
							"socket",
							"form_parser_init",
							"socket",
							"form_parser_alloc",
							"form_parser_clear",
							"form_parser_clear_rt",
							"form_parser_free",
							"form_parser_free_rt",
							"form_parser_param_name",
							"form_parser_param_valid",
							"form_parser_param_count",
							"form_parser_param_index",
							"form_parser_param_exists",
							"form_parser_process"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAABzAQAAUUpTTkVUX0xJQl9GT1JNX1BBUlNFUl9ICiAgZm9ybV9wYXJzZXIKICBsd3Nfc3BhX2NyZWF0ZV9pbmZvCiAgbHdzX3NwYQogIGx3c2FjCiAgc29ja2V0CiAgZm9ybV9wYXJzZXJfaW5pdAogIHNvY2tldAogIGZvcm1fcGFyc2VyX2FsbG9jCiAgZm9ybV9wYXJzZXJfY2xlYXIKICBmb3JtX3BhcnNlcl9jbGVhcl9ydAogIGZvcm1fcGFyc2VyX2ZyZWUKICBmb3JtX3BhcnNlcl9mcmVlX3J0CiAgZm9ybV9wYXJzZXJfcGFyYW1fbmFtZQogIGZvcm1fcGFyc2VyX3BhcmFtX3ZhbGlkCiAgZm9ybV9wYXJzZXJfcGFyYW1fY291bnQKICBmb3JtX3BhcnNlcl9wYXJhbV9pbmRleAogIGZvcm1fcGFyc2VyX3BhcmFtX2V4aXN0cwogIGZvcm1fcGFyc2VyX3Byb2Nlc3MAAAAAAAAAAHMBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABzAQAAUUpTTkVUX0xJQl9GT1JNX1BBUlNFUl9ICiAgZm9ybV9wYXJzZXIKICBsd3Nfc3BhX2NyZWF0ZV9pbmZvCiAgbHdzX3NwYQogIGx3c2FjCiAgc29ja2V0CiAgZm9ybV9wYXJzZXJfaW5pdAogIHNvY2tldAogIGZvcm1fcGFyc2VyX2FsbG9jCiAgZm9ybV9wYXJzZXJfY2xlYXIKICBmb3JtX3BhcnNlcl9jbGVhcl9ydAogIGZvcm1fcGFyc2VyX2ZyZWUKICBmb3JtX3BhcnNlcl9mcmVlX3J0CiAgZm9ybV9wYXJzZXJfcGFyYW1fbmFtZQogIGZvcm1fcGFyc2VyX3BhcmFtX3ZhbGlkCiAgZm9ybV9wYXJzZXJfcGFyYW1fY291bnQKICBmb3JtX3BhcnNlcl9wYXJhbV9pbmRleAogIGZvcm1fcGFyc2VyX3BhcmFtX2V4aXN0cwogIGZvcm1fcGFyc2VyX3Byb2Nlc3MAAAAAAAAAAHMBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABzAQAAUUpTTkVUX0xJQl9GT1JNX1BBUlNFUl9ICiAgZm9ybV9wYXJzZXIKICBsd3Nfc3BhX2NyZWF0ZV9pbmZvCiAgbHdzX3NwYQogIGx3c2FjCiAgc29ja2V0CiAgZm9ybV9wYXJzZXJfaW5pdAogIHNvY2tldAogIGZvcm1fcGFyc2VyX2FsbG9jCiAgZm9ybV9wYXJzZXJfY2xlYXIKICBmb3JtX3BhcnNlcl9jbGVhcl9ydAogIGZvcm1fcGFyc2VyX2ZyZWUKICBmb3JtX3BhcnNlcl9mcmVlX3J0CiAgZm9ybV9wYXJzZXJfcGFyYW1fbmFtZQogIGZvcm1fcGFyc2VyX3BhcmFtX3ZhbGlkCiAgZm9ybV9wYXJzZXJfcGFyYW1fY291bnQKICBmb3JtX3BhcnNlcl9wYXJhbV9pbmRleAogIGZvcm1fcGFyc2VyX3BhcmFtX2V4aXN0cwogIGZvcm1fcGFyc2VyX3Byb2Nlc3MAAAAAAAAAAHMBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1276,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/form-parser.h",
						"symkeys":
						[
							[
								41,
								65
							],
							[
								153,
								164
							],
							[
								193,
								212
							],
							[
								239,
								246
							],
							[
								262,
								267
							],
							[
								290,
								296
							],
							[
								453,
								469
							],
							[
								490,
								496
							],
							[
								579,
								596
							],
							[
								622,
								639
							],
							[
								682,
								702
							],
							[
								744,
								760
							],
							[
								803,
								822
							],
							[
								864,
								886
							],
							[
								923,
								946
							],
							[
								984,
								1007
							],
							[
								1034,
								1057
							],
							[
								1101,
								1125
							],
							[
								1170,
								1189
							]
						],
						"symlist":
						[
							"QJSNET_LIB_FORM_PARSER_H",
							"form_parser",
							"lws_spa_create_info",
							"lws_spa",
							"lwsac",
							"socket",
							"form_parser_init",
							"socket",
							"form_parser_alloc",
							"form_parser_clear",
							"form_parser_clear_rt",
							"form_parser_free",
							"form_parser_free_rt",
							"form_parser_param_name",
							"form_parser_param_valid",
							"form_parser_param_count",
							"form_parser_param_index",
							"form_parser_param_exists",
							"form_parser_process"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABzAQAAUUpTTkVUX0xJQl9GT1JNX1BBUlNFUl9ICiAgZm9ybV9wYXJzZXIKICBsd3Nfc3BhX2NyZWF0ZV9pbmZvCiAgbHdzX3NwYQogIGx3c2FjCiAgc29ja2V0CiAgZm9ybV9wYXJzZXJfaW5pdAogIHNvY2tldAogIGZvcm1fcGFyc2VyX2FsbG9jCiAgZm9ybV9wYXJzZXJfY2xlYXIKICBmb3JtX3BhcnNlcl9jbGVhcl9ydAogIGZvcm1fcGFyc2VyX2ZyZWUKICBmb3JtX3BhcnNlcl9mcmVlX3J0CiAgZm9ybV9wYXJzZXJfcGFyYW1fbmFtZQogIGZvcm1fcGFyc2VyX3BhcmFtX3ZhbGlkCiAgZm9ybV9wYXJzZXJfcGFyYW1fY291bnQKICBmb3JtX3BhcnNlcl9wYXJhbV9pbmRleAogIGZvcm1fcGFyc2VyX3BhcmFtX2V4aXN0cwogIGZvcm1fcGFyc2VyX3Byb2Nlc3MAAAAAAAAAAHMBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABzAQAAUUpTTkVUX0xJQl9GT1JNX1BBUlNFUl9ICiAgZm9ybV9wYXJzZXIKICBsd3Nfc3BhX2NyZWF0ZV9pbmZvCiAgbHdzX3NwYQogIGx3c2FjCiAgc29ja2V0CiAgZm9ybV9wYXJzZXJfaW5pdAogIHNvY2tldAogIGZvcm1fcGFyc2VyX2FsbG9jCiAgZm9ybV9wYXJzZXJfY2xlYXIKICBmb3JtX3BhcnNlcl9jbGVhcl9ydAogIGZvcm1fcGFyc2VyX2ZyZWUKICBmb3JtX3BhcnNlcl9mcmVlX3J0CiAgZm9ybV9wYXJzZXJfcGFyYW1fbmFtZQogIGZvcm1fcGFyc2VyX3BhcmFtX3ZhbGlkCiAgZm9ybV9wYXJzZXJfcGFyYW1fY291bnQKICBmb3JtX3BhcnNlcl9wYXJhbV9pbmRleAogIGZvcm1fcGFyc2VyX3BhcmFtX2V4aXN0cwogIGZvcm1fcGFyc2VyX3Byb2Nlc3MAAAAAAAAAAHMBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1277,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/deferred.h",
						"symkeys":
						[
							[
								38,
								59
							],
							[
								130,
								138
							],
							[
								154,
								159
							],
							[
								174,
								191
							],
							[
								199,
								207
							],
							[
								224,
								241
							],
							[
								282,
								298
							],
							[
								778,
								794
							],
							[
								868,
								876
							],
							[
								993,
								1001
							],
							[
								1027,
								1041
							],
							[
								1059,
								1072
							],
							[
								1095,
								1108
							],
							[
								1151,
								1165
							],
							[
								1207,
								1221
							],
							[
								1258,
								1271
							],
							[
								1329,
								1344
							],
							[
								1367,
								1386
							],
							[
								1400,
								1418
							],
							[
								1465,
								1478
							],
							[
								1516,
								1533
							],
							[
								1595,
								1608
							],
							[
								1864,
								1876
							],
							[
								1934,
								1947
							],
							[
								2023,
								2037
							],
							[
								2339,
								2351
							],
							[
								2431,
								2446
							],
							[
								2524,
								2538
							],
							[
								2618,
								2631
							],
							[
								2721,
								2734
							],
							[
								2883,
								2896
							]
						],
						"symlist":
						[
							"QJSNET_LIB_DEFERRED_H",
							"deferred",
							"ptr_t",
							"FinalizerFunction",
							"deferred",
							"js_ctx_function_t",
							"js_rt_function_t",
							"DeferredFunction",
							"deferred",
							"deferred",
							"deferred_clear",
							"deferred_free",
							"deferred_newv",
							"deferred_newjs",
							"deferred_dupjs",
							"deferred_init",
							"deferred_call_x",
							"deferred_destructor",
							"deferred_finalizer",
							"deferred_tojs",
							"DEFERRED_SENTINEL",
							"vdeferred_new",
							"deferred_new",
							"deferred_call",
							"deferred_new_x",
							"deferred_dup",
							"deferred_getctx",
							"deferred_getjs",
							"deferred_new1",
							"deferred_new2",
							"deferred_new3"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABzAQAAUUpTTkVUX0xJQl9GT1JNX1BBUlNFUl9ICiAgZm9ybV9wYXJzZXIKICBsd3Nfc3BhX2NyZWF0ZV9pbmZvCiAgbHdzX3NwYQogIGx3c2FjCiAgc29ja2V0CiAgZm9ybV9wYXJzZXJfaW5pdAogIHNvY2tldAogIGZvcm1fcGFyc2VyX2FsbG9jCiAgZm9ybV9wYXJzZXJfY2xlYXIKICBmb3JtX3BhcnNlcl9jbGVhcl9ydAogIGZvcm1fcGFyc2VyX2ZyZWUKICBmb3JtX3BhcnNlcl9mcmVlX3J0CiAgZm9ybV9wYXJzZXJfcGFyYW1fbmFtZQogIGZvcm1fcGFyc2VyX3BhcmFtX3ZhbGlkCiAgZm9ybV9wYXJzZXJfcGFyYW1fY291bnQKICBmb3JtX3BhcnNlcl9wYXJhbV9pbmRleAogIGZvcm1fcGFyc2VyX3BhcmFtX2V4aXN0cwogIGZvcm1fcGFyc2VyX3Byb2Nlc3MAAAAAAAAAAPcBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1278,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/context.c",
						"symkeys":
						[
							[
								150,
								167
							],
							[
								762,
								775
							],
							[
								1153,
								1164
							],
							[
								1335,
								1349
							],
							[
								1473,
								1487
							]
						],
						"symlist":
						[
							"—Ⓕ– context_exception ( ) { … } — function",
							"—Ⓕ– context_clear ( ) { … } — function",
							"—Ⓕ– context_add ( ) { … } — function",
							"—Ⓕ– context_delete ( ) { … } — function",
							"—Ⓕ– context_for_fd ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD3AQAAUUpTTkVUX0xJQl9ERUZFUlJFRF9ICiAgZGVmZXJyZWQKICBwdHJfdApGaW5hbGl6ZXJGdW5jdGlvbgogIGRlZmVycmVkCiAganNfY3R4X2Z1bmN0aW9uX3QKICBqc19ydF9mdW5jdGlvbl90CkRlZmVycmVkRnVuY3Rpb24KICBkZWZlcnJlZAogIGRlZmVycmVkCiAgZGVmZXJyZWRfY2xlYXIKICBkZWZlcnJlZF9mcmVlCiAgZGVmZXJyZWRfbmV3dgogIGRlZmVycmVkX25ld2pzCiAgZGVmZXJyZWRfZHVwanMKICBkZWZlcnJlZF9pbml0CiAgZGVmZXJyZWRfY2FsbF94CiAgZGVmZXJyZWRfZGVzdHJ1Y3RvcgogIGRlZmVycmVkX2ZpbmFsaXplcgogIGRlZmVycmVkX3RvanMKREVGRVJSRURfU0VOVElORUwKICB2ZGVmZXJyZWRfbmV3CiAgZGVmZXJyZWRfbmV3CiAgZGVmZXJyZWRfY2FsbAogIGRlZmVycmVkX25ld194CiAgZGVmZXJyZWRfZHVwCiAgZGVmZXJyZWRfZ2V0Y3R4CiAgZGVmZXJyZWRfZ2V0anMKICBkZWZlcnJlZF9uZXcxCiAgZGVmZXJyZWRfbmV3MgogIGRlZmVycmVkX25ldzMAAAAAAAAAAMYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1279,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/deferred.c",
						"symkeys":
						[
							[
								69,
								83
							],
							[
								226,
								239
							],
							[
								397,
								410
							],
							[
								657,
								671
							],
							[
								976,
								989
							],
							[
								1260,
								1275
							],
							[
								2003,
								2022
							],
							[
								2190,
								2208
							]
						],
						"symlist":
						[
							"—Ⓕ– deferred_clear ( ) { … } — function",
							"—Ⓕ– deferred_free ( ) { … } — function",
							"—Ⓕ– deferred_newv ( ) { … } — function",
							"—Ⓕ– deferred_newjs ( ) { … } — function",
							"—Ⓕ– deferred_init ( ) { … } — function",
							"—Ⓕ– deferred_call_x ( ) { … } — function",
							"—Ⓕ– deferred_destructor ( ) { … } — function",
							"—Ⓕ– deferred_finalizer ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD4AAAA4oCU4pK74oCTIGNvbnRleHRfZXhjZXB0aW9uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29udGV4dF9jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNvbnRleHRfYWRkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29udGV4dF9kZWxldGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjb250ZXh0X2Zvcl9mZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAEYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1280,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/deferred.c.orig",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACWAQAA4oCU4pK74oCTIGRlZmVycmVkX2NsZWFyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZGVmZXJyZWRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGRlZmVycmVkX25ld3YgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBkZWZlcnJlZF9uZXdqcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGRlZmVycmVkX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBkZWZlcnJlZF9jYWxsX3ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBkZWZlcnJlZF9kZXN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZGVmZXJyZWRfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1281,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/remove-functions.c",
						"symkeys":
						[
							[
								52,
								66
							],
							[
								763,
								774
							],
							[
								881,
								891
							],
							[
								1199,
								1214
							],
							[
								1947,
								1961
							],
							[
								2085,
								2098
							],
							[
								2343,
								2356
							],
							[
								2532,
								2547
							],
							[
								2799,
								2811
							],
							[
								3070,
								3081
							],
							[
								3459,
								3471
							],
							[
								3597,
								3611
							],
							[
								3878,
								3901
							],
							[
								4159,
								4180
							],
							[
								4354,
								4363
							],
							[
								4474,
								4498
							],
							[
								4651,
								4664
							],
							[
								4870,
								4884
							],
							[
								5220,
								5235
							],
							[
								5494,
								5497
							],
							[
								5641,
								5651
							],
							[
								5862,
								5880
							],
							[
								6031,
								6048
							],
							[
								6196,
								6206
							],
							[
								6317,
								6329
							],
							[
								6491,
								6500
							],
							[
								6596,
								6606
							],
							[
								6692,
								6713
							],
							[
								6908,
								6919
							],
							[
								7093,
								7115
							],
							[
								7350,
								7366
							],
							[
								7451,
								7471
							],
							[
								7606,
								7631
							],
							[
								7820,
								7831
							],
							[
								8045,
								8056
							],
							[
								8187,
								8202
							],
							[
								8312,
								8330
							],
							[
								8440,
								8457
							],
							[
								8644,
								8658
							],
							[
								9390,
								9402
							],
							[
								9644,
								9657
							],
							[
								9760,
								9776
							],
							[
								10010,
								10026
							],
							[
								10252,
								10266
							],
							[
								10576,
								10591
							],
							[
								10679,
								10702
							],
							[
								10958,
								10974
							],
							[
								11171,
								11192
							],
							[
								11867,
								11888
							],
							[
								12096,
								12112
							],
							[
								12178,
								12199
							],
							[
								12335,
								12352
							],
							[
								12528,
								12543
							],
							[
								12921,
								12932
							],
							[
								13251,
								13259
							],
							[
								13380,
								13388
							],
							[
								13509,
								13526
							],
							[
								13891,
								13905
							],
							[
								14047,
								14064
							],
							[
								14262,
								14274
							],
							[
								14564,
								14576
							],
							[
								14712,
								14727
							],
							[
								15501,
								15516
							],
							[
								15676,
								15688
							],
							[
								15794,
								15806
							],
							[
								15934,
								15947
							],
							[
								16074,
								16087
							],
							[
								16192,
								16206
							],
							[
								16393,
								16410
							],
							[
								16640,
								16655
							],
							[
								16846,
								16861
							],
							[
								17009,
								17024
							],
							[
								17153,
								17164
							],
							[
								17386,
								17398
							],
							[
								17590,
								17598
							],
							[
								17793,
								17806
							],
							[
								17977,
								17992
							],
							[
								18187,
								18201
							],
							[
								18897,
								18908
							],
							[
								19247,
								19258
							],
							[
								19269,
								19282
							],
							[
								19551,
								19567
							],
							[
								19727,
								19739
							],
							[
								19929,
								19947
							],
							[
								20326,
								20340
							],
							[
								20503,
								20516
							],
							[
								20752,
								20767
							],
							[
								20839,
								20854
							],
							[
								21011,
								21025
							],
							[
								21170,
								21184
							],
							[
								21569,
								21593
							],
							[
								21817,
								21829
							],
							[
								22074,
								22093
							],
							[
								22273,
								22291
							],
							[
								22507,
								22530
							],
							[
								22869,
								22894
							],
							[
								23150,
								23161
							],
							[
								23388,
								23410
							],
							[
								23704,
								23726
							],
							[
								23997,
								24009
							],
							[
								24711,
								24720
							],
							[
								24917,
								24937
							],
							[
								25129,
								25144
							],
							[
								25424,
								25438
							],
							[
								26006,
								26020
							],
							[
								26312,
								26328
							],
							[
								26650,
								26665
							],
							[
								26790,
								26806
							],
							[
								27119,
								27133
							],
							[
								27479,
								27491
							],
							[
								27603,
								27616
							],
							[
								28933,
								28948
							],
							[
								29020,
								29034
							],
							[
								29156,
								29169
							],
							[
								29341,
								29357
							],
							[
								29517,
								29531
							],
							[
								29687,
								29703
							],
							[
								29883,
								29898
							],
							[
								29997,
								30010
							],
							[
								30155,
								30169
							]
						],
						"symlist":
						[
							"—Ⓕ– JS_INIT_MODULE ( ) { … } — function",
							"—Ⓕ– buffer_move ( ) { … } — function",
							"—Ⓕ– byte_findb ( ) { … } — function",
							"—Ⓕ– deferred_call_x ( ) { … } — function",
							"—Ⓕ– deferred_dupjs ( ) { … } — function",
							"—Ⓕ– deferred_newv ( ) { … } — function",
							"—Ⓕ– deferred_tojs ( ) { … } — function",
							"—Ⓕ– form_parser_new ( ) { … } — function",
							"—Ⓕ– headers_atom ( ) { … } — function",
							"—Ⓕ– headers_set ( ) { … } — function",
							"—Ⓕ– js_buffer_to ( ) { … } — function",
							"—Ⓕ– js_module_find ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_wrap ( ) { … } — function",
							"—Ⓕ– minnet_protocol_count ( ) { … } — function",
							"—Ⓕ– proxy_new ( ) { … } — function",
							"—Ⓕ– proxy_ws_raw_msg_destroy ( ) { … } — function",
							"—Ⓕ– request_clear ( ) { … } — function",
							"—Ⓕ– request_format ( ) { … } — function",
							"—Ⓕ– response_format ( ) { … } — function",
							"url",
							"—Ⓕ– want_write ( ) { … } — function",
							"—Ⓕ– ws_want_write_free ( ) { … } — function",
							"—Ⓕ– asynciterator_new ( ) { … } — function",
							"—Ⓕ– block_init ( ) { … } — function",
							"—Ⓕ– block_concat ( ) { … } — function",
							"—Ⓕ– block_new ( ) { … } — function",
							"—Ⓕ– block_from ( ) { … } — function",
							"—Ⓕ– block_fromarraybuffer ( ) { … } — function",
							"—Ⓕ– buffer_init ( ) { … } — function",
							"—Ⓕ– buffer_fromarraybuffer ( ) { … } — function",
							"—Ⓕ– buffer_finalizer ( ) { … } — function",
							"—Ⓕ– buffer_toarraybuffer ( ) { … } — function",
							"—Ⓕ– buffer_toarraybuffer_size ( ) { … } — function",
							"—Ⓕ– buffer_dump ( ) { … } — function",
							"—Ⓕ– buffer_skip ( ) { … } — function",
							"—Ⓕ– deferred_freejs ( ) { … } — function",
							"—Ⓕ– deferred_freejs_rt ( ) { … } — function",
							"—Ⓕ– deferred_newjs_rt ( ) { … } — function",
							"—Ⓕ– headers_addobj ( ) { … } — function",
							"—Ⓕ– headers_copy ( ) { … } — function",
							"—Ⓕ– headers_unset ( ) { … } — function",
							"—Ⓕ– headers_tostring ( ) { … } — function",
							"—Ⓕ– generator_cancel ( ) { … } — function",
							"—Ⓕ– generator_stop ( ) { … } — function",
							"—Ⓕ– js_promise_done ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_bool ( ) { … } — function",
							"—Ⓕ– js_module_find_s ( ) { … } — function",
							"—Ⓕ– js_module_export_find ( ) { … } — function",
							"—Ⓕ– js_module_import_meta ( ) { … } — function",
							"—Ⓕ– js_module_loader ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_length ( ) { … } — function",
							"—Ⓕ– js_atom_is_string ( ) { … } — function",
							"—Ⓕ– js_is_generator ( ) { … } — function",
							"—Ⓕ– js_is_async ( ) { … } — function",
							"—Ⓕ– wsi_peer ( ) { … } — function",
							"—Ⓕ– wsi_host ( ) { … } — function",
							"—Ⓕ– wsi_copy_fragment ( ) { … } — function",
							"—Ⓕ– wsi_vhost_name ( ) { … } — function",
							"lws_token_indexes",
							"—Ⓕ– opaque_valid ( ) { … } — function",
							"—Ⓕ– request_dump ( ) { … } — function",
							"—Ⓕ– request_fromobj ( ) { … } — function",
							"—Ⓕ– request_fromurl ( ) { … } — function",
							"—Ⓕ– request_zero ( ) { … } — function",
							"—Ⓕ– request_free ( ) { … } — function",
							"—Ⓕ– response_dump ( ) { … } — function",
							"—Ⓕ– response_zero ( ) { … } — function",
							"—Ⓕ– response_write ( ) { … } — function",
							"—Ⓕ– response_redirect ( ) { … } — function",
							"—Ⓕ– ringbuffer_new2 ( ) { … } — function",
							"—Ⓕ– session_context ( ) { … } — function",
							"—Ⓕ– session_request ( ) { … } — function",
							"—Ⓕ– url_connect ( ) { … } — function",
							"—Ⓕ– url_location ( ) { … } — function",
							"—Ⓕ– url_dump ( ) { … } — function",
							"—Ⓕ– js_value_dump ( ) { … } — function",
							"—Ⓕ– socket_geterror ( ) { … } — function",
							"—Ⓕ– socket_address ( ) { … } — function",
							"—Ⓕ– ws_writable ( ) { … } — function",
							" Ⓣ  WSWantWrite ; — typedef",
							"—Ⓕ– ws_want_write ( ) { … } — function",
							"—Ⓕ– form_parser_zero ( ) { … } — function",
							"—Ⓕ– vector2array ( ) { … } — function",
							"—Ⓕ– js_function_bind_v ( ) { … } — function",
							"—Ⓕ– js_buffer_data ( ) { … } — function",
							"—Ⓕ– js_buffer_to3 ( ) { … } — function",
							"—Ⓕ– js_buffer_valid ( ) { … } — function",
							"—Ⓕ– js_buffer_clone ( ) { … } — function",
							"—Ⓕ– js_buffer_dump ( ) { … } — function",
							"—Ⓕ– js_is_iterable ( ) { … } — function",
							"—Ⓕ– js_get_propertystr_int64 ( ) { … } — function",
							"—Ⓕ– js_module_at ( ) { … } — function",
							"—Ⓕ– minnet_request_from ( ) { … } — function",
							"—Ⓕ– minnet_request_new ( ) { … } — function",
							"—Ⓕ– minnet_generator_reader ( ) { … } — function",
							"—Ⓕ– minnet_generator_iterator ( ) { … } — function",
							"—Ⓕ– client_find ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_new ( ) { … } — function",
							"—Ⓕ– minnet_ringbuffer_wrap ( ) { … } — function",
							"—Ⓕ– tail_consume ( ) { … } — function",
							"—Ⓕ– tail_bind ( ) { … } — function",
							"—Ⓕ– client_resolved_free ( ) { … } — function",
							"—Ⓕ– client_resolved ( ) { … } — function",
							"—Ⓕ– client_promise ( ) { … } — function",
							"—Ⓕ– buffer_escaped ( ) { … } — function",
							"—Ⓕ– buffer_fromvalue ( ) { … } — function",
							"—Ⓕ– buffer_tostring ( ) { … } — function",
							"—Ⓕ– headers_gettoken ( ) { … } — function",
							"—Ⓕ– js_module_list ( ) { … } — function",
							"—Ⓕ– opaque_clear ( ) { … } — function",
							"—Ⓕ– buffer_escape ( ) { … } — function",
							"—Ⓕ– form_parser_dup ( ) { … } — function",
							"—Ⓕ– deferred_dupjs ( ) { … } — function",
							"—Ⓕ– deferred_tojs ( ) { … } — function",
							"—Ⓕ– deferred_js_call ( ) { … } — function",
							"—Ⓕ– buffer_putchar ( ) { … } — function",
							"—Ⓕ– ringbuffer_init2 ( ) { … } — function",
							"—Ⓕ– ringbuffer_next ( ) { … } — function",
							"—Ⓕ– response_free ( ) { … } — function",
							"—Ⓕ– response_clear ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAA3BIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1282,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/context.c",
						"symkeys":
						[
							[
								150,
								167
							],
							[
								762,
								775
							],
							[
								1153,
								1164
							],
							[
								1335,
								1349
							],
							[
								1473,
								1487
							]
						],
						"symlist":
						[
							"—Ⓕ– context_exception ( ) { … } — function",
							"—Ⓕ– context_clear ( ) { … } — function",
							"—Ⓕ– context_add ( ) { … } — function",
							"—Ⓕ– context_delete ( ) { … } — function",
							"—Ⓕ– context_for_fd ( ) { … } — function"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1283,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/context.h",
						"symkeys":
						[
							[
								37,
								57
							],
							[
								153,
								160
							],
							[
								206,
								217
							],
							[
								292,
								304
							],
							[
								322,
								331
							],
							[
								347,
								372
							],
							[
								391,
								408
							],
							[
								416,
								423
							],
							[
								453,
								466
							],
							[
								474,
								481
							],
							[
								490,
								501
							],
							[
								509,
								516
							],
							[
								525,
								539
							],
							[
								547,
								554
							],
							[
								565,
								572
							],
							[
								574,
								588
							],
							[
								601,
								604
							]
						],
						"symlist":
						[
							"QJSNET_LIB_CONTEXT_H",
							"context",
							"lws_context",
							"TimerClosure",
							"list_head",
							"lws_context_creation_info",
							"context_exception",
							"context",
							"context_clear",
							"context",
							"context_add",
							"context",
							"context_delete",
							"context",
							"context",
							" context_for_fd",
							"lws"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD4AAAA4oCU4pK74oCTIGNvbnRleHRfZXhjZXB0aW9uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29udGV4dF9jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNvbnRleHRfYWRkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29udGV4dF9kZWxldGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjb250ZXh0X2Zvcl9mZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAO0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1284,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/context.c",
						"symkeys":
						[
							[
								150,
								167
							],
							[
								762,
								775
							],
							[
								1153,
								1164
							],
							[
								1335,
								1349
							],
							[
								1473,
								1487
							]
						],
						"symlist":
						[
							"—Ⓕ– context_exception ( ) { … } — function",
							"—Ⓕ– context_clear ( ) { … } — function",
							"—Ⓕ– context_add ( ) { … } — function",
							"—Ⓕ– context_delete ( ) { … } — function",
							"—Ⓕ– context_for_fd ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADtAAAAUUpTTkVUX0xJQl9DT05URVhUX0gKICBjb250ZXh0CiAgbHdzX2NvbnRleHQKVGltZXJDbG9zdXJlCiAgbGlzdF9oZWFkCiAgbHdzX2NvbnRleHRfY3JlYXRpb25faW5mbwogIGNvbnRleHRfZXhjZXB0aW9uCiAgY29udGV4dAogIGNvbnRleHRfY2xlYXIKICBjb250ZXh0CiAgY29udGV4dF9hZGQKICBjb250ZXh0CiAgY29udGV4dF9kZWxldGUKICBjb250ZXh0CiAgY29udGV4dAogIGNvbnRleHRfZm9yX2ZkCiAgbHdzAAAAAAAAAADGAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1285,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/closure.h",
						"symkeys":
						[
							[
								37,
								57
							],
							[
								117,
								131
							],
							[
								203,
								207
							],
							[
								294,
								303
							],
							[
								334,
								345
							],
							[
								374,
								385
							],
							[
								408,
								420
							]
						],
						"symlist":
						[
							"QJSNET_LIB_CLOSURE_H",
							"closure_free_t",
							"void",
							"allocated",
							"closure_new",
							"closure_dup",
							"closure_free"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD4AAAA4oCU4pK74oCTIGNvbnRleHRfZXhjZXB0aW9uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29udGV4dF9jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNvbnRleHRfYWRkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY29udGV4dF9kZWxldGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjb250ZXh0X2Zvcl9mZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAGMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1286,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/callback.h",
						"symkeys":
						[
							[
								38,
								59
							],
							[
								118,
								127
							],
							[
								202,
								207
							],
							[
								262,
								271
							],
							[
								362,
								373
							],
							[
								420,
								426
							],
							[
								450,
								462
							],
							[
								492,
								504
							],
							[
								553,
								562
							],
							[
								586,
								600
							],
							[
								629,
								643
							],
							[
								698,
								709
							],
							[
								814,
								827
							],
							[
								956,
								970
							],
							[
								1269,
								1281
							],
							[
								1299,
								1308
							],
							[
								1486,
								1500
							],
							[
								1613,
								1628
							],
							[
								1731,
								1749
							],
							[
								1763,
								1774
							],
							[
								1815,
								1828
							],
							[
								1842,
								1853
							]
						],
						"symlist":
						[
							"QJSNET_LIB_CALLBACK_H",
							"GETCBPROP",
							"GETCB",
							"GETCBTHIS",
							"JS_DupValue",
							"FREECB",
							"JS_FreeValue",
							"JS_FreeValue",
							"FREECB_RT",
							"JS_FreeValueRT",
							"JS_FreeValueRT",
							"js_callback",
							"callback_zero",
							"callback_clear",
							"CallbackType",
							"callbacks",
							"callbacks_zero",
							"callbacks_clear",
							"callback_emit_this",
							"js_callback",
							"callback_emit",
							"js_callback"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABjAAAAUUpTTkVUX0xJQl9DTE9TVVJFX0gKICBjbG9zdXJlX2ZyZWVfdAogIHZvaWQKICBhbGxvY2F0ZWQKICBjbG9zdXJlX25ldwogIGNsb3N1cmVfZHVwCiAgY2xvc3VyZV9mcmVlAAAAAAAAAAAwAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1287,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/session.h",
						"symkeys":
						[
							[
								37,
								57
							],
							[
								108,
								118
							],
							[
								127,
								143
							],
							[
								152,
								159
							],
							[
								168,
								182
							],
							[
								191,
								205
							],
							[
								214,
								234
							],
							[
								244,
								256
							],
							[
								389,
								399
							],
							[
								417,
								433
							],
							[
								565,
								579
							],
							[
								598,
								612
							],
							[
								701,
								713
							],
							[
								721,
								733
							],
							[
								742,
								755
							],
							[
								763,
								775
							],
							[
								800,
								816
							],
							[
								824,
								836
							],
							[
								863,
								877
							],
							[
								885,
								897
							],
							[
								929,
								945
							],
							[
								953,
								965
							],
							[
								1002,
								1018
							],
							[
								1026,
								1038
							],
							[
								1072,
								1079
							],
							[
								1092,
								1102
							],
							[
								1148,
								1159
							],
							[
								1197,
								1217
							],
							[
								1219,
								1233
							],
							[
								1241,
								1253
							],
							[
								1264,
								1277
							],
							[
								1279,
								1295
							],
							[
								1303,
								1315
							]
						],
						"symlist":
						[
							"QJSNET_LIB_SESSION_H",
							"http_mount",
							"proxy_connection",
							"context",
							"server_context",
							"client_context",
							"wsi_opaque_user_data",
							"session_data",
							"http_mount",
							"proxy_connection",
							"server_context",
							"client_context",
							"session_zero",
							"session_data",
							"session_clear",
							"session_data",
							"session_clear_rt",
							"session_data",
							"session_object",
							"session_data",
							"session_writable",
							"session_data",
							"session_callback",
							"session_data",
							"context",
							"session_ws",
							"session_wsi",
							"wsi_opaque_user_data",
							" session_opaque",
							"session_data",
							"http_response",
							" session_response",
							"session_data"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAwAQAAUUpTTkVUX0xJQl9DQUxMQkFDS19ICkdFVENCUFJPUApHRVRDQgpHRVRDQlRISVMKSlNfRHVwVmFsdWUKRlJFRUNCCkpTX0ZyZWVWYWx1ZQpKU19GcmVlVmFsdWUKRlJFRUNCX1JUCkpTX0ZyZWVWYWx1ZVJUCkpTX0ZyZWVWYWx1ZVJUCiAganNfY2FsbGJhY2sKICBjYWxsYmFja196ZXJvCiAgY2FsbGJhY2tfY2xlYXIKQ2FsbGJhY2tUeXBlCiAgY2FsbGJhY2tzCiAgY2FsbGJhY2tzX3plcm8KICBjYWxsYmFja3NfY2xlYXIKICBjYWxsYmFja19lbWl0X3RoaXMKICBqc19jYWxsYmFjawogIGNhbGxiYWNrX2VtaXQKICBqc19jYWxsYmFjawAAAAAAAAAAGQIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1288,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/session.h",
						"symkeys":
						[
							[
								37,
								57
							],
							[
								108,
								118
							],
							[
								127,
								143
							],
							[
								152,
								159
							],
							[
								168,
								182
							],
							[
								191,
								205
							],
							[
								214,
								234
							],
							[
								244,
								256
							],
							[
								389,
								399
							],
							[
								417,
								433
							],
							[
								565,
								579
							],
							[
								598,
								612
							],
							[
								701,
								713
							],
							[
								721,
								733
							],
							[
								742,
								755
							],
							[
								763,
								775
							],
							[
								800,
								816
							],
							[
								824,
								836
							],
							[
								863,
								877
							],
							[
								885,
								897
							],
							[
								929,
								945
							],
							[
								953,
								965
							],
							[
								1002,
								1018
							],
							[
								1026,
								1038
							],
							[
								1072,
								1079
							],
							[
								1092,
								1102
							],
							[
								1148,
								1159
							],
							[
								1197,
								1217
							],
							[
								1219,
								1233
							],
							[
								1241,
								1253
							],
							[
								1264,
								1277
							],
							[
								1279,
								1295
							],
							[
								1303,
								1315
							]
						],
						"symlist":
						[
							"QJSNET_LIB_SESSION_H",
							"http_mount",
							"proxy_connection",
							"context",
							"server_context",
							"client_context",
							"wsi_opaque_user_data",
							"session_data",
							"http_mount",
							"proxy_connection",
							"server_context",
							"client_context",
							"session_zero",
							"session_data",
							"session_clear",
							"session_data",
							"session_clear_rt",
							"session_data",
							"session_object",
							"session_data",
							"session_writable",
							"session_data",
							"session_callback",
							"session_data",
							"context",
							"session_ws",
							"session_wsi",
							"wsi_opaque_user_data",
							" session_opaque",
							"session_data",
							"http_response",
							" session_response",
							"session_data"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAZAgAAUUpTTkVUX0xJQl9TRVNTSU9OX0gKICBodHRwX21vdW50CiAgcHJveHlfY29ubmVjdGlvbgogIGNvbnRleHQKICBzZXJ2ZXJfY29udGV4dAogIGNsaWVudF9jb250ZXh0CiAgd3NpX29wYXF1ZV91c2VyX2RhdGEKICBzZXNzaW9uX2RhdGEKICBodHRwX21vdW50CiAgcHJveHlfY29ubmVjdGlvbgogIHNlcnZlcl9jb250ZXh0CiAgY2xpZW50X2NvbnRleHQKICBzZXNzaW9uX3plcm8KICBzZXNzaW9uX2RhdGEKICBzZXNzaW9uX2NsZWFyCiAgc2Vzc2lvbl9kYXRhCiAgc2Vzc2lvbl9jbGVhcl9ydAogIHNlc3Npb25fZGF0YQogIHNlc3Npb25fb2JqZWN0CiAgc2Vzc2lvbl9kYXRhCiAgc2Vzc2lvbl93cml0YWJsZQogIHNlc3Npb25fZGF0YQogIHNlc3Npb25fY2FsbGJhY2sKICBzZXNzaW9uX2RhdGEKICBjb250ZXh0CiAgc2Vzc2lvbl93cwogIHNlc3Npb25fd3NpCiAgd3NpX29wYXF1ZV91c2VyX2RhdGEKICBzZXNzaW9uX29wYXF1ZQogIHNlc3Npb25fZGF0YQogIGh0dHBfcmVzcG9uc2UKICBzZXNzaW9uX3Jlc3BvbnNlCiAgc2Vzc2lvbl9kYXRhAAAAAAAAAAAZAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQIAAFFKU05FVF9MSUJfU0VTU0lPTl9ICiAgaHR0cF9tb3VudAogIHByb3h5X2Nvbm5lY3Rpb24KICBjb250ZXh0CiAgc2VydmVyX2NvbnRleHQKICBjbGllbnRfY29udGV4dAogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgc2Vzc2lvbl9kYXRhCiAgaHR0cF9tb3VudAogIHByb3h5X2Nvbm5lY3Rpb24KICBzZXJ2ZXJfY29udGV4dAogIGNsaWVudF9jb250ZXh0CiAgc2Vzc2lvbl96ZXJvCiAgc2Vzc2lvbl9kYXRhCiAgc2Vzc2lvbl9jbGVhcgogIHNlc3Npb25fZGF0YQogIHNlc3Npb25fY2xlYXJfcnQKICBzZXNzaW9uX2RhdGEKICBzZXNzaW9uX29iamVjdAogIHNlc3Npb25fZGF0YQogIHNlc3Npb25fd3JpdGFibGUKICBzZXNzaW9uX2RhdGEKICBzZXNzaW9uX2NhbGxiYWNrCiAgc2Vzc2lvbl9kYXRhCiAgY29udGV4dAogIHNlc3Npb25fd3MKICBzZXNzaW9uX3dzaQogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgc2Vzc2lvbl9vcGFxdWUKICBzZXNzaW9uX2RhdGEKICBodHRwX3Jlc3BvbnNlCiAgc2Vzc2lvbl9yZXNwb25zZQogIHNlc3Npb25fZGF0YQAAAAAAAAAAGQIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1289,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/session.h",
						"symkeys":
						[
							[
								37,
								57
							],
							[
								108,
								118
							],
							[
								127,
								143
							],
							[
								152,
								159
							],
							[
								168,
								182
							],
							[
								191,
								205
							],
							[
								214,
								234
							],
							[
								244,
								256
							],
							[
								389,
								399
							],
							[
								417,
								433
							],
							[
								565,
								579
							],
							[
								598,
								612
							],
							[
								701,
								713
							],
							[
								721,
								733
							],
							[
								742,
								755
							],
							[
								763,
								775
							],
							[
								800,
								816
							],
							[
								824,
								836
							],
							[
								863,
								877
							],
							[
								885,
								897
							],
							[
								929,
								945
							],
							[
								953,
								965
							],
							[
								1002,
								1018
							],
							[
								1026,
								1038
							],
							[
								1072,
								1079
							],
							[
								1092,
								1102
							],
							[
								1148,
								1159
							],
							[
								1197,
								1217
							],
							[
								1219,
								1233
							],
							[
								1241,
								1253
							],
							[
								1264,
								1277
							],
							[
								1279,
								1295
							],
							[
								1303,
								1315
							]
						],
						"symlist":
						[
							"QJSNET_LIB_SESSION_H",
							"http_mount",
							"proxy_connection",
							"context",
							"server_context",
							"client_context",
							"wsi_opaque_user_data",
							"session_data",
							"http_mount",
							"proxy_connection",
							"server_context",
							"client_context",
							"session_zero",
							"session_data",
							"session_clear",
							"session_data",
							"session_clear_rt",
							"session_data",
							"session_object",
							"session_data",
							"session_writable",
							"session_data",
							"session_callback",
							"session_data",
							"context",
							"session_ws",
							"session_wsi",
							"wsi_opaque_user_data",
							" session_opaque",
							"session_data",
							"http_response",
							" session_response",
							"session_data"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAZAgAAUUpTTkVUX0xJQl9TRVNTSU9OX0gKICBodHRwX21vdW50CiAgcHJveHlfY29ubmVjdGlvbgogIGNvbnRleHQKICBzZXJ2ZXJfY29udGV4dAogIGNsaWVudF9jb250ZXh0CiAgd3NpX29wYXF1ZV91c2VyX2RhdGEKICBzZXNzaW9uX2RhdGEKICBodHRwX21vdW50CiAgcHJveHlfY29ubmVjdGlvbgogIHNlcnZlcl9jb250ZXh0CiAgY2xpZW50X2NvbnRleHQKICBzZXNzaW9uX3plcm8KICBzZXNzaW9uX2RhdGEKICBzZXNzaW9uX2NsZWFyCiAgc2Vzc2lvbl9kYXRhCiAgc2Vzc2lvbl9jbGVhcl9ydAogIHNlc3Npb25fZGF0YQogIHNlc3Npb25fb2JqZWN0CiAgc2Vzc2lvbl9kYXRhCiAgc2Vzc2lvbl93cml0YWJsZQogIHNlc3Npb25fZGF0YQogIHNlc3Npb25fY2FsbGJhY2sKICBzZXNzaW9uX2RhdGEKICBjb250ZXh0CiAgc2Vzc2lvbl93cwogIHNlc3Npb25fd3NpCiAgd3NpX29wYXF1ZV91c2VyX2RhdGEKICBzZXNzaW9uX29wYXF1ZQogIHNlc3Npb25fZGF0YQogIGh0dHBfcmVzcG9uc2UKICBzZXNzaW9uX3Jlc3BvbnNlCiAgc2Vzc2lvbl9kYXRhAAAAAAAAAAAZAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1290,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/session.c",
						"symkeys":
						[
							[
								225,
								239
							],
							[
								264,
								283
							],
							[
								309,
								329
							],
							[
								363,
								383
							],
							[
								405,
								417
							],
							[
								830,
								846
							],
							[
								1356,
								1370
							],
							[
								1702,
								1718
							],
							[
								2256,
								2272
							],
							[
								2818,
								2832
							],
							[
								3015,
								3031
							]
						],
						"symlist":
						[
							"—Ⓕ– minnet_ws_data ( ) { … } — function",
							"—Ⓕ– minnet_request_data ( ) { … } — function",
							"—Ⓕ– minnet_response_data ( ) { … } — function",
							"—Ⓕ– minnet_response_data ( ) { … } — function",
							"—Ⓕ– session_zero ( ) { … } — function",
							"—Ⓕ– session_clear_rt ( ) { … } — function",
							"—Ⓕ– session_object ( ) { … } — function",
							"—Ⓕ– session_writable ( ) { … } — function",
							"—Ⓕ– session_callback ( ) { … } — function",
							"—Ⓕ– session_opaque ( ) { … } — function",
							"—Ⓕ– session_response ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAZAgAAUUpTTkVUX0xJQl9TRVNTSU9OX0gKICBodHRwX21vdW50CiAgcHJveHlfY29ubmVjdGlvbgogIGNvbnRleHQKICBzZXJ2ZXJfY29udGV4dAogIGNsaWVudF9jb250ZXh0CiAgd3NpX29wYXF1ZV91c2VyX2RhdGEKICBzZXNzaW9uX2RhdGEKICBodHRwX21vdW50CiAgcHJveHlfY29ubmVjdGlvbgogIHNlcnZlcl9jb250ZXh0CiAgY2xpZW50X2NvbnRleHQKICBzZXNzaW9uX3plcm8KICBzZXNzaW9uX2RhdGEKICBzZXNzaW9uX2NsZWFyCiAgc2Vzc2lvbl9kYXRhCiAgc2Vzc2lvbl9jbGVhcl9ydAogIHNlc3Npb25fZGF0YQogIHNlc3Npb25fb2JqZWN0CiAgc2Vzc2lvbl9kYXRhCiAgc2Vzc2lvbl93cml0YWJsZQogIHNlc3Npb25fZGF0YQogIHNlc3Npb25fY2FsbGJhY2sKICBzZXNzaW9uX2RhdGEKICBjb250ZXh0CiAgc2Vzc2lvbl93cwogIHNlc3Npb25fd3NpCiAgd3NpX29wYXF1ZV91c2VyX2RhdGEKICBzZXNzaW9uX29wYXF1ZQogIHNlc3Npb25fZGF0YQogIGh0dHBfcmVzcG9uc2UKICBzZXNzaW9uX3Jlc3BvbnNlCiAgc2Vzc2lvbl9kYXRhAAAAAAAAAADOAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1291,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ringbuffer.h",
						"symkeys":
						[
							[
								40,
								63
							],
							[
								162,
								172
							],
							[
								247,
								255
							],
							[
								343,
								358
							],
							[
								366,
								376
							],
							[
								391,
								417
							],
							[
								431,
								446
							],
							[
								454,
								464
							],
							[
								543,
								553
							],
							[
								555,
								569
							],
							[
								588,
								604
							],
							[
								612,
								622
							],
							[
								667,
								684
							],
							[
								692,
								702
							],
							[
								740,
								758
							],
							[
								766,
								776
							],
							[
								808,
								823
							],
							[
								831,
								841
							],
							[
								867,
								882
							],
							[
								890,
								900
							],
							[
								911,
								932
							],
							[
								940,
								950
							],
							[
								961,
								979
							],
							[
								987,
								997
							],
							[
								1008,
								1024
							],
							[
								1032,
								1042
							],
							[
								1051,
								1066
							],
							[
								1074,
								1084
							],
							[
								1093,
								1108
							],
							[
								1116,
								1126
							],
							[
								1151,
								1169
							],
							[
								1177,
								1187
							],
							[
								1225,
								1240
							],
							[
								1248,
								1258
							],
							[
								1339,
								1349
							],
							[
								1351,
								1365
							],
							[
								1373,
								1383
							],
							[
								1444,
								1461
							],
							[
								1469,
								1479
							],
							[
								1562,
								1584
							],
							[
								1592,
								1602
							]
						],
						"symlist":
						[
							"QJSNET_LIB_RINGBUFFER_H",
							"ringbuffer",
							"lws_ring",
							"ringbuffer_dump",
							"ringbuffer",
							"ringbuffer_destroy_element",
							"ringbuffer_init",
							"ringbuffer",
							"ringbuffer",
							" ringbuffer_new",
							" ringbuffer_init2",
							"ringbuffer",
							" ringbuffer_insert",
							"ringbuffer",
							" ringbuffer_consume",
							"ringbuffer",
							" ringbuffer_skip",
							"ringbuffer",
							" ringbuffer_next",
							"ringbuffer",
							" ringbuffer_bytelength",
							"ringbuffer",
							" ringbuffer_waiting",
							"ringbuffer",
							" ringbuffer_avail",
							"ringbuffer",
							" ringbuffer_zero",
							"ringbuffer",
							" ringbuffer_free",
							"ringbuffer",
							" ringbuffer_free_rt",
							"ringbuffer",
							" ringbuffer_lock",
							"ringbuffer",
							"ringbuffer",
							" ringbuffer_dup",
							"ringbuffer",
							"ringbuffer_unlock",
							"ringbuffer",
							"ringbuffer_element_len",
							"ringbuffer"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA8AgAA4oCU4pK74oCTIG1pbm5ldF93c19kYXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfZGF0YSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXNwb25zZV9kYXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3Jlc3BvbnNlX2RhdGEgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXNzaW9uX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXNzaW9uX2NsZWFyX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2Vzc2lvbl9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXNzaW9uX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2Vzc2lvbl9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlc3Npb25fb3BhcXVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2Vzc2lvbl9yZXNwb25zZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAKECAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1292,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ringbuffer.c",
						"symkeys":
						[
							[
								215,
								241
							],
							[
								266,
								281
							],
							[
								647,
								661
							],
							[
								810,
								827
							],
							[
								1062,
								1080
							],
							[
								1312,
								1327
							],
							[
								1551,
								1566
							],
							[
								1666,
								1684
							],
							[
								1799,
								1820
							],
							[
								1893,
								1909
							],
							[
								2016,
								2031
							],
							[
								2139,
								2154
							],
							[
								2250,
								2268
							]
						],
						"symlist":
						[
							"—Ⓕ– ringbuffer_destroy_element ( ) { … } — function",
							"—Ⓕ– ringbuffer_init ( ) { … } — function",
							"—Ⓕ– ringbuffer_new ( ) { … } — function",
							"—Ⓕ– ringbuffer_insert ( ) { … } — function",
							"—Ⓕ– ringbuffer_consume ( ) { … } — function",
							"—Ⓕ– ringbuffer_skip ( ) { … } — function",
							"—Ⓕ– ringbuffer_next ( ) { … } — function",
							"—Ⓕ– ringbuffer_waiting ( ) { … } — function",
							"—Ⓕ– ringbuffer_bytelength ( ) { … } — function",
							"—Ⓕ– ringbuffer_avail ( ) { … } — function",
							"—Ⓕ– ringbuffer_zero ( ) { … } — function",
							"—Ⓕ– ringbuffer_free ( ) { … } — function",
							"—Ⓕ– ringbuffer_free_rt ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAChAgAAUUpTTkVUX0xJQl9SSU5HQlVGRkVSX0gKICByaW5nYnVmZmVyCiAgbHdzX3JpbmcKICByaW5nYnVmZmVyX2R1bXAKICByaW5nYnVmZmVyCiAgcmluZ2J1ZmZlcl9kZXN0cm95X2VsZW1lbnQKICByaW5nYnVmZmVyX2luaXQKICByaW5nYnVmZmVyCiAgcmluZ2J1ZmZlcgogIHJpbmdidWZmZXJfbmV3CiAgcmluZ2J1ZmZlcl9pbml0MgogIHJpbmdidWZmZXIKICByaW5nYnVmZmVyX2luc2VydAogIHJpbmdidWZmZXIKICByaW5nYnVmZmVyX2NvbnN1bWUKICByaW5nYnVmZmVyCiAgcmluZ2J1ZmZlcl9za2lwCiAgcmluZ2J1ZmZlcgogIHJpbmdidWZmZXJfbmV4dAogIHJpbmdidWZmZXIKICByaW5nYnVmZmVyX2J5dGVsZW5ndGgKICByaW5nYnVmZmVyCiAgcmluZ2J1ZmZlcl93YWl0aW5nCiAgcmluZ2J1ZmZlcgogIHJpbmdidWZmZXJfYXZhaWwKICByaW5nYnVmZmVyCiAgcmluZ2J1ZmZlcl96ZXJvCiAgcmluZ2J1ZmZlcgogIHJpbmdidWZmZXJfZnJlZQogIHJpbmdidWZmZXIKICByaW5nYnVmZmVyX2ZyZWVfcnQKICByaW5nYnVmZmVyCiAgcmluZ2J1ZmZlcl9sb2NrCiAgcmluZ2J1ZmZlcgogIHJpbmdidWZmZXIKICByaW5nYnVmZmVyX2R1cAogIHJpbmdidWZmZXIKICByaW5nYnVmZmVyX3VubG9jawogIHJpbmdidWZmZXIKICByaW5nYnVmZmVyX2VsZW1lbnRfbGVuCiAgcmluZ2J1ZmZlcgAAAAAAAAAAMAIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1293,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/response.c",
						"symkeys":
						[
							[
								136,
								156
							],
							[
								178,
								191
							],
							[
								532,
								544
							],
							[
								607,
								621
							],
							[
								847,
								860
							],
							[
								998,
								1010
							]
						],
						"symlist":
						[
							"—Ⓕ– minnet_response_data ( ) { … } — function",
							"—Ⓕ– response_init ( ) { … } — function",
							"—Ⓕ– response_dup ( ) { … } — function",
							"—Ⓕ– response_clear ( ) { … } — function",
							"—Ⓕ– response_free ( ) { … } — function",
							"—Ⓕ– response_new ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACyAgAA4oCU4pK74oCTIHJpbmdidWZmZXJfZGVzdHJveV9lbGVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2luc2VydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfY29uc3VtZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfc2tpcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfbmV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfd2FpdGluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfYnl0ZWxlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfYXZhaWwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAADvAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1294,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/request.h",
						"symkeys":
						[
							[
								37,
								57
							],
							[
								155,
								168
							],
							[
								192,
								205
							],
							[
								236,
								248
							],
							[
								413,
								426
							],
							[
								450,
								463
							],
							[
								484,
								496
							],
							[
								551,
								564
							],
							[
								587,
								598
							],
							[
								649,
								660
							],
							[
								681,
								696
							],
							[
								704,
								707
							],
							[
								732,
								745
							],
							[
								777,
								789
							],
							[
								825,
								837
							],
							[
								908,
								919
							]
						],
						"symlist":
						[
							"QJSNET_LIB_REQUEST_H",
							"method_string",
							"method_number",
							"http_request",
							"method_string",
							"method_number",
							"request_init",
							"request_alloc",
							"request_new",
							"request_dup",
							"request_fromwsi",
							"lws",
							"request_clear",
							"request_free",
							"request_from",
							"method_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArAQAA4oCU4pK74oCTIG1pbm5ldF9yZXNwb25zZV9kYXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVzcG9uc2VfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlc3BvbnNlX2R1cCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlc3BvbnNlX2NsZWFyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVzcG9uc2VfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlc3BvbnNlX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1295,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/request.c",
						"symkeys":
						[
							[
								8,
								19
							],
							[
								213,
								232
							],
							[
								412,
								425
							],
							[
								537,
								550
							],
							[
								727,
								739
							],
							[
								974,
								987
							],
							[
								1113,
								1124
							],
							[
								1284,
								1295
							],
							[
								1358,
								1373
							],
							[
								1675,
								1688
							],
							[
								1905,
								1917
							],
							[
								2048,
								2060
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							"—Ⓕ– minnet_request_data ( ) { … } — function",
							"—Ⓕ– method_string ( ) { … } — function",
							"—Ⓕ– method_number ( ) { … } — function",
							"—Ⓕ– request_init ( ) { … } — function",
							"—Ⓕ– request_alloc ( ) { … } — function",
							"—Ⓕ– request_new ( ) { … } — function",
							"—Ⓕ– request_dup ( ) { … } — function",
							"—Ⓕ– request_fromwsi ( ) { … } — function",
							"—Ⓕ– request_clear ( ) { … } — function",
							"—Ⓕ– request_free ( ) { … } — function",
							"—Ⓕ– request_from ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyAAAAUUpTTkVUX0xJQl9SRVFVRVNUX0gKICBtZXRob2Rfc3RyaW5nCiAgbWV0aG9kX251bWJlcgogIGh0dHBfcmVxdWVzdAogIG1ldGhvZF9zdHJpbmcKICBtZXRob2RfbnVtYmVyCiAgcmVxdWVzdF9pbml0CiAgcmVxdWVzdF9hbGxvYwogIHJlcXVlc3RfbmV3CiAgcmVxdWVzdF9kdXAKICByZXF1ZXN0X2Zyb213c2kKICBsd3MKICByZXF1ZXN0X2NsZWFyCiAgcmVxdWVzdF9mcmVlCiAgcmVxdWVzdF9mcm9tCiAgbWV0aG9kX25hbWUAAAAAAAAAAM8BAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1296,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/queue.c",
						"symkeys":
						[
							[
								45,
								55
							],
							[
								145,
								156
							],
							[
								234,
								248
							],
							[
								521,
								531
							],
							[
								612,
								621
							],
							[
								741,
								752
							],
							[
								860,
								870
							],
							[
								978,
								994
							],
							[
								1211,
								1221
							],
							[
								1778,
								1787
							],
							[
								2159,
								2168
							],
							[
								2618,
								2629
							],
							[
								2938,
								2949
							],
							[
								3319,
								3330
							],
							[
								3591,
								3607
							]
						],
						"symlist":
						[
							"—Ⓕ– queue_zero ( ) { … } — function",
							"—Ⓕ– queue_clear ( ) { … } — function",
							"—Ⓕ– queue_clear_rt ( ) { … } — function",
							"—Ⓕ– queue_free ( ) { … } — function",
							"—Ⓕ– queue_new ( ) { … } — function",
							"—Ⓕ– queue_front ( ) { … } — function",
							"—Ⓕ– queue_back ( ) { … } — function",
							"—Ⓕ– queue_last_chunk ( ) { … } — function",
							"—Ⓕ– queue_next ( ) { … } — function",
							"—Ⓕ– queue_add ( ) { … } — function",
							"—Ⓕ– queue_put ( ) { … } — function",
							"—Ⓕ– queue_write ( ) { … } — function",
							"—Ⓕ– queue_close ( ) { … } — function",
							"—Ⓕ– queue_bytes ( ) { … } — function",
							"—Ⓕ– queue_continuous ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABDAgAAICDik4IgIF9HTlVfU09VUkNFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBtaW5uZXRfcmVxdWVzdF9kYXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWV0aG9kX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1ldGhvZF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2FsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2R1cCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfY2xlYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2Zyb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAtAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1297,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/query.c",
						"symkeys":
						[
							[
								28,
								40
							],
							[
								131,
								147
							],
							[
								504,
								515
							],
							[
								1013,
								1023
							]
						],
						"symlist":
						[
							"—Ⓕ– query_object ( ) { … } — function",
							"—Ⓕ– query_object_len ( ) { … } — function",
							"—Ⓕ– query_entry ( ) { … } — function",
							"—Ⓕ– query_from ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADDAgAA4oCU4pK74oCTIHF1ZXVlX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBxdWV1ZV9jbGVhciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHF1ZXVlX2NsZWFyX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVldWVfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHF1ZXVlX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHF1ZXVlX2Zyb250ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVldWVfYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHF1ZXVlX2xhc3RfY2h1bmsgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBxdWV1ZV9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVldWVfYWRkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVldWVfcHV0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVldWVfd3JpdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBxdWV1ZV9jbG9zZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHF1ZXVlX2J5dGVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcXVldWVfY29udGludW91cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAJgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1298,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/form-parser.h",
						"symkeys":
						[
							[
								41,
								65
							],
							[
								153,
								164
							],
							[
								193,
								212
							],
							[
								239,
								246
							],
							[
								262,
								267
							],
							[
								290,
								296
							],
							[
								453,
								469
							],
							[
								490,
								496
							],
							[
								579,
								596
							],
							[
								622,
								639
							],
							[
								682,
								702
							],
							[
								744,
								760
							],
							[
								803,
								822
							],
							[
								864,
								886
							],
							[
								923,
								946
							],
							[
								984,
								1007
							],
							[
								1034,
								1057
							],
							[
								1101,
								1125
							],
							[
								1170,
								1189
							]
						],
						"symlist":
						[
							"QJSNET_LIB_FORM_PARSER_H",
							"form_parser",
							"lws_spa_create_info",
							"lws_spa",
							"lwsac",
							"socket",
							"form_parser_init",
							"socket",
							"form_parser_alloc",
							"form_parser_clear",
							"form_parser_clear_rt",
							"form_parser_free",
							"form_parser_free_rt",
							"form_parser_param_name",
							"form_parser_param_valid",
							"form_parser_param_count",
							"form_parser_param_index",
							"form_parser_param_exists",
							"form_parser_process"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADAAAAA4oCU4pK74oCTIHF1ZXJ5X29iamVjdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHF1ZXJ5X29iamVjdF9sZW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBxdWVyeV9lbnRyeSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHF1ZXJ5X2Zyb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAABzAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1299,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/generator.c",
						"symkeys":
						[
							[
								59,
								72
							],
							[
								143,
								156
							],
							[
								223,
								237
							],
							[
								438,
								455
							],
							[
								577,
								591
							],
							[
								838,
								851
							],
							[
								1143,
								1160
							],
							[
								1448,
								1464
							],
							[
								2211,
								2225
							],
							[
								2700,
								2715
							],
							[
								3550,
								3564
							],
							[
								4027,
								4042
							],
							[
								4764,
								4779
							],
							[
								5503,
								5523
							],
							[
								6121,
								6134
							],
							[
								6524,
								6537
							]
						],
						"symlist":
						[
							"—Ⓕ– enqueue_block ( ) { … } — function",
							"—Ⓕ– enqueue_value ( ) { … } — function",
							"—Ⓕ– generator_zero ( ) { … } — function",
							"—Ⓕ– generator_destroy ( ) { … } — function",
							"—Ⓕ– generator_free ( ) { … } — function",
							"—Ⓕ– generator_new ( ) { … } — function",
							"—Ⓕ– generator_dequeue ( ) { … } — function",
							"—Ⓕ– generator_update ( ) { … } — function",
							"—Ⓕ– generator_next ( ) { … } — function",
							"—Ⓕ– generator_write ( ) { … } — function",
							"—Ⓕ– generator_push ( ) { … } — function",
							"—Ⓕ– generator_yield ( ) { … } — function",
							"—Ⓕ– generator_close ( ) { … } — function",
							"—Ⓕ– generator_continuous ( ) { … } — function",
							"—Ⓕ– enqueue_block ( ) { … } — function",
							"—Ⓕ– enqueue_value ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABzAQAAUUpTTkVUX0xJQl9GT1JNX1BBUlNFUl9ICiAgZm9ybV9wYXJzZXIKICBsd3Nfc3BhX2NyZWF0ZV9pbmZvCiAgbHdzX3NwYQogIGx3c2FjCiAgc29ja2V0CiAgZm9ybV9wYXJzZXJfaW5pdAogIHNvY2tldAogIGZvcm1fcGFyc2VyX2FsbG9jCiAgZm9ybV9wYXJzZXJfY2xlYXIKICBmb3JtX3BhcnNlcl9jbGVhcl9ydAogIGZvcm1fcGFyc2VyX2ZyZWUKICBmb3JtX3BhcnNlcl9mcmVlX3J0CiAgZm9ybV9wYXJzZXJfcGFyYW1fbmFtZQogIGZvcm1fcGFyc2VyX3BhcmFtX3ZhbGlkCiAgZm9ybV9wYXJzZXJfcGFyYW1fY291bnQKICBmb3JtX3BhcnNlcl9wYXJhbV9pbmRleAogIGZvcm1fcGFyc2VyX3BhcmFtX2V4aXN0cwogIGZvcm1fcGFyc2VyX3Byb2Nlc3MAAAAAAAAAAIsCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1300,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/deferred.c",
						"symkeys":
						[
							[
								69,
								83
							],
							[
								226,
								239
							],
							[
								397,
								410
							],
							[
								657,
								671
							],
							[
								976,
								989
							],
							[
								1260,
								1275
							],
							[
								2003,
								2022
							],
							[
								2190,
								2208
							]
						],
						"symlist":
						[
							"—Ⓕ– deferred_clear ( ) { … } — function",
							"—Ⓕ– deferred_free ( ) { … } — function",
							"—Ⓕ– deferred_newv ( ) { … } — function",
							"—Ⓕ– deferred_newjs ( ) { … } — function",
							"—Ⓕ– deferred_init ( ) { … } — function",
							"—Ⓕ– deferred_call_x ( ) { … } — function",
							"—Ⓕ– deferred_destructor ( ) { … } — function",
							"—Ⓕ– deferred_finalizer ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArAwAA4oCU4pK74oCTIGVucXVldWVfYmxvY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBlbnF1ZXVlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfZGVzdHJveSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9kZXF1ZXVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3VwZGF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3B1c2ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfeWllbGQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfY2xvc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfY29udGludW91cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGVucXVldWVfYmxvY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBlbnF1ZXVlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAARgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1301,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/form-parser.h",
						"symkeys":
						[
							[
								41,
								65
							],
							[
								153,
								164
							],
							[
								193,
								212
							],
							[
								239,
								246
							],
							[
								262,
								267
							],
							[
								290,
								296
							],
							[
								453,
								469
							],
							[
								490,
								496
							],
							[
								579,
								596
							],
							[
								622,
								639
							],
							[
								682,
								702
							],
							[
								744,
								760
							],
							[
								803,
								822
							],
							[
								864,
								886
							],
							[
								923,
								946
							],
							[
								984,
								1007
							],
							[
								1034,
								1057
							],
							[
								1101,
								1125
							],
							[
								1170,
								1189
							]
						],
						"symlist":
						[
							"QJSNET_LIB_FORM_PARSER_H",
							"form_parser",
							"lws_spa_create_info",
							"lws_spa",
							"lwsac",
							"socket",
							"form_parser_init",
							"socket",
							"form_parser_alloc",
							"form_parser_clear",
							"form_parser_clear_rt",
							"form_parser_free",
							"form_parser_free_rt",
							"form_parser_param_name",
							"form_parser_param_valid",
							"form_parser_param_count",
							"form_parser_param_index",
							"form_parser_param_exists",
							"form_parser_process"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACWAQAA4oCU4pK74oCTIGRlZmVycmVkX2NsZWFyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZGVmZXJyZWRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGRlZmVycmVkX25ld3YgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBkZWZlcnJlZF9uZXdqcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGRlZmVycmVkX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBkZWZlcnJlZF9jYWxsX3ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBkZWZlcnJlZF9kZXN0cnVjdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZGVmZXJyZWRfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAcwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1302,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/form-parser.c",
						"symkeys":
						[
							[
								93,
								113
							],
							[
								2103,
								2119
							],
							[
								2720,
								2737
							],
							[
								2865,
								2882
							],
							[
								3241,
								3261
							],
							[
								3630,
								3646
							],
							[
								3802,
								3821
							],
							[
								3989,
								4011
							],
							[
								4179,
								4202
							],
							[
								4342,
								4365
							],
							[
								4434,
								4457
							],
							[
								4660,
								4684
							],
							[
								4792,
								4811
							]
						],
						"symlist":
						[
							"—Ⓕ– form_parser_callback ( ) { … } — function",
							"—Ⓕ– form_parser_init ( ) { … } — function",
							"—Ⓕ– form_parser_alloc ( ) { … } — function",
							"—Ⓕ– form_parser_clear ( ) { … } — function",
							"—Ⓕ– form_parser_clear_rt ( ) { … } — function",
							"—Ⓕ– form_parser_free ( ) { … } — function",
							"—Ⓕ– form_parser_free_rt ( ) { … } — function",
							"—Ⓕ– form_parser_param_name ( ) { … } — function",
							"—Ⓕ– form_parser_param_valid ( ) { … } — function",
							"—Ⓕ– form_parser_param_count ( ) { … } — function",
							"—Ⓕ– form_parser_param_index ( ) { … } — function",
							"—Ⓕ– form_parser_param_exists ( ) { … } — function",
							"—Ⓕ– form_parser_process ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABzAQAAUUpTTkVUX0xJQl9GT1JNX1BBUlNFUl9ICiAgZm9ybV9wYXJzZXIKICBsd3Nfc3BhX2NyZWF0ZV9pbmZvCiAgbHdzX3NwYQogIGx3c2FjCiAgc29ja2V0CiAgZm9ybV9wYXJzZXJfaW5pdAogIHNvY2tldAogIGZvcm1fcGFyc2VyX2FsbG9jCiAgZm9ybV9wYXJzZXJfY2xlYXIKICBmb3JtX3BhcnNlcl9jbGVhcl9ydAogIGZvcm1fcGFyc2VyX2ZyZWUKICBmb3JtX3BhcnNlcl9mcmVlX3J0CiAgZm9ybV9wYXJzZXJfcGFyYW1fbmFtZQogIGZvcm1fcGFyc2VyX3BhcmFtX3ZhbGlkCiAgZm9ybV9wYXJzZXJfcGFyYW1fY291bnQKICBmb3JtX3BhcnNlcl9wYXJhbV9pbmRleAogIGZvcm1fcGFyc2VyX3BhcmFtX2V4aXN0cwogIGZvcm1fcGFyc2VyX3Byb2Nlc3MAAAAAAAAAAFQCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1303,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/session.c",
						"symkeys":
						[
							[
								225,
								239
							],
							[
								264,
								283
							],
							[
								309,
								329
							],
							[
								363,
								383
							],
							[
								405,
								417
							],
							[
								830,
								846
							],
							[
								1356,
								1370
							],
							[
								1702,
								1718
							],
							[
								2256,
								2272
							],
							[
								2818,
								2832
							],
							[
								3015,
								3031
							]
						],
						"symlist":
						[
							"—Ⓕ– minnet_ws_data ( ) { … } — function",
							"—Ⓕ– minnet_request_data ( ) { … } — function",
							"—Ⓕ– minnet_response_data ( ) { … } — function",
							"—Ⓕ– minnet_response_data ( ) { … } — function",
							"—Ⓕ– session_zero ( ) { … } — function",
							"—Ⓕ– session_clear_rt ( ) { … } — function",
							"—Ⓕ– session_object ( ) { … } — function",
							"—Ⓕ– session_writable ( ) { … } — function",
							"—Ⓕ– session_callback ( ) { … } — function",
							"—Ⓕ– session_opaque ( ) { … } — function",
							"—Ⓕ– session_response ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADWAgAA4oCU4pK74oCTIGZvcm1fcGFyc2VyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX2FsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfY2xlYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9jbGVhcl9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9mcmVlX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfcGFyYW1fbmFtZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX3BhcmFtX3ZhbGlkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZm9ybV9wYXJzZXJfcGFyYW1fY291bnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmb3JtX3BhcnNlcl9wYXJhbV9pbmRleCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX3BhcmFtX2V4aXN0cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZvcm1fcGFyc2VyX3Byb2Nlc3MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAADOAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1304,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ringbuffer.c",
						"symkeys":
						[
							[
								215,
								241
							],
							[
								266,
								281
							],
							[
								647,
								661
							],
							[
								810,
								827
							],
							[
								1062,
								1080
							],
							[
								1312,
								1327
							],
							[
								1551,
								1566
							],
							[
								1666,
								1684
							],
							[
								1799,
								1820
							],
							[
								1893,
								1909
							],
							[
								2016,
								2031
							],
							[
								2139,
								2154
							],
							[
								2250,
								2268
							]
						],
						"symlist":
						[
							"—Ⓕ– ringbuffer_destroy_element ( ) { … } — function",
							"—Ⓕ– ringbuffer_init ( ) { … } — function",
							"—Ⓕ– ringbuffer_new ( ) { … } — function",
							"—Ⓕ– ringbuffer_insert ( ) { … } — function",
							"—Ⓕ– ringbuffer_consume ( ) { … } — function",
							"—Ⓕ– ringbuffer_skip ( ) { … } — function",
							"—Ⓕ– ringbuffer_next ( ) { … } — function",
							"—Ⓕ– ringbuffer_waiting ( ) { … } — function",
							"—Ⓕ– ringbuffer_bytelength ( ) { … } — function",
							"—Ⓕ– ringbuffer_avail ( ) { … } — function",
							"—Ⓕ– ringbuffer_zero ( ) { … } — function",
							"—Ⓕ– ringbuffer_free ( ) { … } — function",
							"—Ⓕ– ringbuffer_free_rt ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA8AgAA4oCU4pK74oCTIG1pbm5ldF93c19kYXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3JlcXVlc3RfZGF0YSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9yZXNwb25zZV9kYXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3Jlc3BvbnNlX2RhdGEgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXNzaW9uX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXNzaW9uX2NsZWFyX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2Vzc2lvbl9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXNzaW9uX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2Vzc2lvbl9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlc3Npb25fb3BhcXVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2Vzc2lvbl9yZXNwb25zZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAADACAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1305,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/utils.h",
						"symkeys":
						[
							[
								35,
								53
							],
							[
								256,
								263
							],
							[
								264,
								274
							],
							[
								294,
								300
							],
							[
								315,
								322
							],
							[
								323,
								336
							],
							[
								370,
								376
							],
							[
								377,
								390
							],
							[
								452,
								464
							],
							[
								587,
								599
							],
							[
								639,
								651
							],
							[
								652,
								662
							],
							[
								729,
								732
							],
							[
								771,
								774
							],
							[
								814,
								816
							],
							[
								847,
								849
							],
							[
								880,
								883
							],
							[
								914,
								917
							],
							[
								948,
								950
							],
							[
								970,
								977
							],
							[
								1018,
								1025
							],
							[
								1053,
								1061
							],
							[
								1116,
								1124
							],
							[
								1160,
								1169
							],
							[
								1221,
								1230
							],
							[
								1263,
								1272
							],
							[
								1321,
								1331
							],
							[
								1378,
								1388
							],
							[
								1468,
								1476
							],
							[
								1634,
								1644
							],
							[
								1767,
								1782
							],
							[
								1812,
								1830
							],
							[
								1860,
								1868
							],
							[
								1898,
								1911
							],
							[
								1941,
								1958
							],
							[
								2001,
								2021
							],
							[
								2065,
								2078
							],
							[
								2112,
								2126
							],
							[
								2160,
								2182
							],
							[
								2222,
								2230
							],
							[
								2264,
								2279
							],
							[
								2292,
								2306
							],
							[
								2334,
								2342
							],
							[
								2379,
								2388
							],
							[
								2459,
								2470
							],
							[
								2565,
								2578
							],
							[
								2655,
								2667
							],
							[
								2731,
								2740
							],
							[
								2748,
								2757
							]
						],
						"symlist":
						[
							"QJSNET_LIB_UTILS_H",
							"VISIBLE",
							"__declspec",
							"HIDDEN",
							"VISIBLE",
							"__attribute__",
							"HIDDEN",
							"__attribute__",
							"THREAD_LOCAL",
							"THREAD_LOCAL",
							"THREAD_LOCAL",
							"__declspec",
							"MAX",
							"MIN",
							"FG",
							"BG",
							"FGC",
							"BGC",
							"NC",
							"countof",
							"str_chr",
							"str_chrs",
							"byte_chr",
							"byte_chrs",
							"byte_rchr",
							"byte_diff",
							"byte_equal",
							"byte_findb",
							"str_ndup",
							"byte_finds",
							"scan_whitenskip",
							"scan_nonwhitenskip",
							"scan_eol",
							"scan_nextline",
							"scan_charsetnskip",
							"scan_noncharsetnskip",
							"skip_brackets",
							"skip_directory",
							"strip_trailing_newline",
							"uint_pow",
							"socket_geterror",
							"socket_address",
							"sockaddr",
							"has_query",
							"has_query_b",
							"socket_remote",
							"socket_local",
							"list_size",
							"list_head"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACyAgAA4oCU4pK74oCTIHJpbmdidWZmZXJfZGVzdHJveV9lbGVtZW50ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmluZ2J1ZmZlcl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2luc2VydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfY29uc3VtZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfc2tpcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfbmV4dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfd2FpdGluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfYnl0ZWxlbmd0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJpbmdidWZmZXJfYXZhaWwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByaW5nYnVmZmVyX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAABbAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1306,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/utils.c",
						"symkeys":
						[
							[
								27,
								34
							],
							[
								179,
								187
							],
							[
								448,
								456
							],
							[
								624,
								633
							],
							[
								860,
								869
							],
							[
								1057,
								1066
							],
							[
								1265,
								1275
							],
							[
								1362,
								1372
							],
							[
								1676,
								1691
							],
							[
								1836,
								1854
							],
							[
								2000,
								2008
							],
							[
								2164,
								2177
							],
							[
								2299,
								2316
							],
							[
								2574,
								2594
							],
							[
								2853,
								2866
							],
							[
								3200,
								3214
							],
							[
								3437,
								3459
							],
							[
								3631,
								3639
							],
							[
								3855,
								3864
							]
						],
						"symlist":
						[
							"—Ⓕ– str_chr ( ) { … } — function",
							"—Ⓕ– str_chrs ( ) { … } — function",
							"—Ⓕ– byte_chr ( ) { … } — function",
							"—Ⓕ– byte_chrs ( ) { … } — function",
							"—Ⓕ– byte_rchr ( ) { … } — function",
							"—Ⓕ– byte_diff ( ) { … } — function",
							"—Ⓕ– byte_equal ( ) { … } — function",
							"—Ⓕ– byte_findb ( ) { … } — function",
							"—Ⓕ– scan_whitenskip ( ) { … } — function",
							"—Ⓕ– scan_nonwhitenskip ( ) { … } — function",
							"—Ⓕ– scan_eol ( ) { … } — function",
							"—Ⓕ– scan_nextline ( ) { … } — function",
							"—Ⓕ– scan_charsetnskip ( ) { … } — function",
							"—Ⓕ– scan_noncharsetnskip ( ) { … } — function",
							"—Ⓕ– skip_brackets ( ) { … } — function",
							"—Ⓕ– skip_directory ( ) { … } — function",
							"—Ⓕ– strip_trailing_newline ( ) { … } — function",
							"—Ⓕ– uint_pow ( ) { … } — function",
							"—Ⓕ– list_size ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABbAgAAUUpTTkVUX0xJQl9VVElMU19IClZJU0lCTEUKICBfX2RlY2xzcGVjCkhJRERFTgpWSVNJQkxFCiAgX19hdHRyaWJ1dGVfXwpISURERU4KICBfX2F0dHJpYnV0ZV9fClRIUkVBRF9MT0NBTApUSFJFQURfTE9DQUwKVEhSRUFEX0xPQ0FMCiAgX19kZWNsc3BlYwpNQVgKTUlOCkZHCkJHCkZHQwpCR0MKTkMKICBjb3VudG9mCiAgc3RyX2NocgogIHN0cl9jaHJzCiAgYnl0ZV9jaHIKICBieXRlX2NocnMKICBieXRlX3JjaHIKICBieXRlX2RpZmYKICBieXRlX2VxdWFsCiAgYnl0ZV9maW5kYgogIHN0cl9uZHVwCiAgYnl0ZV9maW5kcwogIHNjYW5fd2hpdGVuc2tpcAogIHNjYW5fbm9ud2hpdGVuc2tpcAogIHNjYW5fZW9sCiAgc2Nhbl9uZXh0bGluZQogIHNjYW5fY2hhcnNldG5za2lwCiAgc2Nhbl9ub25jaGFyc2V0bnNraXAKICBza2lwX2JyYWNrZXRzCiAgc2tpcF9kaXJlY3RvcnkKICBzdHJpcF90cmFpbGluZ19uZXdsaW5lCiAgdWludF9wb3cKICBzb2NrZXRfZ2V0ZXJyb3IKICBzb2NrZXRfYWRkcmVzcwogIHNvY2thZGRyCiAgaGFzX3F1ZXJ5CiAgaGFzX3F1ZXJ5X2IKICBzb2NrZXRfcmVtb3RlCiAgc29ja2V0X2xvY2FsCiAgbGlzdF9zaXplCiAgbGlzdF9oZWFkAAAAAAAAAADQAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1307,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ws.c",
						"symkeys":
						[
							[
								206,
								212
							],
							[
								593,
								604
							],
							[
								1027,
								1035
							],
							[
								1120,
								1130
							],
							[
								1257,
								1264
							],
							[
								1398,
								1404
							],
							[
								1472,
								1482
							],
							[
								1824,
								1831
							]
						],
						"symlist":
						[
							"—Ⓕ– ws_new ( ) { … } — function",
							"—Ⓕ– ws_clear_rt ( ) { … } — function",
							"—Ⓕ– ws_clear ( ) { … } — function",
							"—Ⓕ– ws_free_rt ( ) { … } — function",
							"—Ⓕ– ws_free ( ) { … } — function",
							"—Ⓕ– ws_dup ( ) { … } — function",
							"—Ⓕ– ws_enqueue ( ) { … } — function",
							"—Ⓕ– ws_send ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACOAwAA4oCU4pK74oCTIHN0cl9jaHIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzdHJfY2hycyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ5dGVfY2hyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnl0ZV9jaHJzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnl0ZV9yY2hyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnl0ZV9kaWZmICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgYnl0ZV9lcXVhbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ5dGVfZmluZGIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzY2FuX3doaXRlbnNraXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzY2FuX25vbndoaXRlbnNraXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzY2FuX2VvbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNjYW5fbmV4dGxpbmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzY2FuX2NoYXJzZXRuc2tpcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNjYW5fbm9uY2hhcnNldG5za2lwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2tpcF9icmFja2V0cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNraXBfZGlyZWN0b3J5ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc3RyaXBfdHJhaWxpbmdfbmV3bGluZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVpbnRfcG93ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbGlzdF9zaXplICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAEAEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1308,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ws.h",
						"symkeys":
						[
							[
								32,
								47
							],
							[
								328,
								331
							],
							[
								340,
								352
							],
							[
								361,
								374
							],
							[
								384,
								390
							],
							[
								419,
								422
							],
							[
								441,
								447
							],
							[
								449,
								455
							],
							[
								463,
								466
							],
							[
								491,
								502
							],
							[
								510,
								516
							],
							[
								540,
								548
							],
							[
								556,
								562
							],
							[
								587,
								597
							],
							[
								605,
								611
							],
							[
								635,
								642
							],
							[
								650,
								656
							],
							[
								683,
								689
							],
							[
								691,
								697
							],
							[
								705,
								711
							],
							[
								726,
								736
							],
							[
								744,
								750
							],
							[
								776,
								783
							],
							[
								791,
								797
							],
							[
								870,
								882
							],
							[
								884,
								895
							],
							[
								903,
								906
							],
							[
								924,
								944
							],
							[
								1064,
								1084
							],
							[
								1086,
								1095
							],
							[
								1103,
								1109
							],
							[
								1201,
								1213
							],
							[
								1215,
								1225
							],
							[
								1233,
								1239
							],
							[
								1318,
								1324
							],
							[
								1326,
								1337
							],
							[
								1345,
								1348
							],
							[
								1366,
								1386
							]
						],
						"symlist":
						[
							"QJSNET_LIB_WS_H",
							"lws",
							"http_request",
							"http_response",
							"socket",
							"lws",
							"socket",
							" ws_new",
							"lws",
							" ws_clear_rt",
							"socket",
							" ws_clear",
							"socket",
							" ws_free_rt",
							"socket",
							" ws_free",
							"socket",
							"socket",
							" ws_dup",
							"socket",
							" ws_enqueue",
							"socket",
							" ws_send",
							"socket",
							"session_data",
							" lws_session",
							"lws",
							"wsi_opaque_user_data",
							"wsi_opaque_user_data",
							" ws_opaque",
							"socket",
							"session_data",
							" ws_session",
							"socket",
							"socket",
							" ws_from_wsi",
							"lws",
							"wsi_opaque_user_data"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgAQAA4oCU4pK74oCTIHdzX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2NsZWFyX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2xlYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19mcmVlX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2R1cCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2VucXVldWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19zZW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAsgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1309,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ws.c",
						"symkeys":
						[
							[
								206,
								212
							],
							[
								593,
								604
							],
							[
								1027,
								1035
							],
							[
								1120,
								1130
							],
							[
								1257,
								1264
							],
							[
								1398,
								1404
							],
							[
								1472,
								1482
							],
							[
								1824,
								1831
							]
						],
						"symlist":
						[
							"—Ⓕ– ws_new ( ) { … } — function",
							"—Ⓕ– ws_clear_rt ( ) { … } — function",
							"—Ⓕ– ws_clear ( ) { … } — function",
							"—Ⓕ– ws_free_rt ( ) { … } — function",
							"—Ⓕ– ws_free ( ) { … } — function",
							"—Ⓕ– ws_dup ( ) { … } — function",
							"—Ⓕ– ws_enqueue ( ) { … } — function",
							"—Ⓕ– ws_send ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACyAQAAUUpTTkVUX0xJQl9XU19ICiAgbHdzCiAgaHR0cF9yZXF1ZXN0CiAgaHR0cF9yZXNwb25zZQogIHNvY2tldAogIGx3cwogIHNvY2tldAogIHdzX25ldwogIGx3cwogIHdzX2NsZWFyX3J0CiAgc29ja2V0CiAgd3NfY2xlYXIKICBzb2NrZXQKICB3c19mcmVlX3J0CiAgc29ja2V0CiAgd3NfZnJlZQogIHNvY2tldAogIHNvY2tldAogIHdzX2R1cAogIHNvY2tldAogIHdzX2VucXVldWUKICBzb2NrZXQKICB3c19zZW5kCiAgc29ja2V0CiAgc2Vzc2lvbl9kYXRhCiAgbHdzX3Nlc3Npb24KICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgd3Nfb3BhcXVlCiAgc29ja2V0CiAgc2Vzc2lvbl9kYXRhCiAgd3Nfc2Vzc2lvbgogIHNvY2tldAogIHNvY2tldAogIHdzX2Zyb21fd3NpCiAgbHdzCiAgd3NpX29wYXF1ZV91c2VyX2RhdGEAAAAAAAAAABABAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1310,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ws.h",
						"symkeys":
						[
							[
								32,
								47
							],
							[
								328,
								331
							],
							[
								340,
								352
							],
							[
								361,
								374
							],
							[
								384,
								390
							],
							[
								419,
								422
							],
							[
								441,
								447
							],
							[
								449,
								455
							],
							[
								463,
								466
							],
							[
								491,
								502
							],
							[
								510,
								516
							],
							[
								540,
								548
							],
							[
								556,
								562
							],
							[
								587,
								597
							],
							[
								605,
								611
							],
							[
								635,
								642
							],
							[
								650,
								656
							],
							[
								683,
								689
							],
							[
								691,
								697
							],
							[
								705,
								711
							],
							[
								726,
								736
							],
							[
								744,
								750
							],
							[
								776,
								783
							],
							[
								791,
								797
							],
							[
								870,
								882
							],
							[
								884,
								895
							],
							[
								903,
								906
							],
							[
								924,
								944
							],
							[
								1064,
								1084
							],
							[
								1086,
								1095
							],
							[
								1103,
								1109
							],
							[
								1201,
								1213
							],
							[
								1215,
								1225
							],
							[
								1233,
								1239
							],
							[
								1318,
								1324
							],
							[
								1326,
								1337
							],
							[
								1345,
								1348
							],
							[
								1366,
								1386
							]
						],
						"symlist":
						[
							"QJSNET_LIB_WS_H",
							"lws",
							"http_request",
							"http_response",
							"socket",
							"lws",
							"socket",
							" ws_new",
							"lws",
							" ws_clear_rt",
							"socket",
							" ws_clear",
							"socket",
							" ws_free_rt",
							"socket",
							" ws_free",
							"socket",
							"socket",
							" ws_dup",
							"socket",
							" ws_enqueue",
							"socket",
							" ws_send",
							"socket",
							"session_data",
							" lws_session",
							"lws",
							"wsi_opaque_user_data",
							"wsi_opaque_user_data",
							" ws_opaque",
							"socket",
							"session_data",
							" ws_session",
							"socket",
							"socket",
							" ws_from_wsi",
							"lws",
							"wsi_opaque_user_data"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgAQAA4oCU4pK74oCTIHdzX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2NsZWFyX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2xlYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19mcmVlX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2R1cCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2VucXVldWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19zZW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAsgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1311,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ws.c",
						"symkeys":
						[
							[
								206,
								212
							],
							[
								593,
								604
							],
							[
								1027,
								1035
							],
							[
								1120,
								1130
							],
							[
								1257,
								1264
							],
							[
								1398,
								1404
							],
							[
								1472,
								1482
							],
							[
								1824,
								1831
							]
						],
						"symlist":
						[
							"—Ⓕ– ws_new ( ) { … } — function",
							"—Ⓕ– ws_clear_rt ( ) { … } — function",
							"—Ⓕ– ws_clear ( ) { … } — function",
							"—Ⓕ– ws_free_rt ( ) { … } — function",
							"—Ⓕ– ws_free ( ) { … } — function",
							"—Ⓕ– ws_dup ( ) { … } — function",
							"—Ⓕ– ws_enqueue ( ) { … } — function",
							"—Ⓕ– ws_send ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACyAQAAUUpTTkVUX0xJQl9XU19ICiAgbHdzCiAgaHR0cF9yZXF1ZXN0CiAgaHR0cF9yZXNwb25zZQogIHNvY2tldAogIGx3cwogIHNvY2tldAogIHdzX25ldwogIGx3cwogIHdzX2NsZWFyX3J0CiAgc29ja2V0CiAgd3NfY2xlYXIKICBzb2NrZXQKICB3c19mcmVlX3J0CiAgc29ja2V0CiAgd3NfZnJlZQogIHNvY2tldAogIHNvY2tldAogIHdzX2R1cAogIHNvY2tldAogIHdzX2VucXVldWUKICBzb2NrZXQKICB3c19zZW5kCiAgc29ja2V0CiAgc2Vzc2lvbl9kYXRhCiAgbHdzX3Nlc3Npb24KICBsd3MKICB3c2lfb3BhcXVlX3VzZXJfZGF0YQogIHdzaV9vcGFxdWVfdXNlcl9kYXRhCiAgd3Nfb3BhcXVlCiAgc29ja2V0CiAgc2Vzc2lvbl9kYXRhCiAgd3Nfc2Vzc2lvbgogIHNvY2tldAogIHNvY2tldAogIHdzX2Zyb21fd3NpCiAgbHdzCiAgd3NpX29wYXF1ZV91c2VyX2RhdGEAAAAAAAAAABABAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1312,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/url.h",
						"symkeys":
						[
							[
								33,
								49
							],
							[
								259,
								276
							],
							[
								328,
								343
							],
							[
								370,
								385
							],
							[
								411,
								432
							],
							[
								454,
								469
							],
							[
								502,
								505
							],
							[
								598,
								606
							],
							[
								621,
								624
							],
							[
								659,
								674
							],
							[
								703,
								718
							],
							[
								749,
								770
							],
							[
								801,
								816
							],
							[
								848,
								856
							],
							[
								962,
								971
							],
							[
								1024,
								1033
							],
							[
								1084,
								1094
							],
							[
								1137,
								1145
							],
							[
								1188,
								1198
							],
							[
								1225,
								1233
							],
							[
								1271,
								1282
							],
							[
								1319,
								1335
							],
							[
								1376,
								1392
							],
							[
								1460,
								1477
							],
							[
								1546,
								1554
							],
							[
								1573,
								1596
							],
							[
								1619,
								1628
							],
							[
								1655,
								1665
							],
							[
								1707,
								1715
							],
							[
								1742,
								1753
							],
							[
								1809,
								1822
							],
							[
								1880,
								1891
							],
							[
								1905,
								1908
							],
							[
								1946,
								1953
							],
							[
								1981,
								1991
							],
							[
								2047,
								2055
							],
							[
								2069,
								2072
							],
							[
								2121,
								2130
							],
							[
								2144,
								2147
							],
							[
								2217,
								2229
							],
							[
								2243,
								2246
							],
							[
								2316,
								2326
							],
							[
								2340,
								2343
							],
							[
								2455,
								2458
							],
							[
								2460,
								2467
							],
							[
								2475,
								2478
							],
							[
								2545,
								2548
							],
							[
								2549,
								2558
							],
							[
								2566,
								2569
							],
							[
								2610,
								2613
							],
							[
								2831,
								2839
							],
							[
								2847,
								2850
							],
							[
								2870,
								2873
							],
							[
								3100,
								3110
							],
							[
								3118,
								3121
							],
							[
								3235,
								3247
							],
							[
								3255,
								3258
							],
							[
								3380,
								3393
							],
							[
								3401,
								3404
							]
						],
						"symlist":
						[
							"QJSNET_LIB_URL_H",
							"URL_IS_VALID_PORT",
							"protocol_number",
							"protocol_string",
							"protocol_default_port",
							"protocol_is_tls",
							"url",
							"URL_INIT",
							"url",
							"protocol_number",
							"protocol_string",
							"protocol_default_port",
							"protocol_is_tls",
							"url_init",
							"url_parse",
							"url_print",
							"url_format",
							"url_host",
							"url_length",
							"url_free",
							"url_free_rt",
							"url_set_protocol",
							"url_set_path_len",
							"url_set_query_len",
							"url_info",
							"lws_client_connect_info",
							"url_query",
							"url_search",
							"url_hash",
							"url_fromobj",
							"url_fromvalue",
							"url_fromwsi",
							"lws",
							"url_new",
							"url_object",
							"url_path",
							"url",
							"url_valid",
							"url",
							"url_protocol",
							"url",
							"url_is_tls",
							"url",
							"url",
							" url_dup",
							"url",
							"url",
							" url_clone",
							"url",
							"url",
							"url_copy",
							"url",
							"url",
							"url_string",
							"url",
							"url_set_path",
							"url",
							"url_set_query",
							"url"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgAQAA4oCU4pK74oCTIHdzX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2NsZWFyX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfY2xlYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19mcmVlX3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgd3NfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2R1cCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdzX2VucXVldWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB3c19zZW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAA1AIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1313,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/response.h",
						"symkeys":
						[
							[
								38,
								59
							],
							[
								193,
								205
							],
							[
								223,
								236
							],
							[
								434,
								447
							],
							[
								545,
								557
							],
							[
								575,
								589
							],
							[
								622,
								635
							],
							[
								673,
								685
							],
							[
								725,
								743
							],
							[
								751,
								764
							],
							[
								891,
								904
							],
							[
								906,
								918
							]
						],
						"symlist":
						[
							"QJSNET_LIB_RESPONSE_H",
							"session_data",
							"http_response",
							"response_init",
							"response_dup",
							"response_clear",
							"response_free",
							"response_new",
							"response_generator",
							"http_response",
							"http_response",
							" response_new"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADUAgAAUUpTTkVUX0xJQl9VUkxfSApVUkxfSVNfVkFMSURfUE9SVAogIHByb3RvY29sX251bWJlcgogIHByb3RvY29sX3N0cmluZwogIHByb3RvY29sX2RlZmF1bHRfcG9ydAogIHByb3RvY29sX2lzX3RscwogIHVybApVUkxfSU5JVAogIHVybAogIHByb3RvY29sX251bWJlcgogIHByb3RvY29sX3N0cmluZwogIHByb3RvY29sX2RlZmF1bHRfcG9ydAogIHByb3RvY29sX2lzX3RscwogIHVybF9pbml0CiAgdXJsX3BhcnNlCiAgdXJsX3ByaW50CiAgdXJsX2Zvcm1hdAogIHVybF9ob3N0CiAgdXJsX2xlbmd0aAogIHVybF9mcmVlCiAgdXJsX2ZyZWVfcnQKICB1cmxfc2V0X3Byb3RvY29sCiAgdXJsX3NldF9wYXRoX2xlbgogIHVybF9zZXRfcXVlcnlfbGVuCiAgdXJsX2luZm8KICBsd3NfY2xpZW50X2Nvbm5lY3RfaW5mbwogIHVybF9xdWVyeQogIHVybF9zZWFyY2gKICB1cmxfaGFzaAogIHVybF9mcm9tb2JqCiAgdXJsX2Zyb212YWx1ZQogIHVybF9mcm9td3NpCiAgbHdzCiAgdXJsX25ldwogIHVybF9vYmplY3QKICB1cmxfcGF0aAogIHVybAogIHVybF92YWxpZAogIHVybAogIHVybF9wcm90b2NvbAogIHVybAogIHVybF9pc190bHMKICB1cmwKICB1cmwKICB1cmxfZHVwCiAgdXJsCiAgdXJsCiAgdXJsX2Nsb25lCiAgdXJsCiAgdXJsCiAgdXJsX2NvcHkKICB1cmwKICB1cmwKICB1cmxfc3RyaW5nCiAgdXJsCiAgdXJsX3NldF9wYXRoCiAgdXJsCiAgdXJsX3NldF9xdWVyeQogIHVybAAAAAAAAAAAxwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1314,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/request.h",
						"symkeys":
						[
							[
								37,
								57
							],
							[
								155,
								168
							],
							[
								192,
								205
							],
							[
								236,
								248
							],
							[
								413,
								426
							],
							[
								450,
								463
							],
							[
								484,
								496
							],
							[
								551,
								564
							],
							[
								587,
								598
							],
							[
								649,
								660
							],
							[
								681,
								696
							],
							[
								704,
								707
							],
							[
								732,
								745
							],
							[
								777,
								789
							],
							[
								825,
								837
							],
							[
								908,
								919
							]
						],
						"symlist":
						[
							"QJSNET_LIB_REQUEST_H",
							"method_string",
							"method_number",
							"http_request",
							"method_string",
							"method_number",
							"request_init",
							"request_alloc",
							"request_new",
							"request_dup",
							"request_fromwsi",
							"lws",
							"request_clear",
							"request_free",
							"request_from",
							"method_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADHAAAAUUpTTkVUX0xJQl9SRVNQT05TRV9ICiAgc2Vzc2lvbl9kYXRhCiAgaHR0cF9yZXNwb25zZQogIHJlc3BvbnNlX2luaXQKICByZXNwb25zZV9kdXAKICByZXNwb25zZV9jbGVhcgogIHJlc3BvbnNlX2ZyZWUKICByZXNwb25zZV9uZXcKICByZXNwb25zZV9nZW5lcmF0b3IKICBodHRwX3Jlc3BvbnNlCiAgaHR0cF9yZXNwb25zZQogIHJlc3BvbnNlX25ldwAAAAAAAAAA8gAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1315,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/request.c",
						"symkeys":
						[
							[
								8,
								19
							],
							[
								213,
								232
							],
							[
								412,
								425
							],
							[
								537,
								550
							],
							[
								727,
								739
							],
							[
								974,
								987
							],
							[
								1113,
								1124
							],
							[
								1284,
								1295
							],
							[
								1358,
								1373
							],
							[
								1675,
								1688
							],
							[
								1905,
								1917
							],
							[
								2048,
								2060
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							"—Ⓕ– minnet_request_data ( ) { … } — function",
							"—Ⓕ– method_string ( ) { … } — function",
							"—Ⓕ– method_number ( ) { … } — function",
							"—Ⓕ– request_init ( ) { … } — function",
							"—Ⓕ– request_alloc ( ) { … } — function",
							"—Ⓕ– request_new ( ) { … } — function",
							"—Ⓕ– request_dup ( ) { … } — function",
							"—Ⓕ– request_fromwsi ( ) { … } — function",
							"—Ⓕ– request_clear ( ) { … } — function",
							"—Ⓕ– request_free ( ) { … } — function",
							"—Ⓕ– request_from ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyAAAAUUpTTkVUX0xJQl9SRVFVRVNUX0gKICBtZXRob2Rfc3RyaW5nCiAgbWV0aG9kX251bWJlcgogIGh0dHBfcmVxdWVzdAogIG1ldGhvZF9zdHJpbmcKICBtZXRob2RfbnVtYmVyCiAgcmVxdWVzdF9pbml0CiAgcmVxdWVzdF9hbGxvYwogIHJlcXVlc3RfbmV3CiAgcmVxdWVzdF9kdXAKICByZXF1ZXN0X2Zyb213c2kKICBsd3MKICByZXF1ZXN0X2NsZWFyCiAgcmVxdWVzdF9mcmVlCiAgcmVxdWVzdF9mcm9tCiAgbWV0aG9kX25hbWUAAAAAAAAAAM8BAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1320,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABDAgAAICDik4IgIF9HTlVfU09VUkNFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBtaW5uZXRfcmVxdWVzdF9kYXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWV0aG9kX3N0cmluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1ldGhvZF9udW1iZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2FsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVxdWVzdF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2R1cCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfZnJvbXdzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlcXVlc3RfY2xlYXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyByZXF1ZXN0X2Zyb20gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QAAAAAAAAD9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					1321,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1322,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-form-parser.c",
						"symkeys":
						[
							[
								8,
								19
							],
							[
								497,
								527
							],
							[
								2846,
								2868
							],
							[
								3837,
								3859
							],
							[
								5308,
								5336
							],
							[
								5481,
								5516
							],
							[
								6758,
								6799
							],
							[
								7354,
								7385
							],
							[
								7866,
								7897
							],
							[
								8845,
								8883
							],
							[
								9356,
								9379
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							"—Ⓕ– minnet_form_parser_constructor ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_get ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_set ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_finalizer ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_get_own_property ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_get_own_property_names ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_has_property ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_get_property ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_define_own_property ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_call ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAUgIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1323,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-form-parser.c",
						"symkeys":
						[
							[
								8,
								19
							],
							[
								497,
								527
							],
							[
								2851,
								2873
							],
							[
								3842,
								3864
							],
							[
								5313,
								5341
							],
							[
								5486,
								5521
							],
							[
								6763,
								6804
							],
							[
								7359,
								7390
							],
							[
								7871,
								7902
							],
							[
								8850,
								8888
							],
							[
								9361,
								9384
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							"—Ⓕ– minnet_form_parser_constructor ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_get ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_set ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_finalizer ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_get_own_property ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_get_own_property_names ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_has_property ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_get_property ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_define_own_property ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_call ( ) { … } — function"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC8AgAAICDik4IgIF9HTlVfU09VUkNFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2Zvcm1fcGFyc2VyX3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfZ2V0X293bl9wcm9wZXJ0eSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9nZXRfb3duX3Byb3BlcnR5X25hbWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2Zvcm1fcGFyc2VyX2hhc19wcm9wZXJ0eSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9nZXRfcHJvcGVydHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfZGVmaW5lX293bl9wcm9wZXJ0eSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9jYWxsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAUgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALwCAAAgIOKTgiAgX0dOVV9TT1VSQ0Ug4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9jb25zdHJ1Y3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9nZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfc2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2Zvcm1fcGFyc2VyX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9nZXRfb3duX3Byb3BlcnR5ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2Zvcm1fcGFyc2VyX2dldF9vd25fcHJvcGVydHlfbmFtZXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfaGFzX3Byb3BlcnR5ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2Zvcm1fcGFyc2VyX2dldF9wcm9wZXJ0eSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9kZWZpbmVfb3duX3Byb3BlcnR5ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2Zvcm1fcGFyc2VyX2NhbGwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAABSAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1324,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC8AgAAICDik4IgIF9HTlVfU09VUkNFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2Zvcm1fcGFyc2VyX3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfZ2V0X293bl9wcm9wZXJ0eSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9nZXRfb3duX3Byb3BlcnR5X25hbWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2Zvcm1fcGFyc2VyX2hhc19wcm9wZXJ0eSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9nZXRfcHJvcGVydHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfZGVmaW5lX293bl9wcm9wZXJ0eSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9jYWxsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1325,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-form-parser.c",
						"symkeys":
						[
							[
								8,
								19
							],
							[
								497,
								527
							],
							[
								2851,
								2873
							],
							[
								3842,
								3864
							],
							[
								5313,
								5341
							],
							[
								5486,
								5521
							],
							[
								6763,
								6804
							],
							[
								7359,
								7390
							],
							[
								7871,
								7902
							],
							[
								8850,
								8888
							],
							[
								9361,
								9384
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							"—Ⓕ– minnet_form_parser_constructor ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_get ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_set ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_finalizer ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_get_own_property ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_get_own_property_names ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_has_property ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_get_property ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_define_own_property ( ) { … } — function",
							"—Ⓕ– minnet_form_parser_call ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAUgIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1326,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC8AgAAICDik4IgIF9HTlVfU09VUkNFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2Zvcm1fcGFyc2VyX3NldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfZ2V0X293bl9wcm9wZXJ0eSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9nZXRfb3duX3Byb3BlcnR5X25hbWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2Zvcm1fcGFyc2VyX2hhc19wcm9wZXJ0eSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9nZXRfcHJvcGVydHkgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZm9ybV9wYXJzZXJfZGVmaW5lX293bl9wcm9wZXJ0eSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mb3JtX3BhcnNlcl9jYWxsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1327,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/request.h",
						"symkeys":
						[
							[
								37,
								57
							],
							[
								155,
								168
							],
							[
								192,
								205
							],
							[
								236,
								248
							],
							[
								413,
								426
							],
							[
								450,
								463
							],
							[
								484,
								496
							],
							[
								551,
								564
							],
							[
								587,
								598
							],
							[
								649,
								660
							],
							[
								681,
								696
							],
							[
								704,
								707
							],
							[
								732,
								745
							],
							[
								777,
								789
							],
							[
								825,
								837
							],
							[
								908,
								919
							]
						],
						"symlist":
						[
							"QJSNET_LIB_REQUEST_H",
							"method_string",
							"method_number",
							"http_request",
							"method_string",
							"method_number",
							"request_init",
							"request_alloc",
							"request_new",
							"request_dup",
							"request_fromwsi",
							"lws",
							"request_clear",
							"request_free",
							"request_from",
							"method_name"
						]
					},
					"AQAAAAAAAAAAAAAA8gAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1328,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyAAAAUUpTTkVUX0xJQl9SRVFVRVNUX0gKICBtZXRob2Rfc3RyaW5nCiAgbWV0aG9kX251bWJlcgogIGh0dHBfcmVxdWVzdAogIG1ldGhvZF9zdHJpbmcKICBtZXRob2RfbnVtYmVyCiAgcmVxdWVzdF9pbml0CiAgcmVxdWVzdF9hbGxvYwogIHJlcXVlc3RfbmV3CiAgcmVxdWVzdF9kdXAKICByZXF1ZXN0X2Zyb213c2kKICBsd3MKICByZXF1ZXN0X2NsZWFyCiAgcmVxdWVzdF9mcmVlCiAgcmVxdWVzdF9mcm9tCiAgbWV0aG9kX25hbWUAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1329,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1330,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1331,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1332,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1333,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1334,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1335,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1336,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/request.h",
						"symkeys":
						[
							[
								37,
								57
							],
							[
								155,
								168
							],
							[
								192,
								205
							],
							[
								236,
								248
							],
							[
								413,
								426
							],
							[
								450,
								463
							],
							[
								484,
								496
							],
							[
								551,
								564
							],
							[
								587,
								598
							],
							[
								649,
								660
							],
							[
								681,
								696
							],
							[
								704,
								707
							],
							[
								732,
								745
							],
							[
								763,
								775
							],
							[
								811,
								823
							],
							[
								894,
								905
							]
						],
						"symlist":
						[
							"QJSNET_LIB_REQUEST_H",
							"method_string",
							"method_number",
							"http_request",
							"method_string",
							"method_number",
							"request_init",
							"request_alloc",
							"request_new",
							"request_dup",
							"request_fromwsi",
							"lws",
							"request_clear",
							"request_free",
							"request_from",
							"method_name"
						]
					},
					"AQAAAAAAAAAAAAAA8gAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1337,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyAAAAUUpTTkVUX0xJQl9SRVFVRVNUX0gKICBtZXRob2Rfc3RyaW5nCiAgbWV0aG9kX251bWJlcgogIGh0dHBfcmVxdWVzdAogIG1ldGhvZF9zdHJpbmcKICBtZXRob2RfbnVtYmVyCiAgcmVxdWVzdF9pbml0CiAgcmVxdWVzdF9hbGxvYwogIHJlcXVlc3RfbmV3CiAgcmVxdWVzdF9kdXAKICByZXF1ZXN0X2Zyb213c2kKICBsd3MKICByZXF1ZXN0X2NsZWFyCiAgcmVxdWVzdF9mcmVlCiAgcmVxdWVzdF9mcm9tCiAgbWV0aG9kX25hbWUAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1338,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/response.c",
						"symkeys":
						[
							[
								136,
								156
							],
							[
								178,
								191
							],
							[
								532,
								544
							],
							[
								607,
								621
							],
							[
								847,
								860
							],
							[
								998,
								1010
							]
						],
						"symlist":
						[
							"—Ⓕ– minnet_response_data ( ) { … } — function",
							"—Ⓕ– response_init ( ) { … } — function",
							"—Ⓕ– response_dup ( ) { … } — function",
							"—Ⓕ– response_clear ( ) { … } — function",
							"—Ⓕ– response_free ( ) { … } — function",
							"—Ⓕ– response_new ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAA7wAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1339,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArAQAA4oCU4pK74oCTIG1pbm5ldF9yZXNwb25zZV9kYXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVzcG9uc2VfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlc3BvbnNlX2R1cCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlc3BvbnNlX2NsZWFyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVzcG9uc2VfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlc3BvbnNlX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1340,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1341,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1342,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
						"symkeys":
						[
							[
								571,
								589
							],
							[
								1639,
								1681
							],
							[
								2668,
								2695
							],
							[
								3145,
								3178
							],
							[
								3443,
								3463
							],
							[
								3792,
								3815
							],
							[
								4033,
								4065
							],
							[
								4218,
								4241
							],
							[
								4304,
								4329
							],
							[
								4390,
								4411
							],
							[
								4543,
								4566
							]
						],
						"symlist":
						[
							"log = (...args) =>",
							" function MakeCert(sslCert, sslPrivateKey)",
							" (level, message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onConnect: (ws, req) =>",
							"onClose: (ws, status, reason) =>",
							"onError: (ws, error) =>",
							"onHttp: (ws, req, rsp) =>",
							"onFd: (fd, rd, wr) =>",
							"onMessage: (ws, msg) =>"
						]
					},
					"AQAAAAAAAAAAAAAAJgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1343,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAQAAICBsb2cgPSAoLi4uYXJncykgPT4KTWFrZUNlcnQoc3NsQ2VydCwgc3NsUHJpdmF0ZUtleSkKICAobGV2ZWwsIG1lc3NhZ2UpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCipnZW5lcmF0b3IocmVxLCByZXMpCiAgb25Db25uZWN0OiAod3MsIHJlcSkgPT4KICBvbkNsb3NlOiAod3MsIHN0YXR1cywgcmVhc29uKSA9PgogIG9uRXJyb3I6ICh3cywgZXJyb3IpID0+CiAgb25IdHRwOiAod3MsIHJlcSwgcnNwKSA9PgogIG9uRmQ6IChmZCwgcmQsIHdyKSA9PgogIG9uTWVzc2FnZTogKHdzLCBtc2cpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1344,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								663,
								696
							],
							[
								961,
								981
							]
						],
						"symlist":
						[
							"'/404.html': function* (req, res)",
							"*generator(req, res)"
						]
					},
					"AQAAAAAAAAAAAAAANQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1345,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								633,
								666
							],
							[
								931,
								951
							]
						],
						"symlist":
						[
							"'/404.html': function* (req, res)",
							"*generator(req, res)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAADUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1346,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								573,
								606
							],
							[
								871,
								891
							]
						],
						"symlist":
						[
							"'/404.html': function* (req, res)",
							"*generator(req, res)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAADUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAADUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1347,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								560,
								593
							],
							[
								858,
								878
							]
						],
						"symlist":
						[
							"'/404.html': function* (req, res)",
							"*generator(req, res)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAADUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1348,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								560,
								593
							],
							[
								858,
								878
							]
						],
						"symlist":
						[
							"'/404.html': function* (req, res)",
							"*generator(req, res)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAADUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAADUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1349,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								560,
								593
							],
							[
								858,
								878
							]
						],
						"symlist":
						[
							"'/404.html': function* (req, res)",
							"*generator(req, res)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAADUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1350,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								560,
								593
							],
							[
								858,
								878
							]
						],
						"symlist":
						[
							"'/404.html': function* (req, res)",
							"*generator(req, res)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAADUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1351,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1352,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								560,
								593
							],
							[
								858,
								878
							]
						],
						"symlist":
						[
							"'/404.html': function* (req, res)",
							"*generator(req, res)"
						]
					},
					"AQAAAAAAAAAAAAAANQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1353,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								552,
								585
							],
							[
								850,
								870
							]
						],
						"symlist":
						[
							"'/404.html': function* (req, res)",
							"*generator(req, res)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAADUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1354,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								406,
								425
							],
							[
								598,
								631
							],
							[
								872,
								892
							]
						],
						"symlist":
						[
							" (level,message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAAEoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKAAAAICAobGV2ZWwsbWVzc2FnZSkgPT4KJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAAEoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1355,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								402,
								421
							],
							[
								594,
								627
							],
							[
								868,
								888
							]
						],
						"symlist":
						[
							" (level,message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABKAAAAICAobGV2ZWwsbWVzc2FnZSkgPT4KJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAAEoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKAAAAICAobGV2ZWwsbWVzc2FnZSkgPT4KJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAAEoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1356,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								402,
								421
							],
							[
								595,
								628
							],
							[
								869,
								889
							]
						],
						"symlist":
						[
							" (level,message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABKAAAAICAobGV2ZWwsbWVzc2FnZSkgPT4KJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAAEoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1357,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								402,
								421
							],
							[
								606,
								639
							],
							[
								880,
								900
							]
						],
						"symlist":
						[
							" (level,message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABKAAAAICAobGV2ZWwsbWVzc2FnZSkgPT4KJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAAEoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1358,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								402,
								421
							],
							[
								617,
								650
							],
							[
								891,
								911
							]
						],
						"symlist":
						[
							" (level,message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABKAAAAICAobGV2ZWwsbWVzc2FnZSkgPT4KJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAAEoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1359,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								406,
								425
							],
							[
								621,
								654
							],
							[
								895,
								915
							]
						],
						"symlist":
						[
							" (level,message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABKAAAAICAobGV2ZWwsbWVzc2FnZSkgPT4KJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAAEoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1360,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
						"symkeys":
						[
							[
								571,
								589
							],
							[
								1639,
								1681
							],
							[
								2668,
								2695
							],
							[
								3145,
								3178
							],
							[
								3443,
								3463
							],
							[
								3792,
								3815
							],
							[
								4033,
								4065
							],
							[
								4218,
								4241
							],
							[
								4304,
								4329
							],
							[
								4390,
								4411
							],
							[
								4543,
								4566
							]
						],
						"symlist":
						[
							"log = (...args) =>",
							" function MakeCert(sslCert, sslPrivateKey)",
							" (level, message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onConnect: (ws, req) =>",
							"onClose: (ws, status, reason) =>",
							"onError: (ws, error) =>",
							"onHttp: (ws, req, rsp) =>",
							"onFd: (fd, rd, wr) =>",
							"onMessage: (ws, msg) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABKAAAAICAobGV2ZWwsbWVzc2FnZSkgPT4KJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAACYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1361,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								406,
								425
							],
							[
								621,
								654
							],
							[
								895,
								915
							]
						],
						"symlist":
						[
							" (level,message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAQAAICBsb2cgPSAoLi4uYXJncykgPT4KTWFrZUNlcnQoc3NsQ2VydCwgc3NsUHJpdmF0ZUtleSkKICAobGV2ZWwsIG1lc3NhZ2UpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCipnZW5lcmF0b3IocmVxLCByZXMpCiAgb25Db25uZWN0OiAod3MsIHJlcSkgPT4KICBvbkNsb3NlOiAod3MsIHN0YXR1cywgcmVhc29uKSA9PgogIG9uRXJyb3I6ICh3cywgZXJyb3IpID0+CiAgb25IdHRwOiAod3MsIHJlcSwgcnNwKSA9PgogIG9uRmQ6IChmZCwgcmQsIHdyKSA9PgogIG9uTWVzc2FnZTogKHdzLCBtc2cpID0+AAAAAAAAAABKAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1362,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								406,
								425
							],
							[
								621,
								654
							],
							[
								895,
								915
							],
							[
								1164,
								1185
							]
						],
						"symlist":
						[
							" (level,message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onFd: (fd, rd, wr) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABKAAAAICAobGV2ZWwsbWVzc2FnZSkgPT4KJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykAAAAAAAAAAGIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1363,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
						"symkeys":
						[
							[
								571,
								589
							],
							[
								1639,
								1681
							],
							[
								2668,
								2695
							],
							[
								3145,
								3178
							],
							[
								3443,
								3463
							],
							[
								3792,
								3815
							],
							[
								4033,
								4065
							],
							[
								4218,
								4241
							],
							[
								4304,
								4329
							],
							[
								4390,
								4411
							],
							[
								4543,
								4566
							]
						],
						"symlist":
						[
							"log = (...args) =>",
							" function MakeCert(sslCert, sslPrivateKey)",
							" (level, message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onConnect: (ws, req) =>",
							"onClose: (ws, status, reason) =>",
							"onError: (ws, error) =>",
							"onHttp: (ws, req, rsp) =>",
							"onFd: (fd, rd, wr) =>",
							"onMessage: (ws, msg) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABiAAAAICAobGV2ZWwsbWVzc2FnZSkgPT4KJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykKICBvbkZkOiAoZmQsIHJkLCB3cikgPT4AAAAAAAAAACYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1364,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAQAAICBsb2cgPSAoLi4uYXJncykgPT4KTWFrZUNlcnQoc3NsQ2VydCwgc3NsUHJpdmF0ZUtleSkKICAobGV2ZWwsIG1lc3NhZ2UpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCipnZW5lcmF0b3IocmVxLCByZXMpCiAgb25Db25uZWN0OiAod3MsIHJlcSkgPT4KICBvbkNsb3NlOiAod3MsIHN0YXR1cywgcmVhc29uKSA9PgogIG9uRXJyb3I6ICh3cywgZXJyb3IpID0+CiAgb25IdHRwOiAod3MsIHJlcSwgcnNwKSA9PgogIG9uRmQ6IChmZCwgcmQsIHdyKSA9PgogIG9uTWVzc2FnZTogKHdzLCBtc2cpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1365,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
						"symkeys":
						[
							[
								571,
								589
							],
							[
								1639,
								1681
							],
							[
								2668,
								2695
							],
							[
								3145,
								3178
							],
							[
								3443,
								3463
							],
							[
								3792,
								3815
							],
							[
								4033,
								4065
							],
							[
								4218,
								4241
							],
							[
								4304,
								4329
							],
							[
								4390,
								4411
							],
							[
								4543,
								4566
							]
						],
						"symlist":
						[
							"log = (...args) =>",
							" function MakeCert(sslCert, sslPrivateKey)",
							" (level, message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onConnect: (ws, req) =>",
							"onClose: (ws, status, reason) =>",
							"onError: (ws, error) =>",
							"onHttp: (ws, req, rsp) =>",
							"onFd: (fd, rd, wr) =>",
							"onMessage: (ws, msg) =>"
						]
					},
					"AQAAAAAAAAAAAAAAJgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1366,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/response.c",
						"symkeys":
						[
							[
								136,
								156
							],
							[
								178,
								191
							],
							[
								532,
								544
							],
							[
								607,
								621
							],
							[
								847,
								860
							],
							[
								998,
								1010
							]
						],
						"symlist":
						[
							"—Ⓕ– minnet_response_data ( ) { … } — function",
							"—Ⓕ– response_init ( ) { … } — function",
							"—Ⓕ– response_dup ( ) { … } — function",
							"—Ⓕ– response_clear ( ) { … } — function",
							"—Ⓕ– response_free ( ) { … } — function",
							"—Ⓕ– response_new ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAQAAICBsb2cgPSAoLi4uYXJncykgPT4KTWFrZUNlcnQoc3NsQ2VydCwgc3NsUHJpdmF0ZUtleSkKICAobGV2ZWwsIG1lc3NhZ2UpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCipnZW5lcmF0b3IocmVxLCByZXMpCiAgb25Db25uZWN0OiAod3MsIHJlcSkgPT4KICBvbkNsb3NlOiAod3MsIHN0YXR1cywgcmVhc29uKSA9PgogIG9uRXJyb3I6ICh3cywgZXJyb3IpID0+CiAgb25IdHRwOiAod3MsIHJlcSwgcnNwKSA9PgogIG9uRmQ6IChmZCwgcmQsIHdyKSA9PgogIG9uTWVzc2FnZTogKHdzLCBtc2cpID0+AAAAAAAAAADvAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1367,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/request.h",
						"symkeys":
						[
							[
								37,
								57
							],
							[
								155,
								168
							],
							[
								192,
								205
							],
							[
								236,
								248
							],
							[
								413,
								426
							],
							[
								450,
								463
							],
							[
								484,
								496
							],
							[
								551,
								564
							],
							[
								587,
								598
							],
							[
								649,
								660
							],
							[
								681,
								696
							],
							[
								704,
								707
							],
							[
								732,
								745
							],
							[
								763,
								775
							],
							[
								811,
								823
							],
							[
								894,
								905
							]
						],
						"symlist":
						[
							"QJSNET_LIB_REQUEST_H",
							"method_string",
							"method_number",
							"http_request",
							"method_string",
							"method_number",
							"request_init",
							"request_alloc",
							"request_new",
							"request_dup",
							"request_fromwsi",
							"lws",
							"request_clear",
							"request_free",
							"request_from",
							"method_name"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArAQAA4oCU4pK74oCTIG1pbm5ldF9yZXNwb25zZV9kYXRhICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVzcG9uc2VfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlc3BvbnNlX2R1cCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlc3BvbnNlX2NsZWFyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVzcG9uc2VfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHJlc3BvbnNlX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1368,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								406,
								425
							],
							[
								621,
								654
							],
							[
								895,
								915
							],
							[
								1164,
								1185
							]
						],
						"symlist":
						[
							" (level,message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onFd: (fd, rd, wr) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyAAAAUUpTTkVUX0xJQl9SRVFVRVNUX0gKICBtZXRob2Rfc3RyaW5nCiAgbWV0aG9kX251bWJlcgogIGh0dHBfcmVxdWVzdAogIG1ldGhvZF9zdHJpbmcKICBtZXRob2RfbnVtYmVyCiAgcmVxdWVzdF9pbml0CiAgcmVxdWVzdF9hbGxvYwogIHJlcXVlc3RfbmV3CiAgcmVxdWVzdF9kdXAKICByZXF1ZXN0X2Zyb213c2kKICBsd3MKICByZXF1ZXN0X2NsZWFyCiAgcmVxdWVzdF9mcmVlCiAgcmVxdWVzdF9mcm9tCiAgbWV0aG9kX25hbWUAAAAAAAAAAGIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1369,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								461,
								480
							],
							[
								676,
								709
							],
							[
								950,
								970
							],
							[
								1219,
								1240
							]
						],
						"symlist":
						[
							" (level,message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onFd: (fd, rd, wr) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABiAAAAICAobGV2ZWwsbWVzc2FnZSkgPT4KJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykKICBvbkZkOiAoZmQsIHJkLCB3cikgPT4AAAAAAAAAAGIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiAAAAICAobGV2ZWwsbWVzc2FnZSkgPT4KJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykKICBvbkZkOiAoZmQsIHJkLCB3cikgPT4AAAAAAAAAAGIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1370,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								462,
								482
							],
							[
								680,
								713
							],
							[
								954,
								974
							],
							[
								1219,
								1240
							]
						],
						"symlist":
						[
							" (level, message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onFd: (fd, rd, wr) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABiAAAAICAobGV2ZWwsbWVzc2FnZSkgPT4KJy80MDQuaHRtbCc6IGZ1bmN0aW9uKihyZXEsIHJlcykKKmdlbmVyYXRvcihyZXEsIHJlcykKICBvbkZkOiAoZmQsIHJkLCB3cikgPT4AAAAAAAAAAGMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjAAAAICAobGV2ZWwsIG1lc3NhZ2UpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCipnZW5lcmF0b3IocmVxLCByZXMpCiAgb25GZDogKGZkLCByZCwgd3IpID0+AAAAAAAAAABjAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1371,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								462,
								482
							],
							[
								680,
								713
							],
							[
								954,
								974
							],
							[
								1219,
								1240
							]
						],
						"symlist":
						[
							" (level, message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onFd: (fd, rd, wr) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABjAAAAICAobGV2ZWwsIG1lc3NhZ2UpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCipnZW5lcmF0b3IocmVxLCByZXMpCiAgb25GZDogKGZkLCByZCwgd3IpID0+AAAAAAAAAABjAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1372,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								462,
								482
							],
							[
								680,
								713
							],
							[
								954,
								974
							],
							[
								1219,
								1240
							]
						],
						"symlist":
						[
							" (level, message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onFd: (fd, rd, wr) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABjAAAAICAobGV2ZWwsIG1lc3NhZ2UpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCipnZW5lcmF0b3IocmVxLCByZXMpCiAgb25GZDogKGZkLCByZCwgd3IpID0+AAAAAAAAAABjAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					1373,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
						"symkeys":
						[
							[
								462,
								482
							],
							[
								680,
								713
							],
							[
								954,
								974
							],
							[
								1219,
								1240
							]
						],
						"symlist":
						[
							" (level, message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onFd: (fd, rd, wr) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABjAAAAICAobGV2ZWwsIG1lc3NhZ2UpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCipnZW5lcmF0b3IocmVxLCByZXMpCiAgb25GZDogKGZkLCByZCwgd3IpID0+AAAAAAAAAABjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYwAAACAgKGxldmVsLCBtZXNzYWdlKSA9PgonLzQwNC5odG1sJzogZnVuY3Rpb24qKHJlcSwgcmVzKQoqZ2VuZXJhdG9yKHJlcSwgcmVzKQogIG9uRmQ6IChmZCwgcmQsIHdyKSA9PgAAAAAAAAAAYwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "remove-functions.c",
			"settings":
			{
				"buffer_size": 30394,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					114,
					1,
					"paste",
					null,
					"AQAAACZ1AAAAAAAAxHUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJnUAAAAAAAAmdQAAAAAAAAAAAAAAACJA"
				],
				[
					115,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAMR1AAAAAAAAxXUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxHUAAAAAAADEdQAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"paste",
					null,
					"AQAAAMR1AAAAAAAAvnYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxHUAAAAAAADEdQAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAL52AAAAAAAAv3YAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvnYAAAAAAAC+dgAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAv3YAAAAAAAC/dgAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAv3YAAAAAAAC/dgAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAv3YAAAAAAAC/dgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/closure.h",
			"settings":
			{
				"buffer_size": 464,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/session.h",
			"settings":
			{
				"buffer_size": 1354,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "lib/deferred.c",
			"settings":
			{
				"buffer_size": 2284,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"cut",
					null,
					"AQAAAMoDAAAAAAAAygMAAAAAAACJAAAACkRlZmVycmVkKgpkZWZlcnJlZF9kdXBqcyhKU1ZhbHVlQ29uc3QgdmFsdWUsIEpTQ29udGV4dCogY3R4KSB7CiAgSlNWYWx1ZSB2ID0gSlNfRHVwVmFsdWUoY3R4LCB2YWx1ZSk7CiAgcmV0dXJuIGRlZmVycmVkX25ld2pzKHYsIGN0eCk7Cn0",
					"AQAAAAAAAAABAAAAygMAAAAAAABTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"cut",
					null,
					"AQAAAKQJAAAAAAAApAkAAAAAAACyAAAACgpKU1ZhbHVlCmRlZmVycmVkX3RvanMoRGVmZXJyZWQqIGRlZiwgSlNDb250ZXh0KiBjdHgpIHsKICBkZWZlcnJlZF9kdXAoZGVmKTsKCiAgcmV0dXJuIGpzX2Z1bmN0aW9uX2NjbG9zdXJlKGN0eCwgZGVmZXJyZWRfanNfY2FsbCwgMCwgMCwgZGVmLCAodm9pZCAoKikocHRyX3QpKWRlZmVycmVkX2ZyZWUpOwp9Cg",
					"AQAAAAAAAAABAAAApAkAAAAAAABWCgAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAKQJAAAAAAAApQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAkAAAAAAACkCQAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"cut",
					null,
					"AQAAAOsIAAAAAAAA6wgAAAAAAAC6AAAACgpzdGF0aWMgSlNWYWx1ZQpkZWZlcnJlZF9qc19jYWxsKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMsIHB0cl90IHB0cikgewogIERlZmVycmVkKiBkZWYgPSBwdHI7CgogIHJldHVybiBkZWZlcnJlZF9jYWxsKGRlZikuanM7Cn0K",
					"AQAAAAAAAAABAAAA6wgAAAAAAAClCQAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAOsIAAAAAAAA7AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wgAAAAAAADrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADsCAAAI2luY2x1ZGUgPGFzc2VydC5oPgojaW5jbHVkZSAiZGVmZXJyZWQuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKCnZvaWQKZGVmZXJyZWRfY2xlYXIoRGVmZXJyZWQqIGRlZikgewogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwogIGRlZi0+ZnVuYyA9IDA7CgogIGZvcihpbnQgaSA9IDA7IGkgPCA4OyBpKyspIHsgZGVmLT5hcmd2W2ldID0gMDsgfQp9Cgp2b2lkCmRlZmVycmVkX2ZyZWUoRGVmZXJyZWQqIGRlZikgewogIGlmKGRlZi0+bmV4dCkKICAgIGRlZmVycmVkX2Rlc3RydWN0b3IoZGVmLT5uZXh0KTsKCiAgaWYoLS1kZWYtPnJlZl9jb3VudCA9PSAwKSB7CiAgICBkZWZlcnJlZF9jbGVhcihkZWYpOwogICAgZnJlZShkZWYpOwogIH0KfQoKRGVmZXJyZWQqCmRlZmVycmVkX25ld3YocHRyX3QgZm4sIGludCBhcmdjLCBwdHJfdCBhcmd2W10pIHsKICBEZWZlcnJlZCogZGVmOwoKICBpZighKGRlZiA9IG1hbGxvYyhzaXplb2YoRGVmZXJyZWQpKSkpCiAgICByZXR1cm4gMDsKCiAgZGVmZXJyZWRfaW5pdChkZWYsIGZuLCBhcmdjLCBhcmd2KTsKCiAgZGVmLT5yZWZfY291bnQgPSAxOwogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwoKICByZXR1cm4gZGVmOwp9CgpEZWZlcnJlZCoKZGVmZXJyZWRfbmV3anMoSlNWYWx1ZSBmdW5jLCBKU0NvbnRleHQqIGN0eCkgewogIERlZmVycmVkKiBkZWY7CiAgLypwdHJfdCBhcmdzW10gPSB7CiAgICAgIGN0eCwKICAgICAgKChwdHJfdCopJnYpWzBdLAogICAgICAoKHB0cl90KikmdilbMV0sCiAgfTsKICBkZWYgPSBkZWZlcnJlZF9uZXd2KGZuLCAzLCBhcmdzKTsqLwogIGRlZiA9IGRlZmVycmVkX25ldygmSlNfQ2FsbCwgY3R4LCBmdW5jLCBKU19VTkRFRklORUQpOwoKICBkZWYtPm5leHQgPSBkZWZlcnJlZF9uZXcoJkpTX0ZyZWVWYWx1ZSwgY3R4LCBmdW5jKTsKICByZXR1cm4gZGVmOwp9Cgp2b2lkCmRlZmVycmVkX2luaXQoRGVmZXJyZWQqIGRlZiwgcHRyX3QgZm4sIGludCBhcmdjLCBwdHJfdCBhcmd2W10pIHsKICBpbnQgaTsKCiAgZGVmLT5yZWZfY291bnQgPSAwOwogIGRlZi0+ZnVuYyA9IGZuOwoKICBmb3IoaSA9IDA7IGkgPCA4OyBpKyspIHsgZGVmLT5hcmd2W2ldID0gaSA8IGFyZ2MgPyBhcmd2W2ldIDogMDsgfQoKICBkZWYtPmFyZ2MgPSBhcmdjOwogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwogIGRlZi0+bmV4dCA9IDA7Cn0KCkRvdWJsZVdvcmQKZGVmZXJyZWRfY2FsbF94KERlZmVycmVkKiBkZWYsIC4uLikgewogIHB0cl90IGNvbnN0KiBhdiA9IGRlZi0+YXJndjsKICBEb3VibGVXb3JkIHJldCA9IHt7MCwgMH19OwogIHZhX2xpc3QgYTsKICBpbnQgYXJnYyA9IGRlZi0+YXJnYzsKICBzaXplX3QgYXJnOwoKICB2YV9zdGFydChhLCBkZWYpOwoKICB3aGlsZShhcmdjIDwgY291bnRvZihkZWYtPmFyZ3YpICYmIChhcmcgPSB2YV9hcmcoYSwgc2l6ZV90KSkpIHsKICAgIGlmKGFyZyA9PSBERUZFUlJFRF9TRU5USU5FTCkKICAgICAgYnJlYWs7CiAgICBkZWYtPmFyZ3ZbYXJnYysrXSA9IChwdHJfdClhcmc7CiAgfQoKICB2YV9lbmQoYSk7CgogIGFzc2VydCghZGVmLT5vbmx5X29uY2UgfHwgZGVmLT5udW1fY2FsbHMgPCAxKTsKCiAgaWYoIWRlZi0+b25seV9vbmNlIHx8IGRlZi0+bnVtX2NhbGxzIDwgMSkgewoKICAgIGlmKGRlZi0+ZnVuYyA9PSAodm9pZCopJkpTX0NhbGwpCiAgICAgIHJldCA9IGRlZi0+ZnVuYyhhdlswXSwgYXZbMV0sIGF2WzJdLCBhdlszXSwgYXZbNF0sIChwdHJfdCkoc2l6ZV90KSgoYXJnYyAtIGRlZi0+YXJnYykgPiAwID8gMSA6IDApLCAocHRyX3QpJmF2W2RlZi0+YXJnY10sIDApOwogICAgZWxzZQogICAgICByZXQgPSBkZWYtPmZ1bmMoYXZbMF0sIGF2WzFdLCBhdlsyXSwgYXZbM10sIGF2WzRdLCBhdls1XSwgYXZbNl0sIGF2WzddKTsKCiAgICArK2RlZi0+bnVtX2NhbGxzOwogIH0KCiAgcmV0dXJuIHJldDsKfQoKdm9pZApkZWZlcnJlZF9kZXN0cnVjdG9yKHZvaWQqIHB0cikgewogIERlZmVycmVkKiBkZWYgPSBwdHI7CgogIGRvIHsKICAgIHB0ciA9IGRlZi0+bmV4dDsKICAgIGRlZi0+bmV4dCA9IE5VTEw7CiAgICBkZWZlcnJlZF9jYWxsKGRlZik7CiAgICBkZWZlcnJlZF9mcmVlKGRlZik7CiAgfSB3aGlsZSgoZGVmID0gcHRyKSk7Cn0KCnZvaWQKZGVmZXJyZWRfZmluYWxpemVyKEpTUnVudGltZSogcnQsIHZvaWQqIG9wYXF1ZSwgdm9pZCogcHRyKSB7CiAgZGVmZXJyZWRfZGVzdHJ1Y3RvcihvcGFxdWUpOwp9CgAAAAAAAAAA7AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wgAAAAAAADrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADsCAAAI2luY2x1ZGUgPGFzc2VydC5oPgojaW5jbHVkZSAiZGVmZXJyZWQuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKCnZvaWQKZGVmZXJyZWRfY2xlYXIoRGVmZXJyZWQqIGRlZikgewogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwogIGRlZi0+ZnVuYyA9IDA7CgogIGZvcihpbnQgaSA9IDA7IGkgPCA4OyBpKyspIHsgZGVmLT5hcmd2W2ldID0gMDsgfQp9Cgp2b2lkCmRlZmVycmVkX2ZyZWUoRGVmZXJyZWQqIGRlZikgewogIGlmKGRlZi0+bmV4dCkKICAgIGRlZmVycmVkX2Rlc3RydWN0b3IoZGVmLT5uZXh0KTsKCiAgaWYoLS1kZWYtPnJlZl9jb3VudCA9PSAwKSB7CiAgICBkZWZlcnJlZF9jbGVhcihkZWYpOwogICAgZnJlZShkZWYpOwogIH0KfQoKRGVmZXJyZWQqCmRlZmVycmVkX25ld3YocHRyX3QgZm4sIGludCBhcmdjLCBwdHJfdCBhcmd2W10pIHsKICBEZWZlcnJlZCogZGVmOwoKICBpZighKGRlZiA9IG1hbGxvYyhzaXplb2YoRGVmZXJyZWQpKSkpCiAgICByZXR1cm4gMDsKCiAgZGVmZXJyZWRfaW5pdChkZWYsIGZuLCBhcmdjLCBhcmd2KTsKCiAgZGVmLT5yZWZfY291bnQgPSAxOwogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwoKICByZXR1cm4gZGVmOwp9CgpEZWZlcnJlZCoKZGVmZXJyZWRfbmV3anMoSlNWYWx1ZSBmdW5jLCBKU0NvbnRleHQqIGN0eCkgewogIERlZmVycmVkKiBkZWY7CiAgLypwdHJfdCBhcmdzW10gPSB7CiAgICAgIGN0eCwKICAgICAgKChwdHJfdCopJnYpWzBdLAogICAgICAoKHB0cl90KikmdilbMV0sCiAgfTsKICBkZWYgPSBkZWZlcnJlZF9uZXd2KGZuLCAzLCBhcmdzKTsqLwogIGRlZiA9IGRlZmVycmVkX25ldygmSlNfQ2FsbCwgY3R4LCBmdW5jLCBKU19VTkRFRklORUQpOwoKICBkZWYtPm5leHQgPSBkZWZlcnJlZF9uZXcoJkpTX0ZyZWVWYWx1ZSwgY3R4LCBmdW5jKTsKICByZXR1cm4gZGVmOwp9Cgp2b2lkCmRlZmVycmVkX2luaXQoRGVmZXJyZWQqIGRlZiwgcHRyX3QgZm4sIGludCBhcmdjLCBwdHJfdCBhcmd2W10pIHsKICBpbnQgaTsKCiAgZGVmLT5yZWZfY291bnQgPSAwOwogIGRlZi0+ZnVuYyA9IGZuOwoKICBmb3IoaSA9IDA7IGkgPCA4OyBpKyspIHsgZGVmLT5hcmd2W2ldID0gaSA8IGFyZ2MgPyBhcmd2W2ldIDogMDsgfQoKICBkZWYtPmFyZ2MgPSBhcmdjOwogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwogIGRlZi0+bmV4dCA9IDA7Cn0KCkRvdWJsZVdvcmQKZGVmZXJyZWRfY2FsbF94KERlZmVycmVkKiBkZWYsIC4uLikgewogIHB0cl90IGNvbnN0KiBhdiA9IGRlZi0+YXJndjsKICBEb3VibGVXb3JkIHJldCA9IHt7MCwgMH19OwogIHZhX2xpc3QgYTsKICBpbnQgYXJnYyA9IGRlZi0+YXJnYzsKICBzaXplX3QgYXJnOwoKICB2YV9zdGFydChhLCBkZWYpOwoKICB3aGlsZShhcmdjIDwgY291bnRvZihkZWYtPmFyZ3YpICYmIChhcmcgPSB2YV9hcmcoYSwgc2l6ZV90KSkpIHsKICAgIGlmKGFyZyA9PSBERUZFUlJFRF9TRU5USU5FTCkKICAgICAgYnJlYWs7CiAgICBkZWYtPmFyZ3ZbYXJnYysrXSA9IChwdHJfdClhcmc7CiAgfQoKICB2YV9lbmQoYSk7CgogIGFzc2VydCghZGVmLT5vbmx5X29uY2UgfHwgZGVmLT5udW1fY2FsbHMgPCAxKTsKCiAgaWYoIWRlZi0+b25seV9vbmNlIHx8IGRlZi0+bnVtX2NhbGxzIDwgMSkgewoKICAgIGlmKGRlZi0+ZnVuYyA9PSAodm9pZCopJkpTX0NhbGwpCiAgICAgIHJldCA9IGRlZi0+ZnVuYyhhdlswXSwgYXZbMV0sIGF2WzJdLCBhdlszXSwgYXZbNF0sIChwdHJfdCkoc2l6ZV90KSgoYXJnYyAtIGRlZi0+YXJnYykgPiAwID8gMSA6IDApLCAocHRyX3QpJmF2W2RlZi0+YXJnY10sIDApOwogICAgZWxzZQogICAgICByZXQgPSBkZWYtPmZ1bmMoYXZbMF0sIGF2WzFdLCBhdlsyXSwgYXZbM10sIGF2WzRdLCBhdls1XSwgYXZbNl0sIGF2WzddKTsKCiAgICArK2RlZi0+bnVtX2NhbGxzOwogIH0KCiAgcmV0dXJuIHJldDsKfQoKdm9pZApkZWZlcnJlZF9kZXN0cnVjdG9yKHZvaWQqIHB0cikgewogIERlZmVycmVkKiBkZWYgPSBwdHI7CgogIGRvIHsKICAgIHB0ciA9IGRlZi0+bmV4dDsKICAgIGRlZi0+bmV4dCA9IE5VTEw7CiAgICBkZWZlcnJlZF9jYWxsKGRlZik7CiAgICBkZWZlcnJlZF9mcmVlKGRlZik7CiAgfSB3aGlsZSgoZGVmID0gcHRyKSk7Cn0KCnZvaWQKZGVmZXJyZWRfZmluYWxpemVyKEpTUnVudGltZSogcnQsIHZvaWQqIG9wYXF1ZSwgdm9pZCogcHRyKSB7CiAgZGVmZXJyZWRfZGVzdHJ1Y3RvcihvcGFxdWUpOwp9CgAAAAAAAAAA7AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wgAAAAAAADrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADsCAAAI2luY2x1ZGUgPGFzc2VydC5oPgojaW5jbHVkZSAiZGVmZXJyZWQuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKCnZvaWQKZGVmZXJyZWRfY2xlYXIoRGVmZXJyZWQqIGRlZikgewogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwogIGRlZi0+ZnVuYyA9IDA7CgogIGZvcihpbnQgaSA9IDA7IGkgPCA4OyBpKyspIHsgZGVmLT5hcmd2W2ldID0gMDsgfQp9Cgp2b2lkCmRlZmVycmVkX2ZyZWUoRGVmZXJyZWQqIGRlZikgewogIGlmKGRlZi0+bmV4dCkKICAgIGRlZmVycmVkX2Rlc3RydWN0b3IoZGVmLT5uZXh0KTsKCiAgaWYoLS1kZWYtPnJlZl9jb3VudCA9PSAwKSB7CiAgICBkZWZlcnJlZF9jbGVhcihkZWYpOwogICAgZnJlZShkZWYpOwogIH0KfQoKRGVmZXJyZWQqCmRlZmVycmVkX25ld3YocHRyX3QgZm4sIGludCBhcmdjLCBwdHJfdCBhcmd2W10pIHsKICBEZWZlcnJlZCogZGVmOwoKICBpZighKGRlZiA9IG1hbGxvYyhzaXplb2YoRGVmZXJyZWQpKSkpCiAgICByZXR1cm4gMDsKCiAgZGVmZXJyZWRfaW5pdChkZWYsIGZuLCBhcmdjLCBhcmd2KTsKCiAgZGVmLT5yZWZfY291bnQgPSAxOwogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwoKICByZXR1cm4gZGVmOwp9CgpEZWZlcnJlZCoKZGVmZXJyZWRfbmV3anMoSlNWYWx1ZSBmdW5jLCBKU0NvbnRleHQqIGN0eCkgewogIERlZmVycmVkKiBkZWY7CiAgLypwdHJfdCBhcmdzW10gPSB7CiAgICAgIGN0eCwKICAgICAgKChwdHJfdCopJnYpWzBdLAogICAgICAoKHB0cl90KikmdilbMV0sCiAgfTsKICBkZWYgPSBkZWZlcnJlZF9uZXd2KGZuLCAzLCBhcmdzKTsqLwogIGRlZiA9IGRlZmVycmVkX25ldygmSlNfQ2FsbCwgY3R4LCBmdW5jLCBKU19VTkRFRklORUQpOwoKICBkZWYtPm5leHQgPSBkZWZlcnJlZF9uZXcoJkpTX0ZyZWVWYWx1ZSwgY3R4LCBmdW5jKTsKICByZXR1cm4gZGVmOwp9Cgp2b2lkCmRlZmVycmVkX2luaXQoRGVmZXJyZWQqIGRlZiwgcHRyX3QgZm4sIGludCBhcmdjLCBwdHJfdCBhcmd2W10pIHsKICBpbnQgaTsKCiAgZGVmLT5yZWZfY291bnQgPSAwOwogIGRlZi0+ZnVuYyA9IGZuOwoKICBmb3IoaSA9IDA7IGkgPCA4OyBpKyspIHsgZGVmLT5hcmd2W2ldID0gaSA8IGFyZ2MgPyBhcmd2W2ldIDogMDsgfQoKICBkZWYtPmFyZ2MgPSBhcmdjOwogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwogIGRlZi0+bmV4dCA9IDA7Cn0KCkRvdWJsZVdvcmQKZGVmZXJyZWRfY2FsbF94KERlZmVycmVkKiBkZWYsIC4uLikgewogIHB0cl90IGNvbnN0KiBhdiA9IGRlZi0+YXJndjsKICBEb3VibGVXb3JkIHJldCA9IHt7MCwgMH19OwogIHZhX2xpc3QgYTsKICBpbnQgYXJnYyA9IGRlZi0+YXJnYzsKICBzaXplX3QgYXJnOwoKICB2YV9zdGFydChhLCBkZWYpOwoKICB3aGlsZShhcmdjIDwgY291bnRvZihkZWYtPmFyZ3YpICYmIChhcmcgPSB2YV9hcmcoYSwgc2l6ZV90KSkpIHsKICAgIGlmKGFyZyA9PSBERUZFUlJFRF9TRU5USU5FTCkKICAgICAgYnJlYWs7CiAgICBkZWYtPmFyZ3ZbYXJnYysrXSA9IChwdHJfdClhcmc7CiAgfQoKICB2YV9lbmQoYSk7CgogIGFzc2VydCghZGVmLT5vbmx5X29uY2UgfHwgZGVmLT5udW1fY2FsbHMgPCAxKTsKCiAgaWYoIWRlZi0+b25seV9vbmNlIHx8IGRlZi0+bnVtX2NhbGxzIDwgMSkgewoKICAgIGlmKGRlZi0+ZnVuYyA9PSAodm9pZCopJkpTX0NhbGwpCiAgICAgIHJldCA9IGRlZi0+ZnVuYyhhdlswXSwgYXZbMV0sIGF2WzJdLCBhdlszXSwgYXZbNF0sIChwdHJfdCkoc2l6ZV90KSgoYXJnYyAtIGRlZi0+YXJnYykgPiAwID8gMSA6IDApLCAocHRyX3QpJmF2W2RlZi0+YXJnY10sIDApOwogICAgZWxzZQogICAgICByZXQgPSBkZWYtPmZ1bmMoYXZbMF0sIGF2WzFdLCBhdlsyXSwgYXZbM10sIGF2WzRdLCBhdls1XSwgYXZbNl0sIGF2WzddKTsKCiAgICArK2RlZi0+bnVtX2NhbGxzOwogIH0KCiAgcmV0dXJuIHJldDsKfQoKdm9pZApkZWZlcnJlZF9kZXN0cnVjdG9yKHZvaWQqIHB0cikgewogIERlZmVycmVkKiBkZWYgPSBwdHI7CgogIGRvIHsKICAgIHB0ciA9IGRlZi0+bmV4dDsKICAgIGRlZi0+bmV4dCA9IE5VTEw7CiAgICBkZWZlcnJlZF9jYWxsKGRlZik7CiAgICBkZWZlcnJlZF9mcmVlKGRlZik7CiAgfSB3aGlsZSgoZGVmID0gcHRyKSk7Cn0KCnZvaWQKZGVmZXJyZWRfZmluYWxpemVyKEpTUnVudGltZSogcnQsIHZvaWQqIG9wYXF1ZSwgdm9pZCogcHRyKSB7CiAgZGVmZXJyZWRfZGVzdHJ1Y3RvcihvcGFxdWUpOwp9CgAAAAAAAAAA7AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wgAAAAAAADrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADsCAAAI2luY2x1ZGUgPGFzc2VydC5oPgojaW5jbHVkZSAiZGVmZXJyZWQuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKCnZvaWQKZGVmZXJyZWRfY2xlYXIoRGVmZXJyZWQqIGRlZikgewogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwogIGRlZi0+ZnVuYyA9IDA7CgogIGZvcihpbnQgaSA9IDA7IGkgPCA4OyBpKyspIHsgZGVmLT5hcmd2W2ldID0gMDsgfQp9Cgp2b2lkCmRlZmVycmVkX2ZyZWUoRGVmZXJyZWQqIGRlZikgewogIGlmKGRlZi0+bmV4dCkKICAgIGRlZmVycmVkX2Rlc3RydWN0b3IoZGVmLT5uZXh0KTsKCiAgaWYoLS1kZWYtPnJlZl9jb3VudCA9PSAwKSB7CiAgICBkZWZlcnJlZF9jbGVhcihkZWYpOwogICAgZnJlZShkZWYpOwogIH0KfQoKRGVmZXJyZWQqCmRlZmVycmVkX25ld3YocHRyX3QgZm4sIGludCBhcmdjLCBwdHJfdCBhcmd2W10pIHsKICBEZWZlcnJlZCogZGVmOwoKICBpZighKGRlZiA9IG1hbGxvYyhzaXplb2YoRGVmZXJyZWQpKSkpCiAgICByZXR1cm4gMDsKCiAgZGVmZXJyZWRfaW5pdChkZWYsIGZuLCBhcmdjLCBhcmd2KTsKCiAgZGVmLT5yZWZfY291bnQgPSAxOwogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwoKICByZXR1cm4gZGVmOwp9CgpEZWZlcnJlZCoKZGVmZXJyZWRfbmV3anMoSlNWYWx1ZSBmdW5jLCBKU0NvbnRleHQqIGN0eCkgewogIERlZmVycmVkKiBkZWY7CiAgLypwdHJfdCBhcmdzW10gPSB7CiAgICAgIGN0eCwKICAgICAgKChwdHJfdCopJnYpWzBdLAogICAgICAoKHB0cl90KikmdilbMV0sCiAgfTsKICBkZWYgPSBkZWZlcnJlZF9uZXd2KGZuLCAzLCBhcmdzKTsqLwogIGRlZiA9IGRlZmVycmVkX25ldygmSlNfQ2FsbCwgY3R4LCBmdW5jLCBKU19VTkRFRklORUQpOwoKICBkZWYtPm5leHQgPSBkZWZlcnJlZF9uZXcoJkpTX0ZyZWVWYWx1ZSwgY3R4LCBmdW5jKTsKICByZXR1cm4gZGVmOwp9Cgp2b2lkCmRlZmVycmVkX2luaXQoRGVmZXJyZWQqIGRlZiwgcHRyX3QgZm4sIGludCBhcmdjLCBwdHJfdCBhcmd2W10pIHsKICBpbnQgaTsKCiAgZGVmLT5yZWZfY291bnQgPSAwOwogIGRlZi0+ZnVuYyA9IGZuOwoKICBmb3IoaSA9IDA7IGkgPCA4OyBpKyspIHsgZGVmLT5hcmd2W2ldID0gaSA8IGFyZ2MgPyBhcmd2W2ldIDogMDsgfQoKICBkZWYtPmFyZ2MgPSBhcmdjOwogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwogIGRlZi0+bmV4dCA9IDA7Cn0KCkRvdWJsZVdvcmQKZGVmZXJyZWRfY2FsbF94KERlZmVycmVkKiBkZWYsIC4uLikgewogIHB0cl90IGNvbnN0KiBhdiA9IGRlZi0+YXJndjsKICBEb3VibGVXb3JkIHJldCA9IHt7MCwgMH19OwogIHZhX2xpc3QgYTsKICBpbnQgYXJnYyA9IGRlZi0+YXJnYzsKICBzaXplX3QgYXJnOwoKICB2YV9zdGFydChhLCBkZWYpOwoKICB3aGlsZShhcmdjIDwgY291bnRvZihkZWYtPmFyZ3YpICYmIChhcmcgPSB2YV9hcmcoYSwgc2l6ZV90KSkpIHsKICAgIGlmKGFyZyA9PSBERUZFUlJFRF9TRU5USU5FTCkKICAgICAgYnJlYWs7CiAgICBkZWYtPmFyZ3ZbYXJnYysrXSA9IChwdHJfdClhcmc7CiAgfQoKICB2YV9lbmQoYSk7CgogIGFzc2VydCghZGVmLT5vbmx5X29uY2UgfHwgZGVmLT5udW1fY2FsbHMgPCAxKTsKCiAgaWYoIWRlZi0+b25seV9vbmNlIHx8IGRlZi0+bnVtX2NhbGxzIDwgMSkgewoKICAgIGlmKGRlZi0+ZnVuYyA9PSAodm9pZCopJkpTX0NhbGwpCiAgICAgIHJldCA9IGRlZi0+ZnVuYyhhdlswXSwgYXZbMV0sIGF2WzJdLCBhdlszXSwgYXZbNF0sIChwdHJfdCkoc2l6ZV90KSgoYXJnYyAtIGRlZi0+YXJnYykgPiAwID8gMSA6IDApLCAocHRyX3QpJmF2W2RlZi0+YXJnY10sIDApOwogICAgZWxzZQogICAgICByZXQgPSBkZWYtPmZ1bmMoYXZbMF0sIGF2WzFdLCBhdlsyXSwgYXZbM10sIGF2WzRdLCBhdls1XSwgYXZbNl0sIGF2WzddKTsKCiAgICArK2RlZi0+bnVtX2NhbGxzOwogIH0KCiAgcmV0dXJuIHJldDsKfQoKdm9pZApkZWZlcnJlZF9kZXN0cnVjdG9yKHZvaWQqIHB0cikgewogIERlZmVycmVkKiBkZWYgPSBwdHI7CgogIGRvIHsKICAgIHB0ciA9IGRlZi0+bmV4dDsKICAgIGRlZi0+bmV4dCA9IE5VTEw7CiAgICBkZWZlcnJlZF9jYWxsKGRlZik7CiAgICBkZWZlcnJlZF9mcmVlKGRlZik7CiAgfSB3aGlsZSgoZGVmID0gcHRyKSk7Cn0KCnZvaWQKZGVmZXJyZWRfZmluYWxpemVyKEpTUnVudGltZSogcnQsIHZvaWQqIG9wYXF1ZSwgdm9pZCogcHRyKSB7CiAgZGVmZXJyZWRfZGVzdHJ1Y3RvcihvcGFxdWUpOwp9CgAAAAAAAAAA7AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wgAAAAAAADrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADsCAAAI2luY2x1ZGUgPGFzc2VydC5oPgojaW5jbHVkZSAiZGVmZXJyZWQuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKCnZvaWQKZGVmZXJyZWRfY2xlYXIoRGVmZXJyZWQqIGRlZikgewogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwogIGRlZi0+ZnVuYyA9IDA7CgogIGZvcihpbnQgaSA9IDA7IGkgPCA4OyBpKyspIHsgZGVmLT5hcmd2W2ldID0gMDsgfQp9Cgp2b2lkCmRlZmVycmVkX2ZyZWUoRGVmZXJyZWQqIGRlZikgewogIGlmKGRlZi0+bmV4dCkKICAgIGRlZmVycmVkX2Rlc3RydWN0b3IoZGVmLT5uZXh0KTsKCiAgaWYoLS1kZWYtPnJlZl9jb3VudCA9PSAwKSB7CiAgICBkZWZlcnJlZF9jbGVhcihkZWYpOwogICAgZnJlZShkZWYpOwogIH0KfQoKRGVmZXJyZWQqCmRlZmVycmVkX25ld3YocHRyX3QgZm4sIGludCBhcmdjLCBwdHJfdCBhcmd2W10pIHsKICBEZWZlcnJlZCogZGVmOwoKICBpZighKGRlZiA9IG1hbGxvYyhzaXplb2YoRGVmZXJyZWQpKSkpCiAgICByZXR1cm4gMDsKCiAgZGVmZXJyZWRfaW5pdChkZWYsIGZuLCBhcmdjLCBhcmd2KTsKCiAgZGVmLT5yZWZfY291bnQgPSAxOwogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwoKICByZXR1cm4gZGVmOwp9CgpEZWZlcnJlZCoKZGVmZXJyZWRfbmV3anMoSlNWYWx1ZSBmdW5jLCBKU0NvbnRleHQqIGN0eCkgewogIERlZmVycmVkKiBkZWY7CiAgLypwdHJfdCBhcmdzW10gPSB7CiAgICAgIGN0eCwKICAgICAgKChwdHJfdCopJnYpWzBdLAogICAgICAoKHB0cl90KikmdilbMV0sCiAgfTsKICBkZWYgPSBkZWZlcnJlZF9uZXd2KGZuLCAzLCBhcmdzKTsqLwogIGRlZiA9IGRlZmVycmVkX25ldygmSlNfQ2FsbCwgY3R4LCBmdW5jLCBKU19VTkRFRklORUQpOwoKICBkZWYtPm5leHQgPSBkZWZlcnJlZF9uZXcoJkpTX0ZyZWVWYWx1ZSwgY3R4LCBmdW5jKTsKICByZXR1cm4gZGVmOwp9Cgp2b2lkCmRlZmVycmVkX2luaXQoRGVmZXJyZWQqIGRlZiwgcHRyX3QgZm4sIGludCBhcmdjLCBwdHJfdCBhcmd2W10pIHsKICBpbnQgaTsKCiAgZGVmLT5yZWZfY291bnQgPSAwOwogIGRlZi0+ZnVuYyA9IGZuOwoKICBmb3IoaSA9IDA7IGkgPCA4OyBpKyspIHsgZGVmLT5hcmd2W2ldID0gaSA8IGFyZ2MgPyBhcmd2W2ldIDogMDsgfQoKICBkZWYtPmFyZ2MgPSBhcmdjOwogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwogIGRlZi0+bmV4dCA9IDA7Cn0KCkRvdWJsZVdvcmQKZGVmZXJyZWRfY2FsbF94KERlZmVycmVkKiBkZWYsIC4uLikgewogIHB0cl90IGNvbnN0KiBhdiA9IGRlZi0+YXJndjsKICBEb3VibGVXb3JkIHJldCA9IHt7MCwgMH19OwogIHZhX2xpc3QgYTsKICBpbnQgYXJnYyA9IGRlZi0+YXJnYzsKICBzaXplX3QgYXJnOwoKICB2YV9zdGFydChhLCBkZWYpOwoKICB3aGlsZShhcmdjIDwgY291bnRvZihkZWYtPmFyZ3YpICYmIChhcmcgPSB2YV9hcmcoYSwgc2l6ZV90KSkpIHsKICAgIGlmKGFyZyA9PSBERUZFUlJFRF9TRU5USU5FTCkKICAgICAgYnJlYWs7CiAgICBkZWYtPmFyZ3ZbYXJnYysrXSA9IChwdHJfdClhcmc7CiAgfQoKICB2YV9lbmQoYSk7CgogIGFzc2VydCghZGVmLT5vbmx5X29uY2UgfHwgZGVmLT5udW1fY2FsbHMgPCAxKTsKCiAgaWYoIWRlZi0+b25seV9vbmNlIHx8IGRlZi0+bnVtX2NhbGxzIDwgMSkgewoKICAgIGlmKGRlZi0+ZnVuYyA9PSAodm9pZCopJkpTX0NhbGwpCiAgICAgIHJldCA9IGRlZi0+ZnVuYyhhdlswXSwgYXZbMV0sIGF2WzJdLCBhdlszXSwgYXZbNF0sIChwdHJfdCkoc2l6ZV90KSgoYXJnYyAtIGRlZi0+YXJnYykgPiAwID8gMSA6IDApLCAocHRyX3QpJmF2W2RlZi0+YXJnY10sIDApOwogICAgZWxzZQogICAgICByZXQgPSBkZWYtPmZ1bmMoYXZbMF0sIGF2WzFdLCBhdlsyXSwgYXZbM10sIGF2WzRdLCBhdls1XSwgYXZbNl0sIGF2WzddKTsKCiAgICArK2RlZi0+bnVtX2NhbGxzOwogIH0KCiAgcmV0dXJuIHJldDsKfQoKdm9pZApkZWZlcnJlZF9kZXN0cnVjdG9yKHZvaWQqIHB0cikgewogIERlZmVycmVkKiBkZWYgPSBwdHI7CgogIGRvIHsKICAgIHB0ciA9IGRlZi0+bmV4dDsKICAgIGRlZi0+bmV4dCA9IE5VTEw7CiAgICBkZWZlcnJlZF9jYWxsKGRlZik7CiAgICBkZWZlcnJlZF9mcmVlKGRlZik7CiAgfSB3aGlsZSgoZGVmID0gcHRyKSk7Cn0KCnZvaWQKZGVmZXJyZWRfZmluYWxpemVyKEpTUnVudGltZSogcnQsIHZvaWQqIG9wYXF1ZSwgdm9pZCogcHRyKSB7CiAgZGVmZXJyZWRfZGVzdHJ1Y3RvcihvcGFxdWUpOwp9CgAAAAAAAAAA7AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wgAAAAAAADrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADsCAAAI2luY2x1ZGUgPGFzc2VydC5oPgojaW5jbHVkZSAiZGVmZXJyZWQuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKCnZvaWQKZGVmZXJyZWRfY2xlYXIoRGVmZXJyZWQqIGRlZikgewogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwogIGRlZi0+ZnVuYyA9IDA7CgogIGZvcihpbnQgaSA9IDA7IGkgPCA4OyBpKyspIHsgZGVmLT5hcmd2W2ldID0gMDsgfQp9Cgp2b2lkCmRlZmVycmVkX2ZyZWUoRGVmZXJyZWQqIGRlZikgewogIGlmKGRlZi0+bmV4dCkKICAgIGRlZmVycmVkX2Rlc3RydWN0b3IoZGVmLT5uZXh0KTsKCiAgaWYoLS1kZWYtPnJlZl9jb3VudCA9PSAwKSB7CiAgICBkZWZlcnJlZF9jbGVhcihkZWYpOwogICAgZnJlZShkZWYpOwogIH0KfQoKRGVmZXJyZWQqCmRlZmVycmVkX25ld3YocHRyX3QgZm4sIGludCBhcmdjLCBwdHJfdCBhcmd2W10pIHsKICBEZWZlcnJlZCogZGVmOwoKICBpZighKGRlZiA9IG1hbGxvYyhzaXplb2YoRGVmZXJyZWQpKSkpCiAgICByZXR1cm4gMDsKCiAgZGVmZXJyZWRfaW5pdChkZWYsIGZuLCBhcmdjLCBhcmd2KTsKCiAgZGVmLT5yZWZfY291bnQgPSAxOwogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwoKICByZXR1cm4gZGVmOwp9CgpEZWZlcnJlZCoKZGVmZXJyZWRfbmV3anMoSlNWYWx1ZSBmdW5jLCBKU0NvbnRleHQqIGN0eCkgewogIERlZmVycmVkKiBkZWY7CiAgLypwdHJfdCBhcmdzW10gPSB7CiAgICAgIGN0eCwKICAgICAgKChwdHJfdCopJnYpWzBdLAogICAgICAoKHB0cl90KikmdilbMV0sCiAgfTsKICBkZWYgPSBkZWZlcnJlZF9uZXd2KGZuLCAzLCBhcmdzKTsqLwogIGRlZiA9IGRlZmVycmVkX25ldygmSlNfQ2FsbCwgY3R4LCBmdW5jLCBKU19VTkRFRklORUQpOwoKICBkZWYtPm5leHQgPSBkZWZlcnJlZF9uZXcoJkpTX0ZyZWVWYWx1ZSwgY3R4LCBmdW5jKTsKICByZXR1cm4gZGVmOwp9Cgp2b2lkCmRlZmVycmVkX2luaXQoRGVmZXJyZWQqIGRlZiwgcHRyX3QgZm4sIGludCBhcmdjLCBwdHJfdCBhcmd2W10pIHsKICBpbnQgaTsKCiAgZGVmLT5yZWZfY291bnQgPSAwOwogIGRlZi0+ZnVuYyA9IGZuOwoKICBmb3IoaSA9IDA7IGkgPCA4OyBpKyspIHsgZGVmLT5hcmd2W2ldID0gaSA8IGFyZ2MgPyBhcmd2W2ldIDogMDsgfQoKICBkZWYtPmFyZ2MgPSBhcmdjOwogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwogIGRlZi0+bmV4dCA9IDA7Cn0KCkRvdWJsZVdvcmQKZGVmZXJyZWRfY2FsbF94KERlZmVycmVkKiBkZWYsIC4uLikgewogIHB0cl90IGNvbnN0KiBhdiA9IGRlZi0+YXJndjsKICBEb3VibGVXb3JkIHJldCA9IHt7MCwgMH19OwogIHZhX2xpc3QgYTsKICBpbnQgYXJnYyA9IGRlZi0+YXJnYzsKICBzaXplX3QgYXJnOwoKICB2YV9zdGFydChhLCBkZWYpOwoKICB3aGlsZShhcmdjIDwgY291bnRvZihkZWYtPmFyZ3YpICYmIChhcmcgPSB2YV9hcmcoYSwgc2l6ZV90KSkpIHsKICAgIGlmKGFyZyA9PSBERUZFUlJFRF9TRU5USU5FTCkKICAgICAgYnJlYWs7CiAgICBkZWYtPmFyZ3ZbYXJnYysrXSA9IChwdHJfdClhcmc7CiAgfQoKICB2YV9lbmQoYSk7CgogIGFzc2VydCghZGVmLT5vbmx5X29uY2UgfHwgZGVmLT5udW1fY2FsbHMgPCAxKTsKCiAgaWYoIWRlZi0+b25seV9vbmNlIHx8IGRlZi0+bnVtX2NhbGxzIDwgMSkgewoKICAgIGlmKGRlZi0+ZnVuYyA9PSAodm9pZCopJkpTX0NhbGwpCiAgICAgIHJldCA9IGRlZi0+ZnVuYyhhdlswXSwgYXZbMV0sIGF2WzJdLCBhdlszXSwgYXZbNF0sIChwdHJfdCkoc2l6ZV90KSgoYXJnYyAtIGRlZi0+YXJnYykgPiAwID8gMSA6IDApLCAocHRyX3QpJmF2W2RlZi0+YXJnY10sIDApOwogICAgZWxzZQogICAgICByZXQgPSBkZWYtPmZ1bmMoYXZbMF0sIGF2WzFdLCBhdlsyXSwgYXZbM10sIGF2WzRdLCBhdls1XSwgYXZbNl0sIGF2WzddKTsKCiAgICArK2RlZi0+bnVtX2NhbGxzOwogIH0KCiAgcmV0dXJuIHJldDsKfQoKdm9pZApkZWZlcnJlZF9kZXN0cnVjdG9yKHZvaWQqIHB0cikgewogIERlZmVycmVkKiBkZWYgPSBwdHI7CgogIGRvIHsKICAgIHB0ciA9IGRlZi0+bmV4dDsKICAgIGRlZi0+bmV4dCA9IE5VTEw7CiAgICBkZWZlcnJlZF9jYWxsKGRlZik7CiAgICBkZWZlcnJlZF9mcmVlKGRlZik7CiAgfSB3aGlsZSgoZGVmID0gcHRyKSk7Cn0KCnZvaWQKZGVmZXJyZWRfZmluYWxpemVyKEpTUnVudGltZSogcnQsIHZvaWQqIG9wYXF1ZSwgdm9pZCogcHRyKSB7CiAgZGVmZXJyZWRfZGVzdHJ1Y3RvcihvcGFxdWUpOwp9CgAAAAAAAAAA7AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wgAAAAAAADrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADsCAAAI2luY2x1ZGUgPGFzc2VydC5oPgojaW5jbHVkZSAiZGVmZXJyZWQuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKCnZvaWQKZGVmZXJyZWRfY2xlYXIoRGVmZXJyZWQqIGRlZikgewogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwogIGRlZi0+ZnVuYyA9IDA7CgogIGZvcihpbnQgaSA9IDA7IGkgPCA4OyBpKyspIHsgZGVmLT5hcmd2W2ldID0gMDsgfQp9Cgp2b2lkCmRlZmVycmVkX2ZyZWUoRGVmZXJyZWQqIGRlZikgewogIGlmKGRlZi0+bmV4dCkKICAgIGRlZmVycmVkX2Rlc3RydWN0b3IoZGVmLT5uZXh0KTsKCiAgaWYoLS1kZWYtPnJlZl9jb3VudCA9PSAwKSB7CiAgICBkZWZlcnJlZF9jbGVhcihkZWYpOwogICAgZnJlZShkZWYpOwogIH0KfQoKRGVmZXJyZWQqCmRlZmVycmVkX25ld3YocHRyX3QgZm4sIGludCBhcmdjLCBwdHJfdCBhcmd2W10pIHsKICBEZWZlcnJlZCogZGVmOwoKICBpZighKGRlZiA9IG1hbGxvYyhzaXplb2YoRGVmZXJyZWQpKSkpCiAgICByZXR1cm4gMDsKCiAgZGVmZXJyZWRfaW5pdChkZWYsIGZuLCBhcmdjLCBhcmd2KTsKCiAgZGVmLT5yZWZfY291bnQgPSAxOwogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwoKICByZXR1cm4gZGVmOwp9CgpEZWZlcnJlZCoKZGVmZXJyZWRfbmV3anMoSlNWYWx1ZSBmdW5jLCBKU0NvbnRleHQqIGN0eCkgewogIERlZmVycmVkKiBkZWY7CiAgLypwdHJfdCBhcmdzW10gPSB7CiAgICAgIGN0eCwKICAgICAgKChwdHJfdCopJnYpWzBdLAogICAgICAoKHB0cl90KikmdilbMV0sCiAgfTsKICBkZWYgPSBkZWZlcnJlZF9uZXd2KGZuLCAzLCBhcmdzKTsqLwogIGRlZiA9IGRlZmVycmVkX25ldygmSlNfQ2FsbCwgY3R4LCBmdW5jLCBKU19VTkRFRklORUQpOwoKICBkZWYtPm5leHQgPSBkZWZlcnJlZF9uZXcoJkpTX0ZyZWVWYWx1ZSwgY3R4LCBmdW5jKTsKICByZXR1cm4gZGVmOwp9Cgp2b2lkCmRlZmVycmVkX2luaXQoRGVmZXJyZWQqIGRlZiwgcHRyX3QgZm4sIGludCBhcmdjLCBwdHJfdCBhcmd2W10pIHsKICBpbnQgaTsKCiAgZGVmLT5yZWZfY291bnQgPSAwOwogIGRlZi0+ZnVuYyA9IGZuOwoKICBmb3IoaSA9IDA7IGkgPCA4OyBpKyspIHsgZGVmLT5hcmd2W2ldID0gaSA8IGFyZ2MgPyBhcmd2W2ldIDogMDsgfQoKICBkZWYtPmFyZ2MgPSBhcmdjOwogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwogIGRlZi0+bmV4dCA9IDA7Cn0KCkRvdWJsZVdvcmQKZGVmZXJyZWRfY2FsbF94KERlZmVycmVkKiBkZWYsIC4uLikgewogIHB0cl90IGNvbnN0KiBhdiA9IGRlZi0+YXJndjsKICBEb3VibGVXb3JkIHJldCA9IHt7MCwgMH19OwogIHZhX2xpc3QgYTsKICBpbnQgYXJnYyA9IGRlZi0+YXJnYzsKICBzaXplX3QgYXJnOwoKICB2YV9zdGFydChhLCBkZWYpOwoKICB3aGlsZShhcmdjIDwgY291bnRvZihkZWYtPmFyZ3YpICYmIChhcmcgPSB2YV9hcmcoYSwgc2l6ZV90KSkpIHsKICAgIGlmKGFyZyA9PSBERUZFUlJFRF9TRU5USU5FTCkKICAgICAgYnJlYWs7CiAgICBkZWYtPmFyZ3ZbYXJnYysrXSA9IChwdHJfdClhcmc7CiAgfQoKICB2YV9lbmQoYSk7CgogIGFzc2VydCghZGVmLT5vbmx5X29uY2UgfHwgZGVmLT5udW1fY2FsbHMgPCAxKTsKCiAgaWYoIWRlZi0+b25seV9vbmNlIHx8IGRlZi0+bnVtX2NhbGxzIDwgMSkgewoKICAgIGlmKGRlZi0+ZnVuYyA9PSAodm9pZCopJkpTX0NhbGwpCiAgICAgIHJldCA9IGRlZi0+ZnVuYyhhdlswXSwgYXZbMV0sIGF2WzJdLCBhdlszXSwgYXZbNF0sIChwdHJfdCkoc2l6ZV90KSgoYXJnYyAtIGRlZi0+YXJnYykgPiAwID8gMSA6IDApLCAocHRyX3QpJmF2W2RlZi0+YXJnY10sIDApOwogICAgZWxzZQogICAgICByZXQgPSBkZWYtPmZ1bmMoYXZbMF0sIGF2WzFdLCBhdlsyXSwgYXZbM10sIGF2WzRdLCBhdls1XSwgYXZbNl0sIGF2WzddKTsKCiAgICArK2RlZi0+bnVtX2NhbGxzOwogIH0KCiAgcmV0dXJuIHJldDsKfQoKdm9pZApkZWZlcnJlZF9kZXN0cnVjdG9yKHZvaWQqIHB0cikgewogIERlZmVycmVkKiBkZWYgPSBwdHI7CgogIGRvIHsKICAgIHB0ciA9IGRlZi0+bmV4dDsKICAgIGRlZi0+bmV4dCA9IE5VTEw7CiAgICBkZWZlcnJlZF9jYWxsKGRlZik7CiAgICBkZWZlcnJlZF9mcmVlKGRlZik7CiAgfSB3aGlsZSgoZGVmID0gcHRyKSk7Cn0KCnZvaWQKZGVmZXJyZWRfZmluYWxpemVyKEpTUnVudGltZSogcnQsIHZvaWQqIG9wYXF1ZSwgdm9pZCogcHRyKSB7CiAgZGVmZXJyZWRfZGVzdHJ1Y3RvcihvcGFxdWUpOwp9CgAAAAAAAAAA7AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wgAAAAAAADrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADsCAAAI2luY2x1ZGUgPGFzc2VydC5oPgojaW5jbHVkZSAiZGVmZXJyZWQuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKCnZvaWQKZGVmZXJyZWRfY2xlYXIoRGVmZXJyZWQqIGRlZikgewogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwogIGRlZi0+ZnVuYyA9IDA7CgogIGZvcihpbnQgaSA9IDA7IGkgPCA4OyBpKyspIHsgZGVmLT5hcmd2W2ldID0gMDsgfQp9Cgp2b2lkCmRlZmVycmVkX2ZyZWUoRGVmZXJyZWQqIGRlZikgewogIGlmKGRlZi0+bmV4dCkKICAgIGRlZmVycmVkX2Rlc3RydWN0b3IoZGVmLT5uZXh0KTsKCiAgaWYoLS1kZWYtPnJlZl9jb3VudCA9PSAwKSB7CiAgICBkZWZlcnJlZF9jbGVhcihkZWYpOwogICAgZnJlZShkZWYpOwogIH0KfQoKRGVmZXJyZWQqCmRlZmVycmVkX25ld3YocHRyX3QgZm4sIGludCBhcmdjLCBwdHJfdCBhcmd2W10pIHsKICBEZWZlcnJlZCogZGVmOwoKICBpZighKGRlZiA9IG1hbGxvYyhzaXplb2YoRGVmZXJyZWQpKSkpCiAgICByZXR1cm4gMDsKCiAgZGVmZXJyZWRfaW5pdChkZWYsIGZuLCBhcmdjLCBhcmd2KTsKCiAgZGVmLT5yZWZfY291bnQgPSAxOwogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwoKICByZXR1cm4gZGVmOwp9CgpEZWZlcnJlZCoKZGVmZXJyZWRfbmV3anMoSlNWYWx1ZSBmdW5jLCBKU0NvbnRleHQqIGN0eCkgewogIERlZmVycmVkKiBkZWY7CiAgLypwdHJfdCBhcmdzW10gPSB7CiAgICAgIGN0eCwKICAgICAgKChwdHJfdCopJnYpWzBdLAogICAgICAoKHB0cl90KikmdilbMV0sCiAgfTsKICBkZWYgPSBkZWZlcnJlZF9uZXd2KGZuLCAzLCBhcmdzKTsqLwogIGRlZiA9IGRlZmVycmVkX25ldygmSlNfQ2FsbCwgY3R4LCBmdW5jLCBKU19VTkRFRklORUQpOwoKICBkZWYtPm5leHQgPSBkZWZlcnJlZF9uZXcoJkpTX0ZyZWVWYWx1ZSwgY3R4LCBmdW5jKTsKICByZXR1cm4gZGVmOwp9Cgp2b2lkCmRlZmVycmVkX2luaXQoRGVmZXJyZWQqIGRlZiwgcHRyX3QgZm4sIGludCBhcmdjLCBwdHJfdCBhcmd2W10pIHsKICBpbnQgaTsKCiAgZGVmLT5yZWZfY291bnQgPSAwOwogIGRlZi0+ZnVuYyA9IGZuOwoKICBmb3IoaSA9IDA7IGkgPCA4OyBpKyspIHsgZGVmLT5hcmd2W2ldID0gaSA8IGFyZ2MgPyBhcmd2W2ldIDogMDsgfQoKICBkZWYtPmFyZ2MgPSBhcmdjOwogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwogIGRlZi0+bmV4dCA9IDA7Cn0KCkRvdWJsZVdvcmQKZGVmZXJyZWRfY2FsbF94KERlZmVycmVkKiBkZWYsIC4uLikgewogIHB0cl90IGNvbnN0KiBhdiA9IGRlZi0+YXJndjsKICBEb3VibGVXb3JkIHJldCA9IHt7MCwgMH19OwogIHZhX2xpc3QgYTsKICBpbnQgYXJnYyA9IGRlZi0+YXJnYzsKICBzaXplX3QgYXJnOwoKICB2YV9zdGFydChhLCBkZWYpOwoKICB3aGlsZShhcmdjIDwgY291bnRvZihkZWYtPmFyZ3YpICYmIChhcmcgPSB2YV9hcmcoYSwgc2l6ZV90KSkpIHsKICAgIGlmKGFyZyA9PSBERUZFUlJFRF9TRU5USU5FTCkKICAgICAgYnJlYWs7CiAgICBkZWYtPmFyZ3ZbYXJnYysrXSA9IChwdHJfdClhcmc7CiAgfQoKICB2YV9lbmQoYSk7CgogIGFzc2VydCghZGVmLT5vbmx5X29uY2UgfHwgZGVmLT5udW1fY2FsbHMgPCAxKTsKCiAgaWYoIWRlZi0+b25seV9vbmNlIHx8IGRlZi0+bnVtX2NhbGxzIDwgMSkgewoKICAgIGlmKGRlZi0+ZnVuYyA9PSAodm9pZCopJkpTX0NhbGwpCiAgICAgIHJldCA9IGRlZi0+ZnVuYyhhdlswXSwgYXZbMV0sIGF2WzJdLCBhdlszXSwgYXZbNF0sIChwdHJfdCkoc2l6ZV90KSgoYXJnYyAtIGRlZi0+YXJnYykgPiAwID8gMSA6IDApLCAocHRyX3QpJmF2W2RlZi0+YXJnY10sIDApOwogICAgZWxzZQogICAgICByZXQgPSBkZWYtPmZ1bmMoYXZbMF0sIGF2WzFdLCBhdlsyXSwgYXZbM10sIGF2WzRdLCBhdls1XSwgYXZbNl0sIGF2WzddKTsKCiAgICArK2RlZi0+bnVtX2NhbGxzOwogIH0KCiAgcmV0dXJuIHJldDsKfQoKdm9pZApkZWZlcnJlZF9kZXN0cnVjdG9yKHZvaWQqIHB0cikgewogIERlZmVycmVkKiBkZWYgPSBwdHI7CgogIGRvIHsKICAgIHB0ciA9IGRlZi0+bmV4dDsKICAgIGRlZi0+bmV4dCA9IE5VTEw7CiAgICBkZWZlcnJlZF9jYWxsKGRlZik7CiAgICBkZWZlcnJlZF9mcmVlKGRlZik7CiAgfSB3aGlsZSgoZGVmID0gcHRyKSk7Cn0KCnZvaWQKZGVmZXJyZWRfZmluYWxpemVyKEpTUnVudGltZSogcnQsIHZvaWQqIG9wYXF1ZSwgdm9pZCogcHRyKSB7CiAgZGVmZXJyZWRfZGVzdHJ1Y3RvcihvcGFxdWUpOwp9CgAAAAAAAAAA7AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wgAAAAAAADrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADsCAAAI2luY2x1ZGUgPGFzc2VydC5oPgojaW5jbHVkZSAiZGVmZXJyZWQuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKCnZvaWQKZGVmZXJyZWRfY2xlYXIoRGVmZXJyZWQqIGRlZikgewogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwogIGRlZi0+ZnVuYyA9IDA7CgogIGZvcihpbnQgaSA9IDA7IGkgPCA4OyBpKyspIHsgZGVmLT5hcmd2W2ldID0gMDsgfQp9Cgp2b2lkCmRlZmVycmVkX2ZyZWUoRGVmZXJyZWQqIGRlZikgewogIGlmKGRlZi0+bmV4dCkKICAgIGRlZmVycmVkX2Rlc3RydWN0b3IoZGVmLT5uZXh0KTsKCiAgaWYoLS1kZWYtPnJlZl9jb3VudCA9PSAwKSB7CiAgICBkZWZlcnJlZF9jbGVhcihkZWYpOwogICAgZnJlZShkZWYpOwogIH0KfQoKRGVmZXJyZWQqCmRlZmVycmVkX25ld3YocHRyX3QgZm4sIGludCBhcmdjLCBwdHJfdCBhcmd2W10pIHsKICBEZWZlcnJlZCogZGVmOwoKICBpZighKGRlZiA9IG1hbGxvYyhzaXplb2YoRGVmZXJyZWQpKSkpCiAgICByZXR1cm4gMDsKCiAgZGVmZXJyZWRfaW5pdChkZWYsIGZuLCBhcmdjLCBhcmd2KTsKCiAgZGVmLT5yZWZfY291bnQgPSAxOwogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwoKICByZXR1cm4gZGVmOwp9CgpEZWZlcnJlZCoKZGVmZXJyZWRfbmV3anMoSlNWYWx1ZSBmdW5jLCBKU0NvbnRleHQqIGN0eCkgewogIERlZmVycmVkKiBkZWY7CiAgLypwdHJfdCBhcmdzW10gPSB7CiAgICAgIGN0eCwKICAgICAgKChwdHJfdCopJnYpWzBdLAogICAgICAoKHB0cl90KikmdilbMV0sCiAgfTsKICBkZWYgPSBkZWZlcnJlZF9uZXd2KGZuLCAzLCBhcmdzKTsqLwogIGRlZiA9IGRlZmVycmVkX25ldygmSlNfQ2FsbCwgY3R4LCBmdW5jLCBKU19VTkRFRklORUQpOwoKICBkZWYtPm5leHQgPSBkZWZlcnJlZF9uZXcoJkpTX0ZyZWVWYWx1ZSwgY3R4LCBmdW5jKTsKICByZXR1cm4gZGVmOwp9Cgp2b2lkCmRlZmVycmVkX2luaXQoRGVmZXJyZWQqIGRlZiwgcHRyX3QgZm4sIGludCBhcmdjLCBwdHJfdCBhcmd2W10pIHsKICBpbnQgaTsKCiAgZGVmLT5yZWZfY291bnQgPSAwOwogIGRlZi0+ZnVuYyA9IGZuOwoKICBmb3IoaSA9IDA7IGkgPCA4OyBpKyspIHsgZGVmLT5hcmd2W2ldID0gaSA8IGFyZ2MgPyBhcmd2W2ldIDogMDsgfQoKICBkZWYtPmFyZ2MgPSBhcmdjOwogIGRlZi0+bnVtX2NhbGxzID0gMDsKICBkZWYtPm9ubHlfb25jZSA9IEZBTFNFOwogIGRlZi0+bmV4dCA9IDA7Cn0KCkRvdWJsZVdvcmQKZGVmZXJyZWRfY2FsbF94KERlZmVycmVkKiBkZWYsIC4uLikgewogIHB0cl90IGNvbnN0KiBhdiA9IGRlZi0+YXJndjsKICBEb3VibGVXb3JkIHJldCA9IHt7MCwgMH19OwogIHZhX2xpc3QgYTsKICBpbnQgYXJnYyA9IGRlZi0+YXJnYzsKICBzaXplX3QgYXJnOwoKICB2YV9zdGFydChhLCBkZWYpOwoKICB3aGlsZShhcmdjIDwgY291bnRvZihkZWYtPmFyZ3YpICYmIChhcmcgPSB2YV9hcmcoYSwgc2l6ZV90KSkpIHsKICAgIGlmKGFyZyA9PSBERUZFUlJFRF9TRU5USU5FTCkKICAgICAgYnJlYWs7CiAgICBkZWYtPmFyZ3ZbYXJnYysrXSA9IChwdHJfdClhcmc7CiAgfQoKICB2YV9lbmQoYSk7CgogIGFzc2VydCghZGVmLT5vbmx5X29uY2UgfHwgZGVmLT5udW1fY2FsbHMgPCAxKTsKCiAgaWYoIWRlZi0+b25seV9vbmNlIHx8IGRlZi0+bnVtX2NhbGxzIDwgMSkgewoKICAgIGlmKGRlZi0+ZnVuYyA9PSAodm9pZCopJkpTX0NhbGwpCiAgICAgIHJldCA9IGRlZi0+ZnVuYyhhdlswXSwgYXZbMV0sIGF2WzJdLCBhdlszXSwgYXZbNF0sIChwdHJfdCkoc2l6ZV90KSgoYXJnYyAtIGRlZi0+YXJnYykgPiAwID8gMSA6IDApLCAocHRyX3QpJmF2W2RlZi0+YXJnY10sIDApOwogICAgZWxzZQogICAgICByZXQgPSBkZWYtPmZ1bmMoYXZbMF0sIGF2WzFdLCBhdlsyXSwgYXZbM10sIGF2WzRdLCBhdls1XSwgYXZbNl0sIGF2WzddKTsKCiAgICArK2RlZi0+bnVtX2NhbGxzOwogIH0KCiAgcmV0dXJuIHJldDsKfQoKdm9pZApkZWZlcnJlZF9kZXN0cnVjdG9yKHZvaWQqIHB0cikgewogIERlZmVycmVkKiBkZWYgPSBwdHI7CgogIGRvIHsKICAgIHB0ciA9IGRlZi0+bmV4dDsKICAgIGRlZi0+bmV4dCA9IE5VTEw7CiAgICBkZWZlcnJlZF9jYWxsKGRlZik7CiAgICBkZWZlcnJlZF9mcmVlKGRlZik7CiAgfSB3aGlsZSgoZGVmID0gcHRyKSk7Cn0KCnZvaWQKZGVmZXJyZWRfZmluYWxpemVyKEpTUnVudGltZSogcnQsIHZvaWQqIG9wYXF1ZSwgdm9pZCogcHRyKSB7CiAgZGVmZXJyZWRfZGVzdHJ1Y3RvcihvcGFxdWUpOwp9CgAAAAAAAAAA7AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wgAAAAAAADrCAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/form-parser.c",
			"settings":
			{
				"buffer_size": 4950,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"cut",
					null,
					"AQAAAFILAAAAAAAAUgsAAAAAAABhAAAACgpzdHJ1Y3QgZm9ybV9wYXJzZXIqCmZvcm1fcGFyc2VyX2R1cChzdHJ1Y3QgZm9ybV9wYXJzZXIqIGZwKSB7CiAgKytmcC0+cmVmX2NvdW50OwogIHJldHVybiBmcDsKfQ",
					"AQAAAAAAAAABAAAAUgsAAAAAAACzCwAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADOEwAAI2luY2x1ZGUgImZvcm0tcGFyc2VyLmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCiNpbmNsdWRlICJ1dGlscy5oIgojaW5jbHVkZSAid3MuaCIKCnN0YXRpYyBpbnQKZm9ybV9wYXJzZXJfY2FsbGJhY2sodm9pZCogZGF0YSwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogZmlsZW5hbWUsIGNoYXIqIGJ1ZiwgaW50IGxlbiwgZW51bSBsd3Nfc3BhX2ZpbGV1cGxvYWRfc3RhdGVzIHN0YXRlKSB7CiAgc3RydWN0IGZvcm1fcGFyc2VyKiBmcCA9IGRhdGE7CiAgSlNDYWxsYmFjayogY2IgPSAwOwogIEpTVmFsdWUgYXJnc1syXSA9IHtKU19OVUxMLCBKU19OVUxMfTsKCiAgc3dpdGNoKHN0YXRlKSB7CiAgICBjYXNlIExXU19VRlNfQ09OVEVOVDoKICAgIGNhc2UgTFdTX1VGU19GSU5BTF9DT05URU5UOiB7CiAgICAgIGNiID0gJmZwLT5jYi5jb250ZW50OwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgaWYobGVuID4gMCkKICAgICAgICAgIGFyZ3NbMV0gPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY2ItPmN0eCwgKHVpbnQ4X3QqKWJ1ZiwgbGVuKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX1VGU19PUEVOOiB7CiAgICAgIGNiID0gJmZwLT5jYi5vcGVuOwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgaWYoIUpTX0lzVW5kZWZpbmVkKGZwLT5maWxlKSkgewogICAgICAgICAgaWYoZnAtPmNiLmNsb3NlLmN0eCkgewogICAgICAgICAgICBhcmdzWzFdID0gZnAtPmZpbGU7CiAgICAgICAgICAgIEpTVmFsdWUgcmV0ID0gY2FsbGJhY2tfZW1pdCgmZnAtPmNiLmNsb3NlLCAyLCBhcmdzKTsKICAgICAgICAgICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIHJldCk7CiAgICAgICAgICB9CiAgICAgICAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgICAgZnAtPmZpbGUgPSBKU19VTkRFRklORUQ7CiAgICAgICAgfQogICAgICAgIGlmKGZpbGVuYW1lKSB7CiAgICAgICAgICBmcC0+ZmlsZSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBmaWxlbmFtZSk7CiAgICAgICAgICBhcmdzWzFdID0gSlNfRHVwVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgIH0KICAgICAgICBpZighSlNfSXNVbmRlZmluZWQoZnAtPm5hbWUpKSB7CgogICAgICAgICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKICAgICAgICAgIGZwLT5uYW1lID0gSlNfVU5ERUZJTkVEOwogICAgICAgIH0KICAgICAgICBpZihuYW1lKSB7CiAgICAgICAgICBmcC0+bmFtZSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBuYW1lKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIExXU19VRlNfQ0xPU0U6IHsKICAgICAgY2IgPSAmZnAtPmNiLmNsb3NlOwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgLy8gYXJnc1swXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKICAgICAgICBpZighSlNfSXNVbmRlZmluZWQoZnAtPmZpbGUpKQogICAgICAgICAgYXJnc1sxXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5maWxlKTsKICAgICAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgIGZwLT5maWxlID0gSlNfVU5ERUZJTkVEOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgaWYoY2IgJiYgY2ItPmN0eCkgewogICAgSlNWYWx1ZSByZXQ7CgogICAgLyogIGlmKEpTX0lzVW5kZWZpbmVkKGZwLT5uYW1lKSAmJiBuYW1lKQogICAgICAgICAgYXJnc1swXSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBuYW1lKTsKICAgICAgICBlbHNlKi8KICAgIGlmKEpTX0lzVW5kZWZpbmVkKGZwLT5uYW1lKSkKICAgICAgYXJnc1swXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKCiAgICByZXQgPSBjYWxsYmFja19lbWl0KGNiLCAyLCBhcmdzKTsKCiAgICBpZihKU19Jc0V4Y2VwdGlvbihyZXQpKQogICAgICBqc19lcnJvcl9wcmludChjYi0+Y3R4LCBmcC0+ZXhjZXB0aW9uID0gSlNfR2V0RXhjZXB0aW9uKGNiLT5jdHgpKTsKCiAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgYXJnc1swXSk7CiAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgYXJnc1sxXSk7CiAgfQoKICByZXR1cm4gMDsKfQoKdm9pZApmb3JtX3BhcnNlcl9pbml0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIHN0cnVjdCBzb2NrZXQqIHdzLCBpbnQgbnBhcmFtcywgY29uc3QgY2hhciogY29uc3QqIHBhcmFtX25hbWVzLCBzaXplX3QgY2h1bmtfc2l6ZSkgewoKICBtZW1zZXQoJmZwLT5zcGFfY3JlYXRlX2luZm8sIDAsIHNpemVvZihzdHJ1Y3QgbHdzX3NwYV9jcmVhdGVfaW5mbykpOwogIGZwLT53cyA9IHdzX2R1cCh3cyk7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5jb3VudF9wYXJhbXMgPSBucGFyYW1zOwogIGZwLT5zcGFfY3JlYXRlX2luZm8ucGFyYW1fbmFtZXMgPSBwYXJhbV9uYW1lczsKICBmcC0+c3BhX2NyZWF0ZV9pbmZvLm1heF9zdG9yYWdlID0gY2h1bmtfc2l6ZSArIDE7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5vcHRfY2IgPSAmZm9ybV9wYXJzZXJfY2FsbGJhY2s7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5vcHRfZGF0YSA9IGZwOwoKICBmcC0+c3BhID0gbHdzX3NwYV9jcmVhdGVfdmlhX2luZm8od3MtPmx3c2ksICZmcC0+c3BhX2NyZWF0ZV9pbmZvKTsKICBmcC0+ZXhjZXB0aW9uID0gSlNfTlVMTDsKICBmcC0+bmFtZSA9IEpTX1VOREVGSU5FRDsKICBmcC0+ZmlsZSA9IEpTX1VOREVGSU5FRDsKfQoKc3RydWN0IGZvcm1fcGFyc2VyKgpmb3JtX3BhcnNlcl9hbGxvYyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCBmb3JtX3BhcnNlciogcmV0OwoKICByZXQgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKHN0cnVjdCBmb3JtX3BhcnNlcikpOwogIHJldC0+cmVmX2NvdW50ID0gMTsKICByZXR1cm4gcmV0Owp9Cgp2b2lkCmZvcm1fcGFyc2VyX2NsZWFyKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTQ29udGV4dCogY3R4KSB7CgogIGlmKGZwLT5zcGEpIHsKICAgIGx3c19zcGFfZGVzdHJveShmcC0+c3BhKTsKICAgIGZwLT5zcGEgPSAwOwogIH0KCiAgaWYoZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lcykgewogICAganNfZnJlZShjdHgsICh2b2lkKilmcC0+c3BhX2NyZWF0ZV9pbmZvLnBhcmFtX25hbWVzKTsKICB9CiAgbWVtc2V0KCZmcC0+c3BhX2NyZWF0ZV9pbmZvLCAwLCBzaXplb2Yoc3RydWN0IGx3c19zcGFfY3JlYXRlX2luZm8pKTsKCiAgRlJFRUNCKGZwLT5jYi5jb250ZW50KTsKICBGUkVFQ0IoZnAtPmNiLm9wZW4pOwogIEZSRUVDQihmcC0+Y2IuY2xvc2UpOwp9Cgp2b2lkCmZvcm1fcGFyc2VyX2NsZWFyX3J0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTUnVudGltZSogcnQpIHsKCiAgaWYoZnAtPnNwYSkgewogICAgbHdzX3NwYV9kZXN0cm95KGZwLT5zcGEpOwogICAgZnAtPnNwYSA9IDA7CiAgfQoKICBpZihmcC0+c3BhX2NyZWF0ZV9pbmZvLnBhcmFtX25hbWVzKSB7CiAgICBqc19mcmVlX3J0KHJ0LCAodm9pZCopZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lcyk7CiAgfQogIG1lbXNldCgmZnAtPnNwYV9jcmVhdGVfaW5mbywgMCwgc2l6ZW9mKHN0cnVjdCBsd3Nfc3BhX2NyZWF0ZV9pbmZvKSk7CgogIEZSRUVDQl9SVChmcC0+Y2IuY29udGVudCk7CiAgRlJFRUNCX1JUKGZwLT5jYi5vcGVuKTsKICBGUkVFQ0JfUlQoZnAtPmNiLmNsb3NlKTsKfQoKdm9pZApmb3JtX3BhcnNlcl9mcmVlKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoLS1mcC0+cmVmX2NvdW50ID09IDApIHsKICAgIHdzX2ZyZWUoZnAtPndzLCBjdHgpOwogICAgZm9ybV9wYXJzZXJfY2xlYXIoZnAsIGN0eCk7CiAgICBqc19mcmVlKGN0eCwgZnApOwogIH0KfQoKdm9pZApmb3JtX3BhcnNlcl9mcmVlX3J0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTUnVudGltZSogcnQpIHsKICBpZigtLWZwLT5yZWZfY291bnQgPT0gMCkgewogICAgd3NfZnJlZV9ydChmcC0+d3MsIHJ0KTsKICAgIGZvcm1fcGFyc2VyX2NsZWFyX3J0KGZwLCBydCk7CiAgICBqc19mcmVlX3J0KHJ0LCBmcCk7CiAgfQp9Cgpjb25zdCBjaGFyKgpmb3JtX3BhcnNlcl9wYXJhbV9uYW1lKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGludCBpbmRleCkgewogIGlmKGluZGV4ID49IDAgJiYgaW5kZXggPCBmcC0+c3BhX2NyZWF0ZV9pbmZvLmNvdW50X3BhcmFtcykgewogICAgcmV0dXJuIGZwLT5zcGFfY3JlYXRlX2luZm8ucGFyYW1fbmFtZXNbaW5kZXhdOwogIH0KICByZXR1cm4gMDsKfQoKYm9vbApmb3JtX3BhcnNlcl9wYXJhbV92YWxpZChzdHJ1Y3QgZm9ybV9wYXJzZXIqIGZwLCBpbnQgaW5kZXgpIHsKICBpZihpbmRleCA+PSAwICYmIGluZGV4IDwgZnAtPnNwYV9jcmVhdGVfaW5mby5jb3VudF9wYXJhbXMpIHsKICAgIHJldHVybiB0cnVlOwogIH0KICByZXR1cm4gZmFsc2U7Cn0KCnNpemVfdApmb3JtX3BhcnNlcl9wYXJhbV9jb3VudChzdHJ1Y3QgZm9ybV9wYXJzZXIqIGZwKSB7CiAgcmV0dXJuIGZwLT5zcGFfY3JlYXRlX2luZm8uY291bnRfcGFyYW1zOwp9CgppbnQKZm9ybV9wYXJzZXJfcGFyYW1faW5kZXgoc3RydWN0IGZvcm1fcGFyc2VyKiBmcCwgY29uc3QgY2hhciogbmFtZSkgewogIGludCBpOwogIGZvcihpID0gMDsgaSA8IGZwLT5zcGFfY3JlYXRlX2luZm8uY291bnRfcGFyYW1zOyBpKyspIHsKICAgIGlmKCFzdHJjbXAoZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lc1tpXSwgbmFtZSkpCiAgICAgIHJldHVybiBpOwogIH0KICByZXR1cm4gLTE7Cn0KCmJvb2wKZm9ybV9wYXJzZXJfcGFyYW1fZXhpc3RzKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGNvbnN0IGNoYXIqIG5hbWUpIHsKICBpbnQgaSA9IGZvcm1fcGFyc2VyX3BhcmFtX2luZGV4KGZwLCBuYW1lKTsKCiAgcmV0dXJuIGkgIT0gLTE7Cn0KCmludApmb3JtX3BhcnNlcl9wcm9jZXNzKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGNvbnN0IHZvaWQqIGRhdGEsIHNpemVfdCBsZW4pIHsKICBpbnQgcmV0dmFsID0gbHdzX3NwYV9wcm9jZXNzKGZwLT5zcGEsIGRhdGEsIGxlbik7CiAgZnAtPnJlYWQgKz0gbGVuOwogIHJldHVybiByZXR2YWw7Cn0KAAAAAAAAAADOEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgsAAAAAAABSCwAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADOEwAAI2luY2x1ZGUgImZvcm0tcGFyc2VyLmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCiNpbmNsdWRlICJ1dGlscy5oIgojaW5jbHVkZSAid3MuaCIKCnN0YXRpYyBpbnQKZm9ybV9wYXJzZXJfY2FsbGJhY2sodm9pZCogZGF0YSwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogZmlsZW5hbWUsIGNoYXIqIGJ1ZiwgaW50IGxlbiwgZW51bSBsd3Nfc3BhX2ZpbGV1cGxvYWRfc3RhdGVzIHN0YXRlKSB7CiAgc3RydWN0IGZvcm1fcGFyc2VyKiBmcCA9IGRhdGE7CiAgSlNDYWxsYmFjayogY2IgPSAwOwogIEpTVmFsdWUgYXJnc1syXSA9IHtKU19OVUxMLCBKU19OVUxMfTsKCiAgc3dpdGNoKHN0YXRlKSB7CiAgICBjYXNlIExXU19VRlNfQ09OVEVOVDoKICAgIGNhc2UgTFdTX1VGU19GSU5BTF9DT05URU5UOiB7CiAgICAgIGNiID0gJmZwLT5jYi5jb250ZW50OwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgaWYobGVuID4gMCkKICAgICAgICAgIGFyZ3NbMV0gPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY2ItPmN0eCwgKHVpbnQ4X3QqKWJ1ZiwgbGVuKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX1VGU19PUEVOOiB7CiAgICAgIGNiID0gJmZwLT5jYi5vcGVuOwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgaWYoIUpTX0lzVW5kZWZpbmVkKGZwLT5maWxlKSkgewogICAgICAgICAgaWYoZnAtPmNiLmNsb3NlLmN0eCkgewogICAgICAgICAgICBhcmdzWzFdID0gZnAtPmZpbGU7CiAgICAgICAgICAgIEpTVmFsdWUgcmV0ID0gY2FsbGJhY2tfZW1pdCgmZnAtPmNiLmNsb3NlLCAyLCBhcmdzKTsKICAgICAgICAgICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIHJldCk7CiAgICAgICAgICB9CiAgICAgICAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgICAgZnAtPmZpbGUgPSBKU19VTkRFRklORUQ7CiAgICAgICAgfQogICAgICAgIGlmKGZpbGVuYW1lKSB7CiAgICAgICAgICBmcC0+ZmlsZSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBmaWxlbmFtZSk7CiAgICAgICAgICBhcmdzWzFdID0gSlNfRHVwVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgIH0KICAgICAgICBpZighSlNfSXNVbmRlZmluZWQoZnAtPm5hbWUpKSB7CgogICAgICAgICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKICAgICAgICAgIGZwLT5uYW1lID0gSlNfVU5ERUZJTkVEOwogICAgICAgIH0KICAgICAgICBpZihuYW1lKSB7CiAgICAgICAgICBmcC0+bmFtZSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBuYW1lKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIExXU19VRlNfQ0xPU0U6IHsKICAgICAgY2IgPSAmZnAtPmNiLmNsb3NlOwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgLy8gYXJnc1swXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKICAgICAgICBpZighSlNfSXNVbmRlZmluZWQoZnAtPmZpbGUpKQogICAgICAgICAgYXJnc1sxXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5maWxlKTsKICAgICAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgIGZwLT5maWxlID0gSlNfVU5ERUZJTkVEOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgaWYoY2IgJiYgY2ItPmN0eCkgewogICAgSlNWYWx1ZSByZXQ7CgogICAgLyogIGlmKEpTX0lzVW5kZWZpbmVkKGZwLT5uYW1lKSAmJiBuYW1lKQogICAgICAgICAgYXJnc1swXSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBuYW1lKTsKICAgICAgICBlbHNlKi8KICAgIGlmKEpTX0lzVW5kZWZpbmVkKGZwLT5uYW1lKSkKICAgICAgYXJnc1swXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKCiAgICByZXQgPSBjYWxsYmFja19lbWl0KGNiLCAyLCBhcmdzKTsKCiAgICBpZihKU19Jc0V4Y2VwdGlvbihyZXQpKQogICAgICBqc19lcnJvcl9wcmludChjYi0+Y3R4LCBmcC0+ZXhjZXB0aW9uID0gSlNfR2V0RXhjZXB0aW9uKGNiLT5jdHgpKTsKCiAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgYXJnc1swXSk7CiAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgYXJnc1sxXSk7CiAgfQoKICByZXR1cm4gMDsKfQoKdm9pZApmb3JtX3BhcnNlcl9pbml0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIHN0cnVjdCBzb2NrZXQqIHdzLCBpbnQgbnBhcmFtcywgY29uc3QgY2hhciogY29uc3QqIHBhcmFtX25hbWVzLCBzaXplX3QgY2h1bmtfc2l6ZSkgewoKICBtZW1zZXQoJmZwLT5zcGFfY3JlYXRlX2luZm8sIDAsIHNpemVvZihzdHJ1Y3QgbHdzX3NwYV9jcmVhdGVfaW5mbykpOwogIGZwLT53cyA9IHdzX2R1cCh3cyk7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5jb3VudF9wYXJhbXMgPSBucGFyYW1zOwogIGZwLT5zcGFfY3JlYXRlX2luZm8ucGFyYW1fbmFtZXMgPSBwYXJhbV9uYW1lczsKICBmcC0+c3BhX2NyZWF0ZV9pbmZvLm1heF9zdG9yYWdlID0gY2h1bmtfc2l6ZSArIDE7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5vcHRfY2IgPSAmZm9ybV9wYXJzZXJfY2FsbGJhY2s7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5vcHRfZGF0YSA9IGZwOwoKICBmcC0+c3BhID0gbHdzX3NwYV9jcmVhdGVfdmlhX2luZm8od3MtPmx3c2ksICZmcC0+c3BhX2NyZWF0ZV9pbmZvKTsKICBmcC0+ZXhjZXB0aW9uID0gSlNfTlVMTDsKICBmcC0+bmFtZSA9IEpTX1VOREVGSU5FRDsKICBmcC0+ZmlsZSA9IEpTX1VOREVGSU5FRDsKfQoKc3RydWN0IGZvcm1fcGFyc2VyKgpmb3JtX3BhcnNlcl9hbGxvYyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCBmb3JtX3BhcnNlciogcmV0OwoKICByZXQgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKHN0cnVjdCBmb3JtX3BhcnNlcikpOwogIHJldC0+cmVmX2NvdW50ID0gMTsKICByZXR1cm4gcmV0Owp9Cgp2b2lkCmZvcm1fcGFyc2VyX2NsZWFyKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTQ29udGV4dCogY3R4KSB7CgogIGlmKGZwLT5zcGEpIHsKICAgIGx3c19zcGFfZGVzdHJveShmcC0+c3BhKTsKICAgIGZwLT5zcGEgPSAwOwogIH0KCiAgaWYoZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lcykgewogICAganNfZnJlZShjdHgsICh2b2lkKilmcC0+c3BhX2NyZWF0ZV9pbmZvLnBhcmFtX25hbWVzKTsKICB9CiAgbWVtc2V0KCZmcC0+c3BhX2NyZWF0ZV9pbmZvLCAwLCBzaXplb2Yoc3RydWN0IGx3c19zcGFfY3JlYXRlX2luZm8pKTsKCiAgRlJFRUNCKGZwLT5jYi5jb250ZW50KTsKICBGUkVFQ0IoZnAtPmNiLm9wZW4pOwogIEZSRUVDQihmcC0+Y2IuY2xvc2UpOwp9Cgp2b2lkCmZvcm1fcGFyc2VyX2NsZWFyX3J0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTUnVudGltZSogcnQpIHsKCiAgaWYoZnAtPnNwYSkgewogICAgbHdzX3NwYV9kZXN0cm95KGZwLT5zcGEpOwogICAgZnAtPnNwYSA9IDA7CiAgfQoKICBpZihmcC0+c3BhX2NyZWF0ZV9pbmZvLnBhcmFtX25hbWVzKSB7CiAgICBqc19mcmVlX3J0KHJ0LCAodm9pZCopZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lcyk7CiAgfQogIG1lbXNldCgmZnAtPnNwYV9jcmVhdGVfaW5mbywgMCwgc2l6ZW9mKHN0cnVjdCBsd3Nfc3BhX2NyZWF0ZV9pbmZvKSk7CgogIEZSRUVDQl9SVChmcC0+Y2IuY29udGVudCk7CiAgRlJFRUNCX1JUKGZwLT5jYi5vcGVuKTsKICBGUkVFQ0JfUlQoZnAtPmNiLmNsb3NlKTsKfQoKdm9pZApmb3JtX3BhcnNlcl9mcmVlKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoLS1mcC0+cmVmX2NvdW50ID09IDApIHsKICAgIHdzX2ZyZWUoZnAtPndzLCBjdHgpOwogICAgZm9ybV9wYXJzZXJfY2xlYXIoZnAsIGN0eCk7CiAgICBqc19mcmVlKGN0eCwgZnApOwogIH0KfQoKdm9pZApmb3JtX3BhcnNlcl9mcmVlX3J0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTUnVudGltZSogcnQpIHsKICBpZigtLWZwLT5yZWZfY291bnQgPT0gMCkgewogICAgd3NfZnJlZV9ydChmcC0+d3MsIHJ0KTsKICAgIGZvcm1fcGFyc2VyX2NsZWFyX3J0KGZwLCBydCk7CiAgICBqc19mcmVlX3J0KHJ0LCBmcCk7CiAgfQp9Cgpjb25zdCBjaGFyKgpmb3JtX3BhcnNlcl9wYXJhbV9uYW1lKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGludCBpbmRleCkgewogIGlmKGluZGV4ID49IDAgJiYgaW5kZXggPCBmcC0+c3BhX2NyZWF0ZV9pbmZvLmNvdW50X3BhcmFtcykgewogICAgcmV0dXJuIGZwLT5zcGFfY3JlYXRlX2luZm8ucGFyYW1fbmFtZXNbaW5kZXhdOwogIH0KICByZXR1cm4gMDsKfQoKYm9vbApmb3JtX3BhcnNlcl9wYXJhbV92YWxpZChzdHJ1Y3QgZm9ybV9wYXJzZXIqIGZwLCBpbnQgaW5kZXgpIHsKICBpZihpbmRleCA+PSAwICYmIGluZGV4IDwgZnAtPnNwYV9jcmVhdGVfaW5mby5jb3VudF9wYXJhbXMpIHsKICAgIHJldHVybiB0cnVlOwogIH0KICByZXR1cm4gZmFsc2U7Cn0KCnNpemVfdApmb3JtX3BhcnNlcl9wYXJhbV9jb3VudChzdHJ1Y3QgZm9ybV9wYXJzZXIqIGZwKSB7CiAgcmV0dXJuIGZwLT5zcGFfY3JlYXRlX2luZm8uY291bnRfcGFyYW1zOwp9CgppbnQKZm9ybV9wYXJzZXJfcGFyYW1faW5kZXgoc3RydWN0IGZvcm1fcGFyc2VyKiBmcCwgY29uc3QgY2hhciogbmFtZSkgewogIGludCBpOwogIGZvcihpID0gMDsgaSA8IGZwLT5zcGFfY3JlYXRlX2luZm8uY291bnRfcGFyYW1zOyBpKyspIHsKICAgIGlmKCFzdHJjbXAoZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lc1tpXSwgbmFtZSkpCiAgICAgIHJldHVybiBpOwogIH0KICByZXR1cm4gLTE7Cn0KCmJvb2wKZm9ybV9wYXJzZXJfcGFyYW1fZXhpc3RzKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGNvbnN0IGNoYXIqIG5hbWUpIHsKICBpbnQgaSA9IGZvcm1fcGFyc2VyX3BhcmFtX2luZGV4KGZwLCBuYW1lKTsKCiAgcmV0dXJuIGkgIT0gLTE7Cn0KCmludApmb3JtX3BhcnNlcl9wcm9jZXNzKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGNvbnN0IHZvaWQqIGRhdGEsIHNpemVfdCBsZW4pIHsKICBpbnQgcmV0dmFsID0gbHdzX3NwYV9wcm9jZXNzKGZwLT5zcGEsIGRhdGEsIGxlbik7CiAgZnAtPnJlYWQgKz0gbGVuOwogIHJldHVybiByZXR2YWw7Cn0KAAAAAAAAAADOEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgsAAAAAAABSCwAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADOEwAAI2luY2x1ZGUgImZvcm0tcGFyc2VyLmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCiNpbmNsdWRlICJ1dGlscy5oIgojaW5jbHVkZSAid3MuaCIKCnN0YXRpYyBpbnQKZm9ybV9wYXJzZXJfY2FsbGJhY2sodm9pZCogZGF0YSwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogZmlsZW5hbWUsIGNoYXIqIGJ1ZiwgaW50IGxlbiwgZW51bSBsd3Nfc3BhX2ZpbGV1cGxvYWRfc3RhdGVzIHN0YXRlKSB7CiAgc3RydWN0IGZvcm1fcGFyc2VyKiBmcCA9IGRhdGE7CiAgSlNDYWxsYmFjayogY2IgPSAwOwogIEpTVmFsdWUgYXJnc1syXSA9IHtKU19OVUxMLCBKU19OVUxMfTsKCiAgc3dpdGNoKHN0YXRlKSB7CiAgICBjYXNlIExXU19VRlNfQ09OVEVOVDoKICAgIGNhc2UgTFdTX1VGU19GSU5BTF9DT05URU5UOiB7CiAgICAgIGNiID0gJmZwLT5jYi5jb250ZW50OwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgaWYobGVuID4gMCkKICAgICAgICAgIGFyZ3NbMV0gPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY2ItPmN0eCwgKHVpbnQ4X3QqKWJ1ZiwgbGVuKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX1VGU19PUEVOOiB7CiAgICAgIGNiID0gJmZwLT5jYi5vcGVuOwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgaWYoIUpTX0lzVW5kZWZpbmVkKGZwLT5maWxlKSkgewogICAgICAgICAgaWYoZnAtPmNiLmNsb3NlLmN0eCkgewogICAgICAgICAgICBhcmdzWzFdID0gZnAtPmZpbGU7CiAgICAgICAgICAgIEpTVmFsdWUgcmV0ID0gY2FsbGJhY2tfZW1pdCgmZnAtPmNiLmNsb3NlLCAyLCBhcmdzKTsKICAgICAgICAgICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIHJldCk7CiAgICAgICAgICB9CiAgICAgICAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgICAgZnAtPmZpbGUgPSBKU19VTkRFRklORUQ7CiAgICAgICAgfQogICAgICAgIGlmKGZpbGVuYW1lKSB7CiAgICAgICAgICBmcC0+ZmlsZSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBmaWxlbmFtZSk7CiAgICAgICAgICBhcmdzWzFdID0gSlNfRHVwVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgIH0KICAgICAgICBpZighSlNfSXNVbmRlZmluZWQoZnAtPm5hbWUpKSB7CgogICAgICAgICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKICAgICAgICAgIGZwLT5uYW1lID0gSlNfVU5ERUZJTkVEOwogICAgICAgIH0KICAgICAgICBpZihuYW1lKSB7CiAgICAgICAgICBmcC0+bmFtZSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBuYW1lKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIExXU19VRlNfQ0xPU0U6IHsKICAgICAgY2IgPSAmZnAtPmNiLmNsb3NlOwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgLy8gYXJnc1swXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKICAgICAgICBpZighSlNfSXNVbmRlZmluZWQoZnAtPmZpbGUpKQogICAgICAgICAgYXJnc1sxXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5maWxlKTsKICAgICAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgIGZwLT5maWxlID0gSlNfVU5ERUZJTkVEOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgaWYoY2IgJiYgY2ItPmN0eCkgewogICAgSlNWYWx1ZSByZXQ7CgogICAgLyogIGlmKEpTX0lzVW5kZWZpbmVkKGZwLT5uYW1lKSAmJiBuYW1lKQogICAgICAgICAgYXJnc1swXSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBuYW1lKTsKICAgICAgICBlbHNlKi8KICAgIGlmKEpTX0lzVW5kZWZpbmVkKGZwLT5uYW1lKSkKICAgICAgYXJnc1swXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKCiAgICByZXQgPSBjYWxsYmFja19lbWl0KGNiLCAyLCBhcmdzKTsKCiAgICBpZihKU19Jc0V4Y2VwdGlvbihyZXQpKQogICAgICBqc19lcnJvcl9wcmludChjYi0+Y3R4LCBmcC0+ZXhjZXB0aW9uID0gSlNfR2V0RXhjZXB0aW9uKGNiLT5jdHgpKTsKCiAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgYXJnc1swXSk7CiAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgYXJnc1sxXSk7CiAgfQoKICByZXR1cm4gMDsKfQoKdm9pZApmb3JtX3BhcnNlcl9pbml0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIHN0cnVjdCBzb2NrZXQqIHdzLCBpbnQgbnBhcmFtcywgY29uc3QgY2hhciogY29uc3QqIHBhcmFtX25hbWVzLCBzaXplX3QgY2h1bmtfc2l6ZSkgewoKICBtZW1zZXQoJmZwLT5zcGFfY3JlYXRlX2luZm8sIDAsIHNpemVvZihzdHJ1Y3QgbHdzX3NwYV9jcmVhdGVfaW5mbykpOwogIGZwLT53cyA9IHdzX2R1cCh3cyk7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5jb3VudF9wYXJhbXMgPSBucGFyYW1zOwogIGZwLT5zcGFfY3JlYXRlX2luZm8ucGFyYW1fbmFtZXMgPSBwYXJhbV9uYW1lczsKICBmcC0+c3BhX2NyZWF0ZV9pbmZvLm1heF9zdG9yYWdlID0gY2h1bmtfc2l6ZSArIDE7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5vcHRfY2IgPSAmZm9ybV9wYXJzZXJfY2FsbGJhY2s7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5vcHRfZGF0YSA9IGZwOwoKICBmcC0+c3BhID0gbHdzX3NwYV9jcmVhdGVfdmlhX2luZm8od3MtPmx3c2ksICZmcC0+c3BhX2NyZWF0ZV9pbmZvKTsKICBmcC0+ZXhjZXB0aW9uID0gSlNfTlVMTDsKICBmcC0+bmFtZSA9IEpTX1VOREVGSU5FRDsKICBmcC0+ZmlsZSA9IEpTX1VOREVGSU5FRDsKfQoKc3RydWN0IGZvcm1fcGFyc2VyKgpmb3JtX3BhcnNlcl9hbGxvYyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCBmb3JtX3BhcnNlciogcmV0OwoKICByZXQgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKHN0cnVjdCBmb3JtX3BhcnNlcikpOwogIHJldC0+cmVmX2NvdW50ID0gMTsKICByZXR1cm4gcmV0Owp9Cgp2b2lkCmZvcm1fcGFyc2VyX2NsZWFyKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTQ29udGV4dCogY3R4KSB7CgogIGlmKGZwLT5zcGEpIHsKICAgIGx3c19zcGFfZGVzdHJveShmcC0+c3BhKTsKICAgIGZwLT5zcGEgPSAwOwogIH0KCiAgaWYoZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lcykgewogICAganNfZnJlZShjdHgsICh2b2lkKilmcC0+c3BhX2NyZWF0ZV9pbmZvLnBhcmFtX25hbWVzKTsKICB9CiAgbWVtc2V0KCZmcC0+c3BhX2NyZWF0ZV9pbmZvLCAwLCBzaXplb2Yoc3RydWN0IGx3c19zcGFfY3JlYXRlX2luZm8pKTsKCiAgRlJFRUNCKGZwLT5jYi5jb250ZW50KTsKICBGUkVFQ0IoZnAtPmNiLm9wZW4pOwogIEZSRUVDQihmcC0+Y2IuY2xvc2UpOwp9Cgp2b2lkCmZvcm1fcGFyc2VyX2NsZWFyX3J0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTUnVudGltZSogcnQpIHsKCiAgaWYoZnAtPnNwYSkgewogICAgbHdzX3NwYV9kZXN0cm95KGZwLT5zcGEpOwogICAgZnAtPnNwYSA9IDA7CiAgfQoKICBpZihmcC0+c3BhX2NyZWF0ZV9pbmZvLnBhcmFtX25hbWVzKSB7CiAgICBqc19mcmVlX3J0KHJ0LCAodm9pZCopZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lcyk7CiAgfQogIG1lbXNldCgmZnAtPnNwYV9jcmVhdGVfaW5mbywgMCwgc2l6ZW9mKHN0cnVjdCBsd3Nfc3BhX2NyZWF0ZV9pbmZvKSk7CgogIEZSRUVDQl9SVChmcC0+Y2IuY29udGVudCk7CiAgRlJFRUNCX1JUKGZwLT5jYi5vcGVuKTsKICBGUkVFQ0JfUlQoZnAtPmNiLmNsb3NlKTsKfQoKdm9pZApmb3JtX3BhcnNlcl9mcmVlKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoLS1mcC0+cmVmX2NvdW50ID09IDApIHsKICAgIHdzX2ZyZWUoZnAtPndzLCBjdHgpOwogICAgZm9ybV9wYXJzZXJfY2xlYXIoZnAsIGN0eCk7CiAgICBqc19mcmVlKGN0eCwgZnApOwogIH0KfQoKdm9pZApmb3JtX3BhcnNlcl9mcmVlX3J0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTUnVudGltZSogcnQpIHsKICBpZigtLWZwLT5yZWZfY291bnQgPT0gMCkgewogICAgd3NfZnJlZV9ydChmcC0+d3MsIHJ0KTsKICAgIGZvcm1fcGFyc2VyX2NsZWFyX3J0KGZwLCBydCk7CiAgICBqc19mcmVlX3J0KHJ0LCBmcCk7CiAgfQp9Cgpjb25zdCBjaGFyKgpmb3JtX3BhcnNlcl9wYXJhbV9uYW1lKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGludCBpbmRleCkgewogIGlmKGluZGV4ID49IDAgJiYgaW5kZXggPCBmcC0+c3BhX2NyZWF0ZV9pbmZvLmNvdW50X3BhcmFtcykgewogICAgcmV0dXJuIGZwLT5zcGFfY3JlYXRlX2luZm8ucGFyYW1fbmFtZXNbaW5kZXhdOwogIH0KICByZXR1cm4gMDsKfQoKYm9vbApmb3JtX3BhcnNlcl9wYXJhbV92YWxpZChzdHJ1Y3QgZm9ybV9wYXJzZXIqIGZwLCBpbnQgaW5kZXgpIHsKICBpZihpbmRleCA+PSAwICYmIGluZGV4IDwgZnAtPnNwYV9jcmVhdGVfaW5mby5jb3VudF9wYXJhbXMpIHsKICAgIHJldHVybiB0cnVlOwogIH0KICByZXR1cm4gZmFsc2U7Cn0KCnNpemVfdApmb3JtX3BhcnNlcl9wYXJhbV9jb3VudChzdHJ1Y3QgZm9ybV9wYXJzZXIqIGZwKSB7CiAgcmV0dXJuIGZwLT5zcGFfY3JlYXRlX2luZm8uY291bnRfcGFyYW1zOwp9CgppbnQKZm9ybV9wYXJzZXJfcGFyYW1faW5kZXgoc3RydWN0IGZvcm1fcGFyc2VyKiBmcCwgY29uc3QgY2hhciogbmFtZSkgewogIGludCBpOwogIGZvcihpID0gMDsgaSA8IGZwLT5zcGFfY3JlYXRlX2luZm8uY291bnRfcGFyYW1zOyBpKyspIHsKICAgIGlmKCFzdHJjbXAoZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lc1tpXSwgbmFtZSkpCiAgICAgIHJldHVybiBpOwogIH0KICByZXR1cm4gLTE7Cn0KCmJvb2wKZm9ybV9wYXJzZXJfcGFyYW1fZXhpc3RzKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGNvbnN0IGNoYXIqIG5hbWUpIHsKICBpbnQgaSA9IGZvcm1fcGFyc2VyX3BhcmFtX2luZGV4KGZwLCBuYW1lKTsKCiAgcmV0dXJuIGkgIT0gLTE7Cn0KCmludApmb3JtX3BhcnNlcl9wcm9jZXNzKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGNvbnN0IHZvaWQqIGRhdGEsIHNpemVfdCBsZW4pIHsKICBpbnQgcmV0dmFsID0gbHdzX3NwYV9wcm9jZXNzKGZwLT5zcGEsIGRhdGEsIGxlbik7CiAgZnAtPnJlYWQgKz0gbGVuOwogIHJldHVybiByZXR2YWw7Cn0KAAAAAAAAAADOEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgsAAAAAAABSCwAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADOEwAAI2luY2x1ZGUgImZvcm0tcGFyc2VyLmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCiNpbmNsdWRlICJ1dGlscy5oIgojaW5jbHVkZSAid3MuaCIKCnN0YXRpYyBpbnQKZm9ybV9wYXJzZXJfY2FsbGJhY2sodm9pZCogZGF0YSwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogZmlsZW5hbWUsIGNoYXIqIGJ1ZiwgaW50IGxlbiwgZW51bSBsd3Nfc3BhX2ZpbGV1cGxvYWRfc3RhdGVzIHN0YXRlKSB7CiAgc3RydWN0IGZvcm1fcGFyc2VyKiBmcCA9IGRhdGE7CiAgSlNDYWxsYmFjayogY2IgPSAwOwogIEpTVmFsdWUgYXJnc1syXSA9IHtKU19OVUxMLCBKU19OVUxMfTsKCiAgc3dpdGNoKHN0YXRlKSB7CiAgICBjYXNlIExXU19VRlNfQ09OVEVOVDoKICAgIGNhc2UgTFdTX1VGU19GSU5BTF9DT05URU5UOiB7CiAgICAgIGNiID0gJmZwLT5jYi5jb250ZW50OwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgaWYobGVuID4gMCkKICAgICAgICAgIGFyZ3NbMV0gPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY2ItPmN0eCwgKHVpbnQ4X3QqKWJ1ZiwgbGVuKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX1VGU19PUEVOOiB7CiAgICAgIGNiID0gJmZwLT5jYi5vcGVuOwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgaWYoIUpTX0lzVW5kZWZpbmVkKGZwLT5maWxlKSkgewogICAgICAgICAgaWYoZnAtPmNiLmNsb3NlLmN0eCkgewogICAgICAgICAgICBhcmdzWzFdID0gZnAtPmZpbGU7CiAgICAgICAgICAgIEpTVmFsdWUgcmV0ID0gY2FsbGJhY2tfZW1pdCgmZnAtPmNiLmNsb3NlLCAyLCBhcmdzKTsKICAgICAgICAgICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIHJldCk7CiAgICAgICAgICB9CiAgICAgICAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgICAgZnAtPmZpbGUgPSBKU19VTkRFRklORUQ7CiAgICAgICAgfQogICAgICAgIGlmKGZpbGVuYW1lKSB7CiAgICAgICAgICBmcC0+ZmlsZSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBmaWxlbmFtZSk7CiAgICAgICAgICBhcmdzWzFdID0gSlNfRHVwVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgIH0KICAgICAgICBpZighSlNfSXNVbmRlZmluZWQoZnAtPm5hbWUpKSB7CgogICAgICAgICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKICAgICAgICAgIGZwLT5uYW1lID0gSlNfVU5ERUZJTkVEOwogICAgICAgIH0KICAgICAgICBpZihuYW1lKSB7CiAgICAgICAgICBmcC0+bmFtZSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBuYW1lKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIExXU19VRlNfQ0xPU0U6IHsKICAgICAgY2IgPSAmZnAtPmNiLmNsb3NlOwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgLy8gYXJnc1swXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKICAgICAgICBpZighSlNfSXNVbmRlZmluZWQoZnAtPmZpbGUpKQogICAgICAgICAgYXJnc1sxXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5maWxlKTsKICAgICAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgIGZwLT5maWxlID0gSlNfVU5ERUZJTkVEOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgaWYoY2IgJiYgY2ItPmN0eCkgewogICAgSlNWYWx1ZSByZXQ7CgogICAgLyogIGlmKEpTX0lzVW5kZWZpbmVkKGZwLT5uYW1lKSAmJiBuYW1lKQogICAgICAgICAgYXJnc1swXSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBuYW1lKTsKICAgICAgICBlbHNlKi8KICAgIGlmKEpTX0lzVW5kZWZpbmVkKGZwLT5uYW1lKSkKICAgICAgYXJnc1swXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKCiAgICByZXQgPSBjYWxsYmFja19lbWl0KGNiLCAyLCBhcmdzKTsKCiAgICBpZihKU19Jc0V4Y2VwdGlvbihyZXQpKQogICAgICBqc19lcnJvcl9wcmludChjYi0+Y3R4LCBmcC0+ZXhjZXB0aW9uID0gSlNfR2V0RXhjZXB0aW9uKGNiLT5jdHgpKTsKCiAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgYXJnc1swXSk7CiAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgYXJnc1sxXSk7CiAgfQoKICByZXR1cm4gMDsKfQoKdm9pZApmb3JtX3BhcnNlcl9pbml0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIHN0cnVjdCBzb2NrZXQqIHdzLCBpbnQgbnBhcmFtcywgY29uc3QgY2hhciogY29uc3QqIHBhcmFtX25hbWVzLCBzaXplX3QgY2h1bmtfc2l6ZSkgewoKICBtZW1zZXQoJmZwLT5zcGFfY3JlYXRlX2luZm8sIDAsIHNpemVvZihzdHJ1Y3QgbHdzX3NwYV9jcmVhdGVfaW5mbykpOwogIGZwLT53cyA9IHdzX2R1cCh3cyk7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5jb3VudF9wYXJhbXMgPSBucGFyYW1zOwogIGZwLT5zcGFfY3JlYXRlX2luZm8ucGFyYW1fbmFtZXMgPSBwYXJhbV9uYW1lczsKICBmcC0+c3BhX2NyZWF0ZV9pbmZvLm1heF9zdG9yYWdlID0gY2h1bmtfc2l6ZSArIDE7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5vcHRfY2IgPSAmZm9ybV9wYXJzZXJfY2FsbGJhY2s7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5vcHRfZGF0YSA9IGZwOwoKICBmcC0+c3BhID0gbHdzX3NwYV9jcmVhdGVfdmlhX2luZm8od3MtPmx3c2ksICZmcC0+c3BhX2NyZWF0ZV9pbmZvKTsKICBmcC0+ZXhjZXB0aW9uID0gSlNfTlVMTDsKICBmcC0+bmFtZSA9IEpTX1VOREVGSU5FRDsKICBmcC0+ZmlsZSA9IEpTX1VOREVGSU5FRDsKfQoKc3RydWN0IGZvcm1fcGFyc2VyKgpmb3JtX3BhcnNlcl9hbGxvYyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCBmb3JtX3BhcnNlciogcmV0OwoKICByZXQgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKHN0cnVjdCBmb3JtX3BhcnNlcikpOwogIHJldC0+cmVmX2NvdW50ID0gMTsKICByZXR1cm4gcmV0Owp9Cgp2b2lkCmZvcm1fcGFyc2VyX2NsZWFyKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTQ29udGV4dCogY3R4KSB7CgogIGlmKGZwLT5zcGEpIHsKICAgIGx3c19zcGFfZGVzdHJveShmcC0+c3BhKTsKICAgIGZwLT5zcGEgPSAwOwogIH0KCiAgaWYoZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lcykgewogICAganNfZnJlZShjdHgsICh2b2lkKilmcC0+c3BhX2NyZWF0ZV9pbmZvLnBhcmFtX25hbWVzKTsKICB9CiAgbWVtc2V0KCZmcC0+c3BhX2NyZWF0ZV9pbmZvLCAwLCBzaXplb2Yoc3RydWN0IGx3c19zcGFfY3JlYXRlX2luZm8pKTsKCiAgRlJFRUNCKGZwLT5jYi5jb250ZW50KTsKICBGUkVFQ0IoZnAtPmNiLm9wZW4pOwogIEZSRUVDQihmcC0+Y2IuY2xvc2UpOwp9Cgp2b2lkCmZvcm1fcGFyc2VyX2NsZWFyX3J0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTUnVudGltZSogcnQpIHsKCiAgaWYoZnAtPnNwYSkgewogICAgbHdzX3NwYV9kZXN0cm95KGZwLT5zcGEpOwogICAgZnAtPnNwYSA9IDA7CiAgfQoKICBpZihmcC0+c3BhX2NyZWF0ZV9pbmZvLnBhcmFtX25hbWVzKSB7CiAgICBqc19mcmVlX3J0KHJ0LCAodm9pZCopZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lcyk7CiAgfQogIG1lbXNldCgmZnAtPnNwYV9jcmVhdGVfaW5mbywgMCwgc2l6ZW9mKHN0cnVjdCBsd3Nfc3BhX2NyZWF0ZV9pbmZvKSk7CgogIEZSRUVDQl9SVChmcC0+Y2IuY29udGVudCk7CiAgRlJFRUNCX1JUKGZwLT5jYi5vcGVuKTsKICBGUkVFQ0JfUlQoZnAtPmNiLmNsb3NlKTsKfQoKdm9pZApmb3JtX3BhcnNlcl9mcmVlKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoLS1mcC0+cmVmX2NvdW50ID09IDApIHsKICAgIHdzX2ZyZWUoZnAtPndzLCBjdHgpOwogICAgZm9ybV9wYXJzZXJfY2xlYXIoZnAsIGN0eCk7CiAgICBqc19mcmVlKGN0eCwgZnApOwogIH0KfQoKdm9pZApmb3JtX3BhcnNlcl9mcmVlX3J0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTUnVudGltZSogcnQpIHsKICBpZigtLWZwLT5yZWZfY291bnQgPT0gMCkgewogICAgd3NfZnJlZV9ydChmcC0+d3MsIHJ0KTsKICAgIGZvcm1fcGFyc2VyX2NsZWFyX3J0KGZwLCBydCk7CiAgICBqc19mcmVlX3J0KHJ0LCBmcCk7CiAgfQp9Cgpjb25zdCBjaGFyKgpmb3JtX3BhcnNlcl9wYXJhbV9uYW1lKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGludCBpbmRleCkgewogIGlmKGluZGV4ID49IDAgJiYgaW5kZXggPCBmcC0+c3BhX2NyZWF0ZV9pbmZvLmNvdW50X3BhcmFtcykgewogICAgcmV0dXJuIGZwLT5zcGFfY3JlYXRlX2luZm8ucGFyYW1fbmFtZXNbaW5kZXhdOwogIH0KICByZXR1cm4gMDsKfQoKYm9vbApmb3JtX3BhcnNlcl9wYXJhbV92YWxpZChzdHJ1Y3QgZm9ybV9wYXJzZXIqIGZwLCBpbnQgaW5kZXgpIHsKICBpZihpbmRleCA+PSAwICYmIGluZGV4IDwgZnAtPnNwYV9jcmVhdGVfaW5mby5jb3VudF9wYXJhbXMpIHsKICAgIHJldHVybiB0cnVlOwogIH0KICByZXR1cm4gZmFsc2U7Cn0KCnNpemVfdApmb3JtX3BhcnNlcl9wYXJhbV9jb3VudChzdHJ1Y3QgZm9ybV9wYXJzZXIqIGZwKSB7CiAgcmV0dXJuIGZwLT5zcGFfY3JlYXRlX2luZm8uY291bnRfcGFyYW1zOwp9CgppbnQKZm9ybV9wYXJzZXJfcGFyYW1faW5kZXgoc3RydWN0IGZvcm1fcGFyc2VyKiBmcCwgY29uc3QgY2hhciogbmFtZSkgewogIGludCBpOwogIGZvcihpID0gMDsgaSA8IGZwLT5zcGFfY3JlYXRlX2luZm8uY291bnRfcGFyYW1zOyBpKyspIHsKICAgIGlmKCFzdHJjbXAoZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lc1tpXSwgbmFtZSkpCiAgICAgIHJldHVybiBpOwogIH0KICByZXR1cm4gLTE7Cn0KCmJvb2wKZm9ybV9wYXJzZXJfcGFyYW1fZXhpc3RzKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGNvbnN0IGNoYXIqIG5hbWUpIHsKICBpbnQgaSA9IGZvcm1fcGFyc2VyX3BhcmFtX2luZGV4KGZwLCBuYW1lKTsKCiAgcmV0dXJuIGkgIT0gLTE7Cn0KCmludApmb3JtX3BhcnNlcl9wcm9jZXNzKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGNvbnN0IHZvaWQqIGRhdGEsIHNpemVfdCBsZW4pIHsKICBpbnQgcmV0dmFsID0gbHdzX3NwYV9wcm9jZXNzKGZwLT5zcGEsIGRhdGEsIGxlbik7CiAgZnAtPnJlYWQgKz0gbGVuOwogIHJldHVybiByZXR2YWw7Cn0KAAAAAAAAAADOEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgsAAAAAAABSCwAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADOEwAAI2luY2x1ZGUgImZvcm0tcGFyc2VyLmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCiNpbmNsdWRlICJ1dGlscy5oIgojaW5jbHVkZSAid3MuaCIKCnN0YXRpYyBpbnQKZm9ybV9wYXJzZXJfY2FsbGJhY2sodm9pZCogZGF0YSwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogZmlsZW5hbWUsIGNoYXIqIGJ1ZiwgaW50IGxlbiwgZW51bSBsd3Nfc3BhX2ZpbGV1cGxvYWRfc3RhdGVzIHN0YXRlKSB7CiAgc3RydWN0IGZvcm1fcGFyc2VyKiBmcCA9IGRhdGE7CiAgSlNDYWxsYmFjayogY2IgPSAwOwogIEpTVmFsdWUgYXJnc1syXSA9IHtKU19OVUxMLCBKU19OVUxMfTsKCiAgc3dpdGNoKHN0YXRlKSB7CiAgICBjYXNlIExXU19VRlNfQ09OVEVOVDoKICAgIGNhc2UgTFdTX1VGU19GSU5BTF9DT05URU5UOiB7CiAgICAgIGNiID0gJmZwLT5jYi5jb250ZW50OwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgaWYobGVuID4gMCkKICAgICAgICAgIGFyZ3NbMV0gPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY2ItPmN0eCwgKHVpbnQ4X3QqKWJ1ZiwgbGVuKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX1VGU19PUEVOOiB7CiAgICAgIGNiID0gJmZwLT5jYi5vcGVuOwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgaWYoIUpTX0lzVW5kZWZpbmVkKGZwLT5maWxlKSkgewogICAgICAgICAgaWYoZnAtPmNiLmNsb3NlLmN0eCkgewogICAgICAgICAgICBhcmdzWzFdID0gZnAtPmZpbGU7CiAgICAgICAgICAgIEpTVmFsdWUgcmV0ID0gY2FsbGJhY2tfZW1pdCgmZnAtPmNiLmNsb3NlLCAyLCBhcmdzKTsKICAgICAgICAgICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIHJldCk7CiAgICAgICAgICB9CiAgICAgICAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgICAgZnAtPmZpbGUgPSBKU19VTkRFRklORUQ7CiAgICAgICAgfQogICAgICAgIGlmKGZpbGVuYW1lKSB7CiAgICAgICAgICBmcC0+ZmlsZSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBmaWxlbmFtZSk7CiAgICAgICAgICBhcmdzWzFdID0gSlNfRHVwVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgIH0KICAgICAgICBpZighSlNfSXNVbmRlZmluZWQoZnAtPm5hbWUpKSB7CgogICAgICAgICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKICAgICAgICAgIGZwLT5uYW1lID0gSlNfVU5ERUZJTkVEOwogICAgICAgIH0KICAgICAgICBpZihuYW1lKSB7CiAgICAgICAgICBmcC0+bmFtZSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBuYW1lKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIExXU19VRlNfQ0xPU0U6IHsKICAgICAgY2IgPSAmZnAtPmNiLmNsb3NlOwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgLy8gYXJnc1swXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKICAgICAgICBpZighSlNfSXNVbmRlZmluZWQoZnAtPmZpbGUpKQogICAgICAgICAgYXJnc1sxXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5maWxlKTsKICAgICAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgIGZwLT5maWxlID0gSlNfVU5ERUZJTkVEOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgaWYoY2IgJiYgY2ItPmN0eCkgewogICAgSlNWYWx1ZSByZXQ7CgogICAgLyogIGlmKEpTX0lzVW5kZWZpbmVkKGZwLT5uYW1lKSAmJiBuYW1lKQogICAgICAgICAgYXJnc1swXSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBuYW1lKTsKICAgICAgICBlbHNlKi8KICAgIGlmKEpTX0lzVW5kZWZpbmVkKGZwLT5uYW1lKSkKICAgICAgYXJnc1swXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKCiAgICByZXQgPSBjYWxsYmFja19lbWl0KGNiLCAyLCBhcmdzKTsKCiAgICBpZihKU19Jc0V4Y2VwdGlvbihyZXQpKQogICAgICBqc19lcnJvcl9wcmludChjYi0+Y3R4LCBmcC0+ZXhjZXB0aW9uID0gSlNfR2V0RXhjZXB0aW9uKGNiLT5jdHgpKTsKCiAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgYXJnc1swXSk7CiAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgYXJnc1sxXSk7CiAgfQoKICByZXR1cm4gMDsKfQoKdm9pZApmb3JtX3BhcnNlcl9pbml0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIHN0cnVjdCBzb2NrZXQqIHdzLCBpbnQgbnBhcmFtcywgY29uc3QgY2hhciogY29uc3QqIHBhcmFtX25hbWVzLCBzaXplX3QgY2h1bmtfc2l6ZSkgewoKICBtZW1zZXQoJmZwLT5zcGFfY3JlYXRlX2luZm8sIDAsIHNpemVvZihzdHJ1Y3QgbHdzX3NwYV9jcmVhdGVfaW5mbykpOwogIGZwLT53cyA9IHdzX2R1cCh3cyk7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5jb3VudF9wYXJhbXMgPSBucGFyYW1zOwogIGZwLT5zcGFfY3JlYXRlX2luZm8ucGFyYW1fbmFtZXMgPSBwYXJhbV9uYW1lczsKICBmcC0+c3BhX2NyZWF0ZV9pbmZvLm1heF9zdG9yYWdlID0gY2h1bmtfc2l6ZSArIDE7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5vcHRfY2IgPSAmZm9ybV9wYXJzZXJfY2FsbGJhY2s7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5vcHRfZGF0YSA9IGZwOwoKICBmcC0+c3BhID0gbHdzX3NwYV9jcmVhdGVfdmlhX2luZm8od3MtPmx3c2ksICZmcC0+c3BhX2NyZWF0ZV9pbmZvKTsKICBmcC0+ZXhjZXB0aW9uID0gSlNfTlVMTDsKICBmcC0+bmFtZSA9IEpTX1VOREVGSU5FRDsKICBmcC0+ZmlsZSA9IEpTX1VOREVGSU5FRDsKfQoKc3RydWN0IGZvcm1fcGFyc2VyKgpmb3JtX3BhcnNlcl9hbGxvYyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCBmb3JtX3BhcnNlciogcmV0OwoKICByZXQgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKHN0cnVjdCBmb3JtX3BhcnNlcikpOwogIHJldC0+cmVmX2NvdW50ID0gMTsKICByZXR1cm4gcmV0Owp9Cgp2b2lkCmZvcm1fcGFyc2VyX2NsZWFyKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTQ29udGV4dCogY3R4KSB7CgogIGlmKGZwLT5zcGEpIHsKICAgIGx3c19zcGFfZGVzdHJveShmcC0+c3BhKTsKICAgIGZwLT5zcGEgPSAwOwogIH0KCiAgaWYoZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lcykgewogICAganNfZnJlZShjdHgsICh2b2lkKilmcC0+c3BhX2NyZWF0ZV9pbmZvLnBhcmFtX25hbWVzKTsKICB9CiAgbWVtc2V0KCZmcC0+c3BhX2NyZWF0ZV9pbmZvLCAwLCBzaXplb2Yoc3RydWN0IGx3c19zcGFfY3JlYXRlX2luZm8pKTsKCiAgRlJFRUNCKGZwLT5jYi5jb250ZW50KTsKICBGUkVFQ0IoZnAtPmNiLm9wZW4pOwogIEZSRUVDQihmcC0+Y2IuY2xvc2UpOwp9Cgp2b2lkCmZvcm1fcGFyc2VyX2NsZWFyX3J0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTUnVudGltZSogcnQpIHsKCiAgaWYoZnAtPnNwYSkgewogICAgbHdzX3NwYV9kZXN0cm95KGZwLT5zcGEpOwogICAgZnAtPnNwYSA9IDA7CiAgfQoKICBpZihmcC0+c3BhX2NyZWF0ZV9pbmZvLnBhcmFtX25hbWVzKSB7CiAgICBqc19mcmVlX3J0KHJ0LCAodm9pZCopZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lcyk7CiAgfQogIG1lbXNldCgmZnAtPnNwYV9jcmVhdGVfaW5mbywgMCwgc2l6ZW9mKHN0cnVjdCBsd3Nfc3BhX2NyZWF0ZV9pbmZvKSk7CgogIEZSRUVDQl9SVChmcC0+Y2IuY29udGVudCk7CiAgRlJFRUNCX1JUKGZwLT5jYi5vcGVuKTsKICBGUkVFQ0JfUlQoZnAtPmNiLmNsb3NlKTsKfQoKdm9pZApmb3JtX3BhcnNlcl9mcmVlKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoLS1mcC0+cmVmX2NvdW50ID09IDApIHsKICAgIHdzX2ZyZWUoZnAtPndzLCBjdHgpOwogICAgZm9ybV9wYXJzZXJfY2xlYXIoZnAsIGN0eCk7CiAgICBqc19mcmVlKGN0eCwgZnApOwogIH0KfQoKdm9pZApmb3JtX3BhcnNlcl9mcmVlX3J0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTUnVudGltZSogcnQpIHsKICBpZigtLWZwLT5yZWZfY291bnQgPT0gMCkgewogICAgd3NfZnJlZV9ydChmcC0+d3MsIHJ0KTsKICAgIGZvcm1fcGFyc2VyX2NsZWFyX3J0KGZwLCBydCk7CiAgICBqc19mcmVlX3J0KHJ0LCBmcCk7CiAgfQp9Cgpjb25zdCBjaGFyKgpmb3JtX3BhcnNlcl9wYXJhbV9uYW1lKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGludCBpbmRleCkgewogIGlmKGluZGV4ID49IDAgJiYgaW5kZXggPCBmcC0+c3BhX2NyZWF0ZV9pbmZvLmNvdW50X3BhcmFtcykgewogICAgcmV0dXJuIGZwLT5zcGFfY3JlYXRlX2luZm8ucGFyYW1fbmFtZXNbaW5kZXhdOwogIH0KICByZXR1cm4gMDsKfQoKYm9vbApmb3JtX3BhcnNlcl9wYXJhbV92YWxpZChzdHJ1Y3QgZm9ybV9wYXJzZXIqIGZwLCBpbnQgaW5kZXgpIHsKICBpZihpbmRleCA+PSAwICYmIGluZGV4IDwgZnAtPnNwYV9jcmVhdGVfaW5mby5jb3VudF9wYXJhbXMpIHsKICAgIHJldHVybiB0cnVlOwogIH0KICByZXR1cm4gZmFsc2U7Cn0KCnNpemVfdApmb3JtX3BhcnNlcl9wYXJhbV9jb3VudChzdHJ1Y3QgZm9ybV9wYXJzZXIqIGZwKSB7CiAgcmV0dXJuIGZwLT5zcGFfY3JlYXRlX2luZm8uY291bnRfcGFyYW1zOwp9CgppbnQKZm9ybV9wYXJzZXJfcGFyYW1faW5kZXgoc3RydWN0IGZvcm1fcGFyc2VyKiBmcCwgY29uc3QgY2hhciogbmFtZSkgewogIGludCBpOwogIGZvcihpID0gMDsgaSA8IGZwLT5zcGFfY3JlYXRlX2luZm8uY291bnRfcGFyYW1zOyBpKyspIHsKICAgIGlmKCFzdHJjbXAoZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lc1tpXSwgbmFtZSkpCiAgICAgIHJldHVybiBpOwogIH0KICByZXR1cm4gLTE7Cn0KCmJvb2wKZm9ybV9wYXJzZXJfcGFyYW1fZXhpc3RzKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGNvbnN0IGNoYXIqIG5hbWUpIHsKICBpbnQgaSA9IGZvcm1fcGFyc2VyX3BhcmFtX2luZGV4KGZwLCBuYW1lKTsKCiAgcmV0dXJuIGkgIT0gLTE7Cn0KCmludApmb3JtX3BhcnNlcl9wcm9jZXNzKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGNvbnN0IHZvaWQqIGRhdGEsIHNpemVfdCBsZW4pIHsKICBpbnQgcmV0dmFsID0gbHdzX3NwYV9wcm9jZXNzKGZwLT5zcGEsIGRhdGEsIGxlbik7CiAgZnAtPnJlYWQgKz0gbGVuOwogIHJldHVybiByZXR2YWw7Cn0KAAAAAAAAAADOEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgsAAAAAAABSCwAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADOEwAAI2luY2x1ZGUgImZvcm0tcGFyc2VyLmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCiNpbmNsdWRlICJ1dGlscy5oIgojaW5jbHVkZSAid3MuaCIKCnN0YXRpYyBpbnQKZm9ybV9wYXJzZXJfY2FsbGJhY2sodm9pZCogZGF0YSwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogZmlsZW5hbWUsIGNoYXIqIGJ1ZiwgaW50IGxlbiwgZW51bSBsd3Nfc3BhX2ZpbGV1cGxvYWRfc3RhdGVzIHN0YXRlKSB7CiAgc3RydWN0IGZvcm1fcGFyc2VyKiBmcCA9IGRhdGE7CiAgSlNDYWxsYmFjayogY2IgPSAwOwogIEpTVmFsdWUgYXJnc1syXSA9IHtKU19OVUxMLCBKU19OVUxMfTsKCiAgc3dpdGNoKHN0YXRlKSB7CiAgICBjYXNlIExXU19VRlNfQ09OVEVOVDoKICAgIGNhc2UgTFdTX1VGU19GSU5BTF9DT05URU5UOiB7CiAgICAgIGNiID0gJmZwLT5jYi5jb250ZW50OwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgaWYobGVuID4gMCkKICAgICAgICAgIGFyZ3NbMV0gPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY2ItPmN0eCwgKHVpbnQ4X3QqKWJ1ZiwgbGVuKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX1VGU19PUEVOOiB7CiAgICAgIGNiID0gJmZwLT5jYi5vcGVuOwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgaWYoIUpTX0lzVW5kZWZpbmVkKGZwLT5maWxlKSkgewogICAgICAgICAgaWYoZnAtPmNiLmNsb3NlLmN0eCkgewogICAgICAgICAgICBhcmdzWzFdID0gZnAtPmZpbGU7CiAgICAgICAgICAgIEpTVmFsdWUgcmV0ID0gY2FsbGJhY2tfZW1pdCgmZnAtPmNiLmNsb3NlLCAyLCBhcmdzKTsKICAgICAgICAgICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIHJldCk7CiAgICAgICAgICB9CiAgICAgICAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgICAgZnAtPmZpbGUgPSBKU19VTkRFRklORUQ7CiAgICAgICAgfQogICAgICAgIGlmKGZpbGVuYW1lKSB7CiAgICAgICAgICBmcC0+ZmlsZSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBmaWxlbmFtZSk7CiAgICAgICAgICBhcmdzWzFdID0gSlNfRHVwVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgIH0KICAgICAgICBpZighSlNfSXNVbmRlZmluZWQoZnAtPm5hbWUpKSB7CgogICAgICAgICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKICAgICAgICAgIGZwLT5uYW1lID0gSlNfVU5ERUZJTkVEOwogICAgICAgIH0KICAgICAgICBpZihuYW1lKSB7CiAgICAgICAgICBmcC0+bmFtZSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBuYW1lKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIExXU19VRlNfQ0xPU0U6IHsKICAgICAgY2IgPSAmZnAtPmNiLmNsb3NlOwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgLy8gYXJnc1swXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKICAgICAgICBpZighSlNfSXNVbmRlZmluZWQoZnAtPmZpbGUpKQogICAgICAgICAgYXJnc1sxXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5maWxlKTsKICAgICAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgIGZwLT5maWxlID0gSlNfVU5ERUZJTkVEOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgaWYoY2IgJiYgY2ItPmN0eCkgewogICAgSlNWYWx1ZSByZXQ7CgogICAgLyogIGlmKEpTX0lzVW5kZWZpbmVkKGZwLT5uYW1lKSAmJiBuYW1lKQogICAgICAgICAgYXJnc1swXSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBuYW1lKTsKICAgICAgICBlbHNlKi8KICAgIGlmKEpTX0lzVW5kZWZpbmVkKGZwLT5uYW1lKSkKICAgICAgYXJnc1swXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKCiAgICByZXQgPSBjYWxsYmFja19lbWl0KGNiLCAyLCBhcmdzKTsKCiAgICBpZihKU19Jc0V4Y2VwdGlvbihyZXQpKQogICAgICBqc19lcnJvcl9wcmludChjYi0+Y3R4LCBmcC0+ZXhjZXB0aW9uID0gSlNfR2V0RXhjZXB0aW9uKGNiLT5jdHgpKTsKCiAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgYXJnc1swXSk7CiAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgYXJnc1sxXSk7CiAgfQoKICByZXR1cm4gMDsKfQoKdm9pZApmb3JtX3BhcnNlcl9pbml0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIHN0cnVjdCBzb2NrZXQqIHdzLCBpbnQgbnBhcmFtcywgY29uc3QgY2hhciogY29uc3QqIHBhcmFtX25hbWVzLCBzaXplX3QgY2h1bmtfc2l6ZSkgewoKICBtZW1zZXQoJmZwLT5zcGFfY3JlYXRlX2luZm8sIDAsIHNpemVvZihzdHJ1Y3QgbHdzX3NwYV9jcmVhdGVfaW5mbykpOwogIGZwLT53cyA9IHdzX2R1cCh3cyk7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5jb3VudF9wYXJhbXMgPSBucGFyYW1zOwogIGZwLT5zcGFfY3JlYXRlX2luZm8ucGFyYW1fbmFtZXMgPSBwYXJhbV9uYW1lczsKICBmcC0+c3BhX2NyZWF0ZV9pbmZvLm1heF9zdG9yYWdlID0gY2h1bmtfc2l6ZSArIDE7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5vcHRfY2IgPSAmZm9ybV9wYXJzZXJfY2FsbGJhY2s7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5vcHRfZGF0YSA9IGZwOwoKICBmcC0+c3BhID0gbHdzX3NwYV9jcmVhdGVfdmlhX2luZm8od3MtPmx3c2ksICZmcC0+c3BhX2NyZWF0ZV9pbmZvKTsKICBmcC0+ZXhjZXB0aW9uID0gSlNfTlVMTDsKICBmcC0+bmFtZSA9IEpTX1VOREVGSU5FRDsKICBmcC0+ZmlsZSA9IEpTX1VOREVGSU5FRDsKfQoKc3RydWN0IGZvcm1fcGFyc2VyKgpmb3JtX3BhcnNlcl9hbGxvYyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCBmb3JtX3BhcnNlciogcmV0OwoKICByZXQgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKHN0cnVjdCBmb3JtX3BhcnNlcikpOwogIHJldC0+cmVmX2NvdW50ID0gMTsKICByZXR1cm4gcmV0Owp9Cgp2b2lkCmZvcm1fcGFyc2VyX2NsZWFyKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTQ29udGV4dCogY3R4KSB7CgogIGlmKGZwLT5zcGEpIHsKICAgIGx3c19zcGFfZGVzdHJveShmcC0+c3BhKTsKICAgIGZwLT5zcGEgPSAwOwogIH0KCiAgaWYoZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lcykgewogICAganNfZnJlZShjdHgsICh2b2lkKilmcC0+c3BhX2NyZWF0ZV9pbmZvLnBhcmFtX25hbWVzKTsKICB9CiAgbWVtc2V0KCZmcC0+c3BhX2NyZWF0ZV9pbmZvLCAwLCBzaXplb2Yoc3RydWN0IGx3c19zcGFfY3JlYXRlX2luZm8pKTsKCiAgRlJFRUNCKGZwLT5jYi5jb250ZW50KTsKICBGUkVFQ0IoZnAtPmNiLm9wZW4pOwogIEZSRUVDQihmcC0+Y2IuY2xvc2UpOwp9Cgp2b2lkCmZvcm1fcGFyc2VyX2NsZWFyX3J0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTUnVudGltZSogcnQpIHsKCiAgaWYoZnAtPnNwYSkgewogICAgbHdzX3NwYV9kZXN0cm95KGZwLT5zcGEpOwogICAgZnAtPnNwYSA9IDA7CiAgfQoKICBpZihmcC0+c3BhX2NyZWF0ZV9pbmZvLnBhcmFtX25hbWVzKSB7CiAgICBqc19mcmVlX3J0KHJ0LCAodm9pZCopZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lcyk7CiAgfQogIG1lbXNldCgmZnAtPnNwYV9jcmVhdGVfaW5mbywgMCwgc2l6ZW9mKHN0cnVjdCBsd3Nfc3BhX2NyZWF0ZV9pbmZvKSk7CgogIEZSRUVDQl9SVChmcC0+Y2IuY29udGVudCk7CiAgRlJFRUNCX1JUKGZwLT5jYi5vcGVuKTsKICBGUkVFQ0JfUlQoZnAtPmNiLmNsb3NlKTsKfQoKdm9pZApmb3JtX3BhcnNlcl9mcmVlKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoLS1mcC0+cmVmX2NvdW50ID09IDApIHsKICAgIHdzX2ZyZWUoZnAtPndzLCBjdHgpOwogICAgZm9ybV9wYXJzZXJfY2xlYXIoZnAsIGN0eCk7CiAgICBqc19mcmVlKGN0eCwgZnApOwogIH0KfQoKdm9pZApmb3JtX3BhcnNlcl9mcmVlX3J0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTUnVudGltZSogcnQpIHsKICBpZigtLWZwLT5yZWZfY291bnQgPT0gMCkgewogICAgd3NfZnJlZV9ydChmcC0+d3MsIHJ0KTsKICAgIGZvcm1fcGFyc2VyX2NsZWFyX3J0KGZwLCBydCk7CiAgICBqc19mcmVlX3J0KHJ0LCBmcCk7CiAgfQp9Cgpjb25zdCBjaGFyKgpmb3JtX3BhcnNlcl9wYXJhbV9uYW1lKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGludCBpbmRleCkgewogIGlmKGluZGV4ID49IDAgJiYgaW5kZXggPCBmcC0+c3BhX2NyZWF0ZV9pbmZvLmNvdW50X3BhcmFtcykgewogICAgcmV0dXJuIGZwLT5zcGFfY3JlYXRlX2luZm8ucGFyYW1fbmFtZXNbaW5kZXhdOwogIH0KICByZXR1cm4gMDsKfQoKYm9vbApmb3JtX3BhcnNlcl9wYXJhbV92YWxpZChzdHJ1Y3QgZm9ybV9wYXJzZXIqIGZwLCBpbnQgaW5kZXgpIHsKICBpZihpbmRleCA+PSAwICYmIGluZGV4IDwgZnAtPnNwYV9jcmVhdGVfaW5mby5jb3VudF9wYXJhbXMpIHsKICAgIHJldHVybiB0cnVlOwogIH0KICByZXR1cm4gZmFsc2U7Cn0KCnNpemVfdApmb3JtX3BhcnNlcl9wYXJhbV9jb3VudChzdHJ1Y3QgZm9ybV9wYXJzZXIqIGZwKSB7CiAgcmV0dXJuIGZwLT5zcGFfY3JlYXRlX2luZm8uY291bnRfcGFyYW1zOwp9CgppbnQKZm9ybV9wYXJzZXJfcGFyYW1faW5kZXgoc3RydWN0IGZvcm1fcGFyc2VyKiBmcCwgY29uc3QgY2hhciogbmFtZSkgewogIGludCBpOwogIGZvcihpID0gMDsgaSA8IGZwLT5zcGFfY3JlYXRlX2luZm8uY291bnRfcGFyYW1zOyBpKyspIHsKICAgIGlmKCFzdHJjbXAoZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lc1tpXSwgbmFtZSkpCiAgICAgIHJldHVybiBpOwogIH0KICByZXR1cm4gLTE7Cn0KCmJvb2wKZm9ybV9wYXJzZXJfcGFyYW1fZXhpc3RzKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGNvbnN0IGNoYXIqIG5hbWUpIHsKICBpbnQgaSA9IGZvcm1fcGFyc2VyX3BhcmFtX2luZGV4KGZwLCBuYW1lKTsKCiAgcmV0dXJuIGkgIT0gLTE7Cn0KCmludApmb3JtX3BhcnNlcl9wcm9jZXNzKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGNvbnN0IHZvaWQqIGRhdGEsIHNpemVfdCBsZW4pIHsKICBpbnQgcmV0dmFsID0gbHdzX3NwYV9wcm9jZXNzKGZwLT5zcGEsIGRhdGEsIGxlbik7CiAgZnAtPnJlYWQgKz0gbGVuOwogIHJldHVybiByZXR2YWw7Cn0KAAAAAAAAAADOEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgsAAAAAAABSCwAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADOEwAAI2luY2x1ZGUgImZvcm0tcGFyc2VyLmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCiNpbmNsdWRlICJ1dGlscy5oIgojaW5jbHVkZSAid3MuaCIKCnN0YXRpYyBpbnQKZm9ybV9wYXJzZXJfY2FsbGJhY2sodm9pZCogZGF0YSwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogZmlsZW5hbWUsIGNoYXIqIGJ1ZiwgaW50IGxlbiwgZW51bSBsd3Nfc3BhX2ZpbGV1cGxvYWRfc3RhdGVzIHN0YXRlKSB7CiAgc3RydWN0IGZvcm1fcGFyc2VyKiBmcCA9IGRhdGE7CiAgSlNDYWxsYmFjayogY2IgPSAwOwogIEpTVmFsdWUgYXJnc1syXSA9IHtKU19OVUxMLCBKU19OVUxMfTsKCiAgc3dpdGNoKHN0YXRlKSB7CiAgICBjYXNlIExXU19VRlNfQ09OVEVOVDoKICAgIGNhc2UgTFdTX1VGU19GSU5BTF9DT05URU5UOiB7CiAgICAgIGNiID0gJmZwLT5jYi5jb250ZW50OwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgaWYobGVuID4gMCkKICAgICAgICAgIGFyZ3NbMV0gPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY2ItPmN0eCwgKHVpbnQ4X3QqKWJ1ZiwgbGVuKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX1VGU19PUEVOOiB7CiAgICAgIGNiID0gJmZwLT5jYi5vcGVuOwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgaWYoIUpTX0lzVW5kZWZpbmVkKGZwLT5maWxlKSkgewogICAgICAgICAgaWYoZnAtPmNiLmNsb3NlLmN0eCkgewogICAgICAgICAgICBhcmdzWzFdID0gZnAtPmZpbGU7CiAgICAgICAgICAgIEpTVmFsdWUgcmV0ID0gY2FsbGJhY2tfZW1pdCgmZnAtPmNiLmNsb3NlLCAyLCBhcmdzKTsKICAgICAgICAgICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIHJldCk7CiAgICAgICAgICB9CiAgICAgICAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgICAgZnAtPmZpbGUgPSBKU19VTkRFRklORUQ7CiAgICAgICAgfQogICAgICAgIGlmKGZpbGVuYW1lKSB7CiAgICAgICAgICBmcC0+ZmlsZSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBmaWxlbmFtZSk7CiAgICAgICAgICBhcmdzWzFdID0gSlNfRHVwVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgIH0KICAgICAgICBpZighSlNfSXNVbmRlZmluZWQoZnAtPm5hbWUpKSB7CgogICAgICAgICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKICAgICAgICAgIGZwLT5uYW1lID0gSlNfVU5ERUZJTkVEOwogICAgICAgIH0KICAgICAgICBpZihuYW1lKSB7CiAgICAgICAgICBmcC0+bmFtZSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBuYW1lKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIExXU19VRlNfQ0xPU0U6IHsKICAgICAgY2IgPSAmZnAtPmNiLmNsb3NlOwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgLy8gYXJnc1swXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKICAgICAgICBpZighSlNfSXNVbmRlZmluZWQoZnAtPmZpbGUpKQogICAgICAgICAgYXJnc1sxXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5maWxlKTsKICAgICAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgIGZwLT5maWxlID0gSlNfVU5ERUZJTkVEOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgaWYoY2IgJiYgY2ItPmN0eCkgewogICAgSlNWYWx1ZSByZXQ7CgogICAgLyogIGlmKEpTX0lzVW5kZWZpbmVkKGZwLT5uYW1lKSAmJiBuYW1lKQogICAgICAgICAgYXJnc1swXSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBuYW1lKTsKICAgICAgICBlbHNlKi8KICAgIGlmKEpTX0lzVW5kZWZpbmVkKGZwLT5uYW1lKSkKICAgICAgYXJnc1swXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKCiAgICByZXQgPSBjYWxsYmFja19lbWl0KGNiLCAyLCBhcmdzKTsKCiAgICBpZihKU19Jc0V4Y2VwdGlvbihyZXQpKQogICAgICBqc19lcnJvcl9wcmludChjYi0+Y3R4LCBmcC0+ZXhjZXB0aW9uID0gSlNfR2V0RXhjZXB0aW9uKGNiLT5jdHgpKTsKCiAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgYXJnc1swXSk7CiAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgYXJnc1sxXSk7CiAgfQoKICByZXR1cm4gMDsKfQoKdm9pZApmb3JtX3BhcnNlcl9pbml0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIHN0cnVjdCBzb2NrZXQqIHdzLCBpbnQgbnBhcmFtcywgY29uc3QgY2hhciogY29uc3QqIHBhcmFtX25hbWVzLCBzaXplX3QgY2h1bmtfc2l6ZSkgewoKICBtZW1zZXQoJmZwLT5zcGFfY3JlYXRlX2luZm8sIDAsIHNpemVvZihzdHJ1Y3QgbHdzX3NwYV9jcmVhdGVfaW5mbykpOwogIGZwLT53cyA9IHdzX2R1cCh3cyk7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5jb3VudF9wYXJhbXMgPSBucGFyYW1zOwogIGZwLT5zcGFfY3JlYXRlX2luZm8ucGFyYW1fbmFtZXMgPSBwYXJhbV9uYW1lczsKICBmcC0+c3BhX2NyZWF0ZV9pbmZvLm1heF9zdG9yYWdlID0gY2h1bmtfc2l6ZSArIDE7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5vcHRfY2IgPSAmZm9ybV9wYXJzZXJfY2FsbGJhY2s7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5vcHRfZGF0YSA9IGZwOwoKICBmcC0+c3BhID0gbHdzX3NwYV9jcmVhdGVfdmlhX2luZm8od3MtPmx3c2ksICZmcC0+c3BhX2NyZWF0ZV9pbmZvKTsKICBmcC0+ZXhjZXB0aW9uID0gSlNfTlVMTDsKICBmcC0+bmFtZSA9IEpTX1VOREVGSU5FRDsKICBmcC0+ZmlsZSA9IEpTX1VOREVGSU5FRDsKfQoKc3RydWN0IGZvcm1fcGFyc2VyKgpmb3JtX3BhcnNlcl9hbGxvYyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCBmb3JtX3BhcnNlciogcmV0OwoKICByZXQgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKHN0cnVjdCBmb3JtX3BhcnNlcikpOwogIHJldC0+cmVmX2NvdW50ID0gMTsKICByZXR1cm4gcmV0Owp9Cgp2b2lkCmZvcm1fcGFyc2VyX2NsZWFyKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTQ29udGV4dCogY3R4KSB7CgogIGlmKGZwLT5zcGEpIHsKICAgIGx3c19zcGFfZGVzdHJveShmcC0+c3BhKTsKICAgIGZwLT5zcGEgPSAwOwogIH0KCiAgaWYoZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lcykgewogICAganNfZnJlZShjdHgsICh2b2lkKilmcC0+c3BhX2NyZWF0ZV9pbmZvLnBhcmFtX25hbWVzKTsKICB9CiAgbWVtc2V0KCZmcC0+c3BhX2NyZWF0ZV9pbmZvLCAwLCBzaXplb2Yoc3RydWN0IGx3c19zcGFfY3JlYXRlX2luZm8pKTsKCiAgRlJFRUNCKGZwLT5jYi5jb250ZW50KTsKICBGUkVFQ0IoZnAtPmNiLm9wZW4pOwogIEZSRUVDQihmcC0+Y2IuY2xvc2UpOwp9Cgp2b2lkCmZvcm1fcGFyc2VyX2NsZWFyX3J0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTUnVudGltZSogcnQpIHsKCiAgaWYoZnAtPnNwYSkgewogICAgbHdzX3NwYV9kZXN0cm95KGZwLT5zcGEpOwogICAgZnAtPnNwYSA9IDA7CiAgfQoKICBpZihmcC0+c3BhX2NyZWF0ZV9pbmZvLnBhcmFtX25hbWVzKSB7CiAgICBqc19mcmVlX3J0KHJ0LCAodm9pZCopZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lcyk7CiAgfQogIG1lbXNldCgmZnAtPnNwYV9jcmVhdGVfaW5mbywgMCwgc2l6ZW9mKHN0cnVjdCBsd3Nfc3BhX2NyZWF0ZV9pbmZvKSk7CgogIEZSRUVDQl9SVChmcC0+Y2IuY29udGVudCk7CiAgRlJFRUNCX1JUKGZwLT5jYi5vcGVuKTsKICBGUkVFQ0JfUlQoZnAtPmNiLmNsb3NlKTsKfQoKdm9pZApmb3JtX3BhcnNlcl9mcmVlKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoLS1mcC0+cmVmX2NvdW50ID09IDApIHsKICAgIHdzX2ZyZWUoZnAtPndzLCBjdHgpOwogICAgZm9ybV9wYXJzZXJfY2xlYXIoZnAsIGN0eCk7CiAgICBqc19mcmVlKGN0eCwgZnApOwogIH0KfQoKdm9pZApmb3JtX3BhcnNlcl9mcmVlX3J0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTUnVudGltZSogcnQpIHsKICBpZigtLWZwLT5yZWZfY291bnQgPT0gMCkgewogICAgd3NfZnJlZV9ydChmcC0+d3MsIHJ0KTsKICAgIGZvcm1fcGFyc2VyX2NsZWFyX3J0KGZwLCBydCk7CiAgICBqc19mcmVlX3J0KHJ0LCBmcCk7CiAgfQp9Cgpjb25zdCBjaGFyKgpmb3JtX3BhcnNlcl9wYXJhbV9uYW1lKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGludCBpbmRleCkgewogIGlmKGluZGV4ID49IDAgJiYgaW5kZXggPCBmcC0+c3BhX2NyZWF0ZV9pbmZvLmNvdW50X3BhcmFtcykgewogICAgcmV0dXJuIGZwLT5zcGFfY3JlYXRlX2luZm8ucGFyYW1fbmFtZXNbaW5kZXhdOwogIH0KICByZXR1cm4gMDsKfQoKYm9vbApmb3JtX3BhcnNlcl9wYXJhbV92YWxpZChzdHJ1Y3QgZm9ybV9wYXJzZXIqIGZwLCBpbnQgaW5kZXgpIHsKICBpZihpbmRleCA+PSAwICYmIGluZGV4IDwgZnAtPnNwYV9jcmVhdGVfaW5mby5jb3VudF9wYXJhbXMpIHsKICAgIHJldHVybiB0cnVlOwogIH0KICByZXR1cm4gZmFsc2U7Cn0KCnNpemVfdApmb3JtX3BhcnNlcl9wYXJhbV9jb3VudChzdHJ1Y3QgZm9ybV9wYXJzZXIqIGZwKSB7CiAgcmV0dXJuIGZwLT5zcGFfY3JlYXRlX2luZm8uY291bnRfcGFyYW1zOwp9CgppbnQKZm9ybV9wYXJzZXJfcGFyYW1faW5kZXgoc3RydWN0IGZvcm1fcGFyc2VyKiBmcCwgY29uc3QgY2hhciogbmFtZSkgewogIGludCBpOwogIGZvcihpID0gMDsgaSA8IGZwLT5zcGFfY3JlYXRlX2luZm8uY291bnRfcGFyYW1zOyBpKyspIHsKICAgIGlmKCFzdHJjbXAoZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lc1tpXSwgbmFtZSkpCiAgICAgIHJldHVybiBpOwogIH0KICByZXR1cm4gLTE7Cn0KCmJvb2wKZm9ybV9wYXJzZXJfcGFyYW1fZXhpc3RzKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGNvbnN0IGNoYXIqIG5hbWUpIHsKICBpbnQgaSA9IGZvcm1fcGFyc2VyX3BhcmFtX2luZGV4KGZwLCBuYW1lKTsKCiAgcmV0dXJuIGkgIT0gLTE7Cn0KCmludApmb3JtX3BhcnNlcl9wcm9jZXNzKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGNvbnN0IHZvaWQqIGRhdGEsIHNpemVfdCBsZW4pIHsKICBpbnQgcmV0dmFsID0gbHdzX3NwYV9wcm9jZXNzKGZwLT5zcGEsIGRhdGEsIGxlbik7CiAgZnAtPnJlYWQgKz0gbGVuOwogIHJldHVybiByZXR2YWw7Cn0KAAAAAAAAAADOEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgsAAAAAAABSCwAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADOEwAAI2luY2x1ZGUgImZvcm0tcGFyc2VyLmgiCiNpbmNsdWRlICJqc3V0aWxzLmgiCiNpbmNsdWRlICJ1dGlscy5oIgojaW5jbHVkZSAid3MuaCIKCnN0YXRpYyBpbnQKZm9ybV9wYXJzZXJfY2FsbGJhY2sodm9pZCogZGF0YSwgY29uc3QgY2hhciogbmFtZSwgY29uc3QgY2hhciogZmlsZW5hbWUsIGNoYXIqIGJ1ZiwgaW50IGxlbiwgZW51bSBsd3Nfc3BhX2ZpbGV1cGxvYWRfc3RhdGVzIHN0YXRlKSB7CiAgc3RydWN0IGZvcm1fcGFyc2VyKiBmcCA9IGRhdGE7CiAgSlNDYWxsYmFjayogY2IgPSAwOwogIEpTVmFsdWUgYXJnc1syXSA9IHtKU19OVUxMLCBKU19OVUxMfTsKCiAgc3dpdGNoKHN0YXRlKSB7CiAgICBjYXNlIExXU19VRlNfQ09OVEVOVDoKICAgIGNhc2UgTFdTX1VGU19GSU5BTF9DT05URU5UOiB7CiAgICAgIGNiID0gJmZwLT5jYi5jb250ZW50OwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgaWYobGVuID4gMCkKICAgICAgICAgIGFyZ3NbMV0gPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY2ItPmN0eCwgKHVpbnQ4X3QqKWJ1ZiwgbGVuKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX1VGU19PUEVOOiB7CiAgICAgIGNiID0gJmZwLT5jYi5vcGVuOwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgaWYoIUpTX0lzVW5kZWZpbmVkKGZwLT5maWxlKSkgewogICAgICAgICAgaWYoZnAtPmNiLmNsb3NlLmN0eCkgewogICAgICAgICAgICBhcmdzWzFdID0gZnAtPmZpbGU7CiAgICAgICAgICAgIEpTVmFsdWUgcmV0ID0gY2FsbGJhY2tfZW1pdCgmZnAtPmNiLmNsb3NlLCAyLCBhcmdzKTsKICAgICAgICAgICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIHJldCk7CiAgICAgICAgICB9CiAgICAgICAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgICAgZnAtPmZpbGUgPSBKU19VTkRFRklORUQ7CiAgICAgICAgfQogICAgICAgIGlmKGZpbGVuYW1lKSB7CiAgICAgICAgICBmcC0+ZmlsZSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBmaWxlbmFtZSk7CiAgICAgICAgICBhcmdzWzFdID0gSlNfRHVwVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgIH0KICAgICAgICBpZighSlNfSXNVbmRlZmluZWQoZnAtPm5hbWUpKSB7CgogICAgICAgICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKICAgICAgICAgIGZwLT5uYW1lID0gSlNfVU5ERUZJTkVEOwogICAgICAgIH0KICAgICAgICBpZihuYW1lKSB7CiAgICAgICAgICBmcC0+bmFtZSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBuYW1lKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIExXU19VRlNfQ0xPU0U6IHsKICAgICAgY2IgPSAmZnAtPmNiLmNsb3NlOwogICAgICBpZihjYi0+Y3R4KSB7CiAgICAgICAgLy8gYXJnc1swXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKICAgICAgICBpZighSlNfSXNVbmRlZmluZWQoZnAtPmZpbGUpKQogICAgICAgICAgYXJnc1sxXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5maWxlKTsKICAgICAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgZnAtPmZpbGUpOwogICAgICAgIGZwLT5maWxlID0gSlNfVU5ERUZJTkVEOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgaWYoY2IgJiYgY2ItPmN0eCkgewogICAgSlNWYWx1ZSByZXQ7CgogICAgLyogIGlmKEpTX0lzVW5kZWZpbmVkKGZwLT5uYW1lKSAmJiBuYW1lKQogICAgICAgICAgYXJnc1swXSA9IEpTX05ld1N0cmluZyhjYi0+Y3R4LCBuYW1lKTsKICAgICAgICBlbHNlKi8KICAgIGlmKEpTX0lzVW5kZWZpbmVkKGZwLT5uYW1lKSkKICAgICAgYXJnc1swXSA9IEpTX0R1cFZhbHVlKGNiLT5jdHgsIGZwLT5uYW1lKTsKCiAgICByZXQgPSBjYWxsYmFja19lbWl0KGNiLCAyLCBhcmdzKTsKCiAgICBpZihKU19Jc0V4Y2VwdGlvbihyZXQpKQogICAgICBqc19lcnJvcl9wcmludChjYi0+Y3R4LCBmcC0+ZXhjZXB0aW9uID0gSlNfR2V0RXhjZXB0aW9uKGNiLT5jdHgpKTsKCiAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgYXJnc1swXSk7CiAgICBKU19GcmVlVmFsdWUoY2ItPmN0eCwgYXJnc1sxXSk7CiAgfQoKICByZXR1cm4gMDsKfQoKdm9pZApmb3JtX3BhcnNlcl9pbml0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIHN0cnVjdCBzb2NrZXQqIHdzLCBpbnQgbnBhcmFtcywgY29uc3QgY2hhciogY29uc3QqIHBhcmFtX25hbWVzLCBzaXplX3QgY2h1bmtfc2l6ZSkgewoKICBtZW1zZXQoJmZwLT5zcGFfY3JlYXRlX2luZm8sIDAsIHNpemVvZihzdHJ1Y3QgbHdzX3NwYV9jcmVhdGVfaW5mbykpOwogIGZwLT53cyA9IHdzX2R1cCh3cyk7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5jb3VudF9wYXJhbXMgPSBucGFyYW1zOwogIGZwLT5zcGFfY3JlYXRlX2luZm8ucGFyYW1fbmFtZXMgPSBwYXJhbV9uYW1lczsKICBmcC0+c3BhX2NyZWF0ZV9pbmZvLm1heF9zdG9yYWdlID0gY2h1bmtfc2l6ZSArIDE7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5vcHRfY2IgPSAmZm9ybV9wYXJzZXJfY2FsbGJhY2s7CiAgZnAtPnNwYV9jcmVhdGVfaW5mby5vcHRfZGF0YSA9IGZwOwoKICBmcC0+c3BhID0gbHdzX3NwYV9jcmVhdGVfdmlhX2luZm8od3MtPmx3c2ksICZmcC0+c3BhX2NyZWF0ZV9pbmZvKTsKICBmcC0+ZXhjZXB0aW9uID0gSlNfTlVMTDsKICBmcC0+bmFtZSA9IEpTX1VOREVGSU5FRDsKICBmcC0+ZmlsZSA9IEpTX1VOREVGSU5FRDsKfQoKc3RydWN0IGZvcm1fcGFyc2VyKgpmb3JtX3BhcnNlcl9hbGxvYyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCBmb3JtX3BhcnNlciogcmV0OwoKICByZXQgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKHN0cnVjdCBmb3JtX3BhcnNlcikpOwogIHJldC0+cmVmX2NvdW50ID0gMTsKICByZXR1cm4gcmV0Owp9Cgp2b2lkCmZvcm1fcGFyc2VyX2NsZWFyKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTQ29udGV4dCogY3R4KSB7CgogIGlmKGZwLT5zcGEpIHsKICAgIGx3c19zcGFfZGVzdHJveShmcC0+c3BhKTsKICAgIGZwLT5zcGEgPSAwOwogIH0KCiAgaWYoZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lcykgewogICAganNfZnJlZShjdHgsICh2b2lkKilmcC0+c3BhX2NyZWF0ZV9pbmZvLnBhcmFtX25hbWVzKTsKICB9CiAgbWVtc2V0KCZmcC0+c3BhX2NyZWF0ZV9pbmZvLCAwLCBzaXplb2Yoc3RydWN0IGx3c19zcGFfY3JlYXRlX2luZm8pKTsKCiAgRlJFRUNCKGZwLT5jYi5jb250ZW50KTsKICBGUkVFQ0IoZnAtPmNiLm9wZW4pOwogIEZSRUVDQihmcC0+Y2IuY2xvc2UpOwp9Cgp2b2lkCmZvcm1fcGFyc2VyX2NsZWFyX3J0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTUnVudGltZSogcnQpIHsKCiAgaWYoZnAtPnNwYSkgewogICAgbHdzX3NwYV9kZXN0cm95KGZwLT5zcGEpOwogICAgZnAtPnNwYSA9IDA7CiAgfQoKICBpZihmcC0+c3BhX2NyZWF0ZV9pbmZvLnBhcmFtX25hbWVzKSB7CiAgICBqc19mcmVlX3J0KHJ0LCAodm9pZCopZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lcyk7CiAgfQogIG1lbXNldCgmZnAtPnNwYV9jcmVhdGVfaW5mbywgMCwgc2l6ZW9mKHN0cnVjdCBsd3Nfc3BhX2NyZWF0ZV9pbmZvKSk7CgogIEZSRUVDQl9SVChmcC0+Y2IuY29udGVudCk7CiAgRlJFRUNCX1JUKGZwLT5jYi5vcGVuKTsKICBGUkVFQ0JfUlQoZnAtPmNiLmNsb3NlKTsKfQoKdm9pZApmb3JtX3BhcnNlcl9mcmVlKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoLS1mcC0+cmVmX2NvdW50ID09IDApIHsKICAgIHdzX2ZyZWUoZnAtPndzLCBjdHgpOwogICAgZm9ybV9wYXJzZXJfY2xlYXIoZnAsIGN0eCk7CiAgICBqc19mcmVlKGN0eCwgZnApOwogIH0KfQoKdm9pZApmb3JtX3BhcnNlcl9mcmVlX3J0KHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIEpTUnVudGltZSogcnQpIHsKICBpZigtLWZwLT5yZWZfY291bnQgPT0gMCkgewogICAgd3NfZnJlZV9ydChmcC0+d3MsIHJ0KTsKICAgIGZvcm1fcGFyc2VyX2NsZWFyX3J0KGZwLCBydCk7CiAgICBqc19mcmVlX3J0KHJ0LCBmcCk7CiAgfQp9Cgpjb25zdCBjaGFyKgpmb3JtX3BhcnNlcl9wYXJhbV9uYW1lKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGludCBpbmRleCkgewogIGlmKGluZGV4ID49IDAgJiYgaW5kZXggPCBmcC0+c3BhX2NyZWF0ZV9pbmZvLmNvdW50X3BhcmFtcykgewogICAgcmV0dXJuIGZwLT5zcGFfY3JlYXRlX2luZm8ucGFyYW1fbmFtZXNbaW5kZXhdOwogIH0KICByZXR1cm4gMDsKfQoKYm9vbApmb3JtX3BhcnNlcl9wYXJhbV92YWxpZChzdHJ1Y3QgZm9ybV9wYXJzZXIqIGZwLCBpbnQgaW5kZXgpIHsKICBpZihpbmRleCA+PSAwICYmIGluZGV4IDwgZnAtPnNwYV9jcmVhdGVfaW5mby5jb3VudF9wYXJhbXMpIHsKICAgIHJldHVybiB0cnVlOwogIH0KICByZXR1cm4gZmFsc2U7Cn0KCnNpemVfdApmb3JtX3BhcnNlcl9wYXJhbV9jb3VudChzdHJ1Y3QgZm9ybV9wYXJzZXIqIGZwKSB7CiAgcmV0dXJuIGZwLT5zcGFfY3JlYXRlX2luZm8uY291bnRfcGFyYW1zOwp9CgppbnQKZm9ybV9wYXJzZXJfcGFyYW1faW5kZXgoc3RydWN0IGZvcm1fcGFyc2VyKiBmcCwgY29uc3QgY2hhciogbmFtZSkgewogIGludCBpOwogIGZvcihpID0gMDsgaSA8IGZwLT5zcGFfY3JlYXRlX2luZm8uY291bnRfcGFyYW1zOyBpKyspIHsKICAgIGlmKCFzdHJjbXAoZnAtPnNwYV9jcmVhdGVfaW5mby5wYXJhbV9uYW1lc1tpXSwgbmFtZSkpCiAgICAgIHJldHVybiBpOwogIH0KICByZXR1cm4gLTE7Cn0KCmJvb2wKZm9ybV9wYXJzZXJfcGFyYW1fZXhpc3RzKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGNvbnN0IGNoYXIqIG5hbWUpIHsKICBpbnQgaSA9IGZvcm1fcGFyc2VyX3BhcmFtX2luZGV4KGZwLCBuYW1lKTsKCiAgcmV0dXJuIGkgIT0gLTE7Cn0KCmludApmb3JtX3BhcnNlcl9wcm9jZXNzKHN0cnVjdCBmb3JtX3BhcnNlciogZnAsIGNvbnN0IHZvaWQqIGRhdGEsIHNpemVfdCBsZW4pIHsKICBpbnQgcmV0dmFsID0gbHdzX3NwYV9wcm9jZXNzKGZwLT5zcGEsIGRhdGEsIGxlbik7CiAgZnAtPnJlYWQgKz0gbGVuOwogIHJldHVybiByZXR2YWw7Cn0KAAAAAAAAAABWEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgsAAAAAAABSCwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/form-parser.h",
			"settings":
			{
				"buffer_size": 1205,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAIoAAAAAAAAAiwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigAAAAAAAACKAAAAAAAAAAAAAAAAAAAA"
				],
				[
					5,
					1,
					"left_delete",
					null,
					"AQAAAIoAAAAAAAAAigAAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAiwAAAAAAAACLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "tyepe"
					},
					"BQAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAI0AAAAAAAAAAAAAAI0AAAAAAAAAjgAAAAAAAAAAAAAAjgAAAAAAAACPAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigAAAAAAAACKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					3,
					"left_delete",
					null,
					"AwAAAI4AAAAAAAAAjgAAAAAAAAABAAAAZY0AAAAAAAAAjQAAAAAAAAABAAAAcIwAAAAAAAAAjAAAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAjwAAAAAAAACPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "pedef"
					},
					"BQAAAIwAAAAAAAAAjQAAAAAAAAAAAAAAjQAAAAAAAACOAAAAAAAAAAAAAACOAAAAAAAAAI8AAAAAAAAAAAAAAI8AAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACRAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJEAAAAAAAAAkgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQAAAAAAAACRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " FormParser"
					},
					"CwAAAKsBAAAAAAAArAEAAAAAAAAAAAAArAEAAAAAAACtAQAAAAAAAAAAAACtAQAAAAAAAK4BAAAAAAAAAAAAAK4BAAAAAAAArwEAAAAAAAAAAAAArwEAAAAAAACwAQAAAAAAAAAAAACwAQAAAAAAALEBAAAAAAAAAAAAALEBAAAAAAAAsgEAAAAAAAAAAAAAsgEAAAAAAACzAQAAAAAAAAAAAACzAQAAAAAAALQBAAAAAAAAAAAAALQBAAAAAAAAtQEAAAAAAAAAAAAAtQEAAAAAAAC2AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwEAAAAAAACrAQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"",
					null,
					"AgAAALkBAAAAAAAA1AQAAAAAAAAAAAAA1AQAAAAAAADUBAAAAAAAAHADAAB2b2lkIGZvcm1fcGFyc2VyX2luaXQoc3RydWN0IGZvcm1fcGFyc2VyKiwgc3RydWN0IHNvY2tldCogd3MsIGludCBucGFyYW1zLCBjb25zdCBjaGFyKiBjb25zdCogcGFyYW1fbmFtZXMsIHNpemVfdCBjaHVua19zaXplKTsKc3RydWN0IGZvcm1fcGFyc2VyKiBmb3JtX3BhcnNlcl9hbGxvYyhKU0NvbnRleHQqKTsKc3RydWN0IGZvcm1fcGFyc2VyKiBmb3JtX3BhcnNlcl9kdXAoc3RydWN0IGZvcm1fcGFyc2VyKik7CnZvaWQgZm9ybV9wYXJzZXJfY2xlYXIoc3RydWN0IGZvcm1fcGFyc2VyKiwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIGZvcm1fcGFyc2VyX2NsZWFyX3J0KHN0cnVjdCBmb3JtX3BhcnNlciosIEpTUnVudGltZSogcnQpOwp2b2lkIGZvcm1fcGFyc2VyX2ZyZWUoc3RydWN0IGZvcm1fcGFyc2VyKiwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIGZvcm1fcGFyc2VyX2ZyZWVfcnQoc3RydWN0IGZvcm1fcGFyc2VyKiwgSlNSdW50aW1lKiBydCk7CmNvbnN0IGNoYXIqIGZvcm1fcGFyc2VyX3BhcmFtX25hbWUoc3RydWN0IGZvcm1fcGFyc2VyKiwgaW50IGluZGV4KTsKX0Jvb2wgZm9ybV9wYXJzZXJfcGFyYW1fdmFsaWQoc3RydWN0IGZvcm1fcGFyc2VyKiwgaW50IGluZGV4KTsKc2l6ZV90IGZvcm1fcGFyc2VyX3BhcmFtX2NvdW50KHN0cnVjdCBmb3JtX3BhcnNlciopOwppbnQgZm9ybV9wYXJzZXJfcGFyYW1faW5kZXgoc3RydWN0IGZvcm1fcGFyc2VyKiwgY29uc3QgY2hhciogbmFtZSk7Cl9Cb29sIGZvcm1fcGFyc2VyX3BhcmFtX2V4aXN0cyhzdHJ1Y3QgZm9ybV9wYXJzZXIqLCBjb25zdCBjaGFyKiBuYW1lKTsKaW50IGZvcm1fcGFyc2VyX3Byb2Nlc3Moc3RydWN0IGZvcm1fcGFyc2VyKiwgY29uc3Qgdm9pZCogZGF0YSwgc2l6ZV90IGxlbik7",
					"AQAAAAAAAAABAAAAKQUAAAAAAAC5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "bool"
					},
					"BQAAAJADAAAAAAAAkQMAAAAAAAAAAAAAkQMAAAAAAACRAwAAAAAAAAUAAABfQm9vbJEDAAAAAAAAkgMAAAAAAAAAAAAAkgMAAAAAAACTAwAAAAAAAAAAAACTAwAAAAAAAJQDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAMAAAAAAACVAwAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"cut",
					null,
					"AQAAAJADAAAAAAAAkAMAAAAAAAAEAAAAYm9vbA",
					"AQAAAAAAAAABAAAAlAMAAAAAAACQAwAAAAAAAAAAAAAAAAAA"
				],
				[
					37,
					1,
					"paste",
					null,
					"AQAAAJADAAAAAAAAlAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAMAAAAAAACQAwAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"paste",
					null,
					"AgAAAEIEAAAAAAAARgQAAAAAAAAAAAAARgQAAAAAAABGBAAAAAAAAAUAAABfQm9vbA",
					"AQAAAAAAAAABAAAARwQAAAAAAABCBAAAAAAAAAAAAAAAAAAA"
				],
				[
					71,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD6BAAAI2lmbmRlZiBRSlNORVRfTElCX0ZPUk1fUEFSU0VSX0gKI2RlZmluZSBRSlNORVRfTElCX0ZPUk1fUEFSU0VSX0gKCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlIDxzdGRib29sLmg+CiNpbmNsdWRlICJjYWxsYmFjay5oIgoKdHlwZWRlZiBzdHJ1Y3QgZm9ybV9wYXJzZXIgewogIGludCByZWZfY291bnQ7CiAgc3RydWN0IGx3c19zcGFfY3JlYXRlX2luZm8gc3BhX2NyZWF0ZV9pbmZvOwogIHN0cnVjdCBsd3Nfc3BhKiBzcGE7CiAgc3RydWN0IGx3c2FjKiBsd3NhY19oZWFkOwogIHN0cnVjdCBzb2NrZXQqIHdzOwogIHN0cnVjdCB7CiAgICBKU0NhbGxiYWNrIGNvbnRlbnQsIG9wZW4sIGNsb3NlLCBmaW5hbGl6ZTsKICB9IGNiOwogIEpTVmFsdWUgZXhjZXB0aW9uOwogIEpTVmFsdWUgbmFtZSwgZmlsZTsKICBzaXplX3QgcmVhZDsKfSBGb3JtUGFyc2VyOwoKdm9pZCAgICAgICAgZm9ybV9wYXJzZXJfaW5pdChGb3JtUGFyc2VyKiwgc3RydWN0IHNvY2tldCogd3MsIGludCBucGFyYW1zLCBjb25zdCBjaGFyKiBjb25zdCogcGFyYW1fbmFtZXMsIHNpemVfdCBjaHVua19zaXplKTsKRm9ybVBhcnNlciogZm9ybV9wYXJzZXJfYWxsb2MoSlNDb250ZXh0Kik7CnZvaWQgICAgICAgIGZvcm1fcGFyc2VyX2NsZWFyKEZvcm1QYXJzZXIqLCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgICAgICAgIGZvcm1fcGFyc2VyX2NsZWFyX3J0KEZvcm1QYXJzZXIqLCBKU1J1bnRpbWUqIHJ0KTsKdm9pZCAgICAgICAgZm9ybV9wYXJzZXJfZnJlZShGb3JtUGFyc2VyKiwgSlNDb250ZXh0KiBjdHgpOwp2b2lkICAgICAgICBmb3JtX3BhcnNlcl9mcmVlX3J0KEZvcm1QYXJzZXIqLCBKU1J1bnRpbWUqIHJ0KTsKY29uc3QgY2hhciogZm9ybV9wYXJzZXJfcGFyYW1fbmFtZShGb3JtUGFyc2VyKiwgaW50IGluZGV4KTsKYm9vbCAgICAgICBmb3JtX3BhcnNlcl9wYXJhbV92YWxpZChGb3JtUGFyc2VyKiwgaW50IGluZGV4KTsKc2l6ZV90ICAgICAgZm9ybV9wYXJzZXJfcGFyYW1fY291bnQoRm9ybVBhcnNlciopOwppbnQgICAgICAgICBmb3JtX3BhcnNlcl9wYXJhbV9pbmRleChGb3JtUGFyc2VyKiwgY29uc3QgY2hhciogbmFtZSk7CmJvb2wgICAgICAgZm9ybV9wYXJzZXJfcGFyYW1fZXhpc3RzKEZvcm1QYXJzZXIqLCBjb25zdCBjaGFyKiBuYW1lKTsKaW50ICAgICAgICAgZm9ybV9wYXJzZXJfcHJvY2VzcyhGb3JtUGFyc2VyKiwgY29uc3Qgdm9pZCogZGF0YSwgc2l6ZV90IGxlbik7CgoKI2VuZGlmIC8qIFFKU05FVF9MSUJfRk9STV9QQVJTRVJfSCAqLwoAAAAAAAAAALUEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgIAAAAAAACeAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/ringbuffer.c",
			"settings":
			{
				"buffer_size": 2392,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"cut",
					null,
					"AQAAACEDAAAAAAAAIQMAAAAAAAC9AAAACnZvaWQKcmluZ2J1ZmZlcl9pbml0MihzdHJ1Y3QgcmluZ2J1ZmZlciogcmIsIHNpemVfdCBlbGVtZW50X2xlbiwgc2l6ZV90IGNvdW50KSB7CiAgY29uc3QgY2hhciogdHlwZSA9ICJhcHBsaWNhdGlvbi9iaW5hcnkiOwogIHJpbmdidWZmZXJfaW5pdChyYiwgZWxlbWVudF9sZW4sIGNvdW50LCB0eXBlLCBzdHJsZW4odHlwZSkpOwp9",
					"AQAAAAAAAAABAAAAIQMAAAAAAADeAwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"cut",
					null,
					"AQAAAAIGAAAAAAAAAgYAAAAAAAB3AAAACmNvbnN0IHZvaWQqCnJpbmdidWZmZXJfbmV4dChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfZWxlbWVudChyYi0+cmluZywgMCk7Cn0",
					"AQAAAAAAAAABAAAAAgYAAAAAAAB5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"paste",
					null,
					"AQAAAAIGAAAAAAAAeQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgYAAAAAAAACBgAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABZCQAAI2luY2x1ZGUgInJpbmdidWZmZXIuaCIKI2luY2x1ZGUgInV0aWxzLmgiCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KI2luY2x1ZGUgPHB0aHJlYWQuaD4KCi8qdm9pZApyaW5nYnVmZmVyX2R1bXAoc3RydWN0IHJpbmdidWZmZXIgY29uc3QqIHJiKSB7CiAgW29iamVjdCBPYmplY3RdCn0KKi8Kdm9pZApyaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCh2b2lkKiBlbGVtZW50KSB7fQoKdm9pZApyaW5nYnVmZmVyX2luaXQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBzaXplX3QgZWxlbWVudF9sZW4sIHNpemVfdCBjb3VudCwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4pIHsKICBpZih0eXBlKQogICAgcHN0cmNweShyYi0+dHlwZSwgTUlOKHR5cGVsZW4gKyAxLCBzaXplb2YocmItPnR5cGUpKSwgdHlwZSk7CgogIHJiLT5zaXplID0gY291bnQ7CiAgcmItPmVsZW1lbnRfbGVuID0gZWxlbWVudF9sZW47CiAgcmItPnJpbmcgPSBsd3NfcmluZ19jcmVhdGUoZWxlbWVudF9sZW4sIGNvdW50LCByaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCk7CgogIHB0aHJlYWRfbXV0ZXhfaW5pdCgmcmItPmxvY2tfcmluZywgMCk7Cn0KCnN0cnVjdCByaW5nYnVmZmVyKgpyaW5nYnVmZmVyX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCByaW5nYnVmZmVyKiByYjsKCiAgaWYoKHJiID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3QgcmluZ2J1ZmZlcikpKSkKICAgIHJiLT5yZWZfY291bnQgPSAxOwoKICByZXR1cm4gcmI7Cn0KCgpzaXplX3QKcmluZ2J1ZmZlcl9pbnNlcnQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBjb25zdCB2b2lkKiBwdHIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwoKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19pbnNlcnQocmItPnJpbmcsIHB0ciwgbik7CiAgcHRocmVhZF9tdXRleF91bmxvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXR1cm4gcmV0Owp9CgpzaXplX3QKcmluZ2J1ZmZlcl9jb25zdW1lKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgdm9pZCogcHRyLCBzaXplX3QgbikgewogIHNpemVfdCByZXQ7CiAgYXNzZXJ0KHJiLT5yaW5nKTsKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19jb25zdW1lKHJiLT5yaW5nLCAwLCBwdHIsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKc2l6ZV90CnJpbmdidWZmZXJfc2tpcChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwogIHB0aHJlYWRfbXV0ZXhfbG9jaygmcmItPmxvY2tfcmluZyk7CgogIHJldCA9IGx3c19yaW5nX2NvbnN1bWUocmItPnJpbmcsIDAsIDAsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKY29uc3Qgdm9pZCoKcmluZ2J1ZmZlcl9uZXh0KHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGFzc2VydChyYi0+cmluZyk7CiAgcmV0dXJuIGx3c19yaW5nX2dldF9lbGVtZW50KHJiLT5yaW5nLCAwKTsKfQoKc2l6ZV90CnJpbmdidWZmZXJfd2FpdGluZyhzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfd2FpdGluZ19lbGVtZW50cyhyYi0+cmluZywgMCk7Cn0KCnNpemVfdApyaW5nYnVmZmVyX2J5dGVsZW5ndGgoc3RydWN0IHJpbmdidWZmZXIqIHJiKSB7CiAgcmV0dXJuIHJiLT5zaXplICogcmItPmVsZW1lbnRfbGVuOwp9CgpzaXplX3QKcmluZ2J1ZmZlcl9hdmFpbChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfZnJlZV9lbGVtZW50cyhyYi0+cmluZyk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl96ZXJvKHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGx3c19yaW5nX2Rlc3Ryb3kocmItPnJpbmcpOwogIG1lbXNldChyYiwgMCwgc2l6ZW9mKHN0cnVjdCByaW5nYnVmZmVyKSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNDb250ZXh0KiBjdHgpIHsKICByaW5nYnVmZmVyX2ZyZWVfcnQocmIsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlX3J0KHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNSdW50aW1lKiBydCkgewogIGlmKC0tcmItPnJlZl9jb3VudCA9PSAwKSB7CiAgICByaW5nYnVmZmVyX3plcm8ocmIpOwogICAganNfZnJlZV9ydChydCwgcmIpOwogIH0KfQoAAAAAAAAAAFkJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQYAAAAAAAB5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABZCQAAI2luY2x1ZGUgInJpbmdidWZmZXIuaCIKI2luY2x1ZGUgInV0aWxzLmgiCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KI2luY2x1ZGUgPHB0aHJlYWQuaD4KCi8qdm9pZApyaW5nYnVmZmVyX2R1bXAoc3RydWN0IHJpbmdidWZmZXIgY29uc3QqIHJiKSB7CiAgW29iamVjdCBPYmplY3RdCn0KKi8Kdm9pZApyaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCh2b2lkKiBlbGVtZW50KSB7fQoKdm9pZApyaW5nYnVmZmVyX2luaXQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBzaXplX3QgZWxlbWVudF9sZW4sIHNpemVfdCBjb3VudCwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4pIHsKICBpZih0eXBlKQogICAgcHN0cmNweShyYi0+dHlwZSwgTUlOKHR5cGVsZW4gKyAxLCBzaXplb2YocmItPnR5cGUpKSwgdHlwZSk7CgogIHJiLT5zaXplID0gY291bnQ7CiAgcmItPmVsZW1lbnRfbGVuID0gZWxlbWVudF9sZW47CiAgcmItPnJpbmcgPSBsd3NfcmluZ19jcmVhdGUoZWxlbWVudF9sZW4sIGNvdW50LCByaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCk7CgogIHB0aHJlYWRfbXV0ZXhfaW5pdCgmcmItPmxvY2tfcmluZywgMCk7Cn0KCnN0cnVjdCByaW5nYnVmZmVyKgpyaW5nYnVmZmVyX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCByaW5nYnVmZmVyKiByYjsKCiAgaWYoKHJiID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3QgcmluZ2J1ZmZlcikpKSkKICAgIHJiLT5yZWZfY291bnQgPSAxOwoKICByZXR1cm4gcmI7Cn0KCgpzaXplX3QKcmluZ2J1ZmZlcl9pbnNlcnQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBjb25zdCB2b2lkKiBwdHIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwoKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19pbnNlcnQocmItPnJpbmcsIHB0ciwgbik7CiAgcHRocmVhZF9tdXRleF91bmxvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXR1cm4gcmV0Owp9CgpzaXplX3QKcmluZ2J1ZmZlcl9jb25zdW1lKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgdm9pZCogcHRyLCBzaXplX3QgbikgewogIHNpemVfdCByZXQ7CiAgYXNzZXJ0KHJiLT5yaW5nKTsKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19jb25zdW1lKHJiLT5yaW5nLCAwLCBwdHIsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKc2l6ZV90CnJpbmdidWZmZXJfc2tpcChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwogIHB0aHJlYWRfbXV0ZXhfbG9jaygmcmItPmxvY2tfcmluZyk7CgogIHJldCA9IGx3c19yaW5nX2NvbnN1bWUocmItPnJpbmcsIDAsIDAsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKY29uc3Qgdm9pZCoKcmluZ2J1ZmZlcl9uZXh0KHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGFzc2VydChyYi0+cmluZyk7CiAgcmV0dXJuIGx3c19yaW5nX2dldF9lbGVtZW50KHJiLT5yaW5nLCAwKTsKfQoKc2l6ZV90CnJpbmdidWZmZXJfd2FpdGluZyhzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfd2FpdGluZ19lbGVtZW50cyhyYi0+cmluZywgMCk7Cn0KCnNpemVfdApyaW5nYnVmZmVyX2J5dGVsZW5ndGgoc3RydWN0IHJpbmdidWZmZXIqIHJiKSB7CiAgcmV0dXJuIHJiLT5zaXplICogcmItPmVsZW1lbnRfbGVuOwp9CgpzaXplX3QKcmluZ2J1ZmZlcl9hdmFpbChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfZnJlZV9lbGVtZW50cyhyYi0+cmluZyk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl96ZXJvKHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGx3c19yaW5nX2Rlc3Ryb3kocmItPnJpbmcpOwogIG1lbXNldChyYiwgMCwgc2l6ZW9mKHN0cnVjdCByaW5nYnVmZmVyKSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNDb250ZXh0KiBjdHgpIHsKICByaW5nYnVmZmVyX2ZyZWVfcnQocmIsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlX3J0KHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNSdW50aW1lKiBydCkgewogIGlmKC0tcmItPnJlZl9jb3VudCA9PSAwKSB7CiAgICByaW5nYnVmZmVyX3plcm8ocmIpOwogICAganNfZnJlZV9ydChydCwgcmIpOwogIH0KfQoAAAAAAAAAAFkJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQYAAAAAAAB5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABZCQAAI2luY2x1ZGUgInJpbmdidWZmZXIuaCIKI2luY2x1ZGUgInV0aWxzLmgiCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KI2luY2x1ZGUgPHB0aHJlYWQuaD4KCi8qdm9pZApyaW5nYnVmZmVyX2R1bXAoc3RydWN0IHJpbmdidWZmZXIgY29uc3QqIHJiKSB7CiAgW29iamVjdCBPYmplY3RdCn0KKi8Kdm9pZApyaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCh2b2lkKiBlbGVtZW50KSB7fQoKdm9pZApyaW5nYnVmZmVyX2luaXQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBzaXplX3QgZWxlbWVudF9sZW4sIHNpemVfdCBjb3VudCwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4pIHsKICBpZih0eXBlKQogICAgcHN0cmNweShyYi0+dHlwZSwgTUlOKHR5cGVsZW4gKyAxLCBzaXplb2YocmItPnR5cGUpKSwgdHlwZSk7CgogIHJiLT5zaXplID0gY291bnQ7CiAgcmItPmVsZW1lbnRfbGVuID0gZWxlbWVudF9sZW47CiAgcmItPnJpbmcgPSBsd3NfcmluZ19jcmVhdGUoZWxlbWVudF9sZW4sIGNvdW50LCByaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCk7CgogIHB0aHJlYWRfbXV0ZXhfaW5pdCgmcmItPmxvY2tfcmluZywgMCk7Cn0KCnN0cnVjdCByaW5nYnVmZmVyKgpyaW5nYnVmZmVyX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCByaW5nYnVmZmVyKiByYjsKCiAgaWYoKHJiID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3QgcmluZ2J1ZmZlcikpKSkKICAgIHJiLT5yZWZfY291bnQgPSAxOwoKICByZXR1cm4gcmI7Cn0KCgpzaXplX3QKcmluZ2J1ZmZlcl9pbnNlcnQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBjb25zdCB2b2lkKiBwdHIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwoKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19pbnNlcnQocmItPnJpbmcsIHB0ciwgbik7CiAgcHRocmVhZF9tdXRleF91bmxvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXR1cm4gcmV0Owp9CgpzaXplX3QKcmluZ2J1ZmZlcl9jb25zdW1lKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgdm9pZCogcHRyLCBzaXplX3QgbikgewogIHNpemVfdCByZXQ7CiAgYXNzZXJ0KHJiLT5yaW5nKTsKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19jb25zdW1lKHJiLT5yaW5nLCAwLCBwdHIsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKc2l6ZV90CnJpbmdidWZmZXJfc2tpcChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwogIHB0aHJlYWRfbXV0ZXhfbG9jaygmcmItPmxvY2tfcmluZyk7CgogIHJldCA9IGx3c19yaW5nX2NvbnN1bWUocmItPnJpbmcsIDAsIDAsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKY29uc3Qgdm9pZCoKcmluZ2J1ZmZlcl9uZXh0KHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGFzc2VydChyYi0+cmluZyk7CiAgcmV0dXJuIGx3c19yaW5nX2dldF9lbGVtZW50KHJiLT5yaW5nLCAwKTsKfQoKc2l6ZV90CnJpbmdidWZmZXJfd2FpdGluZyhzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfd2FpdGluZ19lbGVtZW50cyhyYi0+cmluZywgMCk7Cn0KCnNpemVfdApyaW5nYnVmZmVyX2J5dGVsZW5ndGgoc3RydWN0IHJpbmdidWZmZXIqIHJiKSB7CiAgcmV0dXJuIHJiLT5zaXplICogcmItPmVsZW1lbnRfbGVuOwp9CgpzaXplX3QKcmluZ2J1ZmZlcl9hdmFpbChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfZnJlZV9lbGVtZW50cyhyYi0+cmluZyk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl96ZXJvKHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGx3c19yaW5nX2Rlc3Ryb3kocmItPnJpbmcpOwogIG1lbXNldChyYiwgMCwgc2l6ZW9mKHN0cnVjdCByaW5nYnVmZmVyKSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNDb250ZXh0KiBjdHgpIHsKICByaW5nYnVmZmVyX2ZyZWVfcnQocmIsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlX3J0KHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNSdW50aW1lKiBydCkgewogIGlmKC0tcmItPnJlZl9jb3VudCA9PSAwKSB7CiAgICByaW5nYnVmZmVyX3plcm8ocmIpOwogICAganNfZnJlZV9ydChydCwgcmIpOwogIH0KfQoAAAAAAAAAAFkJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQYAAAAAAAB5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABZCQAAI2luY2x1ZGUgInJpbmdidWZmZXIuaCIKI2luY2x1ZGUgInV0aWxzLmgiCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KI2luY2x1ZGUgPHB0aHJlYWQuaD4KCi8qdm9pZApyaW5nYnVmZmVyX2R1bXAoc3RydWN0IHJpbmdidWZmZXIgY29uc3QqIHJiKSB7CiAgW29iamVjdCBPYmplY3RdCn0KKi8Kdm9pZApyaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCh2b2lkKiBlbGVtZW50KSB7fQoKdm9pZApyaW5nYnVmZmVyX2luaXQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBzaXplX3QgZWxlbWVudF9sZW4sIHNpemVfdCBjb3VudCwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4pIHsKICBpZih0eXBlKQogICAgcHN0cmNweShyYi0+dHlwZSwgTUlOKHR5cGVsZW4gKyAxLCBzaXplb2YocmItPnR5cGUpKSwgdHlwZSk7CgogIHJiLT5zaXplID0gY291bnQ7CiAgcmItPmVsZW1lbnRfbGVuID0gZWxlbWVudF9sZW47CiAgcmItPnJpbmcgPSBsd3NfcmluZ19jcmVhdGUoZWxlbWVudF9sZW4sIGNvdW50LCByaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCk7CgogIHB0aHJlYWRfbXV0ZXhfaW5pdCgmcmItPmxvY2tfcmluZywgMCk7Cn0KCnN0cnVjdCByaW5nYnVmZmVyKgpyaW5nYnVmZmVyX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCByaW5nYnVmZmVyKiByYjsKCiAgaWYoKHJiID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3QgcmluZ2J1ZmZlcikpKSkKICAgIHJiLT5yZWZfY291bnQgPSAxOwoKICByZXR1cm4gcmI7Cn0KCgpzaXplX3QKcmluZ2J1ZmZlcl9pbnNlcnQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBjb25zdCB2b2lkKiBwdHIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwoKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19pbnNlcnQocmItPnJpbmcsIHB0ciwgbik7CiAgcHRocmVhZF9tdXRleF91bmxvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXR1cm4gcmV0Owp9CgpzaXplX3QKcmluZ2J1ZmZlcl9jb25zdW1lKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgdm9pZCogcHRyLCBzaXplX3QgbikgewogIHNpemVfdCByZXQ7CiAgYXNzZXJ0KHJiLT5yaW5nKTsKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19jb25zdW1lKHJiLT5yaW5nLCAwLCBwdHIsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKc2l6ZV90CnJpbmdidWZmZXJfc2tpcChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwogIHB0aHJlYWRfbXV0ZXhfbG9jaygmcmItPmxvY2tfcmluZyk7CgogIHJldCA9IGx3c19yaW5nX2NvbnN1bWUocmItPnJpbmcsIDAsIDAsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKY29uc3Qgdm9pZCoKcmluZ2J1ZmZlcl9uZXh0KHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGFzc2VydChyYi0+cmluZyk7CiAgcmV0dXJuIGx3c19yaW5nX2dldF9lbGVtZW50KHJiLT5yaW5nLCAwKTsKfQoKc2l6ZV90CnJpbmdidWZmZXJfd2FpdGluZyhzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfd2FpdGluZ19lbGVtZW50cyhyYi0+cmluZywgMCk7Cn0KCnNpemVfdApyaW5nYnVmZmVyX2J5dGVsZW5ndGgoc3RydWN0IHJpbmdidWZmZXIqIHJiKSB7CiAgcmV0dXJuIHJiLT5zaXplICogcmItPmVsZW1lbnRfbGVuOwp9CgpzaXplX3QKcmluZ2J1ZmZlcl9hdmFpbChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfZnJlZV9lbGVtZW50cyhyYi0+cmluZyk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl96ZXJvKHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGx3c19yaW5nX2Rlc3Ryb3kocmItPnJpbmcpOwogIG1lbXNldChyYiwgMCwgc2l6ZW9mKHN0cnVjdCByaW5nYnVmZmVyKSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNDb250ZXh0KiBjdHgpIHsKICByaW5nYnVmZmVyX2ZyZWVfcnQocmIsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlX3J0KHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNSdW50aW1lKiBydCkgewogIGlmKC0tcmItPnJlZl9jb3VudCA9PSAwKSB7CiAgICByaW5nYnVmZmVyX3plcm8ocmIpOwogICAganNfZnJlZV9ydChydCwgcmIpOwogIH0KfQoAAAAAAAAAAFkJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQYAAAAAAAB5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABZCQAAI2luY2x1ZGUgInJpbmdidWZmZXIuaCIKI2luY2x1ZGUgInV0aWxzLmgiCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KI2luY2x1ZGUgPHB0aHJlYWQuaD4KCi8qdm9pZApyaW5nYnVmZmVyX2R1bXAoc3RydWN0IHJpbmdidWZmZXIgY29uc3QqIHJiKSB7CiAgW29iamVjdCBPYmplY3RdCn0KKi8Kdm9pZApyaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCh2b2lkKiBlbGVtZW50KSB7fQoKdm9pZApyaW5nYnVmZmVyX2luaXQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBzaXplX3QgZWxlbWVudF9sZW4sIHNpemVfdCBjb3VudCwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4pIHsKICBpZih0eXBlKQogICAgcHN0cmNweShyYi0+dHlwZSwgTUlOKHR5cGVsZW4gKyAxLCBzaXplb2YocmItPnR5cGUpKSwgdHlwZSk7CgogIHJiLT5zaXplID0gY291bnQ7CiAgcmItPmVsZW1lbnRfbGVuID0gZWxlbWVudF9sZW47CiAgcmItPnJpbmcgPSBsd3NfcmluZ19jcmVhdGUoZWxlbWVudF9sZW4sIGNvdW50LCByaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCk7CgogIHB0aHJlYWRfbXV0ZXhfaW5pdCgmcmItPmxvY2tfcmluZywgMCk7Cn0KCnN0cnVjdCByaW5nYnVmZmVyKgpyaW5nYnVmZmVyX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCByaW5nYnVmZmVyKiByYjsKCiAgaWYoKHJiID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3QgcmluZ2J1ZmZlcikpKSkKICAgIHJiLT5yZWZfY291bnQgPSAxOwoKICByZXR1cm4gcmI7Cn0KCgpzaXplX3QKcmluZ2J1ZmZlcl9pbnNlcnQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBjb25zdCB2b2lkKiBwdHIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwoKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19pbnNlcnQocmItPnJpbmcsIHB0ciwgbik7CiAgcHRocmVhZF9tdXRleF91bmxvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXR1cm4gcmV0Owp9CgpzaXplX3QKcmluZ2J1ZmZlcl9jb25zdW1lKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgdm9pZCogcHRyLCBzaXplX3QgbikgewogIHNpemVfdCByZXQ7CiAgYXNzZXJ0KHJiLT5yaW5nKTsKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19jb25zdW1lKHJiLT5yaW5nLCAwLCBwdHIsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKc2l6ZV90CnJpbmdidWZmZXJfc2tpcChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwogIHB0aHJlYWRfbXV0ZXhfbG9jaygmcmItPmxvY2tfcmluZyk7CgogIHJldCA9IGx3c19yaW5nX2NvbnN1bWUocmItPnJpbmcsIDAsIDAsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKY29uc3Qgdm9pZCoKcmluZ2J1ZmZlcl9uZXh0KHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGFzc2VydChyYi0+cmluZyk7CiAgcmV0dXJuIGx3c19yaW5nX2dldF9lbGVtZW50KHJiLT5yaW5nLCAwKTsKfQoKc2l6ZV90CnJpbmdidWZmZXJfd2FpdGluZyhzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfd2FpdGluZ19lbGVtZW50cyhyYi0+cmluZywgMCk7Cn0KCnNpemVfdApyaW5nYnVmZmVyX2J5dGVsZW5ndGgoc3RydWN0IHJpbmdidWZmZXIqIHJiKSB7CiAgcmV0dXJuIHJiLT5zaXplICogcmItPmVsZW1lbnRfbGVuOwp9CgpzaXplX3QKcmluZ2J1ZmZlcl9hdmFpbChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfZnJlZV9lbGVtZW50cyhyYi0+cmluZyk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl96ZXJvKHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGx3c19yaW5nX2Rlc3Ryb3kocmItPnJpbmcpOwogIG1lbXNldChyYiwgMCwgc2l6ZW9mKHN0cnVjdCByaW5nYnVmZmVyKSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNDb250ZXh0KiBjdHgpIHsKICByaW5nYnVmZmVyX2ZyZWVfcnQocmIsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlX3J0KHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNSdW50aW1lKiBydCkgewogIGlmKC0tcmItPnJlZl9jb3VudCA9PSAwKSB7CiAgICByaW5nYnVmZmVyX3plcm8ocmIpOwogICAganNfZnJlZV9ydChydCwgcmIpOwogIH0KfQoAAAAAAAAAAFkJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQYAAAAAAAB5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABZCQAAI2luY2x1ZGUgInJpbmdidWZmZXIuaCIKI2luY2x1ZGUgInV0aWxzLmgiCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KI2luY2x1ZGUgPHB0aHJlYWQuaD4KCi8qdm9pZApyaW5nYnVmZmVyX2R1bXAoc3RydWN0IHJpbmdidWZmZXIgY29uc3QqIHJiKSB7CiAgW29iamVjdCBPYmplY3RdCn0KKi8Kdm9pZApyaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCh2b2lkKiBlbGVtZW50KSB7fQoKdm9pZApyaW5nYnVmZmVyX2luaXQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBzaXplX3QgZWxlbWVudF9sZW4sIHNpemVfdCBjb3VudCwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4pIHsKICBpZih0eXBlKQogICAgcHN0cmNweShyYi0+dHlwZSwgTUlOKHR5cGVsZW4gKyAxLCBzaXplb2YocmItPnR5cGUpKSwgdHlwZSk7CgogIHJiLT5zaXplID0gY291bnQ7CiAgcmItPmVsZW1lbnRfbGVuID0gZWxlbWVudF9sZW47CiAgcmItPnJpbmcgPSBsd3NfcmluZ19jcmVhdGUoZWxlbWVudF9sZW4sIGNvdW50LCByaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCk7CgogIHB0aHJlYWRfbXV0ZXhfaW5pdCgmcmItPmxvY2tfcmluZywgMCk7Cn0KCnN0cnVjdCByaW5nYnVmZmVyKgpyaW5nYnVmZmVyX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCByaW5nYnVmZmVyKiByYjsKCiAgaWYoKHJiID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3QgcmluZ2J1ZmZlcikpKSkKICAgIHJiLT5yZWZfY291bnQgPSAxOwoKICByZXR1cm4gcmI7Cn0KCgpzaXplX3QKcmluZ2J1ZmZlcl9pbnNlcnQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBjb25zdCB2b2lkKiBwdHIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwoKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19pbnNlcnQocmItPnJpbmcsIHB0ciwgbik7CiAgcHRocmVhZF9tdXRleF91bmxvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXR1cm4gcmV0Owp9CgpzaXplX3QKcmluZ2J1ZmZlcl9jb25zdW1lKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgdm9pZCogcHRyLCBzaXplX3QgbikgewogIHNpemVfdCByZXQ7CiAgYXNzZXJ0KHJiLT5yaW5nKTsKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19jb25zdW1lKHJiLT5yaW5nLCAwLCBwdHIsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKc2l6ZV90CnJpbmdidWZmZXJfc2tpcChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwogIHB0aHJlYWRfbXV0ZXhfbG9jaygmcmItPmxvY2tfcmluZyk7CgogIHJldCA9IGx3c19yaW5nX2NvbnN1bWUocmItPnJpbmcsIDAsIDAsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKY29uc3Qgdm9pZCoKcmluZ2J1ZmZlcl9uZXh0KHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGFzc2VydChyYi0+cmluZyk7CiAgcmV0dXJuIGx3c19yaW5nX2dldF9lbGVtZW50KHJiLT5yaW5nLCAwKTsKfQoKc2l6ZV90CnJpbmdidWZmZXJfd2FpdGluZyhzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfd2FpdGluZ19lbGVtZW50cyhyYi0+cmluZywgMCk7Cn0KCnNpemVfdApyaW5nYnVmZmVyX2J5dGVsZW5ndGgoc3RydWN0IHJpbmdidWZmZXIqIHJiKSB7CiAgcmV0dXJuIHJiLT5zaXplICogcmItPmVsZW1lbnRfbGVuOwp9CgpzaXplX3QKcmluZ2J1ZmZlcl9hdmFpbChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfZnJlZV9lbGVtZW50cyhyYi0+cmluZyk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl96ZXJvKHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGx3c19yaW5nX2Rlc3Ryb3kocmItPnJpbmcpOwogIG1lbXNldChyYiwgMCwgc2l6ZW9mKHN0cnVjdCByaW5nYnVmZmVyKSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNDb250ZXh0KiBjdHgpIHsKICByaW5nYnVmZmVyX2ZyZWVfcnQocmIsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlX3J0KHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNSdW50aW1lKiBydCkgewogIGlmKC0tcmItPnJlZl9jb3VudCA9PSAwKSB7CiAgICByaW5nYnVmZmVyX3plcm8ocmIpOwogICAganNfZnJlZV9ydChydCwgcmIpOwogIH0KfQoAAAAAAAAAAFkJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQYAAAAAAAB5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABZCQAAI2luY2x1ZGUgInJpbmdidWZmZXIuaCIKI2luY2x1ZGUgInV0aWxzLmgiCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KI2luY2x1ZGUgPHB0aHJlYWQuaD4KCi8qdm9pZApyaW5nYnVmZmVyX2R1bXAoc3RydWN0IHJpbmdidWZmZXIgY29uc3QqIHJiKSB7CiAgW29iamVjdCBPYmplY3RdCn0KKi8Kdm9pZApyaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCh2b2lkKiBlbGVtZW50KSB7fQoKdm9pZApyaW5nYnVmZmVyX2luaXQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBzaXplX3QgZWxlbWVudF9sZW4sIHNpemVfdCBjb3VudCwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4pIHsKICBpZih0eXBlKQogICAgcHN0cmNweShyYi0+dHlwZSwgTUlOKHR5cGVsZW4gKyAxLCBzaXplb2YocmItPnR5cGUpKSwgdHlwZSk7CgogIHJiLT5zaXplID0gY291bnQ7CiAgcmItPmVsZW1lbnRfbGVuID0gZWxlbWVudF9sZW47CiAgcmItPnJpbmcgPSBsd3NfcmluZ19jcmVhdGUoZWxlbWVudF9sZW4sIGNvdW50LCByaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCk7CgogIHB0aHJlYWRfbXV0ZXhfaW5pdCgmcmItPmxvY2tfcmluZywgMCk7Cn0KCnN0cnVjdCByaW5nYnVmZmVyKgpyaW5nYnVmZmVyX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCByaW5nYnVmZmVyKiByYjsKCiAgaWYoKHJiID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3QgcmluZ2J1ZmZlcikpKSkKICAgIHJiLT5yZWZfY291bnQgPSAxOwoKICByZXR1cm4gcmI7Cn0KCgpzaXplX3QKcmluZ2J1ZmZlcl9pbnNlcnQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBjb25zdCB2b2lkKiBwdHIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwoKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19pbnNlcnQocmItPnJpbmcsIHB0ciwgbik7CiAgcHRocmVhZF9tdXRleF91bmxvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXR1cm4gcmV0Owp9CgpzaXplX3QKcmluZ2J1ZmZlcl9jb25zdW1lKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgdm9pZCogcHRyLCBzaXplX3QgbikgewogIHNpemVfdCByZXQ7CiAgYXNzZXJ0KHJiLT5yaW5nKTsKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19jb25zdW1lKHJiLT5yaW5nLCAwLCBwdHIsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKc2l6ZV90CnJpbmdidWZmZXJfc2tpcChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwogIHB0aHJlYWRfbXV0ZXhfbG9jaygmcmItPmxvY2tfcmluZyk7CgogIHJldCA9IGx3c19yaW5nX2NvbnN1bWUocmItPnJpbmcsIDAsIDAsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKY29uc3Qgdm9pZCoKcmluZ2J1ZmZlcl9uZXh0KHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGFzc2VydChyYi0+cmluZyk7CiAgcmV0dXJuIGx3c19yaW5nX2dldF9lbGVtZW50KHJiLT5yaW5nLCAwKTsKfQoKc2l6ZV90CnJpbmdidWZmZXJfd2FpdGluZyhzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfd2FpdGluZ19lbGVtZW50cyhyYi0+cmluZywgMCk7Cn0KCnNpemVfdApyaW5nYnVmZmVyX2J5dGVsZW5ndGgoc3RydWN0IHJpbmdidWZmZXIqIHJiKSB7CiAgcmV0dXJuIHJiLT5zaXplICogcmItPmVsZW1lbnRfbGVuOwp9CgpzaXplX3QKcmluZ2J1ZmZlcl9hdmFpbChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfZnJlZV9lbGVtZW50cyhyYi0+cmluZyk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl96ZXJvKHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGx3c19yaW5nX2Rlc3Ryb3kocmItPnJpbmcpOwogIG1lbXNldChyYiwgMCwgc2l6ZW9mKHN0cnVjdCByaW5nYnVmZmVyKSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNDb250ZXh0KiBjdHgpIHsKICByaW5nYnVmZmVyX2ZyZWVfcnQocmIsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlX3J0KHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNSdW50aW1lKiBydCkgewogIGlmKC0tcmItPnJlZl9jb3VudCA9PSAwKSB7CiAgICByaW5nYnVmZmVyX3plcm8ocmIpOwogICAganNfZnJlZV9ydChydCwgcmIpOwogIH0KfQoAAAAAAAAAAFkJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQYAAAAAAAB5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABZCQAAI2luY2x1ZGUgInJpbmdidWZmZXIuaCIKI2luY2x1ZGUgInV0aWxzLmgiCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KI2luY2x1ZGUgPHB0aHJlYWQuaD4KCi8qdm9pZApyaW5nYnVmZmVyX2R1bXAoc3RydWN0IHJpbmdidWZmZXIgY29uc3QqIHJiKSB7CiAgW29iamVjdCBPYmplY3RdCn0KKi8Kdm9pZApyaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCh2b2lkKiBlbGVtZW50KSB7fQoKdm9pZApyaW5nYnVmZmVyX2luaXQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBzaXplX3QgZWxlbWVudF9sZW4sIHNpemVfdCBjb3VudCwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4pIHsKICBpZih0eXBlKQogICAgcHN0cmNweShyYi0+dHlwZSwgTUlOKHR5cGVsZW4gKyAxLCBzaXplb2YocmItPnR5cGUpKSwgdHlwZSk7CgogIHJiLT5zaXplID0gY291bnQ7CiAgcmItPmVsZW1lbnRfbGVuID0gZWxlbWVudF9sZW47CiAgcmItPnJpbmcgPSBsd3NfcmluZ19jcmVhdGUoZWxlbWVudF9sZW4sIGNvdW50LCByaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCk7CgogIHB0aHJlYWRfbXV0ZXhfaW5pdCgmcmItPmxvY2tfcmluZywgMCk7Cn0KCnN0cnVjdCByaW5nYnVmZmVyKgpyaW5nYnVmZmVyX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCByaW5nYnVmZmVyKiByYjsKCiAgaWYoKHJiID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3QgcmluZ2J1ZmZlcikpKSkKICAgIHJiLT5yZWZfY291bnQgPSAxOwoKICByZXR1cm4gcmI7Cn0KCgpzaXplX3QKcmluZ2J1ZmZlcl9pbnNlcnQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBjb25zdCB2b2lkKiBwdHIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwoKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19pbnNlcnQocmItPnJpbmcsIHB0ciwgbik7CiAgcHRocmVhZF9tdXRleF91bmxvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXR1cm4gcmV0Owp9CgpzaXplX3QKcmluZ2J1ZmZlcl9jb25zdW1lKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgdm9pZCogcHRyLCBzaXplX3QgbikgewogIHNpemVfdCByZXQ7CiAgYXNzZXJ0KHJiLT5yaW5nKTsKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19jb25zdW1lKHJiLT5yaW5nLCAwLCBwdHIsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKc2l6ZV90CnJpbmdidWZmZXJfc2tpcChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwogIHB0aHJlYWRfbXV0ZXhfbG9jaygmcmItPmxvY2tfcmluZyk7CgogIHJldCA9IGx3c19yaW5nX2NvbnN1bWUocmItPnJpbmcsIDAsIDAsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKY29uc3Qgdm9pZCoKcmluZ2J1ZmZlcl9uZXh0KHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGFzc2VydChyYi0+cmluZyk7CiAgcmV0dXJuIGx3c19yaW5nX2dldF9lbGVtZW50KHJiLT5yaW5nLCAwKTsKfQoKc2l6ZV90CnJpbmdidWZmZXJfd2FpdGluZyhzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfd2FpdGluZ19lbGVtZW50cyhyYi0+cmluZywgMCk7Cn0KCnNpemVfdApyaW5nYnVmZmVyX2J5dGVsZW5ndGgoc3RydWN0IHJpbmdidWZmZXIqIHJiKSB7CiAgcmV0dXJuIHJiLT5zaXplICogcmItPmVsZW1lbnRfbGVuOwp9CgpzaXplX3QKcmluZ2J1ZmZlcl9hdmFpbChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfZnJlZV9lbGVtZW50cyhyYi0+cmluZyk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl96ZXJvKHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGx3c19yaW5nX2Rlc3Ryb3kocmItPnJpbmcpOwogIG1lbXNldChyYiwgMCwgc2l6ZW9mKHN0cnVjdCByaW5nYnVmZmVyKSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNDb250ZXh0KiBjdHgpIHsKICByaW5nYnVmZmVyX2ZyZWVfcnQocmIsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlX3J0KHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNSdW50aW1lKiBydCkgewogIGlmKC0tcmItPnJlZl9jb3VudCA9PSAwKSB7CiAgICByaW5nYnVmZmVyX3plcm8ocmIpOwogICAganNfZnJlZV9ydChydCwgcmIpOwogIH0KfQoAAAAAAAAAAFkJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQYAAAAAAAB5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABZCQAAI2luY2x1ZGUgInJpbmdidWZmZXIuaCIKI2luY2x1ZGUgInV0aWxzLmgiCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KI2luY2x1ZGUgPHB0aHJlYWQuaD4KCi8qdm9pZApyaW5nYnVmZmVyX2R1bXAoc3RydWN0IHJpbmdidWZmZXIgY29uc3QqIHJiKSB7CiAgW29iamVjdCBPYmplY3RdCn0KKi8Kdm9pZApyaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCh2b2lkKiBlbGVtZW50KSB7fQoKdm9pZApyaW5nYnVmZmVyX2luaXQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBzaXplX3QgZWxlbWVudF9sZW4sIHNpemVfdCBjb3VudCwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4pIHsKICBpZih0eXBlKQogICAgcHN0cmNweShyYi0+dHlwZSwgTUlOKHR5cGVsZW4gKyAxLCBzaXplb2YocmItPnR5cGUpKSwgdHlwZSk7CgogIHJiLT5zaXplID0gY291bnQ7CiAgcmItPmVsZW1lbnRfbGVuID0gZWxlbWVudF9sZW47CiAgcmItPnJpbmcgPSBsd3NfcmluZ19jcmVhdGUoZWxlbWVudF9sZW4sIGNvdW50LCByaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCk7CgogIHB0aHJlYWRfbXV0ZXhfaW5pdCgmcmItPmxvY2tfcmluZywgMCk7Cn0KCnN0cnVjdCByaW5nYnVmZmVyKgpyaW5nYnVmZmVyX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCByaW5nYnVmZmVyKiByYjsKCiAgaWYoKHJiID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3QgcmluZ2J1ZmZlcikpKSkKICAgIHJiLT5yZWZfY291bnQgPSAxOwoKICByZXR1cm4gcmI7Cn0KCgpzaXplX3QKcmluZ2J1ZmZlcl9pbnNlcnQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBjb25zdCB2b2lkKiBwdHIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwoKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19pbnNlcnQocmItPnJpbmcsIHB0ciwgbik7CiAgcHRocmVhZF9tdXRleF91bmxvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXR1cm4gcmV0Owp9CgpzaXplX3QKcmluZ2J1ZmZlcl9jb25zdW1lKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgdm9pZCogcHRyLCBzaXplX3QgbikgewogIHNpemVfdCByZXQ7CiAgYXNzZXJ0KHJiLT5yaW5nKTsKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19jb25zdW1lKHJiLT5yaW5nLCAwLCBwdHIsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKc2l6ZV90CnJpbmdidWZmZXJfc2tpcChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwogIHB0aHJlYWRfbXV0ZXhfbG9jaygmcmItPmxvY2tfcmluZyk7CgogIHJldCA9IGx3c19yaW5nX2NvbnN1bWUocmItPnJpbmcsIDAsIDAsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKY29uc3Qgdm9pZCoKcmluZ2J1ZmZlcl9uZXh0KHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGFzc2VydChyYi0+cmluZyk7CiAgcmV0dXJuIGx3c19yaW5nX2dldF9lbGVtZW50KHJiLT5yaW5nLCAwKTsKfQoKc2l6ZV90CnJpbmdidWZmZXJfd2FpdGluZyhzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfd2FpdGluZ19lbGVtZW50cyhyYi0+cmluZywgMCk7Cn0KCnNpemVfdApyaW5nYnVmZmVyX2J5dGVsZW5ndGgoc3RydWN0IHJpbmdidWZmZXIqIHJiKSB7CiAgcmV0dXJuIHJiLT5zaXplICogcmItPmVsZW1lbnRfbGVuOwp9CgpzaXplX3QKcmluZ2J1ZmZlcl9hdmFpbChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfZnJlZV9lbGVtZW50cyhyYi0+cmluZyk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl96ZXJvKHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGx3c19yaW5nX2Rlc3Ryb3kocmItPnJpbmcpOwogIG1lbXNldChyYiwgMCwgc2l6ZW9mKHN0cnVjdCByaW5nYnVmZmVyKSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNDb250ZXh0KiBjdHgpIHsKICByaW5nYnVmZmVyX2ZyZWVfcnQocmIsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlX3J0KHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNSdW50aW1lKiBydCkgewogIGlmKC0tcmItPnJlZl9jb3VudCA9PSAwKSB7CiAgICByaW5nYnVmZmVyX3plcm8ocmIpOwogICAganNfZnJlZV9ydChydCwgcmIpOwogIH0KfQoAAAAAAAAAAFkJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQYAAAAAAAB5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABZCQAAI2luY2x1ZGUgInJpbmdidWZmZXIuaCIKI2luY2x1ZGUgInV0aWxzLmgiCiNpbmNsdWRlIDxxdWlja2pzLmg+CiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KI2luY2x1ZGUgPHB0aHJlYWQuaD4KCi8qdm9pZApyaW5nYnVmZmVyX2R1bXAoc3RydWN0IHJpbmdidWZmZXIgY29uc3QqIHJiKSB7CiAgW29iamVjdCBPYmplY3RdCn0KKi8Kdm9pZApyaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCh2b2lkKiBlbGVtZW50KSB7fQoKdm9pZApyaW5nYnVmZmVyX2luaXQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBzaXplX3QgZWxlbWVudF9sZW4sIHNpemVfdCBjb3VudCwgY29uc3QgY2hhciogdHlwZSwgc2l6ZV90IHR5cGVsZW4pIHsKICBpZih0eXBlKQogICAgcHN0cmNweShyYi0+dHlwZSwgTUlOKHR5cGVsZW4gKyAxLCBzaXplb2YocmItPnR5cGUpKSwgdHlwZSk7CgogIHJiLT5zaXplID0gY291bnQ7CiAgcmItPmVsZW1lbnRfbGVuID0gZWxlbWVudF9sZW47CiAgcmItPnJpbmcgPSBsd3NfcmluZ19jcmVhdGUoZWxlbWVudF9sZW4sIGNvdW50LCByaW5nYnVmZmVyX2Rlc3Ryb3lfZWxlbWVudCk7CgogIHB0aHJlYWRfbXV0ZXhfaW5pdCgmcmItPmxvY2tfcmluZywgMCk7Cn0KCnN0cnVjdCByaW5nYnVmZmVyKgpyaW5nYnVmZmVyX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCByaW5nYnVmZmVyKiByYjsKCiAgaWYoKHJiID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3QgcmluZ2J1ZmZlcikpKSkKICAgIHJiLT5yZWZfY291bnQgPSAxOwoKICByZXR1cm4gcmI7Cn0KCgpzaXplX3QKcmluZ2J1ZmZlcl9pbnNlcnQoc3RydWN0IHJpbmdidWZmZXIqIHJiLCBjb25zdCB2b2lkKiBwdHIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwoKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19pbnNlcnQocmItPnJpbmcsIHB0ciwgbik7CiAgcHRocmVhZF9tdXRleF91bmxvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXR1cm4gcmV0Owp9CgpzaXplX3QKcmluZ2J1ZmZlcl9jb25zdW1lKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgdm9pZCogcHRyLCBzaXplX3QgbikgewogIHNpemVfdCByZXQ7CiAgYXNzZXJ0KHJiLT5yaW5nKTsKICBwdGhyZWFkX211dGV4X2xvY2soJnJiLT5sb2NrX3JpbmcpOwoKICByZXQgPSBsd3NfcmluZ19jb25zdW1lKHJiLT5yaW5nLCAwLCBwdHIsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKc2l6ZV90CnJpbmdidWZmZXJfc2tpcChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIsIHNpemVfdCBuKSB7CiAgc2l6ZV90IHJldDsKICBhc3NlcnQocmItPnJpbmcpOwogIHB0aHJlYWRfbXV0ZXhfbG9jaygmcmItPmxvY2tfcmluZyk7CgogIHJldCA9IGx3c19yaW5nX2NvbnN1bWUocmItPnJpbmcsIDAsIDAsIG4pOwoKICBwdGhyZWFkX211dGV4X3VubG9jaygmcmItPmxvY2tfcmluZyk7CiAgcmV0dXJuIHJldDsKfQoKY29uc3Qgdm9pZCoKcmluZ2J1ZmZlcl9uZXh0KHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGFzc2VydChyYi0+cmluZyk7CiAgcmV0dXJuIGx3c19yaW5nX2dldF9lbGVtZW50KHJiLT5yaW5nLCAwKTsKfQoKc2l6ZV90CnJpbmdidWZmZXJfd2FpdGluZyhzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfd2FpdGluZ19lbGVtZW50cyhyYi0+cmluZywgMCk7Cn0KCnNpemVfdApyaW5nYnVmZmVyX2J5dGVsZW5ndGgoc3RydWN0IHJpbmdidWZmZXIqIHJiKSB7CiAgcmV0dXJuIHJiLT5zaXplICogcmItPmVsZW1lbnRfbGVuOwp9CgpzaXplX3QKcmluZ2J1ZmZlcl9hdmFpbChzdHJ1Y3QgcmluZ2J1ZmZlciogcmIpIHsKICBhc3NlcnQocmItPnJpbmcpOwogIHJldHVybiBsd3NfcmluZ19nZXRfY291bnRfZnJlZV9lbGVtZW50cyhyYi0+cmluZyk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl96ZXJvKHN0cnVjdCByaW5nYnVmZmVyKiByYikgewogIGx3c19yaW5nX2Rlc3Ryb3kocmItPnJpbmcpOwogIG1lbXNldChyYiwgMCwgc2l6ZW9mKHN0cnVjdCByaW5nYnVmZmVyKSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlKHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNDb250ZXh0KiBjdHgpIHsKICByaW5nYnVmZmVyX2ZyZWVfcnQocmIsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnZvaWQKcmluZ2J1ZmZlcl9mcmVlX3J0KHN0cnVjdCByaW5nYnVmZmVyKiByYiwgSlNSdW50aW1lKiBydCkgewogIGlmKC0tcmItPnJlZl9jb3VudCA9PSAwKSB7CiAgICByaW5nYnVmZmVyX3plcm8ocmIpOwogICAganNfZnJlZV9ydChydCwgcmIpOwogIH0KfQoAAAAAAAAAAFgJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQYAAAAAAAB5BgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/response.h",
			"settings":
			{
				"buffer_size": 968,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBAAAI2lmbmRlZiBRSlNORVRfTElCX1JFU1BPTlNFX0gKI2RlZmluZSBRSlNORVRfTElCX1JFU1BPTlNFX0gKCiNpbmNsdWRlIDxzdGRib29sLmg+CiNpbmNsdWRlIDxzdGRpbnQuaD4KI2luY2x1ZGUgPHN5cy90eXBlcy5oPgojaW5jbHVkZSAidXJsLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImdlbmVyYXRvci5oIgoKc3RydWN0IHNlc3Npb25fZGF0YTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfcmVzcG9uc2UgewogIGludCByZWZfY291bnQ7CiAgYm9vbCByZWFkX29ubHkgOiAxLCBoZWFkZXJzX3NlbnQgOiAxLCBjb21wcmVzcyA6IDE7CiAgc3RydWN0IHVybCB1cmw7CiAgY2hhciogdHlwZTsKICBpbnQgc3RhdHVzOwogIGNoYXIqIHN0YXR1c190ZXh0OwogIEJ5dGVCdWZmZXIgaGVhZGVyczsKICBHZW5lcmF0b3IqIGdlbmVyYXRvcjsKfSBSZXNwb25zZTsKCnZvaWQgcmVzcG9uc2VfaW5pdChzdHJ1Y3QgaHR0cF9yZXNwb25zZSosIHN0cnVjdCB1cmwsIGludDMyX3QsIGNoYXIqIHN0YXR1c190ZXh0LCBCT09MIGhlYWRlcnNfc2VudCwgY2hhciogdHlwZSk7CnN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwb25zZV9kdXAoc3RydWN0IGh0dHBfcmVzcG9uc2UqKTsKdm9pZCByZXNwb25zZV9jbGVhcihzdHJ1Y3QgaHR0cF9yZXNwb25zZSosIEpTQ29udGV4dCopOwp2b2lkIHJlc3BvbnNlX2NsZWFyX3J0KHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgSlNSdW50aW1lKik7CnZvaWQgcmVzcG9uc2VfZnJlZShzdHJ1Y3QgaHR0cF9yZXNwb25zZSosIEpTQ29udGV4dCopOwp2b2lkIHJlc3BvbnNlX2ZyZWVfcnQoc3RydWN0IGh0dHBfcmVzcG9uc2UqLCBKU1J1bnRpbWUqKTsKCnN0YXRpYyBpbmxpbmUgR2VuZXJhdG9yKgpyZXNwb25zZV9nZW5lcmF0b3Ioc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AsIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoIXJlc3AtPmdlbmVyYXRvcikKICAgIHJlc3AtPmdlbmVyYXRvciA9IGdlbmVyYXRvcl9uZXcoY3R4KTsKICByZXR1cm4gcmVzcC0+Z2VuZXJhdG9yOwp9CgpzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcG9uc2VfbmV3KEpTQ29udGV4dCopOwoKI2VuZGlmIC8qIFFKU05FVF9MSUJfUkVTUE9OU0VfSCAqLwoAAAAAAAAAAFIEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBAAAI2lmbmRlZiBRSlNORVRfTElCX1JFU1BPTlNFX0gKI2RlZmluZSBRSlNORVRfTElCX1JFU1BPTlNFX0gKCiNpbmNsdWRlIDxzdGRib29sLmg+CiNpbmNsdWRlIDxzdGRpbnQuaD4KI2luY2x1ZGUgPHN5cy90eXBlcy5oPgojaW5jbHVkZSAidXJsLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImdlbmVyYXRvci5oIgoKc3RydWN0IHNlc3Npb25fZGF0YTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfcmVzcG9uc2UgewogIGludCByZWZfY291bnQ7CiAgYm9vbCByZWFkX29ubHkgOiAxLCBoZWFkZXJzX3NlbnQgOiAxLCBjb21wcmVzcyA6IDE7CiAgc3RydWN0IHVybCB1cmw7CiAgY2hhciogdHlwZTsKICBpbnQgc3RhdHVzOwogIGNoYXIqIHN0YXR1c190ZXh0OwogIEJ5dGVCdWZmZXIgaGVhZGVyczsKICBHZW5lcmF0b3IqIGdlbmVyYXRvcjsKfSBSZXNwb25zZTsKCnZvaWQgcmVzcG9uc2VfaW5pdChzdHJ1Y3QgaHR0cF9yZXNwb25zZSosIHN0cnVjdCB1cmwsIGludDMyX3QsIGNoYXIqIHN0YXR1c190ZXh0LCBCT09MIGhlYWRlcnNfc2VudCwgY2hhciogdHlwZSk7CnN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwb25zZV9kdXAoc3RydWN0IGh0dHBfcmVzcG9uc2UqKTsKdm9pZCByZXNwb25zZV9jbGVhcihzdHJ1Y3QgaHR0cF9yZXNwb25zZSosIEpTQ29udGV4dCopOwp2b2lkIHJlc3BvbnNlX2NsZWFyX3J0KHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgSlNSdW50aW1lKik7CnZvaWQgcmVzcG9uc2VfZnJlZShzdHJ1Y3QgaHR0cF9yZXNwb25zZSosIEpTQ29udGV4dCopOwp2b2lkIHJlc3BvbnNlX2ZyZWVfcnQoc3RydWN0IGh0dHBfcmVzcG9uc2UqLCBKU1J1bnRpbWUqKTsKCnN0YXRpYyBpbmxpbmUgR2VuZXJhdG9yKgpyZXNwb25zZV9nZW5lcmF0b3Ioc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AsIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoIXJlc3AtPmdlbmVyYXRvcikKICAgIHJlc3AtPmdlbmVyYXRvciA9IGdlbmVyYXRvcl9uZXcoY3R4KTsKICByZXR1cm4gcmVzcC0+Z2VuZXJhdG9yOwp9CgpzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcG9uc2VfbmV3KEpTQ29udGV4dCopOwoKI2VuZGlmIC8qIFFKU05FVF9MSUJfUkVTUE9OU0VfSCAqLwoAAAAAAAAAAFIEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"cut",
					null,
					"AQAAAGECAAAAAAAAYQIAAAAAAAA4AAAAdm9pZCByZXNwb25zZV9jbGVhcihzdHJ1Y3QgaHR0cF9yZXNwb25zZSosIEpTQ29udGV4dCopOwo",
					"AQAAAAAAAAABAAAAYQIAAAAAAACZAgAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"right_delete",
					null,
					"AQAAAJwCAAAAAAAAnAIAAAAAAAA3AAAAdm9pZCByZXNwb25zZV9mcmVlKHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgSlNDb250ZXh0Kik7Cg",
					"AQAAAAAAAAABAAAAnAIAAAAAAADTAgAAAAAAAAAAAAAAAAAA"
				],
				[
					17,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADjAwAAI2lmbmRlZiBRSlNORVRfTElCX1JFU1BPTlNFX0gKI2RlZmluZSBRSlNORVRfTElCX1JFU1BPTlNFX0gKCiNpbmNsdWRlIDxzdGRib29sLmg+CiNpbmNsdWRlIDxzdGRpbnQuaD4KI2luY2x1ZGUgPHN5cy90eXBlcy5oPgojaW5jbHVkZSAidXJsLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImdlbmVyYXRvci5oIgoKc3RydWN0IHNlc3Npb25fZGF0YTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfcmVzcG9uc2UgewogIGludCByZWZfY291bnQ7CiAgYm9vbCByZWFkX29ubHkgOiAxLCBoZWFkZXJzX3NlbnQgOiAxLCBjb21wcmVzcyA6IDE7CiAgc3RydWN0IHVybCB1cmw7CiAgY2hhciogdHlwZTsKICBpbnQgc3RhdHVzOwogIGNoYXIqIHN0YXR1c190ZXh0OwogIEJ5dGVCdWZmZXIgaGVhZGVyczsKICBHZW5lcmF0b3IqIGdlbmVyYXRvcjsKfSBSZXNwb25zZTsKCnZvaWQgcmVzcG9uc2VfaW5pdChzdHJ1Y3QgaHR0cF9yZXNwb25zZSosIHN0cnVjdCB1cmwsIGludDMyX3QsIGNoYXIqIHN0YXR1c190ZXh0LCBCT09MIGhlYWRlcnNfc2VudCwgY2hhciogdHlwZSk7CnN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwb25zZV9kdXAoc3RydWN0IGh0dHBfcmVzcG9uc2UqKTsKdm9pZCByZXNwb25zZV9jbGVhcl9ydChzdHJ1Y3QgaHR0cF9yZXNwb25zZSosIEpTUnVudGltZSopOwp2b2lkIHJlc3BvbnNlX2ZyZWVfcnQoc3RydWN0IGh0dHBfcmVzcG9uc2UqLCBKU1J1bnRpbWUqKTsKCnN0YXRpYyBpbmxpbmUgR2VuZXJhdG9yKgpyZXNwb25zZV9nZW5lcmF0b3Ioc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AsIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoIXJlc3AtPmdlbmVyYXRvcikKICAgIHJlc3AtPmdlbmVyYXRvciA9IGdlbmVyYXRvcl9uZXcoY3R4KTsKICByZXR1cm4gcmVzcC0+Z2VuZXJhdG9yOwp9CgpzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcG9uc2VfbmV3KEpTQ29udGV4dCopOwoKI2VuZGlmIC8qIFFKU05FVF9MSUJfUkVTUE9OU0VfSCAqLwoAAAAAAAAAAOADAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wMAAAAAAADjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADgAwAAI2lmbmRlZiBRSlNORVRfTElCX1JFU1BPTlNFX0gKI2RlZmluZSBRSlNORVRfTElCX1JFU1BPTlNFX0gKCiNpbmNsdWRlIDxzdGRib29sLmg+CiNpbmNsdWRlIDxzdGRpbnQuaD4KI2luY2x1ZGUgPHN5cy90eXBlcy5oPgojaW5jbHVkZSAidXJsLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImdlbmVyYXRvci5oIgoKc3RydWN0IHNlc3Npb25fZGF0YTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfcmVzcG9uc2UgewogIGludCByZWZfY291bnQ7CiAgYm9vbCByZWFkX29ubHkgOiAxLCBoZWFkZXJzX3NlbnQgOiAxLCBjb21wcmVzcyA6IDE7CiAgc3RydWN0IHVybCB1cmw7CiAgY2hhciogdHlwZTsKICBpbnQgc3RhdHVzOwogIGNoYXIqIHN0YXR1c190ZXh0OwogIEJ5dGVCdWZmZXIgaGVhZGVyczsKICBHZW5lcmF0b3IqIGdlbmVyYXRvcjsKfSBSZXNwb25zZTsKCnZvaWQgcmVzcG9uc2VfaW5pdChzdHJ1Y3QgaHR0cF9yZXNwb25zZSosIHN0cnVjdCB1cmwsIGludDMyX3QsIGNoYXIqIHN0YXR1c190ZXh0LCBCT09MIGhlYWRlcnNfc2VudCwgY2hhciogdHlwZSk7CnN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwb25zZV9kdXAoc3RydWN0IGh0dHBfcmVzcG9uc2UqKTsKdm9pZCByZXNwb25zZV9jbGVhcl9ydChzdHJ1Y3QgaHR0cF9yZXNwb25zZSosIEpTUnVudGltZSopOwp2b2lkIHJlc3BvbnNlX2ZyZWUoc3RydWN0IGh0dHBfcmVzcG9uc2UqLCBKU1J1bnRpbWUqKTsKCnN0YXRpYyBpbmxpbmUgR2VuZXJhdG9yKgpyZXNwb25zZV9nZW5lcmF0b3Ioc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AsIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoIXJlc3AtPmdlbmVyYXRvcikKICAgIHJlc3AtPmdlbmVyYXRvciA9IGdlbmVyYXRvcl9uZXcoY3R4KTsKICByZXR1cm4gcmVzcC0+Z2VuZXJhdG9yOwp9CgpzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcG9uc2VfbmV3KEpTQ29udGV4dCopOwoKI2VuZGlmIC8qIFFKU05FVF9MSUJfUkVTUE9OU0VfSCAqLwoAAAAAAAAAAN0DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwMAAAAAAAAUAwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"",
					null,
					"AgAAALQBAAAAAAAA2AIAAAAAAAAAAAAA2AIAAAAAAADYAgAAAAAAABwBAAB2b2lkIHJlc3BvbnNlX2luaXQoc3RydWN0IGh0dHBfcmVzcG9uc2UqLCBzdHJ1Y3QgdXJsLCBpbnQzMl90LCBjaGFyKiBzdGF0dXNfdGV4dCwgQk9PTCBoZWFkZXJzX3NlbnQsIGNoYXIqIHR5cGUpOwpzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcG9uc2VfZHVwKHN0cnVjdCBodHRwX3Jlc3BvbnNlKik7CnZvaWQgcmVzcG9uc2VfY2xlYXIoc3RydWN0IGh0dHBfcmVzcG9uc2UqLCBKU1J1bnRpbWUqKTsKdm9pZCByZXNwb25zZV9mcmVlKHN0cnVjdCBodHRwX3Jlc3BvbnNlKiwgSlNSdW50aW1lKik7Cg",
					"AQAAAAAAAAABAAAA0AIAAAAAAAC0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "URL"
					},
					"BAAAANcBAAAAAAAA2AEAAAAAAAAAAAAA2AEAAAAAAADYAQAAAAAAAAoAAABzdHJ1Y3QgdXJs2AEAAAAAAADZAQAAAAAAAAAAAADZAQAAAAAAANoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wEAAAAAAADhAQAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADeAwAAI2lmbmRlZiBRSlNORVRfTElCX1JFU1BPTlNFX0gKI2RlZmluZSBRSlNORVRfTElCX1JFU1BPTlNFX0gKCiNpbmNsdWRlIDxzdGRib29sLmg+CiNpbmNsdWRlIDxzdGRpbnQuaD4KI2luY2x1ZGUgPHN5cy90eXBlcy5oPgojaW5jbHVkZSAidXJsLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImdlbmVyYXRvci5oIgoKc3RydWN0IHNlc3Npb25fZGF0YTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfcmVzcG9uc2UgewogIGludCByZWZfY291bnQ7CiAgYm9vbCByZWFkX29ubHkgOiAxLCBoZWFkZXJzX3NlbnQgOiAxLCBjb21wcmVzcyA6IDE7CiAgc3RydWN0IHVybCB1cmw7CiAgY2hhciogdHlwZTsKICBpbnQgc3RhdHVzOwogIGNoYXIqIHN0YXR1c190ZXh0OwogIEJ5dGVCdWZmZXIgaGVhZGVyczsKICBHZW5lcmF0b3IqIGdlbmVyYXRvcjsKfSBSZXNwb25zZTsKCnZvaWQgICAgICByZXNwb25zZV9pbml0KFJlc3BvbnNlKiwgVVJMIHVybCwgaW50MzJfdCBzdGF0dXMsIGNoYXIqIHN0YXR1c190ZXh0LCBCT09MIGhlYWRlcnNfc2VudCwgY2hhciogdHlwZSk7ClJlc3BvbnNlKiByZXNwb25zZV9kdXAoUmVzcG9uc2UqKTsKdm9pZCAgICAgIHJlc3BvbnNlX2NsZWFyKFJlc3BvbnNlKiwgSlNSdW50aW1lKiBydCk7CnZvaWQgICAgICByZXNwb25zZV9mcmVlKFJlc3BvbnNlKiwgSlNSdW50aW1lKiBydCk7ClJlc3BvbnNlKiByZXNwb25zZV9uZXcoSlNDb250ZXh0Kik7CgpzdGF0aWMgaW5saW5lIEdlbmVyYXRvcioKcmVzcG9uc2VfZ2VuZXJhdG9yKHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwLCBKU0NvbnRleHQqIGN0eCkgewogIGlmKCFyZXNwLT5nZW5lcmF0b3IpCiAgICByZXNwLT5nZW5lcmF0b3IgPSBnZW5lcmF0b3JfbmV3KGN0eCk7CiAgcmV0dXJuIHJlc3AtPmdlbmVyYXRvcjsKfQoKc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3BvbnNlX25ldyhKU0NvbnRleHQqKTsKCiNlbmRpZiAvKiBRSlNORVRfTElCX1JFU1BPTlNFX0ggKi8KAAAAAAAAAADXAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2gEAAAAAAADaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADXAwAAI2lmbmRlZiBRSlNORVRfTElCX1JFU1BPTlNFX0gKI2RlZmluZSBRSlNORVRfTElCX1JFU1BPTlNFX0gKCiNpbmNsdWRlIDxzdGRib29sLmg+CiNpbmNsdWRlIDxzdGRpbnQuaD4KI2luY2x1ZGUgPHN5cy90eXBlcy5oPgojaW5jbHVkZSAidXJsLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImdlbmVyYXRvci5oIgoKc3RydWN0IHNlc3Npb25fZGF0YTsKCnR5cGVkZWYgc3RydWN0IGh0dHBfcmVzcG9uc2UgewogIGludCByZWZfY291bnQ7CiAgYm9vbCByZWFkX29ubHkgOiAxLCBoZWFkZXJzX3NlbnQgOiAxLCBjb21wcmVzcyA6IDE7CiAgVVJMIHVybDsKICBjaGFyKiB0eXBlOwogIGludCBzdGF0dXM7CiAgY2hhciogc3RhdHVzX3RleHQ7CiAgQnl0ZUJ1ZmZlciBoZWFkZXJzOwogIEdlbmVyYXRvciogZ2VuZXJhdG9yOwp9IFJlc3BvbnNlOwoKdm9pZCAgICAgIHJlc3BvbnNlX2luaXQoUmVzcG9uc2UqLCBVUkwgdXJsLCBpbnQzMl90IHN0YXR1cywgY2hhciogc3RhdHVzX3RleHQsIEJPT0wgaGVhZGVyc19zZW50LCBjaGFyKiB0eXBlKTsKUmVzcG9uc2UqIHJlc3BvbnNlX2R1cChSZXNwb25zZSopOwp2b2lkICAgICAgcmVzcG9uc2VfY2xlYXIoUmVzcG9uc2UqLCBKU1J1bnRpbWUqIHJ0KTsKdm9pZCAgICAgIHJlc3BvbnNlX2ZyZWUoUmVzcG9uc2UqLCBKU1J1bnRpbWUqIHJ0KTsKUmVzcG9uc2UqIHJlc3BvbnNlX25ldyhKU0NvbnRleHQqKTsKCnN0YXRpYyBpbmxpbmUgR2VuZXJhdG9yKgpyZXNwb25zZV9nZW5lcmF0b3Ioc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AsIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoIXJlc3AtPmdlbmVyYXRvcikKICAgIHJlc3AtPmdlbmVyYXRvciA9IGdlbmVyYXRvcl9uZXcoY3R4KTsKICByZXR1cm4gcmVzcC0+Z2VuZXJhdG9yOwp9CgpzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcG9uc2VfbmV3KEpTQ29udGV4dCopOwoKI2VuZGlmIC8qIFFKU05FVF9MSUJfUkVTUE9OU0VfSCAqLwoAAAAAAAAAAMgDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wMAAAAAAADXAwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/utils.c",
			"settings":
			{
				"buffer_size": 4029,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9DwAAI2luY2x1ZGUgInV0aWxzLmgiCgpzaXplX3QKc3RyX2Nocihjb25zdCBjaGFyKiBpbiwgY2hhciBuZWVkbGUpIHsKICBjb25zdCBjaGFyKiB0OwoKICBmb3IodCA9IGluOyAqdDsgKyt0KQogICAgaWYoKnQgPT0gbmVlZGxlKQogICAgICBicmVhazsKCiAgcmV0dXJuIChzaXplX3QpKHQgLSBpbik7Cn0KCnNpemVfdApzdHJfY2hycyhjb25zdCBjaGFyKiBpbiwgY29uc3QgY2hhciBuZWVkbGVzW10sIHNpemVfdCBubikgewogIGNvbnN0IGNoYXIqIHQgPSBpbjsKICBzaXplX3QgaTsKICBmb3IoOzspIHsKICAgIGlmKCEqdCkKICAgICAgYnJlYWs7CiAgICBmb3IoaSA9IDA7IGkgPCBubjsgaSsrKQogICAgICBpZigqdCA9PSBuZWVkbGVzW2ldKQogICAgICAgIHJldHVybiAoc2l6ZV90KSh0IC0gaW4pOwogICAgKyt0OwogIH0KICByZXR1cm4gKHNpemVfdCkodCAtIGluKTsKfQoKc2l6ZV90CmJ5dGVfY2hyKGNvbnN0IHZvaWQqIHgsIHNpemVfdCBsZW4sIGNoYXIgYykgewogIGNvbnN0IGNoYXIgKnMsICp0LCAqc3RyID0geDsKCiAgZm9yKHMgPSBzdHIsIHQgPSBzICsgbGVuOyBzIDwgdDsgKytzKQogICAgaWYoKnMgPT0gYykKICAgICAgYnJlYWs7CgogIHJldHVybiBzIC0gc3RyOwp9CgpzaXplX3QKYnl0ZV9jaHJzKGNvbnN0IHZvaWQqIHgsIHNpemVfdCBsZW4sIGNvbnN0IGNoYXIgbmVlZGxlW10sIHNpemVfdCBubCkgewogIGNvbnN0IGNoYXIgKnMsICp0OwoKICBmb3IocyA9IHgsIHQgPSAoY29uc3QgY2hhciopeCArIGxlbjsgcyAhPSB0OyBzKyspCiAgICBpZihieXRlX2NocihuZWVkbGUsIG5sLCAqcykgPCBubCkKICAgICAgYnJlYWs7CgogIHJldHVybiBzIC0gKGNvbnN0IGNoYXIqKXg7Cn0KCnNpemVfdApieXRlX3JjaHIoY29uc3Qgdm9pZCogeCwgc2l6ZV90IGxlbiwgY2hhciBuZWVkbGUpIHsKICBjb25zdCBjaGFyICpzLCAqdDsKCiAgZm9yKHMgPSB4LCB0ID0gKGNvbnN0IGNoYXIqKXggKyBsZW47IC0tdCA+PSBzOykKICAgIGlmKCp0ID09IG5lZWRsZSkKICAgICAgcmV0dXJuIChzaXplX3QpKHQgLSBzKTsKCiAgcmV0dXJuIGxlbjsKfQoKaW50CmJ5dGVfZGlmZihjb25zdCB2b2lkKiBhLCBzaXplX3QgbGVuLCBjb25zdCB2b2lkKiBiKSB7CiAgc2l6ZV90IGk7CiAgZm9yKGkgPSAwOyBpIDwgbGVuOyArK2kpIHsKICAgIGludCByID0gKCh1bnNpZ25lZCBjaGFyKilhKVtpXSAtICgodW5zaWduZWQgY2hhciopYilbaV07CiAgICBpZihyKQogICAgICByZXR1cm4gcjsKICB9CiAgcmV0dXJuIDA7Cn0KCnNpemVfdApieXRlX2VxdWFsKGNvbnN0IHZvaWQqIHMsIHNpemVfdCBuLCBjb25zdCB2b2lkKiB0KSB7CiAgcmV0dXJuIGJ5dGVfZGlmZihzLCBuLCB0KSA9PSAwOwp9CgpzaXplX3QKYnl0ZV9maW5kYihjb25zdCB2b2lkKiBoYXlzdGFjaywgc2l6ZV90IGhsZW4sIGNvbnN0IHZvaWQqIHdoYXQsIHNpemVfdCB3bGVuKSB7CiAgc2l6ZV90IGksIGxhc3Q7CiAgY29uc3QgY2hhciogcyA9IChjb25zdCBjaGFyKiloYXlzdGFjazsKICBpZihobGVuIDwgd2xlbikKICAgIHJldHVybiBobGVuOwogIGxhc3QgPSBobGVuIC0gd2xlbjsKICBmb3IoaSA9IDA7IGkgPD0gbGFzdDsgaSsrKSB7CiAgICBpZihieXRlX2VxdWFsKHMsIHdsZW4sIHdoYXQpKQogICAgICByZXR1cm4gaTsKICAgIHMrKzsKICB9CiAgcmV0dXJuIGhsZW47Cn0KCnNpemVfdApzY2FuX3doaXRlbnNraXAoY29uc3Qgdm9pZCogcywgc2l6ZV90IGxpbWl0KSB7CiAgY29uc3QgY2hhciAqdCA9IHMsICp1ID0gdCArIGxpbWl0OwoKICB3aGlsZSh0IDwgdSAmJiBpc3NwYWNlKCp0KSkgKyt0OwoKICByZXR1cm4gdCAtIChjb25zdCBjaGFyKilzOwp9CgpzaXplX3QKc2Nhbl9ub253aGl0ZW5za2lwKGNvbnN0IHZvaWQqIHMsIHNpemVfdCBsaW1pdCkgewogIGNvbnN0IGNoYXIgKnQgPSBzLCAqdSA9IHQgKyBsaW1pdDsKCiAgd2hpbGUodCA8IHUgJiYgIWlzc3BhY2UoKnQpKSArK3Q7CgogIHJldHVybiB0IC0gKGNvbnN0IGNoYXIqKXM7Cn0KCnNpemVfdApzY2FuX2VvbChjb25zdCB2b2lkKiBzLCBzaXplX3QgbGltaXQpIHsKICBjb25zdCBjaGFyKiB0ID0gczsKICBzaXplX3QgaSA9IGJ5dGVfY2hyKHMsIGxpbWl0LCAnXG4nKTsKCiAgd2hpbGUoaSA+IDAgJiYgdFtpIC0gMV0gPT0gJ1xyJykgaS0tOwoKICByZXR1cm4gaTsKfQoKc2l6ZV90CnNjYW5fbmV4dGxpbmUoY29uc3Qgdm9pZCogcywgc2l6ZV90IGxpbWl0KSB7CiAgc2l6ZV90IGk7CgogIGlmKChpID0gYnl0ZV9jaHIocywgbGltaXQsICdcbicpKSA8IGxpbWl0KQogICAgaSsrOwoKICByZXR1cm4gaTsKfQoKc2l6ZV90CnNjYW5fY2hhcnNldG5za2lwKGNvbnN0IHZvaWQqIHMsIGNvbnN0IGNoYXIqIGNoYXJzZXQsIHNpemVfdCBsaW1pdCkgewogIGNvbnN0IGNoYXIgKnQsICp1LCAqaTsKCiAgZm9yKHQgPSBzLCB1ID0gdCArIGxpbWl0OyB0IDwgdTsgdCsrKSB7CiAgICBmb3IoaSA9IGNoYXJzZXQ7ICppOyBpKyspCiAgICAgIGlmKCppID09ICp0KQogICAgICAgIGJyZWFrOwogICAgaWYoKmkgIT0gKnQpCiAgICAgIGJyZWFrOwogIH0KICByZXR1cm4gdCAtIChjb25zdCBjaGFyKilzOwp9CgpzaXplX3QKc2Nhbl9ub25jaGFyc2V0bnNraXAoY29uc3Qgdm9pZCogcywgY29uc3QgY2hhciogY2hhcnNldCwgc2l6ZV90IGxpbWl0KSB7CiAgY29uc3QgY2hhciAqdCwgKnUsICppOwoKICBmb3IodCA9IHMsIHUgPSB0ICsgbGltaXQ7IHQgPCB1OyB0KyspIHsKICAgIGZvcihpID0gY2hhcnNldDsgKmk7IGkrKykKICAgICAgaWYoKmkgPT0gKnQpCiAgICAgICAgYnJlYWs7CiAgICBpZigqaSA9PSAqdCkKICAgICAgYnJlYWs7CiAgfQoKICByZXR1cm4gdCAtIChjb25zdCBjaGFyKilzOwp9CgpzaXplX3QKc2tpcF9icmFja2V0cyhjb25zdCBjaGFyKiBsaW5lLCBzaXplX3QgbGVuKSB7CiAgc2l6ZV90IG4gPSAwOwoKICBpZihsZW4gPiAwICYmIGxpbmVbMF0gPT0gJ1snKSB7CiAgICBpZigobiA9IGJ5dGVfY2hyKGxpbmUsIGxlbiwgJ10nKSkgPCBsZW4pCiAgICAgIG4rKzsKCiAgICB3aGlsZShuIDwgbGVuICYmIGlzc3BhY2UobGluZVtuXSkpIG4rKzsKCiAgICBpZihuICsgMSA8IGxlbiAmJiBsaW5lW24gKyAxXSA9PSAnOicpCiAgICAgIG4gKz0gMjsKCiAgICB3aGlsZShuIDwgbGVuICYmIChpc3NwYWNlKGxpbmVbbl0pIHx8IGxpbmVbbl0gPT0gJy0nKSkgbisrOwogIH0KCiAgcmV0dXJuIG47Cn0KCnNpemVfdApza2lwX2RpcmVjdG9yeShjb25zdCBjaGFyKiBsaW5lLCBzaXplX3QgbGVuKSB7CiAgaWYobGluZVswXSA9PSAnLycpIHsKICAgIHNpemVfdCBjb2xvbiA9IGJ5dGVfY2hyKGxpbmUsIGxlbiwgJzonKTsKICAgIHNpemVfdCBzbGFzaCA9IGJ5dGVfcmNocihsaW5lLCBjb2xvbiwgJy8nKTsKCiAgICBpZihzbGFzaCA8IGNvbG9uKQogICAgICByZXR1cm4gc2xhc2ggKyAxOwogIH0KCiAgcmV0dXJuIDA7Cn0KCnNpemVfdApzdHJpcF90cmFpbGluZ19uZXdsaW5lKGNvbnN0IGNoYXIqIGxpbmUsIHNpemVfdCogbGVuX3ApIHsKICBzaXplX3QgbGVuID0gKmxlbl9wOwoKICB3aGlsZShsZW4gPiAwICYmIChsaW5lW2xlbiAtIDFdID09ICdcbicgfHwgbGluZVtsZW4gLSAxXSA9PSAnXHInKSkgbGVuLS07CgogIHJldHVybiAqbGVuX3AgPSBsZW47Cn0KCnVuc2lnbmVkCnVpbnRfcG93KHVuc2lnbmVkIGJhc2UsIHVuc2lnbmVkIGRlZ3JlZSkgewogIHVuc2lnbmVkIHJlc3VsdCA9IDE7CiAgdW5zaWduZWQgdGVybSA9IGJhc2U7CiAgd2hpbGUoZGVncmVlKSB7CiAgICBpZihkZWdyZWUgJiAxKQogICAgICByZXN1bHQgKj0gdGVybTsKICAgIHRlcm0gKj0gdGVybTsKICAgIGRlZ3JlZSA9IGRlZ3JlZSA+PiAxOwogIH0KICByZXR1cm4gcmVzdWx0Owp9CgpzaXplX3QKbGlzdF9zaXplKHN0cnVjdCBsaXN0X2hlYWQqIGxpc3QpIHsKICBzaXplX3QgY291bnQgPSAwOwogIGlmKGxpc3QtPm5leHQgJiYgbGlzdC0+cHJldikgewogICAgc3RydWN0IGxpc3RfaGVhZCogZWw7CiAgICBsaXN0X2Zvcl9lYWNoKGVsLCBsaXN0KSsrIGNvdW50OwogIH0KICByZXR1cm4gY291bnQ7Cn0KAAAAAAAAAAC9DwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9DwAAI2luY2x1ZGUgInV0aWxzLmgiCgpzaXplX3QKc3RyX2Nocihjb25zdCBjaGFyKiBpbiwgY2hhciBuZWVkbGUpIHsKICBjb25zdCBjaGFyKiB0OwoKICBmb3IodCA9IGluOyAqdDsgKyt0KQogICAgaWYoKnQgPT0gbmVlZGxlKQogICAgICBicmVhazsKCiAgcmV0dXJuIChzaXplX3QpKHQgLSBpbik7Cn0KCnNpemVfdApzdHJfY2hycyhjb25zdCBjaGFyKiBpbiwgY29uc3QgY2hhciBuZWVkbGVzW10sIHNpemVfdCBubikgewogIGNvbnN0IGNoYXIqIHQgPSBpbjsKICBzaXplX3QgaTsKICBmb3IoOzspIHsKICAgIGlmKCEqdCkKICAgICAgYnJlYWs7CiAgICBmb3IoaSA9IDA7IGkgPCBubjsgaSsrKQogICAgICBpZigqdCA9PSBuZWVkbGVzW2ldKQogICAgICAgIHJldHVybiAoc2l6ZV90KSh0IC0gaW4pOwogICAgKyt0OwogIH0KICByZXR1cm4gKHNpemVfdCkodCAtIGluKTsKfQoKc2l6ZV90CmJ5dGVfY2hyKGNvbnN0IHZvaWQqIHgsIHNpemVfdCBsZW4sIGNoYXIgYykgewogIGNvbnN0IGNoYXIgKnMsICp0LCAqc3RyID0geDsKCiAgZm9yKHMgPSBzdHIsIHQgPSBzICsgbGVuOyBzIDwgdDsgKytzKQogICAgaWYoKnMgPT0gYykKICAgICAgYnJlYWs7CgogIHJldHVybiBzIC0gc3RyOwp9CgpzaXplX3QKYnl0ZV9jaHJzKGNvbnN0IHZvaWQqIHgsIHNpemVfdCBsZW4sIGNvbnN0IGNoYXIgbmVlZGxlW10sIHNpemVfdCBubCkgewogIGNvbnN0IGNoYXIgKnMsICp0OwoKICBmb3IocyA9IHgsIHQgPSAoY29uc3QgY2hhciopeCArIGxlbjsgcyAhPSB0OyBzKyspCiAgICBpZihieXRlX2NocihuZWVkbGUsIG5sLCAqcykgPCBubCkKICAgICAgYnJlYWs7CgogIHJldHVybiBzIC0gKGNvbnN0IGNoYXIqKXg7Cn0KCnNpemVfdApieXRlX3JjaHIoY29uc3Qgdm9pZCogeCwgc2l6ZV90IGxlbiwgY2hhciBuZWVkbGUpIHsKICBjb25zdCBjaGFyICpzLCAqdDsKCiAgZm9yKHMgPSB4LCB0ID0gKGNvbnN0IGNoYXIqKXggKyBsZW47IC0tdCA+PSBzOykKICAgIGlmKCp0ID09IG5lZWRsZSkKICAgICAgcmV0dXJuIChzaXplX3QpKHQgLSBzKTsKCiAgcmV0dXJuIGxlbjsKfQoKaW50CmJ5dGVfZGlmZihjb25zdCB2b2lkKiBhLCBzaXplX3QgbGVuLCBjb25zdCB2b2lkKiBiKSB7CiAgc2l6ZV90IGk7CiAgZm9yKGkgPSAwOyBpIDwgbGVuOyArK2kpIHsKICAgIGludCByID0gKCh1bnNpZ25lZCBjaGFyKilhKVtpXSAtICgodW5zaWduZWQgY2hhciopYilbaV07CiAgICBpZihyKQogICAgICByZXR1cm4gcjsKICB9CiAgcmV0dXJuIDA7Cn0KCnNpemVfdApieXRlX2VxdWFsKGNvbnN0IHZvaWQqIHMsIHNpemVfdCBuLCBjb25zdCB2b2lkKiB0KSB7CiAgcmV0dXJuIGJ5dGVfZGlmZihzLCBuLCB0KSA9PSAwOwp9CgpzaXplX3QKYnl0ZV9maW5kYihjb25zdCB2b2lkKiBoYXlzdGFjaywgc2l6ZV90IGhsZW4sIGNvbnN0IHZvaWQqIHdoYXQsIHNpemVfdCB3bGVuKSB7CiAgc2l6ZV90IGksIGxhc3Q7CiAgY29uc3QgY2hhciogcyA9IChjb25zdCBjaGFyKiloYXlzdGFjazsKICBpZihobGVuIDwgd2xlbikKICAgIHJldHVybiBobGVuOwogIGxhc3QgPSBobGVuIC0gd2xlbjsKICBmb3IoaSA9IDA7IGkgPD0gbGFzdDsgaSsrKSB7CiAgICBpZihieXRlX2VxdWFsKHMsIHdsZW4sIHdoYXQpKQogICAgICByZXR1cm4gaTsKICAgIHMrKzsKICB9CiAgcmV0dXJuIGhsZW47Cn0KCnNpemVfdApzY2FuX3doaXRlbnNraXAoY29uc3Qgdm9pZCogcywgc2l6ZV90IGxpbWl0KSB7CiAgY29uc3QgY2hhciAqdCA9IHMsICp1ID0gdCArIGxpbWl0OwoKICB3aGlsZSh0IDwgdSAmJiBpc3NwYWNlKCp0KSkgKyt0OwoKICByZXR1cm4gdCAtIChjb25zdCBjaGFyKilzOwp9CgpzaXplX3QKc2Nhbl9ub253aGl0ZW5za2lwKGNvbnN0IHZvaWQqIHMsIHNpemVfdCBsaW1pdCkgewogIGNvbnN0IGNoYXIgKnQgPSBzLCAqdSA9IHQgKyBsaW1pdDsKCiAgd2hpbGUodCA8IHUgJiYgIWlzc3BhY2UoKnQpKSArK3Q7CgogIHJldHVybiB0IC0gKGNvbnN0IGNoYXIqKXM7Cn0KCnNpemVfdApzY2FuX2VvbChjb25zdCB2b2lkKiBzLCBzaXplX3QgbGltaXQpIHsKICBjb25zdCBjaGFyKiB0ID0gczsKICBzaXplX3QgaSA9IGJ5dGVfY2hyKHMsIGxpbWl0LCAnXG4nKTsKCiAgd2hpbGUoaSA+IDAgJiYgdFtpIC0gMV0gPT0gJ1xyJykgaS0tOwoKICByZXR1cm4gaTsKfQoKc2l6ZV90CnNjYW5fbmV4dGxpbmUoY29uc3Qgdm9pZCogcywgc2l6ZV90IGxpbWl0KSB7CiAgc2l6ZV90IGk7CgogIGlmKChpID0gYnl0ZV9jaHIocywgbGltaXQsICdcbicpKSA8IGxpbWl0KQogICAgaSsrOwoKICByZXR1cm4gaTsKfQoKc2l6ZV90CnNjYW5fY2hhcnNldG5za2lwKGNvbnN0IHZvaWQqIHMsIGNvbnN0IGNoYXIqIGNoYXJzZXQsIHNpemVfdCBsaW1pdCkgewogIGNvbnN0IGNoYXIgKnQsICp1LCAqaTsKCiAgZm9yKHQgPSBzLCB1ID0gdCArIGxpbWl0OyB0IDwgdTsgdCsrKSB7CiAgICBmb3IoaSA9IGNoYXJzZXQ7ICppOyBpKyspCiAgICAgIGlmKCppID09ICp0KQogICAgICAgIGJyZWFrOwogICAgaWYoKmkgIT0gKnQpCiAgICAgIGJyZWFrOwogIH0KICByZXR1cm4gdCAtIChjb25zdCBjaGFyKilzOwp9CgpzaXplX3QKc2Nhbl9ub25jaGFyc2V0bnNraXAoY29uc3Qgdm9pZCogcywgY29uc3QgY2hhciogY2hhcnNldCwgc2l6ZV90IGxpbWl0KSB7CiAgY29uc3QgY2hhciAqdCwgKnUsICppOwoKICBmb3IodCA9IHMsIHUgPSB0ICsgbGltaXQ7IHQgPCB1OyB0KyspIHsKICAgIGZvcihpID0gY2hhcnNldDsgKmk7IGkrKykKICAgICAgaWYoKmkgPT0gKnQpCiAgICAgICAgYnJlYWs7CiAgICBpZigqaSA9PSAqdCkKICAgICAgYnJlYWs7CiAgfQoKICByZXR1cm4gdCAtIChjb25zdCBjaGFyKilzOwp9CgpzaXplX3QKc2tpcF9icmFja2V0cyhjb25zdCBjaGFyKiBsaW5lLCBzaXplX3QgbGVuKSB7CiAgc2l6ZV90IG4gPSAwOwoKICBpZihsZW4gPiAwICYmIGxpbmVbMF0gPT0gJ1snKSB7CiAgICBpZigobiA9IGJ5dGVfY2hyKGxpbmUsIGxlbiwgJ10nKSkgPCBsZW4pCiAgICAgIG4rKzsKCiAgICB3aGlsZShuIDwgbGVuICYmIGlzc3BhY2UobGluZVtuXSkpIG4rKzsKCiAgICBpZihuICsgMSA8IGxlbiAmJiBsaW5lW24gKyAxXSA9PSAnOicpCiAgICAgIG4gKz0gMjsKCiAgICB3aGlsZShuIDwgbGVuICYmIChpc3NwYWNlKGxpbmVbbl0pIHx8IGxpbmVbbl0gPT0gJy0nKSkgbisrOwogIH0KCiAgcmV0dXJuIG47Cn0KCnNpemVfdApza2lwX2RpcmVjdG9yeShjb25zdCBjaGFyKiBsaW5lLCBzaXplX3QgbGVuKSB7CiAgaWYobGluZVswXSA9PSAnLycpIHsKICAgIHNpemVfdCBjb2xvbiA9IGJ5dGVfY2hyKGxpbmUsIGxlbiwgJzonKTsKICAgIHNpemVfdCBzbGFzaCA9IGJ5dGVfcmNocihsaW5lLCBjb2xvbiwgJy8nKTsKCiAgICBpZihzbGFzaCA8IGNvbG9uKQogICAgICByZXR1cm4gc2xhc2ggKyAxOwogIH0KCiAgcmV0dXJuIDA7Cn0KCnNpemVfdApzdHJpcF90cmFpbGluZ19uZXdsaW5lKGNvbnN0IGNoYXIqIGxpbmUsIHNpemVfdCogbGVuX3ApIHsKICBzaXplX3QgbGVuID0gKmxlbl9wOwoKICB3aGlsZShsZW4gPiAwICYmIChsaW5lW2xlbiAtIDFdID09ICdcbicgfHwgbGluZVtsZW4gLSAxXSA9PSAnXHInKSkgbGVuLS07CgogIHJldHVybiAqbGVuX3AgPSBsZW47Cn0KCnVuc2lnbmVkCnVpbnRfcG93KHVuc2lnbmVkIGJhc2UsIHVuc2lnbmVkIGRlZ3JlZSkgewogIHVuc2lnbmVkIHJlc3VsdCA9IDE7CiAgdW5zaWduZWQgdGVybSA9IGJhc2U7CiAgd2hpbGUoZGVncmVlKSB7CiAgICBpZihkZWdyZWUgJiAxKQogICAgICByZXN1bHQgKj0gdGVybTsKICAgIHRlcm0gKj0gdGVybTsKICAgIGRlZ3JlZSA9IGRlZ3JlZSA+PiAxOwogIH0KICByZXR1cm4gcmVzdWx0Owp9CgpzaXplX3QKbGlzdF9zaXplKHN0cnVjdCBsaXN0X2hlYWQqIGxpc3QpIHsKICBzaXplX3QgY291bnQgPSAwOwogIGlmKGxpc3QtPm5leHQgJiYgbGlzdC0+cHJldikgewogICAgc3RydWN0IGxpc3RfaGVhZCogZWw7CiAgICBsaXN0X2Zvcl9lYWNoKGVsLCBsaXN0KSsrIGNvdW50OwogIH0KICByZXR1cm4gY291bnQ7Cn0KAAAAAAAAAAC9DwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/opaque.h",
			"settings":
			{
				"buffer_size": 1624,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					20,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABABgAAI2lmbmRlZiBRSlNORVRfTElCX09QQVFVRV9ICiNkZWZpbmUgUUpTTkVUX0xJQl9PUEFRVUVfSAoKI2luY2x1ZGUgPGxpc3QuaD4KI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KI2luY2x1ZGUgPHN0ZGludC5oPgojaW5jbHVkZSA8c3RkYm9vbC5oPgojaW5jbHVkZSA8YXNzZXJ0Lmg+CiNpbmNsdWRlICJ1dGlscy5oIgoKZW51bSBzb2NrZXRfc3RhdGUgewogIENPTk5FQ1RJTkcgPSAwLAogIE9QRU4gPSAxLAogIENMT1NJTkcgPSAyLAogIENMT1NFRCA9IDMsCn07CgpzdHJ1Y3Qgc29ja2V0OwpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpSZXNwb25zZTsKc3RydWN0IHNlc3Npb25fZGF0YTsKc3RydWN0IGZvcm1fcGFyc2VyOwoKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsKICBpbnQgcmVmX2NvdW50OwogIHN0cnVjdCBzb2NrZXQqIHdzOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcTsKICBSZXNwb25zZSogcmVzcDsKICBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiBzZXNzOwogIGludDY0X3Qgc2VyaWFsOwogIGVudW0gc29ja2V0X3N0YXRlIHN0YXR1czsKICBzdHJ1Y3QgcG9sbGZkIHBvbGw7CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IGxpc3RfaGVhZCBsaW5rOwogIHN0cnVjdCBmb3JtX3BhcnNlciogZm9ybV9wYXJzZXI7CiAgc3RydWN0IGx3cyogdXBzdHJlYW07CiAgc3RydWN0IGx3c19jbGllbnRfY29ubmVjdF9pbmZvKiBjb25uZWN0X2luZm87Cn07CgpleHRlcm4gVEhSRUFEX0xPQ0FMIGludDY0X3Qgc2VyaWFsOwpleHRlcm4gVEhSRUFEX0xPQ0FMIHN0cnVjdCBsaXN0X2hlYWQgb3BhcXVlX2xpc3Q7Cgp2b2lkIG9wYXF1ZV9jbGVhcl9ydChzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqLCBKU1J1bnRpbWUqIHJ0KTsKdm9pZCBvcGFxdWVfZnJlZV9ydChzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqLCBKU1J1bnRpbWUqIHJ0KTsKdm9pZCBvcGFxdWVfY2xlYXIoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIG9wYXF1ZV9mcmVlKHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSosIEpTQ29udGV4dCogY3R4KTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWVfbmV3KEpTQ29udGV4dCopOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIGx3c19vcGFxdWUoc3RydWN0IGx3cyosIEpTQ29udGV4dCogY3R4KTsKYm9vbCBvcGFxdWVfdmFsaWQoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUpOwoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCm9wYXF1ZV9kdXAoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUpIHsKICArK29wYXF1ZS0+cmVmX2NvdW50OwogIHJldHVybiBvcGFxdWU7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgpvcGFxdWVfZnJvbXdzaShzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpOwogIGFzc2VydChvcGFxdWUpOwogIHJldHVybiBvcGFxdWU7Cn0KCiNlbmRpZiAvKiBRSlNORVRfTElCX09QQVFVRV9IICovCgAAAAAAAAAAWAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgEAAAAAAAA2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABYBgAAI2lmbmRlZiBRSlNORVRfTElCX09QQVFVRV9ICiNkZWZpbmUgUUpTTkVUX0xJQl9PUEFRVUVfSAoKI2luY2x1ZGUgPGxpc3QuaD4KI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KI2luY2x1ZGUgPHN0ZGludC5oPgojaW5jbHVkZSA8c3RkYm9vbC5oPgojaW5jbHVkZSA8YXNzZXJ0Lmg+CiNpbmNsdWRlICJ1dGlscy5oIgoKZW51bSBzb2NrZXRfc3RhdGUgewogIENPTk5FQ1RJTkcgPSAwLAogIE9QRU4gPSAxLAogIENMT1NJTkcgPSAyLAogIENMT1NFRCA9IDMsCn07CgpzdHJ1Y3Qgc29ja2V0OwpzdHJ1Y3QgaHR0cF9yZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKc3RydWN0IHNlc3Npb25fZGF0YTsKc3RydWN0IGZvcm1fcGFyc2VyOwoKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsKICBpbnQgcmVmX2NvdW50OwogIHN0cnVjdCBzb2NrZXQqIHdzOwogIHN0cnVjdCBodHRwX3JlcXVlc3QqIHJlcTsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcDsKICBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiBzZXNzOwogIGludDY0X3Qgc2VyaWFsOwogIGVudW0gc29ja2V0X3N0YXRlIHN0YXR1czsKICBzdHJ1Y3QgcG9sbGZkIHBvbGw7CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IGxpc3RfaGVhZCBsaW5rOwogIHN0cnVjdCBmb3JtX3BhcnNlciogZm9ybV9wYXJzZXI7CiAgc3RydWN0IGx3cyogdXBzdHJlYW07CiAgc3RydWN0IGx3c19jbGllbnRfY29ubmVjdF9pbmZvKiBjb25uZWN0X2luZm87Cn07CgpleHRlcm4gVEhSRUFEX0xPQ0FMIGludDY0X3Qgc2VyaWFsOwpleHRlcm4gVEhSRUFEX0xPQ0FMIHN0cnVjdCBsaXN0X2hlYWQgb3BhcXVlX2xpc3Q7Cgp2b2lkIG9wYXF1ZV9jbGVhcl9ydChzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqLCBKU1J1bnRpbWUqIHJ0KTsKdm9pZCBvcGFxdWVfZnJlZV9ydChzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqLCBKU1J1bnRpbWUqIHJ0KTsKdm9pZCBvcGFxdWVfY2xlYXIoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIG9wYXF1ZV9mcmVlKHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSosIEpTQ29udGV4dCogY3R4KTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWVfbmV3KEpTQ29udGV4dCopOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIGx3c19vcGFxdWUoc3RydWN0IGx3cyosIEpTQ29udGV4dCogY3R4KTsKYm9vbCBvcGFxdWVfdmFsaWQoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUpOwoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCm9wYXF1ZV9kdXAoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUpIHsKICArK29wYXF1ZS0+cmVmX2NvdW50OwogIHJldHVybiBvcGFxdWU7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgpvcGFxdWVfZnJvbXdzaShzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpOwogIGFzc2VydChvcGFxdWUpOwogIHJldHVybiBvcGFxdWU7Cn0KCiNlbmRpZiAvKiBRSlNORVRfTElCX09QQVFVRV9IICovCgAAAAAAAAAAQAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgEAAAAAAAA2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABABgAAI2lmbmRlZiBRSlNORVRfTElCX09QQVFVRV9ICiNkZWZpbmUgUUpTTkVUX0xJQl9PUEFRVUVfSAoKI2luY2x1ZGUgPGxpc3QuaD4KI2luY2x1ZGUgPGxpYndlYnNvY2tldHMuaD4KI2luY2x1ZGUgPHN0ZGludC5oPgojaW5jbHVkZSA8c3RkYm9vbC5oPgojaW5jbHVkZSA8YXNzZXJ0Lmg+CiNpbmNsdWRlICJ1dGlscy5oIgoKZW51bSBzb2NrZXRfc3RhdGUgewogIENPTk5FQ1RJTkcgPSAwLAogIE9QRU4gPSAxLAogIENMT1NJTkcgPSAyLAogIENMT1NFRCA9IDMsCn07CgpzdHJ1Y3Qgc29ja2V0OwpSZXF1ZXN0OwpzdHJ1Y3QgaHR0cF9yZXNwb25zZTsKc3RydWN0IHNlc3Npb25fZGF0YTsKc3RydWN0IGZvcm1fcGFyc2VyOwoKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhIHsKICBpbnQgcmVmX2NvdW50OwogIHN0cnVjdCBzb2NrZXQqIHdzOwogIFJlcXVlc3QqIHJlcTsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcDsKICBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiBzZXNzOwogIGludDY0X3Qgc2VyaWFsOwogIGVudW0gc29ja2V0X3N0YXRlIHN0YXR1czsKICBzdHJ1Y3QgcG9sbGZkIHBvbGw7CiAgQk9PTCBiaW5hcnk7CiAgc3RydWN0IGxpc3RfaGVhZCBsaW5rOwogIHN0cnVjdCBmb3JtX3BhcnNlciogZm9ybV9wYXJzZXI7CiAgc3RydWN0IGx3cyogdXBzdHJlYW07CiAgc3RydWN0IGx3c19jbGllbnRfY29ubmVjdF9pbmZvKiBjb25uZWN0X2luZm87Cn07CgpleHRlcm4gVEhSRUFEX0xPQ0FMIGludDY0X3Qgc2VyaWFsOwpleHRlcm4gVEhSRUFEX0xPQ0FMIHN0cnVjdCBsaXN0X2hlYWQgb3BhcXVlX2xpc3Q7Cgp2b2lkIG9wYXF1ZV9jbGVhcl9ydChzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqLCBKU1J1bnRpbWUqIHJ0KTsKdm9pZCBvcGFxdWVfZnJlZV9ydChzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqLCBKU1J1bnRpbWUqIHJ0KTsKdm9pZCBvcGFxdWVfY2xlYXIoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiwgSlNDb250ZXh0KiBjdHgpOwp2b2lkIG9wYXF1ZV9mcmVlKHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSosIEpTQ29udGV4dCogY3R4KTsKc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWVfbmV3KEpTQ29udGV4dCopOwpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIGx3c19vcGFxdWUoc3RydWN0IGx3cyosIEpTQ29udGV4dCogY3R4KTsKYm9vbCBvcGFxdWVfdmFsaWQoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUpOwoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCm9wYXF1ZV9kdXAoc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUpIHsKICArK29wYXF1ZS0+cmVmX2NvdW50OwogIHJldHVybiBvcGFxdWU7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKgpvcGFxdWVfZnJvbXdzaShzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpOwogIGFzc2VydChvcGFxdWUpOwogIHJldHVybiBvcGFxdWU7Cn0KCiNlbmRpZiAvKiBRSlNORVRfTElCX09QQVFVRV9IICovCgAAAAAAAAAAWAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgEAAAAAAAA2AQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/ws.c",
			"settings":
			{
				"buffer_size": 1979,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC7BwAAI2luY2x1ZGUgIndzLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgIm9wYXF1ZS5oIgojaW5jbHVkZSAic2Vzc2lvbi5oIgojaW5jbHVkZSAicmluZ2J1ZmZlci5oIgojaW5jbHVkZSA8c3RyaW5ncy5oPgojaW5jbHVkZSA8YXNzZXJ0Lmg+CiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CgpzdHJ1Y3Qgc29ja2V0Kgp3c19uZXcoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCBzb2NrZXQqIHdzOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZighKHdzID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3Qgc29ja2V0KSkpKQogICAgcmV0dXJuIDA7CgogIHdzLT5sd3NpID0gd3NpOwogIHdzLT5yZWZfY291bnQgPSAyOwogIC8vIHJpbmdidWZmZXJfaW5pdDIoJndzLT5zZW5kcSwgc2l6ZW9mKEJ5dGVCbG9jayksIDY1NTM2ICogMik7CgogIGlmKChvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KSkpIHsKICAgIG9wYXF1ZS0+d3MgPSB3czsKICAgIG9wYXF1ZS0+c3RhdHVzID0gMDsKICB9CgogIHJldHVybiB3czsKfQoKdm9pZAp3c19jbGVhcl9ydChzdHJ1Y3Qgc29ja2V0KiB3cywgSlNSdW50aW1lKiBydCkgewogIHN0cnVjdCBsd3MqIHdzaSA9IHdzLT5sd3NpOwoKICB3cy0+bHdzaSA9IDA7CgogIGlmKHdzaSkgewogICAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CgogICAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkgewogICAgICBsd3Nfc2V0X29wYXF1ZV91c2VyX2RhdGEod3NpLCAwKTsKICAgICAgb3BhcXVlX2ZyZWVfcnQob3BhcXVlLCBydCk7CgogICAgICAvKiAgaWYoc3RhdHVzIDwgQ0xPU0lORykKICAgICAgICAgIGx3c19jbG9zZV9mcmVlX3dzaSh3c2ksIExXU19DTE9TRV9TVEFUVVNfTk9TVEFUVVMsIF9fZnVuY19fKTsqLwogICAgfQogIH0KCiAgLy8gcmluZ2J1ZmZlcl96ZXJvKCZ3cy0+c2VuZHEpOwp9Cgp2b2lkCndzX2NsZWFyKHN0cnVjdCBzb2NrZXQqIHdzLCBKU0NvbnRleHQqIGN0eCkgewogIHdzX2NsZWFyX3J0KHdzLCBKU19HZXRSdW50aW1lKGN0eCkpOwp9Cgp2b2lkCndzX2ZyZWVfcnQoc3RydWN0IHNvY2tldCogd3MsIEpTUnVudGltZSogcnQpIHsKICBpZigtLXdzLT5yZWZfY291bnQgPT0gMCkgewogICAgd3NfY2xlYXJfcnQod3MsIHJ0KTsKICAgIGpzX2ZyZWVfcnQocnQsIHdzKTsKICB9Cn0KCnZvaWQKd3NfZnJlZShzdHJ1Y3Qgc29ja2V0KiB3cywgSlNDb250ZXh0KiBjdHgpIHsKICBpZigtLXdzLT5yZWZfY291bnQgPT0gMCkgewogICAgd3NfY2xlYXIod3MsIGN0eCk7CiAgICBqc19mcmVlKGN0eCwgd3MpOwogIH0KfQoKc3RydWN0IHNvY2tldCoKd3NfZHVwKHN0cnVjdCBzb2NrZXQqIHdzKSB7CiAgKyt3cy0+cmVmX2NvdW50OwogIHJldHVybiB3czsKfQoKUXVldWVJdGVtKgp3c19lbnF1ZXVlKHN0cnVjdCBzb2NrZXQqIHdzLCBCeXRlQmxvY2sgY2h1bmspIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKICBRdWV1ZUl0ZW0qIGl0ZW0gPSAwOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzLT5sd3NpKSkpIHsKICAgIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3Npb24gPSBvcGFxdWUtPnNlc3M7CgogICAgaWYoKGl0ZW0gPSBxdWV1ZV9hZGQoJnNlc3Npb24tPnNlbmRxLCBjaHVuaykpKSB7CgogICAgICBsd3NfY2FsbGJhY2tfb25fd3JpdGFibGUod3MtPmx3c2kpOwogICAgfQogIH0KCiAgcmV0dXJuIGl0ZW07Cn0KClF1ZXVlSXRlbSoKd3Nfc2VuZChzdHJ1Y3Qgc29ja2V0KiB3cywgY29uc3Qgdm9pZCogZGF0YSwgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KSB7CiAgQnl0ZUJsb2NrIGNodW5rID0gYmxvY2tfY29weShkYXRhLCBzaXplKTsKCiAgcmV0dXJuIHdzX2VucXVldWUod3MsIGNodW5rKTsKfQoAAAAAAAAAALsHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC7BwAAI2luY2x1ZGUgIndzLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgIm9wYXF1ZS5oIgojaW5jbHVkZSAic2Vzc2lvbi5oIgojaW5jbHVkZSAicmluZ2J1ZmZlci5oIgojaW5jbHVkZSA8c3RyaW5ncy5oPgojaW5jbHVkZSA8YXNzZXJ0Lmg+CiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CgpzdHJ1Y3Qgc29ja2V0Kgp3c19uZXcoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCBzb2NrZXQqIHdzOwogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZighKHdzID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3Qgc29ja2V0KSkpKQogICAgcmV0dXJuIDA7CgogIHdzLT5sd3NpID0gd3NpOwogIHdzLT5yZWZfY291bnQgPSAyOwogIC8vIHJpbmdidWZmZXJfaW5pdDIoJndzLT5zZW5kcSwgc2l6ZW9mKEJ5dGVCbG9jayksIDY1NTM2ICogMik7CgogIGlmKChvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KSkpIHsKICAgIG9wYXF1ZS0+d3MgPSB3czsKICAgIG9wYXF1ZS0+c3RhdHVzID0gMDsKICB9CgogIHJldHVybiB3czsKfQoKdm9pZAp3c19jbGVhcl9ydChzdHJ1Y3Qgc29ja2V0KiB3cywgSlNSdW50aW1lKiBydCkgewogIHN0cnVjdCBsd3MqIHdzaSA9IHdzLT5sd3NpOwoKICB3cy0+bHdzaSA9IDA7CgogIGlmKHdzaSkgewogICAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CgogICAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkgewogICAgICBsd3Nfc2V0X29wYXF1ZV91c2VyX2RhdGEod3NpLCAwKTsKICAgICAgb3BhcXVlX2ZyZWVfcnQob3BhcXVlLCBydCk7CgogICAgICAvKiAgaWYoc3RhdHVzIDwgQ0xPU0lORykKICAgICAgICAgIGx3c19jbG9zZV9mcmVlX3dzaSh3c2ksIExXU19DTE9TRV9TVEFUVVNfTk9TVEFUVVMsIF9fZnVuY19fKTsqLwogICAgfQogIH0KCiAgLy8gcmluZ2J1ZmZlcl96ZXJvKCZ3cy0+c2VuZHEpOwp9Cgp2b2lkCndzX2NsZWFyKHN0cnVjdCBzb2NrZXQqIHdzLCBKU0NvbnRleHQqIGN0eCkgewogIHdzX2NsZWFyX3J0KHdzLCBKU19HZXRSdW50aW1lKGN0eCkpOwp9Cgp2b2lkCndzX2ZyZWVfcnQoc3RydWN0IHNvY2tldCogd3MsIEpTUnVudGltZSogcnQpIHsKICBpZigtLXdzLT5yZWZfY291bnQgPT0gMCkgewogICAgd3NfY2xlYXJfcnQod3MsIHJ0KTsKICAgIGpzX2ZyZWVfcnQocnQsIHdzKTsKICB9Cn0KCnZvaWQKd3NfZnJlZShzdHJ1Y3Qgc29ja2V0KiB3cywgSlNDb250ZXh0KiBjdHgpIHsKICBpZigtLXdzLT5yZWZfY291bnQgPT0gMCkgewogICAgd3NfY2xlYXIod3MsIGN0eCk7CiAgICBqc19mcmVlKGN0eCwgd3MpOwogIH0KfQoKc3RydWN0IHNvY2tldCoKd3NfZHVwKHN0cnVjdCBzb2NrZXQqIHdzKSB7CiAgKyt3cy0+cmVmX2NvdW50OwogIHJldHVybiB3czsKfQoKUXVldWVJdGVtKgp3c19lbnF1ZXVlKHN0cnVjdCBzb2NrZXQqIHdzLCBCeXRlQmxvY2sgY2h1bmspIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKICBRdWV1ZUl0ZW0qIGl0ZW0gPSAwOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzLT5sd3NpKSkpIHsKICAgIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3Npb24gPSBvcGFxdWUtPnNlc3M7CgogICAgaWYoKGl0ZW0gPSBxdWV1ZV9hZGQoJnNlc3Npb24tPnNlbmRxLCBjaHVuaykpKSB7CgogICAgICBsd3NfY2FsbGJhY2tfb25fd3JpdGFibGUod3MtPmx3c2kpOwogICAgfQogIH0KCiAgcmV0dXJuIGl0ZW07Cn0KClF1ZXVlSXRlbSoKd3Nfc2VuZChzdHJ1Y3Qgc29ja2V0KiB3cywgY29uc3Qgdm9pZCogZGF0YSwgc2l6ZV90IHNpemUsIEpTQ29udGV4dCogY3R4KSB7CiAgQnl0ZUJsb2NrIGNodW5rID0gYmxvY2tfY29weShkYXRhLCBzaXplKTsKCiAgcmV0dXJuIHdzX2VucXVldWUod3MsIGNodW5rKTsKfQoAAAAAAAAAALsHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/ws.h",
			"settings":
			{
				"buffer_size": 1522,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmBQAAI2lmbmRlZiBRSlNORVRfTElCX1dTX0gKI2RlZmluZSBRSlNORVRfTElCX1dTX0gKCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlICJvcGFxdWUuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgInF1ZXVlLmgiCgojaWYoZGVmaW5lZChIQVZFX1dJTlNPQ0syX0gpIHx8IGRlZmluZWQoV0lOMzIpIHx8IGRlZmluZWQoV0lONjQpIHx8IGRlZmluZWQoX19NSU5HVzMyX18pIHx8IGRlZmluZWQoX19NSU5HVzY0X18pKSAmJiAhZGVmaW5lZChfX01TWVNfXykKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNlbmRpZgoKc3RydWN0IGx3czsKc3RydWN0IGh0dHBfcmVxdWVzdDsKUmVzcG9uc2U7CgpzdHJ1Y3Qgc29ja2V0IHsKICBpbnQgcmVmX2NvdW50OwogIHN0cnVjdCBsd3MqIGx3c2k7Cn07CgpzdHJ1Y3Qgc29ja2V0KiB3c19uZXcoc3RydWN0IGx3cyosIEpTQ29udGV4dCogY3R4KTsKdm9pZCB3c19jbGVhcl9ydChzdHJ1Y3Qgc29ja2V0KiwgSlNSdW50aW1lKiBydCk7CnZvaWQgd3NfY2xlYXIoc3RydWN0IHNvY2tldCosIEpTQ29udGV4dCogY3R4KTsKdm9pZCB3c19mcmVlX3J0KHN0cnVjdCBzb2NrZXQqLCBKU1J1bnRpbWUqIHJ0KTsKdm9pZCB3c19mcmVlKHN0cnVjdCBzb2NrZXQqLCBKU0NvbnRleHQqIGN0eCk7CnN0cnVjdCBzb2NrZXQqIHdzX2R1cChzdHJ1Y3Qgc29ja2V0Kik7ClF1ZXVlSXRlbSogd3NfZW5xdWV1ZShzdHJ1Y3Qgc29ja2V0KiwgQnl0ZUJsb2NrKTsKUXVldWVJdGVtKiB3c19zZW5kKHN0cnVjdCBzb2NrZXQqLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3Qgc2l6ZSwgSlNDb250ZXh0KiBjdHgpOwoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKd3Nfb3BhcXVlKHN0cnVjdCBzb2NrZXQqIHdzKSB7CiAgcmV0dXJuIHdzLT5sd3NpID8gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKd3Nfc2Vzc2lvbihzdHJ1Y3Qgc29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19zZXNzaW9uKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNvY2tldCoKd3NfZnJvbV93c2koc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CiAgcmV0dXJuICgob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpICYmIG9wYXF1ZV92YWxpZChvcGFxdWUpKSA/IG9wYXF1ZS0+d3MgOiAwOwp9CgojZW5kaWYgLyogUUpTTkVUX0xJQl9XU19IICovCgAAAAAAAAAA8gUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyBQAAI2lmbmRlZiBRSlNORVRfTElCX1dTX0gKI2RlZmluZSBRSlNORVRfTElCX1dTX0gKCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlICJvcGFxdWUuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgInF1ZXVlLmgiCgojaWYoZGVmaW5lZChIQVZFX1dJTlNPQ0syX0gpIHx8IGRlZmluZWQoV0lOMzIpIHx8IGRlZmluZWQoV0lONjQpIHx8IGRlZmluZWQoX19NSU5HVzMyX18pIHx8IGRlZmluZWQoX19NSU5HVzY0X18pKSAmJiAhZGVmaW5lZChfX01TWVNfXykKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNlbmRpZgoKc3RydWN0IGx3czsKc3RydWN0IGh0dHBfcmVxdWVzdDsKc3RydWN0IGh0dHBfcmVzcG9uc2U7CgpzdHJ1Y3Qgc29ja2V0IHsKICBpbnQgcmVmX2NvdW50OwogIHN0cnVjdCBsd3MqIGx3c2k7Cn07CgpzdHJ1Y3Qgc29ja2V0KiB3c19uZXcoc3RydWN0IGx3cyosIEpTQ29udGV4dCogY3R4KTsKdm9pZCB3c19jbGVhcl9ydChzdHJ1Y3Qgc29ja2V0KiwgSlNSdW50aW1lKiBydCk7CnZvaWQgd3NfY2xlYXIoc3RydWN0IHNvY2tldCosIEpTQ29udGV4dCogY3R4KTsKdm9pZCB3c19mcmVlX3J0KHN0cnVjdCBzb2NrZXQqLCBKU1J1bnRpbWUqIHJ0KTsKdm9pZCB3c19mcmVlKHN0cnVjdCBzb2NrZXQqLCBKU0NvbnRleHQqIGN0eCk7CnN0cnVjdCBzb2NrZXQqIHdzX2R1cChzdHJ1Y3Qgc29ja2V0Kik7ClF1ZXVlSXRlbSogd3NfZW5xdWV1ZShzdHJ1Y3Qgc29ja2V0KiwgQnl0ZUJsb2NrKTsKUXVldWVJdGVtKiB3c19zZW5kKHN0cnVjdCBzb2NrZXQqLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3Qgc2l6ZSwgSlNDb250ZXh0KiBjdHgpOwoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKd3Nfb3BhcXVlKHN0cnVjdCBzb2NrZXQqIHdzKSB7CiAgcmV0dXJuIHdzLT5sd3NpID8gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKd3Nfc2Vzc2lvbihzdHJ1Y3Qgc29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19zZXNzaW9uKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNvY2tldCoKd3NfZnJvbV93c2koc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CiAgcmV0dXJuICgob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpICYmIG9wYXF1ZV92YWxpZChvcGFxdWUpKSA/IG9wYXF1ZS0+d3MgOiAwOwp9CgojZW5kaWYgLyogUUpTTkVUX0xJQl9XU19IICovCgAAAAAAAAAA5gUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmBQAAI2lmbmRlZiBRSlNORVRfTElCX1dTX0gKI2RlZmluZSBRSlNORVRfTElCX1dTX0gKCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlICJvcGFxdWUuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgInF1ZXVlLmgiCgojaWYoZGVmaW5lZChIQVZFX1dJTlNPQ0syX0gpIHx8IGRlZmluZWQoV0lOMzIpIHx8IGRlZmluZWQoV0lONjQpIHx8IGRlZmluZWQoX19NSU5HVzMyX18pIHx8IGRlZmluZWQoX19NSU5HVzY0X18pKSAmJiAhZGVmaW5lZChfX01TWVNfXykKI3dhcm5pbmcgd2luc29jazIKI2luY2x1ZGUgPHdpbnNvY2syLmg+CiNlbmRpZgoKc3RydWN0IGx3czsKUmVxdWVzdDsKc3RydWN0IGh0dHBfcmVzcG9uc2U7CgpzdHJ1Y3Qgc29ja2V0IHsKICBpbnQgcmVmX2NvdW50OwogIHN0cnVjdCBsd3MqIGx3c2k7Cn07CgpzdHJ1Y3Qgc29ja2V0KiB3c19uZXcoc3RydWN0IGx3cyosIEpTQ29udGV4dCogY3R4KTsKdm9pZCB3c19jbGVhcl9ydChzdHJ1Y3Qgc29ja2V0KiwgSlNSdW50aW1lKiBydCk7CnZvaWQgd3NfY2xlYXIoc3RydWN0IHNvY2tldCosIEpTQ29udGV4dCogY3R4KTsKdm9pZCB3c19mcmVlX3J0KHN0cnVjdCBzb2NrZXQqLCBKU1J1bnRpbWUqIHJ0KTsKdm9pZCB3c19mcmVlKHN0cnVjdCBzb2NrZXQqLCBKU0NvbnRleHQqIGN0eCk7CnN0cnVjdCBzb2NrZXQqIHdzX2R1cChzdHJ1Y3Qgc29ja2V0Kik7ClF1ZXVlSXRlbSogd3NfZW5xdWV1ZShzdHJ1Y3Qgc29ja2V0KiwgQnl0ZUJsb2NrKTsKUXVldWVJdGVtKiB3c19zZW5kKHN0cnVjdCBzb2NrZXQqLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3Qgc2l6ZSwgSlNDb250ZXh0KiBjdHgpOwoKc3RhdGljIGlubGluZSBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKgpsd3Nfc2Vzc2lvbihzdHJ1Y3QgbHdzKiB3c2kpIHsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZTsKCiAgaWYoKG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpKSkKICAgIHJldHVybiBvcGFxdWUtPnNlc3M7CgogIHJldHVybiAwOwp9CgpzdGF0aWMgaW5saW5lIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKd3Nfb3BhcXVlKHN0cnVjdCBzb2NrZXQqIHdzKSB7CiAgcmV0dXJuIHdzLT5sd3NpID8gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNlc3Npb25fZGF0YSoKd3Nfc2Vzc2lvbihzdHJ1Y3Qgc29ja2V0KiB3cykgewogIHJldHVybiB3cy0+bHdzaSA/IGx3c19zZXNzaW9uKHdzLT5sd3NpKSA6IDA7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHNvY2tldCoKd3NfZnJvbV93c2koc3RydWN0IGx3cyogd3NpKSB7CiAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWU7CiAgcmV0dXJuICgob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpICYmIG9wYXF1ZV92YWxpZChvcGFxdWUpKSA/IG9wYXF1ZS0+d3MgOiAwOwp9CgojZW5kaWYgLyogUUpTTkVUX0xJQl9XU19IICovCgAAAAAAAAAA8gUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/url.h",
			"settings":
			{
				"buffer_size": 3383,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": "typeoe"
					},
					"BgAAAOcBAAAAAAAA6AEAAAAAAAAAAAAA6AEAAAAAAADpAQAAAAAAAAAAAADpAQAAAAAAAOoBAAAAAAAAAAAAAOoBAAAAAAAA6wEAAAAAAAAAAAAA6wEAAAAAAADsAQAAAAAAAAAAAADsAQAAAAAAAO0BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wEAAAAAAADnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					2,
					"left_delete",
					null,
					"AgAAAOwBAAAAAAAA7AEAAAAAAAABAAAAZesBAAAAAAAA6wEAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAA7QEAAAAAAADtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "def"
					},
					"AwAAAOsBAAAAAAAA7AEAAAAAAAAAAAAA7AEAAAAAAADtAQAAAAAAAAAAAADtAQAAAAAAAO4BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wEAAAAAAADrAQAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO4BAAAAAAAA7wEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gEAAAAAAADuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " URL"
					},
					"BAAAAEcCAAAAAAAASAIAAAAAAAAAAAAASAIAAAAAAABJAgAAAAAAAAAAAABJAgAAAAAAAEoCAAAAAAAAAAAAAEoCAAAAAAAASwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwIAAAAAAABHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"",
					null,
					"AgAAAIQCAAAAAAAAHQgAAAAAAAAAAAAAHQgAAAAAAAAdCAAAAAAAAE8FAAAKZW51bSBwcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiBwcm90b2NvbF9zdHJpbmcoZW51bSBwcm90b2NvbCk7CnVpbnQxNl90IHByb3RvY29sX2RlZmF1bHRfcG9ydChlbnVtIHByb3RvY29sKTsKQk9PTCBwcm90b2NvbF9pc190bHMoZW51bSBwcm90b2NvbCk7Cgp2b2lkIHVybF9pbml0KHN0cnVjdCB1cmwqLCBjb25zdCBjaGFyKiBwcm90b2NvbCwgY29uc3QgY2hhciogaG9zdCwgaW50IHBvcnQsIGNvbnN0IGNoYXIqIHBhdGgsIEpTQ29udGV4dCogY3R4KTsKdm9pZCB1cmxfcGFyc2Uoc3RydWN0IHVybCosIGNvbnN0IGNoYXIqIHUsIEpTQ29udGV4dCogY3R4KTsKc2l6ZV90IHVybF9wcmludChjaGFyKiwgc2l6ZV90IHNpemUsIGNvbnN0IHN0cnVjdCB1cmwgdXJsKTsKY2hhciogdXJsX2Zvcm1hdChjb25zdCBzdHJ1Y3QgdXJsLCBKU0NvbnRleHQqIGN0eCk7CmNoYXIqIHVybF9ob3N0KGNvbnN0IHN0cnVjdCB1cmwsIEpTQ29udGV4dCogY3R4KTsKc2l6ZV90IHVybF9sZW5ndGgoY29uc3Qgc3RydWN0IHVybCk7CnZvaWQgdXJsX2ZyZWUoc3RydWN0IHVybCosIEpTQ29udGV4dCogY3R4KTsKdm9pZCB1cmxfZnJlZV9ydChzdHJ1Y3QgdXJsKiwgSlNSdW50aW1lKiBydCk7CmVudW0gcHJvdG9jb2wgdXJsX3NldF9wcm90b2NvbChzdHJ1Y3QgdXJsKiwgY29uc3QgY2hhciogcHJvdG8pOwpCT09MIHVybF9zZXRfcGF0aF9sZW4oc3RydWN0IHVybCosIGNvbnN0IGNoYXIqIHBhdGgsIHNpemVfdCBsZW4sIEpTQ29udGV4dCogY3R4KTsKQk9PTCB1cmxfc2V0X3F1ZXJ5X2xlbihzdHJ1Y3QgdXJsKiwgY29uc3QgY2hhciogcXVlcnksIHNpemVfdCBsZW4sIEpTQ29udGV4dCogY3R4KTsKdm9pZCB1cmxfaW5mbyhjb25zdCBzdHJ1Y3QgdXJsLCBzdHJ1Y3QgbHdzX2NsaWVudF9jb25uZWN0X2luZm8qIGluZm8pOwpjb25zdCBjaGFyKiB1cmxfcXVlcnkoY29uc3Qgc3RydWN0IHVybCk7CmNvbnN0IGNoYXIqIHVybF9zZWFyY2goY29uc3Qgc3RydWN0IHVybCwgc2l6ZV90KiBsZW5fcCk7CmNvbnN0IGNoYXIqIHVybF9oYXNoKGNvbnN0IHN0cnVjdCB1cmwpOwp2b2lkIHVybF9mcm9tb2JqKHN0cnVjdCB1cmwqLCBKU1ZhbHVlQ29uc3Qgb2JqLCBKU0NvbnRleHQqIGN0eCk7CkJPT0wgdXJsX2Zyb212YWx1ZShzdHJ1Y3QgdXJsKiwgSlNWYWx1ZUNvbnN0IHZhbHVlLCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgdXJsX2Zyb213c2koc3RydWN0IHVybCosIHN0cnVjdCBsd3MqIHdzaSwgSlNDb250ZXh0KiBjdHgpOwpzdHJ1Y3QgdXJsKiB1cmxfbmV3KEpTQ29udGV4dCopOwpKU1ZhbHVlIHVybF9vYmplY3QoY29uc3Qgc3RydWN0IHVybCwgSlNDb250ZXh0KiBjdHgpOwo",
					"AQAAAAAAAAABAAAAhAIAAAAAAADTBwAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIQCAAAAAAAAhQIAAAAAAAAAAAAAhQIAAAAAAACFAgAAAAAAADsAAABzaXplX3QgICAgICAgIHN0cmxjcHkoY2hhciosIGNvbnN0IGNoYXIqIHNyYywgc2l6ZV90IHNpeik7Cg",
					"AQAAAAAAAAABAAAAhAIAAAAAAAC/AgAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEEDAAAAAAAAQgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQMAAAAAAABBAwAAAAAAAAAAAAAAAAAA"
				],
				[
					40,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADUDQAAI2lmbmRlZiBRSlNORVRfTElCX1VSTF9ICiNkZWZpbmUgUUpTTkVUX0xJQl9VUkxfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPHN0ZGludC5oPgojaW5jbHVkZSAidXRpbHMuaCIKCmVudW0gcHJvdG9jb2wgewogIFBST1RPQ09MX1dTID0gMCwKICBQUk9UT0NPTF9XU1MsCiAgUFJPVE9DT0xfSFRUUCwKICBQUk9UT0NPTF9IVFRQUywKICBQUk9UT0NPTF9SQVcsCiAgUFJPVE9DT0xfVExTLAogIE5VTV9QUk9UT0NPTFMsCn07CgojZGVmaW5lIFVSTF9JU19WQUxJRF9QT1JUKG51bSkgKChudW0pID49IDAgJiYgKG51bSkgPD0gNjU1MzUpCgplbnVtIHByb3RvY29sIHByb3RvY29sX251bWJlcihjb25zdCBjaGFyKik7CmNvbnN0IGNoYXIqIHByb3RvY29sX3N0cmluZyhlbnVtIHByb3RvY29sKTsKdWludDE2X3QgcHJvdG9jb2xfZGVmYXVsdF9wb3J0KGVudW0gcHJvdG9jb2wpOwpCT09MIHByb3RvY29sX2lzX3RscyhlbnVtIHByb3RvY29sKTsKCnR5cGVkZWYgc3RydWN0IHVybCB7CiAgaW50IHJlZl9jb3VudDsKICBjb25zdCBjaGFyKiBwcm90b2NvbDsKICBjaGFyICpob3N0LCAqcGF0aDsKICBpbnQgcG9ydDsKfSBVUkw7CgojZGVmaW5lIFVSTF9JTklUKCkgXAogIChzdHJ1Y3QgdXJsKSB7IDEsIDAsIDAsIDAsIDAgfQoKZW51bSBwcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiAgIHByb3RvY29sX3N0cmluZyhlbnVtIHByb3RvY29sKTsKdWludDE2X3QgICAgICBwcm90b2NvbF9kZWZhdWx0X3BvcnQoZW51bSBwcm90b2NvbCk7CkJPT0wgICAgICAgICAgcHJvdG9jb2xfaXNfdGxzKGVudW0gcHJvdG9jb2wpOwoKdm9pZCAgICAgICAgICB1cmxfaW5pdChVUkwqLCBjb25zdCBjaGFyKiBwcm90b2NvbCwgY29uc3QgY2hhciogaG9zdCwgaW50IHBvcnQsIGNvbnN0IGNoYXIqIHBhdGgsIEpTQ29udGV4dCogY3R4KTsKdm9pZCAgICAgICAgICB1cmxfcGFyc2UoVVJMKiwgY29uc3QgY2hhciogdSwgSlNDb250ZXh0KiBjdHgpOwpzaXplX3QgICAgICAgIHVybF9wcmludChjaGFyKiwgc2l6ZV90IHNpemUsIGNvbnN0IFVSTCB1cmwpOwpjaGFyKiAgICAgICAgIHVybF9mb3JtYXQoY29uc3QgVVJMLCBKU0NvbnRleHQqIGN0eCk7CmNoYXIqICAgICAgICAgdXJsX2hvc3QoY29uc3QgVVJMLCBKU0NvbnRleHQqIGN0eCk7CnNpemVfdCAgICAgICAgdXJsX2xlbmd0aChjb25zdCBVUkwpOwp2b2lkICAgICAgICAgIHVybF9mcmVlKFVSTCosIEpTQ29udGV4dCogY3R4KTsKdm9pZCAgICAgICAgICB1cmxfZnJlZV9ydChVUkwqLCBKU1J1bnRpbWUqIHJ0KTsKZW51bSBwcm90b2NvbCB1cmxfc2V0X3Byb3RvY29sKFVSTCosIGNvbnN0IGNoYXIqIHByb3RvKTsKQk9PTCAgICAgICAgICB1cmxfc2V0X3BhdGhfbGVuKFVSTCosIGNvbnN0IGNoYXIqIHBhdGgsIHNpemVfdCBsZW4sIEpTQ29udGV4dCogY3R4KTsKQk9PTCAgICAgICAgICB1cmxfc2V0X3F1ZXJ5X2xlbihVUkwqLCBjb25zdCBjaGFyKiBxdWVyeSwgc2l6ZV90IGxlbiwgSlNDb250ZXh0KiBjdHgpOwp2b2lkICAgICAgICAgIHVybF9pbmZvKGNvbnN0IFVSTCwgc3RydWN0IGx3c19jbGllbnRfY29ubmVjdF9pbmZvKiBpbmZvKTsKY29uc3QgY2hhciogICB1cmxfcXVlcnkoY29uc3QgVVJMKTsKY29uc3QgY2hhciogICB1cmxfc2VhcmNoKGNvbnN0IFVSTCwgc2l6ZV90KiBsZW5fcCk7CmNvbnN0IGNoYXIqICAgdXJsX2hhc2goY29uc3QgVVJMKTsKdm9pZCAgICAgICAgICB1cmxfZnJvbW9iaihVUkwqLCBKU1ZhbHVlQ29uc3Qgb2JqLCBKU0NvbnRleHQqIGN0eCk7CkJPT0wgICAgICAgICAgdXJsX2Zyb212YWx1ZShVUkwqLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIEpTQ29udGV4dCogY3R4KTsKdm9pZCAgICAgICAgICB1cmxfZnJvbXdzaShVUkwqLCBzdHJ1Y3QgbHdzKiB3c2ksIEpTQ29udGV4dCogY3R4KTsKVVJMKiAgICAgICAgICB1cmxfbmV3KEpTQ29udGV4dCopOwpKU1ZhbHVlICAgICAgIHVybF9vYmplY3QoY29uc3QgVVJMLCBKU0NvbnRleHQqIGN0eCk7CgpzdGF0aWMgaW5saW5lIGNvbnN0IGNoYXIqCnVybF9wYXRoKGNvbnN0IHN0cnVjdCB1cmwgdXJsKSB7CiAgcmV0dXJuIHVybC5wYXRoOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKdXJsX3ZhbGlkKGNvbnN0IHN0cnVjdCB1cmwgdXJsKSB7CiAgcmV0dXJuIHVybC5ob3N0IHx8IHVybC5wYXRoOwp9CgpzdGF0aWMgaW5saW5lIGVudW0gcHJvdG9jb2wKdXJsX3Byb3RvY29sKGNvbnN0IHN0cnVjdCB1cmwgdXJsKSB7CiAgcmV0dXJuIHByb3RvY29sX251bWJlcih1cmwucHJvdG9jb2wpOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKdXJsX2lzX3Rscyhjb25zdCBzdHJ1Y3QgdXJsIHVybCkgewogIHJldHVybiB1cmwucHJvdG9jb2wgPyBwcm90b2NvbF9pc190bHMocHJvdG9jb2xfbnVtYmVyKHVybC5wcm90b2NvbCkpIDogRkFMU0U7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHVybCoKdXJsX2R1cChzdHJ1Y3QgdXJsKiB1cmwpIHsKICArK3VybC0+cmVmX2NvdW50OwogIHJldHVybiB1cmw7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHVybAp1cmxfY2xvbmUoc3RydWN0IHVybCB1cmwsIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIChzdHJ1Y3QgdXJsKXsKICAgICAgLnJlZl9jb3VudCA9IDEsCiAgICAgIC5wcm90b2NvbCA9IHVybC5wcm90b2NvbCwKICAgICAgLmhvc3QgPSB1cmwuaG9zdCA/IGpzX3N0cmR1cChjdHgsIHVybC5ob3N0KSA6IDAsCiAgICAgIC5wYXRoID0gdXJsLnBhdGggPyBqc19zdHJkdXAoY3R4LCB1cmwucGF0aCkgOiAwLAogICAgICAucG9ydCA9IHVybC5wb3J0LAogIH07Cn0KCnN0YXRpYyBpbmxpbmUgdm9pZAp1cmxfY29weShzdHJ1Y3QgdXJsKiB1cmwsIGNvbnN0IHN0cnVjdCB1cmwgb3RoZXIsIEpTQ29udGV4dCogY3R4KSB7CiAgdXJsLT5wcm90b2NvbCA9IG90aGVyLnByb3RvY29sOwogIHVybC0+aG9zdCA9IG90aGVyLmhvc3QgPyBqc19zdHJkdXAoY3R4LCBvdGhlci5ob3N0KSA6IDA7CiAgdXJsLT5wYXRoID0gb3RoZXIucGF0aCA/IGpzX3N0cmR1cChjdHgsIG90aGVyLnBhdGgpIDogMDsKICB1cmwtPnBvcnQgPSBvdGhlci5wb3J0Owp9CgpzdGF0aWMgaW5saW5lIGNoYXIqCnVybF9zdHJpbmcoc3RydWN0IHVybCBjb25zdCogdXJsKSB7CiAgc3RhdGljIGNoYXIgYnVmWzQwOTZdOwoKICB1cmxfcHJpbnQoYnVmLCBzaXplb2YoYnVmKSwgKnVybCk7CiAgcmV0dXJuIGJ1ZjsKfQoKc3RhdGljIGlubGluZSBCT09MCnVybF9zZXRfcGF0aChzdHJ1Y3QgdXJsKiB1cmwsIGNvbnN0IGNoYXIqIHBhdGgsIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIHVybF9zZXRfcGF0aF9sZW4odXJsLCBwYXRoLCBzdHJsZW4ocGF0aCksIGN0eCk7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTAp1cmxfc2V0X3F1ZXJ5KHN0cnVjdCB1cmwqIHVybCwgY29uc3QgY2hhciogcXVlcnksIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIHVybF9zZXRfcXVlcnlfbGVuKHVybCwgcXVlcnksIHN0cmxlbihxdWVyeSksIGN0eCk7Cn0KI2VuZGlmIC8qIFFKU05FVF9MSUJfVVJMX0ggKi8KAAAAAAAAAADUDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgMAAAAAAABCAwAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADUDQAAI2lmbmRlZiBRSlNORVRfTElCX1VSTF9ICiNkZWZpbmUgUUpTTkVUX0xJQl9VUkxfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPHN0ZGludC5oPgojaW5jbHVkZSAidXRpbHMuaCIKCmVudW0gcHJvdG9jb2wgewogIFBST1RPQ09MX1dTID0gMCwKICBQUk9UT0NPTF9XU1MsCiAgUFJPVE9DT0xfSFRUUCwKICBQUk9UT0NPTF9IVFRQUywKICBQUk9UT0NPTF9SQVcsCiAgUFJPVE9DT0xfVExTLAogIE5VTV9QUk9UT0NPTFMsCn07CgojZGVmaW5lIFVSTF9JU19WQUxJRF9QT1JUKG51bSkgKChudW0pID49IDAgJiYgKG51bSkgPD0gNjU1MzUpCgplbnVtIHByb3RvY29sIHByb3RvY29sX251bWJlcihjb25zdCBjaGFyKik7CmNvbnN0IGNoYXIqIHByb3RvY29sX3N0cmluZyhlbnVtIHByb3RvY29sKTsKdWludDE2X3QgcHJvdG9jb2xfZGVmYXVsdF9wb3J0KGVudW0gcHJvdG9jb2wpOwpCT09MIHByb3RvY29sX2lzX3RscyhlbnVtIHByb3RvY29sKTsKCnR5cGVkZWYgc3RydWN0IHVybCB7CiAgaW50IHJlZl9jb3VudDsKICBjb25zdCBjaGFyKiBwcm90b2NvbDsKICBjaGFyICpob3N0LCAqcGF0aDsKICBpbnQgcG9ydDsKfSBVUkw7CgojZGVmaW5lIFVSTF9JTklUKCkgXAogIChzdHJ1Y3QgdXJsKSB7IDEsIDAsIDAsIDAsIDAgfQoKZW51bSBwcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiAgIHByb3RvY29sX3N0cmluZyhlbnVtIHByb3RvY29sKTsKdWludDE2X3QgICAgICBwcm90b2NvbF9kZWZhdWx0X3BvcnQoZW51bSBwcm90b2NvbCk7CkJPT0wgICAgICAgICAgcHJvdG9jb2xfaXNfdGxzKGVudW0gcHJvdG9jb2wpOwoKdm9pZCAgICAgICAgICB1cmxfaW5pdChVUkwqLCBjb25zdCBjaGFyKiBwcm90b2NvbCwgY29uc3QgY2hhciogaG9zdCwgaW50IHBvcnQsIGNvbnN0IGNoYXIqIHBhdGgsIEpTQ29udGV4dCogY3R4KTsKdm9pZCAgICAgICAgICB1cmxfcGFyc2UoVVJMKiwgY29uc3QgY2hhciogdSwgSlNDb250ZXh0KiBjdHgpOwpzaXplX3QgICAgICAgIHVybF9wcmludChjaGFyKiwgc2l6ZV90IHNpemUsIGNvbnN0IFVSTCB1cmwpOwpjaGFyKiAgICAgICAgIHVybF9mb3JtYXQoY29uc3QgVVJMLCBKU0NvbnRleHQqIGN0eCk7CmNoYXIqICAgICAgICAgdXJsX2hvc3QoY29uc3QgVVJMLCBKU0NvbnRleHQqIGN0eCk7CnNpemVfdCAgICAgICAgdXJsX2xlbmd0aChjb25zdCBVUkwpOwp2b2lkICAgICAgICAgIHVybF9mcmVlKFVSTCosIEpTQ29udGV4dCogY3R4KTsKdm9pZCAgICAgICAgICB1cmxfZnJlZV9ydChVUkwqLCBKU1J1bnRpbWUqIHJ0KTsKZW51bSBwcm90b2NvbCB1cmxfc2V0X3Byb3RvY29sKFVSTCosIGNvbnN0IGNoYXIqIHByb3RvKTsKQk9PTCAgICAgICAgICB1cmxfc2V0X3BhdGhfbGVuKFVSTCosIGNvbnN0IGNoYXIqIHBhdGgsIHNpemVfdCBsZW4sIEpTQ29udGV4dCogY3R4KTsKQk9PTCAgICAgICAgICB1cmxfc2V0X3F1ZXJ5X2xlbihVUkwqLCBjb25zdCBjaGFyKiBxdWVyeSwgc2l6ZV90IGxlbiwgSlNDb250ZXh0KiBjdHgpOwp2b2lkICAgICAgICAgIHVybF9pbmZvKGNvbnN0IFVSTCwgc3RydWN0IGx3c19jbGllbnRfY29ubmVjdF9pbmZvKiBpbmZvKTsKY29uc3QgY2hhciogICB1cmxfcXVlcnkoY29uc3QgVVJMKTsKY29uc3QgY2hhciogICB1cmxfc2VhcmNoKGNvbnN0IFVSTCwgc2l6ZV90KiBsZW5fcCk7CmNvbnN0IGNoYXIqICAgdXJsX2hhc2goY29uc3QgVVJMKTsKdm9pZCAgICAgICAgICB1cmxfZnJvbW9iaihVUkwqLCBKU1ZhbHVlQ29uc3Qgb2JqLCBKU0NvbnRleHQqIGN0eCk7CkJPT0wgICAgICAgICAgdXJsX2Zyb212YWx1ZShVUkwqLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIEpTQ29udGV4dCogY3R4KTsKdm9pZCAgICAgICAgICB1cmxfZnJvbXdzaShVUkwqLCBzdHJ1Y3QgbHdzKiB3c2ksIEpTQ29udGV4dCogY3R4KTsKVVJMKiAgICAgICAgICB1cmxfbmV3KEpTQ29udGV4dCopOwpKU1ZhbHVlICAgICAgIHVybF9vYmplY3QoY29uc3QgVVJMLCBKU0NvbnRleHQqIGN0eCk7CgpzdGF0aWMgaW5saW5lIGNvbnN0IGNoYXIqCnVybF9wYXRoKGNvbnN0IHN0cnVjdCB1cmwgdXJsKSB7CiAgcmV0dXJuIHVybC5wYXRoOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKdXJsX3ZhbGlkKGNvbnN0IHN0cnVjdCB1cmwgdXJsKSB7CiAgcmV0dXJuIHVybC5ob3N0IHx8IHVybC5wYXRoOwp9CgpzdGF0aWMgaW5saW5lIGVudW0gcHJvdG9jb2wKdXJsX3Byb3RvY29sKGNvbnN0IHN0cnVjdCB1cmwgdXJsKSB7CiAgcmV0dXJuIHByb3RvY29sX251bWJlcih1cmwucHJvdG9jb2wpOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKdXJsX2lzX3Rscyhjb25zdCBzdHJ1Y3QgdXJsIHVybCkgewogIHJldHVybiB1cmwucHJvdG9jb2wgPyBwcm90b2NvbF9pc190bHMocHJvdG9jb2xfbnVtYmVyKHVybC5wcm90b2NvbCkpIDogRkFMU0U7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHVybCoKdXJsX2R1cChzdHJ1Y3QgdXJsKiB1cmwpIHsKICArK3VybC0+cmVmX2NvdW50OwogIHJldHVybiB1cmw7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHVybAp1cmxfY2xvbmUoc3RydWN0IHVybCB1cmwsIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIChzdHJ1Y3QgdXJsKXsKICAgICAgLnJlZl9jb3VudCA9IDEsCiAgICAgIC5wcm90b2NvbCA9IHVybC5wcm90b2NvbCwKICAgICAgLmhvc3QgPSB1cmwuaG9zdCA/IGpzX3N0cmR1cChjdHgsIHVybC5ob3N0KSA6IDAsCiAgICAgIC5wYXRoID0gdXJsLnBhdGggPyBqc19zdHJkdXAoY3R4LCB1cmwucGF0aCkgOiAwLAogICAgICAucG9ydCA9IHVybC5wb3J0LAogIH07Cn0KCnN0YXRpYyBpbmxpbmUgdm9pZAp1cmxfY29weShzdHJ1Y3QgdXJsKiB1cmwsIGNvbnN0IHN0cnVjdCB1cmwgb3RoZXIsIEpTQ29udGV4dCogY3R4KSB7CiAgdXJsLT5wcm90b2NvbCA9IG90aGVyLnByb3RvY29sOwogIHVybC0+aG9zdCA9IG90aGVyLmhvc3QgPyBqc19zdHJkdXAoY3R4LCBvdGhlci5ob3N0KSA6IDA7CiAgdXJsLT5wYXRoID0gb3RoZXIucGF0aCA/IGpzX3N0cmR1cChjdHgsIG90aGVyLnBhdGgpIDogMDsKICB1cmwtPnBvcnQgPSBvdGhlci5wb3J0Owp9CgpzdGF0aWMgaW5saW5lIGNoYXIqCnVybF9zdHJpbmcoc3RydWN0IHVybCBjb25zdCogdXJsKSB7CiAgc3RhdGljIGNoYXIgYnVmWzQwOTZdOwoKICB1cmxfcHJpbnQoYnVmLCBzaXplb2YoYnVmKSwgKnVybCk7CiAgcmV0dXJuIGJ1ZjsKfQoKc3RhdGljIGlubGluZSBCT09MCnVybF9zZXRfcGF0aChzdHJ1Y3QgdXJsKiB1cmwsIGNvbnN0IGNoYXIqIHBhdGgsIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIHVybF9zZXRfcGF0aF9sZW4odXJsLCBwYXRoLCBzdHJsZW4ocGF0aCksIGN0eCk7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTAp1cmxfc2V0X3F1ZXJ5KHN0cnVjdCB1cmwqIHVybCwgY29uc3QgY2hhciogcXVlcnksIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIHVybF9zZXRfcXVlcnlfbGVuKHVybCwgcXVlcnksIHN0cmxlbihxdWVyeSksIGN0eCk7Cn0KI2VuZGlmIC8qIFFKU05FVF9MSUJfVVJMX0ggKi8KAAAAAAAAAADUDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgMAAAAAAABCAwAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADUDQAAI2lmbmRlZiBRSlNORVRfTElCX1VSTF9ICiNkZWZpbmUgUUpTTkVUX0xJQl9VUkxfSAoKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPHN0ZGludC5oPgojaW5jbHVkZSAidXRpbHMuaCIKCmVudW0gcHJvdG9jb2wgewogIFBST1RPQ09MX1dTID0gMCwKICBQUk9UT0NPTF9XU1MsCiAgUFJPVE9DT0xfSFRUUCwKICBQUk9UT0NPTF9IVFRQUywKICBQUk9UT0NPTF9SQVcsCiAgUFJPVE9DT0xfVExTLAogIE5VTV9QUk9UT0NPTFMsCn07CgojZGVmaW5lIFVSTF9JU19WQUxJRF9QT1JUKG51bSkgKChudW0pID49IDAgJiYgKG51bSkgPD0gNjU1MzUpCgplbnVtIHByb3RvY29sIHByb3RvY29sX251bWJlcihjb25zdCBjaGFyKik7CmNvbnN0IGNoYXIqIHByb3RvY29sX3N0cmluZyhlbnVtIHByb3RvY29sKTsKdWludDE2X3QgcHJvdG9jb2xfZGVmYXVsdF9wb3J0KGVudW0gcHJvdG9jb2wpOwpCT09MIHByb3RvY29sX2lzX3RscyhlbnVtIHByb3RvY29sKTsKCnR5cGVkZWYgc3RydWN0IHVybCB7CiAgaW50IHJlZl9jb3VudDsKICBjb25zdCBjaGFyKiBwcm90b2NvbDsKICBjaGFyICpob3N0LCAqcGF0aDsKICBpbnQgcG9ydDsKfSBVUkw7CgojZGVmaW5lIFVSTF9JTklUKCkgXAogIChzdHJ1Y3QgdXJsKSB7IDEsIDAsIDAsIDAsIDAgfQoKZW51bSBwcm90b2NvbCBwcm90b2NvbF9udW1iZXIoY29uc3QgY2hhciopOwpjb25zdCBjaGFyKiAgIHByb3RvY29sX3N0cmluZyhlbnVtIHByb3RvY29sKTsKdWludDE2X3QgICAgICBwcm90b2NvbF9kZWZhdWx0X3BvcnQoZW51bSBwcm90b2NvbCk7CkJPT0wgICAgICAgICAgcHJvdG9jb2xfaXNfdGxzKGVudW0gcHJvdG9jb2wpOwoKdm9pZCAgICAgICAgICB1cmxfaW5pdChVUkwqLCBjb25zdCBjaGFyKiBwcm90b2NvbCwgY29uc3QgY2hhciogaG9zdCwgaW50IHBvcnQsIGNvbnN0IGNoYXIqIHBhdGgsIEpTQ29udGV4dCogY3R4KTsKdm9pZCAgICAgICAgICB1cmxfcGFyc2UoVVJMKiwgY29uc3QgY2hhciogdSwgSlNDb250ZXh0KiBjdHgpOwpzaXplX3QgICAgICAgIHVybF9wcmludChjaGFyKiwgc2l6ZV90IHNpemUsIGNvbnN0IFVSTCB1cmwpOwpjaGFyKiAgICAgICAgIHVybF9mb3JtYXQoY29uc3QgVVJMLCBKU0NvbnRleHQqIGN0eCk7CmNoYXIqICAgICAgICAgdXJsX2hvc3QoY29uc3QgVVJMLCBKU0NvbnRleHQqIGN0eCk7CnNpemVfdCAgICAgICAgdXJsX2xlbmd0aChjb25zdCBVUkwpOwp2b2lkICAgICAgICAgIHVybF9mcmVlKFVSTCosIEpTQ29udGV4dCogY3R4KTsKdm9pZCAgICAgICAgICB1cmxfZnJlZV9ydChVUkwqLCBKU1J1bnRpbWUqIHJ0KTsKZW51bSBwcm90b2NvbCB1cmxfc2V0X3Byb3RvY29sKFVSTCosIGNvbnN0IGNoYXIqIHByb3RvKTsKQk9PTCAgICAgICAgICB1cmxfc2V0X3BhdGhfbGVuKFVSTCosIGNvbnN0IGNoYXIqIHBhdGgsIHNpemVfdCBsZW4sIEpTQ29udGV4dCogY3R4KTsKQk9PTCAgICAgICAgICB1cmxfc2V0X3F1ZXJ5X2xlbihVUkwqLCBjb25zdCBjaGFyKiBxdWVyeSwgc2l6ZV90IGxlbiwgSlNDb250ZXh0KiBjdHgpOwp2b2lkICAgICAgICAgIHVybF9pbmZvKGNvbnN0IFVSTCwgc3RydWN0IGx3c19jbGllbnRfY29ubmVjdF9pbmZvKiBpbmZvKTsKY29uc3QgY2hhciogICB1cmxfcXVlcnkoY29uc3QgVVJMKTsKY29uc3QgY2hhciogICB1cmxfc2VhcmNoKGNvbnN0IFVSTCwgc2l6ZV90KiBsZW5fcCk7CmNvbnN0IGNoYXIqICAgdXJsX2hhc2goY29uc3QgVVJMKTsKdm9pZCAgICAgICAgICB1cmxfZnJvbW9iaihVUkwqLCBKU1ZhbHVlQ29uc3Qgb2JqLCBKU0NvbnRleHQqIGN0eCk7CkJPT0wgICAgICAgICAgdXJsX2Zyb212YWx1ZShVUkwqLCBKU1ZhbHVlQ29uc3QgdmFsdWUsIEpTQ29udGV4dCogY3R4KTsKdm9pZCAgICAgICAgICB1cmxfZnJvbXdzaShVUkwqLCBzdHJ1Y3QgbHdzKiB3c2ksIEpTQ29udGV4dCogY3R4KTsKVVJMKiAgICAgICAgICB1cmxfbmV3KEpTQ29udGV4dCopOwpKU1ZhbHVlICAgICAgIHVybF9vYmplY3QoY29uc3QgVVJMLCBKU0NvbnRleHQqIGN0eCk7CgpzdGF0aWMgaW5saW5lIGNvbnN0IGNoYXIqCnVybF9wYXRoKGNvbnN0IHN0cnVjdCB1cmwgdXJsKSB7CiAgcmV0dXJuIHVybC5wYXRoOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKdXJsX3ZhbGlkKGNvbnN0IHN0cnVjdCB1cmwgdXJsKSB7CiAgcmV0dXJuIHVybC5ob3N0IHx8IHVybC5wYXRoOwp9CgpzdGF0aWMgaW5saW5lIGVudW0gcHJvdG9jb2wKdXJsX3Byb3RvY29sKGNvbnN0IHN0cnVjdCB1cmwgdXJsKSB7CiAgcmV0dXJuIHByb3RvY29sX251bWJlcih1cmwucHJvdG9jb2wpOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKdXJsX2lzX3Rscyhjb25zdCBzdHJ1Y3QgdXJsIHVybCkgewogIHJldHVybiB1cmwucHJvdG9jb2wgPyBwcm90b2NvbF9pc190bHMocHJvdG9jb2xfbnVtYmVyKHVybC5wcm90b2NvbCkpIDogRkFMU0U7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHVybCoKdXJsX2R1cChzdHJ1Y3QgdXJsKiB1cmwpIHsKICArK3VybC0+cmVmX2NvdW50OwogIHJldHVybiB1cmw7Cn0KCnN0YXRpYyBpbmxpbmUgc3RydWN0IHVybAp1cmxfY2xvbmUoc3RydWN0IHVybCB1cmwsIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIChzdHJ1Y3QgdXJsKXsKICAgICAgLnJlZl9jb3VudCA9IDEsCiAgICAgIC5wcm90b2NvbCA9IHVybC5wcm90b2NvbCwKICAgICAgLmhvc3QgPSB1cmwuaG9zdCA/IGpzX3N0cmR1cChjdHgsIHVybC5ob3N0KSA6IDAsCiAgICAgIC5wYXRoID0gdXJsLnBhdGggPyBqc19zdHJkdXAoY3R4LCB1cmwucGF0aCkgOiAwLAogICAgICAucG9ydCA9IHVybC5wb3J0LAogIH07Cn0KCnN0YXRpYyBpbmxpbmUgdm9pZAp1cmxfY29weShzdHJ1Y3QgdXJsKiB1cmwsIGNvbnN0IHN0cnVjdCB1cmwgb3RoZXIsIEpTQ29udGV4dCogY3R4KSB7CiAgdXJsLT5wcm90b2NvbCA9IG90aGVyLnByb3RvY29sOwogIHVybC0+aG9zdCA9IG90aGVyLmhvc3QgPyBqc19zdHJkdXAoY3R4LCBvdGhlci5ob3N0KSA6IDA7CiAgdXJsLT5wYXRoID0gb3RoZXIucGF0aCA/IGpzX3N0cmR1cChjdHgsIG90aGVyLnBhdGgpIDogMDsKICB1cmwtPnBvcnQgPSBvdGhlci5wb3J0Owp9CgpzdGF0aWMgaW5saW5lIGNoYXIqCnVybF9zdHJpbmcoc3RydWN0IHVybCBjb25zdCogdXJsKSB7CiAgc3RhdGljIGNoYXIgYnVmWzQwOTZdOwoKICB1cmxfcHJpbnQoYnVmLCBzaXplb2YoYnVmKSwgKnVybCk7CiAgcmV0dXJuIGJ1ZjsKfQoKc3RhdGljIGlubGluZSBCT09MCnVybF9zZXRfcGF0aChzdHJ1Y3QgdXJsKiB1cmwsIGNvbnN0IGNoYXIqIHBhdGgsIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIHVybF9zZXRfcGF0aF9sZW4odXJsLCBwYXRoLCBzdHJsZW4ocGF0aCksIGN0eCk7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTAp1cmxfc2V0X3F1ZXJ5KHN0cnVjdCB1cmwqIHVybCwgY29uc3QgY2hhciogcXVlcnksIEpTQ29udGV4dCogY3R4KSB7CiAgcmV0dXJuIHVybF9zZXRfcXVlcnlfbGVuKHVybCwgcXVlcnksIHN0cmxlbihxdWVyeSksIGN0eCk7Cn0KI2VuZGlmIC8qIFFKU05FVF9MSUJfVVJMX0ggKi8KAAAAAAAAAAA3DQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgcAAAAAAAASBwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/queue.h",
			"settings":
			{
				"buffer_size": 1346,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABCBQAAI2lmbmRlZiBRSlNORVRfTElCX1FVRVVFX0gKI2RlZmluZSBRSlNORVRfTElCX1FVRVVFX0gKCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgImRlZmVycmVkLmgiCgp0eXBlZGVmIHN0cnVjdCBxdWV1ZSB7CiAgc3RydWN0IGxpc3RfaGVhZCBpdGVtczsKICBzaXplX3Qgc2l6ZTsKICBCT09MIGNvbnRpbnVvdXM7Cn0gUXVldWU7Cgp0eXBlZGVmIHN0cnVjdCBxdWV1ZV9pdGVtIHsKICBzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7CiAgQnl0ZUJsb2NrIGJsb2NrOwogIEJPT0wgZG9uZTsKICBEZWZlcnJlZCogdW5yZWY7Cn0gUXVldWVJdGVtOwoKdm9pZCBxdWV1ZV96ZXJvKFF1ZXVlKik7CnZvaWQgcXVldWVfY2xlYXIoUXVldWUqLCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgcXVldWVfY2xlYXJfcnQoUXVldWUqLCBKU1J1bnRpbWUqIHJ0KTsKdm9pZCBxdWV1ZV9mcmVlKFF1ZXVlKiwgSlNDb250ZXh0KiBjdHgpOwpRdWV1ZSogcXVldWVfbmV3KEpTQ29udGV4dCopOwpRdWV1ZUl0ZW0qIHF1ZXVlX2Zyb250KFF1ZXVlKik7ClF1ZXVlSXRlbSogcXVldWVfYmFjayhRdWV1ZSopOwpRdWV1ZUl0ZW0qIHF1ZXVlX2xhc3RfY2h1bmsoUXVldWUqKTsKQnl0ZUJsb2NrIHF1ZXVlX25leHQoUXVldWUqLCBCT09MKiBkb25lX3ApOwpRdWV1ZUl0ZW0qIHF1ZXVlX2FkZChRdWV1ZSosIEJ5dGVCbG9jayBjaHVuayk7ClF1ZXVlSXRlbSogcXVldWVfcHV0KFF1ZXVlKiwgQnl0ZUJsb2NrIGNodW5rLCBKU0NvbnRleHQqIGN0eCk7ClF1ZXVlSXRlbSogcXVldWVfd3JpdGUoUXVldWUqLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3Qgc2l6ZSwgSlNDb250ZXh0KiBjdHgpOwpRdWV1ZUl0ZW0qIHF1ZXVlX2Nsb3NlKFF1ZXVlKik7CmludDY0X3QgcXVldWVfYnl0ZXMoUXVldWUqKTsKUXVldWVJdGVtKiBxdWV1ZV9jb250aW51b3VzKFF1ZXVlKiBxKTsKCnN0YXRpYyBpbmxpbmUgQk9PTApxdWV1ZV9lbXB0eShRdWV1ZSogcSkgewogIHJldHVybiBsaXN0X2VtcHR5KCZxLT5pdGVtcyk7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTApxdWV1ZV9jbG9zZWQoUXVldWUqIHEpIHsKICBRdWV1ZUl0ZW0qIGk7CiAgcmV0dXJuIChpID0gcXVldWVfZnJvbnQocSkpID8gaS0+ZG9uZSA6IEZBTFNFOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKcXVldWVfY29tcGxldGUoUXVldWUqIHEpIHsKICBRdWV1ZUl0ZW0qIGk7CiAgcmV0dXJuIChpID0gcXVldWVfYmFjayhxKSkgPyBpLT5kb25lIDogRkFMU0U7Cn0KCnN0YXRpYyBpbmxpbmUgc2l6ZV90CnF1ZXVlX3NpemUoUXVldWUqIHEpIHsKICByZXR1cm4gcS0+c2l6ZTsKfQoKI2VuZGlmIC8qIFFKU05FVF9MSUJfUVVFVUVfSCAqLwoAAAAAAAAAAEIFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wMAAAAAAAD/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABCBQAAI2lmbmRlZiBRSlNORVRfTElCX1FVRVVFX0gKI2RlZmluZSBRSlNORVRfTElCX1FVRVVFX0gKCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgImRlZmVycmVkLmgiCgp0eXBlZGVmIHN0cnVjdCBxdWV1ZSB7CiAgc3RydWN0IGxpc3RfaGVhZCBpdGVtczsKICBzaXplX3Qgc2l6ZTsKICBCT09MIGNvbnRpbnVvdXM7Cn0gUXVldWU7Cgp0eXBlZGVmIHN0cnVjdCBxdWV1ZV9pdGVtIHsKICBzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7CiAgQnl0ZUJsb2NrIGJsb2NrOwogIEJPT0wgZG9uZTsKICBEZWZlcnJlZCogdW5yZWY7Cn0gUXVldWVJdGVtOwoKdm9pZCBxdWV1ZV96ZXJvKFF1ZXVlKik7CnZvaWQgcXVldWVfY2xlYXIoUXVldWUqLCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgcXVldWVfY2xlYXJfcnQoUXVldWUqLCBKU1J1bnRpbWUqIHJ0KTsKdm9pZCBxdWV1ZV9mcmVlKFF1ZXVlKiwgSlNDb250ZXh0KiBjdHgpOwpRdWV1ZSogcXVldWVfbmV3KEpTQ29udGV4dCopOwpRdWV1ZUl0ZW0qIHF1ZXVlX2Zyb250KFF1ZXVlKik7ClF1ZXVlSXRlbSogcXVldWVfYmFjayhRdWV1ZSopOwpRdWV1ZUl0ZW0qIHF1ZXVlX2xhc3RfY2h1bmsoUXVldWUqKTsKQnl0ZUJsb2NrIHF1ZXVlX25leHQoUXVldWUqLCBCT09MKiBkb25lX3ApOwpRdWV1ZUl0ZW0qIHF1ZXVlX2FkZChRdWV1ZSosIEJ5dGVCbG9jayBjaHVuayk7ClF1ZXVlSXRlbSogcXVldWVfcHV0KFF1ZXVlKiwgQnl0ZUJsb2NrIGNodW5rLCBKU0NvbnRleHQqIGN0eCk7ClF1ZXVlSXRlbSogcXVldWVfd3JpdGUoUXVldWUqLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3Qgc2l6ZSwgSlNDb250ZXh0KiBjdHgpOwpRdWV1ZUl0ZW0qIHF1ZXVlX2Nsb3NlKFF1ZXVlKik7CmludDY0X3QgcXVldWVfYnl0ZXMoUXVldWUqKTsKUXVldWVJdGVtKiBxdWV1ZV9jb250aW51b3VzKFF1ZXVlKiBxKTsKCnN0YXRpYyBpbmxpbmUgQk9PTApxdWV1ZV9lbXB0eShRdWV1ZSogcSkgewogIHJldHVybiBsaXN0X2VtcHR5KCZxLT5pdGVtcyk7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTApxdWV1ZV9jbG9zZWQoUXVldWUqIHEpIHsKICBRdWV1ZUl0ZW0qIGk7CiAgcmV0dXJuIChpID0gcXVldWVfZnJvbnQocSkpID8gaS0+ZG9uZSA6IEZBTFNFOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKcXVldWVfY29tcGxldGUoUXVldWUqIHEpIHsKICBRdWV1ZUl0ZW0qIGk7CiAgcmV0dXJuIChpID0gcXVldWVfYmFjayhxKSkgPyBpLT5kb25lIDogRkFMU0U7Cn0KCnN0YXRpYyBpbmxpbmUgc2l6ZV90CnF1ZXVlX3NpemUoUXVldWUqIHEpIHsKICByZXR1cm4gcS0+c2l6ZTsKfQoKI2VuZGlmIC8qIFFKU05FVF9MSUJfUVVFVUVfSCAqLwoAAAAAAAAAAEIFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wMAAAAAAAD/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABCBQAAI2lmbmRlZiBRSlNORVRfTElCX1FVRVVFX0gKI2RlZmluZSBRSlNORVRfTElCX1FVRVVFX0gKCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgImRlZmVycmVkLmgiCgp0eXBlZGVmIHN0cnVjdCBxdWV1ZSB7CiAgc3RydWN0IGxpc3RfaGVhZCBpdGVtczsKICBzaXplX3Qgc2l6ZTsKICBCT09MIGNvbnRpbnVvdXM7Cn0gUXVldWU7Cgp0eXBlZGVmIHN0cnVjdCBxdWV1ZV9pdGVtIHsKICBzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7CiAgQnl0ZUJsb2NrIGJsb2NrOwogIEJPT0wgZG9uZTsKICBEZWZlcnJlZCogdW5yZWY7Cn0gUXVldWVJdGVtOwoKdm9pZCBxdWV1ZV96ZXJvKFF1ZXVlKik7CnZvaWQgcXVldWVfY2xlYXIoUXVldWUqLCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgcXVldWVfY2xlYXJfcnQoUXVldWUqLCBKU1J1bnRpbWUqIHJ0KTsKdm9pZCBxdWV1ZV9mcmVlKFF1ZXVlKiwgSlNDb250ZXh0KiBjdHgpOwpRdWV1ZSogcXVldWVfbmV3KEpTQ29udGV4dCopOwpRdWV1ZUl0ZW0qIHF1ZXVlX2Zyb250KFF1ZXVlKik7ClF1ZXVlSXRlbSogcXVldWVfYmFjayhRdWV1ZSopOwpRdWV1ZUl0ZW0qIHF1ZXVlX2xhc3RfY2h1bmsoUXVldWUqKTsKQnl0ZUJsb2NrIHF1ZXVlX25leHQoUXVldWUqLCBCT09MKiBkb25lX3ApOwpRdWV1ZUl0ZW0qIHF1ZXVlX2FkZChRdWV1ZSosIEJ5dGVCbG9jayBjaHVuayk7ClF1ZXVlSXRlbSogcXVldWVfcHV0KFF1ZXVlKiwgQnl0ZUJsb2NrIGNodW5rLCBKU0NvbnRleHQqIGN0eCk7ClF1ZXVlSXRlbSogcXVldWVfd3JpdGUoUXVldWUqLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3Qgc2l6ZSwgSlNDb250ZXh0KiBjdHgpOwpRdWV1ZUl0ZW0qIHF1ZXVlX2Nsb3NlKFF1ZXVlKik7CmludDY0X3QgcXVldWVfYnl0ZXMoUXVldWUqKTsKUXVldWVJdGVtKiBxdWV1ZV9jb250aW51b3VzKFF1ZXVlKiBxKTsKCnN0YXRpYyBpbmxpbmUgQk9PTApxdWV1ZV9lbXB0eShRdWV1ZSogcSkgewogIHJldHVybiBsaXN0X2VtcHR5KCZxLT5pdGVtcyk7Cn0KCnN0YXRpYyBpbmxpbmUgQk9PTApxdWV1ZV9jbG9zZWQoUXVldWUqIHEpIHsKICBRdWV1ZUl0ZW0qIGk7CiAgcmV0dXJuIChpID0gcXVldWVfZnJvbnQocSkpID8gaS0+ZG9uZSA6IEZBTFNFOwp9CgpzdGF0aWMgaW5saW5lIEJPT0wKcXVldWVfY29tcGxldGUoUXVldWUqIHEpIHsKICBRdWV1ZUl0ZW0qIGk7CiAgcmV0dXJuIChpID0gcXVldWVfYmFjayhxKSkgPyBpLT5kb25lIDogRkFMU0U7Cn0KCnN0YXRpYyBpbmxpbmUgc2l6ZV90CnF1ZXVlX3NpemUoUXVldWUqIHEpIHsKICByZXR1cm4gcS0+c2l6ZTsKfQoKI2VuZGlmIC8qIFFKU05FVF9MSUJfUVVFVUVfSCAqLwoAAAAAAAAAAEIFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wMAAAAAAAD/AwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/url.c",
			"settings":
			{
				"buffer_size": 12418,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAARBQAAAAAAABOFAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAARBQAAAAAAABOFAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAARBQAAAAAAABOFAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/session.c",
			"settings":
			{
				"buffer_size": 3158,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAVAAAAI2luY2x1ZGUgInNlc3Npb24uaCIK",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					2,
					"paste",
					null,
					"AgAAAAAAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAqAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "response"
					},
					"CQAAAB8AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAAAcAAABzZXNzaW9uIAAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACIAAAAAAAAAAAAAACIAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAnAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwAAAAAAAAAmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFEBAAAAAAAAUgEAAAAAAAAAAAAAUgEAAAAAAABSAQAAAAAAAAoAAABSZXNwb25zZTsK",
					"AQAAAAAAAAABAAAAUQEAAAAAAABbAQAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"AQAAAFEBAAAAAAAAUQEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAUgEAAAAAAABSAQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"right_delete",
					null,
					"AQAAAIcBAAAAAAAAhwEAAAAAAABrAAAALypzdGF0aWMgVEhSRUFEX0xPQ0FMIHVpbnQzMl90IHNlc3Npb25fc2VyaWFsID0gMDsKVEhSRUFEX0xPQ0FMIHN0cnVjdCBsaXN0X2hlYWQgc2Vzc2lvbl9saXN0ID0gezAsIDB9OyovCgo",
					"AQAAAAAAAAABAAAAhwEAAAAAAADyAQAAAAAAAAAAAAAAAAAA"
				],
				[
					37,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNDAAAI2luY2x1ZGUgInNlc3Npb24uaCIKI2luY2x1ZGUgInJlc3BvbnNlLmgiCiNpbmNsdWRlICJvcGFxdWUuaCIKI2luY2x1ZGUgInJpbmdidWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgIndzLmgiCiNpbmNsdWRlICJjb250ZXh0LmgiCiNpbmNsdWRlICJsd3MtdXRpbHMuaCIKI2luY2x1ZGUgPGFzc2VydC5oPgoKc3RydWN0IHNvY2tldCogbWlubmV0X3dzX2RhdGEoSlNWYWx1ZUNvbnN0KTsKc3RydWN0IGh0dHBfcmVxdWVzdCogbWlubmV0X3JlcXVlc3RfZGF0YShKU1ZhbHVlQ29uc3QpOwpSZXNwb25zZSogbWlubmV0X3Jlc3BvbnNlX2RhdGEoSlNWYWx1ZUNvbnN0KTsKCmV4dGVybiBSZXNwb25zZSogbWlubmV0X3Jlc3BvbnNlX2RhdGEoSlNWYWx1ZUNvbnN0KTsKCnZvaWQKc2Vzc2lvbl96ZXJvKHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3Npb24pIHsKICBzZXNzaW9uLT53c19vYmogPSBKU19OVUxMOwogIHNlc3Npb24tPnJlcV9vYmogPSBKU19OVUxMOwogIHNlc3Npb24tPnJlc3Bfb2JqID0gSlNfTlVMTDsKICBzZXNzaW9uLT5tb3VudCA9IDA7CiAgc2Vzc2lvbi0+cHJveHkgPSAwOwogIHNlc3Npb24tPmdlbmVyYXRvciA9IEpTX05VTEw7CiAgc2Vzc2lvbi0+bmV4dCA9IEpTX05VTEw7CiAgc2Vzc2lvbi0+aW5fYm9keSA9IEZBTFNFOwogIHNlc3Npb24tPnJlc3BvbnNlX3NlbnQgPSBGQUxTRTsKICBzZXNzaW9uLT53YWl0X3Jlc29sdmUgPSBGQUxTRTsKICBzZXNzaW9uLT5zZXJ2ZXIgPSBOVUxMOwogIHNlc3Npb24tPmNsaWVudCA9IE5VTEw7CgogIHF1ZXVlX3plcm8oJnNlc3Npb24tPnNlbmRxKTsKfQoKdm9pZApzZXNzaW9uX2NsZWFyX3J0KHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3Npb24sIEpTUnVudGltZSogcnQpIHsKCiAgSlNfRnJlZVZhbHVlUlQocnQsIHNlc3Npb24tPndzX29iaik7CiAgc2Vzc2lvbi0+d3Nfb2JqID0gSlNfVU5ERUZJTkVEOwoKICBKU19GcmVlVmFsdWVSVChydCwgc2Vzc2lvbi0+cmVxX29iaik7CiAgc2Vzc2lvbi0+cmVxX29iaiA9IEpTX1VOREVGSU5FRDsKICBKU19GcmVlVmFsdWVSVChydCwgc2Vzc2lvbi0+cmVzcF9vYmopOwogIHNlc3Npb24tPnJlc3Bfb2JqID0gSlNfVU5ERUZJTkVEOwogIEpTX0ZyZWVWYWx1ZVJUKHJ0LCBzZXNzaW9uLT5nZW5lcmF0b3IpOwogIHNlc3Npb24tPmdlbmVyYXRvciA9IEpTX1VOREVGSU5FRDsKICBKU19GcmVlVmFsdWVSVChydCwgc2Vzc2lvbi0+bmV4dCk7CiAgc2Vzc2lvbi0+bmV4dCA9IEpTX1VOREVGSU5FRDsKCiAgaWYocXVldWVfc2l6ZSgmc2Vzc2lvbi0+c2VuZHEpKQogICAgcXVldWVfY2xlYXJfcnQoJnNlc3Npb24tPnNlbmRxLCBydCk7Cn0KCkpTVmFsdWUKc2Vzc2lvbl9vYmplY3Qoc3RydWN0IHNlc3Npb25fZGF0YSogc2Vzc2lvbiwgSlNDb250ZXh0KiBjdHgpIHsKICBKU1ZhbHVlIHJldDsKICByZXQgPSBKU19OZXdBcnJheShjdHgpOwoKICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHJldCwgMSwgSlNfRHVwVmFsdWUoY3R4LCBzZXNzaW9uLT53c19vYmopKTsKICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHJldCwgMiwgSlNfRHVwVmFsdWUoY3R4LCBzZXNzaW9uLT5yZXFfb2JqKSk7CiAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCByZXQsIDMsIEpTX0R1cFZhbHVlKGN0eCwgc2Vzc2lvbi0+cmVzcF9vYmopKTsKCiAgcmV0dXJuIHJldDsKfQoKaW50CnNlc3Npb25fd3JpdGFibGUoc3RydWN0IHNlc3Npb25fZGF0YSogc2Vzc2lvbiwgQk9PTCBiaW5hcnksIEpTQ29udGV4dCogY3R4KSB7CgogIGludCByZXQgPSAwOwogIHNpemVfdCBzaXplOwogIHN0cnVjdCBzb2NrZXQqIHdzID0gbWlubmV0X3dzX2RhdGEoc2Vzc2lvbi0+d3Nfb2JqKTsKCiAgaWYoKHNpemUgPSBxdWV1ZV9zaXplKCZzZXNzaW9uLT5zZW5kcSkpID4gMCkgewogICAgQnl0ZUJsb2NrIGNodW5rOwogICAgQk9PTCBkb25lID0gRkFMU0U7CgogICAgY2h1bmsgPSBxdWV1ZV9uZXh0KCZzZXNzaW9uLT5zZW5kcSwgJmRvbmUpOwoKICAgIHJldCA9IGx3c193cml0ZSh3cy0+bHdzaSwgYmxvY2tfQkVHSU4oJmNodW5rKSwgYmxvY2tfU0laRSgmY2h1bmspLCBiaW5hcnkgPyBMV1NfV1JJVEVfQklOQVJZIDogTFdTX1dSSVRFX1RFWFQpOwoKICAgIGJsb2NrX2ZyZWUoJmNodW5rKTsKICB9CgogIGlmKHF1ZXVlX3NpemUoJnNlc3Npb24tPnNlbmRxKSA+IDApCiAgICBsd3NfY2FsbGJhY2tfb25fd3JpdGFibGUod3MtPmx3c2kpOwoKICByZXR1cm4gcmV0Owp9CgppbnQKc2Vzc2lvbl9jYWxsYmFjayhzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiBzZXNzaW9uLCBKU0NhbGxiYWNrKiBjYiwgc3RydWN0IGNvbnRleHQqIGNvbnRleHQpIHsKICBpbnQgcmV0ID0gMDsKICBKU1ZhbHVlIHJlc3VsdCA9IGNhbGxiYWNrX2VtaXRfdGhpcyhjYiwgc2Vzc2lvbi0+d3Nfb2JqLCAyLCAmc2Vzc2lvbi0+cmVxX29iaik7CiAgY29udGV4dF9leGNlcHRpb24oY29udGV4dCwgcmVzdWx0KTsKCiAgaWYoSlNfSXNFeGNlcHRpb24ocmVzdWx0KSkgewogICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIHJlc3VsdCk7CiAgICByZXQgPSAtMTsKICB9IGVsc2UgaWYoanNfaXNfaXRlcmF0b3IoY2ItPmN0eCwgcmVzdWx0KSkgewogICAgYXNzZXJ0KGpzX2lzX2l0ZXJhdG9yKGNiLT5jdHgsIHJlc3VsdCkpOwogICAgc2Vzc2lvbi0+Z2VuZXJhdG9yID0gcmVzdWx0OwogICAgc2Vzc2lvbi0+bmV4dCA9IEpTX1VOREVGSU5FRDsKICB9IGVsc2UgewogICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIHJlc3VsdCk7CiAgfQoKICByZXR1cm4gcmV0Owp9CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCnNlc3Npb25fb3BhcXVlKHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3MpIHsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKCiAgaWYoKHdzID0gc2Vzc2lvbl93cyhzZXNzKSkpIHsKICAgIGFzc2VydCh3cy0+bHdzaSk7CiAgICByZXR1cm4gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzLT5sd3NpKTsKICB9CgogIHJldHVybiAwOwp9CgpSZXNwb25zZSoKc2Vzc2lvbl9yZXNwb25zZShzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiBzZXNzKSB7CiAgaWYoSlNfSXNPYmplY3Qoc2Vzcy0+cmVzcF9vYmopKQogICAgcmV0dXJuIG1pbm5ldF9yZXNwb25zZV9kYXRhKHNlc3MtPnJlc3Bfb2JqKTsKICByZXR1cm4gMDsKfQoAAAAAAAAAAEEMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QcAAAAAAADRBwAAAAAAAAAAAAAAAAAA"
				],
				[
					47,
					1,
					"cut",
					null,
					"AQAAABUAAAAAAAAAFQAAAAAAAAAWAAAAI2luY2x1ZGUgInJlc3BvbnNlLmgiCg",
					"AQAAAAAAAAABAAAAFQAAAAAAAAArAAAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					2,
					"paste",
					null,
					"AgAAABUAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAABBAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "rewq"
					},
					"BQAAAB8AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAAAgAAAByZXNwb25zZSAAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwAAAAAAAAAnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					2,
					"left_delete",
					null,
					"AgAAACIAAAAAAAAAIgAAAAAAAAABAAAAcSEAAAAAAAAAIQAAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAIwAAAAAAAAAjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "quest"
					},
					"BQAAACEAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJQAAAAAAAAAAAAAAJQAAAAAAAAAmAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQAAAAAAAAAhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABWDAAAI2luY2x1ZGUgInNlc3Npb24uaCIKI2luY2x1ZGUgInJlcXVlc3QuaCIKI2luY2x1ZGUgInJlc3BvbnNlLmgiCiNpbmNsdWRlICJvcGFxdWUuaCIKI2luY2x1ZGUgInJpbmdidWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgIndzLmgiCiNpbmNsdWRlICJjb250ZXh0LmgiCiNpbmNsdWRlICJsd3MtdXRpbHMuaCIKI2luY2x1ZGUgPGFzc2VydC5oPgoKc3RydWN0IHNvY2tldCogbWlubmV0X3dzX2RhdGEoSlNWYWx1ZUNvbnN0KTsKUmVxdWVzdCogbWlubmV0X3JlcXVlc3RfZGF0YShKU1ZhbHVlQ29uc3QpOwpSZXNwb25zZSogbWlubmV0X3Jlc3BvbnNlX2RhdGEoSlNWYWx1ZUNvbnN0KTsKCmV4dGVybiBSZXNwb25zZSogbWlubmV0X3Jlc3BvbnNlX2RhdGEoSlNWYWx1ZUNvbnN0KTsKCnZvaWQKc2Vzc2lvbl96ZXJvKHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3Npb24pIHsKICBzZXNzaW9uLT53c19vYmogPSBKU19OVUxMOwogIHNlc3Npb24tPnJlcV9vYmogPSBKU19OVUxMOwogIHNlc3Npb24tPnJlc3Bfb2JqID0gSlNfTlVMTDsKICBzZXNzaW9uLT5tb3VudCA9IDA7CiAgc2Vzc2lvbi0+cHJveHkgPSAwOwogIHNlc3Npb24tPmdlbmVyYXRvciA9IEpTX05VTEw7CiAgc2Vzc2lvbi0+bmV4dCA9IEpTX05VTEw7CiAgc2Vzc2lvbi0+aW5fYm9keSA9IEZBTFNFOwogIHNlc3Npb24tPnJlc3BvbnNlX3NlbnQgPSBGQUxTRTsKICBzZXNzaW9uLT53YWl0X3Jlc29sdmUgPSBGQUxTRTsKICBzZXNzaW9uLT5zZXJ2ZXIgPSBOVUxMOwogIHNlc3Npb24tPmNsaWVudCA9IE5VTEw7CgogIHF1ZXVlX3plcm8oJnNlc3Npb24tPnNlbmRxKTsKfQoKdm9pZApzZXNzaW9uX2NsZWFyX3J0KHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3Npb24sIEpTUnVudGltZSogcnQpIHsKCiAgSlNfRnJlZVZhbHVlUlQocnQsIHNlc3Npb24tPndzX29iaik7CiAgc2Vzc2lvbi0+d3Nfb2JqID0gSlNfVU5ERUZJTkVEOwoKICBKU19GcmVlVmFsdWVSVChydCwgc2Vzc2lvbi0+cmVxX29iaik7CiAgc2Vzc2lvbi0+cmVxX29iaiA9IEpTX1VOREVGSU5FRDsKICBKU19GcmVlVmFsdWVSVChydCwgc2Vzc2lvbi0+cmVzcF9vYmopOwogIHNlc3Npb24tPnJlc3Bfb2JqID0gSlNfVU5ERUZJTkVEOwogIEpTX0ZyZWVWYWx1ZVJUKHJ0LCBzZXNzaW9uLT5nZW5lcmF0b3IpOwogIHNlc3Npb24tPmdlbmVyYXRvciA9IEpTX1VOREVGSU5FRDsKICBKU19GcmVlVmFsdWVSVChydCwgc2Vzc2lvbi0+bmV4dCk7CiAgc2Vzc2lvbi0+bmV4dCA9IEpTX1VOREVGSU5FRDsKCiAgaWYocXVldWVfc2l6ZSgmc2Vzc2lvbi0+c2VuZHEpKQogICAgcXVldWVfY2xlYXJfcnQoJnNlc3Npb24tPnNlbmRxLCBydCk7Cn0KCkpTVmFsdWUKc2Vzc2lvbl9vYmplY3Qoc3RydWN0IHNlc3Npb25fZGF0YSogc2Vzc2lvbiwgSlNDb250ZXh0KiBjdHgpIHsKICBKU1ZhbHVlIHJldDsKICByZXQgPSBKU19OZXdBcnJheShjdHgpOwoKICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHJldCwgMSwgSlNfRHVwVmFsdWUoY3R4LCBzZXNzaW9uLT53c19vYmopKTsKICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHJldCwgMiwgSlNfRHVwVmFsdWUoY3R4LCBzZXNzaW9uLT5yZXFfb2JqKSk7CiAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCByZXQsIDMsIEpTX0R1cFZhbHVlKGN0eCwgc2Vzc2lvbi0+cmVzcF9vYmopKTsKCiAgcmV0dXJuIHJldDsKfQoKaW50CnNlc3Npb25fd3JpdGFibGUoc3RydWN0IHNlc3Npb25fZGF0YSogc2Vzc2lvbiwgQk9PTCBiaW5hcnksIEpTQ29udGV4dCogY3R4KSB7CgogIGludCByZXQgPSAwOwogIHNpemVfdCBzaXplOwogIHN0cnVjdCBzb2NrZXQqIHdzID0gbWlubmV0X3dzX2RhdGEoc2Vzc2lvbi0+d3Nfb2JqKTsKCiAgaWYoKHNpemUgPSBxdWV1ZV9zaXplKCZzZXNzaW9uLT5zZW5kcSkpID4gMCkgewogICAgQnl0ZUJsb2NrIGNodW5rOwogICAgQk9PTCBkb25lID0gRkFMU0U7CgogICAgY2h1bmsgPSBxdWV1ZV9uZXh0KCZzZXNzaW9uLT5zZW5kcSwgJmRvbmUpOwoKICAgIHJldCA9IGx3c193cml0ZSh3cy0+bHdzaSwgYmxvY2tfQkVHSU4oJmNodW5rKSwgYmxvY2tfU0laRSgmY2h1bmspLCBiaW5hcnkgPyBMV1NfV1JJVEVfQklOQVJZIDogTFdTX1dSSVRFX1RFWFQpOwoKICAgIGJsb2NrX2ZyZWUoJmNodW5rKTsKICB9CgogIGlmKHF1ZXVlX3NpemUoJnNlc3Npb24tPnNlbmRxKSA+IDApCiAgICBsd3NfY2FsbGJhY2tfb25fd3JpdGFibGUod3MtPmx3c2kpOwoKICByZXR1cm4gcmV0Owp9CgppbnQKc2Vzc2lvbl9jYWxsYmFjayhzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiBzZXNzaW9uLCBKU0NhbGxiYWNrKiBjYiwgc3RydWN0IGNvbnRleHQqIGNvbnRleHQpIHsKICBpbnQgcmV0ID0gMDsKICBKU1ZhbHVlIHJlc3VsdCA9IGNhbGxiYWNrX2VtaXRfdGhpcyhjYiwgc2Vzc2lvbi0+d3Nfb2JqLCAyLCAmc2Vzc2lvbi0+cmVxX29iaik7CiAgY29udGV4dF9leGNlcHRpb24oY29udGV4dCwgcmVzdWx0KTsKCiAgaWYoSlNfSXNFeGNlcHRpb24ocmVzdWx0KSkgewogICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIHJlc3VsdCk7CiAgICByZXQgPSAtMTsKICB9IGVsc2UgaWYoanNfaXNfaXRlcmF0b3IoY2ItPmN0eCwgcmVzdWx0KSkgewogICAgYXNzZXJ0KGpzX2lzX2l0ZXJhdG9yKGNiLT5jdHgsIHJlc3VsdCkpOwogICAgc2Vzc2lvbi0+Z2VuZXJhdG9yID0gcmVzdWx0OwogICAgc2Vzc2lvbi0+bmV4dCA9IEpTX1VOREVGSU5FRDsKICB9IGVsc2UgewogICAgSlNfRnJlZVZhbHVlKGNiLT5jdHgsIHJlc3VsdCk7CiAgfQoKICByZXR1cm4gcmV0Owp9CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCnNlc3Npb25fb3BhcXVlKHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3MpIHsKICBzdHJ1Y3Qgc29ja2V0KiB3czsKCiAgaWYoKHdzID0gc2Vzc2lvbl93cyhzZXNzKSkpIHsKICAgIGFzc2VydCh3cy0+bHdzaSk7CiAgICByZXR1cm4gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzLT5sd3NpKTsKICB9CgogIHJldHVybiAwOwp9CgpSZXNwb25zZSoKc2Vzc2lvbl9yZXNwb25zZShzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiBzZXNzKSB7CiAgaWYoSlNfSXNPYmplY3Qoc2Vzcy0+cmVzcF9vYmopKQogICAgcmV0dXJuIG1pbm5ldF9yZXNwb25zZV9kYXRhKHNlc3MtPnJlc3Bfb2JqKTsKICByZXR1cm4gMDsKfQoAAAAAAAAAAFYMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgAAAAAAAAAmAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/minnet-server-http.c",
			"settings":
			{
				"buffer_size": 34753,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					14,
					1,
					"left_delete",
					null,
					"AQAAACIkAAAAAAAAIiQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAIyQAAAAAAAAjJAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACIkAAAAAAAAIyQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIiQAAAAAAAAiJAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "JS_GetRuntime("
					},
					"DgAAACMkAAAAAAAAJCQAAAAAAAAAAAAAJCQAAAAAAAAlJAAAAAAAAAAAAAAlJAAAAAAAACYkAAAAAAAAAAAAACYkAAAAAAAAJyQAAAAAAAAAAAAAJyQAAAAAAAAoJAAAAAAAAAAAAAAoJAAAAAAAACkkAAAAAAAAAAAAACkkAAAAAAAAKiQAAAAAAAAAAAAAKiQAAAAAAAArJAAAAAAAAAAAAAArJAAAAAAAACwkAAAAAAAAAAAAACwkAAAAAAAALSQAAAAAAAAAAAAALSQAAAAAAAAuJAAAAAAAAAAAAAAuJAAAAAAAAC8kAAAAAAAAAAAAAC8kAAAAAAAAMCQAAAAAAAAAAAAAMCQAAAAAAAAxJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIyQAAAAAAAAjJAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAD4kAAAAAAAAPyQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPiQAAAAAAAA+JAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "_rt"
					},
					"AwAAABMkAAAAAAAAFCQAAAAAAAAAAAAAFCQAAAAAAAAVJAAAAAAAAAAAAAAVJAAAAAAAABYkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEyQAAAAAAAATJAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADEhwAAI2luY2x1ZGUgIm1pbm5ldC5oIgojaW5jbHVkZSAibWlubmV0LXNlcnZlci1odHRwLmgiCiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGN0eXBlLmg+CiNpbmNsdWRlIDxjdXRpbHMuaD4KI2luY2x1ZGUgPGludHR5cGVzLmg+CiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlIDxzdGRpbnQuaD4KI2luY2x1ZGUgPHN0ZGlvLmg+CiNpbmNsdWRlIDxzdHJpbmcuaD4KI2luY2x1ZGUgPHN5cy90eXBlcy5oPgojaW5jbHVkZSAiY29udGV4dC5oIgojaW5jbHVkZSAiaGVhZGVycy5oIgojaW5jbHVkZSAianN1dGlscy5oIgojaW5jbHVkZSAibWlubmV0LWZvcm0tcGFyc2VyLmgiCiNpbmNsdWRlICJtaW5uZXQtZ2VuZXJhdG9yLmgiCiNpbmNsdWRlICJtaW5uZXQtcmVxdWVzdC5oIgojaW5jbHVkZSAibWlubmV0LXJlc3BvbnNlLmgiCiNpbmNsdWRlICJtaW5uZXQtc2VydmVyLmgiCiNpbmNsdWRlICJtaW5uZXQtdXJsLmgiCiNpbmNsdWRlICJtaW5uZXQtd2Vic29ja2V0LmgiCiNpbmNsdWRlICJvcGFxdWUuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgInV0aWxzLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKCnN0YXRpYyBpbnQgc2VydmVfZ2VuZXJhdG9yKEpTQ29udGV4dCogY3R4LCBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiBzZXNzaW9uLCBzdHJ1Y3QgbHdzKiB3c2ksIEJPT0wqIGRvbmVfcCk7CgppbnQgbHdzX2hkcl9zaW1wbGVfY3JlYXRlKHN0cnVjdCBsd3MqLCBlbnVtIGx3c190b2tlbl9pbmRleGVzLCBjb25zdCBjaGFyKik7CgpNaW5uZXRWaG9zdE9wdGlvbnMqCnZob3N0X29wdGlvbnNfY3JlYXRlKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBuYW1lLCBjb25zdCBjaGFyKiB2YWx1ZSkgewogIE1pbm5ldFZob3N0T3B0aW9ucyogdm8gPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKE1pbm5ldFZob3N0T3B0aW9ucykpOwoKICAvLyBERUJVRygidmhvc3Rfb3B0aW9uc19jcmVhdGUgJXMgJXNcbiIsIG5hbWUsIHZhbHVlKTsKCiAgdm8tPm5hbWUgPSBuYW1lID8ganNfc3RyZHVwKGN0eCwgbmFtZSkgOiAwOwogIHZvLT52YWx1ZSA9IHZhbHVlID8ganNfc3RyZHVwKGN0eCwgdmFsdWUpIDogMDsKCiAgcmV0dXJuIHZvOwp9CgpNaW5uZXRWaG9zdE9wdGlvbnMqCnZob3N0X29wdGlvbnNfbmV3KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgdmhvc3Rfb3B0aW9uKSB7CiAgTWlubmV0Vmhvc3RPcHRpb25zKiB2bzsKICBKU1ZhbHVlIG5hbWUsIHZhbHVlOwogIGNvbnN0IGNoYXIgKm5hbWVzdHIsICp2YWx1ZXN0cjsKCiAgbmFtZSA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgdmhvc3Rfb3B0aW9uLCAwKTsKICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgdmhvc3Rfb3B0aW9uLCAxKTsKCiAgbmFtZXN0ciA9IEpTX1RvQ1N0cmluZyhjdHgsIG5hbWUpOwogIHZhbHVlc3RyID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpOwoKICBKU19GcmVlVmFsdWUoY3R4LCBuYW1lKTsKICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CgogIHZvID0gdmhvc3Rfb3B0aW9uc19jcmVhdGUoY3R4LCBuYW1lc3RyLCB2YWx1ZXN0cik7CgogIEpTX0ZyZWVDU3RyaW5nKGN0eCwgbmFtZXN0cik7CiAgSlNfRnJlZUNTdHJpbmcoY3R4LCB2YWx1ZXN0cik7CgogIHJldHVybiB2bzsKfQoKTWlubmV0Vmhvc3RPcHRpb25zKgp2aG9zdF9vcHRpb25zX2Zyb21lbnRyaWVzKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgYXJyKSB7CiAgdWludDMyX3QgaSwgbGVuID0ganNfZ2V0X3Byb3BlcnR5c3RyX3VpbnQzMihjdHgsIGFyciwgImxlbmd0aCIpOwogIE1pbm5ldFZob3N0T3B0aW9ucyAqdm8gPSAwLCAqKnZvcHRyID0gJnZvOwoKICBmb3IoaSA9IDA7IGkgPCBsZW47IGkrKykgewogICAgSlNWYWx1ZSB2YWwgPSBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIGFyciwgaSk7CgogICAgKnZvcHRyID0gdmhvc3Rfb3B0aW9uc19uZXcoY3R4LCB2YWwpOwogICAgdm9wdHIgPSAmKCp2b3B0ciktPm5leHQ7CgogICAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsKTsKICB9CgogIHJldHVybiB2bzsKfQoKTWlubmV0Vmhvc3RPcHRpb25zKgp2aG9zdF9vcHRpb25zX2Zyb21vYmooSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmopIHsKICBKU1Byb3BlcnR5RW51bSogdGFiOwogIHVpbnQzMl90IHRhYl9sZW4sIGk7CiAgTWlubmV0Vmhvc3RPcHRpb25zICp2byA9IDAsICoqdm9wdHIgPSAmdm87CgogIGlmKEpTX0lzQXJyYXkoY3R4LCBvYmopKQogICAgcmV0dXJuIHZob3N0X29wdGlvbnNfZnJvbWVudHJpZXMoY3R4LCBvYmopOwoKICBpZihKU19HZXRPd25Qcm9wZXJ0eU5hbWVzKGN0eCwgJnRhYiwgJnRhYl9sZW4sIG9iaiwgSlNfR1BOX0VOVU1fT05MWSB8IEpTX0dQTl9TVFJJTkdfTUFTSykpCiAgICByZXR1cm4gMDsKCiAgZm9yKGkgPSAwOyBpIDwgdGFiX2xlbjsgaSsrKSB7CiAgICBKU0F0b20gcHJvcCA9IHRhYltpXS5hdG9tOwogICAgY29uc3QgY2hhciogbmFtZSA9IEpTX0F0b21Ub0NTdHJpbmcoY3R4LCBwcm9wKTsKICAgIEpTVmFsdWUgdmFsID0gSlNfR2V0UHJvcGVydHkoY3R4LCBvYmosIHByb3ApOwogICAgY29uc3QgY2hhciogdmFsdWUgPSBKU19Ub0NTdHJpbmcoY3R4LCB2YWwpOwogICAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsKTsKCiAgICAqdm9wdHIgPSB2aG9zdF9vcHRpb25zX2NyZWF0ZShjdHgsIG5hbWUsIHZhbHVlKTsKICAgIHZvcHRyID0gJigqdm9wdHIpLT5uZXh0OwoKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgbmFtZSk7CiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHZhbHVlKTsKICB9CiAganNfZnJlZShjdHgsIHRhYik7CgogIHJldHVybiB2bzsKfQoKdm9pZAp2aG9zdF9vcHRpb25zX2R1bXAoTWlubmV0Vmhvc3RPcHRpb25zKiB2bykgewoKICB1aW50MzJfdCBpID0gMDsKICB3aGlsZSh2bykgewogICAgaSsrOwogICAgREVCVUcoIm9wdGlvbiAldSAlcyA9ICVzXG4iLCBpLCB2by0+bmFtZSwgdm8tPnZhbHVlKTsKCiAgICB2byA9IHZvLT5uZXh0OwogIH0KfQoKdm9pZAp2aG9zdF9vcHRpb25zX2ZyZWVfbGlzdChKU0NvbnRleHQqIGN0eCwgTWlubmV0Vmhvc3RPcHRpb25zKiB2bykgewogIE1pbm5ldFZob3N0T3B0aW9ucyogbmV4dDsKCiAgZG8gewoKICAgIGlmKHZvLT5uYW1lKQogICAgICBqc19mcmVlKGN0eCwgKHZvaWQqKXZvLT5uYW1lKTsKICAgIGlmKHZvLT52YWx1ZSkKICAgICAganNfZnJlZShjdHgsICh2b2lkKil2by0+dmFsdWUpOwogICAgaWYodm8tPm9wdGlvbnMpCiAgICAgIHZob3N0X29wdGlvbnNfZnJlZV9saXN0KGN0eCwgdm8tPm9wdGlvbnMpOwoKICAgIG5leHQgPSB2by0+bmV4dDsKICAgIGpzX2ZyZWUoY3R4LCAodm9pZCopdm8pOwogIH0gd2hpbGUoKHZvID0gbmV4dCkpOwp9CgovKnZvaWQKdmhvc3Rfb3B0aW9uc19mcmVlKEpTQ29udGV4dCogY3R4LCBNaW5uZXRWaG9zdE9wdGlvbnMqIHZvKSB7CgogIGlmKHZvLT5uYW1lKQogICAganNfZnJlZShjdHgsICh2b2lkKil2by0+bmFtZSk7CiAgaWYodm8tPnZhbHVlKQogICAganNfZnJlZShjdHgsICh2b2lkKil2by0+dmFsdWUpOwoKICBpZih2by0+b3B0aW9ucykKICAgIHZob3N0X29wdGlvbnNfZnJlZV9saXN0KGN0eCwgdm8tPm9wdGlvbnMpOwoKICBqc19mcmVlKGN0eCwgKHZvaWQqKXZvKTsKfQoqLwpNaW5uZXRIdHRwTW91bnQqCm1vdW50X2NyZWF0ZShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbW91bnRwb2ludCwgY29uc3QgY2hhciogb3JpZ2luLCBjb25zdCBjaGFyKiBkZWYsIGNvbnN0IGNoYXIqIHBybywgZW51bSBsd3NfbW91bnRfcHJvdG9jb2xzIG9yaWdpbl9wcm90bykgewogIE1pbm5ldEh0dHBNb3VudCogbTsKCiAgaWYoKG0gPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKE1pbm5ldEh0dHBNb3VudCkpKSkgewogICAgREVCVUcoIm1vdW50X2NyZWF0ZSBtbnQ9JS0xMHMgb3JnPSUtMjBzIGRlZj0lLTE1cyBwcm90b2NvbD0lLTEwcyBvcmlnaW5fcHJvdG9jb2w9JXNcbiIsCiAgICAgICAgICBtb3VudHBvaW50LAogICAgICAgICAgb3JpZ2luLAogICAgICAgICAgZGVmLAogICAgICAgICAgcHJvLAogICAgICAgICAgKChjb25zdCBjaGFyKltdKXsKICAgICAgICAgICAgICAiSFRUUCIsCiAgICAgICAgICAgICAgIkhUVFBTIiwKICAgICAgICAgICAgICAiRklMRSIsCiAgICAgICAgICAgICAgIkNHSSIsCiAgICAgICAgICAgICAgIlJFRElSX0hUVFAiLAogICAgICAgICAgICAgICJSRURJUl9IVFRQUyIsCiAgICAgICAgICAgICAgIkNBTExCQUNLIiwKICAgICAgICAgIH0pW29yaWdpbl9wcm90b10pOwogICAgbS0+bHdzLm1vdW50cG9pbnQgPSBqc19zdHJkdXAoY3R4LCBtb3VudHBvaW50KTsKICAgIG0tPmx3cy5vcmlnaW4gPSBvcmlnaW4gPyBqc19zdHJkdXAoY3R4LCBvcmlnaW4pIDogMDsKICAgIG0tPmx3cy5kZWYgPSBkZWYgPyBqc19zdHJkdXAoY3R4LCBkZWYpIDogMDsKICAgIG0tPmx3cy5wcm90b2NvbCA9IHBybyA/IHBybyA6IGpzX3N0cmR1cChjdHgsIC8qb3JpZ2luX3Byb3RvID09IExXU01QUk9fQ0FMTEJBQ0sgPyAiaHR0cCIgOiovICJkZWZwcm90Iik7CiAgICBtLT5sd3Mub3JpZ2luX3Byb3RvY29sID0gb3JpZ2luX3Byb3RvOwogICAgbS0+bHdzLm1vdW50cG9pbnRfbGVuID0gc3RybGVuKG1vdW50cG9pbnQpOwogIH0KCiAgcmV0dXJuIG07Cn0KCk1pbm5ldEh0dHBNb3VudCoKbW91bnRfbmV3KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqLCBjb25zdCBjaGFyKiBrZXkpIHsKICBNaW5uZXRIdHRwTW91bnQqIHJldDsKICBKU1ZhbHVlIG1udCA9IEpTX1VOREVGSU5FRCwgb3JnID0gSlNfVU5ERUZJTkVELCBkZWYgPSBKU19VTkRFRklORUQsIHBybyA9IEpTX1VOREVGSU5FRDsKCiAgaWYoSlNfSXNBcnJheShjdHgsIG9iaikpIHsKICAgIG1udCA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgb2JqLCAwKTsKICAgIG9yZyA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgb2JqLCAxKTsKICAgIGRlZiA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgb2JqLCAyKTsKICAgIHBybyA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgb2JqLCAzKTsKICAgIC8vIG9wdCA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgb2JqLCA0KTsKICB9IGVsc2UgaWYoSlNfSXNGdW5jdGlvbihjdHgsIG9iaikpIHsKCiAgICBpZigha2V5KSB7CiAgICAgIHNpemVfdCBuYW1lbGVuOwogICAgICBKU1ZhbHVlIG5hbWUgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgIm5hbWUiKTsKICAgICAgY29uc3QgY2hhciogbmFtZXN0ciA9IEpTX1RvQ1N0cmluZ0xlbihjdHgsICZuYW1lbGVuLCBuYW1lKTsKICAgICAgY2hhciBidWZbbmFtZWxlbiArIDJdOwogICAgICBwc3RyY3B5KCZidWZbMV0sIG5hbWVsZW4gKyAxLCBuYW1lc3RyKTsKICAgICAgYnVmWzBdID0gJy8nOwogICAgICBidWZbbmFtZWxlbiArIDFdID0gJ1wwJzsKICAgICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBuYW1lc3RyKTsKICAgICAgbW50ID0gSlNfTmV3U3RyaW5nKGN0eCwgYnVmKTsKICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgbmFtZSk7CiAgICB9IGVsc2UgewogICAgICBtbnQgPSBKU19OZXdTdHJpbmcoY3R4LCBrZXkpOwogICAgfQoKICAgIG9yZyA9IEpTX0R1cFZhbHVlKGN0eCwgb2JqKTsKICB9CgogIGNvbnN0IGNoYXIqIHBhdGggPSBKU19Ub0NTdHJpbmcoY3R4LCBtbnQpOwoKICBERUJVRygibW91bnRfbmV3ICclcydcbiIsIHBhdGgpOwoKICBpZihKU19Jc0Z1bmN0aW9uKGN0eCwgb3JnKSkgewogICAgcmV0ID0gbW91bnRfY3JlYXRlKGN0eCwgcGF0aCwgMCwgMCwgMCwgTFdTTVBST19DQUxMQkFDSyk7CgogICAgR0VUQ0JUSElTKG9yZywgcmV0LT5jYWxsYmFjaywgSlNfVU5ERUZJTkVEKTsKCiAgfSBlbHNlIHsKICAgIGNvbnN0IGNoYXIqIGRlc3QgPSBKU19Ub0NTdHJpbmcoY3R4LCBvcmcpOwogICAgY2hhciogcHJvdG9jb2wgPSBKU19Jc1N0cmluZyhwcm8pID8ganNfdG9zdHJpbmcoY3R4LCBwcm8pIDogMDsKICAgIGNvbnN0IGNoYXIqIGRvdHNsYXNoc2xhc2ggPSBzdHJzdHIoZGVzdCwgIjovLyIpOwogICAgc2l6ZV90IHBsZW4gPSBkb3RzbGFzaHNsYXNoID8gZG90c2xhc2hzbGFzaCAtIGRlc3QgOiAwOwogICAgY29uc3QgY2hhciogb3JpZ2luID0gJmRlc3RbcGxlbiA/IHBsZW4gKyAzIDogMF07CiAgICBjb25zdCBjaGFyKiBpbmRleCA9IEpTX0lzVW5kZWZpbmVkKGRlZikgPyAwIDogSlNfVG9DU3RyaW5nKGN0eCwgZGVmKTsKICAgIGVudW0gbHdzX21vdW50X3Byb3RvY29scyBwcm90byA9IHBsZW4gPT0gMCA/IExXU01QUk9fQ0FMTEJBQ0sgOiAocGxlbiA9PSA1ICYmICFzdHJuY21wKGRlc3QsICJodHRwcyIsIHBsZW4pKSA/IExXU01QUk9fSFRUUFMgOiBMV1NNUFJPX0hUVFA7CgogICAgcmV0ID0gbW91bnRfY3JlYXRlKGN0eCwgcGF0aCwgb3JpZ2luLCBpbmRleCwgcHJvdG9jb2wsIHByb3RvKTsKCiAgICBpZihpbmRleCkKICAgICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBpbmRleCk7CiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIGRlc3QpOwogIH0KCiAgSlNfRnJlZUNTdHJpbmcoY3R4LCBwYXRoKTsKCiAgSlNfRnJlZVZhbHVlKGN0eCwgbW50KTsKICBKU19GcmVlVmFsdWUoY3R4LCBvcmcpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIGRlZik7CgogIHJldHVybiByZXQ7Cn0KCk1pbm5ldEh0dHBNb3VudCoKbW91bnRfZmluZChNaW5uZXRIdHRwTW91bnQqIG1vdW50cywgY29uc3QgY2hhciogeCwgc2l6ZV90IG4pIHsKICBzdHJ1Y3QgbHdzX2h0dHBfbW91bnQgKnAsICptID0gMDsKICBpbnQgcHJvdG9jb2wgPSBuID09IDAgPyBMV1NNUFJPX0NBTExCQUNLIDogTFdTTVBST19IVFRQOwogIHNpemVfdCBsID0gMDsKCiAgLy8gREVCVUcoIm1vdW50X2ZpbmQoJyUuKnMnKVxuIiwgKGludCluLCB4KTsKCiAgaWYobiA9PSAwKQogICAgbiA9IHN0cmxlbih4KTsKCiAgaWYocHJvdG9jb2wgPT0gTFdTTVBST19DQUxMQkFDSyAmJiB4WzBdID09ICcvJykgewogICAgeCsrOwogICAgbi0tOwogIH0KCiAgZm9yKHAgPSAoc3RydWN0IGx3c19odHRwX21vdW50Kiltb3VudHM7IHA7IHAgPSAoc3RydWN0IGx3c19odHRwX21vdW50KilwLT5tb3VudF9uZXh0KSB7CiAgICBpZihwcm90b2NvbCAhPSBMV1NNUFJPX0NBTExCQUNLIHx8IHAtPm9yaWdpbl9wcm90b2NvbCA9PSBMV1NNUFJPX0NBTExCQUNLKSB7CiAgICAgIGNvbnN0IGNoYXIqIG1udCA9IHAtPm1vdW50cG9pbnQ7CiAgICAgIHNpemVfdCBsZW4gPSBwLT5tb3VudHBvaW50X2xlbjsKICAgICAgaWYocHJvdG9jb2wgPT0gTFdTTVBST19DQUxMQkFDSyAmJiBtbnRbMF0gPT0gJy8nKSB7CiAgICAgICAgbW50Kys7CiAgICAgICAgbGVuLS07CiAgICAgIH0KICAgICAgLy8gREVCVUcoIm1vdW50X2ZpbmQgeD0nJS4qcycgJyUuKnMnXG4iLCAoaW50KW4sIHgsIChpbnQpbGVuLCBtbnQpOwoKICAgICAgaWYoKGxlbiA9PSBuIHx8IChuID4gbGVuICYmICh4W2xlbl0gPT0gJy8nIHx8IHhbbGVuXSA9PSAnPycpKSkgJiYgIXN0cm5jbXAoeCwgbW50LCBuKSkgewogICAgICAgIG0gPSBwOwogICAgICAgIC8qICAgYnJlYWs7Ki8KICAgICAgfQogICAgICBpZihuID49IGxlbiAmJiBsZW4gPj0gbCAmJiAhc3RybmNtcChtbnQsIHgsIE1JTihsZW4sIG4pKSkgewogICAgICAgIG0gPSBwOwogICAgICB9CiAgICB9CiAgfQogIGlmKG0pIHsKICAgIERFQlVHKCJtb3VudF9maW5kIG9yZz0lcyBtbnQ9JXMgY2IuY3R4PSVwXG4iLCAoKE1pbm5ldEh0dHBNb3VudCopbSktPm9yZywgKChNaW5uZXRIdHRwTW91bnQqKW0pLT5tbnQsICgoTWlubmV0SHR0cE1vdW50KiltKS0+Y2FsbGJhY2suY3R4KTsKICB9CiAgcmV0dXJuIChNaW5uZXRIdHRwTW91bnQqKW07Cn0KCk1pbm5ldEh0dHBNb3VudCoKbW91bnRfZmluZF9zKE1pbm5ldEh0dHBNb3VudCogbW91bnRzLCBjb25zdCBjaGFyKiB4KSB7CiAgc3RydWN0IGx3c19odHRwX21vdW50ICpwLCAqbSA9IDA7CiAgc2l6ZV90IG4gPSBzdHJsZW4oeCk7CgogIGZvcihwID0gKHN0cnVjdCBsd3NfaHR0cF9tb3VudCopbW91bnRzOyBwOyBwID0gKHN0cnVjdCBsd3NfaHR0cF9tb3VudCopcC0+bW91bnRfbmV4dCkgewogICAgY29uc3QgY2hhciogbW50ID0gcC0+bW91bnRwb2ludDsKICAgIHNpemVfdCBsZW4gPSBwLT5tb3VudHBvaW50X2xlbjsKCiAgICAvLyBERUJVRygibW91bnQgeD0nJS4qcycgJyUuKnMnXG4iLCAoaW50KW4sIHgsIChpbnQpbGVuLCBtbnQpOwoKICAgIGlmKGxlbiA9PSBuICYmICFzdHJuY21wKHgsIG1udCwgbikpIHsKICAgICAgbSA9IHA7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGlmKGxlbiA9PSAxICYmIG1udFswXSA9PSAnLycpCiAgICAgIG0gPSBwOwoKICAgIGlmKChuID4gbGVuICYmICh4W2xlbl0gPT0gJy8nIHx8IHhbbGVuXSA9PSAnPycpKSAmJiAobGVuID09IDAgfHwgIXN0cm5jbXAoeCwgbW50LCBsZW4pKSkgewogICAgICBtID0gcDsKICAgICAgYnJlYWs7CiAgICB9CiAgfQogIHJldHVybiAoTWlubmV0SHR0cE1vdW50KiltOwp9Cgp2b2lkCm1vdW50X2ZyZWUoSlNDb250ZXh0KiBjdHgsIE1pbm5ldEh0dHBNb3VudCBjb25zdCogbSkgewogIGpzX2ZyZWUoY3R4LCAodm9pZCopbS0+bHdzLm1vdW50cG9pbnQpOwoKICBpZihtLT5vcmcpCiAgICBqc19mcmVlKGN0eCwgKHZvaWQqKW0tPm9yZyk7CgogIGlmKG0tPmRlZikKICAgIGpzX2ZyZWUoY3R4LCAodm9pZCopbS0+ZGVmKTsKCiAgaWYobS0+cHJvKQogICAganNfZnJlZShjdHgsICh2b2lkKiltLT5wcm8pOwoKICBqc19mcmVlKGN0eCwgKHZvaWQqKW0pOwp9CgpCT09MCm1vdW50X2lzX3Byb3h5KE1pbm5ldEh0dHBNb3VudCBjb25zdCogbSkgewogIHJldHVybiBtLT5sd3Mub3JpZ2luX3Byb3RvY29sID09IExXU01QUk9fSFRUUCB8fCBtLT5sd3Mub3JpZ2luX3Byb3RvY29sID09IExXU01QUk9fSFRUUFM7Cn0KCnR5cGVkZWYgc3RydWN0IHsKICBpbnQgcmVmX2NvdW50OwogIEpTQ29udGV4dCogY3R4OwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3Npb247CiAgTWlubmV0UmVzcG9uc2UqIHJlc3A7CiAgc3RydWN0IGx3cyogd3NpOwp9IEhUVFBBc3luY1Jlc29sdmVDbG9zdXJlOwoKc3RhdGljIHZvaWQKc2VydmVfcmVzb2x2ZWRfZnJlZSh2b2lkKiBwdHIpIHsKICBIVFRQQXN5bmNSZXNvbHZlQ2xvc3VyZSogY2xvc3VyZSA9IHB0cjsKCiAgaWYoLS1jbG9zdXJlLT5yZWZfY291bnQgPT0gMCkgewogICAgaWYoY2xvc3VyZS0+cmVzcCkKICAgICAgcmVzcG9uc2VfZnJlZV9ydChjbG9zdXJlLT5yZXNwLCBKU19HZXRSdW50aW1lKGNsb3N1cmUtPmN0eCkpOwoKICAgIGpzX2ZyZWUoY2xvc3VyZS0+Y3R4LCBwdHIpOwogIH0KfQoKc3RhdGljIEpTVmFsdWUKc2VydmVfcmVqZWN0ZWQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYywgdm9pZCogcHRyKSB7CiAgSFRUUEFzeW5jUmVzb2x2ZUNsb3N1cmUqIGNsb3N1cmUgPSBwdHI7CiAgc3RydWN0IHNlc3Npb25fZGF0YSogc2Vzc2lvbiA9IGNsb3N1cmUtPnNlc3Npb247CgogIGNvbnN0IGNoYXIqIG1lc3NhZ2UgPSBKU19Ub0NTdHJpbmcoY3R4LCBhcmd2WzBdKTsKCiAgYXNzZXJ0KHNlc3Npb24tPndhaXRfcmVzb2x2ZSA+IDApOwogIC0tc2Vzc2lvbi0+d2FpdF9yZXNvbHZlOwoKICBMT0coIlNFUlZFUi1IVFRQKDEpIiwgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHdhaXRfcmVzb2x2ZT0laSBlcnJvcj0lcyIsIDkwLCBfX2Z1bmNfXywgc2Vzc2lvbi0+d2FpdF9yZXNvbHZlLCBtZXNzYWdlKTsKCiAgTWlubmV0U2VydmVyKiBzZXJ2ZXI7CgogIGlmKChzZXJ2ZXIgPSBsd3NfY29udGV4dF91c2VyKGx3c19nZXRfY29udGV4dChjbG9zdXJlLT53c2kpKSkpCiAgICBzZXJ2ZXJfZXhjZXB0aW9uKHNlcnZlciwgSlNfVGhyb3coY3R4LCBhcmd2WzBdKSk7CgogIHF1ZXVlX3dyaXRlKCZzZXNzaW9uLT5zZW5kcSwgbWVzc2FnZSwgc3RybGVuKG1lc3NhZ2UpLCBjdHgpOwogIHF1ZXVlX2Nsb3NlKCZzZXNzaW9uLT5zZW5kcSk7CgogIEpTX0ZyZWVDU3RyaW5nKGN0eCwgbWVzc2FnZSk7CiAgcmV0dXJuIEpTX1VOREVGSU5FRDsKfQoKc3RhdGljIEpTVmFsdWUKc2VydmVfcmVzb2x2ZWQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYywgdm9pZCogcHRyKSB7CiAgSFRUUEFzeW5jUmVzb2x2ZUNsb3N1cmUqIGNsb3N1cmUgPSBwdHI7CiAgc3RydWN0IHNlc3Npb25fZGF0YSogc2Vzc2lvbiA9IGNsb3N1cmUtPnNlc3Npb247CiAgLy8gc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUgPSBsd3NfZ2V0X29wYXF1ZV91c2VyX2RhdGEoY2xvc3VyZS0+d3NpKTsKCiAgYXNzZXJ0KHNlc3Npb24tPndhaXRfcmVzb2x2ZSA+IDApOwogIC0tc2Vzc2lvbi0+d2FpdF9yZXNvbHZlOwoKICBMT0coIlNFUlZFUi1IVFRQKDEpIiwKICAgICAgRkcoIiVkIikgIiUtMzhzIiBOQyAvKiIgd3NpIyUiIFBSSWk2NCovICIgYXJndlswXT0lcyB3YWl0X3Jlc29sdmU9JWkgZXJyb3I9JWkiLAogICAgICA5MCwKICAgICAgX19mdW5jX18sCiAgICAgIC8qIG9wYXF1ZS0+c2VyaWFsLCovCiAgICAgIEpTX1RvQ1N0cmluZyhjdHgsIGFyZ3ZbMF0pLAogICAgICBzZXNzaW9uLT53YWl0X3Jlc29sdmUsCiAgICAgIEpTX0lzRXJyb3IoY3R4LCBhcmd2WzBdKSk7CgogIGlmKEpTX0lzT2JqZWN0KGFyZ3ZbMF0pKSB7CiAgICBKU1ZhbHVlIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBhcmd2WzBdLCAidmFsdWUiKTsKICAgIEpTVmFsdWUgZG9uZV9wcm9wID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBhcmd2WzBdLCAiZG9uZSIpOwogICAgQk9PTCBkb25lID0gSlNfVG9Cb29sKGN0eCwgZG9uZV9wcm9wKTsKICAgIEpTQnVmZmVyIG91dCA9IGpzX2J1ZmZlcl9uZXcoY3R4LCB2YWx1ZSk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCBkb25lX3Byb3ApOwoKICAgIExPRygiU0VSVkVSLUhUVFAoMikiLCBGRygiJWQiKSAiJS0zOHMiIE5DIC8qIiB3c2kjJSIgUFJJaTY0Ki8gIiBkb25lPSVpIG91dCA9IHsgLmRhdGEgPSclLipzJywgLnNpemUgPSAlenUgfSIsIDYzLCBfX2Z1bmNfXywgLypvcGFxdWUtPnNlcmlhbCwqLyBkb25lLCAoaW50KW91dC5zaXplLCBvdXQuZGF0YSwgb3V0LnNpemUpOwoKICAgIGlmKG91dC5kYXRhKSB7CiAgICAgIHF1ZXVlX3dyaXRlKCZzZXNzaW9uLT5zZW5kcSwgb3V0LmRhdGEsIG91dC5zaXplLCBjdHgpOwoKICAgICAgbHdzX2NhbGxiYWNrX29uX3dyaXRhYmxlKGNsb3N1cmUtPndzaSk7CiAgICB9CgogICAganNfYnVmZmVyX2ZyZWUoJm91dCwgY3R4KTsKCiAgICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CgogICAgaWYoZG9uZSkgewogICAgICBxdWV1ZV9jbG9zZSgmc2Vzc2lvbi0+c2VuZHEpOwogICAgfSAvKiBlbHNlIHsKICAgICAgIGludCByZXQgPSBzZXJ2ZV9nZW5lcmF0b3IoY3R4LCBzZXNzaW9uLCBjbG9zdXJlLT53c2ksICZkb25lKTsKCiAgICAgICBMT0coIlNFUlZFUi1IVFRQKDMpIiwgRkcoIiVkIikgIiUtMzhzIiBOQyAiIGRvbmU9JWkgcmV0PSVpIHdhaXRfcmVzb2x2ZT0laSIsIDkzLCBfX2Z1bmNfXywgIGRvbmUsIHJldCwgc2Vzc2lvbi0+d2FpdF9yZXNvbHZlKTsKCiAgICAgICBhc3NlcnQoc2Vzc2lvbi0+d2FpdF9yZXNvbHZlKTsKICAgICB9Ki8KICB9CgogIHJldHVybiBKU19VTkRFRklORUQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCnNlcnZlX3Byb21pc2UoSlNDb250ZXh0KiBjdHgsIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3Npb24sIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gc2Vzc2lvbl9vcGFxdWUoc2Vzc2lvbik7CiAgSFRUUEFzeW5jUmVzb2x2ZUNsb3N1cmUqIHA7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogICsrc2Vzc2lvbi0+d2FpdF9yZXNvbHZlOwoKICBMT0coIlNFUlZFUi1IVFRQKDIpIiwgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHByb21pc2U9JXMiLCAyNywgX19mdW5jX18sIEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKSk7CgogIGlmKChwID0ganNfbWFsbG9jKGN0eCwgc2l6ZW9mKEhUVFBBc3luY1Jlc29sdmVDbG9zdXJlKSkpKSB7CiAgICAqcCA9IChIVFRQQXN5bmNSZXNvbHZlQ2xvc3VyZSl7MiwgY3R4LCBzZXNzaW9uLCBvcGFxdWUtPnJlc3AgPyByZXNwb25zZV9kdXAob3BhcXVlLT5yZXNwKSA6IDAsIHNlc3Npb25fd3NpKHNlc3Npb24pfTsKICAgIEpTVmFsdWUgcmVzb2x2ZSA9IGpzX2Z1bmN0aW9uX2NjbG9zdXJlKGN0eCwgc2VydmVfcmVzb2x2ZWQsIDEsIDAsIHAsIHNlcnZlX3Jlc29sdmVkX2ZyZWUpOwogICAgSlNWYWx1ZSB0aGVuZWQgPSBqc19wcm9taXNlX3RoZW4oY3R4LCB2YWx1ZSwgcmVzb2x2ZSk7CiAgICBKU1ZhbHVlIHJlamVjdCA9IGpzX2Z1bmN0aW9uX2NjbG9zdXJlKGN0eCwgc2VydmVfcmVqZWN0ZWQsIDEsIDAsIHAsIHNlcnZlX3Jlc29sdmVkX2ZyZWUpOwogICAgSlNWYWx1ZSBjYXRjaGVkID0ganNfcHJvbWlzZV9jYXRjaChjdHgsIHRoZW5lZCwgcmVqZWN0KTsKCiAgICBMT0coIlNFUlZFUi1IVFRQKDMpIiwgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHRoZW5lZD0lcyBjYXRjaGVkPSVzIiwgNTEsIF9fZnVuY19fLCBKU19Ub0NTdHJpbmcoY3R4LCB0aGVuZWQpLCBKU19Ub0NTdHJpbmcoY3R4LCBjYXRjaGVkKSk7CgogICAgSlNfRnJlZVZhbHVlKGN0eCwgcmVzb2x2ZSk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCByZWplY3QpOwogICAgSlNfRnJlZVZhbHVlKGN0eCwgdGhlbmVkKTsKICAgIHJldCA9IGNhdGNoZWQ7CgogIH0gZWxzZSB7CiAgICByZXQgPSBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CiAgfQoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgaW50CnNlcnZlX2dlbmVyYXRvcihKU0NvbnRleHQqIGN0eCwgc3RydWN0IHNlc3Npb25fZGF0YSogc2Vzc2lvbiwgc3RydWN0IGx3cyogd3NpLCBCT09MKiBkb25lX3ApIHsKICBNaW5uZXRSZXNwb25zZSogcmVzcCA9IHNlc3Npb25fcmVzcG9uc2Uoc2Vzc2lvbik7CgogIGlmKCFyZXNwLT5nZW5lcmF0b3IpCiAgICByZXNwb25zZV9nZW5lcmF0b3IocmVzcCwgY3R4KTsKCiAgTE9HKCJTRVJWRVItSFRUUCgxKSIsCiAgICAgIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBjYWxsYmFjaz0lIiBQUkl1MzIgIiBydW49JSIgUFJJdTMyICIgZG9uZT0lcyB3YWl0X3Jlc29sdmU9JWkgY2xvc2VkPSVpIGNvbXBsZXRlPSVpIiwKICAgICAgMTEyLAogICAgICBfX2Z1bmNfXywKICAgICAgc2Vzc2lvbi0+Y2FsbGJhY2tfY291bnQsCiAgICAgICsrc2Vzc2lvbi0+Z2VuZXJhdG9yX3J1biwKICAgICAgKmRvbmVfcCA/ICJUUlVFIiA6ICJGQUxTRSIsCiAgICAgIHNlc3Npb24tPndhaXRfcmVzb2x2ZSwKICAgICAgcXVldWVfY2xvc2VkKCZzZXNzaW9uLT5zZW5kcSksCiAgICAgIHF1ZXVlX2NvbXBsZXRlKCZzZXNzaW9uLT5zZW5kcSkpOwoKICBhc3NlcnQoc2Vzc2lvbi0+d2FpdF9yZXNvbHZlID09IDApOwogIGFzc2VydCghcXVldWVfY29tcGxldGUoJnNlc3Npb24tPnNlbmRxKSk7CgogIGlmKHNlc3Npb24tPndhaXRfcmVzb2x2ZSkKICAgIHJldHVybiAwOwoKICBpZihKU19Jc09iamVjdChzZXNzaW9uLT5nZW5lcmF0b3IpICYmICFxdWV1ZV9jb21wbGV0ZSgmc2Vzc2lvbi0+c2VuZHEpKSB7CiAgICBzZXNzaW9uLT5uZXh0ID0gSlNfVU5ERUZJTkVEOwoKICAgIHdoaWxlKCEqZG9uZV9wICYmICFzZXNzaW9uLT53YWl0X3Jlc29sdmUpIHsKICAgICAgSlNWYWx1ZSByZXQgPSBqc19pdGVyYXRvcl9uZXh0KGN0eCwgc2Vzc2lvbi0+Z2VuZXJhdG9yLCAmc2Vzc2lvbi0+bmV4dCwgZG9uZV9wLCAwLCAwKTsKCiAgICAgIExPRygiU0VSVkVSLUhUVFAoMikiLAogICAgICAgICAgRkcoIiVkIikgIiUtMzhzIiBOQyAiIGk9JSIgUFJJdTMyICIgZG9uZT0lcyB3YWl0X3Jlc29sdmU9JWkgcmV0PSVzIiwKICAgICAgICAgIDE5MCwKICAgICAgICAgIF9fZnVuY19fLAogICAgICAgICAgcmVzcC0+Z2VuZXJhdG9yLT5jaHVua3NfcmVhZCwKICAgICAgICAgICpkb25lX3AgPyAiVFJVRSIgOiAiRkFMU0UiLAogICAgICAgICAgc2Vzc2lvbi0+d2FpdF9yZXNvbHZlLAogICAgICAgICAgSlNfVG9DU3RyaW5nKGN0eCwgcmV0KSk7CgogICAgICBpZihqc19pc19wcm9taXNlKGN0eCwgcmV0KSkgewogICAgICAgIEpTVmFsdWUgcHJvbWlzZSA9IHNlcnZlX3Byb21pc2UoY3R4LCBzZXNzaW9uLCByZXQpOwogICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHByb21pc2UpOwogICAgICB9IGVsc2UgaWYoSlNfSXNFeGNlcHRpb24ocmV0KSkgewogICAgICAgIEpTVmFsdWUgZXhjZXB0aW9uID0gSlNfR2V0RXhjZXB0aW9uKGN0eCk7CiAgICAgICAganNfZXJyb3JfcHJpbnQoY3R4LCBleGNlcHRpb24pOwogICAgICAgICpkb25lX3AgPSBUUlVFOwogICAgICB9IGVsc2UgewogICAgICAgIEpTQnVmZmVyIG91dCA9IEpTX0JVRkZFUl9ERUZBVUxUKCk7CiAgICAgICAgaWYoanNfYnVmZmVyX2Zyb20oY3R4LCAmb3V0LCByZXQpKSB7CiAgICAgICAgICBMT0coIlNFUlZFUi1IVFRQKDQpIiwKICAgICAgICAgICAgICBGRygiJWQiKSAiJS0zOHMiIE5DICIgb3V0PXsgLmRhdGEgPSAnJS4qcycsIC5zaXplID0gJXp1IH0iLAogICAgICAgICAgICAgIDgyLAogICAgICAgICAgICAgIF9fZnVuY19fLAogICAgICAgICAgICAgIChpbnQpKG91dC5zaXplID4gMjU1ID8gMjU1IDogb3V0LnNpemUpLAogICAgICAgICAgICAgIG91dC5zaXplID4gMjU1ID8gJm91dC5kYXRhW291dC5zaXplIC0gMjU1XSA6IG91dC5kYXRhLAogICAgICAgICAgICAgIG91dC5zaXplKTsKICAgICAgICAgIHF1ZXVlX3dyaXRlKCZzZXNzaW9uLT5zZW5kcSwgb3V0LmRhdGEsIG91dC5zaXplLCBjdHgpOwogICAgICAgIH0KICAgICAgICBqc19idWZmZXJfZnJlZSgmb3V0LCBjdHgpOwogICAgICB9CiAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHJldCk7CiAgICAgIGlmKCpkb25lX3ApCiAgICAgICAgcXVldWVfY2xvc2UoJnNlc3Npb24tPnNlbmRxKTsKCiAgICAgIGJyZWFrOyAvKiBYWFg6IGdlbmVyYXRlIG11bHRpcGxlPyAqLwogICAgfQogIH0gZWxzZSB7CiAgICAqZG9uZV9wID0gVFJVRTsKICB9CgogIExPRygiU0VSVkVSLUhUVFAoMykiLCBGRygiJWQiKSAiJS0zOHMiIE5DICIgd2FpdF9yZXNvbHZlPSVkIHNlbmRxPSV6dSBkb25lPSVzIiwgNzAsIF9fZnVuY19fLCBzZXNzaW9uLT53YWl0X3Jlc29sdmUsIHNlc3Npb24tPnNlbmRxLnNpemUsICpkb25lX3AgPyAiVFJVRSIgOiAiRkFMU0UiKTsKCiAgaWYocXVldWVfY29tcGxldGUoJnNlc3Npb24tPnNlbmRxKSB8fCBxdWV1ZV9zaXplKCZzZXNzaW9uLT5zZW5kcSkpCiAgICBsd3NfY2FsbGJhY2tfb25fd3JpdGFibGUod3NpKTsKCiAgcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbnQKc2VydmVfY2FsbGJhY2soSlNDYWxsYmFjayogY2IsIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3Npb24sIHN0cnVjdCBsd3MqIHdzaSkgewogIGludCByZXQgPSBzZXNzaW9uX2NhbGxiYWNrKHNlc3Npb24sIGNiLCB3c2lfY29udGV4dCh3c2kpKTsKCiAgTE9HKCJTRVJWRVItSFRUUCg1KSIsIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBpdGVyYXRvcj0lZCBhc3luYz0lZCIsIDcwLCBfX2Z1bmNfXywganNfaXNfaXRlcmF0b3IoY2ItPmN0eCwgc2Vzc2lvbi0+Z2VuZXJhdG9yKSwganNfaXNfYXN5bmNfZ2VuZXJhdG9yKGNiLT5jdHgsIHNlc3Npb24tPmdlbmVyYXRvcikpOwoKICBpZihqc19pc19pdGVyYXRvcihjYi0+Y3R4LCBzZXNzaW9uLT5nZW5lcmF0b3IpKSB7CiAgICBpZihqc19pc19hc3luY19nZW5lcmF0b3IoY2ItPmN0eCwgc2Vzc2lvbi0+Z2VuZXJhdG9yKSkgewogICAgICBCT09MIGRvbmUgPSBGQUxTRTsKICAgICAgcmV0ID0gc2VydmVfZ2VuZXJhdG9yKGNiLT5jdHgsIHNlc3Npb24sIHdzaSwgJmRvbmUpOwogICAgfSBlbHNlIHsKICAgICAgbHdzX2NhbGxiYWNrX29uX3dyaXRhYmxlKHdzaSk7CiAgICB9CiAgfQoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgQk9PTApoYXNfdHJhbnNmZXJfZW5jb2RpbmcoTWlubmV0UmVxdWVzdCogcmVxLCBjb25zdCBjaGFyKiBlbmMpIHsKICBjb25zdCBjaGFyKiBhY2NlcHQ7CiAgc2l6ZV90IGxlbiwgZW5jbGVuID0gc3RybGVuKGVuYyk7CgogIGlmKChhY2NlcHQgPSBoZWFkZXJzX2dldGxlbigmcmVxLT5oZWFkZXJzLCAmbGVuLCAiYWNjZXB0LWVuY29kaW5nIikpKSB7CiAgICBzaXplX3QgdG9rbGVuLCBwb3M7CgogICAgZm9yKHBvcyA9IDA7IHBvcyA8IGxlbjsgKHBvcyArPSB0b2tsZW4sIHBvcyArPSBzY2FuX2NoYXJzZXRuc2tpcCgmYWNjZXB0W3Bvc10sICIsICIsIGxlbiAtIHBvcykpKSB7CiAgICAgIHRva2xlbiA9IHNjYW5fbm9uY2hhcnNldG5za2lwKCZhY2NlcHRbcG9zXSwgIiwgIiwgbGVuIC0gcG9zKTsKCiAgICAgIGlmKHRva2xlbiA9PSBlbmNsZW4gJiYgIXN0cm5jbXAoJmFjY2VwdFtwb3NdLCBlbmMsIHRva2xlbikpCiAgICAgICAgcmV0dXJuIFRSVUU7CiAgICB9CiAgfQoKICByZXR1cm4gRkFMU0U7Cn0KCnN0YXRpYyBpbnQKc2VydmVfcmVzcG9uc2Uoc3RydWN0IGx3cyogd3NpLCBCeXRlQnVmZmVyKiBidWYsIE1pbm5ldFJlc3BvbnNlKiByZXNwLCBKU0NvbnRleHQqIGN0eCwgc3RydWN0IHNlc3Npb25fZGF0YSogc2Vzc2lvbikgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlID0gbHdzX29wYXF1ZSh3c2ksIGN0eCk7CiAgbHdzX2ZpbGVwb3NfdCBjb250ZW50X2xlbiA9IExXU19JTExFR0FMX0hUVFBfQ09OVEVOVF9MRU47CgogIGlmKHNlc3Npb24tPnJlc3BvbnNlX3NlbnQpCiAgICByZXR1cm4gMDsKCiAgaWYoIXJlc3AtPmdlbmVyYXRvcikKICAgIHJlc3BvbnNlX2dlbmVyYXRvcihyZXNwLCBjdHgpOwoKICBMT0coIlNFUlZFUi1IVFRQIiwgRkcoIiVkIikgIiUtMzhzIiBOQyAiIHN0YXR1cz0lZCB0eXBlPSVzIGdlbmVyYXRvcj0lZCIsIDE2NSwgX19mdW5jX18sIHJlc3AtPnN0YXR1cywgcmVzcC0+dHlwZSwgcmVzcC0+Z2VuZXJhdG9yICE9IE5VTEwpOwoKICAvKmlmKCF3c2lfaHR0cDIod3NpKSkgewogICAgQk9PTCBkb25lID0gRkFMU0U7CiAgICBzZXJ2ZV9nZW5lcmF0b3IoY3R4LCBzZXNzaW9uLCB3c2ksICZkb25lKTsKICB9Ki8KICBpZihxdWV1ZV9jb21wbGV0ZSgmc2Vzc2lvbi0+c2VuZHEpKQogICAgY29udGVudF9sZW4gPSBxdWV1ZV9ieXRlcygmc2Vzc2lvbi0+c2VuZHEpOwoKICBpZihsd3NfYWRkX2h0dHBfY29tbW9uX2hlYWRlcnMod3NpLCByZXNwLT5zdGF0dXMsIHJlc3AtPnR5cGUsIGNvbnRlbnRfbGVuLCAmYnVmLT53cml0ZSwgYnVmLT5lbmQpKQogICAgcmV0dXJuIDE7CgogIGZvcihjb25zdCB1aW50OF90ICp4ID0gcmVzcC0+aGVhZGVycy5zdGFydCwgKmVuZCA9IHJlc3AtPmhlYWRlcnMud3JpdGU7IHggPCBlbmQ7IHggKz0gaGVhZGVyc19uZXh0KHgsIGVuZCkpIHsKICAgIHNpemVfdCBsZW4sIG47CiAgICBsZW4gPSBoZWFkZXJzX2xlbmd0aCh4LCBlbmQpOwogICAgaWYobGVuID4gKG4gPSBoZWFkZXJzX25hbWVsZW4oeCwgZW5kKSkpIHsKICAgICAgY2hhciogcHJvcCA9IGhlYWRlcnNfbmFtZSh4LCBlbmQsIGN0eCk7CgogICAgICBuID0gaGVhZGVyc192YWx1ZSh4LCBlbmQpOwoKICAgICAgREVCVUcoIkhUVFAgaGVhZGVyICVzID0gJS4qc1xuIiwgcHJvcCwgKGludCkobGVuIC0gbiksICZ4W25dKTsKICAgICAgaWYoKGx3c19hZGRfaHR0cF9oZWFkZXJfYnlfbmFtZSh3c2ksIChjb25zdCB1bnNpZ25lZCBjaGFyKilwcm9wLCAoY29uc3QgdW5zaWduZWQgY2hhciopJnhbbl0sIGxlbiAtIG4sICZidWYtPndyaXRlLCBidWYtPmVuZCkpKQogICAgICAgIEpTX1Rocm93SW50ZXJuYWxFcnJvcihjdHgsICJsd3NfYWRkX2h0dHBfaGVhZGVyX2J5X25hbWUgZmFpbGVkIik7CiAgICAgIGpzX2ZyZWUoY3R4LCAodm9pZCopcHJvcCk7CiAgICB9CiAgfQoKICBpZihoYXNfdHJhbnNmZXJfZW5jb2Rpbmcob3BhcXVlLT5yZXEsICJkZWZsYXRlIikpIHsKICAgIGlmKCEoYnl0ZV9maW5kcyhidWYtPnN0YXJ0LCBibG9ja19TSVpFKGJ1ZiksIHdzaV9odHRwMih3c2kpID8gIlwwMjBjb250ZW50LWVuY29kaW5nIiA6ICJjb250ZW50LWVuY29kaW5nIikgPCBibG9ja19TSVpFKGJ1ZikpKQogICAgICBsd3NfaHR0cF9jb21wcmVzc2lvbl9hcHBseSh3c2ksICJkZWZsYXRlIiwgJmJ1Zi0+d3JpdGUsIGJ1Zi0+ZW5kLCAwKTsKICB9CgogIGludCByZXQgPSBsd3NfZmluYWxpemVfd3JpdGVfaHR0cF9oZWFkZXIod3NpLCBidWYtPnN0YXJ0LCAmYnVmLT53cml0ZSwgYnVmLT5lbmQpOwoKICBERUJVRygiSFRUUCBoZWFkZXJzICclLipzJ1xuIiwgKGludClidWZmZXJfSEVBRChidWYpLCBidWYtPnN0YXJ0KTsKCiAgaWYocmV0KQogICAgcmV0dXJuIDI7CgogIHNlc3Npb24tPnJlc3BvbnNlX3NlbnQgPSBUUlVFOwoKICByZXR1cm4gMDsKfQoKc3RhdGljIHNpemVfdApmaWxlX3NpemUoRklMRSogZnApIHsKICBsb25nIHBvcyA9IGZ0ZWxsKGZwKTsKICBzaXplX3Qgc2l6ZSA9IDA7CgogIGlmKGZzZWVrKGZwLCAwLCBTRUVLX0VORCkgIT0gLTEpIHsKICAgIHNpemUgPSBmdGVsbChmcCk7CiAgICBmc2VlayhmcCwgcG9zLCBTRUVLX1NFVCk7CiAgfQoKICByZXR1cm4gc2l6ZTsKfQoKc3RhdGljIGludApzZXJ2ZV9maWxlKEpTQ29udGV4dCogY3R4LCBzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKiBzZXNzaW9uLCBzdHJ1Y3QgbHdzKiB3c2ksIGNvbnN0IGNoYXIqIHBhdGgsIE1pbm5ldEh0dHBNb3VudCogbW91bnQpIHsKICBNaW5uZXRSZXNwb25zZSogcmVzcCA9IG9wYXF1ZV9mcm9td3NpKHdzaSktPnJlc3A7CiAgRklMRSogZnA7CiAgY29uc3QgY2hhciogbWltZSA9IGx3c19nZXRfbWltZXR5cGUocGF0aCwgJm1vdW50LT5sd3MpOwogIC8vIEJPT0wgY29tcHJlc3NlZCA9IGhhc190cmFuc2Zlcl9lbmNvZGluZyhyZXEsICJnemlwIik7CgogIERFQlVHKCJzZXJ2ZV9maWxlIHBhdGg9JXMgbW91bnQ9JXNcbiIsIHBhdGgsIG1vdW50LT5tbnQpOwoKICBpZihwYXRoWzBdID09ICdcMCcpCiAgICBwYXRoID0gbW91bnQtPmRlZjsKCiAgcmVzcG9uc2VfZ2VuZXJhdG9yKHJlc3AsIGN0eCk7CgogIGlmKChmcCA9IGZvcGVuKHBhdGgsICJyYiIpKSkgewogICAgc2l6ZV90IG4gPSBmaWxlX3NpemUoZnApOwogICAgQnl0ZUJsb2NrIGJsazsKCiAgICBibG9ja19hbGxvYygmYmxrLCBuKTsKICAgIGlmKGZyZWFkKGJsay5zdGFydCwgbiwgMSwgZnApID09IDEpIHsKICAgICAgcXVldWVfcHV0KCZzZXNzaW9uLT5zZW5kcSwgYmxrLCBjdHgpOwogICAgICBxdWV1ZV9jbG9zZSgmc2Vzc2lvbi0+c2VuZHEpOwogICAgfSBlbHNlIHsKICAgICAgYmxvY2tfZnJlZSgmYmxrKTsKICAgIH0KCiAgICBpZihtaW1lKSB7CiAgICAgIGlmKHJlc3AtPnR5cGUpCiAgICAgICAganNfZnJlZShjdHgsIHJlc3AtPnR5cGUpOwoKICAgICAgcmVzcC0+dHlwZSA9IGpzX3N0cmR1cChjdHgsIG1pbWUpOwogICAgfQoKICAgIGZjbG9zZShmcCk7CgogIH0gZWxzZSB7CiAgICBjb25zdCBjaGFyKiBib2R5ID0gIjxodG1sPlxuICA8aGVhZD5cbiAgICA8dGl0bGU+NDA0IE5vdCBGb3VuZDwvdGl0bGU+XG4gICAgPG1ldGEgY2hhcnNldD11dGYtOCBodHRwLWVxdWl2PVwiQ29udGVudC1MYW5ndWFnZVwiIGNvbnRlbnQ9XCJlblwiLz5cbiAgPC9oZWFkPlxuICA8Ym9keT5cbiAgICA8aDE+NDA0IE5vdCAiCiAgICAgICAgICAgICAgICAgICAgICAgIkZvdW5kPC9oMT5cbiAgPC9ib2R5PlxuPC9odG1sPlxuIjsKICAgIHJlc3AtPnN0YXR1cyA9IDQwNDsKCiAgICAvLyByZXNwb25zZV93cml0ZShyZXNwLCBib2R5LCBzdHJsZW4oYm9keSksIGN0eCk7CiAgICBxdWV1ZV93cml0ZSgmc2Vzc2lvbi0+c2VuZHEsIGJvZHksIHN0cmxlbihib2R5KSwgY3R4KTsKICAgIHF1ZXVlX2Nsb3NlKCZzZXNzaW9uLT5zZW5kcSk7CiAgfQoKICBsd3NfY2FsbGJhY2tfb25fd3JpdGFibGUod3NpKTsKCiAgbHdzbF91c2VyKCJzZXJ2ZV9maWxlIHBhdGg9JXMgbW91bnQ9JS4qcyBnZW49JWQiLCBwYXRoLCBtb3VudC0+bHdzLm1vdW50cG9pbnRfbGVuLCBtb3VudC0+bHdzLm1vdW50cG9pbnQsIHJlc3AtPmdlbmVyYXRvciAhPSBOVUxMKTsKCiAgcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbnQKaHR0cF9zZXJ2ZXJfd3JpdGFibGUoc3RydWN0IHNlc3Npb25fZGF0YSogc2Vzc2lvbiwgc3RydWN0IGx3cyogd3NpLCBCT09MIGRvbmUpIHsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcCA9IHNlc3Npb25fcmVzcG9uc2Uoc2Vzc2lvbik7CiAgZW51bSBsd3Nfd3JpdGVfcHJvdG9jb2wgbiwgd3AgPSAtMTsKICBzaXplX3QgcmVtYWluID0gMDsKICBzc2l6ZV90IHJldCA9IDA7CgogIExPRygiU0VSVkVSLUhUVFAoMSkiLCBGRygiJWQiKSAiJS0zOHMiIE5DICIgc3RhdHVzPSVkIHR5cGU9JXMgZ2VuZXJhdG9yPSVkIGRvbmU9JWQiLCAyMDcsIF9fZnVuY19fICsgMTIsIHJlc3AtPnN0YXR1cywgcmVzcC0+dHlwZSwgcmVzcC0+Z2VuZXJhdG9yICE9IE5VTEwsIGRvbmUpOwoKICBuID0gKGRvbmUgfHwgcmVzcC0+Z2VuZXJhdG9yLT5jbG9zaW5nKSA/IExXU19XUklURV9IVFRQX0ZJTkFMIDogTFdTX1dSSVRFX0hUVFA7CgogIGlmKHF1ZXVlX3NpemUoJnNlc3Npb24tPnNlbmRxKSkgewogICAgQnl0ZUJsb2NrIGJ1ZjsKICAgIHNpemVfdCBwb3MgPSAwOwoKICAgIGJ1ZiA9IHF1ZXVlX25leHQoJnNlc3Npb24tPnNlbmRxLCAmZG9uZSk7CgogICAgd2hpbGUoKHJlbWFpbiA9IGJsb2NrX1NJWkUoJmJ1ZikgLSBwb3MpID4gMCkgewoKICAgICAgdWludDhfdCogeCA9IGJsb2NrX0JFR0lOKCZidWYpICsgcG9zOwogICAgICBzaXplX3QgbCA9IHdzaV9odHRwMih3c2kpID8gKHJlbWFpbiA+IDEwMjQgPyAxMDI0IDogcmVtYWluKSA6IHJlbWFpbjsKCiAgICAgIGlmKGwgPiAwKSB7CiAgICAgICAgd3AgPSBxdWV1ZV9zaXplKCZzZXNzaW9uLT5zZW5kcSkgPT0gMCAmJiByZW1haW4gPT0gbCA/IExXU19XUklURV9IVFRQX0ZJTkFMIDogbjsKICAgICAgICByZXQgPSBsd3Nfd3JpdGUod3NpLCB4LCBsLCB3cCk7CiAgICAgICAgTE9HKCJTRVJWRVItSFRUUCgyKSIsIEZHKCIlZCIpICIlLTM4cyIgTkMgIiBsZW49JXp1IGZpbmFsPSVkIHJldD0lemQgZGF0YT0nJS4qcyciLCAxMTIsIF9fZnVuY19fICsgMTIsIGwsIHdwID09IExXU19XUklURV9IVFRQX0ZJTkFMLCByZXQsIChpbnQpKGwgPiAzMiA/IDMyIDogbCksIHgpOwoKICAgICAgICByZW1haW4gLT0gbDsKICAgICAgICBwb3MgKz0gbDsKICAgICAgfQogICAgfQoKICAgIGJsb2NrX2ZyZWUoJmJ1Zik7CiAgfQogIExPRygiU0VSVkVSLUhUVFAoMykiLCBGRygiJWQiKSAiJS0zOHMiIE5DICIgZG9uZT0laSByZW1haW49JXp1IGNsb3NlZD0lZCIsIDM5LCBfX2Z1bmNfXyArIDEyLCBkb25lLCByZW1haW4sIHF1ZXVlX2Nsb3NlZCgmc2Vzc2lvbi0+c2VuZHEpKTsKCiAgaWYoZG9uZSB8fCBxdWV1ZV9jbG9zZWQoJnNlc3Npb24tPnNlbmRxKSkKICAgIHJldHVybiAxOwoKICBpZighZG9uZSkKICAgIGx3c19jYWxsYmFja19vbl93cml0YWJsZSh3c2kpOwoKICByZXR1cm4gMDsKfQoKaW50Cmh0dHBfc2VydmVyX2NhbGxiYWNrKHN0cnVjdCBsd3MqIHdzaSwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucyByZWFzb24sIHZvaWQqIHVzZXIsIHZvaWQqIGluLCBzaXplX3QgbGVuKSB7CiAgaW50IHJldCA9IDA7CiAgdWludDhfdCBidWZbTFdTX1BSRSArIExXU19SRUNPTU1FTkRFRF9NSU5fSEVBREVSX1NQQUNFXTsKICBNaW5uZXRTZXJ2ZXIqIHNlcnZlciA9IGx3c19jb250ZXh0X3VzZXIobHdzX2dldF9jb250ZXh0KHdzaSkpOwogIHN0cnVjdCBzZXNzaW9uX2RhdGEqIHNlc3Npb24gPSB1c2VyOwogIEpTQ29udGV4dCogY3R4ID0gc2VydmVyID8gc2VydmVyLT5jb250ZXh0LmpzIDogMDsKICBzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSA9IGx3c19nZXRfb3BhcXVlX3VzZXJfZGF0YSh3c2kpOwoKICBpZihsd3NfcmVhc29uX3BvbGwocmVhc29uKSkgewogICAgYXNzZXJ0KHNlcnZlcik7CiAgICByZXR1cm4gd3NpX2hhbmRsZV9wb2xsKHdzaSwgcmVhc29uLCAmc2VydmVyLT5jYi5mZCwgaW4pOwogIH0KCiAgaWYoIW9wYXF1ZSAmJiBjdHgpCiAgICBvcGFxdWUgPSBsd3Nfb3BhcXVlKHdzaSwgY3R4KTsKCiAgYXNzZXJ0KG9wYXF1ZSk7CgogIGlmKHNlc3Npb24pIHsKICAgIGlmKG9wYXF1ZSkKICAgICAgb3BhcXVlLT5zZXNzID0gc2Vzc2lvbjsKICAgICsrc2Vzc2lvbi0+Y2FsbGJhY2tfY291bnQ7CiAgfQoKICBpZihyZWFzb24gIT0gTFdTX0NBTExCQUNLX0hUVFBfV1JJVEVBQkxFKQogICAgTE9HQ0IoIkhUVFAoMSkiLAogICAgICAgICAgIiVzJXNmZD0lZCBsZW49JWQgaW49JyUuKnMnIHVybD0lcyIsCiAgICAgICAgICB3c2lfaHR0cDIod3NpKSA/ICJoMiwgIiA6ICJodHRwLzEuMSwgIiwKICAgICAgICAgIHdzaV90bHMod3NpKSA/ICJUTFMsICIgOiAicGxhaW4sICIsCiAgICAgICAgICBsd3NfZ2V0X3NvY2tldF9mZChsd3NfZ2V0X25ldHdvcmtfd3NpKHdzaSkpLAogICAgICAgICAgKGludClsZW4sCiAgICAgICAgICAoaW50KU1JTigzMiwgbGVuKSwKICAgICAgICAgIChjaGFyKilpbiwKICAgICAgICAgIG9wYXF1ZSAmJiBvcGFxdWUtPnJlcSA/IHVybF9zdHJpbmcoJm9wYXF1ZS0+cmVxLT51cmwpIDogMCk7CgogIGlmKG9wYXF1ZS0+dXBzdHJlYW0pCiAgICBpZihyZWFzb24gIT0gTFdTX0NBTExCQUNLX0ZJTFRFUl9IVFRQX0NPTk5FQ1RJT04pCiAgICAgIHJldHVybiBsd3NfY2FsbGJhY2tfaHR0cF9kdW1teSh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX0VTVEFCTElTSEVEOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfQ0hFQ0tfQUNDRVNTX1JJR0hUUzoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQ6CiAgICBjYXNlIExXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfU0VSVkVSX1ZFUklGWV9DRVJUUzoKICAgIGNhc2UgTFdTX0NBTExCQUNLX09QRU5TU0xfTE9BRF9FWFRSQV9DTElFTlRfVkVSSUZZX0NFUlRTOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUFJPVE9DT0xfREVTVFJPWToKICAgIGNhc2UgTFdTX0NBTExCQUNLX0hUVFBfQ09ORklSTV9VUEdSQURFOiBicmVhazsKCiAgICBjYXNlIExXU19DQUxMQkFDS19GSUxURVJfSFRUUF9DT05ORUNUSU9OOiB7CiAgICAgIGlmKChzZXNzaW9uLT5tb3VudCA9IG1vdW50X2ZpbmQoKE1pbm5ldEh0dHBNb3VudCopc2VydmVyLT5jb250ZXh0LmluZm8ubW91bnRzLCBpbiwgbGVuKSkpCiAgICAgICAgaWYobW91bnRfaXNfcHJveHkoc2Vzc2lvbi0+bW91bnQpKQogICAgICAgICAgbHdzX2hkcl9zaW1wbGVfY3JlYXRlKHdzaSwgd3NpX2h0dHAyKHdzaSkgPyBXU0lfVE9LRU5fSFRUUF9DT0xPTl9BVVRIT1JJVFkgOiBXU0lfVE9LRU5fSE9TVCwgIiIpOwoKICAgICAgaWYob3BhcXVlLT51cHN0cmVhbSkKICAgICAgICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwoKICAgICAgaWYoY3R4ICYmIG9wYXF1ZS0+d3MpCiAgICAgICAgc2Vzc2lvbi0+d3Nfb2JqID0gbWlubmV0X3dzX3dyYXAoY3R4LCBvcGFxdWUtPndzKTsKICAgICAgaWYoIW9wYXF1ZS0+cmVxKQogICAgICAgIG9wYXF1ZS0+cmVxID0gcmVxdWVzdF9mcm9td3NpKHdzaSwgY3R4KTsKICAgICAgaWYoaW4pIHsKICAgICAgICAvKiBvcGFxdWUtPnVyaSA9IGluOwogICAgICAgICBvcGFxdWUtPnVyaV9sZW4gPSBsZW4gPyBsZW4gOiBzdHJsZW4oaW4pOyovCiAgICAgICAgdXJsX3NldF9wYXRoX2xlbigmb3BhcXVlLT5yZXEtPnVybCwgaW4sIGxlbiwgY3R4KTsKICAgICAgfQogICAgICB1cmxfc2V0X3Byb3RvY29sKCZvcGFxdWUtPnJlcS0+dXJsLCB3c2lfdGxzKHdzaSkgPyAiaHR0cHMiIDogImh0dHAiKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9CSU5EX1BST1RPQ09MOiB7CiAgICAgIG9wYXF1ZS0+c3RhdHVzID0gT1BFTjsKICAgICAgaWYob3BhcXVlLT5yZXEpCiAgICAgICAgdXJsX3NldF9wcm90b2NvbCgmb3BhcXVlLT5yZXEtPnVybCwgd3NpX3Rscyh3c2kpID8gImh0dHBzIiA6ICJodHRwIik7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0FERF9IRUFERVJTOiB7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0hUVFBfQk9EWTogewogICAgICAvLyBMT0dDQigiSFRUUCIsICIlc2xlbjogJXp1IHBhcnNlcjogJXAiLCB3c2lfaHR0cDIod3NpKSA/ICJoMiwgIiA6ICIiLCBsZW4sIG9wYXF1ZS0+Zm9ybV9wYXJzZXIpOwoKICAgICAgTWlubmV0UmVxdWVzdCogcmVxID0gbWlubmV0X3JlcXVlc3RfZGF0YTIoY3R4LCBzZXNzaW9uLT5yZXFfb2JqKTsKICAgICAgc2Vzc2lvbi0+aW5fYm9keSA9IFRSVUU7CiAgICAgIGlmKGxlbikgewogICAgICAgIGlmKG9wYXF1ZS0+Zm9ybV9wYXJzZXIpIHsKICAgICAgICAgIGZvcm1fcGFyc2VyX3Byb2Nlc3Mob3BhcXVlLT5mb3JtX3BhcnNlciwgaW4sIGxlbik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGlmKCFyZXEtPmJvZHkpIHsKICAgICAgICAgICAgcmVxLT5ib2R5ID0gZ2VuZXJhdG9yX25ldyhjdHgpOwogICAgICAgICAgICByZXEtPmJvZHktPmJsb2NrX2ZuID0gJmJsb2NrX3Rvc3RyaW5nOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYocmVxLT5ib2R5KSB7CiAgICAgICAgICBnZW5lcmF0b3Jfd3JpdGUocmVxLT5ib2R5LCBpbiwgbGVuLCBKU19VTkRFRklORUQpOwogICAgICAgIH0KICAgICAgfQogICAgICBpZihzZXJ2ZXItPmNiLnJlYWQuY3R4KSB7CiAgICAgICAgSlNWYWx1ZSBhcmdzW10gPSB7CiAgICAgICAgICAgIEpTX05ld1N0cmluZ0xlbihzZXJ2ZXItPmNiLnJlYWQuY3R4LCBpbiwgbGVuKSwKICAgICAgICB9OwogICAgICAgIEpTVmFsdWUgcmV0ID0gc2VydmVyX2V4Y2VwdGlvbihzZXJ2ZXIsIGNhbGxiYWNrX2VtaXRfdGhpcygmc2VydmVyLT5jYi5yZWFkLCBzZXNzaW9uLT5yZXFfb2JqLCBjb3VudG9mKGFyZ3MpLCBhcmdzKSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKHNlcnZlci0+Y2IucmVhZC5jdHgsIHJldCk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9CT0RZX0NPTVBMRVRJT046IHsKICAgICAgTWlubmV0Rm9ybVBhcnNlciogZnA7CiAgICAgIEJ5dGVCdWZmZXIgYiA9IEJVRkZFUihidWYpOwogICAgICBKU0NhbGxiYWNrKiBjYjsKICAgICAgTWlubmV0UmVxdWVzdCogcmVxID0gb3BhcXVlLT5yZXE7CgogICAgICBzZXNzaW9uLT5pbl9ib2R5ID0gRkFMU0U7CgogICAgICBMT0dDQigiSFRUUCgyKSIsICIlc2xlbjogJXp1Iiwgd3NpX2h0dHAyKHdzaSkgPyAiaDIsICIgOiAiIiwgbGVuKTsKCiAgICAgIGlmKChmcCA9IG9wYXF1ZS0+Zm9ybV9wYXJzZXIpKSB7CiAgICAgICAgbHdzX3NwYV9maW5hbGl6ZShmcC0+c3BhKTsKICAgICAgICBpZihmcC0+Y2IuZmluYWxpemUuY3R4KSB7CiAgICAgICAgICBKU1ZhbHVlIHJldCA9IHNlcnZlcl9leGNlcHRpb24oc2VydmVyLCBjYWxsYmFja19lbWl0KCZmcC0+Y2IuZmluYWxpemUsIDAsIDApKTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShmcC0+Y2IuZmluYWxpemUuY3R4LCByZXQpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgY2IgPSBzZXNzaW9uLT5tb3VudCA/ICZzZXNzaW9uLT5tb3VudC0+Y2FsbGJhY2sgOiAwOwoKICAgICAgaWYoY2IgJiYgY2ItPmN0eCkgewogICAgICAgIGFzc2VydCghSlNfSXNPYmplY3Qoc2Vzc2lvbi0+Z2VuZXJhdG9yKSk7CiAgICAgICAgcmV0ID0gc2VydmVfY2FsbGJhY2soY2IsIHNlc3Npb24sIHdzaSk7CiAgICAgICAgLyogICAgSlNWYWx1ZSByZXQgPSBzZXJ2ZXJfZXhjZXB0aW9uKHNlcnZlciwgY2FsbGJhY2tfZW1pdF90aGlzKGNiLCBzZXNzaW9uLT53c19vYmosIDIsIHNlc3Npb24tPmFyZ3MpKTsKCiAgICAgICAgICAgIGFzc2VydChqc19pc19pdGVyYXRvcihjdHgsIHJldCkpOwogICAgICAgICAgICBzZXNzaW9uLT5nZW5lcmF0b3IgPSByZXQ7Ki8KICAgICAgfQoKICAgICAgcmVxID0gbWlubmV0X3JlcXVlc3RfZGF0YTIoY3R4LCBzZXNzaW9uLT5yZXFfb2JqKTsKICAgICAgaWYocmVxLT5ib2R5KSB7CiAgICAgICAgREVCVUcoIlBPU1QgYm9keTogJXBcbiIsIHJlcS0+Ym9keSk7CiAgICAgICAgZ2VuZXJhdG9yX2Nsb3NlKHJlcS0+Ym9keSwgSlNfVU5ERUZJTkVEKTsKICAgICAgfQoKICAgICAgaWYoc2VydmVyLT5jYi5wb3N0LmN0eCkgewogICAgICAgIEpTVmFsdWUgYXJnc1tdID0gewogICAgICAgICAgICBtaW5uZXRfZ2VuZXJhdG9yX2l0ZXJhdG9yKHNlcnZlci0+Y2IucG9zdC5jdHgsIG9wYXF1ZS0+cmVxLT5ib2R5KSwKICAgICAgICB9OwogICAgICAgIEpTVmFsdWUgcmV0ID0gc2VydmVyX2V4Y2VwdGlvbihzZXJ2ZXIsIGNhbGxiYWNrX2VtaXRfdGhpcygmc2VydmVyLT5jYi5wb3N0LCBzZXNzaW9uLT5yZXFfb2JqLCBjb3VudG9mKGFyZ3MpLCBhcmdzKSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKHNlcnZlci0+Y2IucG9zdC5jdHgsIHJldCk7CgogICAgICB9IGVsc2UgewogICAgICB9CiAgICAgIGlmKHNlcnZlX3Jlc3BvbnNlKHdzaSwgJmIsIG9wYXF1ZS0+cmVzcCwgY3R4LCBzZXNzaW9uKSkgewogICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHNlc3Npb24tPndzX29iaik7CiAgICAgICAgc2Vzc2lvbi0+d3Nfb2JqID0gSlNfTlVMTDsKICAgICAgICAvLyByZXR1cm4gMTsKICAgICAgfQoKICAgICAgbHdzX2NhbGxiYWNrX29uX3dyaXRhYmxlKHdzaSk7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0hUVFA6IHsKICAgICAgTWlubmV0UmVxdWVzdCogcmVxID0gb3BhcXVlLT5yZXEgPyBvcGFxdWUtPnJlcSA6IChvcGFxdWUtPnJlcSA9IHJlcXVlc3RfZnJvbXdzaSh3c2ksIGN0eCkpOwogICAgICBKU1ZhbHVlKiBhcmdzID0gJnNlc3Npb24tPndzX29iajsKICAgICAgY2hhciogcGF0aCA9IGluOwogICAgICBzaXplX3QgbW91bnRwb2ludF9sZW4gPSAwLCBwYXRobGVuID0gMDsKICAgICAgTWlubmV0SHR0cE1vdW50ICptb3VudHMsICptb3VudDsKICAgICAgSlNDYWxsYmFjayogY2I7CgogICAgICBhc3NlcnQocmVxKTsKICAgICAgYXNzZXJ0KHJlcS0+dXJsLnBhdGgpOwoKICAgICAgcGF0aGxlbiA9IHJlcS0+dXJsLnBhdGggPyBzdHJsZW4ocmVxLT51cmwucGF0aCkgOiAwOwoKICAgICAgLyppZihvcGFxdWUtPnVyaSkKICAgICAgICBtb3VudHBvaW50X2xlbiA9IChjaGFyKilpbiAtIG9wYXF1ZS0+dXJpOwogICAgICBlbHNlICovCiAgICAgIGlmKHJlcS0+dXJsLnBhdGggJiYgaW4gJiYgbGVuIDwgcGF0aGxlbikKICAgICAgICBtb3VudHBvaW50X2xlbiA9IHBhdGhsZW4gLSBsZW47CgogICAgICBMT0dDQigiSFRUUCgyKSIsICJtb3VudHBvaW50PSclLipzJyBwYXRoPSclcyciLCAoaW50KW1vdW50cG9pbnRfbGVuLCByZXEtPnVybC5wYXRoLCBwYXRoKTsKCiAgICAgIGlmKCFvcGFxdWUtPnJlcS0+aGVhZGVycy53cml0ZSkKICAgICAgICBoZWFkZXJzX3RvYnVmZmVyKGN0eCwgJm9wYXF1ZS0+cmVxLT5oZWFkZXJzLCB3c2kpOwoKICAgICAgbW91bnRzID0gKE1pbm5ldEh0dHBNb3VudCopc2VydmVyLT5jb250ZXh0LmluZm8ubW91bnRzOwoKICAgICAgaWYoIXNlc3Npb24tPm1vdW50KQogICAgICAgIGlmKHJlcS0+dXJsLnBhdGgpCiAgICAgICAgICBzZXNzaW9uLT5tb3VudCA9IG1vdW50X2ZpbmQobW91bnRzLCByZXEtPnVybC5wYXRoLCBtb3VudHBvaW50X2xlbik7CiAgICAgIGlmKCFzZXNzaW9uLT5tb3VudCkKICAgICAgICBpZihwYXRoKQogICAgICAgICAgc2Vzc2lvbi0+bW91bnQgPSBtb3VudF9maW5kKG1vdW50cywgcGF0aCwgMCk7CiAgICAgIGlmKHJlcS0+dXJsLnBhdGggJiYgIXNlc3Npb24tPm1vdW50KQogICAgICAgIGlmKCEoc2Vzc2lvbi0+bW91bnQgPSBtb3VudF9maW5kKG1vdW50cywgcmVxLT51cmwucGF0aCwgbW91bnRwb2ludF9sZW4pKSkKICAgICAgICAgIHNlc3Npb24tPm1vdW50ID0gbW91bnRfZmluZChtb3VudHMsIHJlcS0+dXJsLnBhdGgsIDApOwoKICAgICAgaWYoKG1vdW50ID0gc2Vzc2lvbi0+bW91bnQpKSB7CiAgICAgICAgc2l6ZV90IG1sZW4gPSBzdHJsZW4obW91bnQtPm1udCk7CgogICAgICAgIC8vIERFQlVHKCJtb3VudC0+bW50ID0gJyVzJ1xuIiwgbW91bnQtPm1udCk7CiAgICAgICAgLy8gREVCVUcoIm1vdW50LT5tbnQgPSAnJS4qcydcbiIsIChpbnQpbWxlbiwgbW91bnQtPm1udCk7CgogICAgICAgIGFzc2VydChyZXEtPnVybC5wYXRoKTsKICAgICAgICBhc3NlcnQobW91bnQtPm1udCk7CiAgICAgICAgYXNzZXJ0KG1sZW4pOwoKICAgICAgICBpZighc3RyY21wKHJlcS0+dXJsLnBhdGggKyBtbGVuLCBwYXRoKSkgewogICAgICAgICAgYXNzZXJ0KCFzdHJjbXAocmVxLT51cmwucGF0aCArIG1sZW4sIHBhdGgpKTsKCiAgICAgICAgICBMT0dDQigiSFRUUCgyKSIsCiAgICAgICAgICAgICAgICAibW91bnQ6IG1udD0nJXMnLCBvcmc9JyVzJywgcHJvPSclcycsIG9yaWdpbl9wcm90b2NvbD0nJXMnXG4iLAogICAgICAgICAgICAgICAgbW91bnQtPm1udCwKICAgICAgICAgICAgICAgIG1vdW50LT5vcmcsCiAgICAgICAgICAgICAgICBtb3VudC0+cHJvLAogICAgICAgICAgICAgICAgKChjb25zdCBjaGFyKltdKXsKICAgICAgICAgICAgICAgICAgICAiSFRUUCIsCiAgICAgICAgICAgICAgICAgICAgIkhUVFBTIiwKICAgICAgICAgICAgICAgICAgICAiRklMRSIsCiAgICAgICAgICAgICAgICAgICAgIkNHSSIsCiAgICAgICAgICAgICAgICAgICAgIlJFRElSX0hUVFAiLAogICAgICAgICAgICAgICAgICAgICJSRURJUl9IVFRQUyIsCiAgICAgICAgICAgICAgICAgICAgIkNBTExCQUNLIiwKICAgICAgICAgICAgICAgIH0pWyh1aW50cHRyX3QpbW91bnQtPmx3cy5vcmlnaW5fcHJvdG9jb2xdKTsKICAgICAgICB9CgogICAgICAgIHNlc3Npb24tPnJlcV9vYmogPSBtaW5uZXRfcmVxdWVzdF93cmFwKGN0eCwgb3BhcXVlLT5yZXEpOwoKICAgICAgICBpZighSlNfSXNPYmplY3Qoc2Vzc2lvbi0+d3Nfb2JqKSkKICAgICAgICAgIGlmKG9wYXF1ZS0+d3MpCiAgICAgICAgICAgIHNlc3Npb24tPndzX29iaiA9IG1pbm5ldF93c193cmFwKGN0eCwgb3BhcXVlLT53cyk7CgogICAgICAgIGlmKCFKU19Jc09iamVjdChzZXNzaW9uLT5yZXNwX29iaikpCiAgICAgICAgICBzZXNzaW9uLT5yZXNwX29iaiA9IG1pbm5ldF9yZXNwb25zZV9uZXcoY3R4LCByZXEtPnVybCwgMjAwLCAwLCBUUlVFLCAidGV4dC9odG1sIik7CgogICAgICAgIG9wYXF1ZS0+cmVzcCA9IG1pbm5ldF9yZXNwb25zZV9kYXRhMihjdHgsIHNlc3Npb24tPnJlc3Bfb2JqKTsKICAgICAgICBMT0dDQigiSFRUUCgzKSIsICJyZXE9JXAsIGhlYWRlcj0lenUgbW50PSVzIG9yZz0lcyIsIHJlcSwgYnVmZmVyX0hFQUQoJnJlcS0+aGVhZGVycyksIG1vdW50LT5tbnQsIG1vdW50LT5vcmcpOwogICAgICAgIHJlcXVlc3RfZHVwKHJlcSk7CiAgICAgICAgY2IgPSAmbW91bnQtPmNhbGxiYWNrOwogICAgICAgIGlmKG1vdW50ICYmICFtb3VudC0+Y2FsbGJhY2suY3R4KQogICAgICAgICAgY2IgPSAwOwoKICAgICAgICBpZihtb3VudCAmJiAoKG1vdW50LT5sd3Mub3JpZ2luX3Byb3RvY29sID09IExXU01QUk9fQ0FMTEJBQ0sgJiYgKCFjYiB8fCAhY2ItPmN0eCkpIHx8CiAgICAgICAgICAgICAgICAgICAgIChtb3VudC0+bHdzLm9yaWdpbl9wcm90b2NvbCA9PSBMV1NNUFJPX0ZJTEUgfHwgKG1vdW50LT5sd3Mub3JpZ2luX3Byb3RvY29sID09IExXU01QUk9fQ0FMTEJBQ0sgJiYgbW91bnQtPmx3cy5vcmlnaW4pKSkpIHsKICAgICAgICAgIHJldCA9IHNlcnZlX2ZpbGUoY3R4LCBzZXNzaW9uLCB3c2ksIHBhdGgsIG1vdW50KTsKICAgICAgICAgIGlmKHJldCkgewogICAgICAgICAgICBMT0dDQigiSFRUUCg0KSIsICJzZXJ2ZV9maWxlIEZBSUwgJWQiLCByZXQpOwogICAgICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCBzZXNzaW9uLT53c19vYmopOwogICAgICAgICAgICBzZXNzaW9uLT53c19vYmogPSBKU19OVUxMOwogICAgICAgICAgICBsd3NfY2FsbGJhY2tfb25fd3JpdGFibGUod3NpKTsKICAgICAgICAgICAgcmV0ID0gMDsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZihtb3VudCAmJiBtb3VudC0+bHdzLm9yaWdpbl9wcm90b2NvbCA9PSBMV1NNUFJPX0NBTExCQUNLKSB7CiAgICAgICAgICBpZihjYiAmJiBjYi0+Y3R4KSB7CiAgICAgICAgICAgIGlmKHJlcS0+bWV0aG9kID09IE1FVEhPRF9HRVQpIHsKICAgICAgICAgICAgICAvKiAgICByZXNwID0gc2Vzc2lvbl9jYWxsYmFjayhyZXNwLCBzZXNzaW9uLCBjYik7CiAgICAgICAgICAgICAgICAgIEpTVmFsdWUgZ2VuID0gY2FsbGJhY2tfZW1pdF90aGlzKGNiLCBzZXNzaW9uLT53c19vYmosIDIsICZhcmdzWzFdKTsKICAgICAgICAgICAgICAgICAgZ2VuID0gc2VydmVyX2V4Y2VwdGlvbihzZXJ2ZXIsIGdlbik7CgogICAgICAgICAgICAgICAgICBMT0dDQigiSFRUUCg1KSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJnZW49JXMgbmV4dD0lcyBpc19pdGVyYXRvcj0lZCBpc19hc3luY19nZW5lcmF0b3I9JWQiLAogICAgICAgICAgICAgICAgICAgICAgICBKU19Ub0NTdHJpbmcoY3R4LCBnZW4pLAogICAgICAgICAgICAgICAgICAgICAgICBKU19Ub0NTdHJpbmcoY3R4LCBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIGdlbiwgIm5leHQiKSksCiAgICAgICAgICAgICAgICAgICAgICAgIGpzX2lzX2l0ZXJhdG9yKGN0eCwgZ2VuKSwKICAgICAgICAgICAgICAgICAgICAgICAganNfaXNfYXN5bmNfZ2VuZXJhdG9yKGN0eCwgZ2VuKSk7CiAgICAgICAgICAgICAgICAgIGlmKGpzX2lzX2l0ZXJhdG9yKGN0eCwgZ2VuKSkgewogICAgICAgICAgICAgICAgICAgIGFzc2VydChqc19pc19pdGVyYXRvcihjdHgsIGdlbikpOwogICAgICAgICAgICAgICAgICAgIHNlc3Npb24tPmdlbmVyYXRvciA9IGdlbjsKICAgICAgICAgICAgICAgICAgICBzZXNzaW9uLT5uZXh0ID0gSlNfVU5ERUZJTkVEOwoKICAgICAgICAgICAgICAgICAgICBpZihqc19pc19hc3luY19nZW5lcmF0b3IoY3R4LCBnZW4pKSB7CiAgICAgICAgICAgICAgICAgICAgICBCT09MIGRvbmUgPSBGQUxTRTsKICAgICAgICAgICAgICAgICAgICAgIHJldCA9IHNlcnZlX2dlbmVyYXRvcihjdHgsIHNlc3Npb24sICB3c2ksICZkb25lKTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UKICAgICAgICAgICAgICAgICAgICAgIGx3c19jYWxsYmFja19vbl93cml0YWJsZSh3c2kpOwogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIExPR0NCKCJIVFRQKDYpIiwgImdlbj0lcyIsIEpTX1RvQ1N0cmluZyhjdHgsIGdlbikpOwogICAgICAgICAgICAgICAgICB9Ki8KICAgICAgICAgICAgICByZXQgPSBzZXJ2ZV9jYWxsYmFjayhjYiwgc2Vzc2lvbiwgd3NpKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYoc2VydmVyLT5jYi5odHRwLmN0eCkgewogICAgICAgICAgY2IgPSAmc2VydmVyLT5jYi5odHRwOwogICAgICAgICAgSlNWYWx1ZSB2YWwgPSBzZXJ2ZXJfZXhjZXB0aW9uKHNlcnZlciwgY2FsbGJhY2tfZW1pdF90aGlzKGNiLCBzZXNzaW9uLT53c19vYmosIDMsIGFyZ3MpKTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbCk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gcmV0OwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19IVFRQX1dSSVRFQUJMRTogewogICAgICBNaW5uZXRSZXNwb25zZSogcmVzcDsKICAgICAgQk9PTCBkb25lID0gRkFMU0U7CgogICAgICBMT0dDQigiSFRUUCgyKSIsCiAgICAgICAgICAgICIlc21udD0lcyBjbG9zZWQ9JWQgY29tcGxldGU9JWQgc2VuZHE9JXp1IiwKICAgICAgICAgICAgd3NpX2h0dHAyKHdzaSkgPyAiaDIsICIgOiAiIiwKICAgICAgICAgICAgc2Vzc2lvbi0+bW91bnQgPyBzZXNzaW9uLT5tb3VudC0+bW50IDogMCwKICAgICAgICAgICAgcXVldWVfY2xvc2VkKCZzZXNzaW9uLT5zZW5kcSksCiAgICAgICAgICAgIHF1ZXVlX2NvbXBsZXRlKCZzZXNzaW9uLT5zZW5kcSksCiAgICAgICAgICAgIHF1ZXVlX3NpemUoJnNlc3Npb24tPnNlbmRxKSk7CgogICAgICBpZighKHJlc3AgPSBvcGFxdWUtPnJlc3ApKSB7CiAgICAgICAgcmVzcCA9IG9wYXF1ZS0+cmVzcCA9IHJlc3BvbnNlX25ldyhjdHgpOwogICAgICAgIHNlc3Npb24tPnJlc3Bfb2JqID0gbWlubmV0X3Jlc3BvbnNlX3dyYXAoY3R4LCByZXNwKTsKICAgICAgfQoKICAgICAgaWYoIXNlc3Npb24tPnJlc3BvbnNlX3NlbnQpIHsKICAgICAgICBCeXRlQnVmZmVyIGIgPSBCVUZGRVIoYnVmKTsKICAgICAgICBzZXNzaW9uLT5yZXNwb25zZV9zZW50ID0gIXNlcnZlX3Jlc3BvbnNlKHdzaSwgJmIsIG9wYXF1ZS0+cmVzcCwgY3R4LCBzZXNzaW9uKTsKICAgICAgfQoKICAgICAgaWYoIShxdWV1ZV9jbG9zZWQoJnNlc3Npb24tPnNlbmRxKSB8fCBxdWV1ZV9jb21wbGV0ZSgmc2Vzc2lvbi0+c2VuZHEpKSAmJiAhc2Vzc2lvbi0+d2FpdF9yZXNvbHZlKQogICAgICAgIHJldCA9IHNlcnZlX2dlbmVyYXRvcihjdHgsIHNlc3Npb24sIHdzaSwgJmRvbmUpOwoKICAgICAgLy8gaWYocXVldWVfY2xvc2VkKCZzZXNzaW9uLT5zZW5kcSkgfHwgcXVldWVfc2l6ZSgmc2Vzc2lvbi0+c2VuZHEpKQogICAgICBpZihodHRwX3NlcnZlcl93cml0YWJsZShzZXNzaW9uLCB3c2ksICEhcXVldWVfY2xvc2VkKCZzZXNzaW9uLT5zZW5kcSkpKQogICAgICAgIHJldCA9IGh0dHBfc2VydmVyX2NhbGxiYWNrKHdzaSwgTFdTX0NBTExCQUNLX0hUVFBfRklMRV9DT01QTEVUSU9OLCBzZXNzaW9uLCBpbiwgbGVuKTsKICAgICAgZWxzZSBpZihxdWV1ZV9jbG9zZWQoJnNlc3Npb24tPnNlbmRxKSAmJiBxdWV1ZV9jb21wbGV0ZSgmc2Vzc2lvbi0+c2VuZHEpKQogICAgICAgIHJldCA9IGx3c19odHRwX3RyYW5zYWN0aW9uX2NvbXBsZXRlZCh3c2kpOwoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfSFRUUF9EUk9QX1BST1RPQ09MOiB7CiAgICAgIC8vIG9wYXF1ZV9jbGVhcihvcGFxdWUsIGN0eCk7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0hUVFBfRklMRV9DT01QTEVUSU9OOiB7CiAgICAgIC8vIG9wYXF1ZV9jbGVhcihvcGFxdWUsIGN0eCk7CgogICAgICByZXR1cm4gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19DTE9TRURfSFRUUDogewogICAgICAvLyBsd3NfY2xvc2VfZnJlZV93c2kod3NpLCBMV1NfQ0xPU0VfU1RBVFVTX05PU1RBVFVTLCBfX2Z1bmNfXyk7CiAgICAgIHJldCA9IC0xOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX1ZIT1NUX0NFUlRfQUdJTkc6CiAgICBjYXNlIExXU19DQUxMQkFDS19FVkVOVF9XQUlUX0NBTkNFTExFRDoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0dFVF9USFJFQURfSUQ6IHsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRVNUQUJMSVNIRURfQ0xJRU5UX0hUVFA6IHsKICAgICAgc3RydWN0IHdzaV9vcGFxdWVfdXNlcl9kYXRhKiBvcGFxdWUyID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKGx3c19nZXRfcGFyZW50KHdzaSkpOwoKICAgICAgb3BhcXVlMi0+dXBzdHJlYW0gPSB3c2k7CiAgICB9CiAgICBjYXNlIExXU19DQUxMQkFDS19DTElFTlRfQVBQRU5EX0hBTkRTSEFLRV9IRUFERVI6CiAgICBjYXNlIExXU19DQUxMQkFDS19SRUNFSVZFX0NMSUVOVF9IVFRQOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfUkVDRUlWRV9DTElFTlRfSFRUUF9SRUFEOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfQ0xPU0VEX0NMSUVOVF9IVFRQOgogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfQ09NUExFVEVEX0NMSUVOVF9IVFRQOiB7CiAgICAgIHJldHVybiBsd3NfY2FsbGJhY2tfaHR0cF9kdW1teSh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7CiAgICB9CiAgICBkZWZhdWx0OiB7CiAgICAgIG1pbm5ldF9sd3NfdW5oYW5kbGVkKF9fZnVuY19fLCByZWFzb24pOwogICAgICBicmVhazsKICAgIH0KICB9CiAgLy8gaW50IHJldCA9IDA7CiAgaWYoLypyZWFzb24gIT0gTFdTX0NBTExCQUNLX0hUVFBfV1JJVEVBQkxFICYmIHJlYXNvbiAhPSBMV1NfQ0FMTEJBQ0tfQ0xPU0VEX0hUVFAgJiYqLyAocmVhc29uIDwgTFdTX0NBTExCQUNLX0hUVFBfQklORF9QUk9UT0NPTCB8fCByZWFzb24gPiBMV1NfQ0FMTEJBQ0tfQ0hFQ0tfQUNDRVNTX1JJR0hUUykpIHsKICAgIExPR0NCKCJTRVJWRVItSFRUUCgvKSIsICIlcyVzZmQ9JWkgcmV0PSVkXG4iLCB3c2lfaHR0cDIod3NpKSA/ICJoMiwgIiA6ICJodHRwLzEuMSwgIiwgd3NpX3Rscyh3c2kpID8gIlRMUywgIiA6ICJwbGFpbiwgIiwgbHdzX2dldF9zb2NrZXRfZmQobHdzX2dldF9uZXR3b3JrX3dzaSh3c2kpKSwgcmV0KTsKICB9CgogIGlmKHJldCA9PSAwKQogICAgcmV0ID0gbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXkod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pOwoKICByZXR1cm4gcmV0Owp9CgAAAAAAAAAAwYcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFiQAAAAAAAAWJAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAZSQAAAAAAABlJAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/response.c",
			"settings":
			{
				"buffer_size": 1170,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					27,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZBgAAI2luY2x1ZGUgInNlc3Npb24uaCIKI2luY2x1ZGUgInJlc3BvbnNlLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgImhlYWRlcnMuaCIKI2luY2x1ZGUgPGFzc2VydC5oPgoKc3RydWN0IGh0dHBfcmVzcG9uc2UqIG1pbm5ldF9yZXNwb25zZV9kYXRhKEpTVmFsdWVDb25zdCk7Cgp2b2lkCnJlc3BvbnNlX2luaXQoc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AsIHN0cnVjdCB1cmwgdXJsLCBpbnQzMl90IHN0YXR1cywgY2hhciogc3RhdHVzX3RleHQsIEJPT0wgaGVhZGVyc19zZW50LCBjaGFyKiB0eXBlKSB7CiAgLy8gbWVtc2V0KHJlc3AsIDAsIHNpemVvZihSZXNwb25zZSkpOwoKICByZXNwLT5zdGF0dXMgPSBzdGF0dXM7CiAgcmVzcC0+c3RhdHVzX3RleHQgPSBzdGF0dXNfdGV4dDsKICByZXNwLT5oZWFkZXJzX3NlbnQgPSBoZWFkZXJzX3NlbnQ7CiAgcmVzcC0+dXJsID0gdXJsOwogIHJlc3AtPnR5cGUgPSB0eXBlOwogIHJlc3AtPmhlYWRlcnMgPSBCVUZGRVJfMCgpOwogIHJlc3AtPmdlbmVyYXRvciA9IE5VTEw7Cn0KCnN0cnVjdCBodHRwX3Jlc3BvbnNlKgpyZXNwb25zZV9kdXAoc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3ApIHsKICArK3Jlc3AtPnJlZl9jb3VudDsKICByZXR1cm4gcmVzcDsKfQoKdm9pZApyZXNwb25zZV9jbGVhcihzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcCwgSlNDb250ZXh0KiBjdHgpIHsKICB1cmxfZnJlZSgmcmVzcC0+dXJsLCBjdHgpOwogIGlmKHJlc3AtPnR5cGUpIHsKICAgIGpzX2ZyZWUoY3R4LCAodm9pZCopcmVzcC0+dHlwZSk7CiAgICByZXNwLT50eXBlID0gMDsKICB9CgogIGJ1ZmZlcl9mcmVlKCZyZXNwLT5oZWFkZXJzKTsKICBnZW5lcmF0b3JfZGVzdHJveSgmcmVzcC0+Z2VuZXJhdG9yKTsKfQoKdm9pZApyZXNwb25zZV9jbGVhcl9ydChzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcCwgSlNSdW50aW1lKiBydCkgewogIHVybF9mcmVlX3J0KCZyZXNwLT51cmwsIHJ0KTsKICBpZihyZXNwLT50eXBlKSB7CiAgICBqc19mcmVlX3J0KHJ0LCAodm9pZCopcmVzcC0+dHlwZSk7CiAgICByZXNwLT50eXBlID0gMDsKICB9CgogIGJ1ZmZlcl9mcmVlKCZyZXNwLT5oZWFkZXJzKTsKICBnZW5lcmF0b3JfZGVzdHJveSgmcmVzcC0+Z2VuZXJhdG9yKTsKfQoKdm9pZApyZXNwb25zZV9mcmVlKHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwLCBKU0NvbnRleHQqIGN0eCkgewogIGlmKC0tcmVzcC0+cmVmX2NvdW50ID09IDApIHsKICAgIHJlc3BvbnNlX2NsZWFyKHJlc3AsIGN0eCk7CiAgICBqc19mcmVlKGN0eCwgcmVzcCk7CiAgfQp9Cgp2b2lkCnJlc3BvbnNlX2ZyZWVfcnQoc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AsIEpTUnVudGltZSogcnQpIHsKICBpZigtLXJlc3AtPnJlZl9jb3VudCA9PSAwKSB7CiAgICByZXNwb25zZV9jbGVhcl9ydChyZXNwLCBydCk7CiAgICBqc19mcmVlX3J0KHJ0LCByZXNwKTsKICB9Cn0KCnN0cnVjdCBodHRwX3Jlc3BvbnNlKgpyZXNwb25zZV9uZXcoSlNDb250ZXh0KiBjdHgpIHsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcDsKCiAgaWYoIShyZXNwID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihSZXNwb25zZSkpKSkKICAgIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgcmVzcC0+cmVmX2NvdW50ID0gMTsKCiAgcmV0dXJuIHJlc3A7Cn0KAAAAAAAAAACZBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAQAAAAAAAAmBQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZBgAAI2luY2x1ZGUgInNlc3Npb24uaCIKI2luY2x1ZGUgInJlc3BvbnNlLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgImhlYWRlcnMuaCIKI2luY2x1ZGUgPGFzc2VydC5oPgoKc3RydWN0IGh0dHBfcmVzcG9uc2UqIG1pbm5ldF9yZXNwb25zZV9kYXRhKEpTVmFsdWVDb25zdCk7Cgp2b2lkCnJlc3BvbnNlX2luaXQoc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AsIHN0cnVjdCB1cmwgdXJsLCBpbnQzMl90IHN0YXR1cywgY2hhciogc3RhdHVzX3RleHQsIEJPT0wgaGVhZGVyc19zZW50LCBjaGFyKiB0eXBlKSB7CiAgLy8gbWVtc2V0KHJlc3AsIDAsIHNpemVvZihSZXNwb25zZSkpOwoKICByZXNwLT5zdGF0dXMgPSBzdGF0dXM7CiAgcmVzcC0+c3RhdHVzX3RleHQgPSBzdGF0dXNfdGV4dDsKICByZXNwLT5oZWFkZXJzX3NlbnQgPSBoZWFkZXJzX3NlbnQ7CiAgcmVzcC0+dXJsID0gdXJsOwogIHJlc3AtPnR5cGUgPSB0eXBlOwogIHJlc3AtPmhlYWRlcnMgPSBCVUZGRVJfMCgpOwogIHJlc3AtPmdlbmVyYXRvciA9IE5VTEw7Cn0KCnN0cnVjdCBodHRwX3Jlc3BvbnNlKgpyZXNwb25zZV9kdXAoc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3ApIHsKICArK3Jlc3AtPnJlZl9jb3VudDsKICByZXR1cm4gcmVzcDsKfQoKdm9pZApyZXNwb25zZV9jbGVhcihzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcCwgSlNDb250ZXh0KiBjdHgpIHsKICB1cmxfZnJlZSgmcmVzcC0+dXJsLCBjdHgpOwogIGlmKHJlc3AtPnR5cGUpIHsKICAgIGpzX2ZyZWUoY3R4LCAodm9pZCopcmVzcC0+dHlwZSk7CiAgICByZXNwLT50eXBlID0gMDsKICB9CgogIGJ1ZmZlcl9mcmVlKCZyZXNwLT5oZWFkZXJzKTsKICBnZW5lcmF0b3JfZGVzdHJveSgmcmVzcC0+Z2VuZXJhdG9yKTsKfQoKdm9pZApyZXNwb25zZV9jbGVhcl9ydChzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcCwgSlNSdW50aW1lKiBydCkgewogIHVybF9mcmVlX3J0KCZyZXNwLT51cmwsIHJ0KTsKICBpZihyZXNwLT50eXBlKSB7CiAgICBqc19mcmVlX3J0KHJ0LCAodm9pZCopcmVzcC0+dHlwZSk7CiAgICByZXNwLT50eXBlID0gMDsKICB9CgogIGJ1ZmZlcl9mcmVlKCZyZXNwLT5oZWFkZXJzKTsKICBnZW5lcmF0b3JfZGVzdHJveSgmcmVzcC0+Z2VuZXJhdG9yKTsKfQoKdm9pZApyZXNwb25zZV9mcmVlKHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwLCBKU0NvbnRleHQqIGN0eCkgewogIGlmKC0tcmVzcC0+cmVmX2NvdW50ID09IDApIHsKICAgIHJlc3BvbnNlX2NsZWFyKHJlc3AsIGN0eCk7CiAgICBqc19mcmVlKGN0eCwgcmVzcCk7CiAgfQp9Cgp2b2lkCnJlc3BvbnNlX2ZyZWVfcnQoc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AsIEpTUnVudGltZSogcnQpIHsKICBpZigtLXJlc3AtPnJlZl9jb3VudCA9PSAwKSB7CiAgICByZXNwb25zZV9jbGVhcl9ydChyZXNwLCBydCk7CiAgICBqc19mcmVlX3J0KHJ0LCByZXNwKTsKICB9Cn0KCnN0cnVjdCBodHRwX3Jlc3BvbnNlKgpyZXNwb25zZV9uZXcoSlNDb250ZXh0KiBjdHgpIHsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcDsKCiAgaWYoIShyZXNwID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihSZXNwb25zZSkpKSkKICAgIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgcmVzcC0+cmVmX2NvdW50ID0gMTsKCiAgcmV0dXJuIHJlc3A7Cn0KAAAAAAAAAACZBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAQAAAAAAAAmBQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"cut",
					null,
					"AQAAAIcEAAAAAAAAhwQAAAAAAACeAAAACgp2b2lkCnJlc3BvbnNlX2ZyZWUoc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AsIEpTQ29udGV4dCogY3R4KSB7CiAgaWYoLS1yZXNwLT5yZWZfY291bnQgPT0gMCkgewogICAgcmVzcG9uc2VfY2xlYXIocmVzcCwgY3R4KTsKICAgIGpzX2ZyZWUoY3R4LCByZXNwKTsKICB9Cn0",
					"AQAAAAAAAAABAAAAJQUAAAAAAACHBAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"cut",
					null,
					"AQAAAI8CAAAAAAAAjwIAAAAAAAD6AAAACgp2b2lkCnJlc3BvbnNlX2NsZWFyKHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwLCBKU0NvbnRleHQqIGN0eCkgewogIHVybF9mcmVlKCZyZXNwLT51cmwsIGN0eCk7CiAgaWYocmVzcC0+dHlwZSkgewogICAganNfZnJlZShjdHgsICh2b2lkKilyZXNwLT50eXBlKTsKICAgIHJlc3AtPnR5cGUgPSAwOwogIH0KCiAgYnVmZmVyX2ZyZWUoJnJlc3AtPmhlYWRlcnMpOwogIGdlbmVyYXRvcl9kZXN0cm95KCZyZXNwLT5nZW5lcmF0b3IpOwp9Cg",
					"AQAAAAAAAAABAAAAjwIAAAAAAACJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAABBQAAI2luY2x1ZGUgInNlc3Npb24uaCIKI2luY2x1ZGUgInJlc3BvbnNlLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgImhlYWRlcnMuaCIKI2luY2x1ZGUgPGFzc2VydC5oPgoKc3RydWN0IGh0dHBfcmVzcG9uc2UqIG1pbm5ldF9yZXNwb25zZV9kYXRhKEpTVmFsdWVDb25zdCk7Cgp2b2lkCnJlc3BvbnNlX2luaXQoc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AsIHN0cnVjdCB1cmwgdXJsLCBpbnQzMl90IHN0YXR1cywgY2hhciogc3RhdHVzX3RleHQsIEJPT0wgaGVhZGVyc19zZW50LCBjaGFyKiB0eXBlKSB7CiAgLy8gbWVtc2V0KHJlc3AsIDAsIHNpemVvZihSZXNwb25zZSkpOwoKICByZXNwLT5zdGF0dXMgPSBzdGF0dXM7CiAgcmVzcC0+c3RhdHVzX3RleHQgPSBzdGF0dXNfdGV4dDsKICByZXNwLT5oZWFkZXJzX3NlbnQgPSBoZWFkZXJzX3NlbnQ7CiAgcmVzcC0+dXJsID0gdXJsOwogIHJlc3AtPnR5cGUgPSB0eXBlOwogIHJlc3AtPmhlYWRlcnMgPSBCVUZGRVJfMCgpOwogIHJlc3AtPmdlbmVyYXRvciA9IE5VTEw7Cn0KCnN0cnVjdCBodHRwX3Jlc3BvbnNlKgpyZXNwb25zZV9kdXAoc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3ApIHsKICArK3Jlc3AtPnJlZl9jb3VudDsKICByZXR1cm4gcmVzcDsKfQp2b2lkCnJlc3BvbnNlX2NsZWFyX3J0KHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwLCBKU1J1bnRpbWUqIHJ0KSB7CiAgdXJsX2ZyZWVfcnQoJnJlc3AtPnVybCwgcnQpOwogIGlmKHJlc3AtPnR5cGUpIHsKICAgIGpzX2ZyZWVfcnQocnQsICh2b2lkKilyZXNwLT50eXBlKTsKICAgIHJlc3AtPnR5cGUgPSAwOwogIH0KCiAgYnVmZmVyX2ZyZWUoJnJlc3AtPmhlYWRlcnMpOwogIGdlbmVyYXRvcl9kZXN0cm95KCZyZXNwLT5nZW5lcmF0b3IpOwp9Cgp2b2lkCnJlc3BvbnNlX2ZyZWVfcnQoc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AsIEpTUnVudGltZSogcnQpIHsKICBpZigtLXJlc3AtPnJlZl9jb3VudCA9PSAwKSB7CiAgICByZXNwb25zZV9jbGVhcl9ydChyZXNwLCBydCk7CiAgICBqc19mcmVlX3J0KHJ0LCByZXNwKTsKICB9Cn0KCnN0cnVjdCBodHRwX3Jlc3BvbnNlKgpyZXNwb25zZV9uZXcoSlNDb250ZXh0KiBjdHgpIHsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcDsKCiAgaWYoIShyZXNwID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihSZXNwb25zZSkpKSkKICAgIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgcmVzcC0+cmVmX2NvdW50ID0gMTsKCiAgcmV0dXJuIHJlc3A7Cn0KAAAAAAAAAAD+BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwMAAAAAAACLAwAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD+BAAAI2luY2x1ZGUgInNlc3Npb24uaCIKI2luY2x1ZGUgInJlc3BvbnNlLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgImhlYWRlcnMuaCIKI2luY2x1ZGUgPGFzc2VydC5oPgoKc3RydWN0IGh0dHBfcmVzcG9uc2UqIG1pbm5ldF9yZXNwb25zZV9kYXRhKEpTVmFsdWVDb25zdCk7Cgp2b2lkCnJlc3BvbnNlX2luaXQoc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AsIHN0cnVjdCB1cmwgdXJsLCBpbnQzMl90IHN0YXR1cywgY2hhciogc3RhdHVzX3RleHQsIEJPT0wgaGVhZGVyc19zZW50LCBjaGFyKiB0eXBlKSB7CiAgLy8gbWVtc2V0KHJlc3AsIDAsIHNpemVvZihSZXNwb25zZSkpOwoKICByZXNwLT5zdGF0dXMgPSBzdGF0dXM7CiAgcmVzcC0+c3RhdHVzX3RleHQgPSBzdGF0dXNfdGV4dDsKICByZXNwLT5oZWFkZXJzX3NlbnQgPSBoZWFkZXJzX3NlbnQ7CiAgcmVzcC0+dXJsID0gdXJsOwogIHJlc3AtPnR5cGUgPSB0eXBlOwogIHJlc3AtPmhlYWRlcnMgPSBCVUZGRVJfMCgpOwogIHJlc3AtPmdlbmVyYXRvciA9IE5VTEw7Cn0KCnN0cnVjdCBodHRwX3Jlc3BvbnNlKgpyZXNwb25zZV9kdXAoc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3ApIHsKICArK3Jlc3AtPnJlZl9jb3VudDsKICByZXR1cm4gcmVzcDsKfQp2b2lkCnJlc3BvbnNlX2NsZWFyX3J0KHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwLCBKU1J1bnRpbWUqIHJ0KSB7CiAgdXJsX2ZyZWVfcnQoJnJlc3AtPnVybCwgcnQpOwogIGlmKHJlc3AtPnR5cGUpIHsKICAgIGpzX2ZyZWVfcnQocnQsICh2b2lkKilyZXNwLT50eXBlKTsKICAgIHJlc3AtPnR5cGUgPSAwOwogIH0KCiAgYnVmZmVyX2ZyZWUoJnJlc3AtPmhlYWRlcnMpOwogIGdlbmVyYXRvcl9kZXN0cm95KCZyZXNwLT5nZW5lcmF0b3IpOwp9Cgp2b2lkCnJlc3BvbnNlX2ZyZWUoc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AsIEpTUnVudGltZSogcnQpIHsKICBpZigtLXJlc3AtPnJlZl9jb3VudCA9PSAwKSB7CiAgICByZXNwb25zZV9jbGVhcl9ydChyZXNwLCBydCk7CiAgICBqc19mcmVlX3J0KHJ0LCByZXNwKTsKICB9Cn0KCnN0cnVjdCBodHRwX3Jlc3BvbnNlKgpyZXNwb25zZV9uZXcoSlNDb250ZXh0KiBjdHgpIHsKICBzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcDsKCiAgaWYoIShyZXNwID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihSZXNwb25zZSkpKSkKICAgIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgcmVzcC0+cmVmX2NvdW50ID0gMTsKCiAgcmV0dXJuIHJlc3A7Cn0KAAAAAAAAAAD4BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwMAAAAAAACLAwAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAI8CAAAAAAAAkAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwIAAAAAAACPAgAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD5BAAAI2luY2x1ZGUgInNlc3Npb24uaCIKI2luY2x1ZGUgInJlc3BvbnNlLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgImhlYWRlcnMuaCIKI2luY2x1ZGUgPGFzc2VydC5oPgoKc3RydWN0IGh0dHBfcmVzcG9uc2UqIG1pbm5ldF9yZXNwb25zZV9kYXRhKEpTVmFsdWVDb25zdCk7Cgp2b2lkCnJlc3BvbnNlX2luaXQoc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AsIHN0cnVjdCB1cmwgdXJsLCBpbnQzMl90IHN0YXR1cywgY2hhciogc3RhdHVzX3RleHQsIEJPT0wgaGVhZGVyc19zZW50LCBjaGFyKiB0eXBlKSB7CiAgLy8gbWVtc2V0KHJlc3AsIDAsIHNpemVvZihSZXNwb25zZSkpOwoKICByZXNwLT5zdGF0dXMgPSBzdGF0dXM7CiAgcmVzcC0+c3RhdHVzX3RleHQgPSBzdGF0dXNfdGV4dDsKICByZXNwLT5oZWFkZXJzX3NlbnQgPSBoZWFkZXJzX3NlbnQ7CiAgcmVzcC0+dXJsID0gdXJsOwogIHJlc3AtPnR5cGUgPSB0eXBlOwogIHJlc3AtPmhlYWRlcnMgPSBCVUZGRVJfMCgpOwogIHJlc3AtPmdlbmVyYXRvciA9IE5VTEw7Cn0KCnN0cnVjdCBodHRwX3Jlc3BvbnNlKgpyZXNwb25zZV9kdXAoc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3ApIHsKICArK3Jlc3AtPnJlZl9jb3VudDsKICByZXR1cm4gcmVzcDsKfQoKdm9pZApyZXNwb25zZV9jbGVhcihzdHJ1Y3QgaHR0cF9yZXNwb25zZSogcmVzcCwgSlNSdW50aW1lKiBydCkgewogIHVybF9mcmVlX3J0KCZyZXNwLT51cmwsIHJ0KTsKICBpZihyZXNwLT50eXBlKSB7CiAgICBqc19mcmVlX3J0KHJ0LCAodm9pZCopcmVzcC0+dHlwZSk7CiAgICByZXNwLT50eXBlID0gMDsKICB9CgogIGJ1ZmZlcl9mcmVlKCZyZXNwLT5oZWFkZXJzKTsKICBnZW5lcmF0b3JfZGVzdHJveSgmcmVzcC0+Z2VuZXJhdG9yKTsKfQoKdm9pZApyZXNwb25zZV9mcmVlKHN0cnVjdCBodHRwX3Jlc3BvbnNlKiByZXNwLCBKU1J1bnRpbWUqIHJ0KSB7CiAgaWYoLS1yZXNwLT5yZWZfY291bnQgPT0gMCkgewogICAgcmVzcG9uc2VfY2xlYXIocmVzcCwgcnQpOwogICAganNfZnJlZV9ydChydCwgcmVzcCk7CiAgfQp9CgpzdHJ1Y3QgaHR0cF9yZXNwb25zZSoKcmVzcG9uc2VfbmV3KEpTQ29udGV4dCogY3R4KSB7CiAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3A7CgogIGlmKCEocmVzcCA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2YoUmVzcG9uc2UpKSkpCiAgICBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIHJlc3AtPnJlZl9jb3VudCA9IDE7CgogIHJldHVybiByZXNwOwp9CgAAAAAAAAAAmQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAIAAAAAAACQAgAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZBAAAI2luY2x1ZGUgInNlc3Npb24uaCIKI2luY2x1ZGUgInJlc3BvbnNlLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgImhlYWRlcnMuaCIKI2luY2x1ZGUgPGFzc2VydC5oPgoKUmVzcG9uc2UqIG1pbm5ldF9yZXNwb25zZV9kYXRhKEpTVmFsdWVDb25zdCk7Cgp2b2lkCnJlc3BvbnNlX2luaXQoUmVzcG9uc2UqIHJlc3AsIHN0cnVjdCB1cmwgdXJsLCBpbnQzMl90IHN0YXR1cywgY2hhciogc3RhdHVzX3RleHQsIEJPT0wgaGVhZGVyc19zZW50LCBjaGFyKiB0eXBlKSB7CiAgLy8gbWVtc2V0KHJlc3AsIDAsIHNpemVvZihSZXNwb25zZSkpOwoKICByZXNwLT5zdGF0dXMgPSBzdGF0dXM7CiAgcmVzcC0+c3RhdHVzX3RleHQgPSBzdGF0dXNfdGV4dDsKICByZXNwLT5oZWFkZXJzX3NlbnQgPSBoZWFkZXJzX3NlbnQ7CiAgcmVzcC0+dXJsID0gdXJsOwogIHJlc3AtPnR5cGUgPSB0eXBlOwogIHJlc3AtPmhlYWRlcnMgPSBCVUZGRVJfMCgpOwogIHJlc3AtPmdlbmVyYXRvciA9IE5VTEw7Cn0KClJlc3BvbnNlKgpyZXNwb25zZV9kdXAoUmVzcG9uc2UqIHJlc3ApIHsKICArK3Jlc3AtPnJlZl9jb3VudDsKICByZXR1cm4gcmVzcDsKfQoKdm9pZApyZXNwb25zZV9jbGVhcihSZXNwb25zZSogcmVzcCwgSlNSdW50aW1lKiBydCkgewogIHVybF9mcmVlX3J0KCZyZXNwLT51cmwsIHJ0KTsKICBpZihyZXNwLT50eXBlKSB7CiAgICBqc19mcmVlX3J0KHJ0LCAodm9pZCopcmVzcC0+dHlwZSk7CiAgICByZXNwLT50eXBlID0gMDsKICB9CgogIGJ1ZmZlcl9mcmVlKCZyZXNwLT5oZWFkZXJzKTsKICBnZW5lcmF0b3JfZGVzdHJveSgmcmVzcC0+Z2VuZXJhdG9yKTsKfQoKdm9pZApyZXNwb25zZV9mcmVlKFJlc3BvbnNlKiByZXNwLCBKU1J1bnRpbWUqIHJ0KSB7CiAgaWYoLS1yZXNwLT5yZWZfY291bnQgPT0gMCkgewogICAgcmVzcG9uc2VfY2xlYXIocmVzcCwgcnQpOwogICAganNfZnJlZV9ydChydCwgcmVzcCk7CiAgfQp9CgpSZXNwb25zZSoKcmVzcG9uc2VfbmV3KEpTQ29udGV4dCogY3R4KSB7CiAgUmVzcG9uc2UqIHJlc3A7CgogIGlmKCEocmVzcCA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2YoUmVzcG9uc2UpKSkpCiAgICBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIHJlc3AtPnJlZl9jb3VudCA9IDE7CgogIHJldHVybiByZXNwOwp9CgAAAAAAAAAAkgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAIAAAAAAACQAgAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACSBAAAI2luY2x1ZGUgInNlc3Npb24uaCIKI2luY2x1ZGUgInJlc3BvbnNlLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgImhlYWRlcnMuaCIKI2luY2x1ZGUgPGFzc2VydC5oPgoKUmVzcG9uc2UqIG1pbm5ldF9yZXNwb25zZV9kYXRhKEpTVmFsdWVDb25zdCk7Cgp2b2lkCnJlc3BvbnNlX2luaXQoUmVzcG9uc2UqIHJlc3AsIFVSTCB1cmwsIGludDMyX3Qgc3RhdHVzLCBjaGFyKiBzdGF0dXNfdGV4dCwgQk9PTCBoZWFkZXJzX3NlbnQsIGNoYXIqIHR5cGUpIHsKICAvLyBtZW1zZXQocmVzcCwgMCwgc2l6ZW9mKFJlc3BvbnNlKSk7CgogIHJlc3AtPnN0YXR1cyA9IHN0YXR1czsKICByZXNwLT5zdGF0dXNfdGV4dCA9IHN0YXR1c190ZXh0OwogIHJlc3AtPmhlYWRlcnNfc2VudCA9IGhlYWRlcnNfc2VudDsKICByZXNwLT51cmwgPSB1cmw7CiAgcmVzcC0+dHlwZSA9IHR5cGU7CiAgcmVzcC0+aGVhZGVycyA9IEJVRkZFUl8wKCk7CiAgcmVzcC0+Z2VuZXJhdG9yID0gTlVMTDsKfQoKUmVzcG9uc2UqCnJlc3BvbnNlX2R1cChSZXNwb25zZSogcmVzcCkgewogICsrcmVzcC0+cmVmX2NvdW50OwogIHJldHVybiByZXNwOwp9Cgp2b2lkCnJlc3BvbnNlX2NsZWFyKFJlc3BvbnNlKiByZXNwLCBKU1J1bnRpbWUqIHJ0KSB7CiAgdXJsX2ZyZWVfcnQoJnJlc3AtPnVybCwgcnQpOwogIGlmKHJlc3AtPnR5cGUpIHsKICAgIGpzX2ZyZWVfcnQocnQsICh2b2lkKilyZXNwLT50eXBlKTsKICAgIHJlc3AtPnR5cGUgPSAwOwogIH0KCiAgYnVmZmVyX2ZyZWUoJnJlc3AtPmhlYWRlcnMpOwogIGdlbmVyYXRvcl9kZXN0cm95KCZyZXNwLT5nZW5lcmF0b3IpOwp9Cgp2b2lkCnJlc3BvbnNlX2ZyZWUoUmVzcG9uc2UqIHJlc3AsIEpTUnVudGltZSogcnQpIHsKICBpZigtLXJlc3AtPnJlZl9jb3VudCA9PSAwKSB7CiAgICByZXNwb25zZV9jbGVhcihyZXNwLCBydCk7CiAgICBqc19mcmVlX3J0KHJ0LCByZXNwKTsKICB9Cn0KClJlc3BvbnNlKgpyZXNwb25zZV9uZXcoSlNDb250ZXh0KiBjdHgpIHsKICBSZXNwb25zZSogcmVzcDsKCiAgaWYoIShyZXNwID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihSZXNwb25zZSkpKSkKICAgIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgcmVzcC0+cmVmX2NvdW50ID0gMTsKCiAgcmV0dXJuIHJlc3A7Cn0KAAAAAAAAAACSBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAIAAAAAAACQAgAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACSBAAAI2luY2x1ZGUgInNlc3Npb24uaCIKI2luY2x1ZGUgInJlc3BvbnNlLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgImhlYWRlcnMuaCIKI2luY2x1ZGUgPGFzc2VydC5oPgoKUmVzcG9uc2UqIG1pbm5ldF9yZXNwb25zZV9kYXRhKEpTVmFsdWVDb25zdCk7Cgp2b2lkCnJlc3BvbnNlX2luaXQoUmVzcG9uc2UqIHJlc3AsIFVSTCB1cmwsIGludDMyX3Qgc3RhdHVzLCBjaGFyKiBzdGF0dXNfdGV4dCwgQk9PTCBoZWFkZXJzX3NlbnQsIGNoYXIqIHR5cGUpIHsKICAvLyBtZW1zZXQocmVzcCwgMCwgc2l6ZW9mKFJlc3BvbnNlKSk7CgogIHJlc3AtPnN0YXR1cyA9IHN0YXR1czsKICByZXNwLT5zdGF0dXNfdGV4dCA9IHN0YXR1c190ZXh0OwogIHJlc3AtPmhlYWRlcnNfc2VudCA9IGhlYWRlcnNfc2VudDsKICByZXNwLT51cmwgPSB1cmw7CiAgcmVzcC0+dHlwZSA9IHR5cGU7CiAgcmVzcC0+aGVhZGVycyA9IEJVRkZFUl8wKCk7CiAgcmVzcC0+Z2VuZXJhdG9yID0gTlVMTDsKfQoKUmVzcG9uc2UqCnJlc3BvbnNlX2R1cChSZXNwb25zZSogcmVzcCkgewogICsrcmVzcC0+cmVmX2NvdW50OwogIHJldHVybiByZXNwOwp9Cgp2b2lkCnJlc3BvbnNlX2NsZWFyKFJlc3BvbnNlKiByZXNwLCBKU1J1bnRpbWUqIHJ0KSB7CiAgdXJsX2ZyZWVfcnQoJnJlc3AtPnVybCwgcnQpOwogIGlmKHJlc3AtPnR5cGUpIHsKICAgIGpzX2ZyZWVfcnQocnQsICh2b2lkKilyZXNwLT50eXBlKTsKICAgIHJlc3AtPnR5cGUgPSAwOwogIH0KCiAgYnVmZmVyX2ZyZWUoJnJlc3AtPmhlYWRlcnMpOwogIGdlbmVyYXRvcl9kZXN0cm95KCZyZXNwLT5nZW5lcmF0b3IpOwp9Cgp2b2lkCnJlc3BvbnNlX2ZyZWUoUmVzcG9uc2UqIHJlc3AsIEpTUnVudGltZSogcnQpIHsKICBpZigtLXJlc3AtPnJlZl9jb3VudCA9PSAwKSB7CiAgICByZXNwb25zZV9jbGVhcihyZXNwLCBydCk7CiAgICBqc19mcmVlX3J0KHJ0LCByZXNwKTsKICB9Cn0KClJlc3BvbnNlKgpyZXNwb25zZV9uZXcoSlNDb250ZXh0KiBjdHgpIHsKICBSZXNwb25zZSogcmVzcDsKCiAgaWYoIShyZXNwID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihSZXNwb25zZSkpKSkKICAgIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgcmVzcC0+cmVmX2NvdW50ID0gMTsKCiAgcmV0dXJuIHJlc3A7Cn0KAAAAAAAAAACSBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAIAAAAAAACQAgAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACSBAAAI2luY2x1ZGUgInNlc3Npb24uaCIKI2luY2x1ZGUgInJlc3BvbnNlLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgImhlYWRlcnMuaCIKI2luY2x1ZGUgPGFzc2VydC5oPgoKUmVzcG9uc2UqIG1pbm5ldF9yZXNwb25zZV9kYXRhKEpTVmFsdWVDb25zdCk7Cgp2b2lkCnJlc3BvbnNlX2luaXQoUmVzcG9uc2UqIHJlc3AsIFVSTCB1cmwsIGludDMyX3Qgc3RhdHVzLCBjaGFyKiBzdGF0dXNfdGV4dCwgQk9PTCBoZWFkZXJzX3NlbnQsIGNoYXIqIHR5cGUpIHsKICAvLyBtZW1zZXQocmVzcCwgMCwgc2l6ZW9mKFJlc3BvbnNlKSk7CgogIHJlc3AtPnN0YXR1cyA9IHN0YXR1czsKICByZXNwLT5zdGF0dXNfdGV4dCA9IHN0YXR1c190ZXh0OwogIHJlc3AtPmhlYWRlcnNfc2VudCA9IGhlYWRlcnNfc2VudDsKICByZXNwLT51cmwgPSB1cmw7CiAgcmVzcC0+dHlwZSA9IHR5cGU7CiAgcmVzcC0+aGVhZGVycyA9IEJVRkZFUl8wKCk7CiAgcmVzcC0+Z2VuZXJhdG9yID0gTlVMTDsKfQoKUmVzcG9uc2UqCnJlc3BvbnNlX2R1cChSZXNwb25zZSogcmVzcCkgewogICsrcmVzcC0+cmVmX2NvdW50OwogIHJldHVybiByZXNwOwp9Cgp2b2lkCnJlc3BvbnNlX2NsZWFyKFJlc3BvbnNlKiByZXNwLCBKU1J1bnRpbWUqIHJ0KSB7CiAgdXJsX2ZyZWVfcnQoJnJlc3AtPnVybCwgcnQpOwogIGlmKHJlc3AtPnR5cGUpIHsKICAgIGpzX2ZyZWVfcnQocnQsICh2b2lkKilyZXNwLT50eXBlKTsKICAgIHJlc3AtPnR5cGUgPSAwOwogIH0KCiAgYnVmZmVyX2ZyZWUoJnJlc3AtPmhlYWRlcnMpOwogIGdlbmVyYXRvcl9kZXN0cm95KCZyZXNwLT5nZW5lcmF0b3IpOwp9Cgp2b2lkCnJlc3BvbnNlX2ZyZWUoUmVzcG9uc2UqIHJlc3AsIEpTUnVudGltZSogcnQpIHsKICBpZigtLXJlc3AtPnJlZl9jb3VudCA9PSAwKSB7CiAgICByZXNwb25zZV9jbGVhcihyZXNwLCBydCk7CiAgICBqc19mcmVlX3J0KHJ0LCByZXNwKTsKICB9Cn0KClJlc3BvbnNlKgpyZXNwb25zZV9uZXcoSlNDb250ZXh0KiBjdHgpIHsKICBSZXNwb25zZSogcmVzcDsKCiAgaWYoIShyZXNwID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihSZXNwb25zZSkpKSkKICAgIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgcmVzcC0+cmVmX2NvdW50ID0gMTsKCiAgcmV0dXJuIHJlc3A7Cn0KAAAAAAAAAACSBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAIAAAAAAACQAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "#ifndef QJSNET_LIB_REQUEST_H\n#define QJSNET_LIB_REQUEST_H\n\n#include \"lws-utils.h\"\n#include \"buffer.h\"\n#include \"generator.h\"\n#include \"url.h\"\n\nconst char* method_string(enum http_method);\nint method_number(const char*);\n\ntypedef struct http_request {\n  int ref_count;\n  BOOL read_only, secure, h2;\n  enum http_method method;\n  URL url;\n  ByteBuffer headers;\n  Generator* body;\n  char* ip;\n} Request;\n\nconst char* method_string(enum http_method);\nint method_number(const char*);\n\nvoid request_init(Request*, URL url, enum http_method method);\nRequest* request_alloc(JSContext*);\nRequest* request_new(URL, HTTPMethod method, JSContext* ctx);\nRequest* request_dup(Request*);\nRequest* request_fromwsi(struct lws*, JSContext* ctx);\nvoid request_clear(Request-d);\nvoid request_free(Request*, JSRuntime* rt);\nRequest* request_from(int, JSValueConst argv[], JSContext* ctx);\n\nstatic inline const char*\nmethod_name(int m) {\n  if(m < 0)\n    return \"-1\";\n  return ((const char* const[]){\n      \"GET\",\n      \"POST\",\n      \"OPTIONS\",\n      \"PUT\",\n      \"PATCH\",\n      \"DELETE\",\n      \"CONNECT\",\n      \"HEAD\",\n  })[m];\n}\n\n#endif /* QJSNET_LIB_REQUEST_H */\n",
			"file": "lib/request.h",
			"file_size": 1156,
			"file_write_time": 133243695322427613,
			"settings":
			{
				"buffer_size": 1142,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					10,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACfBAAAI2lmbmRlZiBRSlNORVRfTElCX1JFUVVFU1RfSAojZGVmaW5lIFFKU05FVF9MSUJfUkVRVUVTVF9ICgojaW5jbHVkZSAibHdzLXV0aWxzLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImdlbmVyYXRvci5oIgojaW5jbHVkZSAidXJsLmgiCgpjb25zdCBjaGFyKiBtZXRob2Rfc3RyaW5nKGVudW0gaHR0cF9tZXRob2QpOwppbnQgbWV0aG9kX251bWJlcihjb25zdCBjaGFyKik7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX3JlcXVlc3QgewogIGludCByZWZfY291bnQ7CiAgQk9PTCByZWFkX29ubHksIHNlY3VyZSwgaDI7CiAgZW51bSBodHRwX21ldGhvZCBtZXRob2Q7CiAgc3RydWN0IHVybCB1cmw7CiAgQnl0ZUJ1ZmZlciBoZWFkZXJzOwogIEdlbmVyYXRvciogYm9keTsKICBjaGFyKiBpcDsKfSBSZXF1ZXN0OwoKY29uc3QgY2hhciogbWV0aG9kX3N0cmluZyhlbnVtIGh0dHBfbWV0aG9kKTsKaW50IG1ldGhvZF9udW1iZXIoY29uc3QgY2hhciopOwoKdm9pZCByZXF1ZXN0X2luaXQoUmVxdWVzdCosIHN0cnVjdCB1cmwgdXJsLCBlbnVtIGh0dHBfbWV0aG9kIG1ldGhvZCk7ClJlcXVlc3QqIHJlcXVlc3RfYWxsb2MoSlNDb250ZXh0Kik7ClJlcXVlc3QqIHJlcXVlc3RfbmV3KHN0cnVjdCB1cmwsIEhUVFBNZXRob2QgbWV0aG9kLCBKU0NvbnRleHQqIGN0eCk7ClJlcXVlc3QqIHJlcXVlc3RfZHVwKFJlcXVlc3QqKTsKUmVxdWVzdCogcmVxdWVzdF9mcm9td3NpKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgcmVxdWVzdF9jbGVhcl9ydChSZXF1ZXN0KiwgSlNSdW50aW1lKiBydCk7CnZvaWQgcmVxdWVzdF9mcmVlX3J0KFJlcXVlc3QqLCBKU1J1bnRpbWUqIHJ0KTsKUmVxdWVzdCogcmVxdWVzdF9mcm9tKGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgSlNDb250ZXh0KiBjdHgpOwoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgptZXRob2RfbmFtZShpbnQgbSkgewogIGlmKG0gPCAwKQogICAgcmV0dXJuICItMSI7CiAgcmV0dXJuICgoY29uc3QgY2hhciogY29uc3RbXSl7CiAgICAgICJHRVQiLAogICAgICAiUE9TVCIsCiAgICAgICJPUFRJT05TIiwKICAgICAgIlBVVCIsCiAgICAgICJQQVRDSCIsCiAgICAgICJERUxFVEUiLAogICAgICAiQ09OTkVDVCIsCiAgICAgICJIRUFEIiwKICB9KVttXTsKfQoKI2VuZGlmIC8qIFFKU05FVF9MSUJfUkVRVUVTVF9IICovCgAAAAAAAAAAnAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QIAAAAAAAABAwAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACcBAAAI2lmbmRlZiBRSlNORVRfTElCX1JFUVVFU1RfSAojZGVmaW5lIFFKU05FVF9MSUJfUkVRVUVTVF9ICgojaW5jbHVkZSAibHdzLXV0aWxzLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImdlbmVyYXRvci5oIgojaW5jbHVkZSAidXJsLmgiCgpjb25zdCBjaGFyKiBtZXRob2Rfc3RyaW5nKGVudW0gaHR0cF9tZXRob2QpOwppbnQgbWV0aG9kX251bWJlcihjb25zdCBjaGFyKik7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX3JlcXVlc3QgewogIGludCByZWZfY291bnQ7CiAgQk9PTCByZWFkX29ubHksIHNlY3VyZSwgaDI7CiAgZW51bSBodHRwX21ldGhvZCBtZXRob2Q7CiAgc3RydWN0IHVybCB1cmw7CiAgQnl0ZUJ1ZmZlciBoZWFkZXJzOwogIEdlbmVyYXRvciogYm9keTsKICBjaGFyKiBpcDsKfSBSZXF1ZXN0OwoKY29uc3QgY2hhciogbWV0aG9kX3N0cmluZyhlbnVtIGh0dHBfbWV0aG9kKTsKaW50IG1ldGhvZF9udW1iZXIoY29uc3QgY2hhciopOwoKdm9pZCByZXF1ZXN0X2luaXQoUmVxdWVzdCosIHN0cnVjdCB1cmwgdXJsLCBlbnVtIGh0dHBfbWV0aG9kIG1ldGhvZCk7ClJlcXVlc3QqIHJlcXVlc3RfYWxsb2MoSlNDb250ZXh0Kik7ClJlcXVlc3QqIHJlcXVlc3RfbmV3KHN0cnVjdCB1cmwsIEhUVFBNZXRob2QgbWV0aG9kLCBKU0NvbnRleHQqIGN0eCk7ClJlcXVlc3QqIHJlcXVlc3RfZHVwKFJlcXVlc3QqKTsKUmVxdWVzdCogcmVxdWVzdF9mcm9td3NpKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgcmVxdWVzdF9jbGVhcihSZXF1ZXN0KiwgSlNSdW50aW1lKiBydCk7CnZvaWQgcmVxdWVzdF9mcmVlX3J0KFJlcXVlc3QqLCBKU1J1bnRpbWUqIHJ0KTsKUmVxdWVzdCogcmVxdWVzdF9mcm9tKGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgSlNDb250ZXh0KiBjdHgpOwoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgptZXRob2RfbmFtZShpbnQgbSkgewogIGlmKG0gPCAwKQogICAgcmV0dXJuICItMSI7CiAgcmV0dXJuICgoY29uc3QgY2hhciogY29uc3RbXSl7CiAgICAgICJHRVQiLAogICAgICAiUE9TVCIsCiAgICAgICJPUFRJT05TIiwKICAgICAgIlBVVCIsCiAgICAgICJQQVRDSCIsCiAgICAgICJERUxFVEUiLAogICAgICAiQ09OTkVDVCIsCiAgICAgICJIRUFEIiwKICB9KVttXTsKfQoKI2VuZGlmIC8qIFFKU05FVF9MSUJfUkVRVUVTVF9IICovCgAAAAAAAAAAmQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QIAAAAAAAABAwAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZBAAAI2lmbmRlZiBRSlNORVRfTElCX1JFUVVFU1RfSAojZGVmaW5lIFFKU05FVF9MSUJfUkVRVUVTVF9ICgojaW5jbHVkZSAibHdzLXV0aWxzLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImdlbmVyYXRvci5oIgojaW5jbHVkZSAidXJsLmgiCgpjb25zdCBjaGFyKiBtZXRob2Rfc3RyaW5nKGVudW0gaHR0cF9tZXRob2QpOwppbnQgbWV0aG9kX251bWJlcihjb25zdCBjaGFyKik7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX3JlcXVlc3QgewogIGludCByZWZfY291bnQ7CiAgQk9PTCByZWFkX29ubHksIHNlY3VyZSwgaDI7CiAgZW51bSBodHRwX21ldGhvZCBtZXRob2Q7CiAgc3RydWN0IHVybCB1cmw7CiAgQnl0ZUJ1ZmZlciBoZWFkZXJzOwogIEdlbmVyYXRvciogYm9keTsKICBjaGFyKiBpcDsKfSBSZXF1ZXN0OwoKY29uc3QgY2hhciogbWV0aG9kX3N0cmluZyhlbnVtIGh0dHBfbWV0aG9kKTsKaW50IG1ldGhvZF9udW1iZXIoY29uc3QgY2hhciopOwoKdm9pZCByZXF1ZXN0X2luaXQoUmVxdWVzdCosIHN0cnVjdCB1cmwgdXJsLCBlbnVtIGh0dHBfbWV0aG9kIG1ldGhvZCk7ClJlcXVlc3QqIHJlcXVlc3RfYWxsb2MoSlNDb250ZXh0Kik7ClJlcXVlc3QqIHJlcXVlc3RfbmV3KHN0cnVjdCB1cmwsIEhUVFBNZXRob2QgbWV0aG9kLCBKU0NvbnRleHQqIGN0eCk7ClJlcXVlc3QqIHJlcXVlc3RfZHVwKFJlcXVlc3QqKTsKUmVxdWVzdCogcmVxdWVzdF9mcm9td3NpKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgcmVxdWVzdF9jbGVhcihSZXF1ZXN0KiwgSlNSdW50aW1lKiBydCk7CnZvaWQgcmVxdWVzdF9mcmVlKFJlcXVlc3QqLCBKU1J1bnRpbWUqIHJ0KTsKUmVxdWVzdCogcmVxdWVzdF9mcm9tKGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgSlNDb250ZXh0KiBjdHgpOwoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgptZXRob2RfbmFtZShpbnQgbSkgewogIGlmKG0gPCAwKQogICAgcmV0dXJuICItMSI7CiAgcmV0dXJuICgoY29uc3QgY2hhciogY29uc3RbXSl7CiAgICAgICJHRVQiLAogICAgICAiUE9TVCIsCiAgICAgICJPUFRJT05TIiwKICAgICAgIlBVVCIsCiAgICAgICJQQVRDSCIsCiAgICAgICJERUxFVEUiLAogICAgICAiQ09OTkVDVCIsCiAgICAgICJIRUFEIiwKICB9KVttXTsKfQoKI2VuZGlmIC8qIFFKU05FVF9MSUJfUkVRVUVTVF9IICovCgAAAAAAAAAAmQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QIAAAAAAAABAwAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZBAAAI2lmbmRlZiBRSlNORVRfTElCX1JFUVVFU1RfSAojZGVmaW5lIFFKU05FVF9MSUJfUkVRVUVTVF9ICgojaW5jbHVkZSAibHdzLXV0aWxzLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImdlbmVyYXRvci5oIgojaW5jbHVkZSAidXJsLmgiCgpjb25zdCBjaGFyKiBtZXRob2Rfc3RyaW5nKGVudW0gaHR0cF9tZXRob2QpOwppbnQgbWV0aG9kX251bWJlcihjb25zdCBjaGFyKik7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX3JlcXVlc3QgewogIGludCByZWZfY291bnQ7CiAgQk9PTCByZWFkX29ubHksIHNlY3VyZSwgaDI7CiAgZW51bSBodHRwX21ldGhvZCBtZXRob2Q7CiAgc3RydWN0IHVybCB1cmw7CiAgQnl0ZUJ1ZmZlciBoZWFkZXJzOwogIEdlbmVyYXRvciogYm9keTsKICBjaGFyKiBpcDsKfSBSZXF1ZXN0OwoKY29uc3QgY2hhciogbWV0aG9kX3N0cmluZyhlbnVtIGh0dHBfbWV0aG9kKTsKaW50IG1ldGhvZF9udW1iZXIoY29uc3QgY2hhciopOwoKdm9pZCByZXF1ZXN0X2luaXQoUmVxdWVzdCosIHN0cnVjdCB1cmwgdXJsLCBlbnVtIGh0dHBfbWV0aG9kIG1ldGhvZCk7ClJlcXVlc3QqIHJlcXVlc3RfYWxsb2MoSlNDb250ZXh0Kik7ClJlcXVlc3QqIHJlcXVlc3RfbmV3KHN0cnVjdCB1cmwsIEhUVFBNZXRob2QgbWV0aG9kLCBKU0NvbnRleHQqIGN0eCk7ClJlcXVlc3QqIHJlcXVlc3RfZHVwKFJlcXVlc3QqKTsKUmVxdWVzdCogcmVxdWVzdF9mcm9td3NpKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgcmVxdWVzdF9jbGVhcihSZXF1ZXN0KiwgSlNSdW50aW1lKiBydCk7CnZvaWQgcmVxdWVzdF9mcmVlKFJlcXVlc3QqLCBKU1J1bnRpbWUqIHJ0KTsKUmVxdWVzdCogcmVxdWVzdF9mcm9tKGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgSlNDb250ZXh0KiBjdHgpOwoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgptZXRob2RfbmFtZShpbnQgbSkgewogIGlmKG0gPCAwKQogICAgcmV0dXJuICItMSI7CiAgcmV0dXJuICgoY29uc3QgY2hhciogY29uc3RbXSl7CiAgICAgICJHRVQiLAogICAgICAiUE9TVCIsCiAgICAgICJPUFRJT05TIiwKICAgICAgIlBVVCIsCiAgICAgICJQQVRDSCIsCiAgICAgICJERUxFVEUiLAogICAgICAiQ09OTkVDVCIsCiAgICAgICJIRUFEIiwKICB9KVttXTsKfQoKI2VuZGlmIC8qIFFKU05FVF9MSUJfUkVRVUVTVF9IICovCgAAAAAAAAAAmQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QIAAAAAAAABAwAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZBAAAI2lmbmRlZiBRSlNORVRfTElCX1JFUVVFU1RfSAojZGVmaW5lIFFKU05FVF9MSUJfUkVRVUVTVF9ICgojaW5jbHVkZSAibHdzLXV0aWxzLmgiCiNpbmNsdWRlICJidWZmZXIuaCIKI2luY2x1ZGUgImdlbmVyYXRvci5oIgojaW5jbHVkZSAidXJsLmgiCgpjb25zdCBjaGFyKiBtZXRob2Rfc3RyaW5nKGVudW0gaHR0cF9tZXRob2QpOwppbnQgbWV0aG9kX251bWJlcihjb25zdCBjaGFyKik7Cgp0eXBlZGVmIHN0cnVjdCBodHRwX3JlcXVlc3QgewogIGludCByZWZfY291bnQ7CiAgQk9PTCByZWFkX29ubHksIHNlY3VyZSwgaDI7CiAgZW51bSBodHRwX21ldGhvZCBtZXRob2Q7CiAgc3RydWN0IHVybCB1cmw7CiAgQnl0ZUJ1ZmZlciBoZWFkZXJzOwogIEdlbmVyYXRvciogYm9keTsKICBjaGFyKiBpcDsKfSBSZXF1ZXN0OwoKY29uc3QgY2hhciogbWV0aG9kX3N0cmluZyhlbnVtIGh0dHBfbWV0aG9kKTsKaW50IG1ldGhvZF9udW1iZXIoY29uc3QgY2hhciopOwoKdm9pZCByZXF1ZXN0X2luaXQoUmVxdWVzdCosIHN0cnVjdCB1cmwgdXJsLCBlbnVtIGh0dHBfbWV0aG9kIG1ldGhvZCk7ClJlcXVlc3QqIHJlcXVlc3RfYWxsb2MoSlNDb250ZXh0Kik7ClJlcXVlc3QqIHJlcXVlc3RfbmV3KHN0cnVjdCB1cmwsIEhUVFBNZXRob2QgbWV0aG9kLCBKU0NvbnRleHQqIGN0eCk7ClJlcXVlc3QqIHJlcXVlc3RfZHVwKFJlcXVlc3QqKTsKUmVxdWVzdCogcmVxdWVzdF9mcm9td3NpKHN0cnVjdCBsd3MqLCBKU0NvbnRleHQqIGN0eCk7CnZvaWQgcmVxdWVzdF9jbGVhcihSZXF1ZXN0KiwgSlNSdW50aW1lKiBydCk7CnZvaWQgcmVxdWVzdF9mcmVlKFJlcXVlc3QqLCBKU1J1bnRpbWUqIHJ0KTsKUmVxdWVzdCogcmVxdWVzdF9mcm9tKGludCwgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgSlNDb250ZXh0KiBjdHgpOwoKc3RhdGljIGlubGluZSBjb25zdCBjaGFyKgptZXRob2RfbmFtZShpbnQgbSkgewogIGlmKG0gPCAwKQogICAgcmV0dXJuICItMSI7CiAgcmV0dXJuICgoY29uc3QgY2hhciogY29uc3RbXSl7CiAgICAgICJHRVQiLAogICAgICAiUE9TVCIsCiAgICAgICJPUFRJT05TIiwKICAgICAgIlBVVCIsCiAgICAgICJQQVRDSCIsCiAgICAgICJERUxFVEUiLAogICAgICAiQ09OTkVDVCIsCiAgICAgICJIRUFEIiwKICB9KVttXTsKfQoKI2VuZGlmIC8qIFFKU05FVF9MSUJfUkVRVUVTVF9IICovCgAAAAAAAAAAhAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QIAAAAAAAABAwAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "-d"
					},
					"AwAAAPECAAAAAAAA8gIAAAAAAAAAAAAA8gIAAAAAAADyAgAAAAAAABAAAAAqLCBKU1J1bnRpbWUqIHJ08gIAAAAAAADzAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QIAAAAAAAABAwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "examples/http-server.js",
			"redo_stack":
			[
			],
			"settings":
			{
				"buffer_size": 1343,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAiwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "\n\n\nserver."
					},
					"CgAAAIsBAAAAAAAAjAEAAAAAAAAAAAAAjAEAAAAAAACNAQAAAAAAAAAAAACNAQAAAAAAAI4BAAAAAAAAAAAAAI4BAAAAAAAAjwEAAAAAAAAAAAAAjwEAAAAAAACQAQAAAAAAAAAAAACQAQAAAAAAAJEBAAAAAAAAAAAAAJEBAAAAAAAAkgEAAAAAAAAAAAAAkgEAAAAAAACTAQAAAAAAAAAAAACTAQAAAAAAAJQBAAAAAAAAAAAAAJQBAAAAAAAAlQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"left_delete",
					null,
					"AQAAAJQBAAAAAAAAlAEAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAlQEAAAAAAACVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJQBAAAAAAAAlgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAEAAAAAAACUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAJYBAAAAAAAAlwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQEAAAAAAACVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJUBAAAAAAAAlgEAAAAAAAAAAAAAlgEAAAAAAACYAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQEAAAAAAACVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					2,
					"left_delete",
					null,
					"AgAAAJYBAAAAAAAAlgEAAAAAAAACAAAAICCVAQAAAAAAAJUBAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAmAEAAAAAAACYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJUBAAAAAAAAlwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQEAAAAAAACVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " host:"
					},
					"BgAAAJYBAAAAAAAAlwEAAAAAAAAAAAAAlwEAAAAAAACYAQAAAAAAAAAAAACYAQAAAAAAAJkBAAAAAAAAAAAAAJkBAAAAAAAAmgEAAAAAAAAAAAAAmgEAAAAAAACbAQAAAAAAAAAAAACbAQAAAAAAAJwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgEAAAAAAACWAQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJwBAAAAAAAAnQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAEAAAAAAACcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAJ0BAAAAAAAAnwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQEAAAAAAACdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "0.0.0.0"
					},
					"BwAAAJ4BAAAAAAAAnwEAAAAAAAAAAAAAnwEAAAAAAACgAQAAAAAAAAAAAACgAQAAAAAAAKEBAAAAAAAAAAAAAKEBAAAAAAAAogEAAAAAAAAAAAAAogEAAAAAAACjAQAAAAAAAAAAAACjAQAAAAAAAKQBAAAAAAAAAAAAAKQBAAAAAAAApQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngEAAAAAAACeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAKYBAAAAAAAApwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgEAAAAAAACmAQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"left_delete",
					null,
					"AQAAAKYBAAAAAAAApgEAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAApwEAAAAAAACnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKYBAAAAAAAApwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgEAAAAAAACmAQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " port="
					},
					"BgAAAKcBAAAAAAAAqAEAAAAAAAAAAAAAqAEAAAAAAACpAQAAAAAAAAAAAACpAQAAAAAAAKoBAAAAAAAAAAAAAKoBAAAAAAAAqwEAAAAAAAAAAAAAqwEAAAAAAACsAQAAAAAAAAAAAACsAQAAAAAAAK0BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwEAAAAAAACnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"left_delete",
					null,
					"AQAAAKwBAAAAAAAArAEAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAArQEAAAAAAACtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAKwBAAAAAAAArQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAEAAAAAAACsAQAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK0BAAAAAAAArgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQEAAAAAAACtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAK4BAAAAAAAAsAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgEAAAAAAACuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "9"
					},
					"AQAAAK8BAAAAAAAAsAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwEAAAAAAACvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"left_delete",
					null,
					"AQAAAK8BAAAAAAAArwEAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAAsAEAAAAAAACwAQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "8765"
					},
					"BAAAAK8BAAAAAAAAsAEAAAAAAAAAAAAAsAEAAAAAAACxAQAAAAAAAAAAAACxAQAAAAAAALIBAAAAAAAAAAAAALIBAAAAAAAAswEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwEAAAAAAACvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALQBAAAAAAAAtQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAEAAAAAAAC0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALQBAAAAAAAAtQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAEAAAAAAAC0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALUBAAAAAAAAtgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQEAAAAAAAC1AQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "blo"
					},
					"AwAAALoBAAAAAAAAuwEAAAAAAAAAAAAAuwEAAAAAAAC8AQAAAAAAAAAAAAC8AQAAAAAAAL0BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugEAAAAAAAC6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					4,
					"left_delete",
					null,
					"BAAAALwBAAAAAAAAvAEAAAAAAAABAAAAb7sBAAAAAAAAuwEAAAAAAAABAAAAbLoBAAAAAAAAugEAAAAAAAABAAAAYrkBAAAAAAAAuQEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAvQEAAAAAAAC9AQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "block="
					},
					"BgAAALYBAAAAAAAAtwEAAAAAAAAAAAAAtwEAAAAAAAC4AQAAAAAAAAAAAAC4AQAAAAAAALkBAAAAAAAAAAAAALkBAAAAAAAAugEAAAAAAAAAAAAAugEAAAAAAAC7AQAAAAAAAAAAAAC7AQAAAAAAALwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgEAAAAAAAC2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"left_delete",
					null,
					"AQAAALsBAAAAAAAAuwEAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAvAEAAAAAAAC8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAALsBAAAAAAAAvAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwEAAAAAAAC7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": " false"
					},
					"BgAAALwBAAAAAAAAvQEAAAAAAAAAAAAAvQEAAAAAAAC+AQAAAAAAAAAAAAC+AQAAAAAAAL8BAAAAAAAAAAAAAL8BAAAAAAAAwAEAAAAAAAAAAAAAwAEAAAAAAADBAQAAAAAAAAAAAADBAQAAAAAAAMIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAEAAAAAAAC8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAMUBAAAAAAAAxgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgEAAAAAAADCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMIBAAAAAAAAwwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgEAAAAAAADCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMMBAAAAAAAAxAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwEAAAAAAADDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"paste",
					null,
					"AQAAAMQBAAAAAAAAFQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAEAAAAAAADEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANUBAAAAAAAA1gEAAAAAAAAAAAAA1gEAAAAAAADWAQAAAAAAAB8AAAAgICBtaW1ldHlwZXM6IE1pbWVUeXBlcywKICAgICAg",
					"AQAAAAAAAAABAAAA1QEAAAAAAAD0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANUBAAAAAAAA1gEAAAAAAAAAAAAA1gEAAAAAAADWAQAAAAAAABwAAAAgICBob3N0LAogICAgICAgIHBvcnQsCiAgICAg",
					"AQAAAAAAAAABAAAA1QEAAAAAAADxAQAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPABAAAAAAAA8QEAAAAAAAAAAAAA8QEAAAAAAADxAQAAAAAAACIAAAAgICBzc2xDZXJ0LAogICAgICAgIHNzbFByaXZhdGVLZXks",
					"AQAAAAAAAAABAAAA8AEAAAAAAAASAgAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert_snippet",
					{
						"contents": "'${0:$SELECTION}'"
					},
					"AgAAABkCAAAAAAAAGQIAAAAAAAAJAAAAcGFyZW50RGlyGQIAAAAAAAAkAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQIAAAAAAAAiAgAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AgAAABoCAAAAAAAAGwIAAAAAAAAAAAAAGwIAAAAAAAAbAgAAAAAAAAkAAABwYXJlbnREaXI",
					"AQAAAAAAAAABAAAAGgIAAAAAAAAjAgAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"left_delete",
					null,
					"AQAAABoCAAAAAAAAGgIAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAGwIAAAAAAAAbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAABoCAAAAAAAAGwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgIAAAAAAAAaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					4,
					"left_delete",
					null,
					"BAAAAO8BAAAAAAAA7wEAAAAAAAACAAAAICDtAQAAAAAAAO0BAAAAAAAAAgAAACAg6wEAAAAAAADrAQAAAAAAAAIAAAAgIOoBAAAAAAAA6gEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA8QEAAAAAAADxAQAAAAAAAAAAAAAAAGtA"
				],
				[
					155,
					2,
					"right_delete",
					null,
					"AgAAAEYBAAAAAAAARgEAAAAAAAAHAAAAZGVmYXVsdEYBAAAAAAAARgEAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAARgEAAAAAAABNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACqBAAAaW1wb3J0IHsgRm9ybVBhcnNlciwgR2VuZXJhdG9yLCBIYXNoLCBMTExfQUxMLCBMTExfQ0xJRU5ULCBMTExfREVCVUcsIExMTF9FUlIsIExMTF9FWFQsIExMTF9IRUFERVIsIExMTF9JTkZPLCBMTExfTEFURU5DWSwgTExMX05PVElDRSwgTExMX1BBUlNFUiwgTExMX1RIUkVBRCwgTExMX1VTRVIsIExMTF9XQVJOLCBNRVRIT0RfREVMRVRFLCBNRVRIT0RfR0VULCBNRVRIT0RfSEVBRCwgTUVUSE9EX09QVElPTlMsIE1FVEhPRF9QQVRDSCwgTUVUSE9EX1BPU1QsIE1FVEhPRF9QVVQsIFJlcXVlc3QsIFJlc3BvbnNlLCBSaW5nYnVmZmVyLCBTb2NrZXQsIFVSTCwgY2xpZW50LCAgZmV0Y2gsIGdldFNlc3Npb25zLCBsb2dMZXZlbHMsIHNlcnZlciwgc2V0TG9nIH0gZnJvbSAnbmV0JzsKCgoKc2VydmVyKHsgaG9zdDogJzAuMC4wLjAnLCBwb3J0OiAnODc2NScsIGJsb2NrOiBmYWxzZSwgIHRsczogdHJ1ZSwKICAgICAgICAgcHJvdG9jb2w6ICdodHRwJywKICAgICAgICBtb3VudHM6IHsKICAgICAgICAgICcvJzogWycvJywgJy4nLCAnaW5kZXguaHRtbCddLAogICAgICAgICAgJy80MDQuaHRtbCc6IGZ1bmN0aW9uKiAocmVxLCByZXMpIHsKICAgICAgICAgICAgbG9nKCcvNDA0Lmh0bWwnLCB7IHJlcSwgcmVzIH0pOwogICAgICAgICAgICB5aWVsZCAnPGh0bWw+PGhlYWQ+PG1ldGEgY2hhcnNldD11dGYtOCBodHRwLWVxdWl2PSJDb250ZW50LUxhbmd1YWdlIiBjb250ZW50PSJlbiIvPjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ii9lcnJvci5jc3MiLz48L2hlYWQ+PGJvZHk+PGgxPjQwMzwvaDE+PC9ib2R5PjwvaHRtbD4nOwogICAgICAgICAgfSwKICAgICAgICAgICpnZW5lcmF0b3IocmVxLCByZXMpIHsKICAgICAgICAgICAgbG9nKCcvZ2VuZXJhdG9yJywgeyByZXEsIHJlcyB9KTsKICAgICAgICAgICAgeWllbGQgJ1RoaXMnOwogICAgICAgICAgICB5aWVsZCAnICc7CiAgICAgICAgICAgIHlpZWxkICdpcyc7CiAgICAgICAgICAgIHlpZWxkICcgJzsKICAgICAgICAgICAgeWllbGQgJ2EnOwogICAgICAgICAgICB5aWVsZCAnICc7CiAgICAgICAgICAgIHlpZWxkICdnZW5lcmF0ZWQnOwogICAgICAgICAgICB5aWVsZCAnICc7CiAgICAgICAgICAgIHlpZWxkICdyZXNwb25zZSc7CiAgICAgICAgICAgIHlpZWxkICdcbic7CiAgICAgICAgICB9CiAgICAgICAgfSwgfSkKAAAAAAAAAAAvBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgEAAAAAAABGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIsBAAAAAAAAjAEAAAAAAAAAAAAAjAEAAAAAAACOAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					2,
					"left_delete",
					null,
					"AgAAAIwBAAAAAAAAjAEAAAAAAAACAAAAICCLAQAAAAAAAIsBAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAjgEAAAAAAACOAQAAAAAAAAAAAAAAADJA"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAIIBAAAAAAAAgwEAAAAAAAAAAAAAgwEAAAAAAACEAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggEAAAAAAACCAQAAAAAAAAAAAAAAAFJA"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "net"
					},
					"AwAAAIMBAAAAAAAAhAEAAAAAAAAAAAAAhAEAAAAAAACFAQAAAAAAAAAAAACFAQAAAAAAAIYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwEAAAAAAACDAQAAAAAAAAAAAAAAAAAA"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAIcBAAAAAAAAiAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwEAAAAAAACHAQAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					2,
					"left_delete",
					null,
					"AgAAAIcBAAAAAAAAhwEAAAAAAAABAAAALoYBAAAAAAAAhgEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAiAEAAAAAAACIAQAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": ".setLog"
					},
					"BwAAAIYBAAAAAAAAhwEAAAAAAAAAAAAAhwEAAAAAAACIAQAAAAAAAAAAAACIAQAAAAAAAIkBAAAAAAAAAAAAAIkBAAAAAAAAigEAAAAAAAAAAAAAigEAAAAAAACLAQAAAAAAAAAAAACLAQAAAAAAAIwBAAAAAAAAAAAAAIwBAAAAAAAAjQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgEAAAAAAACGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAI0BAAAAAAAAjwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQEAAAAAAACNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": "LLL_ALLL"
					},
					"CAAAAI4BAAAAAAAAjwEAAAAAAAAAAAAAjwEAAAAAAACQAQAAAAAAAAAAAACQAQAAAAAAAJEBAAAAAAAAAAAAAJEBAAAAAAAAkgEAAAAAAAAAAAAAkgEAAAAAAACTAQAAAAAAAAAAAACTAQAAAAAAAJQBAAAAAAAAAAAAAJQBAAAAAAAAlQEAAAAAAAAAAAAAlQEAAAAAAACWAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgEAAAAAAACOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"left_delete",
					null,
					"AQAAAJUBAAAAAAAAlQEAAAAAAAABAAAATA",
					"AQAAAAAAAAABAAAAlgEAAAAAAACWAQAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJUBAAAAAAAAlgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQEAAAAAAACVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJYBAAAAAAAAlwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgEAAAAAAACWAQAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJcBAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwEAAAAAAACXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "levewl"
					},
					"BgAAAJgBAAAAAAAAmQEAAAAAAAAAAAAAmQEAAAAAAACaAQAAAAAAAAAAAACaAQAAAAAAAJsBAAAAAAAAAAAAAJsBAAAAAAAAnAEAAAAAAAAAAAAAnAEAAAAAAACdAQAAAAAAAAAAAACdAQAAAAAAAJ4BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAEAAAAAAACYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					2,
					"left_delete",
					null,
					"AgAAAJ0BAAAAAAAAnQEAAAAAAAABAAAAbJwBAAAAAAAAnAEAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAngEAAAAAAACeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": "öl"
					},
					"AgAAAJwBAAAAAAAAnQEAAAAAAAAAAAAAnQEAAAAAAACeAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAEAAAAAAACcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					2,
					"left_delete",
					null,
					"AgAAAJ0BAAAAAAAAnQEAAAAAAAABAAAAbJwBAAAAAAAAnAEAAAAAAAACAAAAw7Y",
					"AQAAAAAAAAABAAAAngEAAAAAAACeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": "l,."
					},
					"AwAAAJwBAAAAAAAAnQEAAAAAAAAAAAAAnQEAAAAAAACeAQAAAAAAAAAAAACeAQAAAAAAAJ8BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAEAAAAAAACcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"left_delete",
					null,
					"AQAAAJ4BAAAAAAAAngEAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAnwEAAAAAAACfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": "message"
					},
					"BwAAAJ4BAAAAAAAAnwEAAAAAAAAAAAAAnwEAAAAAAACgAQAAAAAAAAAAAACgAQAAAAAAAKEBAAAAAAAAAAAAAKEBAAAAAAAAogEAAAAAAAAAAAAAogEAAAAAAACjAQAAAAAAAAAAAACjAQAAAAAAAKQBAAAAAAAAAAAAAKQBAAAAAAAApQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngEAAAAAAACeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAKYBAAAAAAAApwEAAAAAAAAAAAAApwEAAAAAAACoAQAAAAAAAAAAAACoAQAAAAAAAKkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgEAAAAAAACmAQAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": " console.log"
					},
					"DAAAAKkBAAAAAAAAqgEAAAAAAAAAAAAAqgEAAAAAAACrAQAAAAAAAAAAAACrAQAAAAAAAKwBAAAAAAAAAAAAAKwBAAAAAAAArQEAAAAAAAAAAAAArQEAAAAAAACuAQAAAAAAAAAAAACuAQAAAAAAAK8BAAAAAAAAAAAAAK8BAAAAAAAAsAEAAAAAAAAAAAAAsAEAAAAAAACxAQAAAAAAAAAAAACxAQAAAAAAALIBAAAAAAAAAAAAALIBAAAAAAAAswEAAAAAAAAAAAAAswEAAAAAAAC0AQAAAAAAAAAAAAC0AQAAAAAAALUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQEAAAAAAACpAQAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALUBAAAAAAAAtwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQEAAAAAAAC1AQAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": "leve,mes"
					},
					"CAAAALYBAAAAAAAAtwEAAAAAAAAAAAAAtwEAAAAAAAC4AQAAAAAAAAAAAAC4AQAAAAAAALkBAAAAAAAAAAAAALkBAAAAAAAAugEAAAAAAAAAAAAAugEAAAAAAAC7AQAAAAAAAAAAAAC7AQAAAAAAALwBAAAAAAAAAAAAALwBAAAAAAAAvQEAAAAAAAAAAAAAvQEAAAAAAAC+AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgEAAAAAAAC2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					4,
					"left_delete",
					null,
					"BAAAAL0BAAAAAAAAvQEAAAAAAAABAAAAc7wBAAAAAAAAvAEAAAAAAAABAAAAZbsBAAAAAAAAuwEAAAAAAAABAAAAbboBAAAAAAAAugEAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAvgEAAAAAAAC+AQAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "l."
					},
					"AgAAALoBAAAAAAAAuwEAAAAAAAAAAAAAuwEAAAAAAAC8AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugEAAAAAAAC6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"left_delete",
					null,
					"AQAAALsBAAAAAAAAuwEAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAvAEAAAAAAAC8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": ",."
					},
					"AgAAALsBAAAAAAAAvAEAAAAAAAAAAAAAvAEAAAAAAAC9AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwEAAAAAAAC7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"left_delete",
					null,
					"AQAAALwBAAAAAAAAvAEAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAvQEAAAAAAAC9AQAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": "es"
					},
					"AgAAALwBAAAAAAAAvQEAAAAAAAAAAAAAvQEAAAAAAAC+AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAEAAAAAAAC8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					2,
					"left_delete",
					null,
					"AgAAAL0BAAAAAAAAvQEAAAAAAAABAAAAc7wBAAAAAAAAvAEAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAvgEAAAAAAAC+AQAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": "mesa"
					},
					"BAAAALwBAAAAAAAAvQEAAAAAAAAAAAAAvQEAAAAAAAC+AQAAAAAAAAAAAAC+AQAAAAAAAL8BAAAAAAAAAAAAAL8BAAAAAAAAwAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAEAAAAAAAC8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"left_delete",
					null,
					"AQAAAL8BAAAAAAAAvwEAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAwAEAAAAAAADAAQAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "sage"
					},
					"BAAAAL8BAAAAAAAAwAEAAAAAAAAAAAAAwAEAAAAAAADBAQAAAAAAAAAAAADBAQAAAAAAAMIBAAAAAAAAAAAAAMIBAAAAAAAAwwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwEAAAAAAAC/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					225,
					4,
					"right_delete",
					null,
					"BAAAAIMBAAAAAAAAgwEAAAAAAAABAAAAboMBAAAAAAAAgwEAAAAAAAABAAAAZYMBAAAAAAAAgwEAAAAAAAABAAAAdIMBAAAAAAAAgwEAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAgwEAAAAAAACDAQAAAAAAAAAAAAAAAAAA"
				],
				[
					233,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMEBAAAAAAAAwgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQEAAAAAAADBAQAAAAAAAAAAAAAAAPC/"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": "logLevels["
					},
					"CgAAALIBAAAAAAAAswEAAAAAAAAAAAAAswEAAAAAAAC0AQAAAAAAAAAAAAC0AQAAAAAAALUBAAAAAAAAAAAAALUBAAAAAAAAtgEAAAAAAAAAAAAAtgEAAAAAAAC3AQAAAAAAAAAAAAC3AQAAAAAAALgBAAAAAAAAAAAAALgBAAAAAAAAuQEAAAAAAAAAAAAAuQEAAAAAAAC6AQAAAAAAAAAAAAC6AQAAAAAAALsBAAAAAAAAAAAAALsBAAAAAAAAvAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgEAAAAAAACyAQAAAAAAAAAAAAAAAPC/"
				],
				[
					243,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAMEBAAAAAAAAwgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQEAAAAAAADBAQAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": ".padEnd(10)"
					},
					"CwAAAMIBAAAAAAAAwwEAAAAAAAAAAAAAwwEAAAAAAADEAQAAAAAAAAAAAADEAQAAAAAAAMUBAAAAAAAAAAAAAMUBAAAAAAAAxgEAAAAAAAAAAAAAxgEAAAAAAADHAQAAAAAAAAAAAADHAQAAAAAAAMgBAAAAAAAAAAAAAMgBAAAAAAAAyQEAAAAAAAAAAAAAyQEAAAAAAADKAQAAAAAAAAAAAADKAQAAAAAAAMsBAAAAAAAAAAAAAMsBAAAAAAAAzAEAAAAAAAAAAAAAzAEAAAAAAADNAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgEAAAAAAADCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					254,
					3,
					"right_delete",
					null,
					"AwAAAI4BAAAAAAAAjgEAAAAAAAABAAAAQY4BAAAAAAAAjgEAAAAAAAABAAAATI4BAAAAAAAAjgEAAAAAAAABAAAATA",
					"AQAAAAAAAAABAAAAjgEAAAAAAACOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					255,
					1,
					"left_delete",
					null,
					"AQAAAI0BAAAAAAAAjQEAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAjgEAAAAAAACOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					256,
					1,
					"insert",
					{
						"characters": "_DEBUG-1"
					},
					"CAAAAI0BAAAAAAAAjgEAAAAAAAAAAAAAjgEAAAAAAACPAQAAAAAAAAAAAACPAQAAAAAAAJABAAAAAAAAAAAAAJABAAAAAAAAkQEAAAAAAAAAAAAAkQEAAAAAAACSAQAAAAAAAAAAAACSAQAAAAAAAJMBAAAAAAAAAAAAAJMBAAAAAAAAlAEAAAAAAAAAAAAAlAEAAAAAAACVAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQEAAAAAAACNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIQEAAAAAAAAhQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAQAAAAAAACEBAAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIUEAAAAAAAAhgQAAAAAAAAAAAAAhgQAAAAAAACIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQQAAAAAAACFBAAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"paste",
					null,
					"AQAAAIgEAAAAAAAAHAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAQAAAAAAACIBAAAAAAAAAAAAAAAAPC/"
				],
				[
					273,
					1,
					"paste",
					null,
					"AQAAAIIBAAAAAAAA5QEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggEAAAAAAACCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAIsBAAAAAAAAjAEAAAAAAAAAAAAAjAEAAAAAAACMAQAAAAAAACUAAABjbG9zZSwgZXhlYywgb3BlbiwgcmVhbHBhdGgsIE9fUkRXUiwg",
					"AQAAAAAAAAABAAAAiwEAAAAAAACwAQAAAAAAAAAAAAAAAPC/"
				],
				[
					281,
					3,
					"left_delete",
					null,
					"AwAAAK0BAAAAAAAArQEAAAAAAAAGAAAAV29ya2VyrAEAAAAAAACsAQAAAAAAAAEAAAAgqwEAAAAAAACrAQAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAArQEAAAAAAACzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					286,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABYBQAAaW1wb3J0IHsgRm9ybVBhcnNlciwgR2VuZXJhdG9yLCBIYXNoLCBMTExfQUxMLCBMTExfQ0xJRU5ULCBMTExfREVCVUcsIExMTF9FUlIsIExMTF9FWFQsIExMTF9IRUFERVIsIExMTF9JTkZPLCBMTExfTEFURU5DWSwgTExMX05PVElDRSwgTExMX1BBUlNFUiwgTExMX1RIUkVBRCwgTExMX1VTRVIsIExMTF9XQVJOLCBNRVRIT0RfREVMRVRFLCBNRVRIT0RfR0VULCBNRVRIT0RfSEVBRCwgTUVUSE9EX09QVElPTlMsIE1FVEhPRF9QQVRDSCwgTUVUSE9EX1BPU1QsIE1FVEhPRF9QVVQsIFJlcXVlc3QsIFJlc3BvbnNlLCBSaW5nYnVmZmVyLCBTb2NrZXQsIFVSTCwgY2xpZW50LCBmZXRjaCwgZ2V0U2Vzc2lvbnMsIGxvZ0xldmVscywgc2VydmVyLCBzZXRMb2cgfSBmcm9tICduZXQnOwppbXBvcnQgeyAgc2V0UmVhZEhhbmRsZXIsIHNldFdyaXRlSGFuZGxlciB9IGZyb20gJ29zJzsKCnNldExvZyhMTExfREVCVUctMSwgKGxldmVsLG1lc3NhZ2UpID0+IGNvbnNvbGUubG9nKGxvZ0xldmVsc1tsZXZlbF0ucGFkRW5kKDEwKSxtZXNzYWdlKSkKCnNlcnZlcih7CiAgaG9zdDogJzAuMC4wLjAnLAogIHBvcnQ6ICc4NzY1JywKICBibG9jazogZmFsc2UsCiAgdGxzOiB0cnVlLAogIHByb3RvY29sOiAnaHR0cCcsCiAgbW91bnRzOiB7CiAgICAnLyc6IFsnLycsICcuJywgJ2luZGV4Lmh0bWwnXSwKICAgICcvNDA0Lmh0bWwnOiBmdW5jdGlvbiogKHJlcSwgcmVzKSB7CiAgICAgIGxvZygnLzQwNC5odG1sJywgeyByZXEsIHJlcyB9KTsKICAgICAgeWllbGQgJzxodG1sPjxoZWFkPjxtZXRhIGNoYXJzZXQ9dXRmLTggaHR0cC1lcXVpdj0iQ29udGVudC1MYW5ndWFnZSIgY29udGVudD0iZW4iLz48bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSIvZXJyb3IuY3NzIi8+PC9oZWFkPjxib2R5PjxoMT40MDM8L2gxPjwvYm9keT48L2h0bWw+JzsKICAgIH0sCiAgICAqZ2VuZXJhdG9yKHJlcSwgcmVzKSB7CiAgICAgIGxvZygnL2dlbmVyYXRvcicsIHsgcmVxLCByZXMgfSk7CiAgICAgIHlpZWxkICdUaGlzJzsKICAgICAgeWllbGQgJyAnOwogICAgICB5aWVsZCAnaXMnOwogICAgICB5aWVsZCAnICc7CiAgICAgIHlpZWxkICdhJzsKICAgICAgeWllbGQgJyAnOwogICAgICB5aWVsZCAnZ2VuZXJhdGVkJzsKICAgICAgeWllbGQgJyAnOwogICAgICB5aWVsZCAncmVzcG9uc2UnOwogICAgICB5aWVsZCAnXG4nOwogICAgfQogIH0sCiAgICAgIG9uRmQ6IChmZCwgcmQsIHdyKSA9PiB7CiAgICAgICAgICAvL2xvZygnb25GZCcsIHsgZmQsIHJkLCB3ciB9KTsKICAgICAgICAgIHNldFJlYWRIYW5kbGVyKGZkLCByZCk7CiAgICAgICAgICBzZXRXcml0ZUhhbmRsZXIoZmQsIHdyKTsKICAgICAgICB9LAp9KTsKAAAAAAAAAAA/BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwEAAAAAAACrAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "tests/server.js",
			"settings":
			{
				"buffer_size": 4795,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"contents": "#define _GNU_SOURCE\n#include \"request.h\"\n//#include \"lws-utils.h\"\n//#include \"ringbuffer.h\"\n#include \"headers.h\"\n//#include \"jsutils.h\"\n#include <ctype.h>\n#include <strings.h>\n#include <libwebsockets.h>\n\nRequest* minnet_request_data(JSValueConst);\n\nstatic const char* const method_names[] = {\n    \"GET\",\n    \"POST\",\n    \"OPTIONS\",\n    \"PUT\",\n    \"PATCH\",\n    \"DELETE\",\n    \"CONNECT\",\n    \"HEAD\",\n};\n\nconst char*\nmethod_string(enum http_method m) {\n  if(m >= 0 && m < countof(method_names))\n    return method_names[m];\n  return 0;\n}\n\nint\nmethod_number(const char* name) {\n  int i = 0;\n  if(name)\n    for(i = countof(method_names) - 1; i >= 0; --i)\n      if(!strcasecmp(name, method_names[i]))\n        break;\n  return i;\n}\n\nvoid\nrequest_init(Request* req, URL url, enum http_method method) {\n  // memset(req, 0, sizeof(Request));\n\n  req->url = url;\n  req->method = method;\n  req->body = 0;\n  req->ip = 0;\n  req->read_only = FALSE;\n  req->secure = url_is_tls(url);\n}\n\nRequest*\nrequest_alloc(JSContext* ctx) {\n  Request* ret;\n\n  ret = js_mallocz(ctx, sizeof(Request));\n  ret->ref_count = 1;\n  return ret;\n}\n\nRequest*\nrequest_new(URL url, HTTPMethod method, JSContext* ctx) {\n  Request* req;\n\n  if((req = request_alloc(ctx)))\n    request_init(req, url, method);\n\n  return req;\n}\n\nRequest*\nrequest_dup(Request* req) {\n  ++req->ref_count;\n  return req;\n}\n\nRequest*\nrequest_fromwsi(struct lws* wsi, JSContext* ctx) {\n  Request* ret = 0;\n  HTTPMethod method = wsi_method(wsi);\n  URL url = URL_INIT();\n\n  url_fromwsi(&url, wsi, ctx);\n\n  ret = request_new(url, method, ctx);\n\n  ret->ip = wsi_ipaddr(wsi);\n  ret->secure = wsi_tls(wsi);\n  ret->h2 = wsi_http2(wsi);\n\n  return ret;\n}\n\nvoid\nrequest_clear(Request* req, JSRuntime* rt) {\n  url_free_rt(&req->url, rt);\n  buffer_free(&req->headers);\n  if(req->ip) {\n    js_free_rt(rt, req->ip);\n    req->ip = 0;\n  }\n  if(req->body)\n    generator_destroy(&req->body);\n}\n\nvoid\nrequest_free(Request* req, JSRuntime* rt) {\n  if(--req->ref_count == 0) {\n    request_clear(req, rt);\n    js_free_rt(rt, req);\n  }\n}\n\nRequest*\nrequest_from(int argc, JSValueConst argv[], JSContext* ctx) {\n  Request* req = 0;\n  URL url = {0, 0, 0, 0};\n\n  if(JS_IsObject(argv[0]) && (req = minnet_request_data(argv[0]))) {\n    req = request_dup(req);\n  } else {\n    url_fromvalue(&url, argv[0], ctx);\n\n    if(url_valid(url))\n      req = request_new(url, METHOD_GET, ctx);\n  }\n\n  if(req)\n    if(argc >= 2 && JS_IsObject(argv[1])) {\n      JSValue headers = JS_GetPropertyStr(ctx, argv[1], \"headers\");\n      if(!JS_IsUndefined(headers))\n        headers_fromobj(&req->headers, headers, ctx);\n\n      JS_FreeValue(ctx, headers);\n    }\n\n  return req;\n}\n",
			"file": "lib/request.c",
			"file_size": 2649,
			"file_write_time": 133243697471911470,
			"settings":
			{
				"buffer_size": 2649,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "FD"
					},
					"AgAAANgIAAAAAAAA2QgAAAAAAAAAAAAA2QgAAAAAAADaCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AgAAAAAAADYCAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					2,
					"left_delete",
					null,
					"AgAAANkIAAAAAAAA2QgAAAAAAAABAAAARNgIAAAAAAAA2AgAAAAAAAABAAAARg",
					"AQAAAAAAAAABAAAA2ggAAAAAAADaCAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "Searching 777 files for \"defprot_callback\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-net/src/minnet-server.c:\n   36      {\"ws\", ws_server_callback, sizeof(struct session_data), 1024, 0, NULL, 0},\n   37      {\"http\", http_server_callback, sizeof(struct session_data), 1024, 0, NULL, 0},\n   38:     /* {\"defprot\", defprot_callback, sizeof(struct session_data), 0},\n   39       {\"proxy-ws-raw-ws\", proxy_server_callback, 0, 1024, 0, NULL, 0},\n   40       {\"proxy-ws-raw-raw\", proxy_rawclient_callback, 0, 1024, 0, NULL, 0},\n   ..\n  513  \n  514  int\n  515: defprot_callback(struct lws* wsi, enum lws_callback_reasons reason, void* user, void* in, size_t len) {\n  516    MinnetServer* server = /*session ? session->server :*/ lws_context_user(lws_get_context(wsi));\n  517  \n  518:   // if(!lws_reason_poll(reason)) printf(\"defprot_callback %s %p %p %zu\\n\", lws_callback_name(reason), user, in, len);\n  519  \n  520    switch(reason) {\n\n~/Projects/plot-cv/quickjs/qjs-net/src/minnet-server.h:\n   27  void server_certificate(struct context*, JSValue);\n   28  JSValue minnet_server(JSContext*, JSValue, int, JSValue argv[]);\n   29: int defprot_callback(struct lws*, enum lws_callback_reasons, void*, void* in, size_t len);\n   30  int ws_server_callback(struct lws*, enum lws_callback_reasons, void*, void* in, size_t len);\n   31  \n\n4 matches across 2 files\n\n\nSearching 777 files for \"response_clear\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-net/lib/response.c:\n   28  \n   29  void\n   30: response_clear(struct http_response* resp, JSContext* ctx) {\n   31    url_free(&resp->url, ctx);\n   32    if(resp->type) {\n   ..\n   40  \n   41  void\n   42: response_clear_rt(struct http_response* resp, JSRuntime* rt) {\n   43    url_free_rt(&resp->url, rt);\n   44    if(resp->type) {\n   ..\n   54  response_free(struct http_response* resp, JSContext* ctx) {\n   55    if(--resp->ref_count == 0) {\n   56:     response_clear(resp, ctx);\n   57      js_free(ctx, resp);\n   58    }\n   ..\n   62  response_free_rt(struct http_response* resp, JSRuntime* rt) {\n   63    if(--resp->ref_count == 0) {\n   64:     response_clear_rt(resp, rt);\n   65      js_free_rt(rt, resp);\n   66    }\n\n~/Projects/plot-cv/quickjs/qjs-net/lib/response.h:\n   24  void response_init(struct http_response*, struct url, int32_t, char* status_text, BOOL headers_sent, char* type);\n   25  struct http_response* response_dup(struct http_response*);\n   26: void response_clear(struct http_response*, JSContext*);\n   27: void response_clear_rt(struct http_response*, JSRuntime*);\n   28  void response_free(struct http_response*, JSContext*);\n   29  void response_free_rt(struct http_response*, JSRuntime*);\n\n6 matches across 2 files\n\n\nSearching 777 files for \"response_free\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-net/remove-functions.c:\n 1100    HTTPAsyncResolveClosure* closure = ptr;\n 1101    if(--closure->ref_count == 0) {\n 1102:     response_free(closure->resp, closure->ctx);\n 1103      js_free(closure->ctx, ptr);\n 1104    }\n\n~/Projects/plot-cv/quickjs/qjs-net/src/minnet-client-http.c:\n  318  \n  319                if(client->response) {\n  320:                 response_free(client->response, client->on.http.ctx);\n  321                  client->response = 0;\n  322                }\n  323                if(opaque->resp) {\n  324:                 response_free(opaque->resp, client->on.http.ctx);\n  325                  opaque->resp = 0;\n  326                }\n\n~/Projects/plot-cv/quickjs/qjs-net/src/minnet-server-http.c:\n  353    if(--closure->ref_count == 0) {\n  354      if(closure->resp)\n  355:       response_free(closure->resp, closure->ctx);\n  356  \n  357      js_free(closure->ctx, ptr);\n\n~/Projects/plot-cv/quickjs/qjs-net/src/minnet-response.c:\n  379  \n  380    if((res = minnet_response_data(val)))\n  381:     response_free_rt(res, rt);\n  382  }\n  383  \n\n~/Projects/plot-cv/quickjs/qjs-net/lib/response.c:\n   52  \n   53  void\n   54: response_free(struct http_response* resp, JSContext* ctx) {\n   55    if(--resp->ref_count == 0) {\n   56      response_clear(resp, ctx);\n   ..\n   60  \n   61  void\n   62: response_free_rt(struct http_response* resp, JSRuntime* rt) {\n   63    if(--resp->ref_count == 0) {\n   64      response_clear_rt(resp, rt);\n\n~/Projects/plot-cv/quickjs/qjs-net/lib/response.h:\n   26  void response_clear(struct http_response*, JSContext*);\n   27  void response_clear_rt(struct http_response*, JSRuntime*);\n   28: void response_free(struct http_response*, JSContext*);\n   29: void response_free_rt(struct http_response*, JSRuntime*);\n   30  \n   31  static inline Generator*\n\n~/Projects/plot-cv/quickjs/qjs-net/lib/opaque.c:\n   25      struct http_response* resp = opaque->resp;\n   26      opaque->resp = 0;\n   27:     response_free_rt(resp, rt);\n   28    }\n   29    if(opaque->form_parser) {\n\n10 matches across 7 files\n\n\nSearching 777 files for \"response_clear\\(\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-net/remove-functions.c:\n 1327  response_free(struct http_response* resp, JSContext* ctx) {\n 1328    if(--resp->ref_count == 0) {\n 1329:     response_clear(resp, ctx);\n 1330      js_free(ctx, resp);\n 1331    }\n ....\n 1333  \n 1334  void\n 1335: response_clear(struct http_response* resp, JSContext* ctx) {\n 1336    url_free(&resp->url, ctx);\n 1337    if(resp->type) {\n\n~/Projects/plot-cv/quickjs/qjs-net/lib/response.c:\n   27  }\n   28  void\n   29: response_clear(struct http_response* resp, JSRuntime* rt) {\n   30    url_free_rt(&resp->url, rt);\n   31    if(resp->type) {\n   ..\n   41  response_free(struct http_response* resp, JSRuntime* rt) {\n   42    if(--resp->ref_count == 0) {\n   43:     response_clear(resp, rt);\n   44      js_free_rt(rt, resp);\n   45    }\n\n~/Projects/plot-cv/quickjs/qjs-net/lib/response.h:\n   24  void response_init(struct http_response*, struct url, int32_t, char* status_text, BOOL headers_sent, char* type);\n   25  struct http_response* response_dup(struct http_response*);\n   26: void response_clear(struct http_response*, JSRuntime*);\n   27  void response_free(struct http_response*, JSRuntime*);\n   28  \n\n5 matches across 3 files\n\n\nSearching 777 files for \"struct url\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-net/remove-functions.c:\n  238  }\n  239  \n  240: struct url\n  241  url_create(const char* str, JSContext* ctx) {\n  242:   struct url ret = {1, 0, 0, 0, 0};\n  243    url_parse(&ret, str, ctx);\n  244    return ret;\n  ...\n  705  request_fromurl(const char* uri, JSContext* ctx) {\n  706    HTTPMethod method = METHOD_GET;\n  707:   struct url url = url_create(uri, ctx);\n  708  \n  709    return request_new(url, method, ctx);\n  ...\n  780  \n  781  int\n  782: url_connect(struct url* url, struct lws_context* context, struct lws** p_wsi) {\n  783    struct lws_client_connect_info i;\n  784  \n  ...\n  792  \n  793  char*\n  794: url_location(const struct url url, JSContext* ctx) {\n  795    const char* query;\n  796    if((query = url_query(url)))\n  ...\n  800  \n  801  void\n  802: url_dump(const char* n, struct url const* url) {\n  803    fprintf(stderr, \"%s{ protocol = %s, host = %s, port = %u, path = %s }\\n\", n, url->protocol, url->host, url->port, url->path);\n  804    fflush(stderr);\n\n~/Projects/plot-cv/quickjs/qjs-net/src/minnet-url.h:\n    6  typedef enum protocol MinnetProtocol;\n    7  \n    8: typedef struct url MinnetURL;\n    9  \n   10  MinnetURL* minnet_url_data(JSValueConst);\n\n~/Projects/plot-cv/quickjs/qjs-net/lib/response.c:\n    9  \n   10  void\n   11: response_init(Response* resp, struct url url, int32_t status, char* status_text, BOOL headers_sent, char* type) {\n   12    // memset(resp, 0, sizeof(Response));\n   13  \n\n~/Projects/plot-cv/quickjs/qjs-net/lib/response.h:\n   14    int ref_count;\n   15    bool read_only : 1, headers_sent : 1, compress : 1;\n   16:   struct url url;\n   17    char* type;\n   18    int status;\n   ..\n   22  } Response;\n   23  \n   24: void      response_init(Response*, struct url url, int32_t status, char* status_text, BOOL headers_sent, char* type);\n   25  Response* response_dup(Response*);\n   26  void      response_clear(Response*, JSRuntime* rt);\n\n~/Projects/plot-cv/quickjs/qjs-net/lib/request.c:\n   40  \n   41  void\n   42: request_init(Request* req, struct url url, enum http_method method) {\n   43    // memset(req, 0, sizeof(Request));\n   44  \n   ..\n   61  \n   62  Request*\n   63: request_new(struct url url, HTTPMethod method, JSContext* ctx) {\n   64    Request* req;\n   65  \n   ..\n   80    Request* ret = 0;\n   81    HTTPMethod method = wsi_method(wsi);\n   82:   struct url url = URL_INIT();\n   83  \n   84    url_fromwsi(&url, wsi, ctx);\n   ..\n  116  request_from(int argc, JSValueConst argv[], JSContext* ctx) {\n  117    Request* req = 0;\n  118:   struct url url = {0, 0, 0, 0};\n  119  \n  120    if(JS_IsObject(argv[0]) && (req = minnet_request_data(argv[0]))) {\n\n~/Projects/plot-cv/quickjs/qjs-net/lib/url.h:\n   23  BOOL protocol_is_tls(enum protocol);\n   24  \n   25: typedef struct url {\n   26    int ref_count;\n   27    const char* protocol;\n   ..\n   31  \n   32  #define URL_INIT() \\\n   33:   (struct url) { 1, 0, 0, 0, 0 }\n   34  \n   35  enum protocol protocol_number(const char*);\n   ..\n   60  \n   61  static inline const char*\n   62: url_path(const struct url url) {\n   63    return url.path;\n   64  }\n   65  \n   66  static inline BOOL\n   67: url_valid(const struct url url) {\n   68    return url.host || url.path;\n   69  }\n   70  \n   71  static inline enum protocol\n   72: url_protocol(const struct url url) {\n   73    return protocol_number(url.protocol);\n   74  }\n   75  \n   76  static inline BOOL\n   77: url_is_tls(const struct url url) {\n   78    return url.protocol ? protocol_is_tls(protocol_number(url.protocol)) : FALSE;\n   79  }\n   80  \n   81: static inline struct url*\n   82: url_dup(struct url* url) {\n   83    ++url->ref_count;\n   84    return url;\n   85  }\n   86  \n   87: static inline struct url\n   88: url_clone(struct url url, JSContext* ctx) {\n   89:   return (struct url){\n   90        .ref_count = 1,\n   91        .protocol = url.protocol,\n   ..\n   97  \n   98  static inline void\n   99: url_copy(struct url* url, const struct url other, JSContext* ctx) {\n  100    url->protocol = other.protocol;\n  101    url->host = other.host ? js_strdup(ctx, other.host) : 0;\n  ...\n  105  \n  106  static inline char*\n  107: url_string(struct url const* url) {\n  108    static char buf[4096];\n  109  \n  ...\n  113  \n  114  static inline BOOL\n  115: url_set_path(struct url* url, const char* path, JSContext* ctx) {\n  116    return url_set_path_len(url, path, strlen(path), ctx);\n  117  }\n  118  \n  119  static inline BOOL\n  120: url_set_query(struct url* url, const char* query, JSContext* ctx) {\n  121    return url_set_query_len(url, query, strlen(query), ctx);\n  122  }\n\n~/Projects/plot-cv/quickjs/qjs-net/lib/request.h:\n   14    BOOL read_only, secure, h2;\n   15    enum http_method method;\n   16:   struct url url;\n   17    ByteBuffer headers;\n   18    Generator* body;\n   ..\n   23  int method_number(const char*);\n   24  \n   25: void request_init(Request*, struct url url, enum http_method method);\n   26  Request* request_alloc(JSContext*);\n   27: Request* request_new(struct url, HTTPMethod method, JSContext* ctx);\n   28  Request* request_dup(Request*);\n   29  Request* request_fromwsi(struct lws*, JSContext* ctx);\n\n33 matches across 7 files\n\n\nSearching 777 files for \"form_parser_free\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-net/src/minnet-form-parser.c:\n   77  \n   78      if(opaque->form_parser)\n   79:       form_parser_free(opaque->form_parser, ctx);\n   80      opaque->form_parser = fp;\n   81    }\n   ..\n  183  \n  184    if((fp = minnet_form_parser_data(val)))\n  185:     form_parser_free_rt(fp, rt);\n  186  }\n  187  \n\n~/Projects/plot-cv/quickjs/qjs-net/lib/form-parser.h:\n   24  void form_parser_clear(FormParser*, JSContext* ctx);\n   25  void form_parser_clear_rt(FormParser*, JSRuntime* rt);\n   26: void form_parser_free(FormParser*, JSContext* ctx);\n   27: void form_parser_free_rt(FormParser*, JSRuntime* rt);\n   28  const char* form_parser_param_name(FormParser*, int index);\n   29  bool form_parser_param_valid(FormParser*, int index);\n\n~/Projects/plot-cv/quickjs/qjs-net/lib/opaque.c:\n   28    }\n   29    if(opaque->form_parser) {\n   30:     form_parser_free_rt(opaque->form_parser, rt);\n   31      opaque->form_parser = 0;\n   32    }\n\n~/Projects/plot-cv/quickjs/qjs-net/lib/form-parser.c:\n  144  \n  145  void\n  146: form_parser_free(FormParser* fp, JSContext* ctx) {\n  147    if(--fp->ref_count == 0) {\n  148      ws_free(fp->ws, ctx);\n  ...\n  153  \n  154  void\n  155: form_parser_free_rt(FormParser* fp, JSRuntime* rt) {\n  156    if(--fp->ref_count == 0) {\n  157      ws_free_rt(fp->ws, rt);\n\n7 matches across 4 files\n",
			"settings":
			{
				"buffer_size": 12714,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "src/minnet-form-parser.c",
			"settings":
			{
				"buffer_size": 11771,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAI4KAAAAAAAAjwoAAAAAAAAAAAAAjwoAAAAAAACVCgAAAAAAAAAAAACPCgAAAAAAAI8KAAAAAAAABgAAACAgICAgII8KAAAAAAAAkwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgoAAAAAAACOCgAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAYwoAAAAAAABzCgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/minnet-response.c",
			"settings":
			{
				"buffer_size": 11100,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAJCMAAAAAAAAkIwAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAJCMAAAAAAAAkIwAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAJCMAAAAAAAAkIwAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAJCMAAAAAAAAkIwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/minnet-server.c",
			"settings":
			{
				"buffer_size": 18474,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAEsDAAAAAAAATAMAAAAAAAAAAAAATAMAAAAAAABMAwAAAAAAAAUAAAAgICAvKg",
					"AQAAAAAAAAABAAAAUAMAAAAAAABLAwAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "(("
					},
					"AgAAAE4DAAAAAAAATwMAAAAAAAAAAAAATwMAAAAAAABQAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgMAAAAAAABOAwAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					2,
					"left_delete",
					null,
					"AgAAAE8DAAAAAAAATwMAAAAAAAABAAAAKE4DAAAAAAAATgMAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAUAMAAAAAAABQAwAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					2,
					"right_delete",
					null,
					"AgAAANoFAAAAAAAA2gUAAAAAAAABAAAAL9oFAAAAAAAA2gUAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAA2gUAAAAAAADaBQAAAAAAAAAAAAAAAEJA"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "/*"
					},
					"AgAAAB4GAAAAAAAAHwYAAAAAAAAAAAAAHwYAAAAAAAAgBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgYAAAAAAAAeBgAAAAAAAAAAAAAAAEJA"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "*/"
					},
					"AgAAAKcDAAAAAAAAqAMAAAAAAAAAAAAAqAMAAAAAAACpAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwMAAAAAAACnAwAAAAAAAAAAAAAAAEJA"
				],
				[
					32,
					2,
					"left_delete",
					null,
					"AgAAAKgDAAAAAAAAqAMAAAAAAAABAAAAL6cDAAAAAAAApwMAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAqQMAAAAAAACpAwAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "/*"
					},
					"AgAAAKcDAAAAAAAAqAMAAAAAAAAAAAAAqAMAAAAAAACpAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwMAAAAAAACnAwAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAqQMAAAAAAACpAwAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAqQMAAAAAAACpAwAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAqQMAAAAAAACpAwAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAqSAAAI2luY2x1ZGUgImpzdXRpbHMuaCIKI2luY2x1ZGUgIm1pbm5ldC13ZWJzb2NrZXQuaCIKI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXIuaCIKI2luY2x1ZGUgIm1pbm5ldC1jbGllbnQuaCIKI2luY2x1ZGUgIm1pbm5ldC1zZXJ2ZXItaHR0cC5oIgojaW5jbHVkZSAibWlubmV0LXNlcnZlci1wcm94eS5oIgojaW5jbHVkZSAibWlubmV0LXJlc3BvbnNlLmgiCiNpbmNsdWRlICJtaW5uZXQtcmVxdWVzdC5oIgojaW5jbHVkZSAiY2xvc3VyZS5oIgojaW5jbHVkZSA8bGlzdC5oPgojaW5jbHVkZSA8cXVpY2tqcy1saWJjLmg+CiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CgojaW5jbHVkZSAiLi4vbGlid2Vic29ja2V0cy9wbHVnaW5zL3Jhdy1wcm94eS9wcm90b2NvbF9sd3NfcmF3X3Byb3h5LmMiCiNpbmNsdWRlICIuLi9saWJ3ZWJzb2NrZXRzL3BsdWdpbnMvZGVhZGRyb3AvcHJvdG9jb2xfbHdzX2RlYWRkcm9wLmMiCiNpbmNsdWRlICIuLi9saWJ3ZWJzb2NrZXRzL3BsdWdpbnMvcHJvdG9jb2xfbHdzX21pcnJvci5jIgojaW5jbHVkZSAibWlubmV0LXBsdWdpbi1icm9rZXIuYyIKCmludCBwcm94eV9jYWxsYmFjayhzdHJ1Y3QgbHdzKiwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucywgdm9pZCosIHZvaWQqLCBzaXplX3QpOwoKc3RhdGljIHN0cnVjdCBsd3NfcHJvdG9jb2xzIHByb3RvY29sc1tdID0gewogICAgeyJ3cyIsIHdzX3NlcnZlcl9jYWxsYmFjaywgc2l6ZW9mKHN0cnVjdCBzZXNzaW9uX2RhdGEpLCAxMDI0LCAwLCBOVUxMLCAwfSwKICAgIHsiaHR0cCIsIGh0dHBfc2VydmVyX2NhbGxiYWNrLCBzaXplb2Yoc3RydWN0IHNlc3Npb25fZGF0YSksIDEwMjQsIDAsIE5VTEwsIDB9LAogICAgeyJkZWZwcm90IiwgbHdzX2NhbGxiYWNrX2h0dHBfZHVtbXksIHNpemVvZihzdHJ1Y3Qgc2Vzc2lvbl9kYXRhKSwgMTAyNCwgMCwgTlVMTCwgMH0sCiAgICAvKiAgeyJwcm94eS13cy1yYXctd3MiLCBwcm94eV9zZXJ2ZXJfY2FsbGJhY2ssIDAsIDEwMjQsIDAsIE5VTEwsIDB9LAogICAgICB7InByb3h5LXdzLXJhdy1yYXciLCBwcm94eV9yYXdjbGllbnRfY2FsbGJhY2ssIDAsIDEwMjQsIDAsIE5VTEwsIDB9LAogICovIC8vIHsicHJveHktd3MiLCBwcm94eV9jYWxsYmFjaywgMCwgMTAyNCwgMCwgTlVMTCwgMH0sCiAgICBNSU5ORVRfUExVR0lOX0JST0tFUihicm9rZXIpLAogICAgTFdTX1BMVUdJTl9QUk9UT0NPTF9ERUFERFJPUCwKICAgIC8vIExXU19QTFVHSU5fUFJPVE9DT0xfUkFXX1BST1hZLAogICAgTFdTX1BMVUdJTl9QUk9UT0NPTF9NSVJST1IsCiAgICB7MH0sCn07CgpzdGF0aWMgc3RydWN0IGx3c19wcm90b2NvbHMgcHJvdG9jb2xzMltdID0gewogICAgeyJ3cyIsIHdzX3NlcnZlcl9jYWxsYmFjaywgc2l6ZW9mKHN0cnVjdCBzZXNzaW9uX2RhdGEpLCAxMDI0LCAwLCBOVUxMLCAwfSwKICAgIHsiaHR0cCIsIGh0dHBfc2VydmVyX2NhbGxiYWNrLCBzaXplb2Yoc3RydWN0IHNlc3Npb25fZGF0YSksIDEwMjQsIDAsIE5VTEwsIDB9LAogICAgeyJkZWZwcm90IiwgZGVmcHJvdF9jYWxsYmFjaywgc2l6ZW9mKHN0cnVjdCBzZXNzaW9uX2RhdGEpLCAwfSwKICAgIC8qIHsicHJveHktd3MtcmF3LXdzIiwgcHJveHlfc2VydmVyX2NhbGxiYWNrLCAwLCAxMDI0LCAwLCBOVUxMLCAwfSwKICAgICB7InByb3h5LXdzLXJhdy1yYXciLCBwcm94eV9yYXdjbGllbnRfY2FsbGJhY2ssIDAsIDEwMjQsIDAsIE5VTEwsIDB9LAogKi8gLy8gIHsicHJveHktd3MiLCBwcm94eV9jYWxsYmFjaywgc2l6ZW9mKHN0cnVjdCBzZXNzaW9uX2RhdGEpLCAxMDI0LCAwLCBOVUxMLCAwfSwKICAgIE1JTk5FVF9QTFVHSU5fQlJPS0VSKGJyb2tlciksCiAgICAvLyAgTFdTX1BMVUdJTl9QUk9UT0NPTF9SQVdfUFJPWFksCiAgICBMV1NfUExVR0lOX1BST1RPQ09MX01JUlJPUiwKICAgIHswLCAwfSwKfTsKCnN0YXRpYyBjb25zdCBzdHJ1Y3QgbHdzX2h0dHBfbW91bnQgbW91bnQgPSB7CiAgICAvKiAubW91bnRfbmV4dCAqLyBOVUxMLCAgLyogbGlua2VkLWxpc3QgIm5leHQiICovCiAgICAvKiAubW91bnRwb2ludCAqLyAiLyIsICAgLyogbW91bnRwb2ludCBVUkwgKi8KICAgIC8qIC5vcmlnaW4gKi8gIi4iLCAgICAgICAvKiBzZXJ2ZSBmcm9tIGRpciAqLwogICAgLyogLmRlZiAqLyAiaW5kZXguaHRtbCIsIC8qIGRlZmF1bHQgZmlsZW5hbWUgKi8KICAgIC8qIC5wcm90b2NvbCAqLyBOVUxMLAogICAgLyogLmNnaWVudiAqLyBOVUxMLAogICAgLyogLmV4dHJhX21pbWV0eXBlcyAqLyBOVUxMLAogICAgLyogLmludGVycHJldCAqLyBOVUxMLAogICAgLyogLmNnaV90aW1lb3V0ICovIDAsCiAgICAvKiAuY2FjaGVfbWF4X2FnZSAqLyAwLAogICAgLyogLmF1dGhfbWFzayAqLyAwLAogICAgLyogLmNhY2hlX3JldXNhYmxlICovIDAsCiAgICAvKiAuY2FjaGVfcmV2YWxpZGF0ZSAqLyAwLAogICAgLyogLmNhY2hlX2ludGVybWVkaWFyaWVzICovIDAsCiAgICAvKiAub3JpZ2luX3Byb3RvY29sICovIExXU01QUk9fRklMRSwgLyogZmlsZXMgaW4gYSBkaXIgKi8KICAgIC8qIC5tb3VudHBvaW50X2xlbiAqLyAxLCAgICAgICAgICAgICAvKiBjaGFyIGNvdW50ICovCiAgICAvKiAuYmFzaWNfYXV0aF9sb2dpbl9maWxlICovIE5VTEwsCn07CgpzdGF0aWMgY29uc3Qgc3RydWN0IGx3c19leHRlbnNpb24gZXh0ZW5zaW9uX3BtZFtdID0gewogICAgewogICAgICAgICJwZXJtZXNzYWdlLWRlZmxhdGUiLAogICAgICAgIGx3c19leHRlbnNpb25fY2FsbGJhY2tfcG1fZGVmbGF0ZSwKICAgICAgICAicGVybWVzc2FnZS1kZWZsYXRlIgogICAgICAgICI7IGNsaWVudF9ub19jb250ZXh0X3Rha2VvdmVyIgogICAgICAgICI7IGNsaWVudF9tYXhfd2luZG93X2JpdHMiLAogICAgfSwKICAgIHsKICAgICAgICBOVUxMLAogICAgICAgIE5VTEwsCiAgICAgICAgTlVMTCwKICAgIH0sCn07CgpzdGF0aWMgTWlubmV0U2VydmVyKgpzZXJ2ZXJfbmV3KEpTQ29udGV4dCogY3R4KSB7CiAgTWlubmV0U2VydmVyKiBzZXJ2ZXI7CgogIGlmKCEoc2VydmVyID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihNaW5uZXRTZXJ2ZXIpKSkpCiAgICByZXR1cm4gKHZvaWQqKS0xOwoKICBzZXJ2ZXItPmNvbnRleHQuZXJyb3IgPSBKU19OVUxMOwogIHNlcnZlci0+Y29udGV4dC5qcyA9IGN0eDsKICBzZXJ2ZXItPmNvbnRleHQuaW5mbyA9IChzdHJ1Y3QgbHdzX2NvbnRleHRfY3JlYXRpb25faW5mbyl7LnByb3RvY29scyA9IHByb3RvY29sczIsIC51c2VyID0gc2VydmVyfTsKCiAgY29udGV4dF9hZGQoJnNlcnZlci0+Y29udGV4dCk7CgogIHJldHVybiBzZXJ2ZXI7Cn0KCnN0YXRpYyBCT09MCnNlcnZlcl9pbml0KE1pbm5ldFNlcnZlciogc2VydmVyKSB7CiAgaWYoIShzZXJ2ZXItPmNvbnRleHQubHdzID0gbHdzX2NyZWF0ZV9jb250ZXh0KCZzZXJ2ZXItPmNvbnRleHQuaW5mbykpKSB7CiAgICBsd3NsX2VycigibGlid2Vic29ja2V0cyBpbml0IGZhaWxlZFxuIik7CiAgICByZXR1cm4gRkFMU0U7CiAgfQoKICBpZighbHdzX2NyZWF0ZV92aG9zdChzZXJ2ZXItPmNvbnRleHQubHdzLCAmc2VydmVyLT5jb250ZXh0LmluZm8pKSB7CiAgICBsd3NsX2VycigiRmFpbGVkIHRvIGNyZWF0ZSB2aG9zdFxuIik7CiAgICByZXR1cm4gRkFMU0U7CiAgfQoKICByZXR1cm4gVFJVRTsKfQoKdm9pZApzZXJ2ZXJfZnJlZShNaW5uZXRTZXJ2ZXIqIHNlcnZlcikgewogIEpTQ29udGV4dCogY3R4ID0gc2VydmVyLT5jb250ZXh0LmpzOwoKICBpZigtLXNlcnZlci0+cmVmX2NvdW50ID09IDApIHsKICAgIGpzX3Byb21pc2VfZnJlZShjdHgsICZzZXJ2ZXItPnByb21pc2UpOwoKICAgIGNvbnRleHRfY2xlYXIoJnNlcnZlci0+Y29udGV4dCk7CgogICAganNfZnJlZShjdHgsIHNlcnZlcik7CiAgfQp9Cgp2b2lkCnNlcnZlcl9tb3VudHMoTWlubmV0U2VydmVyKiBzZXJ2ZXIsIEpTVmFsdWVDb25zdCBvcHRfbW91bnRzKSB7CiAgSlNDb250ZXh0KiBjdHggPSBzZXJ2ZXItPmNvbnRleHQuanM7CiAgc3RydWN0IGx3c19jb250ZXh0X2NyZWF0aW9uX2luZm8qIGluZm8gPSAmc2VydmVyLT5jb250ZXh0LmluZm87CiAgTWlubmV0SHR0cE1vdW50KiogbSA9IChNaW5uZXRIdHRwTW91bnQqKikmaW5mby0+bW91bnRzOwoKICAqbSA9IDA7CgogIGlmKEpTX0lzQXJyYXkoY3R4LCBvcHRfbW91bnRzKSkgewogICAgdWludDMyX3QgaTsKICAgIGZvcihpID0gMDs7IGkrKykgewogICAgICBNaW5uZXRIdHRwTW91bnQqIG1vdW50OwogICAgICBKU1ZhbHVlIG1vdW50dmFsID0gSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCBvcHRfbW91bnRzLCBpKTsKICAgICAgaWYoSlNfSXNVbmRlZmluZWQobW91bnR2YWwpKQogICAgICAgIGJyZWFrOwogICAgICBtb3VudCA9IG1vdW50X25ldyhjdHgsIG1vdW50dmFsLCAwKTsKICAgICAgbW91bnQtPmV4dHJhX21pbWV0eXBlcyA9IHNlcnZlci0+bWltZXR5cGVzOwogICAgICBtb3VudC0+cHJvID0gImh0dHAiOwogICAgICBBREQobSwgbW91bnQsIG5leHQpOwogICAgfQogIH0gZWxzZSBpZihKU19Jc09iamVjdChvcHRfbW91bnRzKSkgewogICAgSlNQcm9wZXJ0eUVudW0qIHRtcF90YWI7CiAgICB1aW50MzJfdCBpLCB0bXBfbGVuID0gMDsKICAgIEpTX0dldE93blByb3BlcnR5TmFtZXMoY3R4LCAmdG1wX3RhYiwgJnRtcF9sZW4sIG9wdF9tb3VudHMsIEpTX0dQTl9FTlVNX09OTFkgfCBKU19HUE5fU1RSSU5HX01BU0sgfCBKU19HUE5fU1lNQk9MX01BU0spOwoKICAgIGZvcihpID0gMDsgaSA8IHRtcF9sZW47IGkrKykgewogICAgICBNaW5uZXRIdHRwTW91bnQqIG1vdW50OwogICAgICBKU0F0b20gcHJvcCA9IHRtcF90YWJbaV0uYXRvbTsKICAgICAgY29uc3QgY2hhciogbmFtZSA9IEpTX0F0b21Ub0NTdHJpbmcoY3R4LCBwcm9wKTsKICAgICAgSlNWYWx1ZSBtb3VudHZhbCA9IEpTX0dldFByb3BlcnR5KGN0eCwgb3B0X21vdW50cywgcHJvcCk7CiAgICAgIG1vdW50ID0gbW91bnRfbmV3KGN0eCwgbW91bnR2YWwsIG5hbWUpOwogICAgICBtb3VudC0+ZXh0cmFfbWltZXR5cGVzID0gc2VydmVyLT5taW1ldHlwZXM7CiAgICAgIG1vdW50LT5wcm8gPSAiaHR0cCI7CiAgICAgIEFERChtLCBtb3VudCwgbmV4dCk7CiAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgbmFtZSk7CiAgICB9CiAgfQp9Cgp2b2lkCnNlcnZlcl9jZXJ0aWZpY2F0ZShzdHJ1Y3QgY29udGV4dCogY29udGV4dCwgSlNWYWx1ZUNvbnN0IG9wdGlvbnMpIHsKICBzdHJ1Y3QgbHdzX2NvbnRleHRfY3JlYXRpb25faW5mbyogaW5mbyA9ICZjb250ZXh0LT5pbmZvOwogIEpTQ29udGV4dCogY3R4ID0gY29udGV4dC0+anM7CgogIGNvbnRleHQtPmNydCA9IEpTX0dldFByb3BlcnR5U3RyKGNvbnRleHQtPmpzLCBvcHRpb25zLCAic3NsQ2VydCIpOwogIGNvbnRleHQtPmtleSA9IEpTX0dldFByb3BlcnR5U3RyKGNvbnRleHQtPmpzLCBvcHRpb25zLCAic3NsUHJpdmF0ZUtleSIpOwogIGNvbnRleHQtPmNhID0gSlNfR2V0UHJvcGVydHlTdHIoY29udGV4dC0+anMsIG9wdGlvbnMsICJzc2xDQSIpOwoKICBpZihKU19Jc1N0cmluZyhjb250ZXh0LT5jcnQpKSB7CiAgICBpbmZvLT5zc2xfY2VydF9maWxlcGF0aCA9IGpzX3Rvc3RyaW5nKGN0eCwgY29udGV4dC0+Y3J0KTsKICAgIERFQlVHKCJzZXJ2ZXIgU1NMIGNlcnRpZmljYXRlIGZpbGU6ICVzXG4iLCBpbmZvLT5zc2xfY2VydF9maWxlcGF0aCk7CiAgfSBlbHNlIHsKICAgIGluZm8tPnNlcnZlcl9zc2xfY2VydF9tZW0gPSBqc190b3B0cnNpemUoY3R4LCAmaW5mby0+c2VydmVyX3NzbF9jZXJ0X21lbV9sZW4sIGNvbnRleHQtPmNydCk7CiAgICBERUJVRygic2VydmVyIFNTTCBjZXJ0aWZpY2F0ZSBtZW1vcnk6ICVwIFsldV1cbiIsIGluZm8tPnNlcnZlcl9zc2xfY2VydF9tZW0sIGluZm8tPnNlcnZlcl9zc2xfY2VydF9tZW1fbGVuKTsKICB9CgogIGlmKEpTX0lzU3RyaW5nKGNvbnRleHQtPmtleSkpIHsKICAgIGluZm8tPnNzbF9wcml2YXRlX2tleV9maWxlcGF0aCA9IGpzX3Rvc3RyaW5nKGN0eCwgY29udGV4dC0+a2V5KTsKICAgIERFQlVHKCJzZXJ2ZXIgU1NMIHByaXZhdGUga2V5IGZpbGU6ICVzXG4iLCBpbmZvLT5zc2xfcHJpdmF0ZV9rZXlfZmlsZXBhdGgpOwogIH0gZWxzZSB7CiAgICBpbmZvLT5zZXJ2ZXJfc3NsX3ByaXZhdGVfa2V5X21lbSA9IGpzX3RvcHRyc2l6ZShjdHgsICZpbmZvLT5zZXJ2ZXJfc3NsX3ByaXZhdGVfa2V5X21lbV9sZW4sIGNvbnRleHQtPmtleSk7CiAgICBERUJVRygic2VydmVyIFNTTCBwcml2YXRlIGtleSBtZW1vcnk6ICVwIFsldV1cbiIsIGluZm8tPnNlcnZlcl9zc2xfcHJpdmF0ZV9rZXlfbWVtLCBpbmZvLT5zZXJ2ZXJfc3NsX3ByaXZhdGVfa2V5X21lbV9sZW4pOwogIH0KCiAgaWYoSlNfSXNTdHJpbmcoY29udGV4dC0+Y2EpKSB7CiAgICBpbmZvLT5zc2xfY2FfZmlsZXBhdGggPSBqc190b3N0cmluZyhjdHgsIGNvbnRleHQtPmNhKTsKICAgIERFQlVHKCJzZXJ2ZXIgU1NMIENBIGNlcnRpZmljYXRlIGZpbGU6ICVzXG4iLCBpbmZvLT5zc2xfY2FfZmlsZXBhdGgpOwogIH0gZWxzZSB7CiAgICBpbmZvLT5zZXJ2ZXJfc3NsX2NhX21lbSA9IGpzX3RvcHRyc2l6ZShjdHgsICZpbmZvLT5zZXJ2ZXJfc3NsX2NhX21lbV9sZW4sIGNvbnRleHQtPmNhKTsKICAgIERFQlVHKCJzZXJ2ZXIgU1NMIENBIGNlcnRpZmljYXRlIG1lbW9yeTogJXAgWyV1XVxuIiwgaW5mby0+c2VydmVyX3NzbF9jYV9tZW0sIGluZm8tPnNlcnZlcl9zc2xfY2FfbWVtX2xlbik7CiAgfQp9CgpzdGF0aWMgSlNWYWx1ZQptaW5uZXRfc2VydmVyX2hhbmRsZXIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYywgdm9pZCogcHRyKSB7CiAgcmV0dXJuIEpTX1VOREVGSU5FRDsKfQoKc3RhdGljIEpTVmFsdWUKbWlubmV0X3NlcnZlcl90aW1lb3V0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMsIHZvaWQqIHB0cikgewogIE1pbm5ldFNlcnZlciogc2VydmVyID0gcHRyOwogIHN0cnVjdCBUaW1lckNsb3N1cmUqIHRpbWVyID0gc2VydmVyLT5jb250ZXh0LnRpbWVyOwoKICBpZih0aW1lcikgewogICAgLy8gREVCVUcoInRpbWVvdXQgJSIgUFJJdTMyICJcbiIsIHRpbWVyLT5pbnRlcnZhbCk7CiAgICB1aW50MzJfdCBuZXdfaW50ZXJ2YWw7CgogICAgZG8gewogICAgICBuZXdfaW50ZXJ2YWwgPSBsd3Nfc2VydmljZV9hZGp1c3RfdGltZW91dChzZXJ2ZXItPmNvbnRleHQubHdzLCAxNTAwMCwgMCk7CgogICAgICBpZihuZXdfaW50ZXJ2YWwgPT0gMCkKICAgICAgICBsd3Nfc2VydmljZV90c2koc2VydmVyLT5jb250ZXh0Lmx3cywgLTEsIDApOwogICAgfSB3aGlsZShuZXdfaW50ZXJ2YWwgPT0gMCk7CgogICAgLy8gREVCVUcoIm5ld19pbnRlcnZhbCAlIiBQUkl1MzIgIlxuIiwgbmV3X2ludGVydmFsKTsKICAgIHRpbWVyLT5pbnRlcnZhbCA9IG5ld19pbnRlcnZhbDsKCiAgICBqc190aW1lcl9yZXN0YXJ0KHRpbWVyKTsKCiAgICByZXR1cm4gSlNfRkFMU0U7CiAgfQogIC8vIERFQlVHKCJ0aW1lb3V0ICVzICVzXG4iLCBKU19Ub0NTdHJpbmcoY3R4LCBhcmd2WzBdKSwgSlNfVG9DU3RyaW5nKGN0eCwgYXJndlthcmdjIC0gMV0pKTsKCiAgcmV0dXJuIEpTX1RSVUU7Cn0KCkpTVmFsdWUKbWlubmV0X3NlcnZlcl9jbG9zdXJlKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMsIHZvaWQqIHB0cikgewogIGludCBhcmdpbmQgPSAwLCBhID0gMDsKICBCT09MIGJsb2NrID0gVFJVRSwgaXNfdGxzID0gRkFMU0UsIGlzX2gyID0gVFJVRSwgcGVyX21lc3NhZ2VfZGVmbGF0ZSA9IEZBTFNFOwogIE1pbm5ldFNlcnZlciogc2VydmVyOwogIE1pbm5ldFVSTCB1cmwgPSB7MH07CiAgSlNWYWx1ZSByZXQsIG9wdGlvbnM7CiAgc3RydWN0IGx3c19jb250ZXh0X2NyZWF0aW9uX2luZm8qIGluZm87CgogIGlmKChzZXJ2ZXIgPSBzZXJ2ZXJfbmV3KGN0eCkpID09ICh2b2lkKiktMSkKICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CiAgaWYoIXNlcnZlcikKICAgIHJldHVybiBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCAibHdzIGluaXQgZmFpbGVkIik7CgogIGlmKHB0cikgewogICAgdW5pb24gY2xvc3VyZSogY2xvc3VyZSA9IHB0cjsKICAgIGNsb3N1cmUtPnBvaW50ZXIgPSBzZXJ2ZXI7CiAgICBjbG9zdXJlLT5mcmVlX2Z1bmMgPSAoY2xvc3VyZV9mcmVlX3QqKXNlcnZlcl9mcmVlOwogIH0KCiAgaW5mbyA9ICZzZXJ2ZXItPmNvbnRleHQuaW5mbzsKCiAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCAwKTsKICBvcHRpb25zID0gYXJndlswXTsKCiAgaWYoYXJnYyA+PSAyICYmIEpTX0lzU3RyaW5nKGFyZ3ZbYXJnaW5kXSkpIHsKICAgIGNvbnN0IGNoYXIqIHN0cjsKICAgIGlmKChzdHIgPSBKU19Ub0NTdHJpbmcoY3R4LCBhcmd2W2FyZ2luZF0pKSkgewogICAgICB1cmxfcGFyc2UoJnVybCwgc3RyLCBjdHgpOwogICAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHN0cik7CiAgICB9CiAgICBhcmdpbmQrKzsKICB9CgogIG9wdGlvbnMgPSBhcmd2W2FyZ2luZF07CgogIGlmKCFKU19Jc09iamVjdChvcHRpb25zKSkKICAgIHJldHVybiBKU19UaHJvd1R5cGVFcnJvcihjdHgsICJhcmd1bWVudCAlZCBtdXN0IGJlIG9wdGlvbnMgb2JqZWN0IiwgYXJnaW5kICsgMSk7CgogIEpTVmFsdWUgb3B0X3BvcnQgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9wdGlvbnMsICJwb3J0Iik7CiAgSlNWYWx1ZSBvcHRfaG9zdCA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb3B0aW9ucywgImhvc3QiKTsKICBKU1ZhbHVlIG9wdF9wcm90b2NvbCA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb3B0aW9ucywgInByb3RvY29sIik7CiAgSlNWYWx1ZSBvcHRfdGxzID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcHRpb25zLCAidGxzIik7CiAgSlNWYWx1ZSBvcHRfb25fcG9uZyA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb3B0aW9ucywgIm9uUG9uZyIpOwogIEpTVmFsdWUgb3B0X29uX2Nsb3NlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcHRpb25zLCAib25DbG9zZSIpOwogIEpTVmFsdWUgb3B0X29uX2Nvbm5lY3QgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9wdGlvbnMsICJvbkNvbm5lY3QiKTsKICBKU1ZhbHVlIG9wdF9vbl9tZXNzYWdlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcHRpb25zLCAib25NZXNzYWdlIik7CiAgSlNWYWx1ZSBvcHRfb25fZmQgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9wdGlvbnMsICJvbkZkIik7CiAgSlNWYWx1ZSBvcHRfb25faHR0cCA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb3B0aW9ucywgIm9uSHR0cCIpOwogIEpTVmFsdWUgb3B0X29uX3JlYWQgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9wdGlvbnMsICJvblJlYWQiKTsKICBKU1ZhbHVlIG9wdF9vbl9wb3N0ID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcHRpb25zLCAib25Qb3N0Iik7CiAgSlNWYWx1ZSBvcHRfbW91bnRzID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcHRpb25zLCAibW91bnRzIik7CiAgSlNWYWx1ZSBvcHRfbWltZXR5cGVzID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvcHRpb25zLCAibWltZXR5cGVzIik7CiAgSlNWYWx1ZSBvcHRfZXJyb3JfZG9jdW1lbnQgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9wdGlvbnMsICJlcnJvckRvY3VtZW50Iik7CiAgSlNWYWx1ZSBvcHRfb3B0aW9ucyA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb3B0aW9ucywgIm9wdGlvbnMiKTsKCiAgaWYoIUpTX0lzVW5kZWZpbmVkKG9wdF90bHMpKSB7CgogICAgaXNfdGxzID0gSlNfVG9Cb29sKGN0eCwgb3B0X3Rscyk7CiAgICBERUJVRygiaXNfdGxzID0gJWRcbiIsIGlzX3Rscyk7CiAgfQoKICBpZighSlNfSXNVbmRlZmluZWQob3B0X3BvcnQpKSB7CiAgICBpbnQzMl90IHBvcnQ7CiAgICBKU19Ub0ludDMyKGN0eCwgJnBvcnQsIG9wdF9wb3J0KTsKICAgIHVybC5wb3J0ID0gcG9ydDsKICB9CgogIGlmKEpTX0lzU3RyaW5nKG9wdF9ob3N0KSkKICAgIGpzX3JlcGxhY2Vfc3RyaW5nKGN0eCwgb3B0X2hvc3QsICZ1cmwuaG9zdCk7CiAgaWYoSlNfSXNTdHJpbmcob3B0X3Byb3RvY29sKSkgewogICAgY29uc3QgY2hhciogcHJvdG9jb2w7CgogICAgaWYoKHByb3RvY29sID0gSlNfVG9DU3RyaW5nKGN0eCwgb3B0X3Byb3RvY29sKSkpIHsKICAgICAgdXJsX3NldF9wcm90b2NvbCgmdXJsLCBwcm90b2NvbCk7CiAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgcHJvdG9jb2wpOwogICAgfQogIH0KCiAgQk9PTF9PUFRJT04ob3B0X2Jsb2NrLCAiYmxvY2siLCBibG9jayk7CiAgQk9PTF9PUFRJT04ob3B0X2gyLCAiaDIiLCBpc19oMik7CiAgQk9PTF9PUFRJT04ob3B0X3BtZCwgInBlcm1lc3NhZ2VEZWZsYXRlIiwgcGVyX21lc3NhZ2VfZGVmbGF0ZSk7CgogIEdFVENCKG9wdF9vbl9wb25nLCBzZXJ2ZXItPmNiLnBvbmcpCiAgR0VUQ0Iob3B0X29uX2Nsb3NlLCBzZXJ2ZXItPmNiLmNsb3NlKQogIEdFVENCKG9wdF9vbl9jb25uZWN0LCBzZXJ2ZXItPmNiLmNvbm5lY3QpCiAgR0VUQ0Iob3B0X29uX21lc3NhZ2UsIHNlcnZlci0+Y2IubWVzc2FnZSkKICBHRVRDQihvcHRfb25fZmQsIHNlcnZlci0+Y2IuZmQpCiAgR0VUQ0Iob3B0X29uX2h0dHAsIHNlcnZlci0+Y2IuaHR0cCkKICBHRVRDQihvcHRfb25fcmVhZCwgc2VydmVyLT5jYi5yZWFkKQogIEdFVENCKG9wdF9vbl9wb3N0LCBzZXJ2ZXItPmNiLnBvc3QpCgogIGZvcihpbnQgaSA9IDA7IGkgPCBjb3VudG9mKHByb3RvY29scyk7IGkrKykgcHJvdG9jb2xzW2ldLnVzZXIgPSBjdHg7CgogIGluZm8tPnByb3RvY29scyA9IHByb3RvY29sczI7CgogIGluZm8tPm1vdW50cyA9ICZtb3VudDsKICBpbmZvLT52aG9zdF9uYW1lID0gdXJsX2Zvcm1hdCgoTWlubmV0VVJMKXsuaG9zdCA9IHVybC5ob3N0LCAucG9ydCA9IHVybC5wb3J0fSwgY3R4KTsKCiAgaWYoSlNfSXNTdHJpbmcob3B0X2Vycm9yX2RvY3VtZW50KSkKICAgIGluZm8tPmVycm9yX2RvY3VtZW50XzQwNCA9IGpzX3Rvc3RyaW5nKGN0eCwgb3B0X2Vycm9yX2RvY3VtZW50KTsKICBlbHNlCiAgICBpbmZvLT5lcnJvcl9kb2N1bWVudF80MDQgPSBqc19zdHJkdXAoY3R4LCAiLzQwNC5odG1sIik7CgogIGluZm8tPnBvcnQgPSB1cmwucG9ydDsKICBpbmZvLT50aW1lb3V0X3NlY3MgPSAwOwogIGluZm8tPm9wdGlvbnMgPSAwOwoKICBpZihwZXJfbWVzc2FnZV9kZWZsYXRlKQogICAgaW5mby0+ZXh0ZW5zaW9ucyA9IGV4dGVuc2lvbl9wbWQ7CgogIC8vIGNsaWVudF9jZXJ0aWZpY2F0ZSgmc2VydmVyLT5jb250ZXh0LCBvcHRpb25zKTsKCiAgaW5mby0+b3B0aW9ucyB8PSBMV1NfU0VSVkVSX09QVElPTl9QRUVSX0NFUlRfTk9UX1JFUVVJUkVEOwogIGluZm8tPm9wdGlvbnMgfD0gTFdTX1NFUlZFUl9PUFRJT05fRE9fU1NMX0dMT0JBTF9JTklUOwogIGluZm8tPm9wdGlvbnMgfD0gTFdTX1NFUlZFUl9PUFRJT05fRElTQUJMRV9JUFY2OwogIGluZm8tPm9wdGlvbnMgfD0gTFdTX1NFUlZFUl9PUFRJT05fSUdOT1JFX01JU1NJTkdfQ0VSVDsKCiAgLy8gaW5mby0+b3B0aW9ucyB8PSBMV1NfU0VSVkVSX09QVElPTl9DUkVBVEVfVkhPU1RfU1NMX0NUWDsKCiAgaW5mby0+b3B0aW9ucyB8PSBMV1NfU0VSVkVSX09QVElPTl9SRVFVSVJFX1ZBTElEX09QRU5TU0xfQ0xJRU5UX0NFUlQ7CgogIGlmKGlzX3RscykgewogICAgc2VydmVyX2NlcnRpZmljYXRlKCZzZXJ2ZXItPmNvbnRleHQsIG9wdGlvbnMpOwoKICAgIC8vIGluZm8tPm9wdGlvbnMgfD0gTFdTX1NFUlZFUl9PUFRJT05fUkVESVJFQ1RfSFRUUF9UT19IVFRQUzsKICAgIGluZm8tPm9wdGlvbnMgfD0gTFdTX1NFUlZFUl9PUFRJT05fQUxMT1dfSFRUUF9PTl9IVFRQU19MSVNURU5FUjsKICAgIGluZm8tPm9wdGlvbnMgfD0gTFdTX1NFUlZFUl9PUFRJT05fQUxMT1dfTk9OX1NTTF9PTl9TU0xfUE9SVDsKICB9CiAgY2xpZW50X2NlcnRpZmljYXRlKCZzZXJ2ZXItPmNvbnRleHQsIG9wdGlvbnMpOwoKICBpZihpc19oMikgewogICAgaW5mby0+b3B0aW9ucyB8PSBMV1NfU0VSVkVSX09QVElPTl9IMl9KVVNUX0ZJWF9XSU5ET1dfVVBEQVRFX09WRVJGTE9XOwogICAgaW5mby0+b3B0aW9ucyB8PSBMV1NfU0VSVkVSX09QVElPTl9WSF9IMl9IQUxGX0NMT1NFRF9MT05HX1BPTEw7CiAgfQogIC8vIGluZm8tPm9wdGlvbnMgfD0gTFdTX1NFUlZFUl9PUFRJT05fSFRUUF9IRUFERVJTX1NFQ1VSSVRZX0JFU1RfUFJBQ1RJQ0VTX0VORk9SQ0U7CgogIGlmKEpTX0lzQXJyYXkoY3R4LCBvcHRfbWltZXR5cGVzKSkgewogICAgTWlubmV0Vmhvc3RPcHRpb25zICp2b3B0cywgKip2b3AgPSAmc2VydmVyLT5taW1ldHlwZXM7CiAgICB1aW50MzJfdCBpOwogICAgZm9yKGkgPSAwOzsgaSsrKSB7CiAgICAgIEpTVmFsdWUgbWltZXR5cGUgPSBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIG9wdF9taW1ldHlwZXMsIGkpOwogICAgICBpZihKU19Jc1VuZGVmaW5lZChtaW1ldHlwZSkpCiAgICAgICAgYnJlYWs7CiAgICAgIHZvcHRzID0gdmhvc3Rfb3B0aW9uc19uZXcoY3R4LCBtaW1ldHlwZSk7CiAgICAgIEFERCh2b3AsIHZvcHRzLCBuZXh0KTsKICAgIH0KICB9CgogIC8qewogICAgTWlubmV0Vmhvc3RPcHRpb25zKiBwdm87CgogICAgZm9yKHB2byA9IHNlcnZlci0+bWltZXR5cGVzOyBwdm87IHB2byA9IHB2by0+bmV4dCkgewogICAgICBERUJVRygicHZvIG1pbWV0eXBlICVzICVzXG4iLCBwdm8tPm5hbWUsIHB2by0+dmFsdWUpOwogICAgfQogIH0qLwoKICBNaW5uZXRWaG9zdE9wdGlvbnMgKnZob3B0ID0gMCwgKip2aHB0ciA9ICZ2aG9wdDsKCiAgQUREKHZocHRyLCB2aG9zdF9vcHRpb25zX2NyZWF0ZShjdHgsICJsd3MtZGVhZGRyb3AiLCAiIiksIG5leHQpOwogIEFERCh2aHB0ciwgdmhvc3Rfb3B0aW9uc19jcmVhdGUoY3R4LCAibHdzLW1pcnJvci1wcm90b2NvbCIsICIiKSwgbmV4dCk7CiAgQUREKHZocHRyLCB2aG9zdF9vcHRpb25zX2NyZWF0ZShjdHgsICJyYXctcHJveHkiLCAiIiksIG5leHQpOwoKICBpbmZvLT5wdm8gPSAmdmhvcHQtPmx3czsKCiAgaWYoIUpTX0lzVW5kZWZpbmVkKG9wdF9vcHRpb25zKSkgewoKICAgIHZob3B0LT5vcHRpb25zID0gdmhvc3Rfb3B0aW9uc19mcm9tb2JqKGN0eCwgb3B0X29wdGlvbnMpOwoKICAgIGZwcmludGYoc3RkZXJyLCAidmhvc3Qgb3B0aW9uczpcbiIpOwogICAgdmhvc3Rfb3B0aW9uc19kdW1wKHZob3B0LT5vcHRpb25zKTsKICB9CgogIHNlcnZlcl9tb3VudHMoc2VydmVyLCBvcHRfbW91bnRzKTsKCiAgaWYoIXNlcnZlcl9pbml0KHNlcnZlcikpCiAgICByZXR1cm4gSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgImxpYndlYnNvY2tldHMgaW5pdCBmYWlsZWQiKTsKCiAgSlNWYWx1ZSB0aW1lcl9jYiA9IGpzX2Z1bmN0aW9uX2NjbG9zdXJlKGN0eCwgbWlubmV0X3NlcnZlcl90aW1lb3V0LCA0LCAwLCBzZXJ2ZXIsIDApOwogIHVpbnQzMl90IGludGVydmFsID0gbHdzX3NlcnZpY2VfYWRqdXN0X3RpbWVvdXQoc2VydmVyLT5jb250ZXh0Lmx3cywgMTUwMDAsIDApOwogIGlmKGludGVydmFsID09IDApCiAgICBpbnRlcnZhbCA9IDEwOwogIHNlcnZlci0+Y29udGV4dC50aW1lciA9IGpzX3RpbWVyX2ludGVydmFsKGN0eCwgdGltZXJfY2IsIGludGVydmFsKTsKCiAgaWYoIWJsb2NrKQogICAgcmV0dXJuIHJldDsKCiAgd2hpbGUoYSA+PSAwKSB7CiAgICBpZighSlNfSXNOdWxsKHNlcnZlci0+Y29udGV4dC5lcnJvcikpIHsKICAgICAgcmV0ID0gSlNfVGhyb3coY3R4LCBzZXJ2ZXItPmNvbnRleHQuZXJyb3IpOwogICAgICBicmVhazsKICAgIH0KCiAgICBpZihzZXJ2ZXItPmNiLmZkLmN0eCkKICAgICAganNfc3RkX2xvb3AoY3R4KTsKICAgIGVsc2UKICAgICAgYSA9IGx3c19zZXJ2aWNlKHNlcnZlci0+Y29udGV4dC5sd3MsIDIwKTsKICB9CgogIC8vIGx3c19jb250ZXh0X2Rlc3Ryb3koc2VydmVyLT5jb250ZXh0Lmx3cyk7CgogIGlmKHNlcnZlci0+bWltZXR5cGVzKQogICAgdmhvc3Rfb3B0aW9uc19mcmVlX2xpc3QoY3R4LCBzZXJ2ZXItPm1pbWV0eXBlcyk7CgogIGlmKGluZm8tPm1vdW50cykgewogICAgY29uc3QgTWlubmV0SHR0cE1vdW50ICptb3VudCwgKm5leHQ7CgogICAgZm9yKG1vdW50ID0gKE1pbm5ldEh0dHBNb3VudCopaW5mby0+bW91bnRzOyBtb3VudDsgbW91bnQgPSBuZXh0KSB7CiAgICAgIG5leHQgPSAoTWlubmV0SHR0cE1vdW50Kiltb3VudC0+bHdzLm1vdW50X25leHQ7CiAgICAgIG1vdW50X2ZyZWUoY3R4LCBtb3VudCk7CiAgICB9CiAgfQoKICBpZihpbmZvLT5zZXJ2ZXJfc3NsX2NhX21lbSkKICAgIGpzX2NsZWFyKGN0eCwgJmluZm8tPnNlcnZlcl9zc2xfY2FfbWVtKTsKICBpZihpbmZvLT5zZXJ2ZXJfc3NsX2NlcnRfbWVtKQogICAganNfY2xlYXIoY3R4LCAmaW5mby0+c2VydmVyX3NzbF9jZXJ0X21lbSk7CiAgaWYoaW5mby0+c2VydmVyX3NzbF9wcml2YXRlX2tleV9tZW0pCiAgICBqc19jbGVhcihjdHgsICZpbmZvLT5zZXJ2ZXJfc3NsX3ByaXZhdGVfa2V5X21lbSk7CiAgaWYoaW5mby0+c3NsX2NhX2ZpbGVwYXRoKQogICAganNfY2xlYXIoY3R4LCAmaW5mby0+c3NsX2NhX2ZpbGVwYXRoKTsKICBpZihpbmZvLT5zc2xfY2VydF9maWxlcGF0aCkKICAgIGpzX2NsZWFyKGN0eCwgJmluZm8tPnNzbF9jZXJ0X2ZpbGVwYXRoKTsKICBpZihpbmZvLT5zc2xfcHJpdmF0ZV9rZXlfZmlsZXBhdGgpCiAgICBqc19jbGVhcihjdHgsICZpbmZvLT5zc2xfcHJpdmF0ZV9rZXlfZmlsZXBhdGgpOwoKICAvKmpzX2J1ZmZlcl9mcmVlKCZzZXJ2ZXItPmNvbnRleHQua2V5LCBjdHgpOwogIGpzX2J1ZmZlcl9mcmVlKCZzZXJ2ZXItPmNvbnRleHQuY3J0LCBjdHgpOwogIGpzX2J1ZmZlcl9mcmVlKCZzZXJ2ZXItPmNvbnRleHQuY2EsIGN0eCk7Ki8KCiAgLyogaWYoaW5mby0+c3NsX2NlcnRfZmlsZXBhdGgpCiAgICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBpbmZvLT5zc2xfY2VydF9maWxlcGF0aCk7CgogICBpZihpbmZvLT5zc2xfcHJpdmF0ZV9rZXlfZmlsZXBhdGgpCiAgICAgSlNfRnJlZUNTdHJpbmcoY3R4LCBpbmZvLT5zc2xfcHJpdmF0ZV9rZXlfZmlsZXBhdGgpOwoKICAganNfZnJlZShjdHgsICh2b2lkKilpbmZvLT52aG9zdF9uYW1lKTsKICovCiAgRlJFRUNCKHNlcnZlci0+Y2IucG9uZykKICBGUkVFQ0Ioc2VydmVyLT5jYi5jbG9zZSkKICBGUkVFQ0Ioc2VydmVyLT5jYi5jb25uZWN0KQogIEZSRUVDQihzZXJ2ZXItPmNiLm1lc3NhZ2UpCiAgRlJFRUNCKHNlcnZlci0+Y2IuZmQpCiAgRlJFRUNCKHNlcnZlci0+Y2IuaHR0cCkKCiAgcmV0dXJuIHJldDsKfQoKSlNWYWx1ZQptaW5uZXRfc2VydmVyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgdW5pb24gY2xvc3VyZSogY2xvc3VyZTsKICBKU1ZhbHVlIHJldDsKCiAgaWYoIShjbG9zdXJlID0gY2xvc3VyZV9uZXcoY3R4KSkpCiAgICByZXR1cm4gSlNfVGhyb3dPdXRPZk1lbW9yeShjdHgpOwoKICByZXQgPSBtaW5uZXRfc2VydmVyX2Nsb3N1cmUoY3R4LCB0aGlzX3ZhbCwgYXJnYywgYXJndiwgMCwgY2xvc3VyZSk7CgogIGlmKGpzX2lzX3Byb21pc2UoY3R4LCByZXQpKSB7CiAgICBKU1ZhbHVlIGZ1bmNbMl0sIHRtcDsKCiAgICBmdW5jWzBdID0ganNfZnVuY3Rpb25fY2Nsb3N1cmUoY3R4LCAmbWlubmV0X3NlcnZlcl9oYW5kbGVyLCAxLCBPTl9SRVNPTFZFLCBjbG9zdXJlX2R1cChjbG9zdXJlKSwgY2xvc3VyZV9mcmVlKTsKICAgIGZ1bmNbMV0gPSBqc19mdW5jdGlvbl9jY2xvc3VyZShjdHgsICZtaW5uZXRfc2VydmVyX2hhbmRsZXIsIDEsIE9OX1JFSkVDVCwgY2xvc3VyZV9kdXAoY2xvc3VyZSksIGNsb3N1cmVfZnJlZSk7CgogICAgdG1wID0ganNfaW52b2tlKGN0eCwgcmV0LCAidGhlbiIsIDEsICZmdW5jWzBdKTsKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHJldCk7CiAgICByZXQgPSB0bXA7CgogICAgdG1wID0ganNfaW52b2tlKGN0eCwgcmV0LCAiY2F0Y2giLCAxLCAmZnVuY1sxXSk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCByZXQpOwogICAgcmV0ID0gdG1wOwoKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGZ1bmNbMF0pOwogICAgSlNfRnJlZVZhbHVlKGN0eCwgZnVuY1sxXSk7CiAgfQoKICBjbG9zdXJlX2ZyZWUoY2xvc3VyZSk7CgogIHJldHVybiByZXQ7Cn0KCmludApkZWZwcm90X2NhbGxiYWNrKHN0cnVjdCBsd3MqIHdzaSwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucyByZWFzb24sIHZvaWQqIHVzZXIsIHZvaWQqIGluLCBzaXplX3QgbGVuKSB7CiAgTWlubmV0U2VydmVyKiBzZXJ2ZXIgPSAvKnNlc3Npb24gPyBzZXNzaW9uLT5zZXJ2ZXIgOiovIGx3c19jb250ZXh0X3VzZXIobHdzX2dldF9jb250ZXh0KHdzaSkpOwoKICAvLyBpZighbHdzX3JlYXNvbl9wb2xsKHJlYXNvbikpIHByaW50ZigiZGVmcHJvdF9jYWxsYmFjayAlcyAlcCAlcCAlenVcbiIsIGx3c19jYWxsYmFja19uYW1lKHJlYXNvbiksIHVzZXIsIGluLCBsZW4pOwoKICBzd2l0Y2gocmVhc29uKSB7CiAgICBjYXNlIExXU19DQUxMQkFDS19MT0NLX1BPTEw6CiAgICBjYXNlIExXU19DQUxMQkFDS19VTkxPQ0tfUE9MTDogewogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0FERF9QT0xMX0ZEOiB7CiAgICAgIHN0cnVjdCBsd3NfcG9sbGFyZ3MqIGFyZ3MgPSBpbjsKICAgICAgaWYoc2VydmVyLT5jYi5mZC5jdHgpIHsKICAgICAgICBKU1ZhbHVlIGFyZ3ZbM10gPSB7SlNfTmV3SW50MzIoc2VydmVyLT5jYi5mZC5jdHgsIGFyZ3MtPmZkKX07CiAgICAgICAgbWlubmV0X2lvX2hhbmRsZXJzKHNlcnZlci0+Y2IuZmQuY3R4LCB3c2ksICphcmdzLCAmYXJndlsxXSk7CiAgICAgICAgc2VydmVyX2V4Y2VwdGlvbihzZXJ2ZXIsIGNhbGxiYWNrX2VtaXQoJnNlcnZlci0+Y2IuZmQsIDMsIGFyZ3YpKTsKICAgICAgICBKU19GcmVlVmFsdWUoc2VydmVyLT5jYi5mZC5jdHgsIGFyZ3ZbMF0pOwogICAgICAgIEpTX0ZyZWVWYWx1ZShzZXJ2ZXItPmNiLmZkLmN0eCwgYXJndlsxXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKHNlcnZlci0+Y2IuZmQuY3R4LCBhcmd2WzJdKTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0KICAgIGNhc2UgTFdTX0NBTExCQUNLX0RFTF9QT0xMX0ZEOiB7CiAgICAgIHN0cnVjdCBsd3NfcG9sbGFyZ3MqIGFyZ3MgPSBpbjsKICAgICAgaWYoc2VydmVyLT5jYi5mZC5jdHgpIHsKICAgICAgICBKU1ZhbHVlIGFyZ3ZbM10gPSB7CiAgICAgICAgICAgIEpTX05ld0ludDMyKHNlcnZlci0+Y2IuZmQuY3R4LCBhcmdzLT5mZCksCiAgICAgICAgfTsKICAgICAgICBtaW5uZXRfaW9faGFuZGxlcnMoc2VydmVyLT5jYi5mZC5jdHgsIHdzaSwgKmFyZ3MsICZhcmd2WzFdKTsKICAgICAgICBzZXJ2ZXJfZXhjZXB0aW9uKHNlcnZlciwgY2FsbGJhY2tfZW1pdCgmc2VydmVyLT5jYi5mZCwgMywgYXJndikpOwogICAgICAgIEpTX0ZyZWVWYWx1ZShzZXJ2ZXItPmNiLmZkLmN0eCwgYXJndlswXSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKHNlcnZlci0+Y2IuZmQuY3R4LCBhcmd2WzFdKTsKICAgICAgICBKU19GcmVlVmFsdWUoc2VydmVyLT5jYi5mZC5jdHgsIGFyZ3ZbMl0pOwogICAgICB9CiAgICAgIHJldHVybiAwOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfQ0hBTkdFX01PREVfUE9MTF9GRDogewogICAgICBzdHJ1Y3QgbHdzX3BvbGxhcmdzKiBhcmdzID0gaW47CiAgICAgIGlmKHNlcnZlci0+Y2IuZmQuY3R4KSB7CiAgICAgICAgaWYoYXJncy0+ZXZlbnRzICE9IGFyZ3MtPnByZXZfZXZlbnRzKSB7CiAgICAgICAgICBKU1ZhbHVlIGFyZ3ZbM10gPSB7SlNfTmV3SW50MzIoc2VydmVyLT5jYi5mZC5jdHgsIGFyZ3MtPmZkKX07CiAgICAgICAgICBtaW5uZXRfaW9faGFuZGxlcnMoc2VydmVyLT5jYi5mZC5jdHgsIHdzaSwgKmFyZ3MsICZhcmd2WzFdKTsKICAgICAgICAgIHNlcnZlcl9leGNlcHRpb24oc2VydmVyLCBjYWxsYmFja19lbWl0KCZzZXJ2ZXItPmNiLmZkLCAzLCBhcmd2KSk7CiAgICAgICAgICBKU19GcmVlVmFsdWUoc2VydmVyLT5jYi5mZC5jdHgsIGFyZ3ZbMF0pOwogICAgICAgICAgSlNfRnJlZVZhbHVlKHNlcnZlci0+Y2IuZmQuY3R4LCBhcmd2WzFdKTsKICAgICAgICAgIEpTX0ZyZWVWYWx1ZShzZXJ2ZXItPmNiLmZkLmN0eCwgYXJndlsyXSk7CiAgICAgICAgfQogICAgICB9CiAgICAgIHJldHVybiAwOwogICAgfQogICAgY2FzZSBMV1NfQ0FMTEJBQ0tfRVZFTlRfV0FJVF9DQU5DRUxMRUQ6CiAgICBjYXNlIExXU19DQUxMQkFDS19HRVRfVEhSRUFEX0lEOiB7CiAgICAgIHJldHVybiAwOwogICAgfQogICAgZGVmYXVsdDogewogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiBsd3NfY2FsbGJhY2tfaHR0cF9kdW1teSh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7Cn0KAAAAAAAAAAAqSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQMAAAAAAACpAwAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAqQMAAAAAAACpAwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/opaque.c",
			"settings":
			{
				"buffer_size": 1804,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"cut",
					null,
					"AQAAAAAEAAAAAAAAAAQAAAAAAAB7AAAACgp2b2lkCm9wYXF1ZV9jbGVhcihzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSwgSlNDb250ZXh0KiBjdHgpIHsKICBvcGFxdWVfY2xlYXJfcnQob3BhcXVlLCBKU19HZXRSdW50aW1lKGN0eCkpOwp9",
					"AQAAAAAAAAABAAAAAAQAAAAAAAB7BAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAqBwAAI2luY2x1ZGUgIm9wYXF1ZS5oIgojaW5jbHVkZSAid3MuaCIKI2luY2x1ZGUgInJlcXVlc3QuaCIKI2luY2x1ZGUgInJlc3BvbnNlLmgiCiNpbmNsdWRlICJmb3JtLXBhcnNlci5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+CgovLyBzdGF0aWMgVEhSRUFEX0xPQ0FMIHZvaWQqIHByZXZfcHRyID0gMDsKVEhSRUFEX0xPQ0FMIGludDY0X3Qgc2VyaWFsID0gMDsKVEhSRUFEX0xPQ0FMIHN0cnVjdCBsaXN0X2hlYWQgb3BhcXVlX2xpc3QgPSB7MCwgMH07Cgp2b2lkCm9wYXF1ZV9jbGVhcl9ydChzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSwgSlNSdW50aW1lKiBydCkgewogIGlmKG9wYXF1ZS0+d3MpIHsKICAgIHN0cnVjdCBzb2NrZXQqIHdzID0gb3BhcXVlLT53czsKICAgIG9wYXF1ZS0+d3MgPSAwOwogICAgd3NfZnJlZV9ydCh3cywgcnQpOwogIH0KICBpZihvcGFxdWUtPnJlcSkgewogICAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxID0gb3BhcXVlLT5yZXE7CiAgICBvcGFxdWUtPnJlcSA9IDA7CiAgICByZXF1ZXN0X2ZyZWVfcnQocmVxLCBydCk7CiAgfQogIGlmKG9wYXF1ZS0+cmVzcCkgewogICAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AgPSBvcGFxdWUtPnJlc3A7CiAgICBvcGFxdWUtPnJlc3AgPSAwOwogICAgcmVzcG9uc2VfZnJlZV9ydChyZXNwLCBydCk7CiAgfQogIGlmKG9wYXF1ZS0+Zm9ybV9wYXJzZXIpIHsKICAgIGZvcm1fcGFyc2VyX2ZyZWVfcnQob3BhcXVlLT5mb3JtX3BhcnNlciwgcnQpOwogICAgb3BhcXVlLT5mb3JtX3BhcnNlciA9IDA7CiAgfQp9Cgp2b2lkCm9wYXF1ZV9mcmVlX3J0KHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlLCBKU1J1bnRpbWUqIHJ0KSB7CiAgb3BhcXVlX2NsZWFyX3J0KG9wYXF1ZSwgcnQpOwoKICBpZigtLW9wYXF1ZS0+cmVmX2NvdW50ID09IDApIHsKICAgIGFzc2VydChvcGFxdWUtPmxpbmsubmV4dCk7CiAgICBsaXN0X2RlbCgmb3BhcXVlLT5saW5rKTsKCiAgICBqc19mcmVlX3J0KHJ0LCBvcGFxdWUpOwogIH0KfQoKdm9pZApvcGFxdWVfZnJlZShzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSwgSlNDb250ZXh0KiBjdHgpIHsKICBvcGFxdWVfZnJlZV9ydChvcGFxdWUsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKb3BhcXVlX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEpKSkpIHsKICAgIG9wYXF1ZS0+c2VyaWFsID0gKytzZXJpYWw7CiAgICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CiAgICBvcGFxdWUtPnJlZl9jb3VudCA9IDE7CgogICAgaWYob3BhcXVlX2xpc3QucHJldiA9PSBOVUxMKQogICAgICBpbml0X2xpc3RfaGVhZCgmb3BhcXVlX2xpc3QpOwoKICAgIGxpc3RfYWRkKCZvcGFxdWUtPmxpbmssICZvcGFxdWVfbGlzdCk7CiAgfQoKICByZXR1cm4gb3BhcXVlOwp9CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCmx3c19vcGFxdWUoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZTsKCiAgYXNzZXJ0KGN0eCk7CgogIG9wYXF1ZSA9IG9wYXF1ZV9uZXcoY3R4KTsKCiAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgb3BhcXVlKTsKICByZXR1cm4gb3BhcXVlOwp9CgAAAAAAAAAAKgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAqBwAAI2luY2x1ZGUgIm9wYXF1ZS5oIgojaW5jbHVkZSAid3MuaCIKI2luY2x1ZGUgInJlcXVlc3QuaCIKI2luY2x1ZGUgInJlc3BvbnNlLmgiCiNpbmNsdWRlICJmb3JtLXBhcnNlci5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+CgovLyBzdGF0aWMgVEhSRUFEX0xPQ0FMIHZvaWQqIHByZXZfcHRyID0gMDsKVEhSRUFEX0xPQ0FMIGludDY0X3Qgc2VyaWFsID0gMDsKVEhSRUFEX0xPQ0FMIHN0cnVjdCBsaXN0X2hlYWQgb3BhcXVlX2xpc3QgPSB7MCwgMH07Cgp2b2lkCm9wYXF1ZV9jbGVhcl9ydChzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSwgSlNSdW50aW1lKiBydCkgewogIGlmKG9wYXF1ZS0+d3MpIHsKICAgIHN0cnVjdCBzb2NrZXQqIHdzID0gb3BhcXVlLT53czsKICAgIG9wYXF1ZS0+d3MgPSAwOwogICAgd3NfZnJlZV9ydCh3cywgcnQpOwogIH0KICBpZihvcGFxdWUtPnJlcSkgewogICAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxID0gb3BhcXVlLT5yZXE7CiAgICBvcGFxdWUtPnJlcSA9IDA7CiAgICByZXF1ZXN0X2ZyZWVfcnQocmVxLCBydCk7CiAgfQogIGlmKG9wYXF1ZS0+cmVzcCkgewogICAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AgPSBvcGFxdWUtPnJlc3A7CiAgICBvcGFxdWUtPnJlc3AgPSAwOwogICAgcmVzcG9uc2VfZnJlZV9ydChyZXNwLCBydCk7CiAgfQogIGlmKG9wYXF1ZS0+Zm9ybV9wYXJzZXIpIHsKICAgIGZvcm1fcGFyc2VyX2ZyZWVfcnQob3BhcXVlLT5mb3JtX3BhcnNlciwgcnQpOwogICAgb3BhcXVlLT5mb3JtX3BhcnNlciA9IDA7CiAgfQp9Cgp2b2lkCm9wYXF1ZV9mcmVlX3J0KHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlLCBKU1J1bnRpbWUqIHJ0KSB7CiAgb3BhcXVlX2NsZWFyX3J0KG9wYXF1ZSwgcnQpOwoKICBpZigtLW9wYXF1ZS0+cmVmX2NvdW50ID09IDApIHsKICAgIGFzc2VydChvcGFxdWUtPmxpbmsubmV4dCk7CiAgICBsaXN0X2RlbCgmb3BhcXVlLT5saW5rKTsKCiAgICBqc19mcmVlX3J0KHJ0LCBvcGFxdWUpOwogIH0KfQoKdm9pZApvcGFxdWVfZnJlZShzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSwgSlNDb250ZXh0KiBjdHgpIHsKICBvcGFxdWVfZnJlZV9ydChvcGFxdWUsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKb3BhcXVlX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEpKSkpIHsKICAgIG9wYXF1ZS0+c2VyaWFsID0gKytzZXJpYWw7CiAgICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CiAgICBvcGFxdWUtPnJlZl9jb3VudCA9IDE7CgogICAgaWYob3BhcXVlX2xpc3QucHJldiA9PSBOVUxMKQogICAgICBpbml0X2xpc3RfaGVhZCgmb3BhcXVlX2xpc3QpOwoKICAgIGxpc3RfYWRkKCZvcGFxdWUtPmxpbmssICZvcGFxdWVfbGlzdCk7CiAgfQoKICByZXR1cm4gb3BhcXVlOwp9CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCmx3c19vcGFxdWUoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZTsKCiAgYXNzZXJ0KGN0eCk7CgogIG9wYXF1ZSA9IG9wYXF1ZV9uZXcoY3R4KTsKCiAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgb3BhcXVlKTsKICByZXR1cm4gb3BhcXVlOwp9CgAAAAAAAAAAJwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAnBwAAI2luY2x1ZGUgIm9wYXF1ZS5oIgojaW5jbHVkZSAid3MuaCIKI2luY2x1ZGUgInJlcXVlc3QuaCIKI2luY2x1ZGUgInJlc3BvbnNlLmgiCiNpbmNsdWRlICJmb3JtLXBhcnNlci5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+CgovLyBzdGF0aWMgVEhSRUFEX0xPQ0FMIHZvaWQqIHByZXZfcHRyID0gMDsKVEhSRUFEX0xPQ0FMIGludDY0X3Qgc2VyaWFsID0gMDsKVEhSRUFEX0xPQ0FMIHN0cnVjdCBsaXN0X2hlYWQgb3BhcXVlX2xpc3QgPSB7MCwgMH07Cgp2b2lkCm9wYXF1ZV9jbGVhcl9ydChzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSwgSlNSdW50aW1lKiBydCkgewogIGlmKG9wYXF1ZS0+d3MpIHsKICAgIHN0cnVjdCBzb2NrZXQqIHdzID0gb3BhcXVlLT53czsKICAgIG9wYXF1ZS0+d3MgPSAwOwogICAgd3NfZnJlZV9ydCh3cywgcnQpOwogIH0KICBpZihvcGFxdWUtPnJlcSkgewogICAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxID0gb3BhcXVlLT5yZXE7CiAgICBvcGFxdWUtPnJlcSA9IDA7CiAgICByZXF1ZXN0X2ZyZWUocmVxLCBydCk7CiAgfQogIGlmKG9wYXF1ZS0+cmVzcCkgewogICAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AgPSBvcGFxdWUtPnJlc3A7CiAgICBvcGFxdWUtPnJlc3AgPSAwOwogICAgcmVzcG9uc2VfZnJlZV9ydChyZXNwLCBydCk7CiAgfQogIGlmKG9wYXF1ZS0+Zm9ybV9wYXJzZXIpIHsKICAgIGZvcm1fcGFyc2VyX2ZyZWVfcnQob3BhcXVlLT5mb3JtX3BhcnNlciwgcnQpOwogICAgb3BhcXVlLT5mb3JtX3BhcnNlciA9IDA7CiAgfQp9Cgp2b2lkCm9wYXF1ZV9mcmVlX3J0KHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlLCBKU1J1bnRpbWUqIHJ0KSB7CiAgb3BhcXVlX2NsZWFyX3J0KG9wYXF1ZSwgcnQpOwoKICBpZigtLW9wYXF1ZS0+cmVmX2NvdW50ID09IDApIHsKICAgIGFzc2VydChvcGFxdWUtPmxpbmsubmV4dCk7CiAgICBsaXN0X2RlbCgmb3BhcXVlLT5saW5rKTsKCiAgICBqc19mcmVlX3J0KHJ0LCBvcGFxdWUpOwogIH0KfQoKdm9pZApvcGFxdWVfZnJlZShzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSwgSlNDb250ZXh0KiBjdHgpIHsKICBvcGFxdWVfZnJlZV9ydChvcGFxdWUsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKb3BhcXVlX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEpKSkpIHsKICAgIG9wYXF1ZS0+c2VyaWFsID0gKytzZXJpYWw7CiAgICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CiAgICBvcGFxdWUtPnJlZl9jb3VudCA9IDE7CgogICAgaWYob3BhcXVlX2xpc3QucHJldiA9PSBOVUxMKQogICAgICBpbml0X2xpc3RfaGVhZCgmb3BhcXVlX2xpc3QpOwoKICAgIGxpc3RfYWRkKCZvcGFxdWUtPmxpbmssICZvcGFxdWVfbGlzdCk7CiAgfQoKICByZXR1cm4gb3BhcXVlOwp9CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCmx3c19vcGFxdWUoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZTsKCiAgYXNzZXJ0KGN0eCk7CgogIG9wYXF1ZSA9IG9wYXF1ZV9uZXcoY3R4KTsKCiAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgb3BhcXVlKTsKICByZXR1cm4gb3BhcXVlOwp9CgAAAAAAAAAAJAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAkBwAAI2luY2x1ZGUgIm9wYXF1ZS5oIgojaW5jbHVkZSAid3MuaCIKI2luY2x1ZGUgInJlcXVlc3QuaCIKI2luY2x1ZGUgInJlc3BvbnNlLmgiCiNpbmNsdWRlICJmb3JtLXBhcnNlci5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+CgovLyBzdGF0aWMgVEhSRUFEX0xPQ0FMIHZvaWQqIHByZXZfcHRyID0gMDsKVEhSRUFEX0xPQ0FMIGludDY0X3Qgc2VyaWFsID0gMDsKVEhSRUFEX0xPQ0FMIHN0cnVjdCBsaXN0X2hlYWQgb3BhcXVlX2xpc3QgPSB7MCwgMH07Cgp2b2lkCm9wYXF1ZV9jbGVhcl9ydChzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSwgSlNSdW50aW1lKiBydCkgewogIGlmKG9wYXF1ZS0+d3MpIHsKICAgIHN0cnVjdCBzb2NrZXQqIHdzID0gb3BhcXVlLT53czsKICAgIG9wYXF1ZS0+d3MgPSAwOwogICAgd3NfZnJlZV9ydCh3cywgcnQpOwogIH0KICBpZihvcGFxdWUtPnJlcSkgewogICAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxID0gb3BhcXVlLT5yZXE7CiAgICBvcGFxdWUtPnJlcSA9IDA7CiAgICByZXF1ZXN0X2ZyZWUocmVxLCBydCk7CiAgfQogIGlmKG9wYXF1ZS0+cmVzcCkgewogICAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AgPSBvcGFxdWUtPnJlc3A7CiAgICBvcGFxdWUtPnJlc3AgPSAwOwogICAgcmVzcG9uc2VfZnJlZShyZXNwLCBydCk7CiAgfQogIGlmKG9wYXF1ZS0+Zm9ybV9wYXJzZXIpIHsKICAgIGZvcm1fcGFyc2VyX2ZyZWVfcnQob3BhcXVlLT5mb3JtX3BhcnNlciwgcnQpOwogICAgb3BhcXVlLT5mb3JtX3BhcnNlciA9IDA7CiAgfQp9Cgp2b2lkCm9wYXF1ZV9mcmVlX3J0KHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlLCBKU1J1bnRpbWUqIHJ0KSB7CiAgb3BhcXVlX2NsZWFyX3J0KG9wYXF1ZSwgcnQpOwoKICBpZigtLW9wYXF1ZS0+cmVmX2NvdW50ID09IDApIHsKICAgIGFzc2VydChvcGFxdWUtPmxpbmsubmV4dCk7CiAgICBsaXN0X2RlbCgmb3BhcXVlLT5saW5rKTsKCiAgICBqc19mcmVlX3J0KHJ0LCBvcGFxdWUpOwogIH0KfQoKdm9pZApvcGFxdWVfZnJlZShzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSwgSlNDb250ZXh0KiBjdHgpIHsKICBvcGFxdWVfZnJlZV9ydChvcGFxdWUsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKb3BhcXVlX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEpKSkpIHsKICAgIG9wYXF1ZS0+c2VyaWFsID0gKytzZXJpYWw7CiAgICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CiAgICBvcGFxdWUtPnJlZl9jb3VudCA9IDE7CgogICAgaWYob3BhcXVlX2xpc3QucHJldiA9PSBOVUxMKQogICAgICBpbml0X2xpc3RfaGVhZCgmb3BhcXVlX2xpc3QpOwoKICAgIGxpc3RfYWRkKCZvcGFxdWUtPmxpbmssICZvcGFxdWVfbGlzdCk7CiAgfQoKICByZXR1cm4gb3BhcXVlOwp9CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCmx3c19vcGFxdWUoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZTsKCiAgYXNzZXJ0KGN0eCk7CgogIG9wYXF1ZSA9IG9wYXF1ZV9uZXcoY3R4KTsKCiAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgb3BhcXVlKTsKICByZXR1cm4gb3BhcXVlOwp9CgAAAAAAAAAAJAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAkBwAAI2luY2x1ZGUgIm9wYXF1ZS5oIgojaW5jbHVkZSAid3MuaCIKI2luY2x1ZGUgInJlcXVlc3QuaCIKI2luY2x1ZGUgInJlc3BvbnNlLmgiCiNpbmNsdWRlICJmb3JtLXBhcnNlci5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+CgovLyBzdGF0aWMgVEhSRUFEX0xPQ0FMIHZvaWQqIHByZXZfcHRyID0gMDsKVEhSRUFEX0xPQ0FMIGludDY0X3Qgc2VyaWFsID0gMDsKVEhSRUFEX0xPQ0FMIHN0cnVjdCBsaXN0X2hlYWQgb3BhcXVlX2xpc3QgPSB7MCwgMH07Cgp2b2lkCm9wYXF1ZV9jbGVhcl9ydChzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSwgSlNSdW50aW1lKiBydCkgewogIGlmKG9wYXF1ZS0+d3MpIHsKICAgIHN0cnVjdCBzb2NrZXQqIHdzID0gb3BhcXVlLT53czsKICAgIG9wYXF1ZS0+d3MgPSAwOwogICAgd3NfZnJlZV9ydCh3cywgcnQpOwogIH0KICBpZihvcGFxdWUtPnJlcSkgewogICAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxID0gb3BhcXVlLT5yZXE7CiAgICBvcGFxdWUtPnJlcSA9IDA7CiAgICByZXF1ZXN0X2ZyZWUocmVxLCBydCk7CiAgfQogIGlmKG9wYXF1ZS0+cmVzcCkgewogICAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AgPSBvcGFxdWUtPnJlc3A7CiAgICBvcGFxdWUtPnJlc3AgPSAwOwogICAgcmVzcG9uc2VfZnJlZShyZXNwLCBydCk7CiAgfQogIGlmKG9wYXF1ZS0+Zm9ybV9wYXJzZXIpIHsKICAgIGZvcm1fcGFyc2VyX2ZyZWVfcnQob3BhcXVlLT5mb3JtX3BhcnNlciwgcnQpOwogICAgb3BhcXVlLT5mb3JtX3BhcnNlciA9IDA7CiAgfQp9Cgp2b2lkCm9wYXF1ZV9mcmVlX3J0KHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlLCBKU1J1bnRpbWUqIHJ0KSB7CiAgb3BhcXVlX2NsZWFyX3J0KG9wYXF1ZSwgcnQpOwoKICBpZigtLW9wYXF1ZS0+cmVmX2NvdW50ID09IDApIHsKICAgIGFzc2VydChvcGFxdWUtPmxpbmsubmV4dCk7CiAgICBsaXN0X2RlbCgmb3BhcXVlLT5saW5rKTsKCiAgICBqc19mcmVlX3J0KHJ0LCBvcGFxdWUpOwogIH0KfQoKdm9pZApvcGFxdWVfZnJlZShzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSwgSlNDb250ZXh0KiBjdHgpIHsKICBvcGFxdWVfZnJlZV9ydChvcGFxdWUsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKb3BhcXVlX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEpKSkpIHsKICAgIG9wYXF1ZS0+c2VyaWFsID0gKytzZXJpYWw7CiAgICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CiAgICBvcGFxdWUtPnJlZl9jb3VudCA9IDE7CgogICAgaWYob3BhcXVlX2xpc3QucHJldiA9PSBOVUxMKQogICAgICBpbml0X2xpc3RfaGVhZCgmb3BhcXVlX2xpc3QpOwoKICAgIGxpc3RfYWRkKCZvcGFxdWUtPmxpbmssICZvcGFxdWVfbGlzdCk7CiAgfQoKICByZXR1cm4gb3BhcXVlOwp9CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCmx3c19vcGFxdWUoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZTsKCiAgYXNzZXJ0KGN0eCk7CgogIG9wYXF1ZSA9IG9wYXF1ZV9uZXcoY3R4KTsKCiAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgb3BhcXVlKTsKICByZXR1cm4gb3BhcXVlOwp9CgAAAAAAAAAAJAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAkBwAAI2luY2x1ZGUgIm9wYXF1ZS5oIgojaW5jbHVkZSAid3MuaCIKI2luY2x1ZGUgInJlcXVlc3QuaCIKI2luY2x1ZGUgInJlc3BvbnNlLmgiCiNpbmNsdWRlICJmb3JtLXBhcnNlci5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+CgovLyBzdGF0aWMgVEhSRUFEX0xPQ0FMIHZvaWQqIHByZXZfcHRyID0gMDsKVEhSRUFEX0xPQ0FMIGludDY0X3Qgc2VyaWFsID0gMDsKVEhSRUFEX0xPQ0FMIHN0cnVjdCBsaXN0X2hlYWQgb3BhcXVlX2xpc3QgPSB7MCwgMH07Cgp2b2lkCm9wYXF1ZV9jbGVhcl9ydChzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSwgSlNSdW50aW1lKiBydCkgewogIGlmKG9wYXF1ZS0+d3MpIHsKICAgIHN0cnVjdCBzb2NrZXQqIHdzID0gb3BhcXVlLT53czsKICAgIG9wYXF1ZS0+d3MgPSAwOwogICAgd3NfZnJlZV9ydCh3cywgcnQpOwogIH0KICBpZihvcGFxdWUtPnJlcSkgewogICAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxID0gb3BhcXVlLT5yZXE7CiAgICBvcGFxdWUtPnJlcSA9IDA7CiAgICByZXF1ZXN0X2ZyZWUocmVxLCBydCk7CiAgfQogIGlmKG9wYXF1ZS0+cmVzcCkgewogICAgc3RydWN0IGh0dHBfcmVzcG9uc2UqIHJlc3AgPSBvcGFxdWUtPnJlc3A7CiAgICBvcGFxdWUtPnJlc3AgPSAwOwogICAgcmVzcG9uc2VfZnJlZShyZXNwLCBydCk7CiAgfQogIGlmKG9wYXF1ZS0+Zm9ybV9wYXJzZXIpIHsKICAgIGZvcm1fcGFyc2VyX2ZyZWVfcnQob3BhcXVlLT5mb3JtX3BhcnNlciwgcnQpOwogICAgb3BhcXVlLT5mb3JtX3BhcnNlciA9IDA7CiAgfQp9Cgp2b2lkCm9wYXF1ZV9mcmVlX3J0KHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlLCBKU1J1bnRpbWUqIHJ0KSB7CiAgb3BhcXVlX2NsZWFyX3J0KG9wYXF1ZSwgcnQpOwoKICBpZigtLW9wYXF1ZS0+cmVmX2NvdW50ID09IDApIHsKICAgIGFzc2VydChvcGFxdWUtPmxpbmsubmV4dCk7CiAgICBsaXN0X2RlbCgmb3BhcXVlLT5saW5rKTsKCiAgICBqc19mcmVlX3J0KHJ0LCBvcGFxdWUpOwogIH0KfQoKdm9pZApvcGFxdWVfZnJlZShzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSwgSlNDb250ZXh0KiBjdHgpIHsKICBvcGFxdWVfZnJlZV9ydChvcGFxdWUsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKb3BhcXVlX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEpKSkpIHsKICAgIG9wYXF1ZS0+c2VyaWFsID0gKytzZXJpYWw7CiAgICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CiAgICBvcGFxdWUtPnJlZl9jb3VudCA9IDE7CgogICAgaWYob3BhcXVlX2xpc3QucHJldiA9PSBOVUxMKQogICAgICBpbml0X2xpc3RfaGVhZCgmb3BhcXVlX2xpc3QpOwoKICAgIGxpc3RfYWRkKCZvcGFxdWUtPmxpbmssICZvcGFxdWVfbGlzdCk7CiAgfQoKICByZXR1cm4gb3BhcXVlOwp9CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCmx3c19vcGFxdWUoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZTsKCiAgYXNzZXJ0KGN0eCk7CgogIG9wYXF1ZSA9IG9wYXF1ZV9uZXcoY3R4KTsKCiAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgb3BhcXVlKTsKICByZXR1cm4gb3BhcXVlOwp9CgAAAAAAAAAAGAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYBwAAI2luY2x1ZGUgIm9wYXF1ZS5oIgojaW5jbHVkZSAid3MuaCIKI2luY2x1ZGUgInJlcXVlc3QuaCIKI2luY2x1ZGUgInJlc3BvbnNlLmgiCiNpbmNsdWRlICJmb3JtLXBhcnNlci5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+CgovLyBzdGF0aWMgVEhSRUFEX0xPQ0FMIHZvaWQqIHByZXZfcHRyID0gMDsKVEhSRUFEX0xPQ0FMIGludDY0X3Qgc2VyaWFsID0gMDsKVEhSRUFEX0xPQ0FMIHN0cnVjdCBsaXN0X2hlYWQgb3BhcXVlX2xpc3QgPSB7MCwgMH07Cgp2b2lkCm9wYXF1ZV9jbGVhcl9ydChzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSwgSlNSdW50aW1lKiBydCkgewogIGlmKG9wYXF1ZS0+d3MpIHsKICAgIHN0cnVjdCBzb2NrZXQqIHdzID0gb3BhcXVlLT53czsKICAgIG9wYXF1ZS0+d3MgPSAwOwogICAgd3NfZnJlZV9ydCh3cywgcnQpOwogIH0KICBpZihvcGFxdWUtPnJlcSkgewogICAgc3RydWN0IGh0dHBfcmVxdWVzdCogcmVxID0gb3BhcXVlLT5yZXE7CiAgICBvcGFxdWUtPnJlcSA9IDA7CiAgICByZXF1ZXN0X2ZyZWUocmVxLCBydCk7CiAgfQogIGlmKG9wYXF1ZS0+cmVzcCkgewogICAgUmVzcG9uc2UqIHJlc3AgPSBvcGFxdWUtPnJlc3A7CiAgICBvcGFxdWUtPnJlc3AgPSAwOwogICAgcmVzcG9uc2VfZnJlZShyZXNwLCBydCk7CiAgfQogIGlmKG9wYXF1ZS0+Zm9ybV9wYXJzZXIpIHsKICAgIGZvcm1fcGFyc2VyX2ZyZWVfcnQob3BhcXVlLT5mb3JtX3BhcnNlciwgcnQpOwogICAgb3BhcXVlLT5mb3JtX3BhcnNlciA9IDA7CiAgfQp9Cgp2b2lkCm9wYXF1ZV9mcmVlX3J0KHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlLCBKU1J1bnRpbWUqIHJ0KSB7CiAgb3BhcXVlX2NsZWFyX3J0KG9wYXF1ZSwgcnQpOwoKICBpZigtLW9wYXF1ZS0+cmVmX2NvdW50ID09IDApIHsKICAgIGFzc2VydChvcGFxdWUtPmxpbmsubmV4dCk7CiAgICBsaXN0X2RlbCgmb3BhcXVlLT5saW5rKTsKCiAgICBqc19mcmVlX3J0KHJ0LCBvcGFxdWUpOwogIH0KfQoKdm9pZApvcGFxdWVfZnJlZShzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSwgSlNDb250ZXh0KiBjdHgpIHsKICBvcGFxdWVfZnJlZV9ydChvcGFxdWUsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKb3BhcXVlX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEpKSkpIHsKICAgIG9wYXF1ZS0+c2VyaWFsID0gKytzZXJpYWw7CiAgICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CiAgICBvcGFxdWUtPnJlZl9jb3VudCA9IDE7CgogICAgaWYob3BhcXVlX2xpc3QucHJldiA9PSBOVUxMKQogICAgICBpbml0X2xpc3RfaGVhZCgmb3BhcXVlX2xpc3QpOwoKICAgIGxpc3RfYWRkKCZvcGFxdWUtPmxpbmssICZvcGFxdWVfbGlzdCk7CiAgfQoKICByZXR1cm4gb3BhcXVlOwp9CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCmx3c19vcGFxdWUoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZTsKCiAgYXNzZXJ0KGN0eCk7CgogIG9wYXF1ZSA9IG9wYXF1ZV9uZXcoY3R4KTsKCiAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgb3BhcXVlKTsKICByZXR1cm4gb3BhcXVlOwp9CgAAAAAAAAAADAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAMBwAAI2luY2x1ZGUgIm9wYXF1ZS5oIgojaW5jbHVkZSAid3MuaCIKI2luY2x1ZGUgInJlcXVlc3QuaCIKI2luY2x1ZGUgInJlc3BvbnNlLmgiCiNpbmNsdWRlICJmb3JtLXBhcnNlci5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+CgovLyBzdGF0aWMgVEhSRUFEX0xPQ0FMIHZvaWQqIHByZXZfcHRyID0gMDsKVEhSRUFEX0xPQ0FMIGludDY0X3Qgc2VyaWFsID0gMDsKVEhSRUFEX0xPQ0FMIHN0cnVjdCBsaXN0X2hlYWQgb3BhcXVlX2xpc3QgPSB7MCwgMH07Cgp2b2lkCm9wYXF1ZV9jbGVhcl9ydChzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSwgSlNSdW50aW1lKiBydCkgewogIGlmKG9wYXF1ZS0+d3MpIHsKICAgIHN0cnVjdCBzb2NrZXQqIHdzID0gb3BhcXVlLT53czsKICAgIG9wYXF1ZS0+d3MgPSAwOwogICAgd3NfZnJlZV9ydCh3cywgcnQpOwogIH0KICBpZihvcGFxdWUtPnJlcSkgewogICAgUmVxdWVzdCogcmVxID0gb3BhcXVlLT5yZXE7CiAgICBvcGFxdWUtPnJlcSA9IDA7CiAgICByZXF1ZXN0X2ZyZWUocmVxLCBydCk7CiAgfQogIGlmKG9wYXF1ZS0+cmVzcCkgewogICAgUmVzcG9uc2UqIHJlc3AgPSBvcGFxdWUtPnJlc3A7CiAgICBvcGFxdWUtPnJlc3AgPSAwOwogICAgcmVzcG9uc2VfZnJlZShyZXNwLCBydCk7CiAgfQogIGlmKG9wYXF1ZS0+Zm9ybV9wYXJzZXIpIHsKICAgIGZvcm1fcGFyc2VyX2ZyZWVfcnQob3BhcXVlLT5mb3JtX3BhcnNlciwgcnQpOwogICAgb3BhcXVlLT5mb3JtX3BhcnNlciA9IDA7CiAgfQp9Cgp2b2lkCm9wYXF1ZV9mcmVlX3J0KHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlLCBKU1J1bnRpbWUqIHJ0KSB7CiAgb3BhcXVlX2NsZWFyX3J0KG9wYXF1ZSwgcnQpOwoKICBpZigtLW9wYXF1ZS0+cmVmX2NvdW50ID09IDApIHsKICAgIGFzc2VydChvcGFxdWUtPmxpbmsubmV4dCk7CiAgICBsaXN0X2RlbCgmb3BhcXVlLT5saW5rKTsKCiAgICBqc19mcmVlX3J0KHJ0LCBvcGFxdWUpOwogIH0KfQoKdm9pZApvcGFxdWVfZnJlZShzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqIG9wYXF1ZSwgSlNDb250ZXh0KiBjdHgpIHsKICBvcGFxdWVfZnJlZV9ydChvcGFxdWUsIEpTX0dldFJ1bnRpbWUoY3R4KSk7Cn0KCnN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSoKb3BhcXVlX25ldyhKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEpKSkpIHsKICAgIG9wYXF1ZS0+c2VyaWFsID0gKytzZXJpYWw7CiAgICBvcGFxdWUtPnN0YXR1cyA9IENPTk5FQ1RJTkc7CiAgICBvcGFxdWUtPnJlZl9jb3VudCA9IDE7CgogICAgaWYob3BhcXVlX2xpc3QucHJldiA9PSBOVUxMKQogICAgICBpbml0X2xpc3RfaGVhZCgmb3BhcXVlX2xpc3QpOwoKICAgIGxpc3RfYWRkKCZvcGFxdWUtPmxpbmssICZvcGFxdWVfbGlzdCk7CiAgfQoKICByZXR1cm4gb3BhcXVlOwp9CgpzdHJ1Y3Qgd3NpX29wYXF1ZV91c2VyX2RhdGEqCmx3c19vcGFxdWUoc3RydWN0IGx3cyogd3NpLCBKU0NvbnRleHQqIGN0eCkgewogIHN0cnVjdCB3c2lfb3BhcXVlX3VzZXJfZGF0YSogb3BhcXVlOwoKICBpZigob3BhcXVlID0gbHdzX2dldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSkpKQogICAgcmV0dXJuIG9wYXF1ZTsKCiAgYXNzZXJ0KGN0eCk7CgogIG9wYXF1ZSA9IG9wYXF1ZV9uZXcoY3R4KTsKCiAgbHdzX3NldF9vcGFxdWVfdXNlcl9kYXRhKHdzaSwgb3BhcXVlKTsKICByZXR1cm4gb3BhcXVlOwp9CgAAAAAAAAAADAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/jsutils.c",
			"settings":
			{
				"buffer_size": 25008,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					15,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA4T4AAAAAAADhPgAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA4T4AAAAAAADhPgAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA4T4AAAAAAADhPgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/buffer.c",
			"settings":
			{
				"buffer_size": 4002,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					15,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAADcWAAAAAAAAORYAAAAAAAAAAAAABBUAAAAAAAAGFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxYAAAAAAAAEFQAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAFEPAAAAAAAAUw8AAAAAAAAAAAAABA4AAAAAAAAGDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQ8AAAAAAAAEDgAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAAQOAAAAAAAABA4AAAAAAAACAAAALypRDwAAAAAAAFEPAAAAAAAAAgAAACov",
					"AQAAAAAAAAABAAAACg4AAAAAAAAKDgAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"cut",
					null,
					"AQAAAAMVAAAAAAAAAxUAAAAAAAA4AQAACi8qCmNoYXIqCmJ1ZmZlcl9lc2NhcGVkKEJ5dGVCdWZmZXIgY29uc3QqIGJ1ZikgewogIGNoYXIqIHB0cjsKICBCeXRlQnVmZmVyIG91dDsKICBzaXplX3Qgc2l6ZSA9IGJ1ZmZlcl9SRU1BSU4oYnVmKSAqIDQ7CgogIHNpemUgPSAoc2l6ZSArIDgpICYgKH43KTsKCiAgaWYoIShwdHIgPSBtYWxsb2Moc2l6ZSkpKQogICAgcmV0dXJuIDA7CgogIG91dCA9IEJVRkZFUl9OKHB0ciwgc2l6ZSAtIDEpOwoKICBwdHJbYnVmZmVyX2VzY2FwZSgmb3V0LCBidWYtPnJlYWQsIGJ1ZmZlcl9SRU1BSU4oYnVmKSldID0gJ1wwJzsKCiAgcmV0dXJuIHB0cjsKfSov",
					"AQAAAAAAAAABAAAAAxUAAAAAAAA7FgAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"cut",
					null,
					"AQAAAAMOAAAAAAAAAw4AAAAAAABOAQAACgppbnQKYnVmZmVyX2Zyb212YWx1ZShCeXRlQnVmZmVyKiBidWYsIEpTVmFsdWVDb25zdCB2YWx1ZSwgSlNDb250ZXh0KiBjdHgpIHsKICBpbnQgcmV0ID0gLTE7CiAgSlNCdWZmZXIgaW5wdXQgPSBqc19pbnB1dF9jaGFycyhjdHgsIHZhbHVlKTsKCiAgaWYoaW5wdXQuZGF0YSA9PSAwIHx8IGlucHV0LnNpemUgPT0gMCkgewogICAgcmV0ID0gMDsKICB9IGVsc2UgaWYoYnVmZmVyX2FwcGVuZChidWYsIGlucHV0LmRhdGEsIGlucHV0LnNpemUpID09IGlucHV0LnNpemUpIHsKICAgIHJldCA9IDE7CiAgfQoKICBqc19idWZmZXJfZnJlZSgmaW5wdXQsIGN0eCk7CiAgcmV0dXJuIHJldDsKfQ",
					"AQAAAAAAAAABAAAAUQ8AAAAAAAADDgAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"cut",
					null,
					"AQAAAAQOAAAAAAAABA4AAAAAAACOAAAACkpTVmFsdWUKYnVmZmVyX3Rvc3RyaW5nKEJ5dGVCdWZmZXIgY29uc3QqIGJ1ZiwgSlNDb250ZXh0KiBjdHgpIHsKICByZXR1cm4gSlNfTmV3U3RyaW5nTGVuKGN0eCwgKGNvbnN0IGNoYXIqKWJ1Zi0+c3RhcnQsIGJ1ZmZlcl9IRUFEKGJ1ZikpOwp9Cg",
					"AQAAAAAAAAABAAAABA4AAAAAAACSDgAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"cut",
					null,
					"AQAAAAUOAAAAAAAABQ4AAAAAAAAiBQAAc2l6ZV90CmJ1ZmZlcl9lc2NhcGUoQnl0ZUJ1ZmZlciogYnVmLCBjb25zdCB2b2lkKiB4LCBzaXplX3QgbGVuKSB7CiAgY29uc3QgdWludDhfdCAqcHRyLCAqZW5kOwoKICBzaXplX3QgcHJldiA9IGJ1ZmZlcl9SRU1BSU4oYnVmKTsKCiAgZm9yKHB0ciA9IHgsIGVuZCA9IChjb25zdCB1aW50OF90Kil4ICsgbGVuOyBwdHIgPCBlbmQ7IHB0cisrKSB7CiAgICBjaGFyIGMgPSAqcHRyOwoKICAgIGlmKGJ1ZmZlcl9BVkFJTChidWYpIDwgNCkKICAgICAgYnJlYWs7CgogICAgc3dpdGNoKGMpIHsKICAgICAgY2FzZSAnXG4nOgogICAgICAgIGJ1ZmZlcl9wdXRjaGFyKGJ1ZiwgJ1xcJyk7CiAgICAgICAgYnVmZmVyX3B1dGNoYXIoYnVmLCAnbicpOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlICdccic6CiAgICAgICAgYnVmZmVyX3B1dGNoYXIoYnVmLCAnXFwnKTsKICAgICAgICBidWZmZXJfcHV0Y2hhcihidWYsICdyJyk7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgJ1x0JzoKICAgICAgICBidWZmZXJfcHV0Y2hhcihidWYsICdcXCcpOwogICAgICAgIGJ1ZmZlcl9wdXRjaGFyKGJ1ZiwgJ3QnKTsKICAgICAgICBicmVhazsKICAgICAgY2FzZSAnXHYnOgogICAgICAgIGJ1ZmZlcl9wdXRjaGFyKGJ1ZiwgJ1xcJyk7CiAgICAgICAgYnVmZmVyX3B1dGNoYXIoYnVmLCAndicpOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlICdcYic6CiAgICAgICAgYnVmZmVyX3B1dGNoYXIoYnVmLCAnXFwnKTsKICAgICAgICBidWZmZXJfcHV0Y2hhcihidWYsICdiJyk7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgMDoKICAgICAgY2FzZSAxOgogICAgICBjYXNlIDI6CiAgICAgIGNhc2UgMzoKICAgICAgY2FzZSA0OgogICAgICBjYXNlIDU6CiAgICAgIGNhc2UgNjoKICAgICAgY2FzZSA3OgogICAgICBjYXNlIDEyOgogICAgICBjYXNlIDE0OgogICAgICBjYXNlIDE1OgogICAgICBjYXNlIDE2OgogICAgICBjYXNlIDE3OgogICAgICBjYXNlIDE4OgogICAgICBjYXNlIDE5OgogICAgICBjYXNlIDIwOgogICAgICBjYXNlIDIxOgogICAgICBjYXNlIDIyOgogICAgICBjYXNlIDIzOgogICAgICBjYXNlIDI0OgogICAgICBjYXNlIDI1OgogICAgICBjYXNlIDI2OgogICAgICBjYXNlIDI3OgogICAgICBjYXNlIDI4OgogICAgICBjYXNlIDI5OgogICAgICBjYXNlIDMwOgogICAgICBjYXNlIDMxOiBidWZmZXJfcHJpbnRmKGJ1ZiwgIlxceCUwMiIsIGMpOyBicmVhazsKICAgICAgZGVmYXVsdDogYnVmZmVyX3B1dGNoYXIoYnVmLCBjKTsgYnJlYWs7CiAgICB9CiAgfQogIHJldHVybiBidWZmZXJfUkVNQUlOKGJ1ZikgLSBwcmV2Owp9",
					"AQAAAAAAAAABAAAABQ4AAAAAAAAnEwAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"cut",
					null,
					"AQAAACwPAAAAAAAALA8AAAAAAACqAAAACkJPT0wKYnVmZmVyX3B1dGNoYXIoQnl0ZUJ1ZmZlciogYnVmLCBjaGFyIGMpIHsKICBpZihidWYtPndyaXRlICsgMSA8PSBidWYtPmVuZCkgewogICAgKmJ1Zi0+d3JpdGUgPSAodWludDhfdCljOwogICAgYnVmLT53cml0ZSsrOwogICAgcmV0dXJuIFRSVUU7CiAgfQogIHJldHVybiBGQUxTRTsKfQo",
					"AQAAAAAAAAABAAAALA8AAAAAAADWDwAAAAAAAAAAAAAAACJA"
				],
				[
					94,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACkDwAAI2luY2x1ZGUgImJ1ZmZlci5oIgojaW5jbHVkZSAianN1dGlscy5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+Cgp1aW50OF90KgpibG9ja19hbGxvYyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBwdHI7CgogIGlmKChwdHIgPSBtYWxsb2Moc2l6ZSArIExXU19QUkUpKSkgewogICAgYmxrLT5zdGFydCA9IHB0ciArIExXU19QUkU7CiAgICBibGstPmVuZCA9IGJsay0+c3RhcnQgKyBzaXplOwogIH0KCiAgcmV0dXJuIHB0cjsKfQoKdWludDhfdCoKYmxvY2tfcmVhbGxvYyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBwdHI7CgogIGlmKCFzaXplKSB7CiAgICBibG9ja19mcmVlKGJsayk7CiAgICByZXR1cm4gMDsKICB9CgogIGlmKChwdHIgPSByZWFsbG9jKGJsb2NrX0FMTE9DKGJsayksIHNpemUgKyBMV1NfUFJFKSkpIHsKICAgIGJsay0+c3RhcnQgPSBwdHIgKyBMV1NfUFJFOwogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ICsgc2l6ZTsKICB9IGVsc2UgewogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ID0gMDsKICB9CgogIHJldHVybiBwdHI7Cn0KCnZvaWQKYmxvY2tfZnJlZShCeXRlQmxvY2sqIGJsaykgewogIGlmKGJsay0+c3RhcnQpCiAgICBmcmVlKGJsay0+c3RhcnQgLSBMV1NfUFJFKTsKCiAgYmxrLT5zdGFydCA9IGJsay0+ZW5kID0gMDsKfQoKdWludDhfdCoKYmxvY2tfZ3JvdyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBhbGxvYzsKICBzaXplX3QgbmV3c2l6ZSA9IGJsb2NrX1NJWkUoYmxrKSArIHNpemU7CiAgaWYoKGFsbG9jID0gcmVhbGxvYyhibG9ja19BTExPQyhibGspLCBMV1NfUFJFICsgbmV3c2l6ZSkpKSB7CiAgICBibGstPnN0YXJ0ID0gYWxsb2MgKyBMV1NfUFJFOwogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ICsgbmV3c2l6ZTsKICB9CiAgcmV0dXJuIGFsbG9jID8gYmxrLT5zdGFydCA6IDA7Cn0KCnN0YXRpYyB2b2lkCmJsb2NrX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCB2b2lkKiBhbGxvYywgdm9pZCogc3RhcnQpIHsKICBmcmVlKGFsbG9jKTsKfQoKQnl0ZUJsb2NrCmJsb2NrX2NvcHkoY29uc3Qgdm9pZCogcHRyLCBzaXplX3Qgc2l6ZSkgewogIEJ5dGVCbG9jayByZXQgPSB7MCwgMH07CiAgaWYoYmxvY2tfYWxsb2MoJnJldCwgc2l6ZSkpIHsKICAgIG1lbWNweShyZXQuc3RhcnQsIHB0ciwgc2l6ZSk7CiAgfQogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKYmxvY2tfdG9hcnJheWJ1ZmZlcihCeXRlQmxvY2sqIGJsaywgSlNDb250ZXh0KiBjdHgpIHsKICBCeXRlQmxvY2sgbWVtID0gYmxvY2tfbW92ZSgoQnl0ZUJsb2NrKilibGspOwogIHJldHVybiBKU19OZXdBcnJheUJ1ZmZlcihjdHgsIGJsb2NrX0JFR0lOKCZtZW0pLCBibG9ja19TSVpFKCZtZW0pLCBibG9ja19maW5hbGl6ZXIsIGJsb2NrX0FMTE9DKCZtZW0pLCBGQUxTRSk7Cn0KCkpTVmFsdWUKYmxvY2tfdG9zdHJpbmcoQnl0ZUJsb2NrKiBibGssIEpTQ29udGV4dCogY3R4KSB7CiAgQnl0ZUJsb2NrIG1lbSA9IGJsb2NrX21vdmUoKEJ5dGVCbG9jayopYmxrKTsKICBKU1ZhbHVlIHN0ciA9IEpTX05ld1N0cmluZ0xlbihjdHgsIGJsb2NrX0JFR0lOKCZtZW0pLCBibG9ja19TSVpFKCZtZW0pKTsKICBibG9ja19mcmVlKCZtZW0pOwogIHJldHVybiBzdHI7Cn0KCnNzaXplX3QKYmxvY2tfYXBwZW5kKEJ5dGVCbG9jayogYmxrLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3Qgc2l6ZSkgewogIHNpemVfdCBvZmZzZXQgPSBibG9ja19TSVpFKGJsayk7CiAgdWludDhfdCogc3RhcnQ7CgogIGlmKChzdGFydCA9IGJsb2NrX2dyb3coYmxrLCBzaXplKSkpIHsKICAgIG1lbWNweShzdGFydCArIG9mZnNldCwgZGF0YSwgc2l6ZSk7CiAgICByZXR1cm4gc2l6ZTsKICB9CiAgcmV0dXJuIC0xOwp9Cgp1aW50OF90KgpidWZmZXJfYWxsb2MoQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHVpbnQ4X3QqIHJldDsKICBpZigocmV0ID0gYmxvY2tfYWxsb2MoJmJ1Zi0+YmxvY2ssIHNpemUpKSkgewogICAgYnVmLT5hbGxvYyA9IHJldDsKICAgIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQ7CiAgICBidWYtPndyaXRlID0gYnVmLT5zdGFydDsKICB9CiAgcmV0dXJuIHJldDsKfQoKc3NpemVfdApidWZmZXJfYXBwZW5kKEJ5dGVCdWZmZXIqIGJ1ZiwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IG4pIHsKICBpZigoc2l6ZV90KWJ1ZmZlcl9BVkFJTChidWYpIDwgbiArIDEpIHsKICAgIGlmKCFidWZmZXJfcmVhbGxvYyhidWYsIGJ1ZmZlcl9IRUFEKGJ1ZikgKyBuICsgMSkpCiAgICAgIHJldHVybiAtMTsKICB9CiAgbWVtY3B5KGJ1Zi0+d3JpdGUsIHgsIG4pOwogIGJ1Zi0+d3JpdGVbbl0gPSAnXDAnOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gbjsKfQoKdm9pZApidWZmZXJfZnJlZShCeXRlQnVmZmVyKiBidWYpIHsKICBpZihidWYtPmFsbG9jKQogICAgYmxvY2tfZnJlZSgmYnVmLT5ibG9jayk7CiAgYnVmLT5yZWFkID0gYnVmLT53cml0ZSA9IGJ1Zi0+YWxsb2MgPSAwOwp9CgpCT09MCmJ1ZmZlcl93cml0ZShCeXRlQnVmZmVyKiBidWYsIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBuKSB7CiAgYXNzZXJ0KChzaXplX3QpYnVmZmVyX0FWQUlMKGJ1ZikgPj0gbik7CiAgbWVtY3B5KGJ1Zi0+d3JpdGUsIHgsIG4pOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gVFJVRTsKfQoKaW50CmJ1ZmZlcl92cHJpbnRmKEJ5dGVCdWZmZXIqIGJ1ZiwgY29uc3QgY2hhciogZm9ybWF0LCB2YV9saXN0IGFwKSB7CiAgc3NpemVfdCBuLCBzaXplID0gYnVmZmVyX0FWQUlMKGJ1Zik7CiAgbiA9IHZzbnByaW50ZigoY2hhciopYnVmLT53cml0ZSwgc2l6ZSwgZm9ybWF0LCBhcCk7CiAgaWYobiA+IHNpemUpCiAgICByZXR1cm4gMDsKICBpZihuID49IChpbnQpc2l6ZSkKICAgIG4gPSBzaXplOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gbjsKfQoKaW50CmJ1ZmZlcl9wcmludGYoQnl0ZUJ1ZmZlciogYnVmLCBjb25zdCBjaGFyKiBmb3JtYXQsIC4uLikgewogIGludCBuOwogIHZhX2xpc3QgYXA7CiAgdmFfc3RhcnQoYXAsIGZvcm1hdCk7CiAgbiA9IGJ1ZmZlcl92cHJpbnRmKGJ1ZiwgZm9ybWF0LCBhcCk7CiAgdmFfZW5kKGFwKTsKICByZXR1cm4gbjsKfQoKdWludDhfdCoKYnVmZmVyX3JlYWxsb2MoQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHNpemVfdCByZCwgd3I7CiAgdWludDhfdCogeDsKCiAgaWYoIXNpemUpIHsKICAgIGJ1ZmZlcl9mcmVlKGJ1Zik7CiAgICByZXR1cm4gMDsKICB9CgogIHJkID0gYnVmZmVyX1RBSUwoYnVmKTsKICB3ciA9IGJ1ZmZlcl9IRUFEKGJ1Zik7CiAgYXNzZXJ0KHNpemUgPj0gd3IpOwoKICBpZigoeCA9IGJsb2NrX3JlYWxsb2MoJmJ1Zi0+YmxvY2ssIHNpemUpKSkgewogICAgaWYoYnVmLT5hbGxvYyA9PSAwICYmIGJ1Zi0+c3RhcnQgJiYgd3IpCiAgICAgIG1lbWNweSh4ICsgTFdTX1BSRSwgYnVmLT5zdGFydCwgd3IpOwoKICAgIGJ1Zi0+YWxsb2MgPSB4OwogICAgYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQgKyB3cjsKICAgIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQgKyByZDsKICB9CiAgcmV0dXJuIHg7Cn0KCgoKQk9PTApidWZmZXJfY2xvbmUoQnl0ZUJ1ZmZlciogYnVmLCBjb25zdCBCeXRlQnVmZmVyKiBvdGhlcikgewogIGlmKCFidWZmZXJfYWxsb2MoYnVmLCBibG9ja19TSVpFKG90aGVyKSkpCiAgICByZXR1cm4gRkFMU0U7CiAgbWVtY3B5KGJ1Zi0+c3RhcnQsIG90aGVyLT5zdGFydCwgYnVmZmVyX0hFQUQob3RoZXIpKTsKCiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9UQUlMKG90aGVyKTsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9IRUFEKG90aGVyKTsKICByZXR1cm4gVFJVRTsKfQoKdWludDhfdCoKYnVmZmVyX2dyb3coQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHNpemUgKz0gYnVmZmVyX1NJWkUoYnVmKTsKICByZXR1cm4gYnVmZmVyX3JlYWxsb2MoYnVmLCBzaXplKTsKfQoAAAAAAAAAAKQPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALA8AAAAAAAAsDwAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACkDwAAI2luY2x1ZGUgImJ1ZmZlci5oIgojaW5jbHVkZSAianN1dGlscy5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+Cgp1aW50OF90KgpibG9ja19hbGxvYyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBwdHI7CgogIGlmKChwdHIgPSBtYWxsb2Moc2l6ZSArIExXU19QUkUpKSkgewogICAgYmxrLT5zdGFydCA9IHB0ciArIExXU19QUkU7CiAgICBibGstPmVuZCA9IGJsay0+c3RhcnQgKyBzaXplOwogIH0KCiAgcmV0dXJuIHB0cjsKfQoKdWludDhfdCoKYmxvY2tfcmVhbGxvYyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBwdHI7CgogIGlmKCFzaXplKSB7CiAgICBibG9ja19mcmVlKGJsayk7CiAgICByZXR1cm4gMDsKICB9CgogIGlmKChwdHIgPSByZWFsbG9jKGJsb2NrX0FMTE9DKGJsayksIHNpemUgKyBMV1NfUFJFKSkpIHsKICAgIGJsay0+c3RhcnQgPSBwdHIgKyBMV1NfUFJFOwogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ICsgc2l6ZTsKICB9IGVsc2UgewogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ID0gMDsKICB9CgogIHJldHVybiBwdHI7Cn0KCnZvaWQKYmxvY2tfZnJlZShCeXRlQmxvY2sqIGJsaykgewogIGlmKGJsay0+c3RhcnQpCiAgICBmcmVlKGJsay0+c3RhcnQgLSBMV1NfUFJFKTsKCiAgYmxrLT5zdGFydCA9IGJsay0+ZW5kID0gMDsKfQoKdWludDhfdCoKYmxvY2tfZ3JvdyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBhbGxvYzsKICBzaXplX3QgbmV3c2l6ZSA9IGJsb2NrX1NJWkUoYmxrKSArIHNpemU7CiAgaWYoKGFsbG9jID0gcmVhbGxvYyhibG9ja19BTExPQyhibGspLCBMV1NfUFJFICsgbmV3c2l6ZSkpKSB7CiAgICBibGstPnN0YXJ0ID0gYWxsb2MgKyBMV1NfUFJFOwogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ICsgbmV3c2l6ZTsKICB9CiAgcmV0dXJuIGFsbG9jID8gYmxrLT5zdGFydCA6IDA7Cn0KCnN0YXRpYyB2b2lkCmJsb2NrX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCB2b2lkKiBhbGxvYywgdm9pZCogc3RhcnQpIHsKICBmcmVlKGFsbG9jKTsKfQoKQnl0ZUJsb2NrCmJsb2NrX2NvcHkoY29uc3Qgdm9pZCogcHRyLCBzaXplX3Qgc2l6ZSkgewogIEJ5dGVCbG9jayByZXQgPSB7MCwgMH07CiAgaWYoYmxvY2tfYWxsb2MoJnJldCwgc2l6ZSkpIHsKICAgIG1lbWNweShyZXQuc3RhcnQsIHB0ciwgc2l6ZSk7CiAgfQogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKYmxvY2tfdG9hcnJheWJ1ZmZlcihCeXRlQmxvY2sqIGJsaywgSlNDb250ZXh0KiBjdHgpIHsKICBCeXRlQmxvY2sgbWVtID0gYmxvY2tfbW92ZSgoQnl0ZUJsb2NrKilibGspOwogIHJldHVybiBKU19OZXdBcnJheUJ1ZmZlcihjdHgsIGJsb2NrX0JFR0lOKCZtZW0pLCBibG9ja19TSVpFKCZtZW0pLCBibG9ja19maW5hbGl6ZXIsIGJsb2NrX0FMTE9DKCZtZW0pLCBGQUxTRSk7Cn0KCkpTVmFsdWUKYmxvY2tfdG9zdHJpbmcoQnl0ZUJsb2NrKiBibGssIEpTQ29udGV4dCogY3R4KSB7CiAgQnl0ZUJsb2NrIG1lbSA9IGJsb2NrX21vdmUoKEJ5dGVCbG9jayopYmxrKTsKICBKU1ZhbHVlIHN0ciA9IEpTX05ld1N0cmluZ0xlbihjdHgsIGJsb2NrX0JFR0lOKCZtZW0pLCBibG9ja19TSVpFKCZtZW0pKTsKICBibG9ja19mcmVlKCZtZW0pOwogIHJldHVybiBzdHI7Cn0KCnNzaXplX3QKYmxvY2tfYXBwZW5kKEJ5dGVCbG9jayogYmxrLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3Qgc2l6ZSkgewogIHNpemVfdCBvZmZzZXQgPSBibG9ja19TSVpFKGJsayk7CiAgdWludDhfdCogc3RhcnQ7CgogIGlmKChzdGFydCA9IGJsb2NrX2dyb3coYmxrLCBzaXplKSkpIHsKICAgIG1lbWNweShzdGFydCArIG9mZnNldCwgZGF0YSwgc2l6ZSk7CiAgICByZXR1cm4gc2l6ZTsKICB9CiAgcmV0dXJuIC0xOwp9Cgp1aW50OF90KgpidWZmZXJfYWxsb2MoQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHVpbnQ4X3QqIHJldDsKICBpZigocmV0ID0gYmxvY2tfYWxsb2MoJmJ1Zi0+YmxvY2ssIHNpemUpKSkgewogICAgYnVmLT5hbGxvYyA9IHJldDsKICAgIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQ7CiAgICBidWYtPndyaXRlID0gYnVmLT5zdGFydDsKICB9CiAgcmV0dXJuIHJldDsKfQoKc3NpemVfdApidWZmZXJfYXBwZW5kKEJ5dGVCdWZmZXIqIGJ1ZiwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IG4pIHsKICBpZigoc2l6ZV90KWJ1ZmZlcl9BVkFJTChidWYpIDwgbiArIDEpIHsKICAgIGlmKCFidWZmZXJfcmVhbGxvYyhidWYsIGJ1ZmZlcl9IRUFEKGJ1ZikgKyBuICsgMSkpCiAgICAgIHJldHVybiAtMTsKICB9CiAgbWVtY3B5KGJ1Zi0+d3JpdGUsIHgsIG4pOwogIGJ1Zi0+d3JpdGVbbl0gPSAnXDAnOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gbjsKfQoKdm9pZApidWZmZXJfZnJlZShCeXRlQnVmZmVyKiBidWYpIHsKICBpZihidWYtPmFsbG9jKQogICAgYmxvY2tfZnJlZSgmYnVmLT5ibG9jayk7CiAgYnVmLT5yZWFkID0gYnVmLT53cml0ZSA9IGJ1Zi0+YWxsb2MgPSAwOwp9CgpCT09MCmJ1ZmZlcl93cml0ZShCeXRlQnVmZmVyKiBidWYsIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBuKSB7CiAgYXNzZXJ0KChzaXplX3QpYnVmZmVyX0FWQUlMKGJ1ZikgPj0gbik7CiAgbWVtY3B5KGJ1Zi0+d3JpdGUsIHgsIG4pOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gVFJVRTsKfQoKaW50CmJ1ZmZlcl92cHJpbnRmKEJ5dGVCdWZmZXIqIGJ1ZiwgY29uc3QgY2hhciogZm9ybWF0LCB2YV9saXN0IGFwKSB7CiAgc3NpemVfdCBuLCBzaXplID0gYnVmZmVyX0FWQUlMKGJ1Zik7CiAgbiA9IHZzbnByaW50ZigoY2hhciopYnVmLT53cml0ZSwgc2l6ZSwgZm9ybWF0LCBhcCk7CiAgaWYobiA+IHNpemUpCiAgICByZXR1cm4gMDsKICBpZihuID49IChpbnQpc2l6ZSkKICAgIG4gPSBzaXplOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gbjsKfQoKaW50CmJ1ZmZlcl9wcmludGYoQnl0ZUJ1ZmZlciogYnVmLCBjb25zdCBjaGFyKiBmb3JtYXQsIC4uLikgewogIGludCBuOwogIHZhX2xpc3QgYXA7CiAgdmFfc3RhcnQoYXAsIGZvcm1hdCk7CiAgbiA9IGJ1ZmZlcl92cHJpbnRmKGJ1ZiwgZm9ybWF0LCBhcCk7CiAgdmFfZW5kKGFwKTsKICByZXR1cm4gbjsKfQoKdWludDhfdCoKYnVmZmVyX3JlYWxsb2MoQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHNpemVfdCByZCwgd3I7CiAgdWludDhfdCogeDsKCiAgaWYoIXNpemUpIHsKICAgIGJ1ZmZlcl9mcmVlKGJ1Zik7CiAgICByZXR1cm4gMDsKICB9CgogIHJkID0gYnVmZmVyX1RBSUwoYnVmKTsKICB3ciA9IGJ1ZmZlcl9IRUFEKGJ1Zik7CiAgYXNzZXJ0KHNpemUgPj0gd3IpOwoKICBpZigoeCA9IGJsb2NrX3JlYWxsb2MoJmJ1Zi0+YmxvY2ssIHNpemUpKSkgewogICAgaWYoYnVmLT5hbGxvYyA9PSAwICYmIGJ1Zi0+c3RhcnQgJiYgd3IpCiAgICAgIG1lbWNweSh4ICsgTFdTX1BSRSwgYnVmLT5zdGFydCwgd3IpOwoKICAgIGJ1Zi0+YWxsb2MgPSB4OwogICAgYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQgKyB3cjsKICAgIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQgKyByZDsKICB9CiAgcmV0dXJuIHg7Cn0KCgoKQk9PTApidWZmZXJfY2xvbmUoQnl0ZUJ1ZmZlciogYnVmLCBjb25zdCBCeXRlQnVmZmVyKiBvdGhlcikgewogIGlmKCFidWZmZXJfYWxsb2MoYnVmLCBibG9ja19TSVpFKG90aGVyKSkpCiAgICByZXR1cm4gRkFMU0U7CiAgbWVtY3B5KGJ1Zi0+c3RhcnQsIG90aGVyLT5zdGFydCwgYnVmZmVyX0hFQUQob3RoZXIpKTsKCiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9UQUlMKG90aGVyKTsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9IRUFEKG90aGVyKTsKICByZXR1cm4gVFJVRTsKfQoKdWludDhfdCoKYnVmZmVyX2dyb3coQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHNpemUgKz0gYnVmZmVyX1NJWkUoYnVmKTsKICByZXR1cm4gYnVmZmVyX3JlYWxsb2MoYnVmLCBzaXplKTsKfQoAAAAAAAAAAKQPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALA8AAAAAAAAsDwAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACkDwAAI2luY2x1ZGUgImJ1ZmZlci5oIgojaW5jbHVkZSAianN1dGlscy5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+Cgp1aW50OF90KgpibG9ja19hbGxvYyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBwdHI7CgogIGlmKChwdHIgPSBtYWxsb2Moc2l6ZSArIExXU19QUkUpKSkgewogICAgYmxrLT5zdGFydCA9IHB0ciArIExXU19QUkU7CiAgICBibGstPmVuZCA9IGJsay0+c3RhcnQgKyBzaXplOwogIH0KCiAgcmV0dXJuIHB0cjsKfQoKdWludDhfdCoKYmxvY2tfcmVhbGxvYyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBwdHI7CgogIGlmKCFzaXplKSB7CiAgICBibG9ja19mcmVlKGJsayk7CiAgICByZXR1cm4gMDsKICB9CgogIGlmKChwdHIgPSByZWFsbG9jKGJsb2NrX0FMTE9DKGJsayksIHNpemUgKyBMV1NfUFJFKSkpIHsKICAgIGJsay0+c3RhcnQgPSBwdHIgKyBMV1NfUFJFOwogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ICsgc2l6ZTsKICB9IGVsc2UgewogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ID0gMDsKICB9CgogIHJldHVybiBwdHI7Cn0KCnZvaWQKYmxvY2tfZnJlZShCeXRlQmxvY2sqIGJsaykgewogIGlmKGJsay0+c3RhcnQpCiAgICBmcmVlKGJsay0+c3RhcnQgLSBMV1NfUFJFKTsKCiAgYmxrLT5zdGFydCA9IGJsay0+ZW5kID0gMDsKfQoKdWludDhfdCoKYmxvY2tfZ3JvdyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBhbGxvYzsKICBzaXplX3QgbmV3c2l6ZSA9IGJsb2NrX1NJWkUoYmxrKSArIHNpemU7CiAgaWYoKGFsbG9jID0gcmVhbGxvYyhibG9ja19BTExPQyhibGspLCBMV1NfUFJFICsgbmV3c2l6ZSkpKSB7CiAgICBibGstPnN0YXJ0ID0gYWxsb2MgKyBMV1NfUFJFOwogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ICsgbmV3c2l6ZTsKICB9CiAgcmV0dXJuIGFsbG9jID8gYmxrLT5zdGFydCA6IDA7Cn0KCnN0YXRpYyB2b2lkCmJsb2NrX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCB2b2lkKiBhbGxvYywgdm9pZCogc3RhcnQpIHsKICBmcmVlKGFsbG9jKTsKfQoKQnl0ZUJsb2NrCmJsb2NrX2NvcHkoY29uc3Qgdm9pZCogcHRyLCBzaXplX3Qgc2l6ZSkgewogIEJ5dGVCbG9jayByZXQgPSB7MCwgMH07CiAgaWYoYmxvY2tfYWxsb2MoJnJldCwgc2l6ZSkpIHsKICAgIG1lbWNweShyZXQuc3RhcnQsIHB0ciwgc2l6ZSk7CiAgfQogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKYmxvY2tfdG9hcnJheWJ1ZmZlcihCeXRlQmxvY2sqIGJsaywgSlNDb250ZXh0KiBjdHgpIHsKICBCeXRlQmxvY2sgbWVtID0gYmxvY2tfbW92ZSgoQnl0ZUJsb2NrKilibGspOwogIHJldHVybiBKU19OZXdBcnJheUJ1ZmZlcihjdHgsIGJsb2NrX0JFR0lOKCZtZW0pLCBibG9ja19TSVpFKCZtZW0pLCBibG9ja19maW5hbGl6ZXIsIGJsb2NrX0FMTE9DKCZtZW0pLCBGQUxTRSk7Cn0KCkpTVmFsdWUKYmxvY2tfdG9zdHJpbmcoQnl0ZUJsb2NrKiBibGssIEpTQ29udGV4dCogY3R4KSB7CiAgQnl0ZUJsb2NrIG1lbSA9IGJsb2NrX21vdmUoKEJ5dGVCbG9jayopYmxrKTsKICBKU1ZhbHVlIHN0ciA9IEpTX05ld1N0cmluZ0xlbihjdHgsIGJsb2NrX0JFR0lOKCZtZW0pLCBibG9ja19TSVpFKCZtZW0pKTsKICBibG9ja19mcmVlKCZtZW0pOwogIHJldHVybiBzdHI7Cn0KCnNzaXplX3QKYmxvY2tfYXBwZW5kKEJ5dGVCbG9jayogYmxrLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3Qgc2l6ZSkgewogIHNpemVfdCBvZmZzZXQgPSBibG9ja19TSVpFKGJsayk7CiAgdWludDhfdCogc3RhcnQ7CgogIGlmKChzdGFydCA9IGJsb2NrX2dyb3coYmxrLCBzaXplKSkpIHsKICAgIG1lbWNweShzdGFydCArIG9mZnNldCwgZGF0YSwgc2l6ZSk7CiAgICByZXR1cm4gc2l6ZTsKICB9CiAgcmV0dXJuIC0xOwp9Cgp1aW50OF90KgpidWZmZXJfYWxsb2MoQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHVpbnQ4X3QqIHJldDsKICBpZigocmV0ID0gYmxvY2tfYWxsb2MoJmJ1Zi0+YmxvY2ssIHNpemUpKSkgewogICAgYnVmLT5hbGxvYyA9IHJldDsKICAgIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQ7CiAgICBidWYtPndyaXRlID0gYnVmLT5zdGFydDsKICB9CiAgcmV0dXJuIHJldDsKfQoKc3NpemVfdApidWZmZXJfYXBwZW5kKEJ5dGVCdWZmZXIqIGJ1ZiwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IG4pIHsKICBpZigoc2l6ZV90KWJ1ZmZlcl9BVkFJTChidWYpIDwgbiArIDEpIHsKICAgIGlmKCFidWZmZXJfcmVhbGxvYyhidWYsIGJ1ZmZlcl9IRUFEKGJ1ZikgKyBuICsgMSkpCiAgICAgIHJldHVybiAtMTsKICB9CiAgbWVtY3B5KGJ1Zi0+d3JpdGUsIHgsIG4pOwogIGJ1Zi0+d3JpdGVbbl0gPSAnXDAnOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gbjsKfQoKdm9pZApidWZmZXJfZnJlZShCeXRlQnVmZmVyKiBidWYpIHsKICBpZihidWYtPmFsbG9jKQogICAgYmxvY2tfZnJlZSgmYnVmLT5ibG9jayk7CiAgYnVmLT5yZWFkID0gYnVmLT53cml0ZSA9IGJ1Zi0+YWxsb2MgPSAwOwp9CgpCT09MCmJ1ZmZlcl93cml0ZShCeXRlQnVmZmVyKiBidWYsIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBuKSB7CiAgYXNzZXJ0KChzaXplX3QpYnVmZmVyX0FWQUlMKGJ1ZikgPj0gbik7CiAgbWVtY3B5KGJ1Zi0+d3JpdGUsIHgsIG4pOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gVFJVRTsKfQoKaW50CmJ1ZmZlcl92cHJpbnRmKEJ5dGVCdWZmZXIqIGJ1ZiwgY29uc3QgY2hhciogZm9ybWF0LCB2YV9saXN0IGFwKSB7CiAgc3NpemVfdCBuLCBzaXplID0gYnVmZmVyX0FWQUlMKGJ1Zik7CiAgbiA9IHZzbnByaW50ZigoY2hhciopYnVmLT53cml0ZSwgc2l6ZSwgZm9ybWF0LCBhcCk7CiAgaWYobiA+IHNpemUpCiAgICByZXR1cm4gMDsKICBpZihuID49IChpbnQpc2l6ZSkKICAgIG4gPSBzaXplOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gbjsKfQoKaW50CmJ1ZmZlcl9wcmludGYoQnl0ZUJ1ZmZlciogYnVmLCBjb25zdCBjaGFyKiBmb3JtYXQsIC4uLikgewogIGludCBuOwogIHZhX2xpc3QgYXA7CiAgdmFfc3RhcnQoYXAsIGZvcm1hdCk7CiAgbiA9IGJ1ZmZlcl92cHJpbnRmKGJ1ZiwgZm9ybWF0LCBhcCk7CiAgdmFfZW5kKGFwKTsKICByZXR1cm4gbjsKfQoKdWludDhfdCoKYnVmZmVyX3JlYWxsb2MoQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHNpemVfdCByZCwgd3I7CiAgdWludDhfdCogeDsKCiAgaWYoIXNpemUpIHsKICAgIGJ1ZmZlcl9mcmVlKGJ1Zik7CiAgICByZXR1cm4gMDsKICB9CgogIHJkID0gYnVmZmVyX1RBSUwoYnVmKTsKICB3ciA9IGJ1ZmZlcl9IRUFEKGJ1Zik7CiAgYXNzZXJ0KHNpemUgPj0gd3IpOwoKICBpZigoeCA9IGJsb2NrX3JlYWxsb2MoJmJ1Zi0+YmxvY2ssIHNpemUpKSkgewogICAgaWYoYnVmLT5hbGxvYyA9PSAwICYmIGJ1Zi0+c3RhcnQgJiYgd3IpCiAgICAgIG1lbWNweSh4ICsgTFdTX1BSRSwgYnVmLT5zdGFydCwgd3IpOwoKICAgIGJ1Zi0+YWxsb2MgPSB4OwogICAgYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQgKyB3cjsKICAgIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQgKyByZDsKICB9CiAgcmV0dXJuIHg7Cn0KCgoKQk9PTApidWZmZXJfY2xvbmUoQnl0ZUJ1ZmZlciogYnVmLCBjb25zdCBCeXRlQnVmZmVyKiBvdGhlcikgewogIGlmKCFidWZmZXJfYWxsb2MoYnVmLCBibG9ja19TSVpFKG90aGVyKSkpCiAgICByZXR1cm4gRkFMU0U7CiAgbWVtY3B5KGJ1Zi0+c3RhcnQsIG90aGVyLT5zdGFydCwgYnVmZmVyX0hFQUQob3RoZXIpKTsKCiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9UQUlMKG90aGVyKTsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9IRUFEKG90aGVyKTsKICByZXR1cm4gVFJVRTsKfQoKdWludDhfdCoKYnVmZmVyX2dyb3coQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHNpemUgKz0gYnVmZmVyX1NJWkUoYnVmKTsKICByZXR1cm4gYnVmZmVyX3JlYWxsb2MoYnVmLCBzaXplKTsKfQoAAAAAAAAAAKQPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALA8AAAAAAAAsDwAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACkDwAAI2luY2x1ZGUgImJ1ZmZlci5oIgojaW5jbHVkZSAianN1dGlscy5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+Cgp1aW50OF90KgpibG9ja19hbGxvYyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBwdHI7CgogIGlmKChwdHIgPSBtYWxsb2Moc2l6ZSArIExXU19QUkUpKSkgewogICAgYmxrLT5zdGFydCA9IHB0ciArIExXU19QUkU7CiAgICBibGstPmVuZCA9IGJsay0+c3RhcnQgKyBzaXplOwogIH0KCiAgcmV0dXJuIHB0cjsKfQoKdWludDhfdCoKYmxvY2tfcmVhbGxvYyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBwdHI7CgogIGlmKCFzaXplKSB7CiAgICBibG9ja19mcmVlKGJsayk7CiAgICByZXR1cm4gMDsKICB9CgogIGlmKChwdHIgPSByZWFsbG9jKGJsb2NrX0FMTE9DKGJsayksIHNpemUgKyBMV1NfUFJFKSkpIHsKICAgIGJsay0+c3RhcnQgPSBwdHIgKyBMV1NfUFJFOwogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ICsgc2l6ZTsKICB9IGVsc2UgewogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ID0gMDsKICB9CgogIHJldHVybiBwdHI7Cn0KCnZvaWQKYmxvY2tfZnJlZShCeXRlQmxvY2sqIGJsaykgewogIGlmKGJsay0+c3RhcnQpCiAgICBmcmVlKGJsay0+c3RhcnQgLSBMV1NfUFJFKTsKCiAgYmxrLT5zdGFydCA9IGJsay0+ZW5kID0gMDsKfQoKdWludDhfdCoKYmxvY2tfZ3JvdyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBhbGxvYzsKICBzaXplX3QgbmV3c2l6ZSA9IGJsb2NrX1NJWkUoYmxrKSArIHNpemU7CiAgaWYoKGFsbG9jID0gcmVhbGxvYyhibG9ja19BTExPQyhibGspLCBMV1NfUFJFICsgbmV3c2l6ZSkpKSB7CiAgICBibGstPnN0YXJ0ID0gYWxsb2MgKyBMV1NfUFJFOwogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ICsgbmV3c2l6ZTsKICB9CiAgcmV0dXJuIGFsbG9jID8gYmxrLT5zdGFydCA6IDA7Cn0KCnN0YXRpYyB2b2lkCmJsb2NrX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCB2b2lkKiBhbGxvYywgdm9pZCogc3RhcnQpIHsKICBmcmVlKGFsbG9jKTsKfQoKQnl0ZUJsb2NrCmJsb2NrX2NvcHkoY29uc3Qgdm9pZCogcHRyLCBzaXplX3Qgc2l6ZSkgewogIEJ5dGVCbG9jayByZXQgPSB7MCwgMH07CiAgaWYoYmxvY2tfYWxsb2MoJnJldCwgc2l6ZSkpIHsKICAgIG1lbWNweShyZXQuc3RhcnQsIHB0ciwgc2l6ZSk7CiAgfQogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKYmxvY2tfdG9hcnJheWJ1ZmZlcihCeXRlQmxvY2sqIGJsaywgSlNDb250ZXh0KiBjdHgpIHsKICBCeXRlQmxvY2sgbWVtID0gYmxvY2tfbW92ZSgoQnl0ZUJsb2NrKilibGspOwogIHJldHVybiBKU19OZXdBcnJheUJ1ZmZlcihjdHgsIGJsb2NrX0JFR0lOKCZtZW0pLCBibG9ja19TSVpFKCZtZW0pLCBibG9ja19maW5hbGl6ZXIsIGJsb2NrX0FMTE9DKCZtZW0pLCBGQUxTRSk7Cn0KCkpTVmFsdWUKYmxvY2tfdG9zdHJpbmcoQnl0ZUJsb2NrKiBibGssIEpTQ29udGV4dCogY3R4KSB7CiAgQnl0ZUJsb2NrIG1lbSA9IGJsb2NrX21vdmUoKEJ5dGVCbG9jayopYmxrKTsKICBKU1ZhbHVlIHN0ciA9IEpTX05ld1N0cmluZ0xlbihjdHgsIGJsb2NrX0JFR0lOKCZtZW0pLCBibG9ja19TSVpFKCZtZW0pKTsKICBibG9ja19mcmVlKCZtZW0pOwogIHJldHVybiBzdHI7Cn0KCnNzaXplX3QKYmxvY2tfYXBwZW5kKEJ5dGVCbG9jayogYmxrLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3Qgc2l6ZSkgewogIHNpemVfdCBvZmZzZXQgPSBibG9ja19TSVpFKGJsayk7CiAgdWludDhfdCogc3RhcnQ7CgogIGlmKChzdGFydCA9IGJsb2NrX2dyb3coYmxrLCBzaXplKSkpIHsKICAgIG1lbWNweShzdGFydCArIG9mZnNldCwgZGF0YSwgc2l6ZSk7CiAgICByZXR1cm4gc2l6ZTsKICB9CiAgcmV0dXJuIC0xOwp9Cgp1aW50OF90KgpidWZmZXJfYWxsb2MoQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHVpbnQ4X3QqIHJldDsKICBpZigocmV0ID0gYmxvY2tfYWxsb2MoJmJ1Zi0+YmxvY2ssIHNpemUpKSkgewogICAgYnVmLT5hbGxvYyA9IHJldDsKICAgIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQ7CiAgICBidWYtPndyaXRlID0gYnVmLT5zdGFydDsKICB9CiAgcmV0dXJuIHJldDsKfQoKc3NpemVfdApidWZmZXJfYXBwZW5kKEJ5dGVCdWZmZXIqIGJ1ZiwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IG4pIHsKICBpZigoc2l6ZV90KWJ1ZmZlcl9BVkFJTChidWYpIDwgbiArIDEpIHsKICAgIGlmKCFidWZmZXJfcmVhbGxvYyhidWYsIGJ1ZmZlcl9IRUFEKGJ1ZikgKyBuICsgMSkpCiAgICAgIHJldHVybiAtMTsKICB9CiAgbWVtY3B5KGJ1Zi0+d3JpdGUsIHgsIG4pOwogIGJ1Zi0+d3JpdGVbbl0gPSAnXDAnOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gbjsKfQoKdm9pZApidWZmZXJfZnJlZShCeXRlQnVmZmVyKiBidWYpIHsKICBpZihidWYtPmFsbG9jKQogICAgYmxvY2tfZnJlZSgmYnVmLT5ibG9jayk7CiAgYnVmLT5yZWFkID0gYnVmLT53cml0ZSA9IGJ1Zi0+YWxsb2MgPSAwOwp9CgpCT09MCmJ1ZmZlcl93cml0ZShCeXRlQnVmZmVyKiBidWYsIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBuKSB7CiAgYXNzZXJ0KChzaXplX3QpYnVmZmVyX0FWQUlMKGJ1ZikgPj0gbik7CiAgbWVtY3B5KGJ1Zi0+d3JpdGUsIHgsIG4pOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gVFJVRTsKfQoKaW50CmJ1ZmZlcl92cHJpbnRmKEJ5dGVCdWZmZXIqIGJ1ZiwgY29uc3QgY2hhciogZm9ybWF0LCB2YV9saXN0IGFwKSB7CiAgc3NpemVfdCBuLCBzaXplID0gYnVmZmVyX0FWQUlMKGJ1Zik7CiAgbiA9IHZzbnByaW50ZigoY2hhciopYnVmLT53cml0ZSwgc2l6ZSwgZm9ybWF0LCBhcCk7CiAgaWYobiA+IHNpemUpCiAgICByZXR1cm4gMDsKICBpZihuID49IChpbnQpc2l6ZSkKICAgIG4gPSBzaXplOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gbjsKfQoKaW50CmJ1ZmZlcl9wcmludGYoQnl0ZUJ1ZmZlciogYnVmLCBjb25zdCBjaGFyKiBmb3JtYXQsIC4uLikgewogIGludCBuOwogIHZhX2xpc3QgYXA7CiAgdmFfc3RhcnQoYXAsIGZvcm1hdCk7CiAgbiA9IGJ1ZmZlcl92cHJpbnRmKGJ1ZiwgZm9ybWF0LCBhcCk7CiAgdmFfZW5kKGFwKTsKICByZXR1cm4gbjsKfQoKdWludDhfdCoKYnVmZmVyX3JlYWxsb2MoQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHNpemVfdCByZCwgd3I7CiAgdWludDhfdCogeDsKCiAgaWYoIXNpemUpIHsKICAgIGJ1ZmZlcl9mcmVlKGJ1Zik7CiAgICByZXR1cm4gMDsKICB9CgogIHJkID0gYnVmZmVyX1RBSUwoYnVmKTsKICB3ciA9IGJ1ZmZlcl9IRUFEKGJ1Zik7CiAgYXNzZXJ0KHNpemUgPj0gd3IpOwoKICBpZigoeCA9IGJsb2NrX3JlYWxsb2MoJmJ1Zi0+YmxvY2ssIHNpemUpKSkgewogICAgaWYoYnVmLT5hbGxvYyA9PSAwICYmIGJ1Zi0+c3RhcnQgJiYgd3IpCiAgICAgIG1lbWNweSh4ICsgTFdTX1BSRSwgYnVmLT5zdGFydCwgd3IpOwoKICAgIGJ1Zi0+YWxsb2MgPSB4OwogICAgYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQgKyB3cjsKICAgIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQgKyByZDsKICB9CiAgcmV0dXJuIHg7Cn0KCgoKQk9PTApidWZmZXJfY2xvbmUoQnl0ZUJ1ZmZlciogYnVmLCBjb25zdCBCeXRlQnVmZmVyKiBvdGhlcikgewogIGlmKCFidWZmZXJfYWxsb2MoYnVmLCBibG9ja19TSVpFKG90aGVyKSkpCiAgICByZXR1cm4gRkFMU0U7CiAgbWVtY3B5KGJ1Zi0+c3RhcnQsIG90aGVyLT5zdGFydCwgYnVmZmVyX0hFQUQob3RoZXIpKTsKCiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9UQUlMKG90aGVyKTsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9IRUFEKG90aGVyKTsKICByZXR1cm4gVFJVRTsKfQoKdWludDhfdCoKYnVmZmVyX2dyb3coQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHNpemUgKz0gYnVmZmVyX1NJWkUoYnVmKTsKICByZXR1cm4gYnVmZmVyX3JlYWxsb2MoYnVmLCBzaXplKTsKfQoAAAAAAAAAAKQPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALA8AAAAAAAAsDwAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACkDwAAI2luY2x1ZGUgImJ1ZmZlci5oIgojaW5jbHVkZSAianN1dGlscy5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+Cgp1aW50OF90KgpibG9ja19hbGxvYyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBwdHI7CgogIGlmKChwdHIgPSBtYWxsb2Moc2l6ZSArIExXU19QUkUpKSkgewogICAgYmxrLT5zdGFydCA9IHB0ciArIExXU19QUkU7CiAgICBibGstPmVuZCA9IGJsay0+c3RhcnQgKyBzaXplOwogIH0KCiAgcmV0dXJuIHB0cjsKfQoKdWludDhfdCoKYmxvY2tfcmVhbGxvYyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBwdHI7CgogIGlmKCFzaXplKSB7CiAgICBibG9ja19mcmVlKGJsayk7CiAgICByZXR1cm4gMDsKICB9CgogIGlmKChwdHIgPSByZWFsbG9jKGJsb2NrX0FMTE9DKGJsayksIHNpemUgKyBMV1NfUFJFKSkpIHsKICAgIGJsay0+c3RhcnQgPSBwdHIgKyBMV1NfUFJFOwogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ICsgc2l6ZTsKICB9IGVsc2UgewogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ID0gMDsKICB9CgogIHJldHVybiBwdHI7Cn0KCnZvaWQKYmxvY2tfZnJlZShCeXRlQmxvY2sqIGJsaykgewogIGlmKGJsay0+c3RhcnQpCiAgICBmcmVlKGJsay0+c3RhcnQgLSBMV1NfUFJFKTsKCiAgYmxrLT5zdGFydCA9IGJsay0+ZW5kID0gMDsKfQoKdWludDhfdCoKYmxvY2tfZ3JvdyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBhbGxvYzsKICBzaXplX3QgbmV3c2l6ZSA9IGJsb2NrX1NJWkUoYmxrKSArIHNpemU7CiAgaWYoKGFsbG9jID0gcmVhbGxvYyhibG9ja19BTExPQyhibGspLCBMV1NfUFJFICsgbmV3c2l6ZSkpKSB7CiAgICBibGstPnN0YXJ0ID0gYWxsb2MgKyBMV1NfUFJFOwogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ICsgbmV3c2l6ZTsKICB9CiAgcmV0dXJuIGFsbG9jID8gYmxrLT5zdGFydCA6IDA7Cn0KCnN0YXRpYyB2b2lkCmJsb2NrX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCB2b2lkKiBhbGxvYywgdm9pZCogc3RhcnQpIHsKICBmcmVlKGFsbG9jKTsKfQoKQnl0ZUJsb2NrCmJsb2NrX2NvcHkoY29uc3Qgdm9pZCogcHRyLCBzaXplX3Qgc2l6ZSkgewogIEJ5dGVCbG9jayByZXQgPSB7MCwgMH07CiAgaWYoYmxvY2tfYWxsb2MoJnJldCwgc2l6ZSkpIHsKICAgIG1lbWNweShyZXQuc3RhcnQsIHB0ciwgc2l6ZSk7CiAgfQogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKYmxvY2tfdG9hcnJheWJ1ZmZlcihCeXRlQmxvY2sqIGJsaywgSlNDb250ZXh0KiBjdHgpIHsKICBCeXRlQmxvY2sgbWVtID0gYmxvY2tfbW92ZSgoQnl0ZUJsb2NrKilibGspOwogIHJldHVybiBKU19OZXdBcnJheUJ1ZmZlcihjdHgsIGJsb2NrX0JFR0lOKCZtZW0pLCBibG9ja19TSVpFKCZtZW0pLCBibG9ja19maW5hbGl6ZXIsIGJsb2NrX0FMTE9DKCZtZW0pLCBGQUxTRSk7Cn0KCkpTVmFsdWUKYmxvY2tfdG9zdHJpbmcoQnl0ZUJsb2NrKiBibGssIEpTQ29udGV4dCogY3R4KSB7CiAgQnl0ZUJsb2NrIG1lbSA9IGJsb2NrX21vdmUoKEJ5dGVCbG9jayopYmxrKTsKICBKU1ZhbHVlIHN0ciA9IEpTX05ld1N0cmluZ0xlbihjdHgsIGJsb2NrX0JFR0lOKCZtZW0pLCBibG9ja19TSVpFKCZtZW0pKTsKICBibG9ja19mcmVlKCZtZW0pOwogIHJldHVybiBzdHI7Cn0KCnNzaXplX3QKYmxvY2tfYXBwZW5kKEJ5dGVCbG9jayogYmxrLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3Qgc2l6ZSkgewogIHNpemVfdCBvZmZzZXQgPSBibG9ja19TSVpFKGJsayk7CiAgdWludDhfdCogc3RhcnQ7CgogIGlmKChzdGFydCA9IGJsb2NrX2dyb3coYmxrLCBzaXplKSkpIHsKICAgIG1lbWNweShzdGFydCArIG9mZnNldCwgZGF0YSwgc2l6ZSk7CiAgICByZXR1cm4gc2l6ZTsKICB9CiAgcmV0dXJuIC0xOwp9Cgp1aW50OF90KgpidWZmZXJfYWxsb2MoQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHVpbnQ4X3QqIHJldDsKICBpZigocmV0ID0gYmxvY2tfYWxsb2MoJmJ1Zi0+YmxvY2ssIHNpemUpKSkgewogICAgYnVmLT5hbGxvYyA9IHJldDsKICAgIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQ7CiAgICBidWYtPndyaXRlID0gYnVmLT5zdGFydDsKICB9CiAgcmV0dXJuIHJldDsKfQoKc3NpemVfdApidWZmZXJfYXBwZW5kKEJ5dGVCdWZmZXIqIGJ1ZiwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IG4pIHsKICBpZigoc2l6ZV90KWJ1ZmZlcl9BVkFJTChidWYpIDwgbiArIDEpIHsKICAgIGlmKCFidWZmZXJfcmVhbGxvYyhidWYsIGJ1ZmZlcl9IRUFEKGJ1ZikgKyBuICsgMSkpCiAgICAgIHJldHVybiAtMTsKICB9CiAgbWVtY3B5KGJ1Zi0+d3JpdGUsIHgsIG4pOwogIGJ1Zi0+d3JpdGVbbl0gPSAnXDAnOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gbjsKfQoKdm9pZApidWZmZXJfZnJlZShCeXRlQnVmZmVyKiBidWYpIHsKICBpZihidWYtPmFsbG9jKQogICAgYmxvY2tfZnJlZSgmYnVmLT5ibG9jayk7CiAgYnVmLT5yZWFkID0gYnVmLT53cml0ZSA9IGJ1Zi0+YWxsb2MgPSAwOwp9CgpCT09MCmJ1ZmZlcl93cml0ZShCeXRlQnVmZmVyKiBidWYsIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBuKSB7CiAgYXNzZXJ0KChzaXplX3QpYnVmZmVyX0FWQUlMKGJ1ZikgPj0gbik7CiAgbWVtY3B5KGJ1Zi0+d3JpdGUsIHgsIG4pOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gVFJVRTsKfQoKaW50CmJ1ZmZlcl92cHJpbnRmKEJ5dGVCdWZmZXIqIGJ1ZiwgY29uc3QgY2hhciogZm9ybWF0LCB2YV9saXN0IGFwKSB7CiAgc3NpemVfdCBuLCBzaXplID0gYnVmZmVyX0FWQUlMKGJ1Zik7CiAgbiA9IHZzbnByaW50ZigoY2hhciopYnVmLT53cml0ZSwgc2l6ZSwgZm9ybWF0LCBhcCk7CiAgaWYobiA+IHNpemUpCiAgICByZXR1cm4gMDsKICBpZihuID49IChpbnQpc2l6ZSkKICAgIG4gPSBzaXplOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gbjsKfQoKaW50CmJ1ZmZlcl9wcmludGYoQnl0ZUJ1ZmZlciogYnVmLCBjb25zdCBjaGFyKiBmb3JtYXQsIC4uLikgewogIGludCBuOwogIHZhX2xpc3QgYXA7CiAgdmFfc3RhcnQoYXAsIGZvcm1hdCk7CiAgbiA9IGJ1ZmZlcl92cHJpbnRmKGJ1ZiwgZm9ybWF0LCBhcCk7CiAgdmFfZW5kKGFwKTsKICByZXR1cm4gbjsKfQoKdWludDhfdCoKYnVmZmVyX3JlYWxsb2MoQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHNpemVfdCByZCwgd3I7CiAgdWludDhfdCogeDsKCiAgaWYoIXNpemUpIHsKICAgIGJ1ZmZlcl9mcmVlKGJ1Zik7CiAgICByZXR1cm4gMDsKICB9CgogIHJkID0gYnVmZmVyX1RBSUwoYnVmKTsKICB3ciA9IGJ1ZmZlcl9IRUFEKGJ1Zik7CiAgYXNzZXJ0KHNpemUgPj0gd3IpOwoKICBpZigoeCA9IGJsb2NrX3JlYWxsb2MoJmJ1Zi0+YmxvY2ssIHNpemUpKSkgewogICAgaWYoYnVmLT5hbGxvYyA9PSAwICYmIGJ1Zi0+c3RhcnQgJiYgd3IpCiAgICAgIG1lbWNweSh4ICsgTFdTX1BSRSwgYnVmLT5zdGFydCwgd3IpOwoKICAgIGJ1Zi0+YWxsb2MgPSB4OwogICAgYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQgKyB3cjsKICAgIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQgKyByZDsKICB9CiAgcmV0dXJuIHg7Cn0KCgoKQk9PTApidWZmZXJfY2xvbmUoQnl0ZUJ1ZmZlciogYnVmLCBjb25zdCBCeXRlQnVmZmVyKiBvdGhlcikgewogIGlmKCFidWZmZXJfYWxsb2MoYnVmLCBibG9ja19TSVpFKG90aGVyKSkpCiAgICByZXR1cm4gRkFMU0U7CiAgbWVtY3B5KGJ1Zi0+c3RhcnQsIG90aGVyLT5zdGFydCwgYnVmZmVyX0hFQUQob3RoZXIpKTsKCiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9UQUlMKG90aGVyKTsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9IRUFEKG90aGVyKTsKICByZXR1cm4gVFJVRTsKfQoKdWludDhfdCoKYnVmZmVyX2dyb3coQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHNpemUgKz0gYnVmZmVyX1NJWkUoYnVmKTsKICByZXR1cm4gYnVmZmVyX3JlYWxsb2MoYnVmLCBzaXplKTsKfQoAAAAAAAAAAKQPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALA8AAAAAAAAsDwAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACkDwAAI2luY2x1ZGUgImJ1ZmZlci5oIgojaW5jbHVkZSAianN1dGlscy5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+Cgp1aW50OF90KgpibG9ja19hbGxvYyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBwdHI7CgogIGlmKChwdHIgPSBtYWxsb2Moc2l6ZSArIExXU19QUkUpKSkgewogICAgYmxrLT5zdGFydCA9IHB0ciArIExXU19QUkU7CiAgICBibGstPmVuZCA9IGJsay0+c3RhcnQgKyBzaXplOwogIH0KCiAgcmV0dXJuIHB0cjsKfQoKdWludDhfdCoKYmxvY2tfcmVhbGxvYyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBwdHI7CgogIGlmKCFzaXplKSB7CiAgICBibG9ja19mcmVlKGJsayk7CiAgICByZXR1cm4gMDsKICB9CgogIGlmKChwdHIgPSByZWFsbG9jKGJsb2NrX0FMTE9DKGJsayksIHNpemUgKyBMV1NfUFJFKSkpIHsKICAgIGJsay0+c3RhcnQgPSBwdHIgKyBMV1NfUFJFOwogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ICsgc2l6ZTsKICB9IGVsc2UgewogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ID0gMDsKICB9CgogIHJldHVybiBwdHI7Cn0KCnZvaWQKYmxvY2tfZnJlZShCeXRlQmxvY2sqIGJsaykgewogIGlmKGJsay0+c3RhcnQpCiAgICBmcmVlKGJsay0+c3RhcnQgLSBMV1NfUFJFKTsKCiAgYmxrLT5zdGFydCA9IGJsay0+ZW5kID0gMDsKfQoKdWludDhfdCoKYmxvY2tfZ3JvdyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBhbGxvYzsKICBzaXplX3QgbmV3c2l6ZSA9IGJsb2NrX1NJWkUoYmxrKSArIHNpemU7CiAgaWYoKGFsbG9jID0gcmVhbGxvYyhibG9ja19BTExPQyhibGspLCBMV1NfUFJFICsgbmV3c2l6ZSkpKSB7CiAgICBibGstPnN0YXJ0ID0gYWxsb2MgKyBMV1NfUFJFOwogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ICsgbmV3c2l6ZTsKICB9CiAgcmV0dXJuIGFsbG9jID8gYmxrLT5zdGFydCA6IDA7Cn0KCnN0YXRpYyB2b2lkCmJsb2NrX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCB2b2lkKiBhbGxvYywgdm9pZCogc3RhcnQpIHsKICBmcmVlKGFsbG9jKTsKfQoKQnl0ZUJsb2NrCmJsb2NrX2NvcHkoY29uc3Qgdm9pZCogcHRyLCBzaXplX3Qgc2l6ZSkgewogIEJ5dGVCbG9jayByZXQgPSB7MCwgMH07CiAgaWYoYmxvY2tfYWxsb2MoJnJldCwgc2l6ZSkpIHsKICAgIG1lbWNweShyZXQuc3RhcnQsIHB0ciwgc2l6ZSk7CiAgfQogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKYmxvY2tfdG9hcnJheWJ1ZmZlcihCeXRlQmxvY2sqIGJsaywgSlNDb250ZXh0KiBjdHgpIHsKICBCeXRlQmxvY2sgbWVtID0gYmxvY2tfbW92ZSgoQnl0ZUJsb2NrKilibGspOwogIHJldHVybiBKU19OZXdBcnJheUJ1ZmZlcihjdHgsIGJsb2NrX0JFR0lOKCZtZW0pLCBibG9ja19TSVpFKCZtZW0pLCBibG9ja19maW5hbGl6ZXIsIGJsb2NrX0FMTE9DKCZtZW0pLCBGQUxTRSk7Cn0KCkpTVmFsdWUKYmxvY2tfdG9zdHJpbmcoQnl0ZUJsb2NrKiBibGssIEpTQ29udGV4dCogY3R4KSB7CiAgQnl0ZUJsb2NrIG1lbSA9IGJsb2NrX21vdmUoKEJ5dGVCbG9jayopYmxrKTsKICBKU1ZhbHVlIHN0ciA9IEpTX05ld1N0cmluZ0xlbihjdHgsIGJsb2NrX0JFR0lOKCZtZW0pLCBibG9ja19TSVpFKCZtZW0pKTsKICBibG9ja19mcmVlKCZtZW0pOwogIHJldHVybiBzdHI7Cn0KCnNzaXplX3QKYmxvY2tfYXBwZW5kKEJ5dGVCbG9jayogYmxrLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3Qgc2l6ZSkgewogIHNpemVfdCBvZmZzZXQgPSBibG9ja19TSVpFKGJsayk7CiAgdWludDhfdCogc3RhcnQ7CgogIGlmKChzdGFydCA9IGJsb2NrX2dyb3coYmxrLCBzaXplKSkpIHsKICAgIG1lbWNweShzdGFydCArIG9mZnNldCwgZGF0YSwgc2l6ZSk7CiAgICByZXR1cm4gc2l6ZTsKICB9CiAgcmV0dXJuIC0xOwp9Cgp1aW50OF90KgpidWZmZXJfYWxsb2MoQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHVpbnQ4X3QqIHJldDsKICBpZigocmV0ID0gYmxvY2tfYWxsb2MoJmJ1Zi0+YmxvY2ssIHNpemUpKSkgewogICAgYnVmLT5hbGxvYyA9IHJldDsKICAgIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQ7CiAgICBidWYtPndyaXRlID0gYnVmLT5zdGFydDsKICB9CiAgcmV0dXJuIHJldDsKfQoKc3NpemVfdApidWZmZXJfYXBwZW5kKEJ5dGVCdWZmZXIqIGJ1ZiwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IG4pIHsKICBpZigoc2l6ZV90KWJ1ZmZlcl9BVkFJTChidWYpIDwgbiArIDEpIHsKICAgIGlmKCFidWZmZXJfcmVhbGxvYyhidWYsIGJ1ZmZlcl9IRUFEKGJ1ZikgKyBuICsgMSkpCiAgICAgIHJldHVybiAtMTsKICB9CiAgbWVtY3B5KGJ1Zi0+d3JpdGUsIHgsIG4pOwogIGJ1Zi0+d3JpdGVbbl0gPSAnXDAnOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gbjsKfQoKdm9pZApidWZmZXJfZnJlZShCeXRlQnVmZmVyKiBidWYpIHsKICBpZihidWYtPmFsbG9jKQogICAgYmxvY2tfZnJlZSgmYnVmLT5ibG9jayk7CiAgYnVmLT5yZWFkID0gYnVmLT53cml0ZSA9IGJ1Zi0+YWxsb2MgPSAwOwp9CgpCT09MCmJ1ZmZlcl93cml0ZShCeXRlQnVmZmVyKiBidWYsIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBuKSB7CiAgYXNzZXJ0KChzaXplX3QpYnVmZmVyX0FWQUlMKGJ1ZikgPj0gbik7CiAgbWVtY3B5KGJ1Zi0+d3JpdGUsIHgsIG4pOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gVFJVRTsKfQoKaW50CmJ1ZmZlcl92cHJpbnRmKEJ5dGVCdWZmZXIqIGJ1ZiwgY29uc3QgY2hhciogZm9ybWF0LCB2YV9saXN0IGFwKSB7CiAgc3NpemVfdCBuLCBzaXplID0gYnVmZmVyX0FWQUlMKGJ1Zik7CiAgbiA9IHZzbnByaW50ZigoY2hhciopYnVmLT53cml0ZSwgc2l6ZSwgZm9ybWF0LCBhcCk7CiAgaWYobiA+IHNpemUpCiAgICByZXR1cm4gMDsKICBpZihuID49IChpbnQpc2l6ZSkKICAgIG4gPSBzaXplOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gbjsKfQoKaW50CmJ1ZmZlcl9wcmludGYoQnl0ZUJ1ZmZlciogYnVmLCBjb25zdCBjaGFyKiBmb3JtYXQsIC4uLikgewogIGludCBuOwogIHZhX2xpc3QgYXA7CiAgdmFfc3RhcnQoYXAsIGZvcm1hdCk7CiAgbiA9IGJ1ZmZlcl92cHJpbnRmKGJ1ZiwgZm9ybWF0LCBhcCk7CiAgdmFfZW5kKGFwKTsKICByZXR1cm4gbjsKfQoKdWludDhfdCoKYnVmZmVyX3JlYWxsb2MoQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHNpemVfdCByZCwgd3I7CiAgdWludDhfdCogeDsKCiAgaWYoIXNpemUpIHsKICAgIGJ1ZmZlcl9mcmVlKGJ1Zik7CiAgICByZXR1cm4gMDsKICB9CgogIHJkID0gYnVmZmVyX1RBSUwoYnVmKTsKICB3ciA9IGJ1ZmZlcl9IRUFEKGJ1Zik7CiAgYXNzZXJ0KHNpemUgPj0gd3IpOwoKICBpZigoeCA9IGJsb2NrX3JlYWxsb2MoJmJ1Zi0+YmxvY2ssIHNpemUpKSkgewogICAgaWYoYnVmLT5hbGxvYyA9PSAwICYmIGJ1Zi0+c3RhcnQgJiYgd3IpCiAgICAgIG1lbWNweSh4ICsgTFdTX1BSRSwgYnVmLT5zdGFydCwgd3IpOwoKICAgIGJ1Zi0+YWxsb2MgPSB4OwogICAgYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQgKyB3cjsKICAgIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQgKyByZDsKICB9CiAgcmV0dXJuIHg7Cn0KCgoKQk9PTApidWZmZXJfY2xvbmUoQnl0ZUJ1ZmZlciogYnVmLCBjb25zdCBCeXRlQnVmZmVyKiBvdGhlcikgewogIGlmKCFidWZmZXJfYWxsb2MoYnVmLCBibG9ja19TSVpFKG90aGVyKSkpCiAgICByZXR1cm4gRkFMU0U7CiAgbWVtY3B5KGJ1Zi0+c3RhcnQsIG90aGVyLT5zdGFydCwgYnVmZmVyX0hFQUQob3RoZXIpKTsKCiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9UQUlMKG90aGVyKTsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9IRUFEKG90aGVyKTsKICByZXR1cm4gVFJVRTsKfQoKdWludDhfdCoKYnVmZmVyX2dyb3coQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHNpemUgKz0gYnVmZmVyX1NJWkUoYnVmKTsKICByZXR1cm4gYnVmZmVyX3JlYWxsb2MoYnVmLCBzaXplKTsKfQoAAAAAAAAAAKQPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALA8AAAAAAAAsDwAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACkDwAAI2luY2x1ZGUgImJ1ZmZlci5oIgojaW5jbHVkZSAianN1dGlscy5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+Cgp1aW50OF90KgpibG9ja19hbGxvYyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBwdHI7CgogIGlmKChwdHIgPSBtYWxsb2Moc2l6ZSArIExXU19QUkUpKSkgewogICAgYmxrLT5zdGFydCA9IHB0ciArIExXU19QUkU7CiAgICBibGstPmVuZCA9IGJsay0+c3RhcnQgKyBzaXplOwogIH0KCiAgcmV0dXJuIHB0cjsKfQoKdWludDhfdCoKYmxvY2tfcmVhbGxvYyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBwdHI7CgogIGlmKCFzaXplKSB7CiAgICBibG9ja19mcmVlKGJsayk7CiAgICByZXR1cm4gMDsKICB9CgogIGlmKChwdHIgPSByZWFsbG9jKGJsb2NrX0FMTE9DKGJsayksIHNpemUgKyBMV1NfUFJFKSkpIHsKICAgIGJsay0+c3RhcnQgPSBwdHIgKyBMV1NfUFJFOwogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ICsgc2l6ZTsKICB9IGVsc2UgewogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ID0gMDsKICB9CgogIHJldHVybiBwdHI7Cn0KCnZvaWQKYmxvY2tfZnJlZShCeXRlQmxvY2sqIGJsaykgewogIGlmKGJsay0+c3RhcnQpCiAgICBmcmVlKGJsay0+c3RhcnQgLSBMV1NfUFJFKTsKCiAgYmxrLT5zdGFydCA9IGJsay0+ZW5kID0gMDsKfQoKdWludDhfdCoKYmxvY2tfZ3JvdyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBhbGxvYzsKICBzaXplX3QgbmV3c2l6ZSA9IGJsb2NrX1NJWkUoYmxrKSArIHNpemU7CiAgaWYoKGFsbG9jID0gcmVhbGxvYyhibG9ja19BTExPQyhibGspLCBMV1NfUFJFICsgbmV3c2l6ZSkpKSB7CiAgICBibGstPnN0YXJ0ID0gYWxsb2MgKyBMV1NfUFJFOwogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ICsgbmV3c2l6ZTsKICB9CiAgcmV0dXJuIGFsbG9jID8gYmxrLT5zdGFydCA6IDA7Cn0KCnN0YXRpYyB2b2lkCmJsb2NrX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCB2b2lkKiBhbGxvYywgdm9pZCogc3RhcnQpIHsKICBmcmVlKGFsbG9jKTsKfQoKQnl0ZUJsb2NrCmJsb2NrX2NvcHkoY29uc3Qgdm9pZCogcHRyLCBzaXplX3Qgc2l6ZSkgewogIEJ5dGVCbG9jayByZXQgPSB7MCwgMH07CiAgaWYoYmxvY2tfYWxsb2MoJnJldCwgc2l6ZSkpIHsKICAgIG1lbWNweShyZXQuc3RhcnQsIHB0ciwgc2l6ZSk7CiAgfQogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKYmxvY2tfdG9hcnJheWJ1ZmZlcihCeXRlQmxvY2sqIGJsaywgSlNDb250ZXh0KiBjdHgpIHsKICBCeXRlQmxvY2sgbWVtID0gYmxvY2tfbW92ZSgoQnl0ZUJsb2NrKilibGspOwogIHJldHVybiBKU19OZXdBcnJheUJ1ZmZlcihjdHgsIGJsb2NrX0JFR0lOKCZtZW0pLCBibG9ja19TSVpFKCZtZW0pLCBibG9ja19maW5hbGl6ZXIsIGJsb2NrX0FMTE9DKCZtZW0pLCBGQUxTRSk7Cn0KCkpTVmFsdWUKYmxvY2tfdG9zdHJpbmcoQnl0ZUJsb2NrKiBibGssIEpTQ29udGV4dCogY3R4KSB7CiAgQnl0ZUJsb2NrIG1lbSA9IGJsb2NrX21vdmUoKEJ5dGVCbG9jayopYmxrKTsKICBKU1ZhbHVlIHN0ciA9IEpTX05ld1N0cmluZ0xlbihjdHgsIGJsb2NrX0JFR0lOKCZtZW0pLCBibG9ja19TSVpFKCZtZW0pKTsKICBibG9ja19mcmVlKCZtZW0pOwogIHJldHVybiBzdHI7Cn0KCnNzaXplX3QKYmxvY2tfYXBwZW5kKEJ5dGVCbG9jayogYmxrLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3Qgc2l6ZSkgewogIHNpemVfdCBvZmZzZXQgPSBibG9ja19TSVpFKGJsayk7CiAgdWludDhfdCogc3RhcnQ7CgogIGlmKChzdGFydCA9IGJsb2NrX2dyb3coYmxrLCBzaXplKSkpIHsKICAgIG1lbWNweShzdGFydCArIG9mZnNldCwgZGF0YSwgc2l6ZSk7CiAgICByZXR1cm4gc2l6ZTsKICB9CiAgcmV0dXJuIC0xOwp9Cgp1aW50OF90KgpidWZmZXJfYWxsb2MoQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHVpbnQ4X3QqIHJldDsKICBpZigocmV0ID0gYmxvY2tfYWxsb2MoJmJ1Zi0+YmxvY2ssIHNpemUpKSkgewogICAgYnVmLT5hbGxvYyA9IHJldDsKICAgIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQ7CiAgICBidWYtPndyaXRlID0gYnVmLT5zdGFydDsKICB9CiAgcmV0dXJuIHJldDsKfQoKc3NpemVfdApidWZmZXJfYXBwZW5kKEJ5dGVCdWZmZXIqIGJ1ZiwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IG4pIHsKICBpZigoc2l6ZV90KWJ1ZmZlcl9BVkFJTChidWYpIDwgbiArIDEpIHsKICAgIGlmKCFidWZmZXJfcmVhbGxvYyhidWYsIGJ1ZmZlcl9IRUFEKGJ1ZikgKyBuICsgMSkpCiAgICAgIHJldHVybiAtMTsKICB9CiAgbWVtY3B5KGJ1Zi0+d3JpdGUsIHgsIG4pOwogIGJ1Zi0+d3JpdGVbbl0gPSAnXDAnOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gbjsKfQoKdm9pZApidWZmZXJfZnJlZShCeXRlQnVmZmVyKiBidWYpIHsKICBpZihidWYtPmFsbG9jKQogICAgYmxvY2tfZnJlZSgmYnVmLT5ibG9jayk7CiAgYnVmLT5yZWFkID0gYnVmLT53cml0ZSA9IGJ1Zi0+YWxsb2MgPSAwOwp9CgpCT09MCmJ1ZmZlcl93cml0ZShCeXRlQnVmZmVyKiBidWYsIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBuKSB7CiAgYXNzZXJ0KChzaXplX3QpYnVmZmVyX0FWQUlMKGJ1ZikgPj0gbik7CiAgbWVtY3B5KGJ1Zi0+d3JpdGUsIHgsIG4pOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gVFJVRTsKfQoKaW50CmJ1ZmZlcl92cHJpbnRmKEJ5dGVCdWZmZXIqIGJ1ZiwgY29uc3QgY2hhciogZm9ybWF0LCB2YV9saXN0IGFwKSB7CiAgc3NpemVfdCBuLCBzaXplID0gYnVmZmVyX0FWQUlMKGJ1Zik7CiAgbiA9IHZzbnByaW50ZigoY2hhciopYnVmLT53cml0ZSwgc2l6ZSwgZm9ybWF0LCBhcCk7CiAgaWYobiA+IHNpemUpCiAgICByZXR1cm4gMDsKICBpZihuID49IChpbnQpc2l6ZSkKICAgIG4gPSBzaXplOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gbjsKfQoKaW50CmJ1ZmZlcl9wcmludGYoQnl0ZUJ1ZmZlciogYnVmLCBjb25zdCBjaGFyKiBmb3JtYXQsIC4uLikgewogIGludCBuOwogIHZhX2xpc3QgYXA7CiAgdmFfc3RhcnQoYXAsIGZvcm1hdCk7CiAgbiA9IGJ1ZmZlcl92cHJpbnRmKGJ1ZiwgZm9ybWF0LCBhcCk7CiAgdmFfZW5kKGFwKTsKICByZXR1cm4gbjsKfQoKdWludDhfdCoKYnVmZmVyX3JlYWxsb2MoQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHNpemVfdCByZCwgd3I7CiAgdWludDhfdCogeDsKCiAgaWYoIXNpemUpIHsKICAgIGJ1ZmZlcl9mcmVlKGJ1Zik7CiAgICByZXR1cm4gMDsKICB9CgogIHJkID0gYnVmZmVyX1RBSUwoYnVmKTsKICB3ciA9IGJ1ZmZlcl9IRUFEKGJ1Zik7CiAgYXNzZXJ0KHNpemUgPj0gd3IpOwoKICBpZigoeCA9IGJsb2NrX3JlYWxsb2MoJmJ1Zi0+YmxvY2ssIHNpemUpKSkgewogICAgaWYoYnVmLT5hbGxvYyA9PSAwICYmIGJ1Zi0+c3RhcnQgJiYgd3IpCiAgICAgIG1lbWNweSh4ICsgTFdTX1BSRSwgYnVmLT5zdGFydCwgd3IpOwoKICAgIGJ1Zi0+YWxsb2MgPSB4OwogICAgYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQgKyB3cjsKICAgIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQgKyByZDsKICB9CiAgcmV0dXJuIHg7Cn0KCgoKQk9PTApidWZmZXJfY2xvbmUoQnl0ZUJ1ZmZlciogYnVmLCBjb25zdCBCeXRlQnVmZmVyKiBvdGhlcikgewogIGlmKCFidWZmZXJfYWxsb2MoYnVmLCBibG9ja19TSVpFKG90aGVyKSkpCiAgICByZXR1cm4gRkFMU0U7CiAgbWVtY3B5KGJ1Zi0+c3RhcnQsIG90aGVyLT5zdGFydCwgYnVmZmVyX0hFQUQob3RoZXIpKTsKCiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9UQUlMKG90aGVyKTsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9IRUFEKG90aGVyKTsKICByZXR1cm4gVFJVRTsKfQoKdWludDhfdCoKYnVmZmVyX2dyb3coQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHNpemUgKz0gYnVmZmVyX1NJWkUoYnVmKTsKICByZXR1cm4gYnVmZmVyX3JlYWxsb2MoYnVmLCBzaXplKTsKfQoAAAAAAAAAAKQPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALA8AAAAAAAAsDwAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACkDwAAI2luY2x1ZGUgImJ1ZmZlci5oIgojaW5jbHVkZSAianN1dGlscy5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+Cgp1aW50OF90KgpibG9ja19hbGxvYyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBwdHI7CgogIGlmKChwdHIgPSBtYWxsb2Moc2l6ZSArIExXU19QUkUpKSkgewogICAgYmxrLT5zdGFydCA9IHB0ciArIExXU19QUkU7CiAgICBibGstPmVuZCA9IGJsay0+c3RhcnQgKyBzaXplOwogIH0KCiAgcmV0dXJuIHB0cjsKfQoKdWludDhfdCoKYmxvY2tfcmVhbGxvYyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBwdHI7CgogIGlmKCFzaXplKSB7CiAgICBibG9ja19mcmVlKGJsayk7CiAgICByZXR1cm4gMDsKICB9CgogIGlmKChwdHIgPSByZWFsbG9jKGJsb2NrX0FMTE9DKGJsayksIHNpemUgKyBMV1NfUFJFKSkpIHsKICAgIGJsay0+c3RhcnQgPSBwdHIgKyBMV1NfUFJFOwogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ICsgc2l6ZTsKICB9IGVsc2UgewogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ID0gMDsKICB9CgogIHJldHVybiBwdHI7Cn0KCnZvaWQKYmxvY2tfZnJlZShCeXRlQmxvY2sqIGJsaykgewogIGlmKGJsay0+c3RhcnQpCiAgICBmcmVlKGJsay0+c3RhcnQgLSBMV1NfUFJFKTsKCiAgYmxrLT5zdGFydCA9IGJsay0+ZW5kID0gMDsKfQoKdWludDhfdCoKYmxvY2tfZ3JvdyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBhbGxvYzsKICBzaXplX3QgbmV3c2l6ZSA9IGJsb2NrX1NJWkUoYmxrKSArIHNpemU7CiAgaWYoKGFsbG9jID0gcmVhbGxvYyhibG9ja19BTExPQyhibGspLCBMV1NfUFJFICsgbmV3c2l6ZSkpKSB7CiAgICBibGstPnN0YXJ0ID0gYWxsb2MgKyBMV1NfUFJFOwogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ICsgbmV3c2l6ZTsKICB9CiAgcmV0dXJuIGFsbG9jID8gYmxrLT5zdGFydCA6IDA7Cn0KCnN0YXRpYyB2b2lkCmJsb2NrX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCB2b2lkKiBhbGxvYywgdm9pZCogc3RhcnQpIHsKICBmcmVlKGFsbG9jKTsKfQoKQnl0ZUJsb2NrCmJsb2NrX2NvcHkoY29uc3Qgdm9pZCogcHRyLCBzaXplX3Qgc2l6ZSkgewogIEJ5dGVCbG9jayByZXQgPSB7MCwgMH07CiAgaWYoYmxvY2tfYWxsb2MoJnJldCwgc2l6ZSkpIHsKICAgIG1lbWNweShyZXQuc3RhcnQsIHB0ciwgc2l6ZSk7CiAgfQogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKYmxvY2tfdG9hcnJheWJ1ZmZlcihCeXRlQmxvY2sqIGJsaywgSlNDb250ZXh0KiBjdHgpIHsKICBCeXRlQmxvY2sgbWVtID0gYmxvY2tfbW92ZSgoQnl0ZUJsb2NrKilibGspOwogIHJldHVybiBKU19OZXdBcnJheUJ1ZmZlcihjdHgsIGJsb2NrX0JFR0lOKCZtZW0pLCBibG9ja19TSVpFKCZtZW0pLCBibG9ja19maW5hbGl6ZXIsIGJsb2NrX0FMTE9DKCZtZW0pLCBGQUxTRSk7Cn0KCkpTVmFsdWUKYmxvY2tfdG9zdHJpbmcoQnl0ZUJsb2NrKiBibGssIEpTQ29udGV4dCogY3R4KSB7CiAgQnl0ZUJsb2NrIG1lbSA9IGJsb2NrX21vdmUoKEJ5dGVCbG9jayopYmxrKTsKICBKU1ZhbHVlIHN0ciA9IEpTX05ld1N0cmluZ0xlbihjdHgsIGJsb2NrX0JFR0lOKCZtZW0pLCBibG9ja19TSVpFKCZtZW0pKTsKICBibG9ja19mcmVlKCZtZW0pOwogIHJldHVybiBzdHI7Cn0KCnNzaXplX3QKYmxvY2tfYXBwZW5kKEJ5dGVCbG9jayogYmxrLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3Qgc2l6ZSkgewogIHNpemVfdCBvZmZzZXQgPSBibG9ja19TSVpFKGJsayk7CiAgdWludDhfdCogc3RhcnQ7CgogIGlmKChzdGFydCA9IGJsb2NrX2dyb3coYmxrLCBzaXplKSkpIHsKICAgIG1lbWNweShzdGFydCArIG9mZnNldCwgZGF0YSwgc2l6ZSk7CiAgICByZXR1cm4gc2l6ZTsKICB9CiAgcmV0dXJuIC0xOwp9Cgp1aW50OF90KgpidWZmZXJfYWxsb2MoQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHVpbnQ4X3QqIHJldDsKICBpZigocmV0ID0gYmxvY2tfYWxsb2MoJmJ1Zi0+YmxvY2ssIHNpemUpKSkgewogICAgYnVmLT5hbGxvYyA9IHJldDsKICAgIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQ7CiAgICBidWYtPndyaXRlID0gYnVmLT5zdGFydDsKICB9CiAgcmV0dXJuIHJldDsKfQoKc3NpemVfdApidWZmZXJfYXBwZW5kKEJ5dGVCdWZmZXIqIGJ1ZiwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IG4pIHsKICBpZigoc2l6ZV90KWJ1ZmZlcl9BVkFJTChidWYpIDwgbiArIDEpIHsKICAgIGlmKCFidWZmZXJfcmVhbGxvYyhidWYsIGJ1ZmZlcl9IRUFEKGJ1ZikgKyBuICsgMSkpCiAgICAgIHJldHVybiAtMTsKICB9CiAgbWVtY3B5KGJ1Zi0+d3JpdGUsIHgsIG4pOwogIGJ1Zi0+d3JpdGVbbl0gPSAnXDAnOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gbjsKfQoKdm9pZApidWZmZXJfZnJlZShCeXRlQnVmZmVyKiBidWYpIHsKICBpZihidWYtPmFsbG9jKQogICAgYmxvY2tfZnJlZSgmYnVmLT5ibG9jayk7CiAgYnVmLT5yZWFkID0gYnVmLT53cml0ZSA9IGJ1Zi0+YWxsb2MgPSAwOwp9CgpCT09MCmJ1ZmZlcl93cml0ZShCeXRlQnVmZmVyKiBidWYsIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBuKSB7CiAgYXNzZXJ0KChzaXplX3QpYnVmZmVyX0FWQUlMKGJ1ZikgPj0gbik7CiAgbWVtY3B5KGJ1Zi0+d3JpdGUsIHgsIG4pOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gVFJVRTsKfQoKaW50CmJ1ZmZlcl92cHJpbnRmKEJ5dGVCdWZmZXIqIGJ1ZiwgY29uc3QgY2hhciogZm9ybWF0LCB2YV9saXN0IGFwKSB7CiAgc3NpemVfdCBuLCBzaXplID0gYnVmZmVyX0FWQUlMKGJ1Zik7CiAgbiA9IHZzbnByaW50ZigoY2hhciopYnVmLT53cml0ZSwgc2l6ZSwgZm9ybWF0LCBhcCk7CiAgaWYobiA+IHNpemUpCiAgICByZXR1cm4gMDsKICBpZihuID49IChpbnQpc2l6ZSkKICAgIG4gPSBzaXplOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gbjsKfQoKaW50CmJ1ZmZlcl9wcmludGYoQnl0ZUJ1ZmZlciogYnVmLCBjb25zdCBjaGFyKiBmb3JtYXQsIC4uLikgewogIGludCBuOwogIHZhX2xpc3QgYXA7CiAgdmFfc3RhcnQoYXAsIGZvcm1hdCk7CiAgbiA9IGJ1ZmZlcl92cHJpbnRmKGJ1ZiwgZm9ybWF0LCBhcCk7CiAgdmFfZW5kKGFwKTsKICByZXR1cm4gbjsKfQoKdWludDhfdCoKYnVmZmVyX3JlYWxsb2MoQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHNpemVfdCByZCwgd3I7CiAgdWludDhfdCogeDsKCiAgaWYoIXNpemUpIHsKICAgIGJ1ZmZlcl9mcmVlKGJ1Zik7CiAgICByZXR1cm4gMDsKICB9CgogIHJkID0gYnVmZmVyX1RBSUwoYnVmKTsKICB3ciA9IGJ1ZmZlcl9IRUFEKGJ1Zik7CiAgYXNzZXJ0KHNpemUgPj0gd3IpOwoKICBpZigoeCA9IGJsb2NrX3JlYWxsb2MoJmJ1Zi0+YmxvY2ssIHNpemUpKSkgewogICAgaWYoYnVmLT5hbGxvYyA9PSAwICYmIGJ1Zi0+c3RhcnQgJiYgd3IpCiAgICAgIG1lbWNweSh4ICsgTFdTX1BSRSwgYnVmLT5zdGFydCwgd3IpOwoKICAgIGJ1Zi0+YWxsb2MgPSB4OwogICAgYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQgKyB3cjsKICAgIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQgKyByZDsKICB9CiAgcmV0dXJuIHg7Cn0KCgoKQk9PTApidWZmZXJfY2xvbmUoQnl0ZUJ1ZmZlciogYnVmLCBjb25zdCBCeXRlQnVmZmVyKiBvdGhlcikgewogIGlmKCFidWZmZXJfYWxsb2MoYnVmLCBibG9ja19TSVpFKG90aGVyKSkpCiAgICByZXR1cm4gRkFMU0U7CiAgbWVtY3B5KGJ1Zi0+c3RhcnQsIG90aGVyLT5zdGFydCwgYnVmZmVyX0hFQUQob3RoZXIpKTsKCiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9UQUlMKG90aGVyKTsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9IRUFEKG90aGVyKTsKICByZXR1cm4gVFJVRTsKfQoKdWludDhfdCoKYnVmZmVyX2dyb3coQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHNpemUgKz0gYnVmZmVyX1NJWkUoYnVmKTsKICByZXR1cm4gYnVmZmVyX3JlYWxsb2MoYnVmLCBzaXplKTsKfQoAAAAAAAAAAKQPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALA8AAAAAAAAsDwAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACkDwAAI2luY2x1ZGUgImJ1ZmZlci5oIgojaW5jbHVkZSAianN1dGlscy5oIgojaW5jbHVkZSA8YXNzZXJ0Lmg+Cgp1aW50OF90KgpibG9ja19hbGxvYyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBwdHI7CgogIGlmKChwdHIgPSBtYWxsb2Moc2l6ZSArIExXU19QUkUpKSkgewogICAgYmxrLT5zdGFydCA9IHB0ciArIExXU19QUkU7CiAgICBibGstPmVuZCA9IGJsay0+c3RhcnQgKyBzaXplOwogIH0KCiAgcmV0dXJuIHB0cjsKfQoKdWludDhfdCoKYmxvY2tfcmVhbGxvYyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBwdHI7CgogIGlmKCFzaXplKSB7CiAgICBibG9ja19mcmVlKGJsayk7CiAgICByZXR1cm4gMDsKICB9CgogIGlmKChwdHIgPSByZWFsbG9jKGJsb2NrX0FMTE9DKGJsayksIHNpemUgKyBMV1NfUFJFKSkpIHsKICAgIGJsay0+c3RhcnQgPSBwdHIgKyBMV1NfUFJFOwogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ICsgc2l6ZTsKICB9IGVsc2UgewogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ID0gMDsKICB9CgogIHJldHVybiBwdHI7Cn0KCnZvaWQKYmxvY2tfZnJlZShCeXRlQmxvY2sqIGJsaykgewogIGlmKGJsay0+c3RhcnQpCiAgICBmcmVlKGJsay0+c3RhcnQgLSBMV1NfUFJFKTsKCiAgYmxrLT5zdGFydCA9IGJsay0+ZW5kID0gMDsKfQoKdWludDhfdCoKYmxvY2tfZ3JvdyhCeXRlQmxvY2sqIGJsaywgc2l6ZV90IHNpemUpIHsKICB1aW50OF90KiBhbGxvYzsKICBzaXplX3QgbmV3c2l6ZSA9IGJsb2NrX1NJWkUoYmxrKSArIHNpemU7CiAgaWYoKGFsbG9jID0gcmVhbGxvYyhibG9ja19BTExPQyhibGspLCBMV1NfUFJFICsgbmV3c2l6ZSkpKSB7CiAgICBibGstPnN0YXJ0ID0gYWxsb2MgKyBMV1NfUFJFOwogICAgYmxrLT5lbmQgPSBibGstPnN0YXJ0ICsgbmV3c2l6ZTsKICB9CiAgcmV0dXJuIGFsbG9jID8gYmxrLT5zdGFydCA6IDA7Cn0KCnN0YXRpYyB2b2lkCmJsb2NrX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCB2b2lkKiBhbGxvYywgdm9pZCogc3RhcnQpIHsKICBmcmVlKGFsbG9jKTsKfQoKQnl0ZUJsb2NrCmJsb2NrX2NvcHkoY29uc3Qgdm9pZCogcHRyLCBzaXplX3Qgc2l6ZSkgewogIEJ5dGVCbG9jayByZXQgPSB7MCwgMH07CiAgaWYoYmxvY2tfYWxsb2MoJnJldCwgc2l6ZSkpIHsKICAgIG1lbWNweShyZXQuc3RhcnQsIHB0ciwgc2l6ZSk7CiAgfQogIHJldHVybiByZXQ7Cn0KCkpTVmFsdWUKYmxvY2tfdG9hcnJheWJ1ZmZlcihCeXRlQmxvY2sqIGJsaywgSlNDb250ZXh0KiBjdHgpIHsKICBCeXRlQmxvY2sgbWVtID0gYmxvY2tfbW92ZSgoQnl0ZUJsb2NrKilibGspOwogIHJldHVybiBKU19OZXdBcnJheUJ1ZmZlcihjdHgsIGJsb2NrX0JFR0lOKCZtZW0pLCBibG9ja19TSVpFKCZtZW0pLCBibG9ja19maW5hbGl6ZXIsIGJsb2NrX0FMTE9DKCZtZW0pLCBGQUxTRSk7Cn0KCkpTVmFsdWUKYmxvY2tfdG9zdHJpbmcoQnl0ZUJsb2NrKiBibGssIEpTQ29udGV4dCogY3R4KSB7CiAgQnl0ZUJsb2NrIG1lbSA9IGJsb2NrX21vdmUoKEJ5dGVCbG9jayopYmxrKTsKICBKU1ZhbHVlIHN0ciA9IEpTX05ld1N0cmluZ0xlbihjdHgsIGJsb2NrX0JFR0lOKCZtZW0pLCBibG9ja19TSVpFKCZtZW0pKTsKICBibG9ja19mcmVlKCZtZW0pOwogIHJldHVybiBzdHI7Cn0KCnNzaXplX3QKYmxvY2tfYXBwZW5kKEJ5dGVCbG9jayogYmxrLCBjb25zdCB2b2lkKiBkYXRhLCBzaXplX3Qgc2l6ZSkgewogIHNpemVfdCBvZmZzZXQgPSBibG9ja19TSVpFKGJsayk7CiAgdWludDhfdCogc3RhcnQ7CgogIGlmKChzdGFydCA9IGJsb2NrX2dyb3coYmxrLCBzaXplKSkpIHsKICAgIG1lbWNweShzdGFydCArIG9mZnNldCwgZGF0YSwgc2l6ZSk7CiAgICByZXR1cm4gc2l6ZTsKICB9CiAgcmV0dXJuIC0xOwp9Cgp1aW50OF90KgpidWZmZXJfYWxsb2MoQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHVpbnQ4X3QqIHJldDsKICBpZigocmV0ID0gYmxvY2tfYWxsb2MoJmJ1Zi0+YmxvY2ssIHNpemUpKSkgewogICAgYnVmLT5hbGxvYyA9IHJldDsKICAgIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQ7CiAgICBidWYtPndyaXRlID0gYnVmLT5zdGFydDsKICB9CiAgcmV0dXJuIHJldDsKfQoKc3NpemVfdApidWZmZXJfYXBwZW5kKEJ5dGVCdWZmZXIqIGJ1ZiwgY29uc3Qgdm9pZCogeCwgc2l6ZV90IG4pIHsKICBpZigoc2l6ZV90KWJ1ZmZlcl9BVkFJTChidWYpIDwgbiArIDEpIHsKICAgIGlmKCFidWZmZXJfcmVhbGxvYyhidWYsIGJ1ZmZlcl9IRUFEKGJ1ZikgKyBuICsgMSkpCiAgICAgIHJldHVybiAtMTsKICB9CiAgbWVtY3B5KGJ1Zi0+d3JpdGUsIHgsIG4pOwogIGJ1Zi0+d3JpdGVbbl0gPSAnXDAnOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gbjsKfQoKdm9pZApidWZmZXJfZnJlZShCeXRlQnVmZmVyKiBidWYpIHsKICBpZihidWYtPmFsbG9jKQogICAgYmxvY2tfZnJlZSgmYnVmLT5ibG9jayk7CiAgYnVmLT5yZWFkID0gYnVmLT53cml0ZSA9IGJ1Zi0+YWxsb2MgPSAwOwp9CgpCT09MCmJ1ZmZlcl93cml0ZShCeXRlQnVmZmVyKiBidWYsIGNvbnN0IHZvaWQqIHgsIHNpemVfdCBuKSB7CiAgYXNzZXJ0KChzaXplX3QpYnVmZmVyX0FWQUlMKGJ1ZikgPj0gbik7CiAgbWVtY3B5KGJ1Zi0+d3JpdGUsIHgsIG4pOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gVFJVRTsKfQoKaW50CmJ1ZmZlcl92cHJpbnRmKEJ5dGVCdWZmZXIqIGJ1ZiwgY29uc3QgY2hhciogZm9ybWF0LCB2YV9saXN0IGFwKSB7CiAgc3NpemVfdCBuLCBzaXplID0gYnVmZmVyX0FWQUlMKGJ1Zik7CiAgbiA9IHZzbnByaW50ZigoY2hhciopYnVmLT53cml0ZSwgc2l6ZSwgZm9ybWF0LCBhcCk7CiAgaWYobiA+IHNpemUpCiAgICByZXR1cm4gMDsKICBpZihuID49IChpbnQpc2l6ZSkKICAgIG4gPSBzaXplOwogIGJ1Zi0+d3JpdGUgKz0gbjsKICByZXR1cm4gbjsKfQoKaW50CmJ1ZmZlcl9wcmludGYoQnl0ZUJ1ZmZlciogYnVmLCBjb25zdCBjaGFyKiBmb3JtYXQsIC4uLikgewogIGludCBuOwogIHZhX2xpc3QgYXA7CiAgdmFfc3RhcnQoYXAsIGZvcm1hdCk7CiAgbiA9IGJ1ZmZlcl92cHJpbnRmKGJ1ZiwgZm9ybWF0LCBhcCk7CiAgdmFfZW5kKGFwKTsKICByZXR1cm4gbjsKfQoKdWludDhfdCoKYnVmZmVyX3JlYWxsb2MoQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHNpemVfdCByZCwgd3I7CiAgdWludDhfdCogeDsKCiAgaWYoIXNpemUpIHsKICAgIGJ1ZmZlcl9mcmVlKGJ1Zik7CiAgICByZXR1cm4gMDsKICB9CgogIHJkID0gYnVmZmVyX1RBSUwoYnVmKTsKICB3ciA9IGJ1ZmZlcl9IRUFEKGJ1Zik7CiAgYXNzZXJ0KHNpemUgPj0gd3IpOwoKICBpZigoeCA9IGJsb2NrX3JlYWxsb2MoJmJ1Zi0+YmxvY2ssIHNpemUpKSkgewogICAgaWYoYnVmLT5hbGxvYyA9PSAwICYmIGJ1Zi0+c3RhcnQgJiYgd3IpCiAgICAgIG1lbWNweSh4ICsgTFdTX1BSRSwgYnVmLT5zdGFydCwgd3IpOwoKICAgIGJ1Zi0+YWxsb2MgPSB4OwogICAgYnVmLT53cml0ZSA9IGJ1Zi0+c3RhcnQgKyB3cjsKICAgIGJ1Zi0+cmVhZCA9IGJ1Zi0+c3RhcnQgKyByZDsKICB9CiAgcmV0dXJuIHg7Cn0KCgoKQk9PTApidWZmZXJfY2xvbmUoQnl0ZUJ1ZmZlciogYnVmLCBjb25zdCBCeXRlQnVmZmVyKiBvdGhlcikgewogIGlmKCFidWZmZXJfYWxsb2MoYnVmLCBibG9ja19TSVpFKG90aGVyKSkpCiAgICByZXR1cm4gRkFMU0U7CiAgbWVtY3B5KGJ1Zi0+c3RhcnQsIG90aGVyLT5zdGFydCwgYnVmZmVyX0hFQUQob3RoZXIpKTsKCiAgYnVmLT5yZWFkID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9UQUlMKG90aGVyKTsKICBidWYtPndyaXRlID0gYnVmLT5zdGFydCArIGJ1ZmZlcl9IRUFEKG90aGVyKTsKICByZXR1cm4gVFJVRTsKfQoKdWludDhfdCoKYnVmZmVyX2dyb3coQnl0ZUJ1ZmZlciogYnVmLCBzaXplX3Qgc2l6ZSkgewogIHNpemUgKz0gYnVmZmVyX1NJWkUoYnVmKTsKICByZXR1cm4gYnVmZmVyX3JlYWxsb2MoYnVmLCBzaXplKTsKfQoAAAAAAAAAAKIPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALA8AAAAAAAAsDwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/headers.c",
			"settings":
			{
				"buffer_size": 6180,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					17,
					1,
					"cut",
					null,
					"AQAAAHkSAAAAAAAAeRIAAAAAAAA8AQAACmNoYXIqCmhlYWRlcnNfZ2V0dG9rZW4oSlNDb250ZXh0KiBjdHgsIHN0cnVjdCBsd3MqIHdzaSwgZW51bSBsd3NfdG9rZW5faW5kZXhlcyB0b2spIHsKICBpbnQgbGVuOwoKICBpZigobGVuID0gbHdzX2hkcl90b3RhbF9sZW5ndGgod3NpLCB0b2spKSA+IDApIHsKICAgIGNoYXIqIGhkcjsKCiAgICBpZigoaGRyID0ganNfbWFsbG9jKGN0eCwgbGVuICsgMSkpKSB7CiAgICAgIGx3c19oZHJfY29weSh3c2ksIGhkciwgbGVuICsgMSwgdG9rKTsKICAgICAgaGRyW2xlbl0gPSAnXDAnOwogICAgICByZXR1cm4gaGRyOwogICAgfQogIH0KICByZXR1cm4gMDsKfQ",
					"AQAAAAAAAAABAAAAeRIAAAAAAAC1EwAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAeRIAAAAAAAB5EgAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAkGAAAI2luY2x1ZGUgInV0aWxzLmgiCiNpbmNsdWRlICJoZWFkZXJzLmgiCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlIDxzdHJpbmdzLmg+CgpKU1ZhbHVlCmhlYWRlcnNfb2JqZWN0KEpTQ29udGV4dCogY3R4LCBjb25zdCB2b2lkKiBzdGFydCwgY29uc3Qgdm9pZCogZSkgewogIEpTVmFsdWUgcmV0ID0gSlNfTmV3T2JqZWN0KGN0eCk7CiAgc2l6ZV90IGxlbiwgbmFtZWxlbiwgbjsKICBjb25zdCB1aW50OF90ICp4LCAqZW5kOwoKICBmb3IoeCA9IHN0YXJ0LCBlbmQgPSBlOyB4IDwgZW5kOyB4ICs9IGxlbiArIDEpIHsKICAgIGxlbiA9IGJ5dGVfY2hycyh4LCBlbmQgLSB4LCAiXHJcbiIsIDIpOwogICAgaWYobGVuID4gKG4gPSBieXRlX2Nocih4LCBsZW4sICc6JykpKSB7CiAgICAgIGNvbnN0IGNoYXIqIHByb3AgPSAobmFtZWxlbiA9IG4pID8ganNfc3RybmR1cChjdHgsIChjb25zdCBjaGFyKil4LCBuYW1lbGVuKSA6IDA7CiAgICAgIGlmKHhbbl0gPT0gJzonKQogICAgICAgIG4rKzsKICAgICAgaWYoaXNzcGFjZSh4W25dKSkKICAgICAgICBuKys7CiAgICAgIGlmKHByb3ApIHsKICAgICAgICBKU19EZWZpbmVQcm9wZXJ0eVZhbHVlU3RyKGN0eCwgcmV0LCBwcm9wLCBKU19OZXdTdHJpbmdMZW4oY3R4LCAoY29uc3QgY2hhciopJnhbbl0sIGxlbiAtIG4pLCBKU19QUk9QX0VOVU1FUkFCTEUpOwogICAgICAgIGpzX2ZyZWUoY3R4LCAodm9pZCopcHJvcCk7CiAgICAgIH0KICAgIH0KICB9CiAgcmV0dXJuIHJldDsKfQoKc2l6ZV90CmhlYWRlcnNfd3JpdGUodWludDhfdCoqIGluLCB1aW50OF90KiBlbmQsIEJ5dGVCdWZmZXIqIGJ1ZmZlciwgc3RydWN0IGx3cyogd3NpKSB7CiAgaW50IHJldDsKICB1aW50OF90ICpwID0gYnVmZmVyLT5yZWFkLCAqcSA9IGJ1ZmZlci0+d3JpdGUsICpzdGFydCA9ICppbjsKCiAgd2hpbGUocCA8IHEpIHsKICAgIHNpemVfdCBuZXh0ID0gc2Nhbl9uZXh0bGluZShwLCBxIC0gcCk7CiAgICBzaXplX3QgbSwgbmFtZWxlbiA9IGJ5dGVfY2hyKHAsIG5leHQsICc6Jyk7CiAgICB1aW50OF90KiBuYW1lID0gcDsKCiAgICBtID0gbmFtZWxlbiArIDE7CiAgICB3aGlsZShwW21dICYmIHBbbV0gPT0gJyAnKSArK207CiAgICBwICs9IG07CiAgICBuZXh0IC09IG07CgogICAgdWludDhfdCB0bXAgPSBuYW1lW25hbWVsZW4gKyAxXTsKICAgIG5hbWVbbmFtZWxlbiArIDFdID0gJ1wwJzsKICAgIHJldCA9IGx3c19hZGRfaHR0cF9oZWFkZXJfYnlfbmFtZSh3c2ksIG5hbWUsIHAsIHNjYW5fZW9sKHAsIG5leHQpLCBpbiwgZW5kKTsKICAgIG5hbWVbbmFtZWxlbiArIDFdID0gdG1wOwogICAgLy8gcHJpbnRmKCJuYW1lPSUuKnMgdmFsdWU9JyUuKnMnXG5hbWVsZW4iLCAoaW50KW5hbWVsZW4sIG5hbWUsIChpbnQpbGluZWxlbiwgcCk7CiAgICBwICs9IG5leHQ7CgogICAgaWYocmV0KQogICAgICBicmVhazsKICB9CgogIHJldHVybiAqaW4gLSBzdGFydDsKfQoKaW50CmhlYWRlcnNfZnJvbW9iaihCeXRlQnVmZmVyKiBidWZmZXIsIEpTVmFsdWVDb25zdCBvYmosIEpTQ29udGV4dCogY3R4KSB7CiAgSlNQcm9wZXJ0eUVudW0qIHRhYjsKICB1aW50MzJfdCB0YWJfbGVuLCBpOwoKICBpZihKU19HZXRPd25Qcm9wZXJ0eU5hbWVzKGN0eCwgJnRhYiwgJnRhYl9sZW4sIG9iaiwgSlNfR1BOX0VOVU1fT05MWSB8IEpTX0dQTl9TVFJJTkdfTUFTSykpCiAgICByZXR1cm4gMDsKCiAgZm9yKGkgPSAwOyBpIDwgdGFiX2xlbjsgaSsrKSB7CiAgICBKU1ZhbHVlIGpzdmFsID0gSlNfR2V0UHJvcGVydHkoY3R4LCBvYmosIHRhYltpXS5hdG9tKTsKICAgIHNpemVfdCB2YWx1ZV9sZW4sIHByb3BfbGVuOwogICAgY29uc3QgY2hhciAqdmFsdWUsICpwcm9wOwoKICAgIHZhbHVlID0gSlNfVG9DU3RyaW5nTGVuKGN0eCwgJnZhbHVlX2xlbiwganN2YWwpOwogICAgSlNfRnJlZVZhbHVlKGN0eCwganN2YWwpOwoKICAgIHByb3AgPSBKU19BdG9tVG9DU3RyaW5nKGN0eCwgdGFiW2ldLmF0b20pOwogICAgcHJvcF9sZW4gPSBzdHJsZW4ocHJvcCk7CgogICAgYnVmZmVyX2dyb3coYnVmZmVyLCBwcm9wX2xlbiArIDIgKyB2YWx1ZV9sZW4gKyAyKTsKCiAgICBidWZmZXJfd3JpdGUoYnVmZmVyLCBwcm9wLCBwcm9wX2xlbik7CiAgICBidWZmZXJfd3JpdGUoYnVmZmVyLCAiOiAiLCAyKTsKICAgIGJ1ZmZlcl93cml0ZShidWZmZXIsIHZhbHVlLCB2YWx1ZV9sZW4pOwogICAgYnVmZmVyX3dyaXRlKGJ1ZmZlciwgIlxyXG4iLCAyKTsKCiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHByb3ApOwogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCB2YWx1ZSk7CiAgfQoKICBqc19mcmVlKGN0eCwgdGFiKTsKICByZXR1cm4gaTsKfQoKc3NpemVfdApoZWFkZXJzX2ZpbmRiKEJ5dGVCdWZmZXIqIGIsIGNvbnN0IGNoYXIqIG5hbWUsIHNpemVfdCBuYW1lbGVuKSB7CiAgdWludDhfdCogeDsKICBzc2l6ZV90IHJldCA9IDA7CgogIGZvcih4ID0gYi0+c3RhcnQ7IHggPCBiLT53cml0ZTspIHsKICAgIHNpemVfdCBjID0gYnl0ZV9jaHJzKHgsIGItPndyaXRlIC0geCwgIlxyXG4iLCAyKTsKCiAgICAvLyBwcmludGYoIiVzICUuKnNcbiIsIF9fZnVuY19fLCAoaW50KWMsIChjaGFyKil4KTsKCiAgICBpZighc3RybmNhc2VjbXAoKGNvbnN0IGNoYXIqKXgsIG5hbWUsIG5hbWVsZW4pICYmIHhbbmFtZWxlbl0gPT0gJzonKQogICAgICByZXR1cm4gcmV0OwoKICAgIHdoaWxlKGlzc3BhY2UoeFtjXSkgJiYgeCArIGMgPCBiLT53cml0ZSkgKytjOwogICAgeCArPSBjOwogICAgKytyZXQ7CiAgfQoKICByZXR1cm4gLTE7Cn0KCmNoYXIqCmhlYWRlcnNfYXQoQnl0ZUJ1ZmZlciogYiwgc2l6ZV90KiBsZW5wdHIsIHNpemVfdCBpbmRleCkgewogIHVpbnQ4X3QqIHg7CiAgc2l6ZV90IGkgPSAwOwogIGZvcih4ID0gYi0+c3RhcnQ7IHggPCBiLT53cml0ZTspIHsKICAgIHNpemVfdCBjID0gYnl0ZV9jaHJzKHgsIGItPndyaXRlIC0geCwgIlxyXG4iLCAyKTsKICAgIGlmKGkgPT0gaW5kZXgpIHsKICAgICAgaWYobGVucHRyKQogICAgICAgICpsZW5wdHIgPSBjOwogICAgICByZXR1cm4gKGNoYXIqKXg7CiAgICB9CiAgICB3aGlsZShpc3NwYWNlKHhbY10pICYmIHggKyBjIDwgYi0+d3JpdGUpICsrYzsKICAgIHggKz0gYzsKICAgICsraTsKICB9CiAgcmV0dXJuIDA7Cn0KCmNoYXIqCmhlYWRlcnNfZ2V0bGVuKEJ5dGVCdWZmZXIqIGIsIHNpemVfdCogbGVucHRyLCBjb25zdCBjaGFyKiBuYW1lKSB7CiAgc3NpemVfdCBpOwoKICBpZigoaSA9IGhlYWRlcnNfZmluZChiLCBuYW1lKSkgIT0gLTEpIHsKICAgIHNpemVfdCBsLCBuOwogICAgY2hhciogeCA9IGhlYWRlcnNfYXQoYiwgJmwsIGkpOwogICAgbiA9IHNjYW5fbm9ud2hpdGVuc2tpcCh4LCBsKTsKICAgIHggKz0gbjsKICAgIGwgLT0gbjsKICAgIG4gPSBzY2FuX3doaXRlbnNraXAoeCwgbCk7CiAgICB4ICs9IG47CiAgICBsIC09IG47CiAgICBpZihsZW5wdHIpCiAgICAgICpsZW5wdHIgPSBsOwogICAgcmV0dXJuIHg7CiAgfQoKICByZXR1cm4gMDsKfQoKY2hhcioKaGVhZGVyc19nZXQoQnl0ZUJ1ZmZlciogYnVmZmVyLCBjb25zdCBjaGFyKiBuYW1lLCBKU0NvbnRleHQqIGN0eCkgewogIHNpemVfdCBsZW47CiAgY2hhciogc3RyOwoKICBpZigoc3RyID0gaGVhZGVyc19nZXRsZW4oYnVmZmVyLCAmbGVuLCBuYW1lKSkpCiAgICByZXR1cm4ganNfc3RybmR1cChjdHgsIHN0ciwgbGVuKTsKICByZXR1cm4gMDsKfQoKc3NpemVfdApoZWFkZXJzX2ZpbmQoQnl0ZUJ1ZmZlciogYnVmZmVyLCBjb25zdCBjaGFyKiBuYW1lKSB7CiAgcmV0dXJuIGhlYWRlcnNfZmluZGIoYnVmZmVyLCBuYW1lLCBzdHJsZW4obmFtZSkpOwp9CgppbnQKaGVhZGVyc190b2J1ZmZlcihKU0NvbnRleHQqIGN0eCwgQnl0ZUJ1ZmZlciogaGVhZGVycywgc3RydWN0IGx3cyogd3NpKSB7CiAgaW50IHRvaywgbGVuLCBjb3VudCA9IDA7CgogIGlmKCFoZWFkZXJzLT5zdGFydCkKICAgIGJ1ZmZlcl9hbGxvYyhoZWFkZXJzLCAxMDI0KTsKCiAgZm9yKHRvayA9IFdTSV9UT0tFTl9IT1NUOyB0b2sgPCBXU0lfVE9LRU5fQ09VTlQ7IHRvaysrKSB7CiAgICBpZih0b2sgPT0gV1NJX1RPS0VOX0hUVFAgfHwgdG9rID09IFdTSV9UT0tFTl9IVFRQX1VSSV9BUkdTKQogICAgICBjb250aW51ZTsKCiAgICBpZigobGVuID0gbHdzX2hkcl90b3RhbF9sZW5ndGgod3NpLCB0b2spKSA+IDApIHsKICAgICAgY2hhciBoZHJbbGVuICsgMV07CiAgICAgIGNvbnN0IGNoYXIqIG5hbWU7CgogICAgICBpZigobmFtZSA9IChjb25zdCBjaGFyKilsd3NfdG9rZW5fdG9fc3RyaW5nKHRvaykpKSB7CiAgICAgICAgaW50IG5hbWVsZW4gPSAxICsgYnl0ZV9jaHIobmFtZSArIDEsIHN0cmxlbihuYW1lICsgMSksICc6Jyk7CiAgICAgICAgbHdzX2hkcl9jb3B5KHdzaSwgaGRyLCBsZW4gKyAxLCB0b2spOwogICAgICAgIGhkcltsZW5dID0gJ1wwJzsKCiAgICAgICAgLy8gcHJpbnRmKCJoZWFkZXJzICVpICUuKnMgJyVzJ1xuIiwgdG9rLCBuYW1lbGVuLCBuYW1lLCBoZHIpOwoKICAgICAgICBpZighaGVhZGVycy0+YWxsb2MpCiAgICAgICAgICBidWZmZXJfYWxsb2MoaGVhZGVycywgMTAyNCk7CgogICAgICAgIHdoaWxlKCFidWZmZXJfcHJpbnRmKGhlYWRlcnMsICIlLipzOiAlc1xuIiwgbmFtZWxlbiwgbmFtZSwgaGRyKSkgeyBidWZmZXJfZ3JvdyhoZWFkZXJzLCAxMDI0KTsgfQogICAgICAgICsrY291bnQ7CiAgICAgIH0KICAgIH0KICB9CiAgcmV0dXJuIGNvdW50Owp9Cgpzc2l6ZV90CmhlYWRlcnNfdW5zZXRiKEJ5dGVCdWZmZXIqIGIsIGNvbnN0IGNoYXIqIG5hbWUsIHNpemVfdCBuYW1lbGVuKSB7CiAgc3NpemVfdCBpOwoKICBpZigoaSA9IGhlYWRlcnNfZmluZGIoYiwgbmFtZSwgbmFtZWxlbikpID49IDApIHsKICAgIHVpbnQ4X3QqIHggPSBiLT5zdGFydCArIGk7CiAgICBzaXplX3QgYyA9IGJ5dGVfY2hycyh4LCBiLT53cml0ZSAtIHgsICJcclxuIiwgMik7CgogICAgd2hpbGUoaXNzcGFjZShiLT5zdGFydFtjXSkgJiYgYi0+c3RhcnQgKyBjIDwgYi0+d3JpdGUpICsrYzsKCiAgICBtZW1jcHkoeCwgeCArIGMsIGItPndyaXRlIC0gKGItPnN0YXJ0ICsgYykpOwogICAgYi0+d3JpdGUgLT0gYzsKCiAgICBpZihiLT53cml0ZSA8IGItPmVuZCkKICAgICAgbWVtc2V0KGItPndyaXRlLCAwLCBiLT5lbmQgLSBiLT53cml0ZSk7CiAgfQogIHJldHVybiBpOwp9Cgpzc2l6ZV90CmhlYWRlcnNfc2V0KEJ5dGVCdWZmZXIqIGIsIGNvbnN0IGNoYXIqIG5hbWUsIGNvbnN0IGNoYXIqIHZhbHVlKSB7CiAgc2l6ZV90IG5hbWVsZW4gPSBzdHJsZW4obmFtZSksIHZhbHVlbGVuID0gc3RybGVuKHZhbHVlKTsKICBzaXplX3QgYyA9IG5hbWVsZW4gKyAyICsgdmFsdWVsZW4gKyAyOwoKICBoZWFkZXJzX3Vuc2V0YihiLCBuYW1lLCBuYW1lbGVuKTsKCiAgYnVmZmVyX2dyb3coYiwgYyk7CiAgYnVmZmVyX3dyaXRlKGIsIG5hbWUsIG5hbWVsZW4pOwogIGJ1ZmZlcl93cml0ZShiLCAiOiAiLCAyKTsKICBidWZmZXJfd3JpdGUoYiwgdmFsdWUsIHZhbHVlbGVuKTsKICBidWZmZXJfd3JpdGUoYiwgIlxyXG4iLCAyKTsKCiAgcmV0dXJuIGM7Cn0KCnNzaXplX3QKaGVhZGVyc19hcHBlbmRiKEJ5dGVCdWZmZXIqIGIsIGNvbnN0IGNoYXIqIG5hbWUsIHNpemVfdCBuYW1lbGVuLCBjb25zdCBjaGFyKiB2YWx1ZSwgc2l6ZV90IHZhbHVlbGVuKSB7CiAgc3NpemVfdCBpOwoKICBpZigoaSA9IGhlYWRlcnNfZmluZGIoYiwgbmFtZSwgbmFtZWxlbikpID49IDApIHsKICAgIHVpbnQ4X3QgKnggPSBiLT5zdGFydCArIGksICp5OwogICAgc2l6ZV90IGMgPSBieXRlX2NocnMoeCwgYi0+d3JpdGUgLSB4LCAiXHJcbiIsIDIpOwoKICAgIC8vICAgIHdoaWxlKGlzc3BhY2UoYi0+c3RhcnRbY10pICYmIGItPnN0YXJ0ICsgYyA8IGItPndyaXRlKSArK2M7CiAgICB5ID0geCArIGM7CgogICAgaWYoKGItPndyaXRlIC0geSkgPiAwICYmIHZhbHVlbGVuID4gMCkgewogICAgICBtZW1tb3ZlKHkgKyB2YWx1ZWxlbiwgeSwgYi0+d3JpdGUgLSB5KTsKICAgIH0KICAgIGlmKHZhbHVlbGVuID4gMCkKICAgICAgbWVtY3B5KHksIHZhbHVlLCB2YWx1ZWxlbik7CgogICAgYi0+d3JpdGUgKz0gdmFsdWVsZW47CgogICAgaWYoYi0+d3JpdGUgPCBiLT5lbmQpCiAgICAgIG1lbXNldChiLT53cml0ZSwgMCwgYi0+ZW5kIC0gYi0+d3JpdGUpOwogIH0KCiAgcmV0dXJuIGk7Cn0KAAAAAAAAAAAkGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeRIAAAAAAAB5EgAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAeRIAAAAAAAB5EgAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAeRIAAAAAAAB5EgAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAeRIAAAAAAAB5EgAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAeRIAAAAAAAB5EgAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAeRIAAAAAAAB5EgAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAeRIAAAAAAAB5EgAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAkGAAAI2luY2x1ZGUgInV0aWxzLmgiCiNpbmNsdWRlICJoZWFkZXJzLmgiCiNpbmNsdWRlIDxsaWJ3ZWJzb2NrZXRzLmg+CiNpbmNsdWRlIDxzdHJpbmdzLmg+CgpKU1ZhbHVlCmhlYWRlcnNfb2JqZWN0KEpTQ29udGV4dCogY3R4LCBjb25zdCB2b2lkKiBzdGFydCwgY29uc3Qgdm9pZCogZSkgewogIEpTVmFsdWUgcmV0ID0gSlNfTmV3T2JqZWN0KGN0eCk7CiAgc2l6ZV90IGxlbiwgbmFtZWxlbiwgbjsKICBjb25zdCB1aW50OF90ICp4LCAqZW5kOwoKICBmb3IoeCA9IHN0YXJ0LCBlbmQgPSBlOyB4IDwgZW5kOyB4ICs9IGxlbiArIDEpIHsKICAgIGxlbiA9IGJ5dGVfY2hycyh4LCBlbmQgLSB4LCAiXHJcbiIsIDIpOwogICAgaWYobGVuID4gKG4gPSBieXRlX2Nocih4LCBsZW4sICc6JykpKSB7CiAgICAgIGNvbnN0IGNoYXIqIHByb3AgPSAobmFtZWxlbiA9IG4pID8ganNfc3RybmR1cChjdHgsIChjb25zdCBjaGFyKil4LCBuYW1lbGVuKSA6IDA7CiAgICAgIGlmKHhbbl0gPT0gJzonKQogICAgICAgIG4rKzsKICAgICAgaWYoaXNzcGFjZSh4W25dKSkKICAgICAgICBuKys7CiAgICAgIGlmKHByb3ApIHsKICAgICAgICBKU19EZWZpbmVQcm9wZXJ0eVZhbHVlU3RyKGN0eCwgcmV0LCBwcm9wLCBKU19OZXdTdHJpbmdMZW4oY3R4LCAoY29uc3QgY2hhciopJnhbbl0sIGxlbiAtIG4pLCBKU19QUk9QX0VOVU1FUkFCTEUpOwogICAgICAgIGpzX2ZyZWUoY3R4LCAodm9pZCopcHJvcCk7CiAgICAgIH0KICAgIH0KICB9CiAgcmV0dXJuIHJldDsKfQoKc2l6ZV90CmhlYWRlcnNfd3JpdGUodWludDhfdCoqIGluLCB1aW50OF90KiBlbmQsIEJ5dGVCdWZmZXIqIGJ1ZmZlciwgc3RydWN0IGx3cyogd3NpKSB7CiAgaW50IHJldDsKICB1aW50OF90ICpwID0gYnVmZmVyLT5yZWFkLCAqcSA9IGJ1ZmZlci0+d3JpdGUsICpzdGFydCA9ICppbjsKCiAgd2hpbGUocCA8IHEpIHsKICAgIHNpemVfdCBuZXh0ID0gc2Nhbl9uZXh0bGluZShwLCBxIC0gcCk7CiAgICBzaXplX3QgbSwgbmFtZWxlbiA9IGJ5dGVfY2hyKHAsIG5leHQsICc6Jyk7CiAgICB1aW50OF90KiBuYW1lID0gcDsKCiAgICBtID0gbmFtZWxlbiArIDE7CiAgICB3aGlsZShwW21dICYmIHBbbV0gPT0gJyAnKSArK207CiAgICBwICs9IG07CiAgICBuZXh0IC09IG07CgogICAgdWludDhfdCB0bXAgPSBuYW1lW25hbWVsZW4gKyAxXTsKICAgIG5hbWVbbmFtZWxlbiArIDFdID0gJ1wwJzsKICAgIHJldCA9IGx3c19hZGRfaHR0cF9oZWFkZXJfYnlfbmFtZSh3c2ksIG5hbWUsIHAsIHNjYW5fZW9sKHAsIG5leHQpLCBpbiwgZW5kKTsKICAgIG5hbWVbbmFtZWxlbiArIDFdID0gdG1wOwogICAgLy8gcHJpbnRmKCJuYW1lPSUuKnMgdmFsdWU9JyUuKnMnXG5hbWVsZW4iLCAoaW50KW5hbWVsZW4sIG5hbWUsIChpbnQpbGluZWxlbiwgcCk7CiAgICBwICs9IG5leHQ7CgogICAgaWYocmV0KQogICAgICBicmVhazsKICB9CgogIHJldHVybiAqaW4gLSBzdGFydDsKfQoKaW50CmhlYWRlcnNfZnJvbW9iaihCeXRlQnVmZmVyKiBidWZmZXIsIEpTVmFsdWVDb25zdCBvYmosIEpTQ29udGV4dCogY3R4KSB7CiAgSlNQcm9wZXJ0eUVudW0qIHRhYjsKICB1aW50MzJfdCB0YWJfbGVuLCBpOwoKICBpZihKU19HZXRPd25Qcm9wZXJ0eU5hbWVzKGN0eCwgJnRhYiwgJnRhYl9sZW4sIG9iaiwgSlNfR1BOX0VOVU1fT05MWSB8IEpTX0dQTl9TVFJJTkdfTUFTSykpCiAgICByZXR1cm4gMDsKCiAgZm9yKGkgPSAwOyBpIDwgdGFiX2xlbjsgaSsrKSB7CiAgICBKU1ZhbHVlIGpzdmFsID0gSlNfR2V0UHJvcGVydHkoY3R4LCBvYmosIHRhYltpXS5hdG9tKTsKICAgIHNpemVfdCB2YWx1ZV9sZW4sIHByb3BfbGVuOwogICAgY29uc3QgY2hhciAqdmFsdWUsICpwcm9wOwoKICAgIHZhbHVlID0gSlNfVG9DU3RyaW5nTGVuKGN0eCwgJnZhbHVlX2xlbiwganN2YWwpOwogICAgSlNfRnJlZVZhbHVlKGN0eCwganN2YWwpOwoKICAgIHByb3AgPSBKU19BdG9tVG9DU3RyaW5nKGN0eCwgdGFiW2ldLmF0b20pOwogICAgcHJvcF9sZW4gPSBzdHJsZW4ocHJvcCk7CgogICAgYnVmZmVyX2dyb3coYnVmZmVyLCBwcm9wX2xlbiArIDIgKyB2YWx1ZV9sZW4gKyAyKTsKCiAgICBidWZmZXJfd3JpdGUoYnVmZmVyLCBwcm9wLCBwcm9wX2xlbik7CiAgICBidWZmZXJfd3JpdGUoYnVmZmVyLCAiOiAiLCAyKTsKICAgIGJ1ZmZlcl93cml0ZShidWZmZXIsIHZhbHVlLCB2YWx1ZV9sZW4pOwogICAgYnVmZmVyX3dyaXRlKGJ1ZmZlciwgIlxyXG4iLCAyKTsKCiAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHByb3ApOwogICAgSlNfRnJlZUNTdHJpbmcoY3R4LCB2YWx1ZSk7CiAgfQoKICBqc19mcmVlKGN0eCwgdGFiKTsKICByZXR1cm4gaTsKfQoKc3NpemVfdApoZWFkZXJzX2ZpbmRiKEJ5dGVCdWZmZXIqIGIsIGNvbnN0IGNoYXIqIG5hbWUsIHNpemVfdCBuYW1lbGVuKSB7CiAgdWludDhfdCogeDsKICBzc2l6ZV90IHJldCA9IDA7CgogIGZvcih4ID0gYi0+c3RhcnQ7IHggPCBiLT53cml0ZTspIHsKICAgIHNpemVfdCBjID0gYnl0ZV9jaHJzKHgsIGItPndyaXRlIC0geCwgIlxyXG4iLCAyKTsKCiAgICAvLyBwcmludGYoIiVzICUuKnNcbiIsIF9fZnVuY19fLCAoaW50KWMsIChjaGFyKil4KTsKCiAgICBpZighc3RybmNhc2VjbXAoKGNvbnN0IGNoYXIqKXgsIG5hbWUsIG5hbWVsZW4pICYmIHhbbmFtZWxlbl0gPT0gJzonKQogICAgICByZXR1cm4gcmV0OwoKICAgIHdoaWxlKGlzc3BhY2UoeFtjXSkgJiYgeCArIGMgPCBiLT53cml0ZSkgKytjOwogICAgeCArPSBjOwogICAgKytyZXQ7CiAgfQoKICByZXR1cm4gLTE7Cn0KCmNoYXIqCmhlYWRlcnNfYXQoQnl0ZUJ1ZmZlciogYiwgc2l6ZV90KiBsZW5wdHIsIHNpemVfdCBpbmRleCkgewogIHVpbnQ4X3QqIHg7CiAgc2l6ZV90IGkgPSAwOwogIGZvcih4ID0gYi0+c3RhcnQ7IHggPCBiLT53cml0ZTspIHsKICAgIHNpemVfdCBjID0gYnl0ZV9jaHJzKHgsIGItPndyaXRlIC0geCwgIlxyXG4iLCAyKTsKICAgIGlmKGkgPT0gaW5kZXgpIHsKICAgICAgaWYobGVucHRyKQogICAgICAgICpsZW5wdHIgPSBjOwogICAgICByZXR1cm4gKGNoYXIqKXg7CiAgICB9CiAgICB3aGlsZShpc3NwYWNlKHhbY10pICYmIHggKyBjIDwgYi0+d3JpdGUpICsrYzsKICAgIHggKz0gYzsKICAgICsraTsKICB9CiAgcmV0dXJuIDA7Cn0KCmNoYXIqCmhlYWRlcnNfZ2V0bGVuKEJ5dGVCdWZmZXIqIGIsIHNpemVfdCogbGVucHRyLCBjb25zdCBjaGFyKiBuYW1lKSB7CiAgc3NpemVfdCBpOwoKICBpZigoaSA9IGhlYWRlcnNfZmluZChiLCBuYW1lKSkgIT0gLTEpIHsKICAgIHNpemVfdCBsLCBuOwogICAgY2hhciogeCA9IGhlYWRlcnNfYXQoYiwgJmwsIGkpOwogICAgbiA9IHNjYW5fbm9ud2hpdGVuc2tpcCh4LCBsKTsKICAgIHggKz0gbjsKICAgIGwgLT0gbjsKICAgIG4gPSBzY2FuX3doaXRlbnNraXAoeCwgbCk7CiAgICB4ICs9IG47CiAgICBsIC09IG47CiAgICBpZihsZW5wdHIpCiAgICAgICpsZW5wdHIgPSBsOwogICAgcmV0dXJuIHg7CiAgfQoKICByZXR1cm4gMDsKfQoKY2hhcioKaGVhZGVyc19nZXQoQnl0ZUJ1ZmZlciogYnVmZmVyLCBjb25zdCBjaGFyKiBuYW1lLCBKU0NvbnRleHQqIGN0eCkgewogIHNpemVfdCBsZW47CiAgY2hhciogc3RyOwoKICBpZigoc3RyID0gaGVhZGVyc19nZXRsZW4oYnVmZmVyLCAmbGVuLCBuYW1lKSkpCiAgICByZXR1cm4ganNfc3RybmR1cChjdHgsIHN0ciwgbGVuKTsKICByZXR1cm4gMDsKfQoKc3NpemVfdApoZWFkZXJzX2ZpbmQoQnl0ZUJ1ZmZlciogYnVmZmVyLCBjb25zdCBjaGFyKiBuYW1lKSB7CiAgcmV0dXJuIGhlYWRlcnNfZmluZGIoYnVmZmVyLCBuYW1lLCBzdHJsZW4obmFtZSkpOwp9CgppbnQKaGVhZGVyc190b2J1ZmZlcihKU0NvbnRleHQqIGN0eCwgQnl0ZUJ1ZmZlciogaGVhZGVycywgc3RydWN0IGx3cyogd3NpKSB7CiAgaW50IHRvaywgbGVuLCBjb3VudCA9IDA7CgogIGlmKCFoZWFkZXJzLT5zdGFydCkKICAgIGJ1ZmZlcl9hbGxvYyhoZWFkZXJzLCAxMDI0KTsKCiAgZm9yKHRvayA9IFdTSV9UT0tFTl9IT1NUOyB0b2sgPCBXU0lfVE9LRU5fQ09VTlQ7IHRvaysrKSB7CiAgICBpZih0b2sgPT0gV1NJX1RPS0VOX0hUVFAgfHwgdG9rID09IFdTSV9UT0tFTl9IVFRQX1VSSV9BUkdTKQogICAgICBjb250aW51ZTsKCiAgICBpZigobGVuID0gbHdzX2hkcl90b3RhbF9sZW5ndGgod3NpLCB0b2spKSA+IDApIHsKICAgICAgY2hhciBoZHJbbGVuICsgMV07CiAgICAgIGNvbnN0IGNoYXIqIG5hbWU7CgogICAgICBpZigobmFtZSA9IChjb25zdCBjaGFyKilsd3NfdG9rZW5fdG9fc3RyaW5nKHRvaykpKSB7CiAgICAgICAgaW50IG5hbWVsZW4gPSAxICsgYnl0ZV9jaHIobmFtZSArIDEsIHN0cmxlbihuYW1lICsgMSksICc6Jyk7CiAgICAgICAgbHdzX2hkcl9jb3B5KHdzaSwgaGRyLCBsZW4gKyAxLCB0b2spOwogICAgICAgIGhkcltsZW5dID0gJ1wwJzsKCiAgICAgICAgLy8gcHJpbnRmKCJoZWFkZXJzICVpICUuKnMgJyVzJ1xuIiwgdG9rLCBuYW1lbGVuLCBuYW1lLCBoZHIpOwoKICAgICAgICBpZighaGVhZGVycy0+YWxsb2MpCiAgICAgICAgICBidWZmZXJfYWxsb2MoaGVhZGVycywgMTAyNCk7CgogICAgICAgIHdoaWxlKCFidWZmZXJfcHJpbnRmKGhlYWRlcnMsICIlLipzOiAlc1xuIiwgbmFtZWxlbiwgbmFtZSwgaGRyKSkgeyBidWZmZXJfZ3JvdyhoZWFkZXJzLCAxMDI0KTsgfQogICAgICAgICsrY291bnQ7CiAgICAgIH0KICAgIH0KICB9CiAgcmV0dXJuIGNvdW50Owp9Cgpzc2l6ZV90CmhlYWRlcnNfdW5zZXRiKEJ5dGVCdWZmZXIqIGIsIGNvbnN0IGNoYXIqIG5hbWUsIHNpemVfdCBuYW1lbGVuKSB7CiAgc3NpemVfdCBpOwoKICBpZigoaSA9IGhlYWRlcnNfZmluZGIoYiwgbmFtZSwgbmFtZWxlbikpID49IDApIHsKICAgIHVpbnQ4X3QqIHggPSBiLT5zdGFydCArIGk7CiAgICBzaXplX3QgYyA9IGJ5dGVfY2hycyh4LCBiLT53cml0ZSAtIHgsICJcclxuIiwgMik7CgogICAgd2hpbGUoaXNzcGFjZShiLT5zdGFydFtjXSkgJiYgYi0+c3RhcnQgKyBjIDwgYi0+d3JpdGUpICsrYzsKCiAgICBtZW1jcHkoeCwgeCArIGMsIGItPndyaXRlIC0gKGItPnN0YXJ0ICsgYykpOwogICAgYi0+d3JpdGUgLT0gYzsKCiAgICBpZihiLT53cml0ZSA8IGItPmVuZCkKICAgICAgbWVtc2V0KGItPndyaXRlLCAwLCBiLT5lbmQgLSBiLT53cml0ZSk7CiAgfQogIHJldHVybiBpOwp9Cgpzc2l6ZV90CmhlYWRlcnNfc2V0KEJ5dGVCdWZmZXIqIGIsIGNvbnN0IGNoYXIqIG5hbWUsIGNvbnN0IGNoYXIqIHZhbHVlKSB7CiAgc2l6ZV90IG5hbWVsZW4gPSBzdHJsZW4obmFtZSksIHZhbHVlbGVuID0gc3RybGVuKHZhbHVlKTsKICBzaXplX3QgYyA9IG5hbWVsZW4gKyAyICsgdmFsdWVsZW4gKyAyOwoKICBoZWFkZXJzX3Vuc2V0YihiLCBuYW1lLCBuYW1lbGVuKTsKCiAgYnVmZmVyX2dyb3coYiwgYyk7CiAgYnVmZmVyX3dyaXRlKGIsIG5hbWUsIG5hbWVsZW4pOwogIGJ1ZmZlcl93cml0ZShiLCAiOiAiLCAyKTsKICBidWZmZXJfd3JpdGUoYiwgdmFsdWUsIHZhbHVlbGVuKTsKICBidWZmZXJfd3JpdGUoYiwgIlxyXG4iLCAyKTsKCiAgcmV0dXJuIGM7Cn0KCnNzaXplX3QKaGVhZGVyc19hcHBlbmRiKEJ5dGVCdWZmZXIqIGIsIGNvbnN0IGNoYXIqIG5hbWUsIHNpemVfdCBuYW1lbGVuLCBjb25zdCBjaGFyKiB2YWx1ZSwgc2l6ZV90IHZhbHVlbGVuKSB7CiAgc3NpemVfdCBpOwoKICBpZigoaSA9IGhlYWRlcnNfZmluZGIoYiwgbmFtZSwgbmFtZWxlbikpID49IDApIHsKICAgIHVpbnQ4X3QgKnggPSBiLT5zdGFydCArIGksICp5OwogICAgc2l6ZV90IGMgPSBieXRlX2NocnMoeCwgYi0+d3JpdGUgLSB4LCAiXHJcbiIsIDIpOwoKICAgIC8vICAgIHdoaWxlKGlzc3BhY2UoYi0+c3RhcnRbY10pICYmIGItPnN0YXJ0ICsgYyA8IGItPndyaXRlKSArK2M7CiAgICB5ID0geCArIGM7CgogICAgaWYoKGItPndyaXRlIC0geSkgPiAwICYmIHZhbHVlbGVuID4gMCkgewogICAgICBtZW1tb3ZlKHkgKyB2YWx1ZWxlbiwgeSwgYi0+d3JpdGUgLSB5KTsKICAgIH0KICAgIGlmKHZhbHVlbGVuID4gMCkKICAgICAgbWVtY3B5KHksIHZhbHVlLCB2YWx1ZWxlbik7CgogICAgYi0+d3JpdGUgKz0gdmFsdWVsZW47CgogICAgaWYoYi0+d3JpdGUgPCBiLT5lbmQpCiAgICAgIG1lbXNldChiLT53cml0ZSwgMCwgYi0+ZW5kIC0gYi0+d3JpdGUpOwogIH0KCiAgcmV0dXJuIGk7Cn0KAAAAAAAAAAAkGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeRIAAAAAAAB5EgAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Build debug",
					""
				],
				[
					"CMake",
					""
				],
				[
					"Rebuild CScope",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"make",
					""
				],
				[
					"prettier",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/NinjaBuild/ninja.sublime-build",
					""
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				"Clean"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"lua",
				"Pretty Lua: Format"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-net",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/examples"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/deferred.c.orig",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/allocated.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/assure.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/asynciterator.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/buffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/callback.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/closure.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/context.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/deferred.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/form-parser.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/generator.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/headers.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/jsutils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/lws-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/opaque.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/poll.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/query.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ref.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/request.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/response.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/session.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/url.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ws.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/headers.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-request.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/READMEs/README.fault-injection.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/response.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-response.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/request.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-request.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/deferred.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-form-parser.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-generator.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-websocket.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/remove-functions.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/buffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-fetch.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/asynciterator.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/form-parser.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/url.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/session.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/generator.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/jsutils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/opaque.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/lws-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-client.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-write.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/http/server/server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/http/header.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/log.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/spawn.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server-ws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/callback.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-plugin-broker.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/check-dep.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/android/app/src/main/AndroidManifest.xml",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/client/client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/premake.lua",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/premake5.lua",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/premake4.lua",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/build.ninja",
		"/home/roman/Projects/quickjs/Makefile",
		"/home/roman/Projects/qjs-net/Makefile",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/common.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/client.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-fetch.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/fetch.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client-http.js",
		"/home/roman/Projects/mariadb-10.3-10.3.38/libmariadb/include/mysql.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build-libwebsockets.sh",
		"/home/roman/Projects/openssl-3.0.2/Makefile",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build.ninja",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/test-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ref.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugins/protocol_lws_mirror.c",
		"/home/roman/Projects/nanovg/premake4.lua",
		"/home/roman/Projects/c-parse/nanosvg/premake4.lua",
		"/home/roman/Projects/an-tronics/eagle/Simple-Bug-2SC9014.brd",
		"/home/roman/Projects/an-tronics/eagle/Simple-Bug-2SC9014.sch",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/context.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-server-http.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-custom-headers/minimal-http-server-custom-headers.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-sse/minimal-http-server-sse.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server-http.h",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-url.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-url.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-response.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-eventlib-demos/minimal-http-server-eventlib-demos.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/test.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/lws-common.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-rx/minimal-ws-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-form-parser.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-form-parser.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/socks5-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/plugins/mirror.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-server-ws.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-url.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-websocket.c"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 146.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,-*/build/*,-*/xlibwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*,-*/xlibwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*,-*/libwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*,-*/xlibwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*,-*/libwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*,-*/xlibwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*,-*/libwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*,-*/xlibwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*,-*/libwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/libwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h",
			"<project filters>,*.c,*.h,-*/build/*,-*/libwebsockets/*",
			"<project filters>,*.[ch],-*/build/*,-*/libwebsockets/*",
			"<project filters>,-*/build/*,-*/libwebsockets/*",
			"<project filters>",
			"*.[ch],lib/*.[ch]",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"message",
			"form_parser_free",
			"struct url",
			"response_clear\\(",
			"response_free",
			"response_clear",
			"defprot_callback",
			"js_module_list",
			"_escaped",
			"assert\\(",
			"\\s*// for .*",
			"RESPONSE_TYPE",
			"enum http_method",
			"ctx",
			"headers_",
			"#",
			"unsetb",
			"block_grow",
			"RESPONSE_SET",
			"RESPONSE_GET",
			"\n\nenum {\n  RESPONSE_ARRAYBUFFER = 0,\n  RESPONSE_TEXT,\n  RESPONSE_JSON,\n};\n",
			"\n\nJSModuleDef*\njs_module_at(JSContext* ctx, int i) {\n  struct list_head *el = 0, *list = js_module_list(ctx);\n\n  list_for_each(list, el) {\n    JSModuleDef* module = (void*)((char*)el - sizeof(JSAtom) * 2);\n\n    if(i-- == 0)\n      return module;\n  }\n  return 0;\n}\n",
			"WriteSli",
			"FilterCom",
			"YieldJoin",
			"YieldAll",
			"Yield",
			"Within",
			"GetRan",
			"GetRanb",
			"GetRan",
			"GetComme",
			"GetComments",
			"GetComm",
			"Comments",
			"deferred_newv",
			"byte_findb",
			"deferred_call_x",
			"deferred_call",
			"getset",
			"decorate",
			"define\\(",
			"SaveSlices",
			"puts",
			"wsi_vhost_name",
			"defines\\.get",
			"defines.get",
			"defines",
			"define",
			"defines",
			"GetSy",
			"GetSymb",
			"opaque.valid",
			"minnet_generator_reader",
			"'def",
			"defines",
			"lazyProperties",
			"lazyPropers",
			"references",
			"comments",
			"Comment",
			"isComme",
			"compact",
			"/*  ",
			"// ",
			"Match\\)",
			"Match\\(/",
			"Match",
			"Match\\(",
			"Match",
			"Match\\(",
			"MatchSymbols",
			"MatchSy",
			"Match",
			"SymbolsTo",
			"SymbolsToDef",
			"SymbolsTo",
			"all.add",
			"GetObj",
			"];\n",
			"SaveSli",
			"SaveSlices",
			"files\\[",
			"getFile\\(",
			"getFile",
			"lookup",
			"let",
			"slices",
			"slice",
			"StringLengt",
			"allFiles",
			"Proxy",
			"GetRanges",
			"functions:",
			"Transform",
			"GetRanges",
			"functions",
			"GetProxy",
			"`code`",
			"getFunctionList",
			"Within",
			",\n",
			"ArrayArgs",
			"new Map",
			"YieldAll",
			"functions:",
			"getFile",
			"YieldAll",
			"ThisAsArg",
			"YieldAll",
			"YieldThisArg",
			"YieldAll",
			"YieldMap",
			"YieldAll",
			"decorate",
			"YieldAll",
			"ArrayArgs",
			"isComm",
			"YieldAll",
			"YieldALl",
			"YieldAll",
			"MatchAll",
			"matchAll",
			"Match\\(",
			"Match",
			"getFunctionList",
			"YieldAll",
			"getFunctionList"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"",
			"HEADERS_SET",
			"HEADERS_GET",
			"ThisAsArg",
			"}\\n\\n\\1",
			"}\\n\\n",
			"",
			"ccr",
			"JSCClosureRecord",
			"js_cclosure_record",
			"js_cclosure_new(",
			"js_cclosure_f",
			"\"with-\\1\"",
			"\"with-quickjs\"",
			"\\n    ",
			" }",
			"{ ",
			"SharedLib",
			"JS_SHARED_LIBRARY",
			"$quickjs_prefix",
			" -I",
			"$libwebsockets_prefix",
			"${OPENSSL_PREFIX}",
			"OPENSSL_PREFIX",
			"",
			"cb->ctx",
			"session_callback",
			"struct socket",
			"struct form_parser",
			"QJSNET_LIB_LWS_UTILS_H",
			"\\1",
			"",
			")",
			"push_value",
			"push_block",
			"session",
			"opaque_list",
			"session",
			",",
			"\\1#\\2",
			"resp",
			"opaque",
			"}\\n\n    case ",
			"tail_bind",
			"tail_decorate",
			"RINGBUFFER_COUNT",
			"RINGBUFFER_BYTELEN",
			"RINGBUFFER_ELEMENTLEN",
			"RINGBUFFER_INSERTRANGE",
			"RINGBUFFER_LINEARINSERTRANGE",
			"linearInsertRange",
			"RINGBUFFER_ELEMENTLENGTH",
			"rb",
			"buf.",
			"FinalizerFunction",
			"DeferredFunction",
			"FunctionPointer",
			"av[",
			"session",
			"MinnetHttpMount",
			"MinnetResponse",
			"wsi",
			"ws->lwsi",
			"QJSNET_LIB_ASYNCITERATOR_H",
			"JS_FreeValueRT(rt,",
			"client->request",
			"MINNET",
			"MINNET_RINGBUFFER_H",
			"WJSNET_LIBQJSNET_LIB_RESPONSE_H",
			"WJSNET_LIBQJSNET_LIB_REQUEST_H",
			"WJSNET_LIBQJSNET_LIB_URL_H",
			"WJSNET_LIBQJSNET_LIB_WS_H",
			"WJSNET_LIB",
			"response",
			"arequest",
			"\\1//console",
			"log",
			"\\1",
			"\\1//DEBUG",
			"fp",
			"JS_FreeValueRT(rt,",
			"DEBUG(",
			"printf(",
			"printf(\"",
			" DEBUG(",
			"is_h2",
			"get_host_and_port",
			"JSCallback",
			"MINNET_GENERATOR_H",
			"MINNET_RINGBUFFER_H",
			"QUICKJS_NET_LIB_POLL_H",
			"(wsi_token_exists(\\1))",
			"h2",
			"closure_free",
			"closure_dup(cc)",
			"fetch_",
			"MinnetFetch",
			"MinnetHandler",
			"js_entry_reset",
			"js_entry_clear",
			"req->url."
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 99,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
							"function_name_status_row": 6,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									462,
									482
								],
								[
									680,
									713
								],
								[
									954,
									974
								],
								[
									1219,
									1240
								]
							],
							"symlist":
							[
								"\t(level, message) =>",
								"'/404.html': function*(req, res)",
								"*generator(req, res)",
								"  onFd: (fd, rd, wr) =>"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896338.46,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "remove-functions.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30394,
						"regions":
						{
						},
						"selection":
						[
							[
								30394,
								30394
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1340,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679895628.9,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 21984.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "lib/closure.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 464,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896205.09,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/session.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1354,
						"regions":
						{
						},
						"selection":
						[
							[
								639,
								639
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 30,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896275.44,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/deferred.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2284,
						"regions":
						{
						},
						"selection":
						[
							[
								2283,
								2283
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 118,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896290.43,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1625.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "lib/form-parser.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4950,
						"regions":
						{
						},
						"selection":
						[
							[
								2898,
								2898
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 109,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896291.11,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1421.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "lib/form-parser.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1205,
						"regions":
						{
						},
						"selection":
						[
							[
								610,
								670
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 23,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896290.8,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "lib/ringbuffer.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2392,
						"regions":
						{
						},
						"selection":
						[
							[
								1657,
								1657
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 79,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896294.0,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 860.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "lib/response.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 968,
						"regions":
						{
						},
						"selection":
						[
							[
								968,
								968
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 39,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896334.42,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "lib/utils.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4029,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896295.53,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "lib/opaque.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1624,
						"regions":
						{
						},
						"selection":
						[
							[
								302,
								310
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 19,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896014.84,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "lib/ws.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1979,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896302.14,
							"tabs_extra_last_activated_sheet_index": 10,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "lib/ws.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1522,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896300.56,
							"tabs_extra_last_activated_sheet_index": 11,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "lib/url.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3383,
						"regions":
						{
						},
						"selection":
						[
							[
								817,
								817
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 38,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896332.86,
							"tabs_extra_last_activated_sheet_index": 12,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 204.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "lib/queue.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1346,
						"regions":
						{
						},
						"selection":
						[
							[
								1023,
								1023
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 40,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896115.09,
							"tabs_extra_last_activated_sheet_index": 11,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "lib/url.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12418,
						"regions":
						{
						},
						"selection":
						[
							[
								5188,
								5198
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 246,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896026.25,
							"tabs_extra_last_activated_sheet_index": 12,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1914.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "lib/session.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3158,
						"regions":
						{
						},
						"selection":
						[
							[
								38,
								38
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896293.53,
							"tabs_extra_last_activated_sheet_index": 15,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "src/minnet-server-http.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34753,
						"regions":
						{
						},
						"selection":
						[
							[
								9317,
								9317
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 357,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679895701.74,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5586.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "lib/response.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1170,
						"regions":
						{
						},
						"selection":
						[
							[
								656,
								656
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 30,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896934.96,
							"tabs_extra_last_activated_sheet_index": 17,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "lib/request.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1142,
						"regions":
						{
						},
						"selection":
						[
							[
								755,
								755
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 29,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896935.95,
							"tabs_extra_last_activated_sheet_index": 18,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 493.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "examples/http-server.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1343,
						"regions":
						{
						},
						"selection":
						[
							[
								715,
								715
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 13,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tabs_extra_last_activated": 1679897013.55,
							"tabs_extra_last_activated_sheet_index": 19
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "tests/server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4795,
						"regions":
						{
						},
						"selection":
						[
							[
								28,
								127
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896932.8,
							"tabs_extra_last_activated_sheet_index": 20,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "lib/request.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2649,
						"regions":
						{
						},
						"selection":
						[
							[
								2264,
								2264
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 121,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896353.04,
							"tabs_extra_last_activated_sheet_index": 19,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1610.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 23,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12714,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										326,
										342
									],
									[
										567,
										583
									],
									[
										832,
										848
									],
									[
										1141,
										1157
									],
									[
										1508,
										1522
									],
									[
										1664,
										1678
									],
									[
										1913,
										1927
									],
									[
										2106,
										2120
									],
									[
										2430,
										2444
									],
									[
										2493,
										2507
									],
									[
										2923,
										2936
									],
									[
										3154,
										3167
									],
									[
										3339,
										3352
									],
									[
										3598,
										3611
									],
									[
										3814,
										3827
									],
									[
										3937,
										3950
									],
									[
										4106,
										4119
									],
									[
										4439,
										4452
									],
									[
										4501,
										4514
									],
									[
										4738,
										4751
									],
									[
										5080,
										5095
									],
									[
										5182,
										5197
									],
									[
										5385,
										5400
									],
									[
										5630,
										5645
									],
									[
										5951,
										5966
									],
									[
										6241,
										6251
									],
									[
										6314,
										6324
									],
									[
										6519,
										6529
									],
									[
										6657,
										6667
									],
									[
										6829,
										6839
									],
									[
										6986,
										6996
									],
									[
										7293,
										7303
									],
									[
										7481,
										7491
									],
									[
										7766,
										7776
									],
									[
										7899,
										7909
									],
									[
										8188,
										8198
									],
									[
										8333,
										8343
									],
									[
										8505,
										8515
									],
									[
										8691,
										8701
									],
									[
										8920,
										8930
									],
									[
										9040,
										9050
									],
									[
										9198,
										9208
									],
									[
										9308,
										9318
									],
									[
										9442,
										9452
									],
									[
										9574,
										9584
									],
									[
										9717,
										9727
									],
									[
										9744,
										9754
									],
									[
										9849,
										9859
									],
									[
										9877,
										9887
									],
									[
										9928,
										9938
									],
									[
										10065,
										10075
									],
									[
										10088,
										10098
									],
									[
										10290,
										10300
									],
									[
										10415,
										10425
									],
									[
										10596,
										10606
									],
									[
										10857,
										10867
									],
									[
										11016,
										11026
									],
									[
										11129,
										11139
									],
									[
										11492,
										11508
									],
									[
										11658,
										11674
									],
									[
										11893,
										11909
									],
									[
										11952,
										11968
									],
									[
										12236,
										12252
									],
									[
										12411,
										12427
									],
									[
										12564,
										12580
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								11500,
								11500
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"detect_indentation": false,
							"function_name_status_row": 348,
							"line_numbers": false,
							"output_tag": 6,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1679896356.22,
							"tabs_extra_last_activated_sheet_index": 20,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5984.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "src/minnet-form-parser.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11771,
						"regions":
						{
						},
						"selection":
						[
							[
								2659,
								2675
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 78,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896385.55,
							"tabs_extra_last_activated_sheet_index": 21,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 913.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "src/minnet-response.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11100,
						"regions":
						{
						},
						"selection":
						[
							[
								8996,
								8996
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 380,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679895541.64,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6028.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "src/minnet-server.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18474,
						"regions":
						{
						},
						"selection":
						[
							[
								937,
								937
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 24,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679895332.61,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 37.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "lib/opaque.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1804,
						"regions":
						{
						},
						"selection":
						[
							[
								1024,
								1024
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 47,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679895259.78,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 633.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "lib/jsutils.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25008,
						"regions":
						{
						},
						"selection":
						[
							[
								16097,
								16097
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 628,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679896117.81,
							"tabs_extra_last_activated_sheet_index": 21,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 10278.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "lib/buffer.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4002,
						"regions":
						{
						},
						"selection":
						[
							[
								3884,
								3884
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 190,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679895400.28,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2849.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "lib/headers.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6180,
						"regions":
						{
						},
						"selection":
						[
							[
								4729,
								4729
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 198,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679895223.46,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2987.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.745981599148,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 0.0
	},
	"output.Debugger Console":
	{
		"height": 108.0
	},
	"output.coffeecompile_output":
	{
		"height": 132.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "minnet.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"server.js",
				"tests/server.js"
			],
			[
				"server-ht",
				"src/minnet-server-http.c"
			],
			[
				"remove",
				"remove-functions.c"
			],
			[
				"buf",
				"lib/buffer.c"
			],
			[
				"opaque",
				"lib/opaque.c"
			],
			[
				"buffer.c",
				"lib/buffer.c"
			],
			[
				".h",
				"lib/opaque.h"
			],
			[
				"request.h",
				"lib/request.h"
			],
			[
				"ref.h",
				"lib/ref.h"
			],
			[
				"ref.j",
				"libwebsockets/READMEs/README.fault-injection.md"
			],
			[
				"context.h",
				"lib/context.h"
			],
			[
				"deferre",
				"lib/deferred.c"
			],
			[
				"request.c",
				"lib/request.c"
			],
			[
				"minnet-res",
				"src/minnet-response.c"
			],
			[
				"respose",
				"lib/response.c"
			],
			[
				"headers.c",
				"lib/headers.c"
			],
			[
				"uffer.h",
				"lib/buffer.h"
			],
			[
				"buffer.h",
				"lib/buffer.h"
			],
			[
				"remo",
				"remove-functions.c"
			],
			[
				"headers.h",
				"lib/headers.h"
			],
			[
				"headers",
				"lib/headers.c"
			],
			[
				"utils.h",
				"lib/utils.h"
			],
			[
				"defer",
				"lib/deferred.c"
			],
			[
				"minnet.c",
				"src/minnet.c"
			],
			[
				"check",
				"check-dep.js"
			],
			[
				"minnet-req",
				"src/minnet-request.c"
			],
			[
				"check-de",
				"check-dep.js"
			],
			[
				"heades",
				"lib/headers.c"
			],
			[
				"request",
				"lib/request.c"
			],
			[
				"jsutils.c",
				"lib/jsutils.c"
			],
			[
				"-requet",
				"src/minnet-request.c"
			],
			[
				"ringbuffer",
				"lib/ringbuffer.c"
			],
			[
				"check-dep",
				"check-dep.js"
			],
			[
				"plugin-br",
				"src/minnet-plugin-broker.c"
			],
			[
				"server-ws",
				"src/minnet-server-ws.c"
			],
			[
				"callback.c",
				"lib/callback.c"
			],
			[
				"callback",
				"lib/callback.h"
			],
			[
				"test-opx",
				"libwebsockets/test-apps/android/app/src/main/AndroidManifest.xml"
			],
			[
				"wscli",
				"wscli.js"
			],
			[
				"url.h",
				"lib/url.h"
			],
			[
				"minnet-cli",
				"src/minnet-client.c"
			],
			[
				"wscli.js",
				"wscli.js"
			],
			[
				"client.c",
				"src/minnet-client.c"
			],
			[
				"minnet-clie",
				"src/minnet-client.c"
			],
			[
				"test-rpc",
				"test-rpc.js"
			],
			[
				"premake4",
				"premake4.lua"
			],
			[
				"premake5",
				"premake5.lua"
			],
			[
				"premake.l",
				"premake.lua"
			],
			[
				"minnet.h",
				"src/minnet.h"
			],
			[
				"header",
				"lib/headers.c"
			],
			[
				"session.h",
				"lib/session.h"
			],
			[
				"generator.h",
				"lib/generator.h"
			],
			[
				"generator.c",
				"lib/generator.c"
			],
			[
				"jsut",
				"lib/jsutils.h"
			],
			[
				"minnet-server-ht",
				"src/minnet-server-http.c"
			],
			[
				"test-client",
				"tests/test-client-http.js"
			],
			[
				"minnet-server",
				"src/minnet-server.c"
			],
			[
				"log.js",
				"tests/log.js"
			],
			[
				"build-lib",
				"build-libwebsockets.sh"
			],
			[
				"minnet-client-htt",
				"src/minnet-client-http.c"
			],
			[
				"premake",
				"premake5.lua"
			],
			[
				"server-htt",
				"src/minnet-server-http.c"
			],
			[
				"ref.c",
				"lib/ref.c"
			],
			[
				"utils.c",
				"lib/utils.c"
			],
			[
				"lws-utils",
				"lib/lws-utils.c"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"lws_mirr",
				"libwebsockets/plugins/protocol_lws_mirror.c"
			],
			[
				"server-http.c ",
				"src/minnet-server-http.c"
			],
			[
				"lws-call",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"lws-write",
				"libwebsockets/include/libwebsockets/lws-write.h"
			],
			[
				"context.c",
				"lib/context.c"
			],
			[
				"minnet-webso",
				"src/minnet-websocket.c"
			],
			[
				"ws.h",
				"lib/ws.h"
			],
			[
				"lws-util",
				"lib/lws-utils.h"
			],
			[
				"mirror",
				"libwebsockets/plugins/protocol_lws_mirror.c"
			],
			[
				"minnet-url",
				"src/minnet-url.c"
			],
			[
				"conso",
				"libwebsockets/lib/core-net/socks5-client.c"
			],
			[
				"lws_mi",
				"libwebsockets/plugins/protocol_lws_mirror.c"
			],
			[
				"_mirror",
				"libwebsockets/plugins/protocol_lws_mirror.c"
			],
			[
				"lws_raw_",
				"libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c"
			],
			[
				"url.c",
				"lib/url.c"
			],
			[
				"lws-ut",
				"lib/lws-utils.h"
			],
			[
				"server-ws.c",
				"minnet-server-ws.c"
			],
			[
				"minnet-server-ws",
				"minnet-server-ws.c"
			],
			[
				"minnet.js",
				"js/minnet.js"
			],
			[
				"minnet-server-htt",
				"minnet-server-http.c"
			],
			[
				"CMakeLists",
				"CMakeLists.txt"
			],
			[
				"queue.h",
				"lib/queue.h"
			],
			[
				"closure.h",
				"lib/closure.h"
			],
			[
				"test-ge",
				"tests/test-generator.js"
			],
			[
				"minnet-ge",
				"minnet-generator.c"
			],
			[
				"hash.c",
				"minnet-hash.c"
			],
			[
				"minnet-has",
				"minnet-hash.c"
			],
			[
				"server-http",
				"minnet-server-http.c"
			],
			[
				"-ws",
				"minnet-server-ws.c"
			],
			[
				"minnet.cv",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-eventlib/mount-origin/strict-csp.svg"
			],
			[
				"-ws.c",
				"minnet-server-ws.c"
			],
			[
				"opaque.h",
				"lib/opaque.h"
			],
			[
				"session",
				"lib/session.h"
			],
			[
				"minnet-web",
				"minnet-websocket.c"
			],
			[
				"client.js",
				"tests/client.js"
			],
			[
				"test-clie",
				"tests/test-client-http.js"
			],
			[
				"test-client-ht",
				"tests/test-client-http.js"
			],
			[
				"test-client-htt",
				"tests/test-client-http.js"
			],
			[
				"-gene",
				"tests/test-generator.js"
			],
			[
				"queue.c",
				"lib/queue.c"
			],
			[
				"respo",
				"lib/response.c"
			],
			[
				"client-htt",
				"minnet-client-http.c"
			],
			[
				"minnet-we",
				"minnet-websocket.c"
			],
			[
				"lws-htt",
				"libwebsockets/include/libwebsockets/lws-http.h"
			],
			[
				"server-ring",
				"libwebsockets/minimal-examples/ws-server/minimal-ws-server-ring/protocol_lws_minimal.c"
			],
			[
				"sse-",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-sse-ring/minimal-http-server-sse-ring.c"
			],
			[
				"jsuti",
				"lib/jsutils.c"
			],
			[
				"lws-ring.c",
				"libwebsockets/lib/misc/lws-ring.c"
			],
			[
				"lws-ring",
				"libwebsockets/include/libwebsockets/lws-ring.h"
			],
			[
				"sse-ring",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-sse-ring/minimal-http-server-sse-ring.c"
			],
			[
				"ring",
				"lib/ringbuffer.c"
			],
			[
				"lws-rin",
				"libwebsockets/include/libwebsockets/lws-ring.h"
			],
			[
				"test-cli",
				"tests/test-client.js"
			],
			[
				"rpc.js",
				"rpc.js"
			],
			[
				"lws-misc",
				"libwebsockets/include/libwebsockets/lws-misc.h"
			],
			[
				"openssl-tls",
				"libwebsockets/lib/tls/openssl/openssl-tls.c"
			],
			[
				"rpc",
				"rpc.js"
			],
			[
				"callba",
				"lib/callback.h"
			],
			[
				"jsutils.h",
				"lib/jsutils.h"
			],
			[
				"minnet-server-",
				"minnet-server-http.c"
			],
			[
				"server-h",
				"minnet-server-http.c"
			],
			[
				"-vhost",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 592.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 308.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
