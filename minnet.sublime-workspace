{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"FDC",
				"FDCallbackChannel"
			],
			[
				"minnet_fd",
				"minnet_fd_callback_free"
			],
			[
				"minnet_Fd_",
				"minnet_fd_callback_closure"
			],
			[
				"FD",
				"FDCallbackChannels"
			],
			[
				"JS_ToCStr",
				"JS_ToCStringLen"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"add_",
				"add_dependencies"
			],
			[
				"ch",
				"chunks_written"
			],
			[
				"defineP",
				"defineProperties(...)"
			],
			[
				"CMAKE_CURR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"gener",
				"generate_module_header"
			],
			[
				"RINGBUFFER_C",
				"RINGBUFFER_CONSUMERANGE"
			],
			[
				"RINGBUFFER_CONSU",
				"RINGBUFFER_CONSUMERANGE"
			],
			[
				"JS_NewArra",
				"JS_NewArrayBufferCopy"
			],
			[
				"RINGBU",
				"RINGBUFFER_INSERT"
			],
			[
				"hea",
				"headers_sent"
			],
			[
				"JS_ToCS",
				"JS_ToCStringLen"
			],
			[
				"PR",
				"PRIi64"
			],
			[
				"JS_Set",
				"JS_SetPropertyStr"
			],
			[
				"db",
				"dbuf_init2"
			],
			[
				"JS_Get",
				"JS_GetProperty"
			],
			[
				"Ret",
				"ReturnValuePathFunction"
			],
			[
				"cFunc",
				"cFuncListObjects"
			],
			[
				"isC",
				"isCFuncCall"
			],
			[
				"En",
				"EntityNames"
			],
			[
				"parseFrom",
				"parseFromString"
			],
			[
				"pseu",
				"pseudoClassArg"
			],
			[
				"pseudoC",
				"pseudoClassName"
			],
			[
				"Key",
				"KeyboardEvent"
			],
			[
				"getOp",
				"getOptionEntries"
			],
			[
				"setProp",
				"setPropertyValue"
			],
			[
				"parse",
				"parseSelectors"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyStr"
			],
			[
				"jsm_buil",
				"jsm_builtin_init"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"JS_New",
				"JS_NewObject"
			],
			[
				"ide",
				"importIdentifiers"
			],
			[
				"iden",
				"importIdentifiers"
			],
			[
				"import",
				"importIdentifiers"
			],
			[
				"ident",
				"identifierSets"
			],
			[
				"path_is",
				"path_is_absolute"
			],
			[
				"js_is_",
				"js_is_null_or_undefined"
			],
			[
				"path_skip_se",
				"path_skip_separator_s"
			],
			[
				"WRITABLE_METHO",
				"WRITABLE_METHOD_CLOSE"
			],
			[
				"list_fo",
				"list_for_each_prev"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"underly",
				"underlying_source"
			],
			[
				"Tok",
				"TokenSequence"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"getAt",
				"getAttributeNames"
			],
			[
				"self",
				"self_closing_tags"
			],
			[
				"self_",
				"self_closing_tags"
			],
			[
				"JS_PROP",
				"JS_PROP_ENUMERABLE"
			],
			[
				"depe",
				"dependencyMap"
			],
			[
				"de",
				"dependencyMap"
			],
			[
				"dep",
				"dependencyMap"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"spec",
				"specifiers"
			],
			[
				"Num",
				"NumericRange"
			],
			[
				"token_r",
				"token_release_rt"
			],
			[
				"JS_Thr",
				"JS_ThrowTypeError"
			],
			[
				"js_",
				"js_location_data"
			],
			[
				"debug_js_mall",
				"debug_js_malloc_usable_size"
			],
			[
				"repl",
				"replaceRange"
			],
			[
				"js_malloc_u",
				"js_malloc_usable_size_rt"
			],
			[
				"malloc",
				"malloc_usable_size"
			],
			[
				"all",
				"alloc_block_list"
			],
			[
				"alloc",
				"alloc_block_list"
			],
			[
				"path_skip",
				"path_skip_component"
			],
			[
				"jsm_mo",
				"jsm_module_loader"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"getOwn",
				"getOwnPropertySymbols(...)"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			],
			[
				"REP",
				"REPEATER_DONE"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"JS_NEwCFun",
				"JS_NewCFunctionData"
			],
			[
				"js_function",
				"js_function_bind_this"
			],
			[
				"js_repeater_iter",
				"js_repeater_iteration"
			],
			[
				"REPEA",
				"REPEATER_REJECTED"
			],
			[
				"exe",
				"execution"
			],
			[
				"REPEAT",
				"REPEATER_STOPPED"
			],
			[
				"JS_THro",
				"JS_ThrowOutOfMemory"
			],
			[
				"repeater",
				"repeater_finalizer"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "—Ⓒ– proxy_msg { … } ; — type\n  Ⓣ  proxy_msg_t ; — typedef\n—Ⓒ– proxy_conn { … } ; — type\n  Ⓣ  proxy_conn_t ; — typedef",
			"settings":
			{
				"buffer_size": 117,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					1363,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-fetch.js",
						"symkeys":
						[
							[
								174,
								204
							],
							[
								466,
								491
							],
							[
								515,
								535
							],
							[
								1296,
								1307
							],
							[
								1469,
								1475
							],
							[
								1608,
								1615
							],
							[
								1941,
								1949
							],
							[
								1998,
								2020
							],
							[
								2642,
								2646
							],
							[
								2726,
								2731
							],
							[
								2790,
								2806
							],
							[
								2995,
								3017
							],
							[
								3235,
								3251
							],
							[
								3286,
								3291
							],
							[
								3342,
								3348
							]
						],
						"symlist":
						[
							"function WriteFile(name, data)",
							"function FetchNext(array)",
							"(resolve, reject) =>",
							"response =>",
							"buf =>",
							"text =>",
							"error =>",
							"function main(...args)",
							"n =>",
							"() =>",
							" (level, msg) =>",
							" ({ Console }) =>",
							" function run()",
							"() =>",
							"err =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADAAAAAV3JpdGVGaWxlKG5hbWUsIGRhdGEpCkZldGNoTmV4dChhcnJheSkKKHJlc29sdmUsIHJlamVjdCkgPT4KICByZXNwb25zZSA9PgogIGJ1ZiA9PgogIHRleHQgPT4KICBlcnJvciA9PgogIG1haW4oLi4uYXJncykKICBuID0+CigpID0+CiAgKGxldmVsLCBtc2cpID0+CiAgKHsgQ29uc29sZSB9KSA9PgogIHJ1bigpCigpID0+CiAgZXJyID0+AAAAAAAAAADAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1364,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAADAAAAAV3JpdGVGaWxlKG5hbWUsIGRhdGEpCkZldGNoTmV4dChhcnJheSkKKHJlc29sdmUsIHJlamVjdCkgPT4KICByZXNwb25zZSA9PgogIGJ1ZiA9PgogIHRleHQgPT4KICBlcnJvciA9PgogIG1haW4oLi4uYXJncykKICBuID0+CigpID0+CiAgKGxldmVsLCBtc2cpID0+CiAgKHsgQ29uc29sZSB9KSA9PgogIHJ1bigpCigpID0+CiAgZXJyID0+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1365,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client-http.c",
						"symkeys":
						[
							[
								337,
								360
							],
							[
								367,
								387
							]
						],
						"symlist":
						[
							" Ⓣ  HTTPAsyncResolveClosure ; — typedef",
							"—Ⓕ– http_client_callback ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAVgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1366,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABkAAAAICDik4kgIEhUVFBBc3luY1Jlc29sdmVDbG9zdXJlIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIGh0dHBfY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1367,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
						"symkeys":
						[
							[
								385,
								412
							],
							[
								570,
								616
							],
							[
								827,
								857
							],
							[
								913,
								935
							],
							[
								1241,
								1251
							],
							[
								1518,
								1532
							],
							[
								2576,
								2589
							],
							[
								2625,
								2639
							],
							[
								2739,
								2755
							],
							[
								3039,
								3051
							],
							[
								3239,
								3282
							],
							[
								3554,
								3574
							],
							[
								4896,
								4929
							],
							[
								5194,
								5209
							],
							[
								5409,
								5426
							],
							[
								5518,
								5535
							],
							[
								6538,
								6545
							],
							[
								6609,
								6616
							],
							[
								6693,
								6713
							],
							[
								7202,
								7214
							],
							[
								7301,
								7313
							],
							[
								7552,
								7568
							],
							[
								7715,
								7733
							],
							[
								7872,
								7906
							],
							[
								8102,
								8122
							],
							[
								8289,
								8308
							],
							[
								8531,
								8548
							],
							[
								8588,
								8592
							],
							[
								8850,
								8862
							],
							[
								8942,
								8954
							],
							[
								9193,
								9213
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							"ctor = () =>",
							" function createWS(url, callbacks, listen)",
							" (level, ...args) =>",
							"'/404.html': function* (req, res)",
							"proxy(req, res)",
							"*config(req, res)",
							"*files(req, resp)",
							"name =>",
							"file =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"onConnect(ws, req)",
							"onClose(ws, status, reason, error)",
							"onHttp(ws, req, rsp)",
							"onMessage(ws, data)",
							"get connections()",
							"c =>",
							"get server()",
							"get client()",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAUQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1368,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABRAgAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpCiAgbWFpbiguLi5hcmdzKQogIChhLCB2KSA9PgogICh2LCBwdiwgbykgPT4KICAuaGVscCA9ICgpID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgY3RvciA9ICgpID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKICAobGV2ZWwsIC4uLmFyZ3MpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCiAgcHJveHkocmVxLCByZXMpCipjb25maWcocmVxLCByZXMpCipmaWxlcyhyZXEsIHJlc3ApCiAgbmFtZSA9PgogIGZpbGUgPT4KKGFjYywgW2ZpbGUsIHN0XSkgPT4KICBzdHJpbmcoYSwgYikKICBudW1iZXIoYSwgYikKKFtuYW1lLCBvYmpdKSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvbkh0dHAod3MsIHJlcSwgcnNwKQogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBnZXQgY29ubmVjdGlvbnMoKQogIGMgPT4KICBnZXQgc2VydmVyKCkKICBnZXQgY2xpZW50KCkKICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1369,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1370,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1371,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1372,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1373,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1374,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
						"symkeys":
						[
							[
								385,
								412
							],
							[
								570,
								616
							],
							[
								827,
								857
							],
							[
								913,
								935
							],
							[
								1241,
								1251
							],
							[
								1518,
								1532
							],
							[
								2576,
								2589
							],
							[
								2625,
								2639
							],
							[
								2739,
								2755
							],
							[
								3039,
								3051
							],
							[
								3239,
								3282
							],
							[
								3554,
								3574
							],
							[
								4896,
								4929
							],
							[
								5194,
								5209
							],
							[
								5409,
								5426
							],
							[
								5518,
								5535
							],
							[
								6538,
								6545
							],
							[
								6609,
								6616
							],
							[
								6693,
								6713
							],
							[
								7202,
								7214
							],
							[
								7301,
								7313
							],
							[
								7552,
								7568
							],
							[
								7715,
								7733
							],
							[
								7872,
								7906
							],
							[
								8102,
								8122
							],
							[
								8289,
								8308
							],
							[
								8531,
								8548
							],
							[
								8588,
								8592
							],
							[
								8850,
								8862
							],
							[
								8942,
								8954
							],
							[
								9193,
								9213
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							"ctor = () =>",
							" function createWS(url, callbacks, listen)",
							" (level, ...args) =>",
							"'/404.html': function* (req, res)",
							"proxy(req, res)",
							"*config(req, res)",
							"*files(req, resp)",
							"name =>",
							"file =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"onConnect(ws, req)",
							"onClose(ws, status, reason, error)",
							"onHttp(ws, req, rsp)",
							"onMessage(ws, data)",
							"get connections()",
							"c =>",
							"get server()",
							"get client()",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAUQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1375,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
						"symkeys":
						[
							[
								385,
								412
							],
							[
								570,
								616
							],
							[
								827,
								857
							],
							[
								913,
								935
							],
							[
								1241,
								1251
							],
							[
								1518,
								1532
							],
							[
								2576,
								2589
							],
							[
								2625,
								2639
							],
							[
								2739,
								2755
							],
							[
								3039,
								3051
							],
							[
								3239,
								3282
							],
							[
								3554,
								3574
							],
							[
								3600,
								3605
							],
							[
								4912,
								4945
							],
							[
								5210,
								5225
							],
							[
								5425,
								5442
							],
							[
								5534,
								5551
							],
							[
								6554,
								6561
							],
							[
								6625,
								6632
							],
							[
								6709,
								6729
							],
							[
								7218,
								7230
							],
							[
								7317,
								7329
							],
							[
								7568,
								7584
							],
							[
								7731,
								7749
							],
							[
								7888,
								7922
							],
							[
								8118,
								8138
							],
							[
								8305,
								8324
							],
							[
								8547,
								8564
							],
							[
								8604,
								8608
							],
							[
								8866,
								8878
							],
							[
								8958,
								8970
							],
							[
								9209,
								9229
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							"ctor = () =>",
							" function createWS(url, callbacks, listen)",
							" (level, message) =>",
							"() =>",
							"'/404.html': function* (req, res)",
							"proxy(req, res)",
							"*config(req, res)",
							"*files(req, resp)",
							"name =>",
							"file =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"onConnect(ws, req)",
							"onClose(ws, status, reason, error)",
							"onHttp(ws, req, rsp)",
							"onMessage(ws, data)",
							"get connections()",
							"c =>",
							"get server()",
							"get client()",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABRAgAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpCiAgbWFpbiguLi5hcmdzKQogIChhLCB2KSA9PgogICh2LCBwdiwgbykgPT4KICAuaGVscCA9ICgpID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgY3RvciA9ICgpID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKICAobGV2ZWwsIC4uLmFyZ3MpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCiAgcHJveHkocmVxLCByZXMpCipjb25maWcocmVxLCByZXMpCipmaWxlcyhyZXEsIHJlc3ApCiAgbmFtZSA9PgogIGZpbGUgPT4KKGFjYywgW2ZpbGUsIHN0XSkgPT4KICBzdHJpbmcoYSwgYikKICBudW1iZXIoYSwgYikKKFtuYW1lLCBvYmpdKSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvbkh0dHAod3MsIHJlcSwgcnNwKQogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBnZXQgY29ubmVjdGlvbnMoKQogIGMgPT4KICBnZXQgc2VydmVyKCkKICBnZXQgY2xpZW50KCkKICBxdWl0KHdoeSkAAAAAAAAAAFcCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABXAgAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpCiAgbWFpbiguLi5hcmdzKQogIChhLCB2KSA9PgogICh2LCBwdiwgbykgPT4KICAuaGVscCA9ICgpID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgY3RvciA9ICgpID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKICAobGV2ZWwsIG1lc3NhZ2UpID0+CigpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCiAgcHJveHkocmVxLCByZXMpCipjb25maWcocmVxLCByZXMpCipmaWxlcyhyZXEsIHJlc3ApCiAgbmFtZSA9PgogIGZpbGUgPT4KKGFjYywgW2ZpbGUsIHN0XSkgPT4KICBzdHJpbmcoYSwgYikKICBudW1iZXIoYSwgYikKKFtuYW1lLCBvYmpdKSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvbkh0dHAod3MsIHJlcSwgcnNwKQogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBnZXQgY29ubmVjdGlvbnMoKQogIGMgPT4KICBnZXQgc2VydmVyKCkKICBnZXQgY2xpZW50KCkKICBxdWl0KHdoeSkAAAAAAAAAAFcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1376,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABXAgAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpCiAgbWFpbiguLi5hcmdzKQogIChhLCB2KSA9PgogICh2LCBwdiwgbykgPT4KICAuaGVscCA9ICgpID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgY3RvciA9ICgpID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKICAobGV2ZWwsIG1lc3NhZ2UpID0+CigpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCiAgcHJveHkocmVxLCByZXMpCipjb25maWcocmVxLCByZXMpCipmaWxlcyhyZXEsIHJlc3ApCiAgbmFtZSA9PgogIGZpbGUgPT4KKGFjYywgW2ZpbGUsIHN0XSkgPT4KICBzdHJpbmcoYSwgYikKICBudW1iZXIoYSwgYikKKFtuYW1lLCBvYmpdKSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvbkh0dHAod3MsIHJlcSwgcnNwKQogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBnZXQgY29ubmVjdGlvbnMoKQogIGMgPT4KICBnZXQgc2VydmVyKCkKICBnZXQgY2xpZW50KCkKICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1377,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/fetch.js",
						"symkeys":
						[
							[
								116,
								136
							],
							[
								197,
								218
							],
							[
								288,
								308
							],
							[
								467,
								493
							],
							[
								1088,
								1135
							]
						],
						"symlist":
						[
							"curl: (url, file) =>",
							"fetch: (url, file) =>",
							"wget: (url, file) =>",
							" function Fetch(url, file)",
							"TestFetch = (host, port) => (location, file) =>"
						]
					},
					"AQAAAAAAAAAAAAAAhgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1378,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACGAAAAICBjdXJsOiAodXJsLCBmaWxlKSA9PgogIGZldGNoOiAodXJsLCBmaWxlKSA9PgogIHdnZXQ6ICh1cmwsIGZpbGUpID0+CkZldGNoKHVybCwgZmlsZSkKVGVzdEZldGNoID0gKGhvc3QsIHBvcnQpID0+IChsb2NhdGlvbiwgZmlsZSkgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1379,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-fetch.js",
						"symkeys":
						[
							[
								174,
								204
							],
							[
								466,
								491
							],
							[
								515,
								535
							],
							[
								1296,
								1307
							],
							[
								1469,
								1475
							],
							[
								1608,
								1615
							],
							[
								1941,
								1949
							],
							[
								1998,
								2020
							],
							[
								2642,
								2646
							],
							[
								2726,
								2731
							],
							[
								2790,
								2806
							],
							[
								2995,
								3017
							],
							[
								3235,
								3251
							],
							[
								3286,
								3291
							],
							[
								3342,
								3348
							]
						],
						"symlist":
						[
							"function WriteFile(name, data)",
							"function FetchNext(array)",
							"(resolve, reject) =>",
							"response =>",
							"buf =>",
							"text =>",
							"error =>",
							"function main(...args)",
							"n =>",
							"() =>",
							" (level, msg) =>",
							" ({ Console }) =>",
							" function run()",
							"() =>",
							"err =>"
						]
					},
					"AQAAAAAAAAAAAAAAwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1380,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-fetch.js",
						"symkeys":
						[
							[
								174,
								204
							],
							[
								466,
								491
							],
							[
								515,
								535
							],
							[
								1296,
								1307
							],
							[
								1469,
								1475
							],
							[
								1608,
								1615
							],
							[
								1941,
								1949
							],
							[
								1998,
								2020
							],
							[
								2642,
								2646
							],
							[
								2726,
								2731
							],
							[
								2790,
								2806
							],
							[
								2995,
								3017
							],
							[
								3235,
								3251
							],
							[
								3286,
								3291
							],
							[
								3342,
								3348
							]
						],
						"symlist":
						[
							"function WriteFile(name, data)",
							"function FetchNext(array)",
							"(resolve, reject) =>",
							"response =>",
							"buf =>",
							"text =>",
							"error =>",
							"function main(...args)",
							"n =>",
							"() =>",
							" (level, msg) =>",
							" ({ Console }) =>",
							" function run()",
							"() =>",
							"err =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAV3JpdGVGaWxlKG5hbWUsIGRhdGEpCkZldGNoTmV4dChhcnJheSkKKHJlc29sdmUsIHJlamVjdCkgPT4KICByZXNwb25zZSA9PgogIGJ1ZiA9PgogIHRleHQgPT4KICBlcnJvciA9PgogIG1haW4oLi4uYXJncykKICBuID0+CigpID0+CiAgKGxldmVsLCBtc2cpID0+CiAgKHsgQ29uc29sZSB9KSA9PgogIHJ1bigpCigpID0+CiAgZXJyID0+AAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAFdyaXRlRmlsZShuYW1lLCBkYXRhKQpGZXRjaE5leHQoYXJyYXkpCihyZXNvbHZlLCByZWplY3QpID0+CiAgcmVzcG9uc2UgPT4KICBidWYgPT4KICB0ZXh0ID0+CiAgZXJyb3IgPT4KICBtYWluKC4uLmFyZ3MpCiAgbiA9PgooKSA9PgogIChsZXZlbCwgbXNnKSA9PgogICh7IENvbnNvbGUgfSkgPT4KICBydW4oKQooKSA9PgogIGVyciA9PgAAAAAAAAAAwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1381,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-fetch.c",
						"symkeys":
						[
							[
								8,
								19
							],
							[
								303,
								316
							],
							[
								2003,
								2015
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							"—Ⓕ– fetch_handler ( ) { … } — function",
							"—Ⓕ– minnet_fetch ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADAAAAAV3JpdGVGaWxlKG5hbWUsIGRhdGEpCkZldGNoTmV4dChhcnJheSkKKHJlc29sdmUsIHJlamVjdCkgPT4KICByZXNwb25zZSA9PgogIGJ1ZiA9PgogIHRleHQgPT4KICBlcnJvciA9PgogIG1haW4oLi4uYXJncykKICBuID0+CigpID0+CiAgKGxldmVsLCBtc2cpID0+CiAgKHsgQ29uc29sZSB9KSA9PgogIHJ1bigpCigpID0+CiAgZXJyID0+AAAAAAAAAABuAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1382,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-fetch.h",
						"symkeys":
						[
							[
								31,
								45
							],
							[
								77,
								89
							]
						],
						"symlist":
						[
							"MINNET_FETCH_H",
							"minnet_fetch"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACIAAAAICDik4IgIF9HTlVfU09VUkNFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBmZXRjaF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2ZldGNoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAHQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1383,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-fetch.c",
						"symkeys":
						[
							[
								8,
								19
							],
							[
								303,
								316
							],
							[
								2003,
								2015
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							"—Ⓕ– fetch_handler ( ) { … } — function",
							"—Ⓕ– minnet_fetch ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAdAAAATUlOTkVUX0ZFVENIX0gKICBtaW5uZXRfZmV0Y2gAAAAAAAAAAG4AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1384,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-fetch.c",
						"symkeys":
						[
							[
								8,
								19
							],
							[
								303,
								316
							],
							[
								2003,
								2015
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							"—Ⓕ– fetch_handler ( ) { … } — function",
							"—Ⓕ– minnet_fetch ( ) { … } — function"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACIAAAAICDik4IgIF9HTlVfU09VUkNFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBmZXRjaF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2ZldGNoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAAAAgIOKTgiAgX0dOVV9TT1VSQ0Ug4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIGZldGNoX2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZmV0Y2ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiAAAACAg4pOCICBfR05VX1NPVVJDRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgZmV0Y2hfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9mZXRjaCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAG4AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1385,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-fetch.c",
						"symkeys":
						[
							[
								8,
								19
							],
							[
								303,
								316
							],
							[
								2003,
								2015
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							"—Ⓕ– fetch_handler ( ) { … } — function",
							"—Ⓕ– minnet_fetch ( ) { … } — function"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACIAAAAICDik4IgIF9HTlVfU09VUkNFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBmZXRjaF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2ZldGNoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAAAAgIOKTgiAgX0dOVV9TT1VSQ0Ug4oCmIOKAlCBtYWNybyBvYmplY3QK4oCU4pK74oCTIGZldGNoX2hhbmRsZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfZmV0Y2ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAABuAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1386,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACIAAAAICDik4IgIF9HTlVfU09VUkNFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBmZXRjaF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2ZldGNoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1387,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
						"symkeys":
						[
							[
								385,
								412
							],
							[
								570,
								616
							],
							[
								827,
								857
							],
							[
								913,
								935
							],
							[
								1241,
								1251
							],
							[
								1518,
								1532
							],
							[
								2576,
								2589
							],
							[
								2625,
								2639
							],
							[
								2739,
								2755
							],
							[
								3039,
								3051
							],
							[
								3239,
								3282
							],
							[
								3554,
								3574
							],
							[
								3600,
								3605
							],
							[
								4912,
								4945
							],
							[
								5210,
								5225
							],
							[
								5425,
								5442
							],
							[
								5534,
								5551
							],
							[
								6554,
								6561
							],
							[
								6625,
								6632
							],
							[
								6709,
								6729
							],
							[
								7218,
								7230
							],
							[
								7317,
								7329
							],
							[
								7568,
								7584
							],
							[
								7731,
								7749
							],
							[
								7888,
								7922
							],
							[
								8118,
								8138
							],
							[
								8305,
								8324
							],
							[
								8547,
								8564
							],
							[
								8604,
								8608
							],
							[
								8866,
								8878
							],
							[
								8958,
								8970
							],
							[
								9209,
								9229
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							"ctor = () =>",
							" function createWS(url, callbacks, listen)",
							" (level, message) =>",
							"() =>",
							"'/404.html': function* (req, res)",
							"proxy(req, res)",
							"*config(req, res)",
							"*files(req, resp)",
							"name =>",
							"file =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"onConnect(ws, req)",
							"onClose(ws, status, reason, error)",
							"onHttp(ws, req, rsp)",
							"onMessage(ws, data)",
							"get connections()",
							"c =>",
							"get server()",
							"get client()",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAVwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1388,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABXAgAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpCiAgbWFpbiguLi5hcmdzKQogIChhLCB2KSA9PgogICh2LCBwdiwgbykgPT4KICAuaGVscCA9ICgpID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgY3RvciA9ICgpID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKICAobGV2ZWwsIG1lc3NhZ2UpID0+CigpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCiAgcHJveHkocmVxLCByZXMpCipjb25maWcocmVxLCByZXMpCipmaWxlcyhyZXEsIHJlc3ApCiAgbmFtZSA9PgogIGZpbGUgPT4KKGFjYywgW2ZpbGUsIHN0XSkgPT4KICBzdHJpbmcoYSwgYikKICBudW1iZXIoYSwgYikKKFtuYW1lLCBvYmpdKSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvbkh0dHAod3MsIHJlcSwgcnNwKQogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBnZXQgY29ubmVjdGlvbnMoKQogIGMgPT4KICBnZXQgc2VydmVyKCkKICBnZXQgY2xpZW50KCkKICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1389,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1390,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client-http.c",
						"symkeys":
						[
							[
								337,
								360
							],
							[
								367,
								387
							]
						],
						"symlist":
						[
							" Ⓣ  HTTPAsyncResolveClosure ; — typedef",
							"—Ⓕ– http_client_callback ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAVgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1391,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABkAAAAICDik4kgIEhUVFBBc3luY1Jlc29sdmVDbG9zdXJlIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIGh0dHBfY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1392,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1393,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client-http.c",
						"symkeys":
						[
							[
								337,
								360
							],
							[
								367,
								387
							]
						],
						"symlist":
						[
							" Ⓣ  HTTPAsyncResolveClosure ; — typedef",
							"—Ⓕ– http_client_callback ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAVgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1394,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAABkAAAAICDik4kgIEhUVFBBc3luY1Jlc29sdmVDbG9zdXJlIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIGh0dHBfY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1395,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1396,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/generator.c",
						"symkeys":
						[
							[
								59,
								72
							],
							[
								143,
								156
							],
							[
								223,
								237
							],
							[
								438,
								455
							],
							[
								577,
								591
							],
							[
								838,
								851
							],
							[
								1143,
								1160
							],
							[
								1448,
								1464
							],
							[
								2211,
								2225
							],
							[
								2700,
								2715
							],
							[
								3550,
								3564
							],
							[
								4027,
								4042
							],
							[
								4764,
								4779
							],
							[
								5503,
								5523
							],
							[
								6121,
								6134
							],
							[
								6524,
								6537
							]
						],
						"symlist":
						[
							" ⒡  enqueue_block ( ) ; — function declaration",
							" ⒡  enqueue_value ( ) ; — function declaration",
							"—Ⓕ– generator_zero ( ) { … } — function",
							"—Ⓕ– generator_destroy ( ) { … } — function",
							"—Ⓕ– generator_free ( ) { … } — function",
							"—Ⓕ– generator_new ( ) { … } — function",
							"—Ⓕ– generator_dequeue ( ) { … } — function",
							"—Ⓕ– generator_update ( ) { … } — function",
							"—Ⓕ– generator_next ( ) { … } — function",
							"—Ⓕ– generator_write ( ) { … } — function",
							"—Ⓕ– generator_push ( ) { … } — function",
							"—Ⓕ– generator_yield ( ) { … } — function",
							"—Ⓕ– generator_close ( ) { … } — function",
							"—Ⓕ– generator_continuous ( ) { … } — function",
							"—Ⓕ– enqueue_block ( ) { … } — function",
							"—Ⓕ– enqueue_value ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAnQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1399,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAxAwAAICDikqEgIGVucXVldWVfYmxvY2sgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBlbnF1ZXVlX3ZhbHVlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfZGVzdHJveSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9kZXF1ZXVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3VwZGF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3B1c2ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfeWllbGQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfY2xvc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfY29udGludW91cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGVucXVldWVfYmxvY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBlbnF1ZXVlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPAQAAAAAAAI8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					1400,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-fetch.c",
						"symkeys":
						[
							[
								8,
								19
							],
							[
								303,
								316
							],
							[
								2003,
								2015
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							"—Ⓕ– fetch_handler ( ) { … } — function",
							"—Ⓕ– minnet_fetch ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAbgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1401,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/generator.c",
						"symkeys":
						[
							[
								59,
								72
							],
							[
								143,
								156
							],
							[
								223,
								237
							],
							[
								438,
								455
							],
							[
								577,
								591
							],
							[
								838,
								851
							],
							[
								1143,
								1160
							],
							[
								1448,
								1464
							],
							[
								2211,
								2225
							],
							[
								2700,
								2715
							],
							[
								3550,
								3564
							],
							[
								4027,
								4042
							],
							[
								4764,
								4779
							],
							[
								5503,
								5523
							],
							[
								6121,
								6134
							],
							[
								6524,
								6537
							]
						],
						"symlist":
						[
							" ⒡  enqueue_block ( ) ; — function declaration",
							" ⒡  enqueue_value ( ) ; — function declaration",
							"—Ⓕ– generator_zero ( ) { … } — function",
							"—Ⓕ– generator_destroy ( ) { … } — function",
							"—Ⓕ– generator_free ( ) { … } — function",
							"—Ⓕ– generator_new ( ) { … } — function",
							"—Ⓕ– generator_dequeue ( ) { … } — function",
							"—Ⓕ– generator_update ( ) { … } — function",
							"—Ⓕ– generator_next ( ) { … } — function",
							"—Ⓕ– generator_write ( ) { … } — function",
							"—Ⓕ– generator_push ( ) { … } — function",
							"—Ⓕ– generator_yield ( ) { … } — function",
							"—Ⓕ– generator_close ( ) { … } — function",
							"—Ⓕ– generator_continuous ( ) { … } — function",
							"—Ⓕ– enqueue_block ( ) { … } — function",
							"—Ⓕ– enqueue_value ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACIAAAAICDik4IgIF9HTlVfU09VUkNFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBmZXRjaF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2ZldGNoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAnQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1402,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client-http.c",
						"symkeys":
						[
							[
								337,
								360
							],
							[
								367,
								387
							]
						],
						"symlist":
						[
							" Ⓣ  HTTPAsyncResolveClosure ; — typedef",
							"—Ⓕ– http_client_callback ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAxAwAAICDikqEgIGVucXVldWVfYmxvY2sgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBlbnF1ZXVlX3ZhbHVlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfZGVzdHJveSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9kZXF1ZXVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3VwZGF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3B1c2ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfeWllbGQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfY2xvc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfY29udGludW91cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGVucXVldWVfYmxvY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBlbnF1ZXVlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAVgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1403,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/generator.c",
						"symkeys":
						[
							[
								59,
								72
							],
							[
								143,
								156
							],
							[
								223,
								237
							],
							[
								438,
								455
							],
							[
								577,
								591
							],
							[
								838,
								851
							],
							[
								1143,
								1160
							],
							[
								1448,
								1464
							],
							[
								2211,
								2225
							],
							[
								2700,
								2715
							],
							[
								3550,
								3564
							],
							[
								4027,
								4042
							],
							[
								4764,
								4779
							],
							[
								5503,
								5523
							],
							[
								6121,
								6134
							],
							[
								6524,
								6537
							]
						],
						"symlist":
						[
							" ⒡  enqueue_block ( ) ; — function declaration",
							" ⒡  enqueue_value ( ) ; — function declaration",
							"—Ⓕ– generator_zero ( ) { … } — function",
							"—Ⓕ– generator_destroy ( ) { … } — function",
							"—Ⓕ– generator_free ( ) { … } — function",
							"—Ⓕ– generator_new ( ) { … } — function",
							"—Ⓕ– generator_dequeue ( ) { … } — function",
							"—Ⓕ– generator_update ( ) { … } — function",
							"—Ⓕ– generator_next ( ) { … } — function",
							"—Ⓕ– generator_write ( ) { … } — function",
							"—Ⓕ– generator_push ( ) { … } — function",
							"—Ⓕ– generator_yield ( ) { … } — function",
							"—Ⓕ– generator_close ( ) { … } — function",
							"—Ⓕ– generator_continuous ( ) { … } — function",
							"—Ⓕ– enqueue_block ( ) { … } — function",
							"—Ⓕ– enqueue_value ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABkAAAAICDik4kgIEhUVFBBc3luY1Jlc29sdmVDbG9zdXJlIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIGh0dHBfY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAnQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1404,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client-http.c",
						"symkeys":
						[
							[
								337,
								360
							],
							[
								367,
								387
							]
						],
						"symlist":
						[
							" Ⓣ  HTTPAsyncResolveClosure ; — typedef",
							"—Ⓕ– http_client_callback ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAxAwAAICDikqEgIGVucXVldWVfYmxvY2sgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBlbnF1ZXVlX3ZhbHVlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfZGVzdHJveSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9kZXF1ZXVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3VwZGF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3B1c2ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfeWllbGQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfY2xvc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfY29udGludW91cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGVucXVldWVfYmxvY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBlbnF1ZXVlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAVgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1405,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/generator.c",
						"symkeys":
						[
							[
								59,
								72
							],
							[
								143,
								156
							],
							[
								223,
								237
							],
							[
								438,
								455
							],
							[
								577,
								591
							],
							[
								838,
								851
							],
							[
								1143,
								1160
							],
							[
								1448,
								1464
							],
							[
								2211,
								2225
							],
							[
								2700,
								2715
							],
							[
								3550,
								3564
							],
							[
								4027,
								4042
							],
							[
								4764,
								4779
							],
							[
								5503,
								5523
							],
							[
								6121,
								6134
							],
							[
								6524,
								6537
							]
						],
						"symlist":
						[
							" ⒡  enqueue_block ( ) ; — function declaration",
							" ⒡  enqueue_value ( ) ; — function declaration",
							"—Ⓕ– generator_zero ( ) { … } — function",
							"—Ⓕ– generator_destroy ( ) { … } — function",
							"—Ⓕ– generator_free ( ) { … } — function",
							"—Ⓕ– generator_new ( ) { … } — function",
							"—Ⓕ– generator_dequeue ( ) { … } — function",
							"—Ⓕ– generator_update ( ) { … } — function",
							"—Ⓕ– generator_next ( ) { … } — function",
							"—Ⓕ– generator_write ( ) { … } — function",
							"—Ⓕ– generator_push ( ) { … } — function",
							"—Ⓕ– generator_yield ( ) { … } — function",
							"—Ⓕ– generator_close ( ) { … } — function",
							"—Ⓕ– generator_continuous ( ) { … } — function",
							"—Ⓕ– enqueue_block ( ) { … } — function",
							"—Ⓕ– enqueue_value ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABkAAAAICDik4kgIEhUVFBBc3luY1Jlc29sdmVDbG9zdXJlIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIGh0dHBfY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAnQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1406,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
						"symkeys":
						[
							[
								385,
								412
							],
							[
								570,
								616
							],
							[
								827,
								857
							],
							[
								913,
								935
							],
							[
								1241,
								1251
							],
							[
								1518,
								1532
							],
							[
								2576,
								2589
							],
							[
								2625,
								2639
							],
							[
								2739,
								2755
							],
							[
								3039,
								3051
							],
							[
								3239,
								3282
							],
							[
								3554,
								3574
							],
							[
								3600,
								3605
							],
							[
								4912,
								4945
							],
							[
								5210,
								5225
							],
							[
								5425,
								5442
							],
							[
								5534,
								5551
							],
							[
								6554,
								6561
							],
							[
								6625,
								6632
							],
							[
								6709,
								6729
							],
							[
								7218,
								7230
							],
							[
								7317,
								7329
							],
							[
								7568,
								7584
							],
							[
								7731,
								7749
							],
							[
								7888,
								7922
							],
							[
								8118,
								8138
							],
							[
								8305,
								8324
							],
							[
								8547,
								8564
							],
							[
								8604,
								8608
							],
							[
								8866,
								8878
							],
							[
								8958,
								8970
							],
							[
								9209,
								9229
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							"ctor = () =>",
							" function createWS(url, callbacks, listen)",
							" (level, message) =>",
							"() =>",
							"'/404.html': function* (req, res)",
							"proxy(req, res)",
							"*config(req, res)",
							"*files(req, resp)",
							"name =>",
							"file =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"onConnect(ws, req)",
							"onClose(ws, status, reason, error)",
							"onHttp(ws, req, rsp)",
							"onMessage(ws, data)",
							"get connections()",
							"c =>",
							"get server()",
							"get client()",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAxAwAAICDikqEgIGVucXVldWVfYmxvY2sgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBlbnF1ZXVlX3ZhbHVlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfZGVzdHJveSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9kZXF1ZXVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3VwZGF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3B1c2ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfeWllbGQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfY2xvc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfY29udGludW91cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGVucXVldWVfYmxvY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBlbnF1ZXVlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAVwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1407,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/generator.c",
						"symkeys":
						[
							[
								59,
								72
							],
							[
								143,
								156
							],
							[
								223,
								237
							],
							[
								438,
								455
							],
							[
								577,
								591
							],
							[
								838,
								851
							],
							[
								1143,
								1160
							],
							[
								1448,
								1464
							],
							[
								2211,
								2225
							],
							[
								2700,
								2715
							],
							[
								3550,
								3564
							],
							[
								4027,
								4042
							],
							[
								4764,
								4779
							],
							[
								5503,
								5523
							],
							[
								6121,
								6134
							],
							[
								6524,
								6537
							]
						],
						"symlist":
						[
							" ⒡  enqueue_block ( ) ; — function declaration",
							" ⒡  enqueue_value ( ) ; — function declaration",
							"—Ⓕ– generator_zero ( ) { … } — function",
							"—Ⓕ– generator_destroy ( ) { … } — function",
							"—Ⓕ– generator_free ( ) { … } — function",
							"—Ⓕ– generator_new ( ) { … } — function",
							"—Ⓕ– generator_dequeue ( ) { … } — function",
							"—Ⓕ– generator_update ( ) { … } — function",
							"—Ⓕ– generator_next ( ) { … } — function",
							"—Ⓕ– generator_write ( ) { … } — function",
							"—Ⓕ– generator_push ( ) { … } — function",
							"—Ⓕ– generator_yield ( ) { … } — function",
							"—Ⓕ– generator_close ( ) { … } — function",
							"—Ⓕ– generator_continuous ( ) { … } — function",
							"—Ⓕ– enqueue_block ( ) { … } — function",
							"—Ⓕ– enqueue_value ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABXAgAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpCiAgbWFpbiguLi5hcmdzKQogIChhLCB2KSA9PgogICh2LCBwdiwgbykgPT4KICAuaGVscCA9ICgpID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgY3RvciA9ICgpID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKICAobGV2ZWwsIG1lc3NhZ2UpID0+CigpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCiAgcHJveHkocmVxLCByZXMpCipjb25maWcocmVxLCByZXMpCipmaWxlcyhyZXEsIHJlc3ApCiAgbmFtZSA9PgogIGZpbGUgPT4KKGFjYywgW2ZpbGUsIHN0XSkgPT4KICBzdHJpbmcoYSwgYikKICBudW1iZXIoYSwgYikKKFtuYW1lLCBvYmpdKSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvbkh0dHAod3MsIHJlcSwgcnNwKQogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBnZXQgY29ubmVjdGlvbnMoKQogIGMgPT4KICBnZXQgc2VydmVyKCkKICBnZXQgY2xpZW50KCkKICBxdWl0KHdoeSkAAAAAAAAAAJ0CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1408,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
						"symkeys":
						[
							[
								385,
								412
							],
							[
								570,
								616
							],
							[
								827,
								857
							],
							[
								913,
								935
							],
							[
								1241,
								1251
							],
							[
								1518,
								1532
							],
							[
								2576,
								2589
							],
							[
								2625,
								2639
							],
							[
								2739,
								2755
							],
							[
								3039,
								3051
							],
							[
								3239,
								3282
							],
							[
								3554,
								3574
							],
							[
								3600,
								3605
							],
							[
								4912,
								4945
							],
							[
								5210,
								5225
							],
							[
								5425,
								5442
							],
							[
								5534,
								5551
							],
							[
								6554,
								6561
							],
							[
								6625,
								6632
							],
							[
								6709,
								6729
							],
							[
								7218,
								7230
							],
							[
								7317,
								7329
							],
							[
								7568,
								7584
							],
							[
								7731,
								7749
							],
							[
								7888,
								7922
							],
							[
								8118,
								8138
							],
							[
								8305,
								8324
							],
							[
								8547,
								8564
							],
							[
								8604,
								8608
							],
							[
								8866,
								8878
							],
							[
								8958,
								8970
							],
							[
								9209,
								9229
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							"ctor = () =>",
							" function createWS(url, callbacks, listen)",
							" (level, message) =>",
							"() =>",
							"'/404.html': function* (req, res)",
							"proxy(req, res)",
							"*config(req, res)",
							"*files(req, resp)",
							"name =>",
							"file =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"onConnect(ws, req)",
							"onClose(ws, status, reason, error)",
							"onHttp(ws, req, rsp)",
							"onMessage(ws, data)",
							"get connections()",
							"c =>",
							"get server()",
							"get client()",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAxAwAAICDikqEgIGVucXVldWVfYmxvY2sgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBlbnF1ZXVlX3ZhbHVlICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfZGVzdHJveSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9kZXF1ZXVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3VwZGF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGdlbmVyYXRvcl9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2VuZXJhdG9yX3B1c2ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfeWllbGQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfY2xvc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZW5lcmF0b3JfY29udGludW91cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGVucXVldWVfYmxvY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBlbnF1ZXVlX3ZhbHVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAVwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1409,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client-http.c",
						"symkeys":
						[
							[
								337,
								360
							],
							[
								367,
								387
							]
						],
						"symlist":
						[
							" Ⓣ  HTTPAsyncResolveClosure ; — typedef",
							"—Ⓕ– http_client_callback ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABXAgAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpCiAgbWFpbiguLi5hcmdzKQogIChhLCB2KSA9PgogICh2LCBwdiwgbykgPT4KICAuaGVscCA9ICgpID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgY3RvciA9ICgpID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKICAobGV2ZWwsIG1lc3NhZ2UpID0+CigpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCiAgcHJveHkocmVxLCByZXMpCipjb25maWcocmVxLCByZXMpCipmaWxlcyhyZXEsIHJlc3ApCiAgbmFtZSA9PgogIGZpbGUgPT4KKGFjYywgW2ZpbGUsIHN0XSkgPT4KICBzdHJpbmcoYSwgYikKICBudW1iZXIoYSwgYikKKFtuYW1lLCBvYmpdKSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvbkh0dHAod3MsIHJlcSwgcnNwKQogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBnZXQgY29ubmVjdGlvbnMoKQogIGMgPT4KICBnZXQgc2VydmVyKCkKICBnZXQgY2xpZW50KCkKICBxdWl0KHdoeSkAAAAAAAAAAFYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1410,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-fetch.js",
						"symkeys":
						[
							[
								174,
								204
							],
							[
								466,
								491
							],
							[
								515,
								535
							],
							[
								1296,
								1307
							],
							[
								1469,
								1475
							],
							[
								1608,
								1615
							],
							[
								1941,
								1949
							],
							[
								1998,
								2020
							],
							[
								2642,
								2646
							],
							[
								2726,
								2731
							],
							[
								2790,
								2806
							],
							[
								2995,
								3017
							],
							[
								3235,
								3251
							],
							[
								3286,
								3291
							],
							[
								3342,
								3348
							]
						],
						"symlist":
						[
							"function WriteFile(name, data)",
							"function FetchNext(array)",
							"(resolve, reject) =>",
							"response =>",
							"buf =>",
							"text =>",
							"error =>",
							"function main(...args)",
							"n =>",
							"() =>",
							" (level, msg) =>",
							" ({ Console }) =>",
							" function run()",
							"() =>",
							"err =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABkAAAAICDik4kgIEhUVFBBc3luY1Jlc29sdmVDbG9zdXJlIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIGh0dHBfY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1411,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client-http.c",
						"symkeys":
						[
							[
								337,
								360
							],
							[
								367,
								387
							]
						],
						"symlist":
						[
							" Ⓣ  HTTPAsyncResolveClosure ; — typedef",
							"—Ⓕ– http_client_callback ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADAAAAAV3JpdGVGaWxlKG5hbWUsIGRhdGEpCkZldGNoTmV4dChhcnJheSkKKHJlc29sdmUsIHJlamVjdCkgPT4KICByZXNwb25zZSA9PgogIGJ1ZiA9PgogIHRleHQgPT4KICBlcnJvciA9PgogIG1haW4oLi4uYXJncykKICBuID0+CigpID0+CiAgKGxldmVsLCBtc2cpID0+CiAgKHsgQ29uc29sZSB9KSA9PgogIHJ1bigpCigpID0+CiAgZXJyID0+AAAAAAAAAABWAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1412,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-fetch.js",
						"symkeys":
						[
							[
								174,
								204
							],
							[
								466,
								491
							],
							[
								515,
								535
							],
							[
								1296,
								1307
							],
							[
								1469,
								1475
							],
							[
								1608,
								1615
							],
							[
								1941,
								1949
							],
							[
								1998,
								2020
							],
							[
								2642,
								2646
							],
							[
								2726,
								2731
							],
							[
								2790,
								2806
							],
							[
								2995,
								3017
							],
							[
								3235,
								3251
							],
							[
								3286,
								3291
							],
							[
								3342,
								3348
							]
						],
						"symlist":
						[
							"function WriteFile(name, data)",
							"function FetchNext(array)",
							"(resolve, reject) =>",
							"response =>",
							"buf =>",
							"text =>",
							"error =>",
							"function main(...args)",
							"n =>",
							"() =>",
							" (level, msg) =>",
							" ({ Console }) =>",
							" function run()",
							"() =>",
							"err =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABkAAAAICDik4kgIEhUVFBBc3luY1Jlc29sdmVDbG9zdXJlIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIGh0dHBfY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1413,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client-http.c",
						"symkeys":
						[
							[
								337,
								360
							],
							[
								367,
								387
							]
						],
						"symlist":
						[
							" Ⓣ  HTTPAsyncResolveClosure ; — typedef",
							"—Ⓕ– http_client_callback ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADAAAAAV3JpdGVGaWxlKG5hbWUsIGRhdGEpCkZldGNoTmV4dChhcnJheSkKKHJlc29sdmUsIHJlamVjdCkgPT4KICByZXNwb25zZSA9PgogIGJ1ZiA9PgogIHRleHQgPT4KICBlcnJvciA9PgogIG1haW4oLi4uYXJncykKICBuID0+CigpID0+CiAgKGxldmVsLCBtc2cpID0+CiAgKHsgQ29uc29sZSB9KSA9PgogIHJ1bigpCigpID0+CiAgZXJyID0+AAAAAAAAAABWAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1414,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt",
						"symkeys":
						[
							[
								122,
								134
							],
							[
								147,
								161
							],
							[
								485,
								495
							],
							[
								920,
								940
							],
							[
								1043,
								1067
							],
							[
								1102,
								1126
							],
							[
								1164,
								1188
							],
							[
								1227,
								1251
							],
							[
								1288,
								1312
							],
							[
								1381,
								1405
							],
							[
								1606,
								1622
							],
							[
								1700,
								1710
							],
							[
								1742,
								1752
							],
							[
								1937,
								1949
							],
							[
								1960,
								1972
							],
							[
								1976,
								1988
							],
							[
								2170,
								2189
							],
							[
								2215,
								2234
							],
							[
								2238,
								2257
							],
							[
								2322,
								2341
							],
							[
								2452,
								2471
							],
							[
								2499,
								2518
							],
							[
								2522,
								2541
							],
							[
								2608,
								2627
							],
							[
								2796,
								2821
							],
							[
								3142,
								3166
							],
							[
								3246,
								3271
							],
							[
								3275,
								3294
							],
							[
								3316,
								3339
							],
							[
								3343,
								3359
							],
							[
								3363,
								3375
							],
							[
								3396,
								3408
							],
							[
								3412,
								3429
							],
							[
								3498,
								3517
							],
							[
								3824,
								3842
							],
							[
								3853,
								3874
							],
							[
								3878,
								3891
							],
							[
								3937,
								3945
							],
							[
								4051,
								4075
							],
							[
								4190,
								4203
							],
							[
								4276,
								4300
							],
							[
								4339,
								4352
							],
							[
								4368,
								4386
							],
							[
								4390,
								4414
							],
							[
								4436,
								4451
							],
							[
								4455,
								4468
							],
							[
								4482,
								4501
							],
							[
								4577,
								4596
							],
							[
								4609,
								4630
							],
							[
								4646,
								4665
							],
							[
								4669,
								4690
							],
							[
								4842,
								4858
							],
							[
								5370,
								5394
							],
							[
								5505,
								5517
							],
							[
								5588,
								5612
							],
							[
								5650,
								5662
							],
							[
								5678,
								5692
							],
							[
								5696,
								5709
							],
							[
								5723,
								5741
							],
							[
								5814,
								5832
							],
							[
								5845,
								5866
							],
							[
								5882,
								5900
							],
							[
								5904,
								5925
							],
							[
								5987,
								6011
							],
							[
								6479,
								6503
							],
							[
								6777,
								6796
							],
							[
								7040,
								7057
							],
							[
								7109,
								7128
							],
							[
								7132,
								7151
							],
							[
								7320,
								7339
							],
							[
								7401,
								7418
							],
							[
								7422,
								7441
							],
							[
								7672,
								7688
							],
							[
								7715,
								7731
							],
							[
								7770,
								7789
							],
							[
								7793,
								7818
							],
							[
								7839,
								7858
							],
							[
								7862,
								7881
							],
							[
								7913,
								7937
							],
							[
								7941,
								7960
							],
							[
								7966,
								7991
							],
							[
								7995,
								8014
							],
							[
								8018,
								8037
							],
							[
								8599,
								8630
							],
							[
								8666,
								8677
							],
							[
								9081,
								9087
							],
							[
								9093,
								9097
							],
							[
								9141,
								9144
							],
							[
								9153,
								9159
							],
							[
								9163,
								9166
							],
							[
								9175,
								9179
							],
							[
								9185,
								9188
							],
							[
								9198,
								9203
							],
							[
								9207,
								9210
							],
							[
								9337,
								9356
							],
							[
								9409,
								9428
							],
							[
								9528,
								9543
							],
							[
								9741,
								9758
							],
							[
								9762,
								9781
							],
							[
								9785,
								9807
							],
							[
								9916,
								9932
							],
							[
								9976,
								9988
							],
							[
								10057,
								10068
							],
							[
								10083,
								10094
							],
							[
								10097,
								10101
							],
							[
								10135,
								10141
							],
							[
								10153,
								10178
							],
							[
								10212,
								10218
							],
							[
								10258,
								10277
							],
							[
								10301,
								10318
							],
							[
								10395,
								10420
							],
							[
								10424,
								10443
							],
							[
								10447,
								10466
							],
							[
								10511,
								10536
							],
							[
								10540,
								10559
							],
							[
								10563,
								10582
							],
							[
								10649,
								10655
							],
							[
								10683,
								10694
							],
							[
								10750,
								10756
							],
							[
								10880,
								10905
							],
							[
								10939,
								10945
							],
							[
								10956,
								10981
							],
							[
								11002,
								11027
							],
							[
								11060,
								11066
							],
							[
								11077,
								11096
							],
							[
								11126,
								11151
							],
							[
								11186,
								11192
							],
							[
								11196,
								11219
							],
							[
								11223,
								11240
							],
							[
								11248,
								11265
							],
							[
								11269,
								11285
							],
							[
								11289,
								11305
							],
							[
								11313,
								11325
							],
							[
								11447,
								11472
							],
							[
								11491,
								11510
							],
							[
								11526,
								11542
							],
							[
								11561,
								11580
							],
							[
								11645,
								11670
							],
							[
								11689,
								11708
							],
							[
								11724,
								11740
							],
							[
								11759,
								11778
							],
							[
								11833,
								11856
							],
							[
								11875,
								11892
							],
							[
								11908,
								11920
							],
							[
								11939,
								11958
							],
							[
								11962,
								11984
							],
							[
								12028,
								12048
							],
							[
								12058,
								12078
							],
							[
								12082,
								12102
							],
							[
								12193,
								12213
							],
							[
								13153,
								13177
							],
							[
								13182,
								13187
							],
							[
								13210,
								13221
							],
							[
								13225,
								13249
							],
							[
								13253,
								13277
							],
							[
								13287,
								13290
							],
							[
								13315,
								13326
							],
							[
								13366,
								13371
							],
							[
								13395,
								13399
							],
							[
								13441,
								13445
							],
							[
								13470,
								13474
							],
							[
								13512,
								13523
							],
							[
								13565,
								13568
							],
							[
								13583,
								13587
							],
							[
								13624,
								13648
							],
							[
								13673,
								13678
							],
							[
								13727,
								13740
							],
							[
								13754,
								13778
							],
							[
								14114,
								14130
							],
							[
								20146,
								20165
							],
							[
								20169,
								20193
							],
							[
								20234,
								20253
							],
							[
								20303,
								20327
							],
							[
								20340,
								20359
							],
							[
								20435,
								20451
							],
							[
								20463,
								20469
							],
							[
								20504,
								20519
							],
							[
								20576,
								20582
							],
							[
								20638,
								20641
							],
							[
								20673,
								20676
							],
							[
								20734,
								20737
							],
							[
								20764,
								20773
							],
							[
								20777,
								20801
							],
							[
								20805,
								20808
							],
							[
								20845,
								20848
							],
							[
								20884,
								20891
							],
							[
								20917,
								20920
							],
							[
								20934,
								20950
							],
							[
								20954,
								20973
							],
							[
								20977,
								20981
							],
							[
								20997,
								21000
							],
							[
								21052,
								21068
							],
							[
								21072,
								21091
							],
							[
								21095,
								21102
							],
							[
								21123,
								21126
							],
							[
								21190,
								21206
							],
							[
								21235,
								21238
							],
							[
								21256,
								21259
							],
							[
								21307,
								21319
							],
							[
								21340,
								21343
							],
							[
								21672,
								21691
							],
							[
								21747,
								21761
							],
							[
								21822,
								21831
							],
							[
								21885,
								21899
							],
							[
								21928,
								21944
							],
							[
								21950,
								21964
							],
							[
								21984,
								21987
							],
							[
								22033,
								22036
							],
							[
								22054,
								22073
							],
							[
								22094,
								22097
							],
							[
								22147,
								22163
							],
							[
								22188,
								22195
							],
							[
								22219,
								22225
							],
							[
								22251,
								22258
							],
							[
								22263,
								22282
							],
							[
								22286,
								22290
							],
							[
								22329,
								22336
							],
							[
								22387,
								22411
							],
							[
								22432,
								22439
							],
							[
								22483,
								22490
							],
							[
								22858,
								22865
							],
							[
								22899,
								22915
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"DISABLE_WERROR",
							"LOCAL_CURL",
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"SOCKET_LIBRARIES",
							"LOCAL_CURL",
							"LOCAL_CURL",
							"CURL_LIBRARY",
							"CURL_LIBRARY",
							"CURL_LIBRARY",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_EXTRA_INCLUDE_FILES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"OPENSSL_INCLUDE_DIR",
							"LIBWEBSOCKETS_LIBRARIES",
							"BROTLI_LIBRARIES",
							"ZLIB_LIBRARY",
							"CURL_LIBRARY",
							"OPENSSL_LIBRARIES",
							"BUILD_LIBWEBSOCKETS",
							"LIBWEBSOCKETS_DEPS",
							"LIBWEBSOCKETS_C_FLAGS",
							"CMAKE_C_FLAGS",
							"WITH_SSL",
							"CMAKE_CURRENT_SOURCE_DIR",
							"BUILD_MBEDTLS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MBEDTLS_DEBUG",
							"MBEDTLS_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MBEDTLS_C_FLAGS",
							"CMAKE_C_FLAGS",
							"MBEDTLS_TARGET_NAME",
							"MBEDTLS_TARGET_NAME",
							"LIBWEBSOCKETS_C_FLAGS",
							"MBEDTLS_INCLUDE_DIR",
							"LIBWEBSOCKETS_C_FLAGS",
							"OPENSSL_ROOT_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"BUILD_BROTLI",
							"CMAKE_CURRENT_SOURCE_DIR",
							"BROTLI_DEBUG",
							"BROTLI_C_FLAGS",
							"CMAKE_C_FLAGS",
							"BROTLI_TARGET_NAME",
							"BROTLI_TARGET_NAME",
							"LIBWEBSOCKETS_C_FLAGS",
							"BROTLI_INCLUDE_DIR",
							"LIBWEBSOCKETS_C_FLAGS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"OPENSSL_INCLUDE_DIR",
							"OPENSSL_LIBRARIES",
							"OPENSSL_LIBRARY_DIR",
							"OPENSSL_LIBRARY_DIR",
							"OPENSSL_LIBRARY_DIR",
							"CMAKE_BUILD_RPATH",
							"CMAKE_INSTALL_RPATH",
							"CURL_LIBRARY_DIR",
							"CURL_INCLUDE_DIR",
							"QUICKJS_LIBRARY_DIR",
							"LIBWEBSOCKETS_LIBRARY_DIR",
							"OPENSSL_LIBRARY_DIR",
							"MBEDTLS_LIBRARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_INCLUDE_DIR",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"OPENSSL_INCLUDE_DIR",
							"MBEDTLS_INCLUDE_DIR",
							"CMAKE_POSITION_INDEPENDENT_CODE",
							"DUMP_TARGET",
							"TARGET",
							"PROP",
							"ESC",
							"TARGET",
							"ESC",
							"PROP",
							"ESC",
							"VALUE",
							"ESC",
							"JS_BINDINGS_SOURCES",
							"JS_BINDINGS_SOURCES",
							"QUICKJS_LIBRARY",
							"OPENSSL_LIBRARIES",
							"OPENSSL_SSL_LIBRARY",
							"OPENSSL_CRYPTO_LIBRARY",
							"CURL_INCLUDE_DIR",
							"CURL_LIBRARY",
							"TARGET_LINK",
							"OUTPUT_NAME",
							"ARGN",
							"TARGET",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"TARGET",
							"CMAKE_INSTALL_RPATH",
							"CMAKE_BUILD_RPATH",
							"LIBWEBSOCKETS_LIBRARY_DIR",
							"OPENSSL_LIBRARY_DIR",
							"MBEDTLS_LIBRARY_DIR",
							"LIBWEBSOCKETS_LIBRARY_DIR",
							"OPENSSL_LIBRARY_DIR",
							"MBEDTLS_LIBRARY_DIR",
							"TARGET",
							"OUTPUT_NAME",
							"TARGET",
							"LIBWEBSOCKETS_LIBRARY_DIR",
							"TARGET",
							"LIBWEBSOCKETS_LIBRARY_DIR",
							"LIBWEBSOCKETS_LIBRARY_DIR",
							"TARGET",
							"QUICKJS_LIBRARY_DIR",
							"LIBWEBSOCKETS_LIBRARY_DIR",
							"TARGET",
							"LIBWEBSOCKETS_LIBRARIES",
							"MBEDTLS_LIBRARIES",
							"OPENSSL_LIBRARIES",
							"SOCKET_LIBRARIES",
							"BROTLI_LIBRARIES",
							"ZLIB_LIBRARY",
							"LIBWEBSOCKETS_LIBRARY_DIR",
							"MBEDTLS_LIBRARY_DIR",
							"CURL_LIBRARY_DIR",
							"OPENSSL_LIBRARY_DIR",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"MBEDTLS_INCLUDE_DIR",
							"CURL_INCLUDE_DIR",
							"OPENSSL_INCLUDE_DIR",
							"LIBWEBSOCKETS_LIBRARIES",
							"MBEDTLS_LIBRARIES",
							"CURL_LIBRARY",
							"OPENSSL_SSL_LIBRARY",
							"OPENSSL_CRYPTO_LIBRARY",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_PREFIX",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"MODULE_PATH",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"ENV",
							"MODULE_PATH",
							"TESTS",
							"TEST",
							"BASE",
							"BASE",
							"MODULE_PATH",
							"QJS",
							"TEST",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"CMAKE_COMMAND",
							"CMAKE_CURRENT_BINARY_DIR",
							"MINIMAL_EXAMPLES",
							"EXAMPLES_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"EXAMPLES_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"EXAMPLES_SOURCE_DIR",
							"MINIMAL_EXAMPLES",
							"SOURCE",
							"MINIMAL_EXAMPLE",
							"SOURCE",
							"DIR",
							"DIR",
							"DIR",
							"MOUNT_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"DIR",
							"DIR",
							"SOURCES",
							"SRC",
							"GENERATED_SOURCE",
							"EXAMPLES_SOURCE_DIR",
							"BASE",
							"SRC",
							"GENERATED_SOURCE",
							"EXAMPLES_SOURCE_DIR",
							"EXAMPLE",
							"SRC",
							"GENERATED_SOURCE",
							"SRC",
							"SRC",
							"CLANG_FORMAT",
							"SRC",
							"EXAMPLES_SOURCE_DIR",
							"EXAMPLE_SOURCE",
							"MOUNT_DIR",
							"EXAMPLE_SOURCE",
							"GENERATED_SOURCE",
							"EXAMPLE_SOURCE",
							"SRC",
							"SRC",
							"EXAMPLES_SOURCE_DIR",
							"SRC",
							"GENERATED_SOURCE",
							"SOURCES",
							"SOURCE",
							"EXAMPLE",
							"EXAMPLES_SOURCE_DIR",
							"BASE",
							"EXAMPLE",
							"CMAKE_CURRENT_BINARY_DIR",
							"EXAMPLE",
							"EXAMPLE",
							"EXAMPLE",
							"MINIMAL_EXAMPLES"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABkAAAAICDik4kgIEhUVFBBc3luY1Jlc29sdmVDbG9zdXJlIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIGh0dHBfY2xpZW50X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAA9Q0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1415,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD1DQAAUFJPSkVDVF9OQU1FCkRJU0FCTEVfV0VSUk9SCkxPQ0FMX0NVUkwKQ01BS0VfSU5TVEFMTF9MSUJESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKU09DS0VUX0xJQlJBUklFUwpMT0NBTF9DVVJMCkxPQ0FMX0NVUkwKQ1VSTF9MSUJSQVJZCkNVUkxfTElCUkFSWQpDVVJMX0xJQlJBUlkKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0VYVFJBX0lOQ0xVREVfRklMRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkxJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVIKT1BFTlNTTF9JTkNMVURFX0RJUgpMSUJXRUJTT0NLRVRTX0xJQlJBUklFUwpCUk9UTElfTElCUkFSSUVTClpMSUJfTElCUkFSWQpDVVJMX0xJQlJBUlkKT1BFTlNTTF9MSUJSQVJJRVMKQlVJTERfTElCV0VCU09DS0VUUwpMSUJXRUJTT0NLRVRTX0RFUFMKTElCV0VCU09DS0VUU19DX0ZMQUdTCkNNQUtFX0NfRkxBR1MKV0lUSF9TU0wKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkJVSUxEX01CRURUTFMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCk1CRURUTFNfREVCVUcKTUJFRFRMU19TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNQkVEVExTX0NfRkxBR1MKQ01BS0VfQ19GTEFHUwpNQkVEVExTX1RBUkdFVF9OQU1FCk1CRURUTFNfVEFSR0VUX05BTUUKTElCV0VCU09DS0VUU19DX0ZMQUdTCk1CRURUTFNfSU5DTFVERV9ESVIKTElCV0VCU09DS0VUU19DX0ZMQUdTCk9QRU5TU0xfUk9PVF9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkJVSUxEX0JST1RMSQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQlJPVExJX0RFQlVHCkJST1RMSV9DX0ZMQUdTCkNNQUtFX0NfRkxBR1MKQlJPVExJX1RBUkdFVF9OQU1FCkJST1RMSV9UQVJHRVRfTkFNRQpMSUJXRUJTT0NLRVRTX0NfRkxBR1MKQlJPVExJX0lOQ0xVREVfRElSCkxJQldFQlNPQ0tFVFNfQ19GTEFHUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCk9QRU5TU0xfSU5DTFVERV9ESVIKT1BFTlNTTF9MSUJSQVJJRVMKT1BFTlNTTF9MSUJSQVJZX0RJUgpPUEVOU1NMX0xJQlJBUllfRElSCk9QRU5TU0xfTElCUkFSWV9ESVIKQ01BS0VfQlVJTERfUlBBVEgKQ01BS0VfSU5TVEFMTF9SUEFUSApDVVJMX0xJQlJBUllfRElSCkNVUkxfSU5DTFVERV9ESVIKUVVJQ0tKU19MSUJSQVJZX0RJUgpMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSCk9QRU5TU0xfTElCUkFSWV9ESVIKTUJFRFRMU19MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpMSUJXRUJTT0NLRVRTX0lOQ0xVREVfRElSCk9QRU5TU0xfSU5DTFVERV9ESVIKTUJFRFRMU19JTkNMVURFX0RJUgpDTUFLRV9QT1NJVElPTl9JTkRFUEVOREVOVF9DT0RFCkRVTVBfVEFSR0VUClRBUkdFVApQUk9QCkVTQwpUQVJHRVQKRVNDClBST1AKRVNDClZBTFVFCkVTQwpKU19CSU5ESU5HU19TT1VSQ0VTCkpTX0JJTkRJTkdTX1NPVVJDRVMKUVVJQ0tKU19MSUJSQVJZCk9QRU5TU0xfTElCUkFSSUVTCk9QRU5TU0xfU1NMX0xJQlJBUlkKT1BFTlNTTF9DUllQVE9fTElCUkFSWQpDVVJMX0lOQ0xVREVfRElSCkNVUkxfTElCUkFSWQpUQVJHRVRfTElOSwpPVVRQVVRfTkFNRQpBUkdOClRBUkdFVApMSUJXRUJTT0NLRVRTX0lOQ0xVREVfRElSClRBUkdFVApDTUFLRV9JTlNUQUxMX1JQQVRICkNNQUtFX0JVSUxEX1JQQVRICkxJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIKT1BFTlNTTF9MSUJSQVJZX0RJUgpNQkVEVExTX0xJQlJBUllfRElSCkxJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIKT1BFTlNTTF9MSUJSQVJZX0RJUgpNQkVEVExTX0xJQlJBUllfRElSClRBUkdFVApPVVRQVVRfTkFNRQpUQVJHRVQKTElCV0VCU09DS0VUU19MSUJSQVJZX0RJUgpUQVJHRVQKTElCV0VCU09DS0VUU19MSUJSQVJZX0RJUgpMSUJXRUJTT0NLRVRTX0xJQlJBUllfRElSClRBUkdFVApRVUlDS0pTX0xJQlJBUllfRElSCkxJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIKVEFSR0VUCkxJQldFQlNPQ0tFVFNfTElCUkFSSUVTCk1CRURUTFNfTElCUkFSSUVTCk9QRU5TU0xfTElCUkFSSUVTClNPQ0tFVF9MSUJSQVJJRVMKQlJPVExJX0xJQlJBUklFUwpaTElCX0xJQlJBUlkKTElCV0VCU09DS0VUU19MSUJSQVJZX0RJUgpNQkVEVExTX0xJQlJBUllfRElSCkNVUkxfTElCUkFSWV9ESVIKT1BFTlNTTF9MSUJSQVJZX0RJUgpMSUJXRUJTT0NLRVRTX0lOQ0xVREVfRElSCk1CRURUTFNfSU5DTFVERV9ESVIKQ1VSTF9JTkNMVURFX0RJUgpPUEVOU1NMX0lOQ0xVREVfRElSCkxJQldFQlNPQ0tFVFNfTElCUkFSSUVTCk1CRURUTFNfTElCUkFSSUVTCkNVUkxfTElCUkFSWQpPUEVOU1NMX1NTTF9MSUJSQVJZCk9QRU5TU0xfQ1JZUFRPX0xJQlJBUlkKUVVJQ0tKU19DX01PRFVMRV9ESVIKQ01BS0VfSU5TVEFMTF9QUkVGSVgKQ01BS0VfSU5TVEFMTF9MSUJESVIKUVVJQ0tKU19DX01PRFVMRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClRFU1RTCk1PRFVMRV9QQVRICkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKRU5WCk1PRFVMRV9QQVRIClRFU1RTClRFU1QKQkFTRQpCQVNFCk1PRFVMRV9QQVRIClFKUwpURVNUCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpURVNUUwpDTUFLRV9DT01NQU5ECkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpNSU5JTUFMX0VYQU1QTEVTCkVYQU1QTEVTX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkVYQU1QTEVTX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkVYQU1QTEVTX1NPVVJDRV9ESVIKTUlOSU1BTF9FWEFNUExFUwpTT1VSQ0UKTUlOSU1BTF9FWEFNUExFClNPVVJDRQpESVIKRElSCkRJUgpNT1VOVF9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkRJUgpESVIKU09VUkNFUwpTUkMKR0VORVJBVEVEX1NPVVJDRQpFWEFNUExFU19TT1VSQ0VfRElSCkJBU0UKU1JDCkdFTkVSQVRFRF9TT1VSQ0UKRVhBTVBMRVNfU09VUkNFX0RJUgpFWEFNUExFClNSQwpHRU5FUkFURURfU09VUkNFClNSQwpTUkMKQ0xBTkdfRk9STUFUClNSQwpFWEFNUExFU19TT1VSQ0VfRElSCkVYQU1QTEVfU09VUkNFCk1PVU5UX0RJUgpFWEFNUExFX1NPVVJDRQpHRU5FUkFURURfU09VUkNFCkVYQU1QTEVfU09VUkNFClNSQwpTUkMKRVhBTVBMRVNfU09VUkNFX0RJUgpTUkMKR0VORVJBVEVEX1NPVVJDRQpTT1VSQ0VTClNPVVJDRQpFWEFNUExFCkVYQU1QTEVTX1NPVVJDRV9ESVIKQkFTRQpFWEFNUExFCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpFWEFNUExFCkVYQU1QTEUKRVhBTVBMRQpNSU5JTUFMX0VYQU1QTEVTAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1416,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server-http.c",
						"symkeys":
						[
							[
								597,
								612
							],
							[
								696,
								717
							],
							[
								790,
								810
							],
							[
								1126,
								1143
							],
							[
								1670,
								1695
							],
							[
								2069,
								2090
							],
							[
								2840,
								2858
							],
							[
								3017,
								3040
							],
							[
								3664,
								3676
							],
							[
								4674,
								4683
							],
							[
								6666,
								6676
							],
							[
								7857,
								7869
							],
							[
								8494,
								8504
							],
							[
								8767,
								8781
							],
							[
								9034,
								9057
							],
							[
								9072,
								9091
							],
							[
								9324,
								9338
							],
							[
								10080,
								10094
							],
							[
								11725,
								11738
							],
							[
								12892,
								12907
							],
							[
								15041,
								15064
							],
							[
								15411,
								15425
							],
							[
								16022,
								16043
							],
							[
								16542,
								16556
							],
							[
								18458,
								18467
							],
							[
								18647,
								18657
							],
							[
								20130,
								20150
							],
							[
								21565,
								21585
							]
						],
						"symlist":
						[
							" ⒡  serve_generator ( ) ; — function declaration",
							" ⒡  lws_hdr_simple_create ( ) ; — function declaration",
							"—Ⓕ– vhost_options_create ( ) { … } — function",
							"—Ⓕ– vhost_options_new ( ) { … } — function",
							"—Ⓕ– vhost_options_fromentries ( ) { … } — function",
							"—Ⓕ– vhost_options_fromobj ( ) { … } — function",
							"—Ⓕ– vhost_options_dump ( ) { … } — function",
							"—Ⓕ– vhost_options_free_list ( ) { … } — function",
							"—Ⓕ– mount_create ( ) { … } — function",
							"—Ⓕ– mount_new ( ) { … } — function",
							"—Ⓕ– mount_find ( ) { … } — function",
							"—Ⓕ– mount_find_s ( ) { … } — function",
							"—Ⓕ– mount_free ( ) { … } — function",
							"—Ⓕ– mount_is_proxy ( ) { … } — function",
							" Ⓣ  HTTPAsyncResolveClosure ; — typedef",
							"—Ⓕ– serve_resolved_free ( ) { … } — function",
							"—Ⓕ– serve_rejected ( ) { … } — function",
							"—Ⓕ– serve_resolved ( ) { … } — function",
							"—Ⓕ– serve_promise ( ) { … } — function",
							"—Ⓕ– serve_generator ( ) { … } — function",
							" ǃǃ✔  XXX: generate multiple?",
							"—Ⓕ– serve_callback ( ) { … } — function",
							"—Ⓕ– has_transfer_encoding ( ) { … } — function",
							"—Ⓕ– serve_response ( ) { … } — function",
							"—Ⓕ– file_size ( ) { … } — function",
							"—Ⓕ– serve_file ( ) { … } — function",
							"—Ⓕ– http_server_writable ( ) { … } — function",
							"—Ⓕ– http_server_callback ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAlwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1417,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACXBQAAICDikqEgIHNlcnZlX2dlbmVyYXRvciAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICDikqEgIGx3c19oZHJfc2ltcGxlX2NyZWF0ZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2Zyb21lbnRyaWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19mcmVlX2xpc3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZmluZF9zICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1vdW50X2lzX3Byb3h5ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgSFRUUEFzeW5jUmVzb2x2ZUNsb3N1cmUgOyDigJQgdHlwZWRlZgrigJTikrvigJMgc2VydmVfcmVzb2x2ZWRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX3JlamVjdGVkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVfcmVzb2x2ZWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXJ2ZV9wcm9taXNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVfZ2VuZXJhdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIMeDx4PinJQgIFhYWDogZ2VuZXJhdGUgbXVsdGlwbGU/CuKAlOKSu+KAkyBzZXJ2ZV9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGhhc190cmFuc2Zlcl9lbmNvZGluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX3Jlc3BvbnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZmlsZV9zaXplICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVfZmlsZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfc2VydmVyX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9zZXJ2ZXJfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1418,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server-http.c",
						"symkeys":
						[
							[
								597,
								612
							],
							[
								696,
								717
							],
							[
								790,
								810
							],
							[
								1126,
								1143
							],
							[
								1670,
								1695
							],
							[
								2069,
								2090
							],
							[
								2840,
								2858
							],
							[
								3017,
								3040
							],
							[
								3664,
								3676
							],
							[
								4674,
								4683
							],
							[
								6666,
								6676
							],
							[
								7857,
								7869
							],
							[
								8494,
								8504
							],
							[
								8767,
								8781
							],
							[
								9034,
								9057
							],
							[
								9072,
								9091
							],
							[
								9324,
								9338
							],
							[
								10080,
								10094
							],
							[
								11725,
								11738
							],
							[
								12892,
								12907
							],
							[
								15041,
								15064
							],
							[
								15411,
								15425
							],
							[
								16022,
								16043
							],
							[
								16542,
								16556
							],
							[
								18458,
								18467
							],
							[
								18647,
								18657
							],
							[
								20130,
								20150
							],
							[
								21565,
								21585
							]
						],
						"symlist":
						[
							" ⒡  serve_generator ( ) ; — function declaration",
							" ⒡  lws_hdr_simple_create ( ) ; — function declaration",
							"—Ⓕ– vhost_options_create ( ) { … } — function",
							"—Ⓕ– vhost_options_new ( ) { … } — function",
							"—Ⓕ– vhost_options_fromentries ( ) { … } — function",
							"—Ⓕ– vhost_options_fromobj ( ) { … } — function",
							"—Ⓕ– vhost_options_dump ( ) { … } — function",
							"—Ⓕ– vhost_options_free_list ( ) { … } — function",
							"—Ⓕ– mount_create ( ) { … } — function",
							"—Ⓕ– mount_new ( ) { … } — function",
							"—Ⓕ– mount_find ( ) { … } — function",
							"—Ⓕ– mount_find_s ( ) { … } — function",
							"—Ⓕ– mount_free ( ) { … } — function",
							"—Ⓕ– mount_is_proxy ( ) { … } — function",
							" Ⓣ  HTTPAsyncResolveClosure ; — typedef",
							"—Ⓕ– serve_resolved_free ( ) { … } — function",
							"—Ⓕ– serve_rejected ( ) { … } — function",
							"—Ⓕ– serve_resolved ( ) { … } — function",
							"—Ⓕ– serve_promise ( ) { … } — function",
							"—Ⓕ– serve_generator ( ) { … } — function",
							" ǃǃ✔  XXX: generate multiple?",
							"—Ⓕ– serve_callback ( ) { … } — function",
							"—Ⓕ– has_transfer_encoding ( ) { … } — function",
							"—Ⓕ– serve_response ( ) { … } — function",
							"—Ⓕ– file_size ( ) { … } — function",
							"—Ⓕ– serve_file ( ) { … } — function",
							"—Ⓕ– http_server_writable ( ) { … } — function",
							"—Ⓕ– http_server_callback ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAlwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1419,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server-http.c",
						"symkeys":
						[
							[
								597,
								612
							],
							[
								696,
								717
							],
							[
								790,
								810
							],
							[
								1126,
								1143
							],
							[
								1670,
								1695
							],
							[
								2069,
								2090
							],
							[
								2840,
								2858
							],
							[
								3017,
								3040
							],
							[
								3664,
								3676
							],
							[
								4674,
								4683
							],
							[
								6666,
								6676
							],
							[
								7857,
								7869
							],
							[
								8494,
								8504
							],
							[
								8767,
								8781
							],
							[
								9034,
								9057
							],
							[
								9072,
								9091
							],
							[
								9324,
								9338
							],
							[
								10080,
								10094
							],
							[
								11725,
								11738
							],
							[
								12892,
								12907
							],
							[
								15041,
								15064
							],
							[
								15411,
								15425
							],
							[
								16022,
								16043
							],
							[
								16542,
								16556
							],
							[
								18458,
								18467
							],
							[
								18647,
								18657
							],
							[
								20130,
								20150
							],
							[
								21565,
								21585
							]
						],
						"symlist":
						[
							" ⒡  serve_generator ( ) ; — function declaration",
							" ⒡  lws_hdr_simple_create ( ) ; — function declaration",
							"—Ⓕ– vhost_options_create ( ) { … } — function",
							"—Ⓕ– vhost_options_new ( ) { … } — function",
							"—Ⓕ– vhost_options_fromentries ( ) { … } — function",
							"—Ⓕ– vhost_options_fromobj ( ) { … } — function",
							"—Ⓕ– vhost_options_dump ( ) { … } — function",
							"—Ⓕ– vhost_options_free_list ( ) { … } — function",
							"—Ⓕ– mount_create ( ) { … } — function",
							"—Ⓕ– mount_new ( ) { … } — function",
							"—Ⓕ– mount_find ( ) { … } — function",
							"—Ⓕ– mount_find_s ( ) { … } — function",
							"—Ⓕ– mount_free ( ) { … } — function",
							"—Ⓕ– mount_is_proxy ( ) { … } — function",
							" Ⓣ  HTTPAsyncResolveClosure ; — typedef",
							"—Ⓕ– serve_resolved_free ( ) { … } — function",
							"—Ⓕ– serve_rejected ( ) { … } — function",
							"—Ⓕ– serve_resolved ( ) { … } — function",
							"—Ⓕ– serve_promise ( ) { … } — function",
							"—Ⓕ– serve_generator ( ) { … } — function",
							" ǃǃ✔  XXX: generate multiple?",
							"—Ⓕ– serve_callback ( ) { … } — function",
							"—Ⓕ– has_transfer_encoding ( ) { … } — function",
							"—Ⓕ– serve_response ( ) { … } — function",
							"—Ⓕ– file_size ( ) { … } — function",
							"—Ⓕ– serve_file ( ) { … } — function",
							"—Ⓕ– http_server_writable ( ) { … } — function",
							"—Ⓕ– http_server_callback ( ) { … } — function"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACXBQAAICDikqEgIHNlcnZlX2dlbmVyYXRvciAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICDikqEgIGx3c19oZHJfc2ltcGxlX2NyZWF0ZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2Zyb21lbnRyaWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19mcmVlX2xpc3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZmluZF9zICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1vdW50X2lzX3Byb3h5ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgSFRUUEFzeW5jUmVzb2x2ZUNsb3N1cmUgOyDigJQgdHlwZWRlZgrigJTikrvigJMgc2VydmVfcmVzb2x2ZWRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX3JlamVjdGVkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVfcmVzb2x2ZWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXJ2ZV9wcm9taXNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVfZ2VuZXJhdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIMeDx4PinJQgIFhYWDogZ2VuZXJhdGUgbXVsdGlwbGU/CuKAlOKSu+KAkyBzZXJ2ZV9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGhhc190cmFuc2Zlcl9lbmNvZGluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX3Jlc3BvbnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZmlsZV9zaXplICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVfZmlsZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfc2VydmVyX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9zZXJ2ZXJfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAACXBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlwUAACAg4pKhICBzZXJ2ZV9nZW5lcmF0b3IgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCiAg4pKhICBsd3NfaGRyX3NpbXBsZV9jcmVhdGUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2NyZWF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHZob3N0X29wdGlvbnNfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19mcm9tZW50cmllcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHZob3N0X29wdGlvbnNfZnJvbW9iaiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHZob3N0X29wdGlvbnNfZHVtcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHZob3N0X29wdGlvbnNfZnJlZV9saXN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZmluZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1vdW50X2ZpbmRfcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1vdW50X2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9pc19wcm94eSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICDik4kgIEhUVFBBc3luY1Jlc29sdmVDbG9zdXJlIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIHNlcnZlX3Jlc29sdmVkX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXJ2ZV9yZWplY3RlZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX3Jlc29sdmVkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVfcHJvbWlzZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX2dlbmVyYXRvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICDHg8eD4pyUICBYWFg6IGdlbmVyYXRlIG11bHRpcGxlPwrigJTikrvigJMgc2VydmVfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBoYXNfdHJhbnNmZXJfZW5jb2RpbmcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXJ2ZV9yZXNwb25zZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZpbGVfc2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX2ZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX3NlcnZlcl93cml0YWJsZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfc2VydmVyX2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAlwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1424,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACXBQAAICDikqEgIHNlcnZlX2dlbmVyYXRvciAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICDikqEgIGx3c19oZHJfc2ltcGxlX2NyZWF0ZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2Zyb21lbnRyaWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19mcmVlX2xpc3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZmluZF9zICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1vdW50X2lzX3Byb3h5ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgSFRUUEFzeW5jUmVzb2x2ZUNsb3N1cmUgOyDigJQgdHlwZWRlZgrigJTikrvigJMgc2VydmVfcmVzb2x2ZWRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX3JlamVjdGVkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVfcmVzb2x2ZWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXJ2ZV9wcm9taXNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVfZ2VuZXJhdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIMeDx4PinJQgIFhYWDogZ2VuZXJhdGUgbXVsdGlwbGU/CuKAlOKSu+KAkyBzZXJ2ZV9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGhhc190cmFuc2Zlcl9lbmNvZGluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX3Jlc3BvbnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZmlsZV9zaXplICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVfZmlsZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfc2VydmVyX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9zZXJ2ZXJfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSAQAAAAAAAJQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1425,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server-http.c",
						"symkeys":
						[
							[
								597,
								612
							],
							[
								696,
								717
							],
							[
								790,
								810
							],
							[
								1126,
								1143
							],
							[
								1670,
								1695
							],
							[
								2069,
								2090
							],
							[
								2840,
								2858
							],
							[
								3017,
								3040
							],
							[
								3664,
								3676
							],
							[
								4674,
								4683
							],
							[
								6666,
								6676
							],
							[
								7857,
								7869
							],
							[
								8494,
								8504
							],
							[
								8767,
								8781
							],
							[
								9034,
								9057
							],
							[
								9072,
								9091
							],
							[
								9324,
								9338
							],
							[
								10080,
								10094
							],
							[
								11725,
								11738
							],
							[
								12892,
								12907
							],
							[
								15041,
								15064
							],
							[
								15411,
								15425
							],
							[
								16022,
								16043
							],
							[
								16542,
								16556
							],
							[
								18458,
								18467
							],
							[
								18647,
								18657
							],
							[
								20130,
								20150
							],
							[
								21565,
								21585
							]
						],
						"symlist":
						[
							" ⒡  serve_generator ( ) ; — function declaration",
							" ⒡  lws_hdr_simple_create ( ) ; — function declaration",
							"—Ⓕ– vhost_options_create ( ) { … } — function",
							"—Ⓕ– vhost_options_new ( ) { … } — function",
							"—Ⓕ– vhost_options_fromentries ( ) { … } — function",
							"—Ⓕ– vhost_options_fromobj ( ) { … } — function",
							"—Ⓕ– vhost_options_dump ( ) { … } — function",
							"—Ⓕ– vhost_options_free_list ( ) { … } — function",
							"—Ⓕ– mount_create ( ) { … } — function",
							"—Ⓕ– mount_new ( ) { … } — function",
							"—Ⓕ– mount_find ( ) { … } — function",
							"—Ⓕ– mount_find_s ( ) { … } — function",
							"—Ⓕ– mount_free ( ) { … } — function",
							"—Ⓕ– mount_is_proxy ( ) { … } — function",
							" Ⓣ  HTTPAsyncResolveClosure ; — typedef",
							"—Ⓕ– serve_resolved_free ( ) { … } — function",
							"—Ⓕ– serve_rejected ( ) { … } — function",
							"—Ⓕ– serve_resolved ( ) { … } — function",
							"—Ⓕ– serve_promise ( ) { … } — function",
							"—Ⓕ– serve_generator ( ) { … } — function",
							" ǃǃ✔  XXX: generate multiple?",
							"—Ⓕ– serve_callback ( ) { … } — function",
							"—Ⓕ– has_transfer_encoding ( ) { … } — function",
							"—Ⓕ– serve_response ( ) { … } — function",
							"—Ⓕ– file_size ( ) { … } — function",
							"—Ⓕ– serve_file ( ) { … } — function",
							"—Ⓕ– http_server_writable ( ) { … } — function",
							"—Ⓕ– http_server_callback ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAlwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1426,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACXBQAAICDikqEgIHNlcnZlX2dlbmVyYXRvciAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24KICDikqEgIGx3c19oZHJfc2ltcGxlX2NyZWF0ZSAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIHZob3N0X29wdGlvbnNfY3JlYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB2aG9zdF9vcHRpb25zX2Zyb21lbnRyaWVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19mcm9tb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19kdW1wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdmhvc3Rfb3B0aW9uc19mcmVlX2xpc3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9jcmVhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb3VudF9maW5kICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZmluZF9zICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbW91bnRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1vdW50X2lzX3Byb3h5ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgSFRUUEFzeW5jUmVzb2x2ZUNsb3N1cmUgOyDigJQgdHlwZWRlZgrigJTikrvigJMgc2VydmVfcmVzb2x2ZWRfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX3JlamVjdGVkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVfcmVzb2x2ZWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXJ2ZV9wcm9taXNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVfZ2VuZXJhdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIMeDx4PinJQgIFhYWDogZ2VuZXJhdGUgbXVsdGlwbGU/CuKAlOKSu+KAkyBzZXJ2ZV9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGhhc190cmFuc2Zlcl9lbmNvZGluZyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlX3Jlc3BvbnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZmlsZV9zaXplICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVfZmlsZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGh0dHBfc2VydmVyX3dyaXRhYmxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaHR0cF9zZXJ2ZXJfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1427,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1428,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server.c",
						"symkeys":
						[
							[
								557,
								571
							],
							[
								2931,
								2941
							],
							[
								3296,
								3307
							],
							[
								3633,
								3644
							],
							[
								3863,
								3876
							],
							[
								5120,
								5138
							],
							[
								6726,
								6747
							],
							[
								6883,
								6904
							],
							[
								7660,
								7681
							],
							[
								15519,
								15532
							],
							[
								16392,
								16408
							]
						],
						"symlist":
						[
							" ⒡  proxy_callback ( ) ; — function declaration",
							"—Ⓕ– server_new ( ) { … } — function",
							"—Ⓕ– server_init ( ) { … } — function",
							"—Ⓕ– server_free ( ) { … } — function",
							"—Ⓕ– server_mounts ( ) { … } — function",
							"—Ⓕ– server_certificate ( ) { … } — function",
							"—Ⓕ– minnet_server_handler ( ) { … } — function",
							"—Ⓕ– minnet_server_timeout ( ) { … } — function",
							"—Ⓕ– minnet_server_closure ( ) { … } — function",
							"—Ⓕ– minnet_server ( ) { … } — function",
							"—Ⓕ– defprot_callback ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAzwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1429,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA3AgAAICDikqEgIHByb3h5X2NhbGxiYWNrICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgc2VydmVyX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXJ2ZXJfbW91bnRzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVyX2NlcnRpZmljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl90aW1lb3V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl9jbG9zdXJlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGRlZnByb3RfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1430,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1431,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1432,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1433,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1434,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1435,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1436,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1437,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server.c",
						"symkeys":
						[
							[
								557,
								571
							],
							[
								2931,
								2941
							],
							[
								3296,
								3307
							],
							[
								3633,
								3644
							],
							[
								3863,
								3876
							],
							[
								5120,
								5138
							],
							[
								6726,
								6747
							],
							[
								6883,
								6904
							],
							[
								7660,
								7681
							],
							[
								15519,
								15532
							],
							[
								16392,
								16408
							]
						],
						"symlist":
						[
							" ⒡  proxy_callback ( ) ; — function declaration",
							"—Ⓕ– server_new ( ) { … } — function",
							"—Ⓕ– server_init ( ) { … } — function",
							"—Ⓕ– server_free ( ) { … } — function",
							"—Ⓕ– server_mounts ( ) { … } — function",
							"—Ⓕ– server_certificate ( ) { … } — function",
							"—Ⓕ– minnet_server_handler ( ) { … } — function",
							"—Ⓕ– minnet_server_timeout ( ) { … } — function",
							"—Ⓕ– minnet_server_closure ( ) { … } — function",
							"—Ⓕ– minnet_server ( ) { … } — function",
							"—Ⓕ– defprot_callback ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAzwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1438,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server.c",
						"symkeys":
						[
							[
								557,
								571
							],
							[
								2931,
								2941
							],
							[
								3296,
								3307
							],
							[
								3633,
								3644
							],
							[
								3863,
								3876
							],
							[
								5120,
								5138
							],
							[
								6726,
								6747
							],
							[
								6883,
								6904
							],
							[
								7660,
								7681
							],
							[
								15519,
								15532
							],
							[
								16392,
								16408
							]
						],
						"symlist":
						[
							" ⒡  proxy_callback ( ) ; — function declaration",
							"—Ⓕ– server_new ( ) { … } — function",
							"—Ⓕ– server_init ( ) { … } — function",
							"—Ⓕ– server_free ( ) { … } — function",
							"—Ⓕ– server_mounts ( ) { … } — function",
							"—Ⓕ– server_certificate ( ) { … } — function",
							"—Ⓕ– minnet_server_handler ( ) { … } — function",
							"—Ⓕ– minnet_server_timeout ( ) { … } — function",
							"—Ⓕ– minnet_server_closure ( ) { … } — function",
							"—Ⓕ– minnet_server ( ) { … } — function",
							"—Ⓕ– defprot_callback ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA3AgAAICDikqEgIHByb3h5X2NhbGxiYWNrICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgc2VydmVyX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXJ2ZXJfbW91bnRzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVyX2NlcnRpZmljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl90aW1lb3V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl9jbG9zdXJlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGRlZnByb3RfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAADPAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1439,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server.c",
						"symkeys":
						[
							[
								557,
								571
							],
							[
								2931,
								2941
							],
							[
								3296,
								3307
							],
							[
								3633,
								3644
							],
							[
								3863,
								3876
							],
							[
								5120,
								5138
							],
							[
								6726,
								6747
							],
							[
								6883,
								6904
							],
							[
								7660,
								7681
							],
							[
								15519,
								15532
							],
							[
								16392,
								16408
							]
						],
						"symlist":
						[
							" ⒡  proxy_callback ( ) ; — function declaration",
							"—Ⓕ– server_new ( ) { … } — function",
							"—Ⓕ– server_init ( ) { … } — function",
							"—Ⓕ– server_free ( ) { … } — function",
							"—Ⓕ– server_mounts ( ) { … } — function",
							"—Ⓕ– server_certificate ( ) { … } — function",
							"—Ⓕ– minnet_server_handler ( ) { … } — function",
							"—Ⓕ– minnet_server_timeout ( ) { … } — function",
							"—Ⓕ– minnet_server_closure ( ) { … } — function",
							"—Ⓕ– minnet_server ( ) { … } — function",
							"—Ⓕ– defprot_callback ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA3AgAAICDikqEgIHByb3h5X2NhbGxiYWNrICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgc2VydmVyX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXJ2ZXJfbW91bnRzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVyX2NlcnRpZmljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl90aW1lb3V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl9jbG9zdXJlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGRlZnByb3RfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAADPAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1440,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server.c",
						"symkeys":
						[
							[
								557,
								571
							],
							[
								2931,
								2941
							],
							[
								3296,
								3307
							],
							[
								3633,
								3644
							],
							[
								3863,
								3876
							],
							[
								5120,
								5138
							],
							[
								6726,
								6747
							],
							[
								6883,
								6904
							],
							[
								7660,
								7681
							],
							[
								15531,
								15544
							],
							[
								16404,
								16420
							]
						],
						"symlist":
						[
							" ⒡  proxy_callback ( ) ; — function declaration",
							"—Ⓕ– server_new ( ) { … } — function",
							"—Ⓕ– server_init ( ) { … } — function",
							"—Ⓕ– server_free ( ) { … } — function",
							"—Ⓕ– server_mounts ( ) { … } — function",
							"—Ⓕ– server_certificate ( ) { … } — function",
							"—Ⓕ– minnet_server_handler ( ) { … } — function",
							"—Ⓕ– minnet_server_timeout ( ) { … } — function",
							"—Ⓕ– minnet_server_closure ( ) { … } — function",
							"—Ⓕ– minnet_server ( ) { … } — function",
							"—Ⓕ– defprot_callback ( ) { … } — function"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA3AgAAICDikqEgIHByb3h5X2NhbGxiYWNrICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgc2VydmVyX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXJ2ZXJfbW91bnRzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVyX2NlcnRpZmljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl90aW1lb3V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl9jbG9zdXJlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGRlZnByb3RfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAADPAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANwIAACAg4pKhICBwcm94eV9jYWxsYmFjayAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4oCU4pK74oCTIHNlcnZlcl9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXJ2ZXJfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlcl9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVyX21vdW50cyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlcl9jZXJ0aWZpY2F0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9zZXJ2ZXJfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9zZXJ2ZXJfdGltZW91dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9zZXJ2ZXJfY2xvc3VyZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9zZXJ2ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBkZWZwcm90X2NhbGxiYWNrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAzwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1441,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server.c",
						"symkeys":
						[
							[
								557,
								571
							],
							[
								2931,
								2941
							],
							[
								3296,
								3307
							],
							[
								3633,
								3644
							],
							[
								3863,
								3876
							],
							[
								5120,
								5138
							],
							[
								6726,
								6747
							],
							[
								6883,
								6904
							],
							[
								7660,
								7681
							],
							[
								15531,
								15544
							],
							[
								16404,
								16420
							]
						],
						"symlist":
						[
							" ⒡  proxy_callback ( ) ; — function declaration",
							"—Ⓕ– server_new ( ) { … } — function",
							"—Ⓕ– server_init ( ) { … } — function",
							"—Ⓕ– server_free ( ) { … } — function",
							"—Ⓕ– server_mounts ( ) { … } — function",
							"—Ⓕ– server_certificate ( ) { … } — function",
							"—Ⓕ– minnet_server_handler ( ) { … } — function",
							"—Ⓕ– minnet_server_timeout ( ) { … } — function",
							"—Ⓕ– minnet_server_closure ( ) { … } — function",
							"—Ⓕ– minnet_server ( ) { … } — function",
							"—Ⓕ– defprot_callback ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA3AgAAICDikqEgIHByb3h5X2NhbGxiYWNrICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgc2VydmVyX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXJ2ZXJfbW91bnRzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVyX2NlcnRpZmljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl90aW1lb3V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl9jbG9zdXJlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGRlZnByb3RfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAADPAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1442,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server.c",
						"symkeys":
						[
							[
								557,
								571
							],
							[
								2931,
								2941
							],
							[
								3296,
								3307
							],
							[
								3633,
								3644
							],
							[
								3863,
								3876
							],
							[
								5120,
								5138
							],
							[
								6726,
								6747
							],
							[
								6883,
								6904
							],
							[
								7660,
								7681
							],
							[
								15531,
								15544
							],
							[
								16404,
								16420
							]
						],
						"symlist":
						[
							" ⒡  proxy_callback ( ) ; — function declaration",
							"—Ⓕ– server_new ( ) { … } — function",
							"—Ⓕ– server_init ( ) { … } — function",
							"—Ⓕ– server_free ( ) { … } — function",
							"—Ⓕ– server_mounts ( ) { … } — function",
							"—Ⓕ– server_certificate ( ) { … } — function",
							"—Ⓕ– minnet_server_handler ( ) { … } — function",
							"—Ⓕ– minnet_server_timeout ( ) { … } — function",
							"—Ⓕ– minnet_server_closure ( ) { … } — function",
							"—Ⓕ– minnet_server ( ) { … } — function",
							"—Ⓕ– defprot_callback ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA3AgAAICDikqEgIHByb3h5X2NhbGxiYWNrICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgc2VydmVyX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXJ2ZXJfbW91bnRzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVyX2NlcnRpZmljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl90aW1lb3V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl9jbG9zdXJlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGRlZnByb3RfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAADPAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1443,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client-ws.js",
						"symkeys":
						[
							[
								450,
								472
							],
							[
								538,
								544
							],
							[
								842,
								860
							],
							[
								1083,
								1102
							],
							[
								1179,
								1197
							],
							[
								1275,
								1293
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"onConnect(ws, req)",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA3AgAAICDikqEgIHByb3h5X2NhbGxiYWNrICggKSA7IOKAlCBmdW5jdGlvbiBkZWNsYXJhdGlvbgrigJTikrvigJMgc2VydmVyX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHNlcnZlcl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVyX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXJ2ZXJfbW91bnRzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc2VydmVyX2NlcnRpZmljYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl90aW1lb3V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlcl9jbG9zdXJlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X3NlcnZlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGRlZnByb3RfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAABtAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1444,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-server-ws.js",
						"symkeys":
						[
							[
								237,
								261
							],
							[
								324,
								342
							],
							[
								417,
								436
							],
							[
								503,
								521
							],
							[
								587,
								605
							],
							[
								747,
								769
							]
						],
						"symlist":
						[
							"function TestClient(url)",
							"onConnect(ws, req)",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABtAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uRXJyb3Iod3MsIGVycm9yKQogIG9uTWVzc2FnZSh3cywgbXNnKQAAAAAAAAAAdAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1445,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/spawn.js",
						"symkeys":
						[
							[
								131,
								145
							],
							[
								190,
								205
							],
							[
								335,
								374
							],
							[
								541,
								546
							],
							[
								810,
								851
							],
							[
								905,
								917
							],
							[
								959,
								972
							],
							[
								999,
								1014
							]
						],
						"symlist":
						[
							"getexe = () =>",
							"thisdir = () =>",
							" function spawn(script, args = [], log)",
							"() =>",
							" function wait4(pid, status, options = 0)",
							"array: st =>",
							"object: st =>",
							"function: st =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB0AAAAVGVzdENsaWVudCh1cmwpCiAgb25Db25uZWN0KHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uRXJyb3Iod3MsIGVycm9yKQogIG9uTWVzc2FnZSh3cywgbXNnKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1446,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
						"symkeys":
						[
							[
								571,
								589
							],
							[
								1639,
								1681
							],
							[
								2668,
								2695
							],
							[
								3145,
								3178
							],
							[
								3443,
								3463
							],
							[
								3792,
								3815
							],
							[
								4033,
								4065
							],
							[
								4218,
								4241
							],
							[
								4304,
								4329
							],
							[
								4390,
								4411
							],
							[
								4543,
								4566
							]
						],
						"symlist":
						[
							"log = (...args) =>",
							" function MakeCert(sslCert, sslPrivateKey)",
							" (level, message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onConnect: (ws, req) =>",
							"onClose: (ws, status, reason) =>",
							"onError: (ws, error) =>",
							"onHttp: (ws, req, rsp) =>",
							"onFd: (fd, rd, wr) =>",
							"onMessage: (ws, msg) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAICBnZXRleGUgPSAoKSA9PgogIHRoaXNkaXIgPSAoKSA9PgogIHNwYXduKHNjcmlwdCwgYXJncyA9IFtdLCBsb2cpCigpID0+CiAgd2FpdDQocGlkLCBzdGF0dXMsIG9wdGlvbnMgPSAwKQogIGFycmF5OiBzdCA9PgogIG9iamVjdDogc3QgPT4KICBmdW5jdGlvbjogc3QgPT4AAAAAAAAAACYBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1447,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
						"symkeys":
						[
							[
								571,
								589
							],
							[
								1639,
								1681
							],
							[
								2668,
								2695
							],
							[
								3145,
								3178
							],
							[
								3443,
								3463
							],
							[
								3792,
								3815
							],
							[
								4033,
								4065
							],
							[
								4218,
								4241
							],
							[
								4304,
								4329
							],
							[
								4390,
								4411
							],
							[
								4543,
								4566
							]
						],
						"symlist":
						[
							"log = (...args) =>",
							" function MakeCert(sslCert, sslPrivateKey)",
							" (level, message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onConnect: (ws, req) =>",
							"onClose: (ws, status, reason) =>",
							"onError: (ws, error) =>",
							"onHttp: (ws, req, rsp) =>",
							"onFd: (fd, rd, wr) =>",
							"onMessage: (ws, msg) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAQAAICBsb2cgPSAoLi4uYXJncykgPT4KTWFrZUNlcnQoc3NsQ2VydCwgc3NsUHJpdmF0ZUtleSkKICAobGV2ZWwsIG1lc3NhZ2UpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCipnZW5lcmF0b3IocmVxLCByZXMpCiAgb25Db25uZWN0OiAod3MsIHJlcSkgPT4KICBvbkNsb3NlOiAod3MsIHN0YXR1cywgcmVhc29uKSA9PgogIG9uRXJyb3I6ICh3cywgZXJyb3IpID0+CiAgb25IdHRwOiAod3MsIHJlcSwgcnNwKSA9PgogIG9uRmQ6IChmZCwgcmQsIHdyKSA9PgogIG9uTWVzc2FnZTogKHdzLCBtc2cpID0+AAAAAAAAAAAmAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1448,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
						"symkeys":
						[
							[
								571,
								589
							],
							[
								1639,
								1681
							],
							[
								2668,
								2695
							],
							[
								3145,
								3178
							],
							[
								3443,
								3463
							],
							[
								3792,
								3815
							],
							[
								4033,
								4065
							],
							[
								4218,
								4241
							],
							[
								4304,
								4329
							],
							[
								4390,
								4411
							],
							[
								4543,
								4566
							]
						],
						"symlist":
						[
							"log = (...args) =>",
							" function MakeCert(sslCert, sslPrivateKey)",
							" (level, message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onConnect: (ws, req) =>",
							"onClose: (ws, status, reason) =>",
							"onError: (ws, error) =>",
							"onHttp: (ws, req, rsp) =>",
							"onFd: (fd, rd, wr) =>",
							"onMessage: (ws, msg) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAQAAICBsb2cgPSAoLi4uYXJncykgPT4KTWFrZUNlcnQoc3NsQ2VydCwgc3NsUHJpdmF0ZUtleSkKICAobGV2ZWwsIG1lc3NhZ2UpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCipnZW5lcmF0b3IocmVxLCByZXMpCiAgb25Db25uZWN0OiAod3MsIHJlcSkgPT4KICBvbkNsb3NlOiAod3MsIHN0YXR1cywgcmVhc29uKSA9PgogIG9uRXJyb3I6ICh3cywgZXJyb3IpID0+CiAgb25IdHRwOiAod3MsIHJlcSwgcnNwKSA9PgogIG9uRmQ6IChmZCwgcmQsIHdyKSA9PgogIG9uTWVzc2FnZTogKHdzLCBtc2cpID0+AAAAAAAAAAAmAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1449,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client-ws.js",
						"symkeys":
						[
							[
								450,
								472
							],
							[
								538,
								544
							],
							[
								842,
								860
							],
							[
								1083,
								1102
							],
							[
								1179,
								1197
							],
							[
								1275,
								1293
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"onConnect(ws, req)",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAQAAICBsb2cgPSAoLi4uYXJncykgPT4KTWFrZUNlcnQoc3NsQ2VydCwgc3NsUHJpdmF0ZUtleSkKICAobGV2ZWwsIG1lc3NhZ2UpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCipnZW5lcmF0b3IocmVxLCByZXMpCiAgb25Db25uZWN0OiAod3MsIHJlcSkgPT4KICBvbkNsb3NlOiAod3MsIHN0YXR1cywgcmVhc29uKSA9PgogIG9uRXJyb3I6ICh3cywgZXJyb3IpID0+CiAgb25IdHRwOiAod3MsIHJlcSwgcnNwKSA9PgogIG9uRmQ6IChmZCwgcmQsIHdyKSA9PgogIG9uTWVzc2FnZTogKHdzLCBtc2cpID0+AAAAAAAAAABtAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1450,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
						"symkeys":
						[
							[
								571,
								589
							],
							[
								1639,
								1681
							],
							[
								2668,
								2695
							],
							[
								3145,
								3178
							],
							[
								3443,
								3463
							],
							[
								3792,
								3815
							],
							[
								4033,
								4065
							],
							[
								4218,
								4241
							],
							[
								4304,
								4329
							],
							[
								4390,
								4411
							],
							[
								4543,
								4566
							]
						],
						"symlist":
						[
							"log = (...args) =>",
							" function MakeCert(sslCert, sslPrivateKey)",
							" (level, message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onConnect: (ws, req) =>",
							"onClose: (ws, status, reason) =>",
							"onError: (ws, error) =>",
							"onHttp: (ws, req, rsp) =>",
							"onFd: (fd, rd, wr) =>",
							"onMessage: (ws, msg) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABtAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uRXJyb3Iod3MsIGVycm9yKQogIG9uTWVzc2FnZSh3cywgbXNnKQAAAAAAAAAAJgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1451,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAQAAICBsb2cgPSAoLi4uYXJncykgPT4KTWFrZUNlcnQoc3NsQ2VydCwgc3NsUHJpdmF0ZUtleSkKICAobGV2ZWwsIG1lc3NhZ2UpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCipnZW5lcmF0b3IocmVxLCByZXMpCiAgb25Db25uZWN0OiAod3MsIHJlcSkgPT4KICBvbkNsb3NlOiAod3MsIHN0YXR1cywgcmVhc29uKSA9PgogIG9uRXJyb3I6ICh3cywgZXJyb3IpID0+CiAgb25IdHRwOiAod3MsIHJlcSwgcnNwKSA9PgogIG9uRmQ6IChmZCwgcmQsIHdyKSA9PgogIG9uTWVzc2FnZTogKHdzLCBtc2cpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1452,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1453,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client-http.js",
						"symkeys":
						[
							[
								469,
								497
							],
							[
								563,
								569
							],
							[
								931,
								948
							],
							[
								1114,
								1132
							],
							[
								1714,
								1755
							],
							[
								1806,
								1812
							]
						],
						"symlist":
						[
							"async function main(...args)",
							"arg =>",
							"onHttp(req, resp)",
							"onMessage(...args)",
							" function terminate(code = 0, ex = true)",
							" st =>"
						]
					},
					"AQAAAAAAAAAAAAAAagAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1454,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABqAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25IdHRwKHJlcSwgcmVzcCkKICBvbk1lc3NhZ2UoLi4uYXJncykKICB0ZXJtaW5hdGUoY29kZSA9IDAsIGV4ID0gdHJ1ZSkKICBzdCA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1455,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1456,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client-http.js",
						"symkeys":
						[
							[
								469,
								497
							],
							[
								563,
								569
							],
							[
								931,
								948
							],
							[
								1114,
								1132
							],
							[
								1714,
								1755
							],
							[
								1806,
								1812
							]
						],
						"symlist":
						[
							"async function main(...args)",
							"arg =>",
							"onHttp(req, resp)",
							"onMessage(...args)",
							" function terminate(code = 0, ex = true)",
							" st =>"
						]
					},
					"AQAAAAAAAAAAAAAAagAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1457,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABqAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25IdHRwKHJlcSwgcmVzcCkKICBvbk1lc3NhZ2UoLi4uYXJncykKICB0ZXJtaW5hdGUoY29kZSA9IDAsIGV4ID0gdHJ1ZSkKICBzdCA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1458,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1459,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1460,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1461,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1462,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								503,
								525
							],
							[
								591,
								597
							],
							[
								1168,
								1184
							],
							[
								1318,
								1336
							],
							[
								1638,
								1644
							],
							[
								1993,
								1998
							],
							[
								2243,
								2249
							],
							[
								2696,
								2702
							],
							[
								2851,
								2885
							],
							[
								2998,
								3016
							],
							[
								3111,
								3129
							],
							[
								3724,
								3765
							],
							[
								3838,
								3844
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"async function()",
							"onConnect(ws, req)",
							" () =>",
							"() =>",
							" () =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							" function terminate(code = 0, ex = true)",
							" st =>"
						]
					},
					"AQAAAAAAAAAAAAAA0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1463,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								503,
								525
							],
							[
								591,
								597
							],
							[
								1168,
								1184
							],
							[
								1318,
								1336
							],
							[
								1638,
								1644
							],
							[
								1993,
								1998
							],
							[
								2243,
								2249
							],
							[
								2696,
								2702
							],
							[
								2851,
								2885
							],
							[
								2998,
								3016
							],
							[
								3111,
								3129
							],
							[
								3724,
								3765
							],
							[
								3838,
								3844
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"async function()",
							"onConnect(ws, req)",
							" () =>",
							"() =>",
							" () =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							" function terminate(code = 0, ex = true)",
							" st =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADQAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgZnVuY3Rpb24oKQogIG9uQ29ubmVjdCh3cywgcmVxKQogICgpID0+CigpID0+CiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICB0ZXJtaW5hdGUoY29kZSA9IDAsIGV4ID0gdHJ1ZSkKICBzdCA9PgAAAAAAAAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAAAgIG1haW4oLi4uYXJncykKICBhcmcgPT4KICBmdW5jdGlvbigpCiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KKCkgPT4KICAoKSA9PgogICgpID0+CiAgb25DbG9zZSh3cywgc3RhdHVzLCByZWFzb24sIGVycm9yKQogIG9uRXJyb3Iod3MsIGVycm9yKQogIG9uTWVzc2FnZSh3cywgbXNnKQogIHRlcm1pbmF0ZShjb2RlID0gMCwgZXggPSB0cnVlKQogIHN0ID0+AAAAAAAAAADQAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1464,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client-http.js",
						"symkeys":
						[
							[
								469,
								497
							],
							[
								563,
								569
							],
							[
								931,
								948
							],
							[
								1114,
								1132
							],
							[
								1714,
								1755
							],
							[
								1806,
								1812
							]
						],
						"symlist":
						[
							"async function main(...args)",
							"arg =>",
							"onHttp(req, resp)",
							"onMessage(...args)",
							" function terminate(code = 0, ex = true)",
							" st =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADQAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgZnVuY3Rpb24oKQogIG9uQ29ubmVjdCh3cywgcmVxKQogICgpID0+CigpID0+CiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICB0ZXJtaW5hdGUoY29kZSA9IDAsIGV4ID0gdHJ1ZSkKICBzdCA9PgAAAAAAAAAAagAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1465,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAABqAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgb25IdHRwKHJlcSwgcmVzcCkKICBvbk1lc3NhZ2UoLi4uYXJncykKICB0ZXJtaW5hdGUoY29kZSA9IDAsIGV4ID0gdHJ1ZSkKICBzdCA9PgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1466,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1467,
					3,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1468,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-server-ws.js",
						"symkeys":
						[
							[
								237,
								261
							],
							[
								324,
								342
							],
							[
								417,
								436
							],
							[
								503,
								521
							],
							[
								587,
								605
							],
							[
								747,
								769
							]
						],
						"symlist":
						[
							"function TestClient(url)",
							"onConnect(ws, req)",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"function main(...args)"
						]
					},
					"AQAAAAAAAAAAAAAAdAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1469,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
						"symkeys":
						[
							[
								571,
								589
							],
							[
								1639,
								1681
							],
							[
								2668,
								2695
							],
							[
								3145,
								3178
							],
							[
								3443,
								3463
							],
							[
								3792,
								3815
							],
							[
								4033,
								4065
							],
							[
								4218,
								4241
							],
							[
								4304,
								4329
							],
							[
								4390,
								4411
							],
							[
								4543,
								4566
							]
						],
						"symlist":
						[
							"log = (...args) =>",
							" function MakeCert(sslCert, sslPrivateKey)",
							" (level, message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onConnect: (ws, req) =>",
							"onClose: (ws, status, reason) =>",
							"onError: (ws, error) =>",
							"onHttp: (ws, req, rsp) =>",
							"onFd: (fd, rd, wr) =>",
							"onMessage: (ws, msg) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB0AAAAVGVzdENsaWVudCh1cmwpCiAgb25Db25uZWN0KHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uRXJyb3Iod3MsIGVycm9yKQogIG9uTWVzc2FnZSh3cywgbXNnKQogIG1haW4oLi4uYXJncykAAAAAAAAAACYBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1470,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/spawn.js",
						"symkeys":
						[
							[
								131,
								145
							],
							[
								190,
								205
							],
							[
								335,
								374
							],
							[
								541,
								546
							],
							[
								810,
								851
							],
							[
								905,
								917
							],
							[
								959,
								972
							],
							[
								999,
								1014
							]
						],
						"symlist":
						[
							"getexe = () =>",
							"thisdir = () =>",
							" function spawn(script, args = [], log)",
							"() =>",
							" function wait4(pid, status, options = 0)",
							"array: st =>",
							"object: st =>",
							"function: st =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAQAAICBsb2cgPSAoLi4uYXJncykgPT4KTWFrZUNlcnQoc3NsQ2VydCwgc3NsUHJpdmF0ZUtleSkKICAobGV2ZWwsIG1lc3NhZ2UpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCipnZW5lcmF0b3IocmVxLCByZXMpCiAgb25Db25uZWN0OiAod3MsIHJlcSkgPT4KICBvbkNsb3NlOiAod3MsIHN0YXR1cywgcmVhc29uKSA9PgogIG9uRXJyb3I6ICh3cywgZXJyb3IpID0+CiAgb25IdHRwOiAod3MsIHJlcSwgcnNwKSA9PgogIG9uRmQ6IChmZCwgcmQsIHdyKSA9PgogIG9uTWVzc2FnZTogKHdzLCBtc2cpID0+AAAAAAAAAACbAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1471,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								503,
								525
							],
							[
								591,
								597
							],
							[
								1168,
								1184
							],
							[
								1318,
								1336
							],
							[
								1638,
								1644
							],
							[
								1993,
								1998
							],
							[
								2243,
								2249
							],
							[
								2696,
								2702
							],
							[
								2851,
								2885
							],
							[
								2998,
								3016
							],
							[
								3111,
								3129
							],
							[
								3724,
								3765
							],
							[
								3838,
								3844
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"async function()",
							"onConnect(ws, req)",
							" () =>",
							"() =>",
							" () =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							" function terminate(code = 0, ex = true)",
							" st =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAICBnZXRleGUgPSAoKSA9PgogIHRoaXNkaXIgPSAoKSA9PgogIHNwYXduKHNjcmlwdCwgYXJncyA9IFtdLCBsb2cpCigpID0+CiAgd2FpdDQocGlkLCBzdGF0dXMsIG9wdGlvbnMgPSAwKQogIGFycmF5OiBzdCA9PgogIG9iamVjdDogc3QgPT4KICBmdW5jdGlvbjogc3QgPT4AAAAAAAAAANAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1472,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
						"symkeys":
						[
							[
								503,
								525
							],
							[
								591,
								597
							],
							[
								1156,
								1172
							],
							[
								1306,
								1324
							],
							[
								1626,
								1632
							],
							[
								1981,
								1986
							],
							[
								2231,
								2237
							],
							[
								2684,
								2690
							],
							[
								2839,
								2873
							],
							[
								2986,
								3004
							],
							[
								3099,
								3117
							],
							[
								3712,
								3753
							],
							[
								3826,
								3832
							]
						],
						"symlist":
						[
							"function main(...args)",
							"arg =>",
							"async function()",
							"onConnect(ws, req)",
							" () =>",
							"() =>",
							" () =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							" function terminate(code = 0, ex = true)",
							" st =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADQAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgZnVuY3Rpb24oKQogIG9uQ29ubmVjdCh3cywgcmVxKQogICgpID0+CigpID0+CiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICB0ZXJtaW5hdGUoY29kZSA9IDAsIGV4ID0gdHJ1ZSkKICBzdCA9PgAAAAAAAAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAAAgIG1haW4oLi4uYXJncykKICBhcmcgPT4KICBmdW5jdGlvbigpCiAgb25Db25uZWN0KHdzLCByZXEpCiAgKCkgPT4KKCkgPT4KICAoKSA9PgogICgpID0+CiAgb25DbG9zZSh3cywgc3RhdHVzLCByZWFzb24sIGVycm9yKQogIG9uRXJyb3Iod3MsIGVycm9yKQogIG9uTWVzc2FnZSh3cywgbXNnKQogIHRlcm1pbmF0ZShjb2RlID0gMCwgZXggPSB0cnVlKQogIHN0ID0+AAAAAAAAAADQAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1473,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
						"symkeys":
						[
							[
								571,
								589
							],
							[
								1639,
								1681
							],
							[
								2668,
								2695
							],
							[
								3145,
								3178
							],
							[
								3443,
								3463
							],
							[
								3792,
								3815
							],
							[
								4033,
								4065
							],
							[
								4218,
								4241
							],
							[
								4304,
								4329
							],
							[
								4390,
								4411
							],
							[
								4543,
								4566
							]
						],
						"symlist":
						[
							"log = (...args) =>",
							" function MakeCert(sslCert, sslPrivateKey)",
							" (level, message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onConnect: (ws, req) =>",
							"onClose: (ws, status, reason) =>",
							"onError: (ws, error) =>",
							"onHttp: (ws, req, rsp) =>",
							"onFd: (fd, rd, wr) =>",
							"onMessage: (ws, msg) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADQAAAAICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CiAgZnVuY3Rpb24oKQogIG9uQ29ubmVjdCh3cywgcmVxKQogICgpID0+CigpID0+CiAgKCkgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvbkVycm9yKHdzLCBlcnJvcikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICB0ZXJtaW5hdGUoY29kZSA9IDAsIGV4ID0gdHJ1ZSkKICBzdCA9PgAAAAAAAAAAJgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1474,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-server-ws.js",
						"symkeys":
						[
							[
								237,
								261
							],
							[
								324,
								342
							],
							[
								417,
								436
							],
							[
								503,
								521
							],
							[
								587,
								605
							],
							[
								747,
								769
							]
						],
						"symlist":
						[
							"function TestClient(url)",
							"onConnect(ws, req)",
							"onClose(ws, reason)",
							"onError(ws, error)",
							"onMessage(ws, msg)",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAQAAICBsb2cgPSAoLi4uYXJncykgPT4KTWFrZUNlcnQoc3NsQ2VydCwgc3NsUHJpdmF0ZUtleSkKICAobGV2ZWwsIG1lc3NhZ2UpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCipnZW5lcmF0b3IocmVxLCByZXMpCiAgb25Db25uZWN0OiAod3MsIHJlcSkgPT4KICBvbkNsb3NlOiAod3MsIHN0YXR1cywgcmVhc29uKSA9PgogIG9uRXJyb3I6ICh3cywgZXJyb3IpID0+CiAgb25IdHRwOiAod3MsIHJlcSwgcnNwKSA9PgogIG9uRmQ6IChmZCwgcmQsIHdyKSA9PgogIG9uTWVzc2FnZTogKHdzLCBtc2cpID0+AAAAAAAAAAB0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1475,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB0AAAAVGVzdENsaWVudCh1cmwpCiAgb25Db25uZWN0KHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uRXJyb3Iod3MsIGVycm9yKQogIG9uTWVzc2FnZSh3cywgbXNnKQogIG1haW4oLi4uYXJncykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1476,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/spawn.js",
						"symkeys":
						[
							[
								131,
								145
							],
							[
								190,
								205
							],
							[
								335,
								374
							],
							[
								541,
								546
							],
							[
								810,
								851
							],
							[
								905,
								917
							],
							[
								959,
								972
							],
							[
								999,
								1014
							]
						],
						"symlist":
						[
							"getexe = () =>",
							"thisdir = () =>",
							" function spawn(script, args = [], log)",
							"() =>",
							" function wait4(pid, status, options = 0)",
							"array: st =>",
							"object: st =>",
							"function: st =>"
						]
					},
					"AQAAAAAAAAAAAAAAmwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1477,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/spawn.js",
						"symkeys":
						[
							[
								131,
								145
							],
							[
								190,
								205
							],
							[
								335,
								374
							],
							[
								541,
								546
							],
							[
								810,
								851
							],
							[
								905,
								917
							],
							[
								959,
								972
							],
							[
								999,
								1014
							]
						],
						"symlist":
						[
							"getexe = () =>",
							"thisdir = () =>",
							" function spawn(script, args = [], log)",
							"() =>",
							" function wait4(pid, status, options = 0)",
							"array: st =>",
							"object: st =>",
							"function: st =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAICBnZXRleGUgPSAoKSA9PgogIHRoaXNkaXIgPSAoKSA9PgogIHNwYXduKHNjcmlwdCwgYXJncyA9IFtdLCBsb2cpCigpID0+CiAgd2FpdDQocGlkLCBzdGF0dXMsIG9wdGlvbnMgPSAwKQogIGFycmF5OiBzdCA9PgogIG9iamVjdDogc3QgPT4KICBmdW5jdGlvbjogc3QgPT4AAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1478,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/spawn.js",
						"symkeys":
						[
							[
								131,
								145
							],
							[
								190,
								205
							],
							[
								335,
								374
							],
							[
								541,
								546
							],
							[
								810,
								851
							],
							[
								905,
								917
							],
							[
								959,
								972
							],
							[
								999,
								1014
							]
						],
						"symlist":
						[
							"getexe = () =>",
							"thisdir = () =>",
							" function spawn(script, args = [], log)",
							"() =>",
							" function wait4(pid, status, options = 0)",
							"array: st =>",
							"object: st =>",
							"function: st =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAICBnZXRleGUgPSAoKSA9PgogIHRoaXNkaXIgPSAoKSA9PgogIHNwYXduKHNjcmlwdCwgYXJncyA9IFtdLCBsb2cpCigpID0+CiAgd2FpdDQocGlkLCBzdGF0dXMsIG9wdGlvbnMgPSAwKQogIGFycmF5OiBzdCA9PgogIG9iamVjdDogc3QgPT4KICBmdW5jdGlvbjogc3QgPT4AAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1479,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/log.js",
						"symkeys":
						[
							[
								235,
								240
							],
							[
								480,
								491
							],
							[
								633,
								648
							],
							[
								665,
								669
							],
							[
								702,
								723
							],
							[
								741,
								747
							],
							[
								1040,
								1055
							],
							[
								1295,
								1336
							],
							[
								1428,
								1444
							],
							[
								1636,
								1641
							],
							[
								1741,
								1757
							],
							[
								1960,
								1973
							]
						],
						"symlist":
						[
							"() =>",
							"(acc, n) =>",
							"isDebug = () =>",
							"a =>",
							"DebugCallback = fn =>",
							" () =>",
							"(level, msg) =>",
							"SetLog = (name, maxLevel = LLL_CLIENT) =>",
							" (level, msg) =>",
							"() =>",
							"({ Console }) =>",
							" (...args) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAICBnZXRleGUgPSAoKSA9PgogIHRoaXNkaXIgPSAoKSA9PgogIHNwYXduKHNjcmlwdCwgYXJncyA9IFtdLCBsb2cpCigpID0+CiAgd2FpdDQocGlkLCBzdGF0dXMsIG9wdGlvbnMgPSAwKQogIGFycmF5OiBzdCA9PgogIG9iamVjdDogc3QgPT4KICBmdW5jdGlvbjogc3QgPT4AAAAAAAAAALoAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1480,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
						"symkeys":
						[
							[
								571,
								589
							],
							[
								1639,
								1681
							],
							[
								2668,
								2695
							],
							[
								3145,
								3178
							],
							[
								3443,
								3463
							],
							[
								3792,
								3815
							],
							[
								4033,
								4065
							],
							[
								4218,
								4241
							],
							[
								4304,
								4329
							],
							[
								4390,
								4411
							],
							[
								4543,
								4566
							]
						],
						"symlist":
						[
							"log = (...args) =>",
							" function MakeCert(sslCert, sslPrivateKey)",
							" (level, message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onConnect: (ws, req) =>",
							"onClose: (ws, status, reason) =>",
							"onError: (ws, error) =>",
							"onHttp: (ws, req, rsp) =>",
							"onFd: (fd, rd, wr) =>",
							"onMessage: (ws, msg) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC6AAAAKCkgPT4KKGFjYywgbikgPT4KICBpc0RlYnVnID0gKCkgPT4KICBhID0+CkRlYnVnQ2FsbGJhY2sgPSBmbiA9PgogICgpID0+CihsZXZlbCwgbXNnKSA9PgpTZXRMb2cgPSAobmFtZSwgbWF4TGV2ZWwgPSBMTExfQ0xJRU5UKSA9PgogIChsZXZlbCwgbXNnKSA9PgooKSA9PgooeyBDb25zb2xlIH0pID0+CiAgKC4uLmFyZ3MpID0+AAAAAAAAAAAmAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1481,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/spawn.js",
						"symkeys":
						[
							[
								131,
								145
							],
							[
								190,
								205
							],
							[
								335,
								374
							],
							[
								541,
								546
							],
							[
								810,
								851
							],
							[
								905,
								917
							],
							[
								959,
								972
							],
							[
								999,
								1014
							]
						],
						"symlist":
						[
							"getexe = () =>",
							"thisdir = () =>",
							" function spawn(script, args = [], log)",
							"() =>",
							" function wait4(pid, status, options = 0)",
							"array: st =>",
							"object: st =>",
							"function: st =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAQAAICBsb2cgPSAoLi4uYXJncykgPT4KTWFrZUNlcnQoc3NsQ2VydCwgc3NsUHJpdmF0ZUtleSkKICAobGV2ZWwsIG1lc3NhZ2UpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCipnZW5lcmF0b3IocmVxLCByZXMpCiAgb25Db25uZWN0OiAod3MsIHJlcSkgPT4KICBvbkNsb3NlOiAod3MsIHN0YXR1cywgcmVhc29uKSA9PgogIG9uRXJyb3I6ICh3cywgZXJyb3IpID0+CiAgb25IdHRwOiAod3MsIHJlcSwgcnNwKSA9PgogIG9uRmQ6IChmZCwgcmQsIHdyKSA9PgogIG9uTWVzc2FnZTogKHdzLCBtc2cpID0+AAAAAAAAAACbAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1482,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
						"symkeys":
						[
							[
								571,
								589
							],
							[
								1639,
								1681
							],
							[
								2668,
								2695
							],
							[
								3145,
								3178
							],
							[
								3443,
								3463
							],
							[
								3792,
								3815
							],
							[
								4033,
								4065
							],
							[
								4218,
								4241
							],
							[
								4304,
								4329
							],
							[
								4390,
								4411
							],
							[
								4543,
								4566
							]
						],
						"symlist":
						[
							"log = (...args) =>",
							" function MakeCert(sslCert, sslPrivateKey)",
							" (level, message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onConnect: (ws, req) =>",
							"onClose: (ws, status, reason) =>",
							"onError: (ws, error) =>",
							"onHttp: (ws, req, rsp) =>",
							"onFd: (fd, rd, wr) =>",
							"onMessage: (ws, msg) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAICBnZXRleGUgPSAoKSA9PgogIHRoaXNkaXIgPSAoKSA9PgogIHNwYXduKHNjcmlwdCwgYXJncyA9IFtdLCBsb2cpCigpID0+CiAgd2FpdDQocGlkLCBzdGF0dXMsIG9wdGlvbnMgPSAwKQogIGFycmF5OiBzdCA9PgogIG9iamVjdDogc3QgPT4KICBmdW5jdGlvbjogc3QgPT4AAAAAAAAAACYBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1483,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/log.js",
						"symkeys":
						[
							[
								235,
								240
							],
							[
								480,
								491
							],
							[
								633,
								648
							],
							[
								665,
								669
							],
							[
								702,
								723
							],
							[
								741,
								747
							],
							[
								1040,
								1055
							],
							[
								1295,
								1336
							],
							[
								1428,
								1444
							],
							[
								1636,
								1641
							],
							[
								1741,
								1757
							],
							[
								1960,
								1973
							]
						],
						"symlist":
						[
							"() =>",
							"(acc, n) =>",
							"isDebug = () =>",
							"a =>",
							"DebugCallback = fn =>",
							" () =>",
							"(level, msg) =>",
							"SetLog = (name, maxLevel = LLL_CLIENT) =>",
							" (level, msg) =>",
							"() =>",
							"({ Console }) =>",
							" (...args) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAQAAICBsb2cgPSAoLi4uYXJncykgPT4KTWFrZUNlcnQoc3NsQ2VydCwgc3NsUHJpdmF0ZUtleSkKICAobGV2ZWwsIG1lc3NhZ2UpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCipnZW5lcmF0b3IocmVxLCByZXMpCiAgb25Db25uZWN0OiAod3MsIHJlcSkgPT4KICBvbkNsb3NlOiAod3MsIHN0YXR1cywgcmVhc29uKSA9PgogIG9uRXJyb3I6ICh3cywgZXJyb3IpID0+CiAgb25IdHRwOiAod3MsIHJlcSwgcnNwKSA9PgogIG9uRmQ6IChmZCwgcmQsIHdyKSA9PgogIG9uTWVzc2FnZTogKHdzLCBtc2cpID0+AAAAAAAAAAC6AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1484,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
						"symkeys":
						[
							[
								571,
								589
							],
							[
								1639,
								1681
							],
							[
								2668,
								2695
							],
							[
								3145,
								3178
							],
							[
								3443,
								3463
							],
							[
								3792,
								3815
							],
							[
								4033,
								4065
							],
							[
								4218,
								4241
							],
							[
								4304,
								4329
							],
							[
								4390,
								4411
							],
							[
								4543,
								4566
							]
						],
						"symlist":
						[
							"log = (...args) =>",
							" function MakeCert(sslCert, sslPrivateKey)",
							" (level, message) =>",
							"'/404.html': function* (req, res)",
							"*generator(req, res)",
							"onConnect: (ws, req) =>",
							"onClose: (ws, status, reason) =>",
							"onError: (ws, error) =>",
							"onHttp: (ws, req, rsp) =>",
							"onFd: (fd, rd, wr) =>",
							"onMessage: (ws, msg) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC6AAAAKCkgPT4KKGFjYywgbikgPT4KICBpc0RlYnVnID0gKCkgPT4KICBhID0+CkRlYnVnQ2FsbGJhY2sgPSBmbiA9PgogICgpID0+CihsZXZlbCwgbXNnKSA9PgpTZXRMb2cgPSAobmFtZSwgbWF4TGV2ZWwgPSBMTExfQ0xJRU5UKSA9PgogIChsZXZlbCwgbXNnKSA9PgooKSA9PgooeyBDb25zb2xlIH0pID0+CiAgKC4uLmFyZ3MpID0+AAAAAAAAAAAmAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1485,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAAAmAQAAICBsb2cgPSAoLi4uYXJncykgPT4KTWFrZUNlcnQoc3NsQ2VydCwgc3NsUHJpdmF0ZUtleSkKICAobGV2ZWwsIG1lc3NhZ2UpID0+CicvNDA0Lmh0bWwnOiBmdW5jdGlvbioocmVxLCByZXMpCipnZW5lcmF0b3IocmVxLCByZXMpCiAgb25Db25uZWN0OiAod3MsIHJlcSkgPT4KICBvbkNsb3NlOiAod3MsIHN0YXR1cywgcmVhc29uKSA9PgogIG9uRXJyb3I6ICh3cywgZXJyb3IpID0+CiAgb25IdHRwOiAod3MsIHJlcSwgcnNwKSA9PgogIG9uRmQ6IChmZCwgcmQsIHdyKSA9PgogIG9uTWVzc2FnZTogKHdzLCBtc2cpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1486,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1487,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1488,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core/context.c",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1489,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1490,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core/context.c",
						"symkeys":
						[
							[
								1285,
								1299
							],
							[
								1930,
								1953
							],
							[
								2426,
								2456
							],
							[
								6002,
								6036
							],
							[
								6394,
								6411
							],
							[
								8790,
								8803
							],
							[
								9315,
								9333
							],
							[
								15109,
								15202
							],
							[
								41453,
								41473
							],
							[
								41943,
								41965
							],
							[
								42124,
								42150
							],
							[
								42467,
								42485
							],
							[
								43174,
								43198
							],
							[
								43293,
								43318
							],
							[
								44487,
								44501
							],
							[
								47428,
								47447
							],
							[
								59318,
								59348
							],
							[
								59472,
								59506
							],
							[
								59629,
								59652
							],
							[
								59884,
								59903
							]
						],
						"symlist":
						[
							" Ⓜ  LWS_BUILD_HASH … — macro object",
							"—Ⓕ– lws_get_library_version ( ) { … } — function",
							"—Ⓕ– lws_state_notify_protocol_init ( ) { … } — function",
							"—Ⓕ– lws_context_creation_completion_cb ( ) { … } — function",
							"—Ⓕ– lws_system_smd_cb ( ) { … } — function",
							"—Ⓒ– lws_evlib_map { … } ; — type",
							"—Ⓕ– lws_create_context ( ) { … } — function",
							"  ✎  NOTE: we need to init this fields because they may be used in logger when context destroying",
							"—Ⓕ– lws_system_cpd_start ( ) { … } — function",
							"—Ⓕ– lws_system_deferred_cb ( ) { … } — function",
							"—Ⓕ– lws_system_cpd_start_defer ( ) { … } — function",
							"—Ⓕ– lws_system_cpd_set ( ) { … } — function",
							"—Ⓕ– lws_system_cpd_state_get ( ) { … } — function",
							"—Ⓕ– lws_context_is_deprecated ( ) { … } — function",
							"—Ⓕ– lws_pt_destroy ( ) { … } — function",
							"—Ⓕ– lws_context_destroy ( ) { … } — function",
							"—Ⓕ– lws_context_is_being_destroyed ( ) { … } — function",
							"—Ⓕ– lws_system_context_from_system_mgr ( ) { … } — function",
							"—Ⓕ– lws_log_prepend_context ( ) { … } — function",
							"—Ⓕ– lwsl_context_get_cx ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAA7QMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1491,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server-proxy.h",
						"symkeys":
						[
							[
								38,
								59
							],
							[
								237,
								253
							],
							[
								265,
								268
							],
							[
								337,
								361
							],
							[
								369,
								377
							],
							[
								392,
								413
							],
							[
								421,
								424
							],
							[
								488,
								512
							],
							[
								520,
								523
							]
						],
						"symlist":
						[
							"MINNET_SERVER_PROXY_H",
							"proxy_connection",
							"lws",
							"proxy_ws_raw_msg_destroy",
							"lws_dll2",
							"proxy_server_callback",
							"lws",
							"proxy_rawclient_callback",
							"lws"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACpBAAAICDik4IgIExXU19CVUlMRF9IQVNIIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBsd3NfZ2V0X2xpYnJhcnlfdmVyc2lvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGx3c19zdGF0ZV9ub3RpZnlfcHJvdG9jb2xfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGx3c19jb250ZXh0X2NyZWF0aW9uX2NvbXBsZXRpb25fY2IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBsd3Nfc3lzdGVtX3NtZF9jYiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK44oCTIGx3c19ldmxpYl9tYXAgeyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyBsd3NfY3JlYXRlX2NvbnRleHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCiAg4pyOICBOT1RFOiB3ZSBuZWVkIHRvIGluaXQgdGhpcyBmaWVsZHMgYmVjYXVzZSB0aGV5IG1heSBiZSB1c2VkIGluIGxvZ2dlciB3aGVuIGNvbnRleHQgZGVzdHJveWluZwrigJTikrvigJMgbHdzX3N5c3RlbV9jcGRfc3RhcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBsd3Nfc3lzdGVtX2RlZmVycmVkX2NiICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzX3N5c3RlbV9jcGRfc3RhcnRfZGVmZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBsd3Nfc3lzdGVtX2NwZF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBsd3Nfc3lzdGVtX2NwZF9zdGF0ZV9nZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBsd3NfY29udGV4dF9pc19kZXByZWNhdGVkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzX3B0X2Rlc3Ryb3kgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBsd3NfY29udGV4dF9kZXN0cm95ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzX2NvbnRleHRfaXNfYmVpbmdfZGVzdHJveWVkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzX3N5c3RlbV9jb250ZXh0X2Zyb21fc3lzdGVtX21nciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGx3c19sb2dfcHJlcGVuZF9jb250ZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzbF9jb250ZXh0X2dldF9jeCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAJMAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1492,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server-http.h",
						"symkeys":
						[
							[
								37,
								57
							],
							[
								129,
								141
							],
							[
								150,
								163
							],
							[
								210,
								236
							],
							[
								373,
								383
							],
							[
								422,
								432
							],
							[
								569,
								583
							],
							[
								657,
								677
							],
							[
								737,
								754
							],
							[
								797,
								818
							],
							[
								860,
								878
							],
							[
								909,
								932
							],
							[
								972,
								990
							],
							[
								1042,
								1054
							],
							[
								1184,
								1193
							],
							[
								1236,
								1246
							],
							[
								1248,
								1258
							],
							[
								1306,
								1316
							],
							[
								1318,
								1330
							],
							[
								1368,
								1383
							],
							[
								1452,
								1462
							],
							[
								1505,
								1519
							],
							[
								1551,
								1571
							],
							[
								1579,
								1582
							]
						],
						"symlist":
						[
							"MINNET_SERVER_HTTP_H",
							"http_request",
							"http_response",
							"lws_protocol_vhost_options",
							"http_mount",
							"http_mount",
							"lws_http_mount",
							"vhost_options_create",
							"vhost_options_new",
							"vhost_options_fromobj",
							"vhost_options_dump",
							"vhost_options_free_list",
							"vhost_options_free",
							"mount_create",
							"mount_new",
							"http_mount",
							" mount_find",
							"http_mount",
							" mount_find_s",
							" mount_fromvalue",
							" mount_free",
							" mount_is_proxy",
							" http_server_callback",
							"lws"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACTAAAATUlOTkVUX1NFUlZFUl9QUk9YWV9ICiAgcHJveHlfY29ubmVjdGlvbgogIGx3cwogIHByb3h5X3dzX3Jhd19tc2dfZGVzdHJveQogIGx3c19kbGwyCiAgcHJveHlfc2VydmVyX2NhbGxiYWNrCiAgbHdzCiAgcHJveHlfcmF3Y2xpZW50X2NhbGxiYWNrCiAgbHdzAAAAAAAAAACgAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server-proxy.c",
						"symkeys":
						[
							[
								76,
								85
							],
							[
								124,
								135
							],
							[
								153,
								163
							],
							[
								291,
								303
							]
						],
						"symlist":
						[
							"—Ⓒ– proxy_msg { … } ; — type",
							" Ⓣ  proxy_msg_t ; — typedef",
							"—Ⓒ– proxy_conn { … } ; — type",
							" Ⓣ  proxy_conn_t ; — typedef"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACgAQAATUlOTkVUX1NFUlZFUl9IVFRQX0gKICBodHRwX3JlcXVlc3QKICBodHRwX3Jlc3BvbnNlCiAgbHdzX3Byb3RvY29sX3Zob3N0X29wdGlvbnMKICBodHRwX21vdW50CiAgaHR0cF9tb3VudAogIGx3c19odHRwX21vdW50CiAgdmhvc3Rfb3B0aW9uc19jcmVhdGUKICB2aG9zdF9vcHRpb25zX25ldwogIHZob3N0X29wdGlvbnNfZnJvbW9iagogIHZob3N0X29wdGlvbnNfZHVtcAogIHZob3N0X29wdGlvbnNfZnJlZV9saXN0CiAgdmhvc3Rfb3B0aW9uc19mcmVlCiAgbW91bnRfY3JlYXRlCiAgbW91bnRfbmV3CiAgaHR0cF9tb3VudAogIG1vdW50X2ZpbmQKICBodHRwX21vdW50CiAgbW91bnRfZmluZF9zCiAgbW91bnRfZnJvbXZhbHVlCiAgbW91bnRfZnJlZQogIG1vdW50X2lzX3Byb3h5CiAgaHR0cF9zZXJ2ZXJfY2FsbGJhY2sKICBsd3MAAAAAAAAAAHUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "js/rpc.js",
			"settings":
			{
				"buffer_size": 30128,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2391,
					1,
					"insert",
					{
						"characters": "\nuf/"
					},
					"BgAAALRbAAAAAAAAtVsAAAAAAAAAAAAAtVsAAAAAAAC5WwAAAAAAAAAAAAC5WwAAAAAAALtbAAAAAAAAAAAAALtbAAAAAAAAvFsAAAAAAAAAAAAAvFsAAAAAAAC9WwAAAAAAAAAAAAC9WwAAAAAAAL5bAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0WwAAAAAAALRbAAAAAAAAAAAAAAAA8L8"
				],
				[
					2392,
					3,
					"left_delete",
					null,
					"AwAAAL1bAAAAAAAAvVsAAAAAAAABAAAAL7xbAAAAAAAAvFsAAAAAAAABAAAAZrtbAAAAAAAAu1sAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+WwAAAAAAAL5bAAAAAAAAAAAAAAAA8L8"
				],
				[
					2393,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAALtbAAAAAAAAvFsAAAAAAAAAAAAAvFsAAAAAAAC9WwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7WwAAAAAAALtbAAAAAAAAAAAAAAAA8L8"
				],
				[
					2394,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAL1bAAAAAAAAv1sAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9WwAAAAAAAL1bAAAAAAAAAAAAAAAA8L8"
				],
				[
					2395,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAL5bAAAAAAAAv1sAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+WwAAAAAAAL5bAAAAAAAAAAAAAAAA8L8"
				],
				[
					2396,
					1,
					"left_delete",
					null,
					"AQAAAL5bAAAAAAAAvlsAAAAAAAABAAAAIQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/WwAAAAAAAL9bAAAAAAAAAAAAAAAA8L8"
				],
				[
					2397,
					1,
					"insert",
					{
						"characters": "prop"
					},
					"BAAAAL5bAAAAAAAAv1sAAAAAAAAAAAAAv1sAAAAAAADAWwAAAAAAAAAAAADAWwAAAAAAAMFbAAAAAAAAAAAAAMFbAAAAAAAAwlsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+WwAAAAAAAL5bAAAAAAAAAAAAAAAA8L8"
				],
				[
					2398,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAMJbAAAAAAAAw1sAAAAAAAAAAAAAw1sAAAAAAADEWwAAAAAAAAAAAADEWwAAAAAAAMVbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCWwAAAAAAAMJbAAAAAAAAAAAAAAAA8L8"
				],
				[
					2399,
					1,
					"insert",
					{
						"characters": " obj"
					},
					"BAAAAMVbAAAAAAAAxlsAAAAAAAAAAAAAxlsAAAAAAADHWwAAAAAAAAAAAADHWwAAAAAAAMhbAAAAAAAAAAAAAMhbAAAAAAAAyVsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFWwAAAAAAAMVbAAAAAAAAAAAAAAAA8L8"
				],
				[
					2401,
					1,
					"insert",
					{
						"characters": " continue;"
					},
					"CgAAAMpbAAAAAAAAy1sAAAAAAAAAAAAAy1sAAAAAAADMWwAAAAAAAAAAAADMWwAAAAAAAM1bAAAAAAAAAAAAAM1bAAAAAAAAzlsAAAAAAAAAAAAAzlsAAAAAAADPWwAAAAAAAAAAAADPWwAAAAAAANBbAAAAAAAAAAAAANBbAAAAAAAA0VsAAAAAAAAAAAAA0VsAAAAAAADSWwAAAAAAAAAAAADSWwAAAAAAANNbAAAAAAAAAAAAANNbAAAAAAAA1FsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKWwAAAAAAAMpbAAAAAAAAAAAAAAAA8L8"
				],
				[
					2458,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAFIrAAAAAAAAVCsAAAAAAAAAAAAAOisAAAAAAAA8KwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6KwAAAAAAAFIrAAAAAAAAAAAAAAAA8L8"
				],
				[
					2497,
					1,
					"insert",
					{
						"characters": "Even"
					},
					"BQAAAO4TAAAAAAAA7xMAAAAAAAAAAAAA7xMAAAAAAADvEwAAAAAAABIAAABNZXNzYWdlVHJhbnNjZWl2ZXLvEwAAAAAAAPATAAAAAAAAAAAAAPATAAAAAAAA8RMAAAAAAAAAAAAA8RMAAAAAAADyEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuEwAAAAAAAAAUAAAAAAAAAAAAAAAA8L8"
				],
				[
					2498,
					1,
					"insert_completion",
					{
						"completion": "EventEmitter",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "EventEmitter"
					},
					"AgAAAO4TAAAAAAAA7hMAAAAAAAAEAAAARXZlbu4TAAAAAAAA+hMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyEwAAAAAAAPITAAAAAAAAAAAAAAAA8L8"
				],
				[
					2501,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAADQUAAAAAAAANRQAAAAAAAAAAAAANRQAAAAAAAA2FAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0FAAAAAAAADQUAAAAAAAAAAAAAAAAMEA"
				],
				[
					2572,
					1,
					"insert",
					{
						"characters": " //"
					},
					"BAAAAOkVAAAAAAAA6hUAAAAAAAAAAAAA6hUAAAAAAADqFQAAAAAAADAAAAAgLyppZihEZWJ1Z0ZsYWdzKClbdGhpc1tTeW1ib2wudG9TdHJpbmdUYWddXSkgKi/qFQAAAAAAAOsVAAAAAAAAAAAAAOsVAAAAAAAA7BUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZFgAAAAAAAOkVAAAAAAAAAAAAAAAA8L8"
				],
				[
					2770,
					1,
					"insert",
					{
						"characters": "\nconsole.log"
					},
					"DQAAAERlAAAAAAAARWUAAAAAAAAAAAAARWUAAAAAAABJZQAAAAAAAAAAAABJZQAAAAAAAEplAAAAAAAAAAAAAEplAAAAAAAAS2UAAAAAAAAAAAAAS2UAAAAAAABMZQAAAAAAAAAAAABMZQAAAAAAAE1lAAAAAAAAAAAAAE1lAAAAAAAATmUAAAAAAAAAAAAATmUAAAAAAABPZQAAAAAAAAAAAABPZQAAAAAAAFBlAAAAAAAAAAAAAFBlAAAAAAAAUWUAAAAAAAAAAAAAUWUAAAAAAABSZQAAAAAAAAAAAABSZQAAAAAAAFNlAAAAAAAAAAAAAFNlAAAAAAAAVGUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEZQAAAAAAAERlAAAAAAAAAAAAAAAA8L8"
				],
				[
					2771,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFRlAAAAAAAAVmUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUZQAAAAAAAFRlAAAAAAAAAAAAAAAA8L8"
				],
				[
					2772,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAFVlAAAAAAAAV2UAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVZQAAAAAAAFVlAAAAAAAAAAAAAAAA8L8"
				],
				[
					2773,
					1,
					"insert",
					{
						"characters": "ListCommand"
					},
					"CwAAAFZlAAAAAAAAV2UAAAAAAAAAAAAAV2UAAAAAAABYZQAAAAAAAAAAAABYZQAAAAAAAFllAAAAAAAAAAAAAFllAAAAAAAAWmUAAAAAAAAAAAAAWmUAAAAAAABbZQAAAAAAAAAAAABbZQAAAAAAAFxlAAAAAAAAAAAAAFxlAAAAAAAAXWUAAAAAAAAAAAAAXWUAAAAAAABeZQAAAAAAAAAAAABeZQAAAAAAAF9lAAAAAAAAAAAAAF9lAAAAAAAAYGUAAAAAAAAAAAAAYGUAAAAAAABhZQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWZQAAAAAAAFZlAAAAAAAAAAAAAAAA8L8"
				],
				[
					2775,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGJlAAAAAAAAY2UAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiZQAAAAAAAGJlAAAAAAAAAAAAAAAA8L8"
				],
				[
					2776,
					1,
					"insert",
					{
						"characters": " map"
					},
					"BAAAAGNlAAAAAAAAZGUAAAAAAAAAAAAAZGUAAAAAAABlZQAAAAAAAAAAAABlZQAAAAAAAGZlAAAAAAAAAAAAAGZlAAAAAAAAZ2UAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjZQAAAAAAAGNlAAAAAAAAAAAAAAAA8L8"
				],
				[
					2778,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGhlAAAAAAAAaWUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoZQAAAAAAAGhlAAAAAAAAAAAAAAAA8L8"
				],
				[
					2922,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANZtAAAAAAAA120AAAAAAAAAAAAA120AAAAAAADZbQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWbQAAAAAAANZtAAAAAAAAAAAAAAAAbEA"
				],
				[
					2925,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAADcwAAaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnLi9ldmVudC1lbWl0dGVyLmpzJzsKCmxldCBzb2NrSWQ7CgpleHBvcnQgY29uc3QgTG9nV3JhcCA9IChnbG9iYWxUaGlzLkxvZ1dyYXAgPSBmdW5jdGlvbiBMb2dXcmFwKGxvZykgewogIGlmKHR5cGVvZiBsb2cgPT0gJ3N0cmluZycpIHsKICAgIGxldCBzdHIgPSBsb2c7CiAgICBsb2cgPSAoLi4uYXJncykgPT4gY29uc29sZS5sb2coc3RyLCAuLi5hcmdzKTsKICB9IGVsc2UgaWYoIWxvZykgewogICAgbG9nID0gKC4uLmFyZ3MpID0+IGNvbnNvbGUubG9nKC4uLmFyZ3MpOwogIH0KICByZXR1cm4gKHZhbHVlLCAuLi5hcmdzKSA9PiAobG9nKHZhbHVlLCAuLi5hcmdzKSwgdmFsdWUpOwp9KTsKCi8qZXhwb3J0IGNvbnN0IFZmbkFkYXB0ZXIgPSB2Zm4gPT4gKHsKICBnZXQ6IGsgPT4gdmZuKGspLAogIHNldDogKGssIHYpID0+IHZmbihrLCB2KQp9KTsKCmV4cG9ydCBjb25zdCBWZm5EZWNvcmF0b3IgPSB2Zm4gPT4gZGVmaW5lKHZmbiwgVmZuQWRhcHRlcih2Zm4pKTsKKi8KCi8qZ2xvYmFsVGhpcy5HZXRDbGFzc2VzID0gZnVuY3Rpb24qIEdldENsYXNzZXMob2JqKSB7CiAgbGV0IGtleXMgPSBHZXRLZXlzKG9iaik7CiAgZm9yKGxldCBuYW1lIG9mIGtleXMpIHsKICAgIHRyeSB7CiAgICAgIGlmKHR5cGVvZiBvYmpbbmFtZV0gPT0gJ2Z1bmN0aW9uJyAmJiAncHJvdG90eXBlJyBpbiBvYmpbbmFtZV0pIHlpZWxkIFtuYW1lLCBvYmpbbmFtZV1dOwogICAgfSBjYXRjaChlKSB7fQogIH0KICByZXR1cm4gZGVzYzsKfTsqLwoKLypleHBvcnQgZnVuY3Rpb24gTWFwcGVyKG1hcCA9IG5ldyBXZWFrTWFwKCkpIHsKICBsZXQgc2VsZjsKICBzZWxmID0gZnVuY3Rpb24oa2V5LCB2YWx1ZSkgewogICAgaWYodmFsdWUgPT09IHVuZGVmaW5lZCkgdmFsdWUgPSBtYXAuZ2V0KGtleSk7CiAgICBlbHNlIG1hcC5zZXQoa2V5LCB2YWx1ZSk7CiAgICByZXR1cm4gdmFsdWU7CiAgfTsKICByZXR1cm4gT2JqZWN0LnNldFByb3RvdHlwZU9mKHNlbGYsIE1hcHBlci5wcm90b3R5cGUpOwp9CgpPYmplY3Quc2V0UHJvdG90eXBlT2YoTWFwcGVyLnByb3RvdHlwZSwgRnVuY3Rpb24ucHJvdG90eXBlKTsqLwovL01hcHBlci5wcm90b3R5cGUgPSBmdW5jdGlvbigpIHt9OwovL01hcHBlci5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBNYXBwZXI7CgovKmV4cG9ydCBmdW5jdGlvbiBEZWZhdWx0Q29uc3RydWN0b3IobWFwcGVyLCBmbiA9ICguLi5hcmdzKSA9PiBuZXcgT2JqZWN0KC4uLmFyZ3MpKSB7CiAgbGV0IHNlbGY7CiAgc2VsZiA9IGZ1bmN0aW9uKC4uLmFyZ3MpIHsKICAgIGxldCBba2V5LCB2YWx1ZV0gPSBhcmdzOwogICAgaWYoYXJncy5sZW5ndGggPD0gMSkgewogICAgICBpZighKHZhbHVlID0gbWFwLmdldChrZXkpKSkgewogICAgICAgIHZhbHVlID0gZm4oLi4uYXJncy5zbGljZSgxKSk7CiAgICAgICAgbWFwLnNldChrZXksIHZhbHVlKTsKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgbWFwLnNldChrZXksIHZhbHVlKTsKICAgIH0KICAgIHJldHVybiB2YWx1ZTsKICB9OwogIHJldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc2VsZiwgRGVmYXVsdENvbnN0cnVjdG9yLnByb3RvdHlwZSk7Cn0KCk9iamVjdC5zZXRQcm90b3R5cGVPZihEZWZhdWx0Q29uc3RydWN0b3IucHJvdG90eXBlLCBGdW5jdGlvbi5wcm90b3R5cGUpOwpEZWZhdWx0Q29uc3RydWN0b3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gRGVmYXVsdENvbnN0cnVjdG9yOyovCgovKmV4cG9ydCBmdW5jdGlvbiBFdmVudExvZ2dlcihpbnN0YW5jZSA9IHt9LCBjYWxsYmFjayA9IChuYW1lLCBldmVudCwgdGhpc09iaikgPT4gY29uc29sZS5sb2coJ0V2ZW50TG9nZ2VyJywgeyBuYW1lLCBldmVudCwgdGhpc09iaiB9KSkgewogIGZ1bmN0aW9uIFdyYXBFdmVudChoYW5kbGVyLCBuYW1lKSB7CiAgICByZXR1cm4gZnVuY3Rpb24oZSkgewogICAgICByZXR1cm4gY2FsbGJhY2sobmFtZSwgZSwgdGhpcyk7CiAgICB9OwogIH0KCiAgcmV0dXJuIG5ldyBQcm94eShpbnN0YW5jZSwgewogICAgZ2V0KG9iaiwgcHJvcCkgewogICAgICBpZihwcm9wLnN0YXJ0c1dpdGgoJ29uJykpIHsKICAgICAgICByZXR1cm4gV3JhcEV2ZW50KG9ialtwcm9wXSwgcHJvcC5zbGljZSgyKSk7CiAgICAgIH0KICAgICAgcmV0dXJuIG9ialtwcm9wXTsKICAgIH0KICB9KTsKfSovCgovKiogQGludGVyZmFjZSBNZXNzYWdlUmVjZWl2ZXIgKi8KZXhwb3J0IGNsYXNzIE1lc3NhZ2VSZWNlaXZlciBleHRlbmRzIEV2ZW50RW1pdHRlciB7CiAgc3RhdGljIFtTeW1ib2wuaGFzSW5zdGFuY2VdKGluc3RhbmNlKSB7CiAgICByZXR1cm4gJ29ubWVzc2FnZScgaW4gaW5zdGFuY2U7CiAgfQoKICAvKiogQGFic3RyYWN0ICovCiAgb25tZXNzYWdlKG1zZykgewogICAgdGhyb3cgbmV3IEVycm9yKGBNZXNzYWdlUmVjZWl2ZXIub25tZXNzYWdlIHVuaW1wbGVtZW50ZWRgKTsKICB9Cn0KCi8qKiBAaW50ZXJmYWNlIE1lc3NhZ2VUcmFuc21pdHRlciAqLwpleHBvcnQgY2xhc3MgTWVzc2FnZVRyYW5zbWl0dGVyIHsKICBzdGF0aWMgW1N5bWJvbC5oYXNJbnN0YW5jZV0oaW5zdGFuY2UpIHsKICAgIHJldHVybiB0eXBlb2Ygc2VuZE1lc3NhZ2UgPT0gJ2Z1bmN0aW9uJzsKICB9CiAgLyoqIEBhYnN0cmFjdCAqLwogIHNlbmRNZXNzYWdlKCkgewogICAgdGhyb3cgbmV3IEVycm9yKGBNZXNzYWdlUmVjZWl2ZXIuc2VuZE1lc3NhZ2UgdW5pbXBsZW1lbnRlZGApOwogIH0KfQoKLyoqCiAqIEBpbnRlcmZhY2UgTWVzc2FnZVRyYW5zY2VpdmVyCiAqIEBtaXhlcyBNZXNzYWdlUmVjZWl2ZXIKICogQG1peGVzIE1lc3NhZ2VUcmFuc21pdHRlcgogKi8KZXhwb3J0IGZ1bmN0aW9uIE1lc3NhZ2VUcmFuc2NlaXZlcigpIHt9CgpkZWZpbmUoTWVzc2FnZVRyYW5zY2VpdmVyLnByb3RvdHlwZSwgTWVzc2FnZVJlY2VpdmVyLnByb3RvdHlwZSwgTWVzc2FnZVRyYW5zbWl0dGVyLnByb3RvdHlwZSk7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoTWVzc2FnZVRyYW5zY2VpdmVyLCBTeW1ib2wuaGFzSW5zdGFuY2UsIHsKICB2YWx1ZTogaW5zdGFuY2UgPT4gW01lc3NhZ2VSZWNlaXZlciwgTWVzc2FnZVRyYW5zbWl0dGVyXS5ldmVyeShjdG9yID0+IGN0b3JbU3ltYm9sLmhhc0luc3RhbmNlXShpbnN0YW5jZSkpCn0pOwoKY29uc3QgY29kZWNzID0gewogIG5vbmUoKSB7CiAgICByZXR1cm4gewogICAgICBuYW1lOiAnbm9uZScsCiAgICAgIGVuY29kZTogdiA9PiB2LAogICAgICBkZWNvZGU6IHYgPT4gdgogICAgfTsKICB9LAogIGpzb24odmVyYm9zZSA9IGZhbHNlKSB7CiAgICByZXR1cm4gewogICAgICBuYW1lOiAnanNvbicsCiAgICAgIGVuY29kZTogdiA9PiBKU09OLnN0cmluZ2lmeSh2LCAuLi4odmVyYm9zZSA/IFtudWxsLCAyXSA6IFtdKSksCiAgICAgIGRlY29kZTogdiA9PiBKU09OLnBhcnNlKHYpCiAgICB9OwogIH0KfTsKCmlmKGdsb2JhbFRoaXMuaW5zcGVjdCkgewogIGNvZGVjcy5qcyA9IGZ1bmN0aW9uIGpzKHZlcmJvc2UgPSBmYWxzZSkgewogICAgcmV0dXJuIHsKICAgICAgbmFtZTogJ2pzJywKICAgICAgZW5jb2RlOiB2ID0+IGluc3BlY3QodiwgeyBjb2xvcnM6IGZhbHNlLCBjb21wYWN0OiB2ZXJib3NlID8gZmFsc2UgOiAtMiB9KSwKICAgICAgZGVjb2RlOiB2ID0+IGV2YWwoYCgke3Z9KWApCiAgICB9OwogIH07Cn0KCmlmKGdsb2JhbFRoaXMuYmpzb24pIHsKICBjb2RlY3MuYmpzb24gPSBmdW5jdGlvbiBianNvbigpIHsKICAgIHJldHVybiB7CiAgICAgIG5hbWU6ICdianNvbicsCiAgICAgIGVuY29kZTogdiA9PiBianNvbi53cml0ZSh2KSwKICAgICAgZGVjb2RlOiB2ID0+IGJqc29uLnJlYWQodikKICAgIH07CiAgfTsKfQoKZXhwb3J0IGZ1bmN0aW9uIFJQQ0FwaShjKSB7CiAgbGV0IGFwaTsKICBhcGkgPSBkZWZpbmUobmV3LnRhcmdldCA/IHRoaXMgOiBuZXcgUlBDQXBpKGMpLCB7IGNvbm5lY3Rpb246IGMgfSk7CgogIHJldHVybiBhcGk7Cn0KCmZvcihsZXQgY21kIG9mIFsnbGlzdCcsICduZXcnLCAnbWV0aG9kcycsICdwcm9wZXJ0aWVzJywgJ2tleXMnLCAnbmFtZXMnLCAnc3ltYm9scycsICdjYWxsJywgJ3NldCcsICdnZXQnXSkKICBSUENBcGkucHJvdG90eXBlW2NtZF0gPSBNYWtlQ29tbWFuZEZ1bmN0aW9uKGNtZCwgbyA9PiBvLmNvbm5lY3Rpb24pOwoKZXhwb3J0IGZ1bmN0aW9uIFJQQ1Byb3h5KGMpIHsKICBsZXQgb2JqID0gZGVmaW5lKG5ldy50YXJnZXQgPyB0aGlzIDogbmV3IFJQQ1Byb3h5KGMpLCB7IGNvbm5lY3Rpb246IGMgfSk7CgogIHJldHVybiBuZXcgUHJveHkob2JqLCB7fSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBSUENPYmplY3QoaWQsIGNvbm5lY3Rpb24pIHsKICBsZXQgb2JqID0gZGVmaW5lKG5ldy50YXJnZXQgPyB0aGlzIDogbmV3IFJQQ09iamVjdChpZCksIHsgY29ubmVjdGlvbiwgaWQgfSk7CiAgcmV0dXJuIGFwaS5tZXRob2RzKHsgaWQgfSkudGhlbihyID0+IE9iamVjdC5hc3NpZ24ob2JqLCByKSk7Cn0KClJQQ09iamVjdC5wcm90b3R5cGVbU3ltYm9sLnRvU3RyaW5nVGFnXSA9ICdSUENPYmplY3QnOwoKZXhwb3J0IGZ1bmN0aW9uIFJQQ0ZhY3RvcnkoYXBpKSB7CiAgYXN5bmMgZnVuY3Rpb24gRmFjdG9yeShvcHRzKSB7CiAgICBpZih0eXBlb2Ygb3B0cyA9PSAnc3RyaW5nJykgewogICAgICBjb25zdCBuYW1lID0gb3B0czsKICAgICAgb3B0cyA9IHsgY2xhc3M6IG5hbWUgfTsKICAgIH0KICAgIGxldCBpbnN0YW5jZSA9IGF3YWl0IGFwaS5uZXcob3B0cyk7CiAgICBsZXQgeyBjb25uZWN0aW9uIH0gPSBhcGk7CiAgICBsZXQgb2JqID0gT2JqZWN0LnNldFByb3RvdHlwZU9mKHsgaW5zdGFuY2UsIGNvbm5lY3Rpb24gfSwgUlBDT2JqZWN0LnByb3RvdHlwZSk7CgogICAgZGVmaW5lKG9iaiwgYXdhaXQgYXBpLm1ldGhvZHMoaW5zdGFuY2UpKTsKICAgIHJldHVybiBvYmo7CiAgfQoKICByZXR1cm4gRmFjdG9yeTsKfQoKUlBDRmFjdG9yeS5wcm90b3R5cGUgPSBmdW5jdGlvbigpIHt9OwpSUENGYWN0b3J5LnByb3RvdHlwZVtTeW1ib2wudG9TdHJpbmdUYWddID0gJ1JQQ0ZhY3RvcnknOwoKLyoqCiAqIEBpbnRlcmZhY2UgQ29ubmVjdGlvbgogKi8KZXhwb3J0IGNsYXNzIENvbm5lY3Rpb24gZXh0ZW5kcyBFdmVudEVtaXR0ZXIgewogIHN0YXRpYyBmcm9tU29ja2V0ID0gbmV3IFdlYWtNYXAoKTsKCiAgbGFzdFNlcSA9IDA7CiAgLy8jZXZlbnRzID0ge307CgogIHN0YXRpYyBlcXVhbChhLCBiKSB7CiAgICByZXR1cm4gKGEuc29ja2V0ICE9IG51bGwgJiYgYS5zb2NrZXQgPT09IGIuc29ja2V0KSB8fCAodHlwZW9mIGEuZmQgPT0gJ251bWJlcicgJiYgYS5mZCA9PT0gYi5mZCk7CiAgfQogIHN0YXRpYyBnZXQgbGFzdCgpIHsKICAgIHJldHVybiB0aGlzLmxpc3QubGFzdDsKICB9CgogIG1ha2VTZXEoKSB7CiAgICByZXR1cm4gKyt0aGlzLmxhc3RTZXE7CiAgfQoKICBjb25zdHJ1Y3Rvcihzb2NrZXQsIGluc3RhbmNlLCBsb2csIGNvZGVjID0gJ25vbmUnKSB7CiAgICBzdXBlcigpOwogICAgdGhpcy5mZCA9IHNvY2tldC5mZDsKICAgIGRlZmluZSh0aGlzLCB7CiAgICAgIHNlcTogMCwKICAgICAgc29ja2V0LAogICAgICBleGNlcHRpb246IG51bGwsCiAgICAgIGxvZyguLi5hcmdzKSB7CiAgICAgICAgLy8gY29uc29sZS5sb2coLi4uYXJncyk7CiAgICAgIH0sCiAgICAgIG1lc3NhZ2VzOiB7IHJlcXVlc3RzOiB7fSwgcmVzcG9uc2VzOiB7fSB9CiAgICB9KTsKICAgIGRlZmluZSh0aGlzLCB0eXBlb2YgY29kZWMgPT0gJ3N0cmluZycgJiYgY29kZWNzW2NvZGVjXSA/IHsgY29kZWNOYW1lOiBjb2RlYywgY29kZWM6IGNvZGVjc1tjb2RlY10oKSB9IDoge30pOwogICAgZGVmaW5lKHRoaXMsIHR5cGVvZiBjb2RlYyA9PSAnb2JqZWN0JyAmJiBjb2RlYy5uYW1lID8geyBjb2RlY05hbWU6IGNvZGVjLm5hbWUsIGNvZGVjIH0gOiB7fSk7CiAgICAodGhpcy5jb25zdHJ1Y3RvciA/PyBDb25uZWN0aW9uKS5zZXQuYWRkKHRoaXMpOwogICAgQ29ubmVjdGlvbi5mcm9tU29ja2V0LnNldChzb2NrZXQsIHRoaXMpOwogIH0KCiAgZXJyb3IobWVzc2FnZSkgewogICAgY29uc3QgeyBzb2NrZXQgfSA9IHRoaXM7CiAgICBjb25zdCBzdGF0dXMgPSBzb2NrZXQuQ0xPU0VfU1RBVFVTX1BST1RPQ09MX0VSUiB8fCAxMDAwOwoKICAgIGNvbnNvbGUubG9nKGBFUlJPUjogJHttZXNzYWdlfWApOwogICAgdGhpcy5leGNlcHRpb24gPSBuZXcgRXJyb3IobWVzc2FnZSk7CiAgICBjb25zb2xlLmxvZygnZXJyb3IoJywgc3RhdHVzLCBtZXNzYWdlLCAnKScpOwogICAgdGhpcy5jbG9zZShzdGF0dXMsIG1lc3NhZ2Uuc2xpY2UoMCwgMTI4KSk7CiAgICByZXR1cm4gdGhpcy5leGNlcHRpb247CiAgfQoKICBjbG9zZShzdGF0dXMsIHJlYXNvbikgewogICAgY29uc3QgeyBzb2NrZXQgfSA9IHRoaXM7CiAgICBjb25zb2xlLmxvZygnY2xvc2UoJywgc3RhdHVzLCByZWFzb24sICcpJyk7CiAgICBzb2NrZXQuY2xvc2Uoc3RhdHVzLCByZWFzb24pOwogICAgZGVsZXRlIHRoaXMuc29ja2V0OwogICAgZGVsZXRlIHRoaXMuZmQ7CiAgICB0aGlzLmNvbm5lY3RlZCA9IGZhbHNlOwogIH0KCiAgb25tZXNzYWdlKG1zZykgewogICAgbGV0IHsgY29kZWMsIGNvZGVjTmFtZSB9ID0gdGhpczsKICAgIGlmKCFtc2cpIHJldHVybjsKICAgIGlmKHR5cGVvZiBtc2cgPT0gJ3N0cmluZycgJiYgbXNnLnRyaW0oKSA9PSAnJykgcmV0dXJuOwogICAgdGhpcy5sb2coJ0Nvbm5lY3Rpb24ub25tZXNzYWdlJywgeyBtc2csIGNvZGVjLCBjb2RlY05hbWUgfSk7CiAgICBsZXQgZGF0YTsKICAgIHRyeSB7CiAgICAgIGRhdGEgPSBjb2RlYy5kZWNvZGUoKG1zZyAmJiBtc2cuZGF0YSkgfHwgbXNnKTsKICAgIH0gY2F0Y2goZXJyKSB7CiAgICAgIHRocm93IHRoaXMuZXJyb3IoYCR7dGhpcy5jb2RlYy5uYW1lfSBwYXJzZSBlcnJvcjogJHsoZXJyICYmIGVyci5tZXNzYWdlKSB8fCBtc2d9YCk7CiAgICAgIHJldHVybiB0aGlzLmV4Y2VwdGlvbjsKICAgIH0KICAgIGxldCByZXNwb25zZSA9IHRoaXMucHJvY2Vzc01lc3NhZ2UoZGF0YSk7CiAgICB0aGlzLmxvZygnQ29ubmVjdGlvbi5vbm1lc3NhZ2UnLCB7IGRhdGEsIHJlc3BvbnNlIH0pOwogICAgaWYoaXNUaGVuYWJsZShyZXNwb25zZSkpIHJlc3BvbnNlLnRoZW4ociA9PiB0aGlzLnNlbmRNZXNzYWdlKHIpKTsKICAgIGVsc2UgaWYocmVzcG9uc2UgIT09IHVuZGVmaW5lZCkgdGhpcy5zZW5kTWVzc2FnZShyZXNwb25zZSk7CiAgfQoKICBwcm9jZXNzTWVzc2FnZShkYXRhKSB7CiAgICB0aGlzLmxvZygnQ29ubmVjdGlvbicsICcucHJvY2Vzc01lc3NhZ2UnLCB7IGRhdGEgfSk7CiAgICB0aHJvdyBuZXcgRXJyb3IoJ1ZpcnR1YWwgbWV0aG9kJyk7CiAgfQoKICBvbmNvbm5lY3Qoc29jaykgewogICAgLy9jb25zb2xlLmxvZygiQ29ubmVjdGlvbi5vbmNvbm5lY3QiLCBzb2NrLCB0aGlzKTsKICB9CgogIG9ub3BlbiA9IExvZ1dyYXAoJ0Nvbm5lY3Rpb24ub25vcGVuJyk7CgogIC8qICBvbm9wZW4oYXJnKSB7CiAgICB0aGlzLmxvZygnQ29ubmVjdGlvbi5vbm9wZW4nLCB7IGFyZyB9KTsKICB9Ki8KCiAgb25wb25nKGRhdGEpIHsKICAgIGNvbnNvbGUubG9nKCdDb25uZWN0aW9uLm9ucG9uZzonLCBkYXRhKTsKICB9CgogIG9uZXJyb3IoZXJyb3IpIHsKICAgIGNvbnNvbGUubG9nKCdDb25uZWN0aW9uLm9uZXJyb3InLCBlcnJvciA/IGAgKCR7ZXJyb3J9KWAgOiAnJyk7CiAgICB0aGlzLmNvbm5lY3RlZCA9IGZhbHNlOwogICAgdGhpcy5jbGVhbnVwKCk7CiAgfQoKICBvbmNsb3NlKGNvZGUsIHdoeSkgewogICAgY29uc29sZS5sb2coJ0Nvbm5lY3Rpb24ub25jbG9zZScsIGNvZGUsIHdoeSA/IGAgKCR7d2h5fSlgIDogJycpOwogICAgdGhpcy5jb25uZWN0ZWQgPSBmYWxzZTsKICAgIHRoaXMuY2xlYW51cCgpOwogIH0KCiAgY2xlYW51cCgpIHsKICAgIGlmKHRoaXMuaW5zdGFuY2VzKSBmb3IobGV0IGlkIGluIHRoaXMuaW5zdGFuY2VzKSBkZWxldGUgdGhpcy5pbnN0YW5jZXNbaWRdOwogIH0KCiAgc2VuZE1lc3NhZ2Uob2JqKSB7CiAgICB0aGlzLmxvZygnQ29ubmVjdGlvbi5zZW5kTWVzc2FnZScsIG9iaik7CiAgICBpZih0eXBlb2Ygb2JqID09ICdvYmplY3QnKQogICAgICBpZih0eXBlb2Ygb2JqLnNlcSA9PSAnbnVtYmVyJykgewogICAgICAgIGlmKHRoaXMubWVzc2FnZXMgJiYgdGhpcy5tZXNzYWdlcy5yZXF1ZXN0cykgdGhpcy5tZXNzYWdlcy5yZXF1ZXN0c1tvYmouc2VxXSA9IG9iajsKICAgICAgfSBlbHNlIHsKICAgICAgICBvYmouc2VxID0gdGhpcy5tYWtlU2VxKCk7CiAgICAgIH0KICAgIGxldCBtc2cgPSB0eXBlb2Ygb2JqICE9ICdzdHJpbmcnID8gdGhpcy5jb2RlYy5lbmNvZGUob2JqKSA6IG9iajsKCiAgICB0aGlzLnNvY2tldC5zZW5kKG1zZyk7CiAgfQoKICBzZW5kQ29tbWFuZChjb21tYW5kLCBwYXJhbXMgPSB7fSkgewogICAgbGV0IG1lc3NhZ2UgPSB7IGNvbW1hbmQsIC4uLnBhcmFtcyB9OwogICAgdGhpcy5sb2coJ0Nvbm5lY3Rpb24uc2VuZENvbW1hbmQnLCB7IGNvbW1hbmQsIHBhcmFtcywgbWVzc2FnZSB9KTsKICAgIGlmKHR5cGVvZiBwYXJhbXMgPT0gJ29iamVjdCcgJiYgcGFyYW1zICE9IG51bGwgJiYgdHlwZW9mIHBhcmFtcy5zZXEgIT0gJ251bWJlcicpCiAgICAgIHBhcmFtcy5zZXEgPSB0aGlzLnNlcSA9ICh0aGlzLnNlcSB8IDApICsgMTsKICAgIGlmKHRoaXMubWVzc2FnZXMgJiYgdGhpcy5tZXNzYWdlcy5yZXF1ZXN0cykKICAgICAgaWYodHlwZW9mIHBhcmFtcy5zZXEgPT0gJ251bWJlcicpIHRoaXMubWVzc2FnZXMucmVxdWVzdHNbcGFyYW1zLnNlcV0gPSBtZXNzYWdlOwogICAgaWYodGhpcy5tZXNzYWdlcyAmJiB0aGlzLm1lc3NhZ2VzLnJlcXVlc3RzKSB0aGlzLm1lc3NhZ2VzLnJlcXVlc3RzW3BhcmFtcy5zZXFdID0gbWVzc2FnZTsKICAgIHRoaXMuc2VuZE1lc3NhZ2UobWVzc2FnZSk7CiAgfQoKICBzdGF0aWMgZ2V0Q2FsbGJhY2tzKGluc3RhbmNlLCB2ZXJib3NpdHkgPSAwKSB7CiAgICBjb25zdCB7IGNsYXNzZXMsIGZkbGlzdCwgbG9nIH0gPSBpbnN0YW5jZTsKICAgIGNvbnN0IGN0b3IgPSB0aGlzOwogICAgY29uc3QgdmVyYm9zZSA9IHZlcmJvc2l0eSA+PSAxID8gKG1zZywgLi4uYXJncykgPT4gbG9nKCdWRVJCT1NFICcgKyBtc2csIGFyZ3MpIDogKCkgPT4ge307CiAgICAvL2xvZyhgJHtjdG9yLm5hbWV9LmdldENhbGxiYWNrc2AsIHsgaW5zdGFuY2UsIGxvZywgdmVyYm9zaXR5IH0pOwogICAgY29uc3QgaGFuZGxlID0gKHNvY2ssIGV2ZW50LCAuLi5hcmdzKSA9PiB7CiAgICAgIGxldCBjb25uLCBvYmo7CgogICAgICBpZigoY29ubiA9IGZkbGlzdFtzb2NrLmZkXSkpIHsKICAgICAgICAvL3ZlcmJvc2UoYEhhbmRsZSBmZCAjJHtzb2NrLmZkfSAke2V2ZW50fWApOwogICAgICAgIGNhbGxIYW5kbGVyKGNvbm4sIGV2ZW50LCAuLi5hcmdzKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE5vIGNvbm5lY3Rpb24gZm9yIGZkICMke3NvY2suZmR9IWApOwogICAgICB9CiAgICAgIG9iaiA9IHsgdGhlbjogZm4gPT4gKGZuKHNvY2suZmQpLCBvYmopIH07CiAgICAgIHJldHVybiBvYmo7CiAgICB9OwogICAgY29uc3QgcmVtb3ZlID0gc29jayA9PiB7CiAgICAgIGNvbnN0IHsgZmQgfSA9IHNvY2s7CiAgICAgIGRlbGV0ZSBmZGxpc3RbZmRdOwogICAgfTsKICAgIHJldHVybiB7CiAgICAgIHZlcmJvc2l0eSwKICAgICAgb25Db25uZWN0KHNvY2ssIHJlcSkgewogICAgICAgIHZlcmJvc2UoYENvbm5lY3RlZGAsIHNvY2spOwogICAgICAgIGxldCBjb25uZWN0aW9uID0gZmRsaXN0W3NvY2suZmRdOwogICAgICAgIGlmKCFjb25uZWN0aW9uKSBjb25uZWN0aW9uID0gbmV3IGN0b3Ioc29jaywgaW5zdGFuY2UsIGxvZywgJ2pzb24nLCBjbGFzc2VzKTsKICAgICAgICBjb25uZWN0aW9uLnNvY2tldCA/Pz0gc29jazsKICAgICAgICBjb25zdCB7IHVybCwgbWV0aG9kLCBoZWFkZXJzIH0gPSByZXE7CiAgICAgICAgdmVyYm9zZShgQ29ubmVjdGVkYCwgc29jaywgcmVxKTsKICAgICAgICBmZGxpc3Rbc29jay5mZF0gPSBjb25uZWN0aW9uOwogICAgICAgIGhhbmRsZShzb2NrLCAnY29ubmVjdCcsIHNvY2ssIHJlcSk7CiAgICAgIH0sCiAgICAgIG9uT3Blbihzb2NrKSB7CiAgICAgICAgdmVyYm9zZShgT3BlbmVkYCwgc29jaywgY3Rvci5uYW1lKTsKICAgICAgICBmZGxpc3Rbc29jay5mZF0gPSBuZXcgY3Rvcihzb2NrLCBpbnN0YW5jZSwgbG9nLCAnanNvbicsIGNsYXNzZXMpOwogICAgICAgIGZkbGlzdFtzb2NrLmZkXS5zb2NrZXQgPz89IHNvY2s7CiAgICAgICAgaGFuZGxlKHNvY2ssICdvcGVuJyk7CiAgICAgIH0sCiAgICAgIG9uTWVzc2FnZShzb2NrLCBtc2cpIHsKICAgICAgICB2ZXJib3NlKGBNZXNzYWdlYCwgc29jaywgbXNnKTsKICAgICAgICBoYW5kbGUoc29jaywgJ21lc3NhZ2UnLCBtc2cpOwogICAgICB9LAogICAgICBvbkVycm9yKHNvY2ssIGVycm9yKSB7CiAgICAgICAgdmVyYm9zZShgRXJyb3JgLCBzb2NrLCBlcnJvcik7CiAgICAgICAgY2FsbEhhbmRsZXIoaW5zdGFuY2UsICdlcnJvcicsIGVycm9yKTsKICAgICAgICBoYW5kbGUoc29jaywgJ2Vycm9yJywgZXJyb3IpOwogICAgICAgIHJlbW92ZShzb2NrKTsKICAgICAgfSwKICAgICAgb25DbG9zZShzb2NrLCBjb2RlLCB3aHkpIHsKICAgICAgICB2ZXJib3NlKGBDbG9zZWRgLCBzb2NrLCBjb2RlLCB3aHkpOwogICAgICAgIGhhbmRsZShzb2NrLCAnY2xvc2UnLCBjb2RlLCB3aHkpOwogICAgICAgIHJlbW92ZShzb2NrKTsKICAgICAgfSwKICAgICAgb25Qb25nKHNvY2ssIGRhdGEpIHsKICAgICAgICB2ZXJib3NlKGBQb25nYCwgc29jaywgZGF0YSk7CiAgICAgICAgaGFuZGxlKHNvY2ssICdwb25nJywgZGF0YSk7CiAgICAgIH0KICAgIH07CiAgfQp9CgovL2luaGVyaXRzKENvbm5lY3Rpb24sIEV2ZW50RW1pdHRlcik7CgovKmRlZmluZShDb25uZWN0aW9uLnByb3RvdHlwZSwgeyBbU3ltYm9sLnRvU3RyaW5nVGFnXTogJ0Nvbm5lY3Rpb24nIH0pOyovCndlYWtBc3NpZ24oQ29ubmVjdGlvbi5wcm90b3R5cGUsIC8qRXZlbnRFbWl0dGVyLnByb3RvdHlwZSwgKi97IFtTeW1ib2wudG9TdHJpbmdUYWddOiAnQ29ubmVjdGlvbicgfSk7CgpDb25uZWN0aW9uLmxpc3QgPSBbXTsKCmZ1bmN0aW9uIFJQQ1NlcnZlckVuZHBvaW50KGNsYXNzZXMgPSB7fSkgewogIHJldHVybiB7CiAgICBuZXcoeyBjbGFzczogbmFtZSwgYXJncyA9IFtdIH0pIHsKICAgICAgdGhpcy5sb2coJ1JQQ1NlcnZlckVuZHBvaW50Lm5ldycpOwogICAgICBsZXQgb2JqLCByZXQsIGlkOwogICAgICB0cnkgewogICAgICAgIG9iaiA9IG5ldyB0aGlzLmNsYXNzZXNbbmFtZV0oLi4uYXJncyk7CiAgICAgICAgaWQgPSB0aGlzLm1ha2VJZCgpOwogICAgICAgIHRoaXMuaW5zdGFuY2VzW2lkXSA9IG9iajsKICAgICAgfSBjYXRjaChlKSB7CiAgICAgICAgcmV0dXJuIHN0YXR1c1Jlc3BvbnNlKGZhbHNlLCBlLm1lc3NhZ2UpOwogICAgICB9CiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIHJlc3VsdDogeyBpZCwgbmFtZSB9IH07CiAgICB9LAogICAgbGlzdCgpIHsKICAgICAgdGhpcy5sb2coJ1JQQ1NlcnZlckVuZHBvaW50Lmxpc3QnKTsKCiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIHJlc3VsdDogT2JqZWN0LmtleXMoeyAuLi5jbGFzc2VzLCAuLi50aGlzLmNsYXNzZXMgfSkgfTsKICAgIH0sCiAgICBkZWxldGU6IG9iamVjdENvbW1hbmQoKHsgaWQgfSwgcmVzcG9uZCkgPT4gewogICAgICBkZWxldGUgdGhpcy5pbnN0YW5jZXNbaWRdOwogICAgICByZXR1cm4gcmVzcG9uZCh0cnVlKTsKICAgIH0pLAogICAgY2FsbDogb2JqZWN0Q29tbWFuZCgoeyBvYmosIG1ldGhvZCwgYXJncyA9IFtdIH0sIHJlc3BvbmQpID0+IHsKICAgICAgaWYobWV0aG9kIGluIG9iaiAmJiB0eXBlb2Ygb2JqW21ldGhvZF0gPT0gJ2Z1bmN0aW9uJykgewogICAgICAgIGNvbnN0IHJlc3VsdCA9IG9ialttZXRob2RdKC4uLmFyZ3MpOwogICAgICAgIGlmKGlzVGhlbmFibGUocmVzdWx0KSkKICAgICAgICAgIHJldHVybiByZXN1bHQudGhlbihyZXN1bHQgPT4gcmVzcG9uZCh0cnVlLCByZXN1bHQpKS5jYXRjaChlcnJvciA9PiByZXNwb25kKGZhbHNlLCBlcnJvcikpOwogICAgICAgIHJldHVybiByZXNwb25kKHRydWUsIHJlc3VsdCk7CiAgICAgIH0KICAgICAgcmV0dXJuIHJlc3BvbmQoZmFsc2UsIGBObyBzdWNoIG1ldGhvZCBvbiBvYmplY3QgIyR7aWR9OiAke21ldGhvZH1gKTsKICAgIH0pLAogICAga2V5czogb2JqZWN0Q29tbWFuZCgoeyBvYmosIGVudW1lcmFibGUgPSB0cnVlIH0sIHJlc3BvbmQpID0+IHsKICAgICAgcmV0dXJuIHJlc3BvbmQoCiAgICAgICAgdHJ1ZSwKICAgICAgICBHZXRQcm9wZXJ0aWVzKG9iaiwgZW51bWVyYWJsZSA/IG9iaiA9PiBPYmplY3Qua2V5cyhvYmopIDogb2JqID0+IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG9iaikpCiAgICAgICk7CiAgICB9KSwKICAgIG5hbWVzOiBvYmplY3RDb21tYW5kKCh7IG9iaiwgZW51bWVyYWJsZSA9IHRydWUgfSwgcmVzcG9uZCkgPT4gewogICAgICByZXR1cm4gcmVzcG9uZCgKICAgICAgICB0cnVlLAogICAgICAgIEdldFByb3BlcnRpZXMob2JqLCBvYmogPT4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMob2JqKSkKICAgICAgKTsKICAgIH0pLAogICAgc3ltYm9sczogb2JqZWN0Q29tbWFuZCgoeyBvYmosIGVudW1lcmFibGUgPSB0cnVlIH0sIHJlc3BvbmQpID0+IHsKICAgICAgcmV0dXJuIHJlc3BvbmQoCiAgICAgICAgdHJ1ZSwKICAgICAgICBHZXRQcm9wZXJ0aWVzKG9iaiwgb2JqID0+IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqKSkubWFwKHN5bSA9PiBzeW0uZGVzY3JpcHRpb24pCiAgICAgICk7CiAgICB9KSwKICAgIHByb3BlcnRpZXM6IE1ha2VMaXN0Q29tbWFuZCh2ID0+IHR5cGVvZiB2ICE9ICdmdW5jdGlvbicpLAogICAgbWV0aG9kczogTWFrZUxpc3RDb21tYW5kKHYgPT4gdHlwZW9mIHYgPT0gJ2Z1bmN0aW9uJywgeyBlbnVtZXJhYmxlOiBmYWxzZSB9KSwKICAgIGdldDogb2JqZWN0Q29tbWFuZCgoeyBvYmosIHByb3BlcnR5IH0sIHJlc3BvbmQpID0+IHsKICAgICAgaWYocHJvcGVydHkgaW4gb2JqICYmIHR5cGVvZiBvYmpbcHJvcGVydHldICE9ICdmdW5jdGlvbicpIHsKICAgICAgICBjb25zdCByZXN1bHQgPSBvYmpbcHJvcGVydHldOwogICAgICAgIHJldHVybiByZXNwb25kKHRydWUsIHJlc3VsdCk7CiAgICAgIH0KICAgICAgcmV0dXJuIHJlc3BvbmQoZmFsc2UsIGBObyBzdWNoIHByb3BlcnR5IG9uIG9iamVjdCAjJHtpZH06ICR7cHJvcGVydHl9YCk7CiAgICB9KSwKICAgIHNldDogb2JqZWN0Q29tbWFuZCgoeyBvYmosIHByb3BlcnR5LCB2YWx1ZSB9LCByZXNwb25kKSA9PiB7CiAgICAgIHJldHVybiByZXNwb25kKHRydWUsIChvYmpbcHJvcGVydHldID0gdmFsdWUpKTsKICAgIH0pCiAgfTsKfQoKZXhwb3J0IGNsYXNzIFJQQ1NlcnZlciBleHRlbmRzIENvbm5lY3Rpb24gewogIGNvbnN0cnVjdG9yKHNvY2tldCwgaW5zdGFuY2UsIGxvZywgY29kZWMgPSBjb2RlY3MuanNvbihmYWxzZSksIGNsYXNzZXMpIHsKICAgIC8vbG9nKCdSUENTZXJ2ZXIuY29uc3RydWN0b3InLCB7IHNvY2tldCwgY2xhc3NlcywgaW5zdGFuY2UsIGxvZyB9KTsKICAgIHN1cGVyKHNvY2tldCwgaW5zdGFuY2UsIGxvZywgY29kZWMpOwoKICAgIGxldCBjb25uZWN0aW9uID0gdGhpczsKICAgIGRlZmluZShjb25uZWN0aW9uLCB7CiAgICAgIGNsYXNzZXMsCiAgICAgIGluc3RhbmNlczoge30sCiAgICAgIGxhc3RJZDogMCwKICAgICAgY29ubmVjdGVkOiB0cnVlLAogICAgICBtZXNzYWdlczogeyByZXF1ZXN0czoge30sIHJlc3BvbnNlczoge30gfSwKICAgICAgY29tbWFuZHM6IFJQQ1NlcnZlckVuZHBvaW50KCkKICAgIH0pOwoKICAgIFJQQ1NlcnZlci5zZXQuYWRkKGNvbm5lY3Rpb24pOwogIH0KCiAgbWFrZUlkKCkgewogICAgcmV0dXJuICsrdGhpcy5sYXN0SWQ7CiAgfQoKICBwcm9jZXNzTWVzc2FnZShkYXRhKSB7CiAgICBsZXQgZm4sCiAgICAgIHJldCA9IG51bGw7CiAgICBpZighKCdjb21tYW5kJyBpbiBkYXRhKSkgcmV0dXJuIHN0YXR1c1Jlc3BvbnNlKGZhbHNlLCBgTm8gY29tbWFuZCBzcGVjaWZpZWRgKTsKICAgIGNvbnN0IHsgY29tbWFuZCwgc2VxLCBwYXJhbXMgfSA9IGRhdGE7CiAgICBjb25zdCB7IGNvbW1hbmRzIH0gPSB0aGlzOwogICAgZm4gPSBjb21tYW5kc1tjb21tYW5kXTsKICAgIHRoaXMubG9nKCdSUENTZXJ2ZXIucHJvY2Vzc01lc3NhZ2UnLCB7IGNvbW1hbmQsIHNlcSwgcGFyYW1zIH0pOwogICAgaWYodHlwZW9mIHNlcSA9PSAnbnVtYmVyJykgdGhpcy5tZXNzYWdlcy5yZXF1ZXN0c1tzZXFdID0gZGF0YTsKICAgIGlmKHR5cGVvZiBmbiA9PSAnZnVuY3Rpb24nKSByZXR1cm4gZm4uY2FsbCh0aGlzLCBkYXRhKTsKICAgIHN3aXRjaCAoY29tbWFuZCkgewogICAgICBkZWZhdWx0OiB7CiAgICAgICAgcmV0ID0gc3RhdHVzUmVzcG9uc2UoZmFsc2UsIGBObyBzdWNoIGNvbW1hbmQgJyR7Y29tbWFuZH0nYCk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0KICAgIHJldHVybiByZXQ7CiAgfQp9CgpkZWZpbmUoUlBDU2VydmVyLnByb3RvdHlwZSwgeyBbU3ltYm9sLnRvU3RyaW5nVGFnXTogJ1JQQ1NlcnZlcicgfSk7CgpSUENTZXJ2ZXIubGlzdCA9IFtdOwoKLyoqCiAqIEBjbGFzcyBUaGlzIGNsYXNzIGRlc2NyaWJlcyBhIGNsaWVudCBjb25uZWN0aW9uLgogKgogKiBAY2xhc3MgICAgICBSUENDbGllbnQKICogQHBhcmFtICAgICAge09iamVjdH0gc29ja2V0CiAqIEBwYXJhbSAgICAgIHtPYmplY3R9IGNsYXNzZXMKICogQHBhcmFtICAgICAge09iamVjdH0gaW5zdGFuY2UKICogQHBhcmFtICAgICAge0Z1bmN0aW9ufSBpbnN0YW5jZQogKgogKi8KZXhwb3J0IGNsYXNzIFJQQ0NsaWVudCBleHRlbmRzIENvbm5lY3Rpb24gewogIGNvbnN0cnVjdG9yKHNvY2tldCwgaW5zdGFuY2UsIGxvZywgY29kZWMgPSBjb2RlY3MuanNvbihmYWxzZSksIGNsYXNzZXMpIHsKICAgIHN1cGVyKHNvY2tldCwgaW5zdGFuY2UsIGxvZywgY29kZWMpOwogICAgdGhpcy5pbnN0YW5jZXMgPSB7fTsKICAgIHRoaXMuY2xhc3NlcyA9IGNsYXNzZXM7CiAgICB0aGlzLmNvbm5lY3RlZCA9IHRydWU7CiAgICBSUENDbGllbnQuc2V0LmFkZCh0aGlzKTsKICAgIC8vdGhpcy5sb2coJ1JQQ0NsaWVudC5jb25zdHJ1Y3RvcicsIHsgc29ja2V0LCBpbnN0YW5jZSwgbG9nLCBjb2RlYywgY2xhc3NlcyB9IC8qLCBuZXcgRXJyb3IoKS5zdGFjay5yZXBsYWNlKC9FcnJvclxuPy8sICcnKSovKTsKICAgIC8vCiAgICAvLwogICAgY29uc29sZS5sb2coJ1JQQ0NsaWVudC5vbicsdGhpcy5vbik7CgogICAgLy90aGlzLm9uKCdlcnJvcicsIGUgPT4gY29uc29sZS5lcnJvcignUlBDQ2xpZW50JywgZSkpOwoKICAgIC8vdGhpcy5vbigncmVzcG9uc2UnLCByID0+IGNvbnNvbGUubG9nKCdSUENDbGllbnQub25yZXNwb25zZScsIHIpKTsKICAgIGxldCBhcGk7CgogICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGhpcywgewogICAgICBhcGk6IHsKICAgICAgICBnZXQoKSB7CiAgICAgICAgICByZXR1cm4gYXBpID8/IChhcGkgPSBuZXcgUlBDQXBpKHRoaXMpKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pOwogIH0KCiAgcHJvY2Vzc01lc3NhZ2UocmVzcG9uc2UpIHsKICAgIC8vdGhpcy5sb2coJ1JQQ0NsaWVudC5wcm9jZXNzTWVzc2FnZScsIHJlc3BvbnNlLCBuZXcgRXJyb3IoKS5zdGFjay5yZXBsYWNlKC9FcnJvclxuPy8sICcnKSk7CiAgICBjb25zdCB7IHN1Y2Nlc3MsIGVycm9yLCByZXN1bHQsIHNlcSB9ID0gcmVzcG9uc2U7CgogICAgdGhpcy5sb2coJ1JQQ0NsaWVudC5wcm9jZXNzTWVzc2FnZScseyBzdWNjZXNzLCBlcnJvciwgcmVzdWx0LCBzZXEgfSk7CiAgICAKICAgIGlmKHN1Y2Nlc3MpIHRoaXMuZW1pdCgncmVzcG9uc2UnLCByZXN1bHQpOwogICAgZWxzZSBpZihlcnJvcikgdGhpcy5lbWl0KCdlcnJvcicsIGVycm9yKTsKICB9CgogIGNvbW1hbmQobmFtZSwgcGFyYW1zKSB7CiAgICByZXR1cm4gbmV3IFByb21pc2UoKGFjY2VwdCwgcmVqZWN0KSA9PiB7CiAgICAgIHRoaXMub25jZSgncmVzcG9uc2UnLCByZXNwb25zZSA9PiBhY2NlcHQocmVzcG9uc2UpKTsKICAgICAgdGhpcy5vbmNlKCdlcnJvcicsIGUgPT4gcmVqZWN0KGUpKTsKCiAgICAgIHRoaXMuc2VuZENvbW1hbmQobmFtZSwgcGFyYW1zKTsKICAgIH0pOwogIH0KfQoKZGVmaW5lKFJQQ0NsaWVudC5wcm90b3R5cGUsIHsgW1N5bWJvbC50b1N0cmluZ1RhZ106ICdSUENDbGllbnQnIH0pOwoKLyoqCiAqIEBjbGFzcyBDcmVhdGVzIG5ldyBSUEMgc29ja2V0CiAqCiAqIEBwYXJhbSAgICAgIHtzdHJpbmd9ICAgICBbdXJsPXdpbmRvdy5sb2NhdGlvbi5ocmVmXSAgICAgVVJMICh3czovLzEyNy4wLjAuMSkgb3IgUG9ydAogKiBAcGFyYW0gICAgICB7ZnVuY3Rpb259ICAgW3NlcnZpY2U9UlBDU2VydmVyXSAgVGhlIHNlcnZpY2UgY29uc3RydWN0b3IKICogQHJldHVybiAgICAge1JQQ1NvY2tldH0gIFRoZSBSUEMgc29ja2V0LgogKi8KZXhwb3J0IGZ1bmN0aW9uIFJQQ1NvY2tldCh1cmwsIHNlcnZpY2UgPSBSUENTZXJ2ZXIsIHZlcmJvc2l0eSA9IDEpIHsKICBpZighbmV3LnRhcmdldCkgcmV0dXJuIG5ldyBSUENTb2NrZXQodXJsLCBzZXJ2aWNlLCB2ZXJib3NpdHkpOwoKICBjb25zb2xlLmxvZygnUlBDU29ja2V0JywgeyB1cmwsIHNlcnZpY2UsIHZlcmJvc2l0eSB9KTsKCiAgLy8gY29uc3QgREVCVUcgPSBEZWJ1Z0ZsYWdzKCk7CiAgY29uc3QgaW5zdGFuY2UgPSBuZXcudGFyZ2V0ID8gdGhpcyA6IG5ldyBSUENTb2NrZXQodXJsLCBzZXJ2aWNlLCB2ZXJib3NpdHkpOwogIGNvbnN0IGxvZyA9IC8qY29uc29sZS5jb25maWcKICAgID8gKG1zZywgLi4uYXJncykgPT4gewogICAgICAgIGNvbnN0IHsgY29uc29sZSB9ID0gZ2xvYmFsVGhpczsKICAgICAgICBjb25zb2xlIAogICAgICAgICAgLmxvZygKICAgICAgICAgICAgeyBtc2cgfSwKICAgICAgICAgICAgY29uc29sZS5jb25maWcoewogICAgICAgICAgICAgIG11bHRpbGluZTogZmFsc2UsCiAgICAgICAgICAgICAgY29tcGFjdDogZmFsc2UsCiAgICAgICAgICAgICAgbWF4U3RyaW5nTGVuZ3RoOiAxMDAsCiAgICAgICAgICAgICAgc3RyaW5nQnJlYWtOZXdsaW5lOiBmYWxzZSwKICAgICAgICAgICAgICBoaWRlS2V5czogWydvYmonXQogICAgICAgICAgICB9KSwKICAgICAgICAgICAgLi4uYXJncwogICAgICAgICAgKTsKICAgICAgfQogICAgOiBjb25zb2xlLmxvZzsgKi8gKC4uLmFyZ3MpID0+IHsKICAgIGxldCB0b2sgPSAoYXJnc1swXSB8fCAnJykucmVwbGFjZSgvW15BLVphLXowLTlfXS4qL2csICcnKTsKCiAgICAvKmlmKERFQlVHW3Rva10pIGNvbnNvbGUuZGVidWcoLi4uYXJncyk7CiAgICBlbHNlICovIGNvbnNvbGUubG9nKC4uLmFyZ3MpOwogIH07CgogIGRlZmluZShpbnN0YW5jZSwgewogICAgZ2V0IGZkKCkgewogICAgICBsZXQgcmV0ID0gT2JqZWN0LmtleXModGhpcy5mZGxpc3QpWzBdID8/IC0xOwogICAgICBpZighaXNOYU4oK3JldCkpIHJldCA9ICtyZXQ7CiAgICAgIHJldHVybiByZXQ7CiAgICB9LAogICAgZ2V0IHNvY2tldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuZmRsaXN0W3RoaXMuZmRdPy5zb2NrZXQ7CiAgICB9LAogICAgZ2V0IGNvbm5lY3Rpb24oKSB7CiAgICAgIHJldHVybiB0aGlzLmZkbGlzdFt0aGlzLmZkXTsKICAgIH0sCiAgICBmZGxpc3Q6IHt9LAogICAgY2xhc3Nlczoge30sCiAgICBsb2cKICB9KTsKCiAgY29uc3QgY2FsbGJhY2tzID0gc2VydmljZS5nZXRDYWxsYmFja3MoaW5zdGFuY2UsIHZlcmJvc2l0eSk7CgogIGlmKCF1cmwpIHVybCA9IGdsb2JhbFRoaXMubG9jYXRpb24/LmhyZWY7CiAgaWYodHlwZW9mIHVybCAhPSAnb2JqZWN0JykgdXJsID0gcGFyc2VVUkwodXJsKTsKCiAgLyppZih1cmwucHJvdG9jb2wgPT0gJ3dzJykgdXJsLnByb3RvY29sID0gJ2h0dHAnOwogIGlmKHVybC5wcm90b2NvbCA9PSAnd3NzJykgdXJsLnByb3RvY29sID0gJ2h0dHBzJzsqLwoKICBkZWZpbmUoaW5zdGFuY2UsIHsKICAgIHNlcnZpY2UsCiAgICBjYWxsYmFja3MsCiAgICB1cmwsCiAgICBsb2csCiAgICByZWdpc3RlcihjdG9yKSB7CiAgICAgIGlmKHR5cGVvZiBjdG9yID09ICdvYmplY3QnICYmIGN0b3IgIT09IG51bGwpIHsKICAgICAgICBmb3IobGV0IG5hbWUgaW4gY3RvcikgaW5zdGFuY2UuY2xhc3Nlc1tuYW1lXSA9IGN0b3JbbmFtZV07CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaW5zdGFuY2UuY2xhc3Nlc1tjdG9yLm5hbWVdID0gY3RvcjsKICAgICAgfQogICAgICByZXR1cm4gdGhpczsKICAgIH0sCiAgICBsaXN0ZW4obmV3X3dzID0gTWFrZVdlYlNvY2tldCwgb3MgPSBnbG9iYWxUaGlzLm9zKSB7CiAgICAgIHRoaXMubG9nKGAke3NlcnZpY2UubmFtZX0gbGlzdGVuaW5nIG9uICR7dGhpcy51cmx9YCk7CiAgICAgIGlmKG9zKSBjYWxsYmFja3Mub25GZCA9IHNldEhhbmRsZXJzRnVuY3Rpb24ob3MpOwogICAgICB0aGlzLmxpc3RlbmluZyA9IHRydWU7CiAgICAgIHRoaXMud3MgPSBuZXdfd3ModGhpcy51cmwsIGNhbGxiYWNrcywgdHJ1ZSk7CiAgICAgIGlmKG5ld193cyAhPT0gTWFrZVdlYlNvY2tldCkKICAgICAgICBpZih0aGlzLndzLnRoZW4pIHRoaXMud3MudGhlbigoKSA9PiAodGhpcy5saXN0ZW5pbmcgPSBmYWxzZSkpOwogICAgICAgIGVsc2UgdGhpcy5saXN0ZW5pbmcgPSBmYWxzZTsKICAgICAgcmV0dXJuIHRoaXM7CiAgICB9LAogICAgLyphc3luYyovIGNvbm5lY3QobmV3X3dzID0gTWFrZVdlYlNvY2tldCwgb3MgPSBnbG9iYWxUaGlzLm9zKSB7CiAgICAgIHRoaXMubG9nKGAke3NlcnZpY2UubmFtZX0gY29ubmVjdGluZyB0byAke3RoaXMudXJsfWApOwogICAgICBpZihvcykgY2FsbGJhY2tzLm9uRmQgPSBzZXRIYW5kbGVyc0Z1bmN0aW9uKG9zKTsKICAgICAgdGhpcy53cyA9IG5ld193cyh0aGlzLnVybCwgY2FsbGJhY2tzLCBmYWxzZSk7CiAgICAgIC8vY29uc29sZS5sb2coJ2Nvbm5lY3QoKScsIHRoaXMud3MpOwogICAgICByZXR1cm4gdGhpczsKICAgIH0sCiAgICBnZXQgY29ubmVjdGVkKCkgewogICAgICBjb25zdCB3cyA9IHRoaXMud3M7CiAgICAgIGNvbnNvbGUubG9nKCd3cycsIHdzKTsKICAgICAgaWYod3MpIHJldHVybiB0eXBlb2Ygd3MucmVhZHlTdGF0ZSA9PSAnbnVtYmVyJyA/IHdzLnJlYWR5U3RhdGUgPT0gd3MuT1BFTiA6IGZhbHNlOwogICAgICBjb25zdCB7IGZkbGlzdCB9ID0gaW5zdGFuY2U7CiAgICAgIGNvbnNvbGUubG9nKCdmZGxpc3QnLCBmZGxpc3QpOwoKICAgICAgcmV0dXJuIGZkbGlzdFtPYmplY3Qua2V5cyhmZGxpc3QpWzBdXS5jb25uZWN0ZWQ7CiAgICB9CiAgfSk7CgogIFJQQ1NvY2tldC5zZXQuYWRkKGluc3RhbmNlKTsKCiAgcmV0dXJuIGluc3RhbmNlOwp9Cgpmb3IobGV0IGN0b3Igb2YgW1JQQ1NvY2tldCwgQ29ubmVjdGlvbiwgUlBDQ2xpZW50LCBSUENTZXJ2ZXJdKSB7CiAgbGV0IHNldCA9IG5ldyBTZXQoKTsKICBkZWZpbmUoY3RvciwgewogICAgc2V0LAogICAgZ2V0IGxpc3QoKSB7CiAgICAgIHJldHVybiBbLi4uc2V0XTsKICAgIH0sCiAgICBnZXQgbGFzdCgpIHsKICAgICAgcmV0dXJuIHRoaXMubGlzdC5sYXN0OwogICAgfQogIH0pOwp9CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoUlBDU29ja2V0LnByb3RvdHlwZSwgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnUlBDU29ja2V0JyB9KTsKCmZ1bmN0aW9uIE1ha2VXZWJTb2NrZXQodXJsLCBjYWxsYmFja3MpIHsKICBsZXQgd3M7CiAgdHJ5IHsKICAgIHdzID0gbmV3IFdlYlNvY2tldCh1cmwgKyAnJyk7CiAgfSBjYXRjaChlcnJvcikgewogICAgY2FsbGJhY2tzLm9uRXJyb3Iod3MsIGVycm9yKTsKICAgIHJldHVybiBudWxsOwogIH0KICB3cy5vbmNvbm5lY3QgPSAoKSA9PiBjYWxsYmFja3Mub25Db25uZWN0KHdzKTsKICB3cy5vbm9wZW4gPSAoKSA9PiBjYWxsYmFja3Mub25PcGVuKHdzKTsKICB3cy5vbmVycm9yID0gZXJyb3IgPT4gY2FsbGJhY2tzLm9uRXJyb3Iod3MsIGVycm9yKTsKICB3cy5vbm1lc3NhZ2UgPSBtc2cgPT4gY2FsbGJhY2tzLm9uTWVzc2FnZSh3cywgbXNnKTsKICB3cy5vbnBvbmcgPSBwb25nID0+IGNhbGxiYWNrcy5vblBvbmcod3MsIHBvbmcpOwogIHdzLm9uY2xvc2UgPSByZWFzb24gPT4gY2FsbGJhY2tzLm9uQ2xvc2Uod3MsIHJlYXNvbik7CiAgd3MuZmQgPSBzb2NrSWQgPSAoc29ja0lkIHwgMCkgKyAxOwoKICByZXR1cm4gd3M7Cn0KCmV4cG9ydCBmdW5jdGlvbiBpc1RoZW5hYmxlKHZhbHVlKSB7CiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSAnb2JqZWN0JyAmJiB2YWx1ZSAhPSBudWxsICYmIHR5cGVvZiB2YWx1ZS50aGVuID09ICdmdW5jdGlvbic7Cn0KCmV4cG9ydCBmdW5jdGlvbiBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKSB7CiAgaWYodHlwZW9mIG9iaiA9PSAnb2JqZWN0JyAmJiBvYmogIT0gbnVsbCkgewogICAgY29uc3QgaGFuZGxlciA9IG9ialsnb24nICsgZXZlbnROYW1lXTsKICAgIGlmKHR5cGVvZiBoYW5kbGVyID09ICdmdW5jdGlvbicpIHJldHVybiBoYW5kbGVyOwogIH0KfQoKZXhwb3J0IGZ1bmN0aW9uIGNhbGxIYW5kbGVyKG9iaiwgZXZlbnROYW1lLCAuLi5hcmdzKSB7CiAgbGV0IHJldCwKICAgIGZuID0gaGFzSGFuZGxlcihvYmosIGV2ZW50TmFtZSk7CiAgaWYoZm4pIHJldHVybiBmbi5jYWxsKG9iaiwgLi4uYXJncyk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBwYXJzZVVSTCh1cmxfb3JfcG9ydCkgewogIGxldCBwcm90b2NvbCwgaG9zdCwgcG9ydDsKICBpZighaXNOYU4oK3VybF9vcl9wb3J0KSkgW3Byb3RvY29sLCBob3N0LCBwb3J0XSA9IFsnd3MnLCAnMC4wLjAuMCcsIHVybF9vcl9wb3J0XTsKICBlbHNlIHsKICAgIFtwcm90b2NvbCA9ICd3cycsIGhvc3QsIHBvcnQgPSA4MF0gPSBbLi4uLyguKjpcL1wvfCkoW146L10qKSg6WzAtOV0rfCkuKi8uZXhlYyh1cmxfb3JfcG9ydCldLnNsaWNlKDEpOwogICAgaWYodHlwZW9mIHBvcnQgPT0gJ3N0cmluZycpIHBvcnQgPSBwb3J0LnNsaWNlKDEpOwogIH0KICBwb3J0ID0gK3BvcnQ7CiAgaWYocHJvdG9jb2wpIHsKICAgIHByb3RvY29sID0gcHJvdG9jb2wuc2xpY2UoMCwgLTMpOwogICAgaWYocHJvdG9jb2wuc3RhcnRzV2l0aCgnaHR0cCcpKSBwcm90b2NvbCA9IHByb3RvY29sLnJlcGxhY2UoJ2h0dHAnLCAnd3MnKTsKICB9IGVsc2UgewogICAgcHJvdG9jb2wgPSAnd3MnOwogIH0KCiAgcmV0dXJuIGRlZmluZSgKICAgIHsKICAgICAgcHJvdG9jb2wsCiAgICAgIGhvc3QsCiAgICAgIHBvcnQKICAgIH0sCiAgICB7CiAgICAgIHRvU3RyaW5nKCkgewogICAgICAgIGNvbnN0IHsgcHJvdG9jb2wsIGhvc3QsIHBvcnQgfSA9IHRoaXM7CiAgICAgICAgcmV0dXJuIGAke3Byb3RvY29sIHx8ICd3cyd9Oi8vJHtob3N0fToke3BvcnR9YDsKICAgICAgfQogICAgfQogICk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBHZXRQcm9wZXJ0aWVzKAogIG9iaiwKICBtZXRob2QgPSBvYmogPT4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMob2JqKSwKICBwcmVkID0gKG9iaiwgZGVwdGgpID0+IG9iaiAhPT0gT2JqZWN0LnByb3RvdHlwZQopIHsKICBsZXQgc2V0ID0gbmV3IFNldCgpOwogIGxldCBkZXB0aCA9IDA7CiAgZG8gewogICAgaWYoIXByZWQob2JqLCBkZXB0aCkpIGJyZWFrOwogICAgZm9yKGxldCBwcm9wIG9mIG1ldGhvZChvYmosIGRlcHRoKSkgc2V0LmFkZChwcm9wKTsKICAgIGxldCBwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmopOwogICAgaWYocHJvdG8gPT09IG9iaikgYnJlYWs7CiAgICBvYmogPSBwcm90bzsKICAgICsrZGVwdGg7CiAgfSB3aGlsZSh0eXBlb2Ygb2JqID09ICdvYmplY3QnICYmIG9iaiAhPSBudWxsKTsKICByZXR1cm4gWy4uLnNldF07Cn0KCmV4cG9ydCBmdW5jdGlvbiBHZXRLZXlzKG9iaiwgcHJlZCA9IChvYmosIGRlcHRoKSA9PiBvYmogIT09IE9iamVjdC5wcm90b3R5cGUpIHsKICBsZXQga2V5cyA9IG5ldyBTZXQoKTsKICBmb3IobGV0IGtleSBvZiBHZXRQcm9wZXJ0aWVzKG9iaiwgb2JqID0+IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG9iaiksIHByZWQpKSBrZXlzLmFkZChrZXkpOwogIGZvcihsZXQga2V5IG9mIEdldFByb3BlcnRpZXMob2JqLCBvYmogPT4gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmopLCBwcmVkKSkga2V5cy5hZGQoa2V5KTsKICByZXR1cm4gWy4uLmtleXNdOwp9CgpleHBvcnQgZnVuY3Rpb24gZ2V0UHJvcGVydHlEZXNjcmlwdG9ycyhvYmosIG1lcmdlID0gdHJ1ZSwgcHJlZCA9IChwcm90bywgZGVwdGgpID0+IHRydWUpIHsKICBsZXQgYSA9IFtdOwogIGxldCBkZXB0aCA9IDAsCiAgICBkZXNjLAogICAgb2s7CiAgZG8gewogICAgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKG9iaik7CiAgICB0cnkgewogICAgICBvayA9IHByZWQob2JqLCBkZXB0aCk7CiAgICB9IGNhdGNoKGUpIHt9CiAgICBpZihvaykgYS5wdXNoKGRlc2MpOwogICAgbGV0IHByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaik7CiAgICBpZihwcm90byA9PT0gb2JqKSBicmVhazsKICAgIG9iaiA9IHByb3RvOwogICAgKytkZXB0aDsKICB9IHdoaWxlKHR5cGVvZiBvYmogPT0gJ29iamVjdCcgJiYgb2JqICE9IG51bGwpOwogIGlmKG1lcmdlKSB7CiAgICBsZXQgaSA9IDA7CiAgICBsZXQgcmVzdWx0ID0ge307CiAgICBmb3IobGV0IGRlc2Mgb2YgYSkgZm9yIChsZXQgcHJvcCBvZiBHZXRLZXlzKGRlc2MpKSBpZighKHByb3AgaW4gcmVzdWx0KSkgcmVzdWx0W3Byb3BdID0gZGVzY1twcm9wXTsKICAgIHJldHVybiByZXN1bHQ7CiAgfQogIHJldHVybiBhOwp9CgpleHBvcnQgZnVuY3Rpb24gZGVmaW5lKG9iaiwgLi4uYXJncykgewogIGxldCBwcm9wZGVzYyA9IHt9OwogIGZvcihsZXQgcHJvcHMgb2YgYXJncykgewogICAgbGV0IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhwcm9wcyk7CiAgICBmb3IobGV0IHByb3Agb2YgR2V0S2V5cyhkZXNjKSkgewogICAgICBwcm9wZGVzY1twcm9wXSA9IHsgLi4uZGVzY1twcm9wXSwgZW51bWVyYWJsZTogZmFsc2UsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9OwogICAgICBpZigndmFsdWUnIGluIHByb3BkZXNjW3Byb3BdKSBwcm9wZGVzY1twcm9wXS53cml0YWJsZSA9IHRydWU7CiAgICB9CiAgfQogIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKG9iaiwgcHJvcGRlc2MpOwogIHJldHVybiBvYmo7Cn0KCmV4cG9ydCBmdW5jdGlvbiB3ZWFrQXNzaWduKG9iaiwgLi4uYXJncykgewogIGxldCBwcm9wZGVzYyA9IHt9OwogIGZvcihsZXQgcHJvcHMgb2YgYXJncykgewogICAgbGV0IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhwcm9wcyk7CiAgICBmb3IobGV0IHByb3Agb2YgR2V0S2V5cyhkZXNjKSkgewogICAgICBpZihwcm9wIGluIG9iaikgY29udGludWU7CiAgICAgIHByb3BkZXNjW3Byb3BdID0geyAuLi5kZXNjW3Byb3BdLCBlbnVtZXJhYmxlOiBmYWxzZSwgY29uZmlndXJhYmxlOiB0cnVlIH07CiAgICAgIGlmKCd2YWx1ZScgaW4gcHJvcGRlc2NbcHJvcF0pIHByb3BkZXNjW3Byb3BdLndyaXRhYmxlID0gdHJ1ZTsKICAgIH0KICB9CiAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMob2JqLCBwcm9wZGVzYyk7CiAgcmV0dXJuIG9iajsKfQoKZXhwb3J0IGZ1bmN0aW9uIHNldEhhbmRsZXJzRnVuY3Rpb24ob3MpIHsKICByZXR1cm4gZnVuY3Rpb24oZmQsIHJlYWRhYmxlLCB3cml0YWJsZSkgewogICAgLy9jb25zb2xlLmxvZygnXHgxYlszODs1OzgybW9uRmRceDFiWzBtKCcsIGZkLCAnLCcsIHJlYWRhYmxlLCAnLCcsIHdyaXRhYmxlLCAnKScpOwogICAgb3Muc2V0UmVhZEhhbmRsZXIoZmQsIHJlYWRhYmxlKTsKICAgIG9zLnNldFdyaXRlSGFuZGxlcihmZCwgd3JpdGFibGUpOwogIH07Cn0KCi8qZXhwb3J0IGZ1bmN0aW9uIHNldEhhbmRsZXJzKG9zLCBoYW5kbGVycykgewogIGhhbmRsZXJzLm9uRmQgPSBmdW5jdGlvbihmZCwgcmVhZGFibGUsIHdyaXRhYmxlKSB7CiAgICAvL2NvbnNvbGUubG9nKCdceDFiWzM4OzU7ODJtb25GZFx4MWJbMG0oJywgZmQsICcsJywgcmVhZGFibGUsICcsJywgd3JpdGFibGUsICcpJyk7CiAgICBvcy5zZXRSZWFkSGFuZGxlcihmZCwgcmVhZGFibGUpOwogICAgb3Muc2V0V3JpdGVIYW5kbGVyKGZkLCB3cml0YWJsZSk7CiAgfTsKfSovCgpleHBvcnQgZnVuY3Rpb24gc3RhdHVzUmVzcG9uc2Uoc3VjY2VzcywgcmVzdWx0X29yX2Vycm9yLCBkYXRhKSB7CiAgbGV0IHIgPSB7IHN1Y2Nlc3MgfTsKICBpZihyZXN1bHRfb3JfZXJyb3IgIT09IHVuZGVmaW5lZCkgcltzdWNjZXNzID8gJ3Jlc3VsdCcgOiAnZXJyb3InXSA9IHJlc3VsdF9vcl9lcnJvcjsKICBpZih0eXBlb2YgZGF0YSA9PSAnb2JqZWN0JyAmJiBkYXRhICE9IG51bGwgJiYgdHlwZW9mIGRhdGEuc2VxID09ICdudW1iZXInKSByLnNlcSA9IGRhdGEuc2VxOwogIHJldHVybiByOwp9CgpleHBvcnQgZnVuY3Rpb24gb2JqZWN0Q29tbWFuZChmbikgewogIHJldHVybiBmdW5jdGlvbihkYXRhKSB7CiAgICBjb25zdCByZXNwb25kID0gKHN1Y2Nlc3MsIHJlc3VsdCkgPT4gc3RhdHVzUmVzcG9uc2Uoc3VjY2VzcywgcmVzdWx0LCBkYXRhKTsKICAgIGNvbnN0IHsgaWQsIC4uLnJlc3QgfSA9IGRhdGE7CiAgICBpZihpZCBpbiB0aGlzLmluc3RhbmNlcykgewogICAgICBkYXRhLm9iaiA9IHRoaXMuaW5zdGFuY2VzW2lkXTsKICAgICAgcmV0dXJuIGZuLmNhbGwodGhpcywgZGF0YSwgcmVzcG9uZCk7CiAgICB9CiAgICByZXR1cm4gcmVzcG9uZChmYWxzZSwgYE5vIHN1Y2ggb2JqZWN0ICMke2lkfWApOwogIH07Cn0KCmV4cG9ydCBmdW5jdGlvbiBNYWtlTGlzdENvbW1hbmQocHJlZCA9IHYgPT4gdHlwZW9mIHYgIT0gJ2Z1bmN0aW9uJywgZGVmYXVsdHMgPSB7IG1heERlcHRoOiBJbmZpbml0eSB9KSB7CiAgcmV0dXJuIG9iamVjdENvbW1hbmQoKGRhdGEsIHJlc3BvbmQpID0+IHsKICAgIGNvbnN0IHsgb2JqLCBlbnVtZXJhYmxlID0gdHJ1ZSwgc291cmNlID0gZmFsc2UsIGtleURlc2NyaXB0b3IgPSB0cnVlLCB2YWx1ZURlc2NyaXB0b3IgPSB0cnVlIH0gPSBkYXRhOwogICAgZGVmYXVsdHMgPSB7IGVudW1lcmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIC4uLmRlZmF1bHRzIH07CiAgICBsZXQgcHJvcERlc2MgPSBnZXRQcm9wZXJ0eURlc2NyaXB0b3JzKG9iaiwgdHJ1ZSwgKHByb3RvLCBkZXB0aCkgPT4gZGVwdGggPCAoZGVmYXVsdHMubWF4RGVwdGggPz8gSW5maW5pdHkpKTsKICAgIGxldCBrZXlzID0gR2V0S2V5cyhwcm9wRGVzYyk7CiAgICBsZXQgbWFwID0ga2V5cy5yZWR1Y2UoKGFjYywga2V5KSA9PiB7CiAgICAgIGNvbnN0IGRlc2MgPSBwcm9wRGVzY1trZXldOwogICAgICBsZXQgdmFsdWUgPSBkZXNjPy52YWx1ZSB8fCBvYmpba2V5XTsKICAgICAgaWYocHJlZCh2YWx1ZSkpIHsKICAgICAgICBpZih2YWx1ZURlc2NyaXB0b3IpIHsKICAgICAgICAgIHZhbHVlID0gU2VyaWFsaXplVmFsdWUodmFsdWUsIHNvdXJjZSk7CiAgICAgICAgICBmb3IobGV0IGZsYWcgb2YgWydlbnVtZXJhYmxlJywgJ3dyaXRhYmxlJywgJ2NvbmZpZ3VyYWJsZSddKQogICAgICAgICAgICBpZihkZXNjW2ZsYWddICE9PSB1bmRlZmluZWQpIGlmIChkZXNjW2ZsYWddICE9IGRlZmF1bHRzW2ZsYWddKSB2YWx1ZVtmbGFnXSA9IGRlc2NbZmxhZ107CiAgICAgICAgfSBlbHNlIGlmKHR5cGVvZiB2YWx1ZSA9PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICB2YWx1ZSA9IHZhbHVlICsgJyc7CiAgICAgICAgfQogICAgICAgIGFjYy5wdXNoKFtrZXlEZXNjcmlwdG9yID8gU2VyaWFsaXplVmFsdWUoa2V5KSA6IGtleSwgdmFsdWVdKTsKICAgICAgfQogICAgICByZXR1cm4gYWNjOwogICAgfSwgW10pOwogICAgY29uc29sZS5sb2coJ0xpc3RDb21tYW5kJywgbWFwKTsKICAgIHJldHVybiByZXNwb25kKHRydWUsIG1hcCk7CiAgfSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBnZXRQcm90b3R5cGVOYW1lKHByb3RvKSB7CiAgcmV0dXJuIHByb3RvLmNvbnN0cnVjdG9yPy5uYW1lID8/IHByb3RvW1N5bWJvbC50b1N0cmluZ1RhZ107Cn0KCmZ1bmN0aW9uIERlc2VyaWFsaXplRW50cmllcyhlKSB7CiAgaWYoQXJyYXkuaXNBcnJheShlKSkgcmV0dXJuIGUubWFwKGEgPT4gYS5tYXAoRGVzZXJpYWxpemVWYWx1ZSkpOwogIHRocm93IG5ldyBFcnJvcihgRGVzZXJpYWxpemVFbnRyaWVzIGU9JHtpbnNwZWN0KGUpfWApOwp9CgpmdW5jdGlvbiBEZXNlcmlhbGl6ZUtleXMoZSkgewogIGlmKEFycmF5LmlzQXJyYXkoZSkpIHJldHVybiBlLm1hcCgoW2tdKSA9PiBEZXNlcmlhbGl6ZVZhbHVlKGspKTsKICB0aHJvdyBuZXcgRXJyb3IoYERlc2VyaWFsaXplS2V5cyBlPSR7aW5zcGVjdChlKX1gKTsKfQoKZnVuY3Rpb24gRGVzZXJpYWxpemVNYXAoZSkgewogIHJldHVybiBuZXcgTWFwKERlc2VyaWFsaXplRW50cmllcyhlKSk7Cn0KCmZ1bmN0aW9uIERlc2VyaWFsaXplT2JqZWN0KGUpIHsKICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKERlc2VyaWFsaXplRW50cmllcyhlKSk7Cn0KCmZ1bmN0aW9uIEZvcndhcmRNZXRob2RzKGUsIHJldCA9IHt9LCB0aGlzT2JqKSB7CiAgbGV0IGtleXMgPSBEZXNlcmlhbGl6ZUtleXMoZSk7CiAgZm9yKGxldCBrZXkgb2Yga2V5cykgewogICAgcmV0W2tleV0gPSBNYWtlQ29tbWFuZEZ1bmN0aW9uKGtleSwgbyA9PiBvLmNvbm5lY3Rpb24sIHRoaXNPYmopOwogIH0KICAvLyBjb25zb2xlLmxvZyhgRm9yd2FyZE1ldGhvZHNgLCB7IGUsIGtleXMsIHJldCB9KTsKICByZXR1cm4gcmV0Owp9CgpmdW5jdGlvbiBGb3J3YXJkT2JqZWN0KGUsIHRoaXNPYmopIHsKICBsZXQgb2JqID0gRm9yd2FyZE1ldGhvZHMoZSwge30sIHRoaXNPYmopOwogIGNvbnNvbGUubG9nKGBGb3J3YXJkT2JqZWN0YCwgeyBlLCBvYmosIHRoaXNPYmogfSk7CiAgcmV0dXJuIG9iajsKfQoKZnVuY3Rpb24gTWFrZUNvbW1hbmRGdW5jdGlvbihjbWQsIGdldENvbm5lY3Rpb24sIHRoaXNPYmosIHQpIHsKICBjb25zdCBwZnggPSBbYFJFU1BPTlNFIHRvYCwgdHlwZW9mIGNtZCA9PSAnc3ltYm9sJyA/IGNtZCA6IGAiJHtjbWR9ImBdOwogIHQgPz89IHsgbWV0aG9kczogRm9yd2FyZE1ldGhvZHMsIHByb3BlcnRpZXM6IERlc2VyaWFsaXplT2JqZWN0LCBzeW1ib2xzOiBEZXNlcmlhbGl6ZVN5bWJvbHMgfTsKICBpZih0eXBlb2YgZ2V0Q29ubmVjdGlvbiAhPSAnZnVuY3Rpb24nKQogICAgZ2V0Q29ubmVjdGlvbiA9IG9iaiA9PiAodHlwZW9mIG9iaiA9PSAnb2JqZWN0JyAmJiBvYmogIT0gbnVsbCAmJiAnY29ubmVjdGlvbicgaW4gb2JqICYmIG9iai5jb25uZWN0aW9uKSB8fCBvYmo7CiAgLy9jb25zb2xlLmxvZygiTWFrZUNvbW1hbmRGdW5jdGlvbiIse2NtZCxnZXRDb25uZWN0aW9uLHRoaXNPYmp9KTsKICByZXR1cm4gZnVuY3Rpb24ocGFyYW1zID0ge30pIHsKICAgIHRoaXNPYmogPSB0aGlzT2JqIHx8IHRoaXM7CiAgICBsZXQgY2xpZW50ID0gZ2V0Q29ubmVjdGlvbih0aGlzT2JqKTsKICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgIGNsaWVudC5vbmNlKCdyZXNwb25zZScsIHIgPT4gewogICAgICAgIGlmKHRbY21kXSkgciA9IHRbY21kXShyKTsKICAgICAgICByZXNvbHZlKHIpOwogICAgICB9KTsKCiAgICAgIGNsaWVudC5zZW5kQ29tbWFuZChjbWQsIHBhcmFtcyk7CiAgICB9KTsKICB9OwogIHJldHVybiBhc3luYyBmdW5jdGlvbihwYXJhbXMgPSB7fSkgewogICAgbGV0IGNsaWVudCA9IGdldENvbm5lY3Rpb24odGhpcyk7CiAgICBhd2FpdCBjbGllbnQuc2VuZENvbW1hbmQoY21kLCBwYXJhbXMpOwogICAgbGV0IHIgPSBhd2FpdCBjbGllbnQud2FpdEZvcigncmVzcG9uc2UnKTsKICAgIGlmKHRbY21kXSkgciA9IHRbY21kXShyKTsKICAgIGNvbnNvbGUubG9nKGBSRVNQT05TRSB0byAnJHtjbWR9J2AsIHIpOwogICAgcmV0dXJuIHI7CiAgfTsKfQoKZXhwb3J0IGZ1bmN0aW9uIFNlcmlhbGl6ZVZhbHVlKHZhbHVlLCBzb3VyY2UgPSBmYWxzZSkgewogIGNvbnN0IHR5cGUgPSB0eXBlb2YgdmFsdWU7CiAgbGV0IGRlc2MgPSB7IHR5cGUgfTsKICAKICBpZih0eXBlID09ICdvYmplY3QnICYmIHZhbHVlICE9IG51bGwpIHsKICAgIGRlc2NbJ2NsYXNzJ10gPSBnZXRQcm90b3R5cGVOYW1lKHZhbHVlKSA/PyBnZXRQcm90b3R5cGVOYW1lKE9iamVjdC5nZXRQcm90b3R5cGVPZih2YWx1ZSkpOwogICAgLy9kZXNjWydjaGFpbiddID0gZ2V0UHJvdG90eXBlQ2hhaW4odmFsdWUpLm1hcChnZXRQcm90b3R5cGVOYW1lKTsKICB9IGVsc2UgaWYodHlwZSA9PSAnc3ltYm9sJykgewogICAgZGVzY1snZGVzY3JpcHRpb24nXSA9IHZhbHVlLmRlc2NyaXB0aW9uOwogICAgZGVzY1snc3ltYm9sJ10gPSB2YWx1ZS50b1N0cmluZygpOwogIH0gZWxzZSBpZih0eXBlID09ICdmdW5jdGlvbicpIHsKICAgIGlmKHZhbHVlLmxlbmd0aCAhPT0gdW5kZWZpbmVkKSBkZXNjWydsZW5ndGgnXSA9IHZhbHVlLmxlbmd0aDsKICB9CiAgaWYodmFsdWUgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikgewogICAgbGV0IGFycmF5ID0gbmV3IFVpbnQ4QXJyYXkodmFsdWUpOwogICAgdmFsdWUgPSBbLi4uYXJyYXldOwogICAgZGVzY1snY2xhc3MnXSA9ICdBcnJheUJ1ZmZlcic7CiAgICAvLyBkZWxldGUgZGVzY1snY2hhaW4nXTsKICB9CiAgaWYodHlwZW9mIHZhbHVlID09ICdmdW5jdGlvbicpIHsKICAgIGlmKHNvdXJjZSkgZGVzYy5zb3VyY2UgPSB2YWx1ZSArICcnOwogIH0gZWxzZSBpZih0eXBlb2YgdmFsdWUgIT0gJ3N5bWJvbCcpIHsKICAgIGRlc2MudmFsdWUgPSB2YWx1ZTsKICB9CiAgcmV0dXJuIGRlc2M7Cn0KCmV4cG9ydCBmdW5jdGlvbiBEZXNlcmlhbGl6ZVN5bWJvbHMobmFtZXMpIHsKICByZXR1cm4gbmFtZXMubWFwKG4gPT4gbi5yZXBsYWNlKC9TeW1ib2xcLi8sICcnKSkubWFwKG4gPT4gU3ltYm9sW25dKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIERlc2VyaWFsaXplVmFsdWUoZGVzYykgewogIGlmKGRlc2MudHlwZSA9PSAnc3ltYm9sJykgcmV0dXJuIFN5bWJvbC5mb3IoZGVzYy5kZXNjcmlwdGlvbik7CiAgLy8gaWYoZGVzYy50eXBlPT0nc3RyaW5nJykKICByZXR1cm4gZGVzYy52YWx1ZTsKfQoKZXhwb3J0IGNvbnN0IFJQQ0Nvbm5lY3QgPQogICh1cmwsIHZlcmJvc2l0eSA9IDEpID0+CiAgKG5ld193cyA9IE1ha2VXZWJTb2NrZXQpID0+CiAgICBuZXcgUlBDU29ja2V0KHVybCwgUlBDQ2xpZW50LCB2ZXJib3NpdHkpLmNvbm5lY3QobmV3X3dzKTsKZXhwb3J0IGNvbnN0IFJQQ0xpc3RlbiA9CiAgKHVybCwgdmVyYm9zaXR5ID0gMSkgPT4KICAobmV3X3dzID0gTWFrZVdlYlNvY2tldCkgPT4KICAgIG5ldyBSUENTb2NrZXQodXJsLCBSUENTZXJ2ZXIsIHZlcmJvc2l0eSkubGlzdGVuKG5ld193cyk7CgAAAAAAAAAAAHMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZbQAAAAAAANltAAAAAAAAAAAAAAAA8L8"
				],
				[
					2946,
					1,
					"insert",
					{
						"characters": "\n\nfu"
					},
					"BAAAAGhtAAAAAAAAaW0AAAAAAAAAAAAAaW0AAAAAAABqbQAAAAAAAAAAAABqbQAAAAAAAGttAAAAAAAAAAAAAGttAAAAAAAAbG0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABobQAAAAAAAGhtAAAAAAAAAAAAAAAA8L8"
				],
				[
					2947,
					1,
					"insert",
					{
						"characters": "ct"
					},
					"AgAAAGxtAAAAAAAAbW0AAAAAAAAAAAAAbW0AAAAAAABubQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsbQAAAAAAAGxtAAAAAAAAAAAAAAAA8L8"
				],
				[
					2948,
					1,
					"left_delete",
					null,
					"AQAAAG1tAAAAAAAAbW0AAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABubQAAAAAAAG5tAAAAAAAAAAAAAAAA8L8"
				],
				[
					2949,
					1,
					"insert",
					{
						"characters": "ct"
					},
					"AgAAAG1tAAAAAAAAbm0AAAAAAAAAAAAAbm0AAAAAAABvbQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtbQAAAAAAAG1tAAAAAAAAAAAAAAAA8L8"
				],
				[
					2950,
					3,
					"left_delete",
					null,
					"AwAAAG5tAAAAAAAAbm0AAAAAAAABAAAAdG1tAAAAAAAAbW0AAAAAAAABAAAAY2xtAAAAAAAAbG0AAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvbQAAAAAAAG9tAAAAAAAAAAAAAAAA8L8"
				],
				[
					2951,
					1,
					"insert",
					{
						"characters": "nction"
					},
					"BgAAAGxtAAAAAAAAbW0AAAAAAAAAAAAAbW0AAAAAAABubQAAAAAAAAAAAABubQAAAAAAAG9tAAAAAAAAAAAAAG9tAAAAAAAAcG0AAAAAAAAAAAAAcG0AAAAAAABxbQAAAAAAAAAAAABxbQAAAAAAAHJtAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsbQAAAAAAAGxtAAAAAAAAAAAAAAAA8L8"
				],
				[
					2952,
					1,
					"insert",
					{
						"characters": " istype"
					},
					"BwAAAHJtAAAAAAAAc20AAAAAAAAAAAAAc20AAAAAAAB0bQAAAAAAAAAAAAB0bQAAAAAAAHVtAAAAAAAAAAAAAHVtAAAAAAAAdm0AAAAAAAAAAAAAdm0AAAAAAAB3bQAAAAAAAAAAAAB3bQAAAAAAAHhtAAAAAAAAAAAAAHhtAAAAAAAAeW0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABybQAAAAAAAHJtAAAAAAAAAAAAAAAA8L8"
				],
				[
					2953,
					3,
					"left_delete",
					null,
					"AwAAAHhtAAAAAAAAeG0AAAAAAAABAAAAZXdtAAAAAAAAd20AAAAAAAABAAAAcHZtAAAAAAAAdm0AAAAAAAABAAAAeQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5bQAAAAAAAHltAAAAAAAAAAAAAAAA8L8"
				],
				[
					2954,
					1,
					"insert",
					{
						"characters": "T"
					},
					"AQAAAHZtAAAAAAAAd20AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2bQAAAAAAAHZtAAAAAAAAAAAAAAAA8L8"
				],
				[
					2955,
					2,
					"left_delete",
					null,
					"AgAAAHZtAAAAAAAAdm0AAAAAAAABAAAAVHVtAAAAAAAAdW0AAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3bQAAAAAAAHdtAAAAAAAAAAAAAAAA8L8"
				],
				[
					2956,
					1,
					"insert",
					{
						"characters": "Typede"
					},
					"BgAAAHVtAAAAAAAAdm0AAAAAAAAAAAAAdm0AAAAAAAB3bQAAAAAAAAAAAAB3bQAAAAAAAHhtAAAAAAAAAAAAAHhtAAAAAAAAeW0AAAAAAAAAAAAAeW0AAAAAAAB6bQAAAAAAAAAAAAB6bQAAAAAAAHttAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1bQAAAAAAAHVtAAAAAAAAAAAAAAAA8L8"
				],
				[
					2957,
					1,
					"left_delete",
					null,
					"AQAAAHptAAAAAAAAem0AAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7bQAAAAAAAHttAAAAAAAAAAAAAAAA8L8"
				],
				[
					2958,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAHptAAAAAAAAe20AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6bQAAAAAAAHptAAAAAAAAAAAAAAAA8L8"
				],
				[
					2959,
					1,
					"left_delete",
					null,
					"AQAAAHptAAAAAAAAem0AAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7bQAAAAAAAHttAAAAAAAAAAAAAAAA8L8"
				],
				[
					2960,
					1,
					"insert",
					{
						"characters": "Array"
					},
					"BQAAAHptAAAAAAAAe20AAAAAAAAAAAAAe20AAAAAAAB8bQAAAAAAAAAAAAB8bQAAAAAAAH1tAAAAAAAAAAAAAH1tAAAAAAAAfm0AAAAAAAAAAAAAfm0AAAAAAAB/bQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6bQAAAAAAAHptAAAAAAAAAAAAAAAA8L8"
				],
				[
					2961,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAH9tAAAAAAAAgW0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/bQAAAAAAAH9tAAAAAAAAAAAAAAAA8L8"
				],
				[
					2962,
					1,
					"insert",
					{
						"characters": "value"
					},
					"BQAAAIBtAAAAAAAAgW0AAAAAAAAAAAAAgW0AAAAAAACCbQAAAAAAAAAAAACCbQAAAAAAAINtAAAAAAAAAAAAAINtAAAAAAAAhG0AAAAAAAAAAAAAhG0AAAAAAACFbQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAbQAAAAAAAIBtAAAAAAAAAAAAAAAA8L8"
				],
				[
					2964,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIZtAAAAAAAAh20AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGbQAAAAAAAIZtAAAAAAAAAAAAAAAA8L8"
				],
				[
					2965,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIdtAAAAAAAAiW0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHbQAAAAAAAIdtAAAAAAAAAAAAAAAA8L8"
				],
				[
					2966,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAIhtAAAAAAAAiW0AAAAAAAAAAAAAiW0AAAAAAACKbQAAAAAAAAAAAACJbQAAAAAAAIttAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIbQAAAAAAAIhtAAAAAAAAAAAAAAAA8L8"
				],
				[
					2968,
					1,
					"",
					null,
					"AQAAAIttAAAAAAAA7W0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLbQAAAAAAAIttAAAAAAAAAAAAAAAA8L8"
				],
				[
					2973,
					1,
					"insert",
					{
						"characters": "\ntry"
					},
					"BQAAAIhtAAAAAAAAiW0AAAAAAAAAAAAAiW0AAAAAAACLbQAAAAAAAAAAAACLbQAAAAAAAIxtAAAAAAAAAAAAAIxtAAAAAAAAjW0AAAAAAAAAAAAAjW0AAAAAAACObQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIbQAAAAAAAIhtAAAAAAAAAAAAAADAiEA"
				],
				[
					2974,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI5tAAAAAAAAj20AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACObQAAAAAAAI5tAAAAAAAAAAAAAAAA8L8"
				],
				[
					2975,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAI9tAAAAAAAAkW0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPbQAAAAAAAI9tAAAAAAAAAAAAAAAA8L8"
				],
				[
					2976,
					1,
					"right_delete",
					null,
					"AQAAAJBtAAAAAAAAkG0AAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQbQAAAAAAAJBtAAAAAAAAAAAAAAAA8L8"
				],
				[
					2979,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAPRtAAAAAAAA9W0AAAAAAAAAAAAA9W0AAAAAAAD3bQAAAAAAAAAAAAD3bQAAAAAAAPhtAAAAAAAAAAAAAPVtAAAAAAAA9W0AAAAAAAACAAAAICD1bQAAAAAAAPVtAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD0bQAAAAAAAPRtAAAAAAAAAAAAAAAA8L8"
				],
				[
					2984,
					1,
					"cut",
					null,
					"AQAAAJNtAAAAAAAAk20AAAAAAAAsAAAAT2JqZWN0LmdldFByb3RvdHlwZU9mKFVpbnQzMkFycmF5LnByb3RvdHlwZSk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/bQAAAAAAAJNtAAAAAAAAAAAAAAAAMEA"
				],
				[
					2986,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAGltAAAAAAAAam0AAAAAAAAAAAAAam0AAAAAAABrbQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpbQAAAAAAAGltAAAAAAAAAAAAAAAAMEA"
				],
				[
					2988,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAGptAAAAAAAAa20AAAAAAAAAAAAAa20AAAAAAABsbQAAAAAAAAAAAABsbQAAAAAAAG1tAAAAAAAAAAAAAG1tAAAAAAAAbm0AAAAAAAAAAAAAbm0AAAAAAABvbQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqbQAAAAAAAGptAAAAAAAAAAAAAAAAAAA"
				],
				[
					2989,
					1,
					"insert",
					{
						"characters": " TypedArray"
					},
					"CwAAAG9tAAAAAAAAcG0AAAAAAAAAAAAAcG0AAAAAAABxbQAAAAAAAAAAAABxbQAAAAAAAHJtAAAAAAAAAAAAAHJtAAAAAAAAc20AAAAAAAAAAAAAc20AAAAAAAB0bQAAAAAAAAAAAAB0bQAAAAAAAHVtAAAAAAAAAAAAAHVtAAAAAAAAdm0AAAAAAAAAAAAAdm0AAAAAAAB3bQAAAAAAAAAAAAB3bQAAAAAAAHhtAAAAAAAAAAAAAHhtAAAAAAAAeW0AAAAAAAAAAAAAeW0AAAAAAAB6bQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvbQAAAAAAAG9tAAAAAAAAAAAAAAAA8L8"
				],
				[
					2990,
					1,
					"insert",
					{
						"characters": "Prototype="
					},
					"CgAAAHptAAAAAAAAe20AAAAAAAAAAAAAe20AAAAAAAB8bQAAAAAAAAAAAAB8bQAAAAAAAH1tAAAAAAAAAAAAAH1tAAAAAAAAfm0AAAAAAAAAAAAAfm0AAAAAAAB/bQAAAAAAAAAAAAB/bQAAAAAAAIBtAAAAAAAAAAAAAIBtAAAAAAAAgW0AAAAAAAAAAAAAgW0AAAAAAACCbQAAAAAAAAAAAACCbQAAAAAAAINtAAAAAAAAAAAAAINtAAAAAAAAhG0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6bQAAAAAAAHptAAAAAAAAAAAAAAAA8L8"
				],
				[
					2991,
					1,
					"paste",
					null,
					"AQAAAIRtAAAAAAAAsG0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEbQAAAAAAAIRtAAAAAAAAAAAAAAAA8L8"
				],
				[
					2992,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALBtAAAAAAAAsW0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwbQAAAAAAALBtAAAAAAAAAAAAAAAA8L8"
				],
				[
					2999,
					1,
					"insert",
					{
						"characters": " if"
					},
					"AwAAANttAAAAAAAA3G0AAAAAAAAAAAAA3G0AAAAAAADdbQAAAAAAAAAAAADdbQAAAAAAAN5tAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbbQAAAAAAANttAAAAAAAAAAAAAAAA8L8"
				],
				[
					3000,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAN5tAAAAAAAA4G0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADebQAAAAAAAN5tAAAAAAAAAAAAAAAA8L8"
				],
				[
					3001,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAN5tAAAAAAAA3m0AAAAAAAABAAAAKN5tAAAAAAAA3m0AAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfbQAAAAAAAN9tAAAAAAAAAAAAAAAA8L8"
				],
				[
					3002,
					2,
					"left_delete",
					null,
					"AgAAAN1tAAAAAAAA3W0AAAAAAAABAAAAZtxtAAAAAAAA3G0AAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADebQAAAAAAAN5tAAAAAAAAAAAAAAAA8L8"
				],
				[
					3003,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAANxtAAAAAAAA3W0AAAAAAAAAAAAA3W0AAAAAAADebQAAAAAAAAAAAADebQAAAAAAAN9tAAAAAAAAAAAAAN9tAAAAAAAA4G0AAAAAAAAAAAAA4G0AAAAAAADhbQAAAAAAAAAAAADhbQAAAAAAAOJtAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcbQAAAAAAANxtAAAAAAAAAAAAAAAA8L8"
				],
				[
					3004,
					1,
					"insert",
					{
						"characters": " Typed"
					},
					"BgAAAOJtAAAAAAAA420AAAAAAAAAAAAA420AAAAAAADkbQAAAAAAAAAAAADkbQAAAAAAAOVtAAAAAAAAAAAAAOVtAAAAAAAA5m0AAAAAAAAAAAAA5m0AAAAAAADnbQAAAAAAAAAAAADnbQAAAAAAAOhtAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADibQAAAAAAAOJtAAAAAAAAAAAAAAAA8L8"
				],
				[
					3005,
					1,
					"insert",
					{
						"characters": "ArrayPrototype"
					},
					"DgAAAOhtAAAAAAAA6W0AAAAAAAAAAAAA6W0AAAAAAADqbQAAAAAAAAAAAADqbQAAAAAAAOttAAAAAAAAAAAAAOttAAAAAAAA7G0AAAAAAAAAAAAA7G0AAAAAAADtbQAAAAAAAAAAAADtbQAAAAAAAO5tAAAAAAAAAAAAAO5tAAAAAAAA720AAAAAAAAAAAAA720AAAAAAADwbQAAAAAAAAAAAADwbQAAAAAAAPFtAAAAAAAAAAAAAPFtAAAAAAAA8m0AAAAAAAAAAAAA8m0AAAAAAADzbQAAAAAAAAAAAADzbQAAAAAAAPRtAAAAAAAAAAAAAPRtAAAAAAAA9W0AAAAAAAAAAAAA9W0AAAAAAAD2bQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADobQAAAAAAAOhtAAAAAAAAAAAAAAAA8L8"
				],
				[
					3011,
					2,
					"left_delete",
					null,
					"AgAAACluAAAAAAAAKW4AAAAAAAABAAAAYShuAAAAAAAAKG4AAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqbgAAAAAAACpuAAAAAAAAAAAAAAAA8L8"
				],
				[
					3012,
					1,
					"insert",
					{
						"characters": "value"
					},
					"BQAAAChuAAAAAAAAKW4AAAAAAAAAAAAAKW4AAAAAAAAqbgAAAAAAAAAAAAAqbgAAAAAAACtuAAAAAAAAAAAAACtuAAAAAAAALG4AAAAAAAAAAAAALG4AAAAAAAAtbgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAobgAAAAAAAChuAAAAAAAAAAAAAAAA8L8"
				],
				[
					3014,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAC9uAAAAAAAAMG4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvbgAAAAAAAC9uAAAAAAAAAAAAAAAA8L8"
				],
				[
					3016,
					1,
					"insert",
					{
						"characters": " catch"
					},
					"BgAAADJuAAAAAAAAM24AAAAAAAAAAAAAM24AAAAAAAA0bgAAAAAAAAAAAAA0bgAAAAAAADVuAAAAAAAAAAAAADVuAAAAAAAANm4AAAAAAAAAAAAANm4AAAAAAAA3bgAAAAAAAAAAAAA3bgAAAAAAADhuAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAybgAAAAAAADJuAAAAAAAAAAAAAACAhUA"
				],
				[
					3017,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADhuAAAAAAAAOm4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4bgAAAAAAADhuAAAAAAAAAAAAAAAA8L8"
				],
				[
					3018,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAADluAAAAAAAAOm4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5bgAAAAAAADluAAAAAAAAAAAAAAAA8L8"
				],
				[
					3020,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADtuAAAAAAAAPG4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7bgAAAAAAADtuAAAAAAAAAAAAAAAA8L8"
				],
				[
					3021,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADxuAAAAAAAAPm4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8bgAAAAAAADxuAAAAAAAAAAAAAAAA8L8"
				],
				[
					3024,
					1,
					"left_delete",
					null,
					"AQAAAD5uAAAAAAAAPm4AAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/bgAAAAAAAD9uAAAAAAAAAAAAAAAAWkA"
				],
				[
					3032,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEBuAAAAAAAAQW4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAbgAAAAAAAEBuAAAAAAAAAAAAAAAAWkA"
				],
				[
					3046,
					1,
					"insert",
					{
						"characters": " eolse"
					},
					"BgAAAAJxAAAAAAAAA3EAAAAAAAAAAAAAA3EAAAAAAAAEcQAAAAAAAAAAAAAEcQAAAAAAAAVxAAAAAAAAAAAAAAVxAAAAAAAABnEAAAAAAAAAAAAABnEAAAAAAAAHcQAAAAAAAAAAAAAHcQAAAAAAAAhxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACcQAAAAAAAAJxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3047,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAhxAAAAAAAACXEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIcQAAAAAAAAhxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3048,
					5,
					"left_delete",
					null,
					"BQAAAAhxAAAAAAAACHEAAAAAAAABAAAAIAdxAAAAAAAAB3EAAAAAAAABAAAAZQZxAAAAAAAABnEAAAAAAAABAAAAcwVxAAAAAAAABXEAAAAAAAABAAAAbARxAAAAAAAABHEAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJcQAAAAAAAAlxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3049,
					1,
					"insert",
					{
						"characters": "lse"
					},
					"AwAAAARxAAAAAAAABXEAAAAAAAAAAAAABXEAAAAAAAAGcQAAAAAAAAAAAAAGcQAAAAAAAAdxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEcQAAAAAAAARxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3050,
					1,
					"insert",
					{
						"characters": " if"
					},
					"AwAAAAdxAAAAAAAACHEAAAAAAAAAAAAACHEAAAAAAAAJcQAAAAAAAAAAAAAJcQAAAAAAAApxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHcQAAAAAAAAdxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3051,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAApxAAAAAAAADHEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKcQAAAAAAAApxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3052,
					1,
					"insert",
					{
						"characters": "va"
					},
					"AgAAAAtxAAAAAAAADHEAAAAAAAAAAAAADHEAAAAAAAANcQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALcQAAAAAAAAtxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3053,
					2,
					"left_delete",
					null,
					"AgAAAAxxAAAAAAAADHEAAAAAAAABAAAAYQtxAAAAAAAAC3EAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANcQAAAAAAAA1xAAAAAAAAAAAAAAAA8L8"
				],
				[
					3054,
					1,
					"insert",
					{
						"characters": "osTyp"
					},
					"BQAAAAtxAAAAAAAADHEAAAAAAAAAAAAADHEAAAAAAAANcQAAAAAAAAAAAAANcQAAAAAAAA5xAAAAAAAAAAAAAA5xAAAAAAAAD3EAAAAAAAAAAAAAD3EAAAAAAAAQcQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALcQAAAAAAAAtxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3055,
					5,
					"left_delete",
					null,
					"BQAAAA9xAAAAAAAAD3EAAAAAAAABAAAAcA5xAAAAAAAADnEAAAAAAAABAAAAeQ1xAAAAAAAADXEAAAAAAAABAAAAVAxxAAAAAAAADHEAAAAAAAABAAAAcwtxAAAAAAAAC3EAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQcQAAAAAAABBxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3056,
					1,
					"insert",
					{
						"characters": "isType"
					},
					"BgAAAAtxAAAAAAAADHEAAAAAAAAAAAAADHEAAAAAAAANcQAAAAAAAAAAAAANcQAAAAAAAA5xAAAAAAAAAAAAAA5xAAAAAAAAD3EAAAAAAAAAAAAAD3EAAAAAAAAQcQAAAAAAAAAAAAAQcQAAAAAAABFxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALcQAAAAAAAAtxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3057,
					1,
					"insert_completion",
					{
						"completion": "isTypedArray",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "isTypedArray"
					},
					"AgAAAAtxAAAAAAAAC3EAAAAAAAAGAAAAaXNUeXBlC3EAAAAAAAAXcQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARcQAAAAAAABFxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3058,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABdxAAAAAAAAGXEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXcQAAAAAAABdxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3060,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABpxAAAAAAAAG3EAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAacQAAAAAAABpxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3061,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABtxAAAAAAAAHXEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbcQAAAAAAABtxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3062,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAABxxAAAAAAAAHXEAAAAAAAAAAAAAHXEAAAAAAAAfcQAAAAAAAAAAAAAfcQAAAAAAACBxAAAAAAAAAAAAACBxAAAAAAAAInEAAAAAAAAAAAAAHXEAAAAAAAAdcQAAAAAAAAIAAAAgIB1xAAAAAAAAIXEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAccQAAAAAAABxxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3064,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAACVxAAAAAAAAJnEAAAAAAAAAAAAAJnEAAAAAAAAocQAAAAAAAAAAAAAdcQAAAAAAAB1xAAAAAAAABAAAACAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlcQAAAAAAACVxAAAAAAAAAAAAAAAAQEA"
				],
				[
					3075,
					1,
					"cut",
					null,
					"AQAAAGptAAAAAAAAam0AAAAAAABIAAAAY29uc3QgVHlwZWRBcnJheVByb3RvdHlwZT1PYmplY3QuZ2V0UHJvdG90eXBlT2YoVWludDMyQXJyYXkucHJvdG90eXBlKTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqbQAAAAAAALJtAAAAAAAAAAAAAAAA8L8"
				],
				[
					3076,
					2,
					"paste",
					null,
					"AgAAAGptAAAAAAAAsm0AAAAAAAAAAAAAsm0AAAAAAAD6bQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqbQAAAAAAAGptAAAAAAAAAAAAAAAA8L8"
				],
				[
					3080,
					2,
					"left_delete",
					null,
					"AwAAAMNtAAAAAAAAw20AAAAAAAAIAAAAcm90b3R5cGVicQAAAAAAAGJxAAAAAAAAAgAAACAgwm0AAAAAAADCbQAAAAAAAAEAAABQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDbQAAAAAAAMttAAAAAAAAAAAAAAAA8L8"
				],
				[
					3081,
					1,
					"insert",
					{
						"characters": "Constructor"
					},
					"CwAAAMJtAAAAAAAAw20AAAAAAAAAAAAAw20AAAAAAADEbQAAAAAAAAAAAADEbQAAAAAAAMVtAAAAAAAAAAAAAMVtAAAAAAAAxm0AAAAAAAAAAAAAxm0AAAAAAADHbQAAAAAAAAAAAADHbQAAAAAAAMhtAAAAAAAAAAAAAMhtAAAAAAAAyW0AAAAAAAAAAAAAyW0AAAAAAADKbQAAAAAAAAAAAADKbQAAAAAAAMttAAAAAAAAAAAAAMttAAAAAAAAzG0AAAAAAAAAAAAAzG0AAAAAAADNbQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCbQAAAAAAAMJtAAAAAAAAAAAAAAAA8L8"
				],
				[
					3083,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM5tAAAAAAAAz20AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADObQAAAAAAAM5tAAAAAAAAAAAAAAAA8L8"
				],
				[
					3085,
					1,
					"cut",
					null,
					"AQAAAM9tAAAAAAAAz20AAAAAAAAtAAAAT2JqZWN0LmdldFByb3RvdHlwZU9mKFVpbnQzMkFycmF5LnByb3RvdHlwZSk7",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPbQAAAAAAAPxtAAAAAAAA////////738"
				],
				[
					3086,
					1,
					"insert",
					{
						"characters": "TypedArra"
					},
					"CQAAAM9tAAAAAAAA0G0AAAAAAAAAAAAA0G0AAAAAAADRbQAAAAAAAAAAAADRbQAAAAAAANJtAAAAAAAAAAAAANJtAAAAAAAA020AAAAAAAAAAAAA020AAAAAAADUbQAAAAAAAAAAAADUbQAAAAAAANVtAAAAAAAAAAAAANVtAAAAAAAA1m0AAAAAAAAAAAAA1m0AAAAAAADXbQAAAAAAAAAAAADXbQAAAAAAANhtAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPbQAAAAAAAM9tAAAAAAAAAAAAAAAA8L8"
				],
				[
					3087,
					1,
					"insert_completion",
					{
						"completion": "TypedArrayPrototype",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "TypedArrayPrototype"
					},
					"AgAAAM9tAAAAAAAAz20AAAAAAAAJAAAAVHlwZWRBcnJhz20AAAAAAADibQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYbQAAAAAAANhtAAAAAAAAAAAAAAAA8L8"
				],
				[
					3088,
					1,
					"insert",
					{
						"characters": ".constructgo"
					},
					"DAAAAOJtAAAAAAAA420AAAAAAAAAAAAA420AAAAAAADkbQAAAAAAAAAAAADkbQAAAAAAAOVtAAAAAAAAAAAAAOVtAAAAAAAA5m0AAAAAAAAAAAAA5m0AAAAAAADnbQAAAAAAAAAAAADnbQAAAAAAAOhtAAAAAAAAAAAAAOhtAAAAAAAA6W0AAAAAAAAAAAAA6W0AAAAAAADqbQAAAAAAAAAAAADqbQAAAAAAAOttAAAAAAAAAAAAAOttAAAAAAAA7G0AAAAAAAAAAAAA7G0AAAAAAADtbQAAAAAAAAAAAADtbQAAAAAAAO5tAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADibQAAAAAAAOJtAAAAAAAAAAAAAAAA8L8"
				],
				[
					3089,
					2,
					"left_delete",
					null,
					"AgAAAO1tAAAAAAAA7W0AAAAAAAABAAAAb+xtAAAAAAAA7G0AAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADubQAAAAAAAO5tAAAAAAAAAAAAAAAA8L8"
				],
				[
					3090,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAOxtAAAAAAAA7W0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsbQAAAAAAAOxtAAAAAAAAAAAAAAAA8L8"
				],
				[
					3091,
					1,
					"left_delete",
					null,
					"AQAAAOxtAAAAAAAA7G0AAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtbQAAAAAAAO1tAAAAAAAAAAAAAAAA8L8"
				],
				[
					3092,
					1,
					"insert",
					{
						"characters": "or;"
					},
					"AwAAAOxtAAAAAAAA7W0AAAAAAAAAAAAA7W0AAAAAAADubQAAAAAAAAAAAADubQAAAAAAAO9tAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsbQAAAAAAAOxtAAAAAAAAAAAAAAAA8L8"
				],
				[
					3106,
					1,
					"insert",
					{
						"characters": "value"
					},
					"BQAAAFZxAAAAAAAAV3EAAAAAAAAAAAAAV3EAAAAAAABYcQAAAAAAAAAAAABYcQAAAAAAAFlxAAAAAAAAAAAAAFlxAAAAAAAAWnEAAAAAAAAAAAAAWnEAAAAAAABbcQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWcQAAAAAAAFZxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3108,
					1,
					"insert",
					{
						"characters": "\nvalue="
					},
					"CQAAAF9xAAAAAAAAYHEAAAAAAAAAAAAAYHEAAAAAAABicQAAAAAAAAAAAABicQAAAAAAAGRxAAAAAAAAAAAAAGRxAAAAAAAAZXEAAAAAAAAAAAAAZXEAAAAAAABmcQAAAAAAAAAAAABmcQAAAAAAAGdxAAAAAAAAAAAAAGdxAAAAAAAAaHEAAAAAAAAAAAAAaHEAAAAAAABpcQAAAAAAAAAAAABpcQAAAAAAAGpxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfcQAAAAAAAF9xAAAAAAAAAAAAAAAA8L8"
				],
				[
					3109,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAGpxAAAAAAAAbHEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqcQAAAAAAAGpxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3110,
					1,
					"insert",
					{
						"characters": "...value"
					},
					"CAAAAGtxAAAAAAAAbHEAAAAAAAAAAAAAbHEAAAAAAABtcQAAAAAAAAAAAABtcQAAAAAAAG5xAAAAAAAAAAAAAG5xAAAAAAAAb3EAAAAAAAAAAAAAb3EAAAAAAABwcQAAAAAAAAAAAABwcQAAAAAAAHFxAAAAAAAAAAAAAHFxAAAAAAAAcnEAAAAAAAAAAAAAcnEAAAAAAABzcQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrcQAAAAAAAGtxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3112,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHRxAAAAAAAAdXEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0cQAAAAAAAHRxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3114,
					1,
					"left_delete",
					null,
					"AQAAAHVxAAAAAAAAdXEAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2cQAAAAAAAHZxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3133,
					1,
					"insert",
					{
						"characters": ".a"
					},
					"AgAAAHRxAAAAAAAAdXEAAAAAAAAAAAAAdXEAAAAAAAB2cQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0cQAAAAAAAHRxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3134,
					1,
					"left_delete",
					null,
					"AQAAAHVxAAAAAAAAdXEAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2cQAAAAAAAHZxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3135,
					1,
					"insert",
					{
						"characters": "map"
					},
					"AwAAAHVxAAAAAAAAdnEAAAAAAAAAAAAAdnEAAAAAAAB3cQAAAAAAAAAAAAB3cQAAAAAAAHhxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1cQAAAAAAAHVxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3136,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHhxAAAAAAAAenEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4cQAAAAAAAHhxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3137,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAHlxAAAAAAAAenEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5cQAAAAAAAHlxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3138,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAHpxAAAAAAAAe3EAAAAAAAAAAAAAe3EAAAAAAAB8cQAAAAAAAAAAAAB8cQAAAAAAAH1xAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6cQAAAAAAAHpxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3139,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAH1xAAAAAAAAfnEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9cQAAAAAAAH1xAAAAAAAAAAAAAAAA8L8"
				],
				[
					3142,
					1,
					"insert",
					{
						"characters": "typeof"
					},
					"BgAAAH5xAAAAAAAAf3EAAAAAAAAAAAAAf3EAAAAAAACAcQAAAAAAAAAAAACAcQAAAAAAAIFxAAAAAAAAAAAAAIFxAAAAAAAAgnEAAAAAAAAAAAAAgnEAAAAAAACDcQAAAAAAAAAAAACDcQAAAAAAAIRxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+cQAAAAAAAH5xAAAAAAAAAAAAAAAA8L8"
				],
				[
					3143,
					1,
					"insert",
					{
						"characters": " n"
					},
					"AgAAAIRxAAAAAAAAhXEAAAAAAAAAAAAAhXEAAAAAAACGcQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEcQAAAAAAAIRxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3144,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAIZxAAAAAAAAh3EAAAAAAAAAAAAAh3EAAAAAAACIcQAAAAAAAAAAAACIcQAAAAAAAIlxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGcQAAAAAAAIZxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3145,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIlxAAAAAAAAinEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJcQAAAAAAAIlxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3146,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAIpxAAAAAAAAjHEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKcQAAAAAAAIpxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3147,
					1,
					"insert",
					{
						"characters": "number"
					},
					"BgAAAItxAAAAAAAAjHEAAAAAAAAAAAAAjHEAAAAAAACNcQAAAAAAAAAAAACNcQAAAAAAAI5xAAAAAAAAAAAAAI5xAAAAAAAAj3EAAAAAAAAAAAAAj3EAAAAAAACQcQAAAAAAAAAAAACQcQAAAAAAAJFxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLcQAAAAAAAItxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3149,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAJJxAAAAAAAAk3EAAAAAAAAAAAAAk3EAAAAAAACUcQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACScQAAAAAAAJJxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3150,
					1,
					"insert",
					{
						"characters": " n"
					},
					"AgAAAJRxAAAAAAAAlXEAAAAAAAAAAAAAlXEAAAAAAACWcQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUcQAAAAAAAJRxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3151,
					1,
					"insert",
					{
						"characters": " :;"
					},
					"AwAAAJZxAAAAAAAAl3EAAAAAAAAAAAAAl3EAAAAAAACYcQAAAAAAAAAAAACYcQAAAAAAAJlxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWcQAAAAAAAJZxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3152,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJlxAAAAAAAAmnEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZcQAAAAAAAJlxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3153,
					2,
					"left_delete",
					null,
					"AgAAAJlxAAAAAAAAmXEAAAAAAAABAAAAIJhxAAAAAAAAmHEAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACacQAAAAAAAJpxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3154,
					1,
					"insert",
					{
						"characters": " nb"
					},
					"AwAAAJhxAAAAAAAAmXEAAAAAAAAAAAAAmXEAAAAAAACacQAAAAAAAAAAAACacQAAAAAAAJtxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYcQAAAAAAAJhxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3155,
					1,
					"left_delete",
					null,
					"AQAAAJpxAAAAAAAAmnEAAAAAAAABAAAAYg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbcQAAAAAAAJtxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3156,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAJpxAAAAAAAAm3EAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACacQAAAAAAAJpxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3157,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAJtxAAAAAAAAnXEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbcQAAAAAAAJtxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3191,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAACdzAAAAAAAAKHMAAAAAAAAAAAAAKHMAAAAAAAAqcwAAAAAAAAAAAAAqcwAAAAAAACtzAAAAAAAAAAAAACtzAAAAAAAALHMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAncwAAAAAAACdzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3192,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACxzAAAAAAAALnMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAscwAAAAAAACxzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3193,
					1,
					"insert",
					{
						"characters": "desc.cal"
					},
					"CAAAAC1zAAAAAAAALnMAAAAAAAAAAAAALnMAAAAAAAAvcwAAAAAAAAAAAAAvcwAAAAAAADBzAAAAAAAAAAAAADBzAAAAAAAAMXMAAAAAAAAAAAAAMXMAAAAAAAAycwAAAAAAAAAAAAAycwAAAAAAADNzAAAAAAAAAAAAADNzAAAAAAAANHMAAAAAAAAAAAAANHMAAAAAAAA1cwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtcwAAAAAAAC1zAAAAAAAAAAAAAAAA8L8"
				],
				[
					3194,
					2,
					"left_delete",
					null,
					"AgAAADRzAAAAAAAANHMAAAAAAAABAAAAbDNzAAAAAAAAM3MAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1cwAAAAAAADVzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3195,
					1,
					"insert",
					{
						"characters": "lass"
					},
					"BAAAADNzAAAAAAAANHMAAAAAAAAAAAAANHMAAAAAAAA1cwAAAAAAAAAAAAA1cwAAAAAAADZzAAAAAAAAAAAAADZzAAAAAAAAN3MAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzcwAAAAAAADNzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3196,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADdzAAAAAAAAOHMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3cwAAAAAAADdzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3199,
					1,
					"insert",
					{
						"characters": "'ĉl"
					},
					"AwAAAC1zAAAAAAAALnMAAAAAAAAAAAAALnMAAAAAAAAvcwAAAAAAAAAAAAAvcwAAAAAAADBzAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtcwAAAAAAAC1zAAAAAAAAAAAAAAAA8L8"
				],
				[
					3200,
					2,
					"left_delete",
					null,
					"AgAAAC9zAAAAAAAAL3MAAAAAAAABAAAAbC5zAAAAAAAALnMAAAAAAAACAAAAxIk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwcwAAAAAAADBzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3201,
					1,
					"insert",
					{
						"characters": "class'"
					},
					"BgAAAC5zAAAAAAAAL3MAAAAAAAAAAAAAL3MAAAAAAAAwcwAAAAAAAAAAAAAwcwAAAAAAADFzAAAAAAAAAAAAADFzAAAAAAAAMnMAAAAAAAAAAAAAMnMAAAAAAAAzcwAAAAAAAAAAAAAzcwAAAAAAADRzAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAucwAAAAAAAC5zAAAAAAAAAAAAAAAA8L8"
				],
				[
					3202,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAADRzAAAAAAAANXMAAAAAAAAAAAAANXMAAAAAAAA2cwAAAAAAAAAAAAA2cwAAAAAAADdzAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0cwAAAAAAADRzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3203,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADdzAAAAAAAAOHMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3cwAAAAAAADdzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3207,
					1,
					"cut",
					null,
					"AQAAADxzAAAAAAAAPHMAAAAAAAAHAAAALmNsYXNzIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8cwAAAAAAAENzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3211,
					1,
					"insert",
					{
						"characters": "desct"
					},
					"BQAAAC1zAAAAAAAALnMAAAAAAAAAAAAALnMAAAAAAAAvcwAAAAAAAAAAAAAvcwAAAAAAADBzAAAAAAAAAAAAADBzAAAAAAAAMXMAAAAAAAAAAAAAMXMAAAAAAAAycwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtcwAAAAAAAC1zAAAAAAAAAAAAAAAA8L8"
				],
				[
					3212,
					1,
					"left_delete",
					null,
					"AQAAADFzAAAAAAAAMXMAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAycwAAAAAAADJzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3213,
					1,
					"insert",
					{
						"characters": ".type"
					},
					"BQAAADFzAAAAAAAAMnMAAAAAAAAAAAAAMnMAAAAAAAAzcwAAAAAAAAAAAAAzcwAAAAAAADRzAAAAAAAAAAAAADRzAAAAAAAANXMAAAAAAAAAAAAANXMAAAAAAAA2cwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxcwAAAAAAADFzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3214,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAADZzAAAAAAAAN3MAAAAAAAAAAAAAN3MAAAAAAAA4cwAAAAAAAAAAAAA4cwAAAAAAADlzAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2cwAAAAAAADZzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3215,
					1,
					"insert",
					{
						"characters": " 'object'"
					},
					"CQAAADlzAAAAAAAAOnMAAAAAAAAAAAAAOnMAAAAAAAA7cwAAAAAAAAAAAAA7cwAAAAAAADxzAAAAAAAAAAAAADxzAAAAAAAAPXMAAAAAAAAAAAAAPXMAAAAAAAA+cwAAAAAAAAAAAAA+cwAAAAAAAD9zAAAAAAAAAAAAAD9zAAAAAAAAQHMAAAAAAAAAAAAAQHMAAAAAAABBcwAAAAAAAAAAAABBcwAAAAAAAEJzAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5cwAAAAAAADlzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3216,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAEJzAAAAAAAAQ3MAAAAAAAAAAAAAQ3MAAAAAAABEcwAAAAAAAAAAAABEcwAAAAAAAEVzAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCcwAAAAAAAEJzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3217,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEVzAAAAAAAARnMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFcwAAAAAAAEVzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3219,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFZzAAAAAAAAV3MAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWcwAAAAAAAFZzAAAAAAAA////////738"
				],
				[
					3220,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAFdzAAAAAAAAWXMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXcwAAAAAAAFdzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3221,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAFhzAAAAAAAAWXMAAAAAAAAAAAAAWXMAAAAAAABbcwAAAAAAAAAAAABbcwAAAAAAAFxzAAAAAAAAAAAAAFxzAAAAAAAAXnMAAAAAAAAAAAAAWXMAAAAAAABZcwAAAAAAAAIAAAAgIFlzAAAAAAAAXXMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYcwAAAAAAAFhzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3224,
					1,
					"insert",
					{
						"characters": "\t\t"
					},
					"AgAAAF1zAAAAAAAAX3MAAAAAAAAAAAAAX3MAAAAAAABhcwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdcwAAAAAAAF1zAAAAAAAAAAAAAAAA8L8"
				],
				[
					3225,
					1,
					"left_delete",
					null,
					"AQAAAF9zAAAAAAAAX3MAAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhcwAAAAAAAGFzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3228,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAF9zAAAAAAAAYHMAAAAAAAAAAAAAYHMAAAAAAABhcwAAAAAAAAAAAABhcwAAAAAAAGJzAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfcwAAAAAAAF9zAAAAAAAAAAAAAAAA8L8"
				],
				[
					3229,
					1,
					"insert",
					{
						"characters": " ctor"
					},
					"BQAAAGJzAAAAAAAAY3MAAAAAAAAAAAAAY3MAAAAAAABkcwAAAAAAAAAAAABkcwAAAAAAAGVzAAAAAAAAAAAAAGVzAAAAAAAAZnMAAAAAAAAAAAAAZnMAAAAAAABncwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABicwAAAAAAAGJzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3230,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGdzAAAAAAAAaHMAAAAAAAAAAAAAaHMAAAAAAABpcwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABncwAAAAAAAGdzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3231,
					1,
					"insert",
					{
						"characters": " globalThis"
					},
					"CwAAAGlzAAAAAAAAanMAAAAAAAAAAAAAanMAAAAAAABrcwAAAAAAAAAAAABrcwAAAAAAAGxzAAAAAAAAAAAAAGxzAAAAAAAAbXMAAAAAAAAAAAAAbXMAAAAAAABucwAAAAAAAAAAAABucwAAAAAAAG9zAAAAAAAAAAAAAG9zAAAAAAAAcHMAAAAAAAAAAAAAcHMAAAAAAABxcwAAAAAAAAAAAABxcwAAAAAAAHJzAAAAAAAAAAAAAHJzAAAAAAAAc3MAAAAAAAAAAAAAc3MAAAAAAAB0cwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpcwAAAAAAAGlzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3232,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAHRzAAAAAAAAdnMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0cwAAAAAAAHRzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3233,
					1,
					"insert",
					{
						"characters": "desc.class"
					},
					"CgAAAHVzAAAAAAAAdnMAAAAAAAAAAAAAdnMAAAAAAAB3cwAAAAAAAAAAAAB3cwAAAAAAAHhzAAAAAAAAAAAAAHhzAAAAAAAAeXMAAAAAAAAAAAAAeXMAAAAAAAB6cwAAAAAAAAAAAAB6cwAAAAAAAHtzAAAAAAAAAAAAAHtzAAAAAAAAfHMAAAAAAAAAAAAAfHMAAAAAAAB9cwAAAAAAAAAAAAB9cwAAAAAAAH5zAAAAAAAAAAAAAH5zAAAAAAAAf3MAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1cwAAAAAAAHVzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3235,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIBzAAAAAAAAgXMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAcwAAAAAAAIBzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3236,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAIFzAAAAAAAAgnMAAAAAAAAAAAAAgnMAAAAAAACIcwAAAAAAAAAAAACIcwAAAAAAAIlzAAAAAAAAAAAAAIlzAAAAAAAAj3MAAAAAAAAAAAAAgnMAAAAAAACCcwAAAAAAAAYAAAAgICAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBcwAAAAAAAIFzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3239,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAIlzAAAAAAAAinMAAAAAAAAAAAAAinMAAAAAAACLcwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJcwAAAAAAAIlzAAAAAAAAAAAAAAAASEA"
				],
				[
					3240,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAItzAAAAAAAAjXMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLcwAAAAAAAItzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3241,
					1,
					"insert",
					{
						"characters": "ctor"
					},
					"BAAAAIxzAAAAAAAAjXMAAAAAAAAAAAAAjXMAAAAAAACOcwAAAAAAAAAAAACOcwAAAAAAAI9zAAAAAAAAAAAAAI9zAAAAAAAAkHMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMcwAAAAAAAIxzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3243,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJFzAAAAAAAAknMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRcwAAAAAAAJFzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3244,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJJzAAAAAAAAlHMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACScwAAAAAAAJJzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3245,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAJNzAAAAAAAAlHMAAAAAAAAAAAAAlHMAAAAAAACacwAAAAAAAAAAAACacwAAAAAAAJtzAAAAAAAAAAAAAJtzAAAAAAAAoXMAAAAAAAAAAAAAlHMAAAAAAACUcwAAAAAAAAYAAAAgICAgICCUcwAAAAAAAJxzAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTcwAAAAAAAJNzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3250,
					1,
					"insert",
					{
						"characters": "desc.value"
					},
					"CgAAAJxzAAAAAAAAnXMAAAAAAAAAAAAAnXMAAAAAAACecwAAAAAAAAAAAACecwAAAAAAAJ9zAAAAAAAAAAAAAJ9zAAAAAAAAoHMAAAAAAAAAAAAAoHMAAAAAAAChcwAAAAAAAAAAAAChcwAAAAAAAKJzAAAAAAAAAAAAAKJzAAAAAAAAo3MAAAAAAAAAAAAAo3MAAAAAAACkcwAAAAAAAAAAAACkcwAAAAAAAKVzAAAAAAAAAAAAAKVzAAAAAAAApnMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACccwAAAAAAAJxzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3251,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAKZzAAAAAAAAp3MAAAAAAAAAAAAAp3MAAAAAAACocwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmcwAAAAAAAKZzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3252,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAAKhzAAAAAAAAqXMAAAAAAAAAAAAAqXMAAAAAAACqcwAAAAAAAAAAAACqcwAAAAAAAKtzAAAAAAAAAAAAAKtzAAAAAAAArHMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACocwAAAAAAAKhzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3253,
					1,
					"insert",
					{
						"characters": " ctor"
					},
					"BQAAAKxzAAAAAAAArXMAAAAAAAAAAAAArXMAAAAAAACucwAAAAAAAAAAAACucwAAAAAAAK9zAAAAAAAAAAAAAK9zAAAAAAAAsHMAAAAAAAAAAAAAsHMAAAAAAACxcwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACscwAAAAAAAKxzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3254,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALFzAAAAAAAAs3MAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxcwAAAAAAALFzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3255,
					1,
					"insert",
					{
						"characters": "desc.value"
					},
					"CgAAALJzAAAAAAAAs3MAAAAAAAAAAAAAs3MAAAAAAAC0cwAAAAAAAAAAAAC0cwAAAAAAALVzAAAAAAAAAAAAALVzAAAAAAAAtnMAAAAAAAAAAAAAtnMAAAAAAAC3cwAAAAAAAAAAAAC3cwAAAAAAALhzAAAAAAAAAAAAALhzAAAAAAAAuXMAAAAAAAAAAAAAuXMAAAAAAAC6cwAAAAAAAAAAAAC6cwAAAAAAALtzAAAAAAAAAAAAALtzAAAAAAAAvHMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACycwAAAAAAALJzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3257,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAL1zAAAAAAAAvnMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9cwAAAAAAAL1zAAAAAAAAAAAAAAAA8L8"
				],
				[
					3282,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAMZzAAAAAAAAyHMAAAAAAAAAAAAAg3MAAAAAAACFcwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDcwAAAAAAAMZzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3289,
					2,
					"right_delete",
					null,
					"AgAAAINzAAAAAAAAg3MAAAAAAAABAAAAL4NzAAAAAAAAg3MAAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDcwAAAAAAAINzAAAAAAAAAAAAAAAAAAA"
				],
				[
					3293,
					2,
					"left_delete",
					null,
					"AgAAAMdzAAAAAAAAx3MAAAAAAAABAAAAL8ZzAAAAAAAAxnMAAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIcwAAAAAAAMhzAAAAAAAAAAAAAAAAdUA"
				],
				[
					3302,
					1,
					"cut",
					null,
					"AQAAAD9xAAAAAAAAP3EAAAAAAABhAAAAfSBlbHNlIGlmKGlzVHlwZWRBcnJheSh2YWx1ZSkpIHsKICAgIHZhbHVlPVsuLi52YWx1ZV0ubWFwKG4gPT4gdHlwZW9mIG4gPT0gJ251bWJlcicgPyBuIDogbisnJyk7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/cQAAAAAAAKBxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3303,
					2,
					"paste",
					null,
					"AgAAAD9xAAAAAAAAoHEAAAAAAAAAAAAAoHEAAAAAAAABcgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/cQAAAAAAAD9xAAAAAAAAAAAAAAAA8L8"
				],
				[
					3307,
					1,
					"insert",
					{
						"characters": "type=="
					},
					"BwAAAKpxAAAAAAAAq3EAAAAAAAAAAAAAq3EAAAAAAACrcQAAAAAAABMAAABpc1R5cGVkQXJyYXkodmFsdWUpq3EAAAAAAACscQAAAAAAAAAAAACscQAAAAAAAK1xAAAAAAAAAAAAAK1xAAAAAAAArnEAAAAAAAAAAAAArnEAAAAAAACvcQAAAAAAAAAAAACvcQAAAAAAALBxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqcQAAAAAAAL1xAAAAAAAAAAAAAAAA8L8"
				],
				[
					3308,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAALBxAAAAAAAAsnEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwcQAAAAAAALBxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3309,
					1,
					"insert",
					{
						"characters": "object"
					},
					"BgAAALFxAAAAAAAAsnEAAAAAAAAAAAAAsnEAAAAAAACzcQAAAAAAAAAAAACzcQAAAAAAALRxAAAAAAAAAAAAALRxAAAAAAAAtXEAAAAAAAAAAAAAtXEAAAAAAAC2cQAAAAAAAAAAAAC2cQAAAAAAALdxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxcQAAAAAAALFxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3311,
					1,
					"insert",
					{
						"characters": " &"
					},
					"AgAAALhxAAAAAAAAuXEAAAAAAAAAAAAAuXEAAAAAAAC6cQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4cQAAAAAAALhxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3312,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALpxAAAAAAAAu3EAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6cQAAAAAAALpxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3313,
					1,
					"left_delete",
					null,
					"AQAAALpxAAAAAAAAunEAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7cQAAAAAAALtxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3314,
					1,
					"insert",
					{
						"characters": "&%"
					},
					"AgAAALpxAAAAAAAAu3EAAAAAAAAAAAAAu3EAAAAAAAC8cQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6cQAAAAAAALpxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3315,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALxxAAAAAAAAvXEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8cQAAAAAAALxxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3316,
					3,
					"left_delete",
					null,
					"AwAAALxxAAAAAAAAvHEAAAAAAAABAAAAILtxAAAAAAAAu3EAAAAAAAABAAAAJbpxAAAAAAAAunEAAAAAAAABAAAAJg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9cQAAAAAAAL1xAAAAAAAAAAAAAAAA8L8"
				],
				[
					3317,
					16,
					"left_delete",
					null,
					"EAAAALlxAAAAAAAAuXEAAAAAAAABAAAAJrhxAAAAAAAAuHEAAAAAAAABAAAAILdxAAAAAAAAt3EAAAAAAAABAAAAJ7ZxAAAAAAAAtnEAAAAAAAABAAAAdLVxAAAAAAAAtXEAAAAAAAABAAAAY7RxAAAAAAAAtHEAAAAAAAABAAAAZbNxAAAAAAAAs3EAAAAAAAABAAAAarJxAAAAAAAAsnEAAAAAAAABAAAAYrFxAAAAAAAAsXEAAAAAAAABAAAAb7BxAAAAAAAAsHEAAAAAAAABAAAAJ69xAAAAAAAAr3EAAAAAAAABAAAAPa5xAAAAAAAArnEAAAAAAAABAAAAPa1xAAAAAAAArXEAAAAAAAABAAAAZaxxAAAAAAAArHEAAAAAAAABAAAAcKtxAAAAAAAAq3EAAAAAAAABAAAAeapxAAAAAAAAqnEAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6cQAAAAAAALpxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3318,
					1,
					"insert",
					{
						"characters": "value"
					},
					"BQAAAKpxAAAAAAAAq3EAAAAAAAAAAAAAq3EAAAAAAACscQAAAAAAAAAAAACscQAAAAAAAK1xAAAAAAAAAAAAAK1xAAAAAAAArnEAAAAAAAAAAAAArnEAAAAAAACvcQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqcQAAAAAAAKpxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3319,
					1,
					"insert",
					{
						"characters": " instanceof"
					},
					"CwAAAK9xAAAAAAAAsHEAAAAAAAAAAAAAsHEAAAAAAACxcQAAAAAAAAAAAACxcQAAAAAAALJxAAAAAAAAAAAAALJxAAAAAAAAs3EAAAAAAAAAAAAAs3EAAAAAAAC0cQAAAAAAAAAAAAC0cQAAAAAAALVxAAAAAAAAAAAAALVxAAAAAAAAtnEAAAAAAAAAAAAAtnEAAAAAAAC3cQAAAAAAAAAAAAC3cQAAAAAAALhxAAAAAAAAAAAAALhxAAAAAAAAuXEAAAAAAAAAAAAAuXEAAAAAAAC6cQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvcQAAAAAAAK9xAAAAAAAAAAAAAAAA8L8"
				],
				[
					3320,
					1,
					"insert",
					{
						"characters": " Set"
					},
					"BAAAALpxAAAAAAAAu3EAAAAAAAAAAAAAu3EAAAAAAAC8cQAAAAAAAAAAAAC8cQAAAAAAAL1xAAAAAAAAAAAAAL1xAAAAAAAAvnEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6cQAAAAAAALpxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3330,
					1,
					"cut",
					null,
					"AQAAANZxAAAAAAAA1nEAAAAAAAAqAAAALm1hcChuID0+IHR5cGVvZiBuID09ICdudW1iZXInID8gbiA6IG4rJycp",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWcQAAAAAAAAByAAAAAAAAAAAAAAAA8L8"
				],
				[
					3342,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAAJhwAAAAAAAAmXAAAAAAAAAAAAAAmXAAAAAAAACbcAAAAAAAAAAAAACbcAAAAAAAAJxwAAAAAAAAAAAAAJxwAAAAAAAAnXAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYcAAAAAAAAJhwAAAAAAAAAAAAAAAA8L8"
				],
				[
					3343,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJ1wAAAAAAAAn3AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdcAAAAAAAAJ1wAAAAAAAAAAAAAAAA8L8"
				],
				[
					3344,
					1,
					"insert",
					{
						"characters": "type"
					},
					"BAAAAJ5wAAAAAAAAn3AAAAAAAAAAAAAAn3AAAAAAAACgcAAAAAAAAAAAAACgcAAAAAAAAKFwAAAAAAAAAAAAAKFwAAAAAAAAonAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACecAAAAAAAAJ5wAAAAAAAAAAAAAAAA8L8"
				],
				[
					3345,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAKJwAAAAAAAAo3AAAAAAAAAAAAAAo3AAAAAAAACkcAAAAAAAAAAAAACkcAAAAAAAAKVwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACicAAAAAAAAKJwAAAAAAAAAAAAAAAA8L8"
				],
				[
					3346,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKVwAAAAAAAApnAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClcAAAAAAAAKVwAAAAAAAAAAAAAAAA8L8"
				],
				[
					3347,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAKZwAAAAAAAAqHAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmcAAAAAAAAKZwAAAAAAAAAAAAAAAA8L8"
				],
				[
					3348,
					1,
					"insert",
					{
						"characters": "object"
					},
					"BgAAAKdwAAAAAAAAqHAAAAAAAAAAAAAAqHAAAAAAAACpcAAAAAAAAAAAAACpcAAAAAAAAKpwAAAAAAAAAAAAAKpwAAAAAAAAq3AAAAAAAAAAAAAAq3AAAAAAAACscAAAAAAAAAAAAACscAAAAAAAAK1wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACncAAAAAAAAKdwAAAAAAAAAAAAAAAA8L8"
				],
				[
					3350,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK9wAAAAAAAAsHAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvcAAAAAAAAK9wAAAAAAAAAAAAAAAA8L8"
				],
				[
					3351,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALBwAAAAAAAAsnAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwcAAAAAAAALBwAAAAAAAAAAAAAAAA8L8"
				],
				[
					3352,
					1,
					"right_delete",
					null,
					"AQAAALFwAAAAAAAAsXAAAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxcAAAAAAAALFwAAAAAAAAAAAAAAAA8L8"
				],
				[
					3367,
					1,
					"insert",
					{
						"characters": "$"
					},
					"AQAAAPRxAAAAAAAA9XEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD0cQAAAAAAAPRxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3368,
					1,
					"left_delete",
					null,
					"AQAAAPRxAAAAAAAA9HEAAAAAAAABAAAAJA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1cQAAAAAAAPVxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3369,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAPRxAAAAAAAA9XEAAAAAAAAAAAAA9XEAAAAAAAD3cQAAAAAAAAAAAAD3cQAAAAAAAPhxAAAAAAAAAAAAAPVxAAAAAAAA9XEAAAAAAAACAAAAICD1cQAAAAAAAPVxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD0cQAAAAAAAPRxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3374,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABxdQAAaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnLi9ldmVudC1lbWl0dGVyLmpzJzsKCmxldCBzb2NrSWQ7CgpleHBvcnQgY29uc3QgTG9nV3JhcCA9IChnbG9iYWxUaGlzLkxvZ1dyYXAgPSBmdW5jdGlvbiBMb2dXcmFwKGxvZykgewogIGlmKHR5cGVvZiBsb2cgPT0gJ3N0cmluZycpIHsKICAgIGxldCBzdHIgPSBsb2c7CiAgICBsb2cgPSAoLi4uYXJncykgPT4gY29uc29sZS5sb2coc3RyLCAuLi5hcmdzKTsKICB9IGVsc2UgaWYoIWxvZykgewogICAgbG9nID0gKC4uLmFyZ3MpID0+IGNvbnNvbGUubG9nKC4uLmFyZ3MpOwogIH0KICByZXR1cm4gKHZhbHVlLCAuLi5hcmdzKSA9PiAobG9nKHZhbHVlLCAuLi5hcmdzKSwgdmFsdWUpOwp9KTsKCi8qZXhwb3J0IGNvbnN0IFZmbkFkYXB0ZXIgPSB2Zm4gPT4gKHsKICBnZXQ6IGsgPT4gdmZuKGspLAogIHNldDogKGssIHYpID0+IHZmbihrLCB2KQp9KTsKCmV4cG9ydCBjb25zdCBWZm5EZWNvcmF0b3IgPSB2Zm4gPT4gZGVmaW5lKHZmbiwgVmZuQWRhcHRlcih2Zm4pKTsKKi8KCi8qZ2xvYmFsVGhpcy5HZXRDbGFzc2VzID0gZnVuY3Rpb24qIEdldENsYXNzZXMob2JqKSB7CiAgbGV0IGtleXMgPSBHZXRLZXlzKG9iaik7CiAgZm9yKGxldCBuYW1lIG9mIGtleXMpIHsKICAgIHRyeSB7CiAgICAgIGlmKHR5cGVvZiBvYmpbbmFtZV0gPT0gJ2Z1bmN0aW9uJyAmJiAncHJvdG90eXBlJyBpbiBvYmpbbmFtZV0pIHlpZWxkIFtuYW1lLCBvYmpbbmFtZV1dOwogICAgfSBjYXRjaChlKSB7fQogIH0KICByZXR1cm4gZGVzYzsKfTsqLwoKLypleHBvcnQgZnVuY3Rpb24gTWFwcGVyKG1hcCA9IG5ldyBXZWFrTWFwKCkpIHsKICBsZXQgc2VsZjsKICBzZWxmID0gZnVuY3Rpb24oa2V5LCB2YWx1ZSkgewogICAgaWYodmFsdWUgPT09IHVuZGVmaW5lZCkgdmFsdWUgPSBtYXAuZ2V0KGtleSk7CiAgICBlbHNlIG1hcC5zZXQoa2V5LCB2YWx1ZSk7CiAgICByZXR1cm4gdmFsdWU7CiAgfTsKICByZXR1cm4gT2JqZWN0LnNldFByb3RvdHlwZU9mKHNlbGYsIE1hcHBlci5wcm90b3R5cGUpOwp9CgpPYmplY3Quc2V0UHJvdG90eXBlT2YoTWFwcGVyLnByb3RvdHlwZSwgRnVuY3Rpb24ucHJvdG90eXBlKTsqLwovL01hcHBlci5wcm90b3R5cGUgPSBmdW5jdGlvbigpIHt9OwovL01hcHBlci5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBNYXBwZXI7CgovKmV4cG9ydCBmdW5jdGlvbiBEZWZhdWx0Q29uc3RydWN0b3IobWFwcGVyLCBmbiA9ICguLi5hcmdzKSA9PiBuZXcgT2JqZWN0KC4uLmFyZ3MpKSB7CiAgbGV0IHNlbGY7CiAgc2VsZiA9IGZ1bmN0aW9uKC4uLmFyZ3MpIHsKICAgIGxldCBba2V5LCB2YWx1ZV0gPSBhcmdzOwogICAgaWYoYXJncy5sZW5ndGggPD0gMSkgewogICAgICBpZighKHZhbHVlID0gbWFwLmdldChrZXkpKSkgewogICAgICAgIHZhbHVlID0gZm4oLi4uYXJncy5zbGljZSgxKSk7CiAgICAgICAgbWFwLnNldChrZXksIHZhbHVlKTsKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgbWFwLnNldChrZXksIHZhbHVlKTsKICAgIH0KICAgIHJldHVybiB2YWx1ZTsKICB9OwogIHJldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc2VsZiwgRGVmYXVsdENvbnN0cnVjdG9yLnByb3RvdHlwZSk7Cn0KCk9iamVjdC5zZXRQcm90b3R5cGVPZihEZWZhdWx0Q29uc3RydWN0b3IucHJvdG90eXBlLCBGdW5jdGlvbi5wcm90b3R5cGUpOwpEZWZhdWx0Q29uc3RydWN0b3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gRGVmYXVsdENvbnN0cnVjdG9yOyovCgovKmV4cG9ydCBmdW5jdGlvbiBFdmVudExvZ2dlcihpbnN0YW5jZSA9IHt9LCBjYWxsYmFjayA9IChuYW1lLCBldmVudCwgdGhpc09iaikgPT4gY29uc29sZS5sb2coJ0V2ZW50TG9nZ2VyJywgeyBuYW1lLCBldmVudCwgdGhpc09iaiB9KSkgewogIGZ1bmN0aW9uIFdyYXBFdmVudChoYW5kbGVyLCBuYW1lKSB7CiAgICByZXR1cm4gZnVuY3Rpb24oZSkgewogICAgICByZXR1cm4gY2FsbGJhY2sobmFtZSwgZSwgdGhpcyk7CiAgICB9OwogIH0KCiAgcmV0dXJuIG5ldyBQcm94eShpbnN0YW5jZSwgewogICAgZ2V0KG9iaiwgcHJvcCkgewogICAgICBpZihwcm9wLnN0YXJ0c1dpdGgoJ29uJykpIHsKICAgICAgICByZXR1cm4gV3JhcEV2ZW50KG9ialtwcm9wXSwgcHJvcC5zbGljZSgyKSk7CiAgICAgIH0KICAgICAgcmV0dXJuIG9ialtwcm9wXTsKICAgIH0KICB9KTsKfSovCgovKiogQGludGVyZmFjZSBNZXNzYWdlUmVjZWl2ZXIgKi8KZXhwb3J0IGNsYXNzIE1lc3NhZ2VSZWNlaXZlciBleHRlbmRzIEV2ZW50RW1pdHRlciB7CiAgc3RhdGljIFtTeW1ib2wuaGFzSW5zdGFuY2VdKGluc3RhbmNlKSB7CiAgICByZXR1cm4gJ29ubWVzc2FnZScgaW4gaW5zdGFuY2U7CiAgfQoKICAvKiogQGFic3RyYWN0ICovCiAgb25tZXNzYWdlKG1zZykgewogICAgdGhyb3cgbmV3IEVycm9yKGBNZXNzYWdlUmVjZWl2ZXIub25tZXNzYWdlIHVuaW1wbGVtZW50ZWRgKTsKICB9Cn0KCi8qKiBAaW50ZXJmYWNlIE1lc3NhZ2VUcmFuc21pdHRlciAqLwpleHBvcnQgY2xhc3MgTWVzc2FnZVRyYW5zbWl0dGVyIHsKICBzdGF0aWMgW1N5bWJvbC5oYXNJbnN0YW5jZV0oaW5zdGFuY2UpIHsKICAgIHJldHVybiB0eXBlb2Ygc2VuZE1lc3NhZ2UgPT0gJ2Z1bmN0aW9uJzsKICB9CiAgLyoqIEBhYnN0cmFjdCAqLwogIHNlbmRNZXNzYWdlKCkgewogICAgdGhyb3cgbmV3IEVycm9yKGBNZXNzYWdlUmVjZWl2ZXIuc2VuZE1lc3NhZ2UgdW5pbXBsZW1lbnRlZGApOwogIH0KfQoKLyoqCiAqIEBpbnRlcmZhY2UgTWVzc2FnZVRyYW5zY2VpdmVyCiAqIEBtaXhlcyBNZXNzYWdlUmVjZWl2ZXIKICogQG1peGVzIE1lc3NhZ2VUcmFuc21pdHRlcgogKi8KZXhwb3J0IGZ1bmN0aW9uIE1lc3NhZ2VUcmFuc2NlaXZlcigpIHt9CgpkZWZpbmUoTWVzc2FnZVRyYW5zY2VpdmVyLnByb3RvdHlwZSwgTWVzc2FnZVJlY2VpdmVyLnByb3RvdHlwZSwgTWVzc2FnZVRyYW5zbWl0dGVyLnByb3RvdHlwZSk7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoTWVzc2FnZVRyYW5zY2VpdmVyLCBTeW1ib2wuaGFzSW5zdGFuY2UsIHsKICB2YWx1ZTogaW5zdGFuY2UgPT4gW01lc3NhZ2VSZWNlaXZlciwgTWVzc2FnZVRyYW5zbWl0dGVyXS5ldmVyeShjdG9yID0+IGN0b3JbU3ltYm9sLmhhc0luc3RhbmNlXShpbnN0YW5jZSkpCn0pOwoKY29uc3QgY29kZWNzID0gewogIG5vbmUoKSB7CiAgICByZXR1cm4gewogICAgICBuYW1lOiAnbm9uZScsCiAgICAgIGVuY29kZTogdiA9PiB2LAogICAgICBkZWNvZGU6IHYgPT4gdgogICAgfTsKICB9LAogIGpzb24odmVyYm9zZSA9IGZhbHNlKSB7CiAgICByZXR1cm4gewogICAgICBuYW1lOiAnanNvbicsCiAgICAgIGVuY29kZTogdiA9PiBKU09OLnN0cmluZ2lmeSh2LCAuLi4odmVyYm9zZSA/IFtudWxsLCAyXSA6IFtdKSksCiAgICAgIGRlY29kZTogdiA9PiBKU09OLnBhcnNlKHYpCiAgICB9OwogIH0KfTsKCmlmKGdsb2JhbFRoaXMuaW5zcGVjdCkgewogIGNvZGVjcy5qcyA9IGZ1bmN0aW9uIGpzKHZlcmJvc2UgPSBmYWxzZSkgewogICAgcmV0dXJuIHsKICAgICAgbmFtZTogJ2pzJywKICAgICAgZW5jb2RlOiB2ID0+IGluc3BlY3QodiwgeyBjb2xvcnM6IGZhbHNlLCBjb21wYWN0OiB2ZXJib3NlID8gZmFsc2UgOiAtMiB9KSwKICAgICAgZGVjb2RlOiB2ID0+IGV2YWwoYCgke3Z9KWApCiAgICB9OwogIH07Cn0KCmlmKGdsb2JhbFRoaXMuYmpzb24pIHsKICBjb2RlY3MuYmpzb24gPSBmdW5jdGlvbiBianNvbigpIHsKICAgIHJldHVybiB7CiAgICAgIG5hbWU6ICdianNvbicsCiAgICAgIGVuY29kZTogdiA9PiBianNvbi53cml0ZSh2KSwKICAgICAgZGVjb2RlOiB2ID0+IGJqc29uLnJlYWQodikKICAgIH07CiAgfTsKfQoKZXhwb3J0IGZ1bmN0aW9uIFJQQ0FwaShjKSB7CiAgbGV0IGFwaTsKICBhcGkgPSBkZWZpbmUobmV3LnRhcmdldCA/IHRoaXMgOiBuZXcgUlBDQXBpKGMpLCB7IGNvbm5lY3Rpb246IGMgfSk7CgogIHJldHVybiBhcGk7Cn0KCmZvcihsZXQgY21kIG9mIFsnbGlzdCcsICduZXcnLCAnbWV0aG9kcycsICdwcm9wZXJ0aWVzJywgJ2tleXMnLCAnbmFtZXMnLCAnc3ltYm9scycsICdjYWxsJywgJ3NldCcsICdnZXQnXSkKICBSUENBcGkucHJvdG90eXBlW2NtZF0gPSBNYWtlQ29tbWFuZEZ1bmN0aW9uKGNtZCwgbyA9PiBvLmNvbm5lY3Rpb24pOwoKZXhwb3J0IGZ1bmN0aW9uIFJQQ1Byb3h5KGMpIHsKICBsZXQgb2JqID0gZGVmaW5lKG5ldy50YXJnZXQgPyB0aGlzIDogbmV3IFJQQ1Byb3h5KGMpLCB7IGNvbm5lY3Rpb246IGMgfSk7CgogIHJldHVybiBuZXcgUHJveHkob2JqLCB7fSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBSUENPYmplY3QoaWQsIGNvbm5lY3Rpb24pIHsKICBsZXQgb2JqID0gZGVmaW5lKG5ldy50YXJnZXQgPyB0aGlzIDogbmV3IFJQQ09iamVjdChpZCksIHsgY29ubmVjdGlvbiwgaWQgfSk7CiAgcmV0dXJuIGFwaS5tZXRob2RzKHsgaWQgfSkudGhlbihyID0+IE9iamVjdC5hc3NpZ24ob2JqLCByKSk7Cn0KClJQQ09iamVjdC5wcm90b3R5cGVbU3ltYm9sLnRvU3RyaW5nVGFnXSA9ICdSUENPYmplY3QnOwoKZXhwb3J0IGZ1bmN0aW9uIFJQQ0ZhY3RvcnkoYXBpKSB7CiAgYXN5bmMgZnVuY3Rpb24gRmFjdG9yeShvcHRzKSB7CiAgICBpZih0eXBlb2Ygb3B0cyA9PSAnc3RyaW5nJykgewogICAgICBjb25zdCBuYW1lID0gb3B0czsKICAgICAgb3B0cyA9IHsgY2xhc3M6IG5hbWUgfTsKICAgIH0KICAgIGxldCBpbnN0YW5jZSA9IGF3YWl0IGFwaS5uZXcob3B0cyk7CiAgICBsZXQgeyBjb25uZWN0aW9uIH0gPSBhcGk7CiAgICBsZXQgb2JqID0gT2JqZWN0LnNldFByb3RvdHlwZU9mKHsgaW5zdGFuY2UsIGNvbm5lY3Rpb24gfSwgUlBDT2JqZWN0LnByb3RvdHlwZSk7CgogICAgZGVmaW5lKG9iaiwgYXdhaXQgYXBpLm1ldGhvZHMoaW5zdGFuY2UpKTsKICAgIHJldHVybiBvYmo7CiAgfQoKICByZXR1cm4gRmFjdG9yeTsKfQoKUlBDRmFjdG9yeS5wcm90b3R5cGUgPSBmdW5jdGlvbigpIHt9OwpSUENGYWN0b3J5LnByb3RvdHlwZVtTeW1ib2wudG9TdHJpbmdUYWddID0gJ1JQQ0ZhY3RvcnknOwoKLyoqCiAqIEBpbnRlcmZhY2UgQ29ubmVjdGlvbgogKi8KZXhwb3J0IGNsYXNzIENvbm5lY3Rpb24gZXh0ZW5kcyBFdmVudEVtaXR0ZXIgewogIHN0YXRpYyBmcm9tU29ja2V0ID0gbmV3IFdlYWtNYXAoKTsKCiAgbGFzdFNlcSA9IDA7CiAgLy8jZXZlbnRzID0ge307CgogIHN0YXRpYyBlcXVhbChhLCBiKSB7CiAgICByZXR1cm4gKGEuc29ja2V0ICE9IG51bGwgJiYgYS5zb2NrZXQgPT09IGIuc29ja2V0KSB8fCAodHlwZW9mIGEuZmQgPT0gJ251bWJlcicgJiYgYS5mZCA9PT0gYi5mZCk7CiAgfQogIHN0YXRpYyBnZXQgbGFzdCgpIHsKICAgIHJldHVybiB0aGlzLmxpc3QubGFzdDsKICB9CgogIG1ha2VTZXEoKSB7CiAgICByZXR1cm4gKyt0aGlzLmxhc3RTZXE7CiAgfQoKICBjb25zdHJ1Y3Rvcihzb2NrZXQsIGluc3RhbmNlLCBsb2csIGNvZGVjID0gJ25vbmUnKSB7CiAgICBzdXBlcigpOwogICAgdGhpcy5mZCA9IHNvY2tldC5mZDsKICAgIGRlZmluZSh0aGlzLCB7CiAgICAgIHNlcTogMCwKICAgICAgc29ja2V0LAogICAgICBleGNlcHRpb246IG51bGwsCiAgICAgIGxvZyguLi5hcmdzKSB7CiAgICAgICAgLy8gY29uc29sZS5sb2coLi4uYXJncyk7CiAgICAgIH0sCiAgICAgIG1lc3NhZ2VzOiB7IHJlcXVlc3RzOiB7fSwgcmVzcG9uc2VzOiB7fSB9CiAgICB9KTsKICAgIGRlZmluZSh0aGlzLCB0eXBlb2YgY29kZWMgPT0gJ3N0cmluZycgJiYgY29kZWNzW2NvZGVjXSA/IHsgY29kZWNOYW1lOiBjb2RlYywgY29kZWM6IGNvZGVjc1tjb2RlY10oKSB9IDoge30pOwogICAgZGVmaW5lKHRoaXMsIHR5cGVvZiBjb2RlYyA9PSAnb2JqZWN0JyAmJiBjb2RlYy5uYW1lID8geyBjb2RlY05hbWU6IGNvZGVjLm5hbWUsIGNvZGVjIH0gOiB7fSk7CiAgICAodGhpcy5jb25zdHJ1Y3RvciA/PyBDb25uZWN0aW9uKS5zZXQuYWRkKHRoaXMpOwogICAgQ29ubmVjdGlvbi5mcm9tU29ja2V0LnNldChzb2NrZXQsIHRoaXMpOwogIH0KCiAgZXJyb3IobWVzc2FnZSkgewogICAgY29uc3QgeyBzb2NrZXQgfSA9IHRoaXM7CiAgICBjb25zdCBzdGF0dXMgPSBzb2NrZXQuQ0xPU0VfU1RBVFVTX1BST1RPQ09MX0VSUiB8fCAxMDAwOwoKICAgIGNvbnNvbGUubG9nKGBFUlJPUjogJHttZXNzYWdlfWApOwogICAgdGhpcy5leGNlcHRpb24gPSBuZXcgRXJyb3IobWVzc2FnZSk7CiAgICBjb25zb2xlLmxvZygnZXJyb3IoJywgc3RhdHVzLCBtZXNzYWdlLCAnKScpOwogICAgdGhpcy5jbG9zZShzdGF0dXMsIG1lc3NhZ2Uuc2xpY2UoMCwgMTI4KSk7CiAgICByZXR1cm4gdGhpcy5leGNlcHRpb247CiAgfQoKICBjbG9zZShzdGF0dXMsIHJlYXNvbikgewogICAgY29uc3QgeyBzb2NrZXQgfSA9IHRoaXM7CiAgICBjb25zb2xlLmxvZygnY2xvc2UoJywgc3RhdHVzLCByZWFzb24sICcpJyk7CiAgICBzb2NrZXQuY2xvc2Uoc3RhdHVzLCByZWFzb24pOwogICAgZGVsZXRlIHRoaXMuc29ja2V0OwogICAgZGVsZXRlIHRoaXMuZmQ7CiAgICB0aGlzLmNvbm5lY3RlZCA9IGZhbHNlOwogIH0KCiAgb25tZXNzYWdlKG1zZykgewogICAgbGV0IHsgY29kZWMsIGNvZGVjTmFtZSB9ID0gdGhpczsKICAgIGlmKCFtc2cpIHJldHVybjsKICAgIGlmKHR5cGVvZiBtc2cgPT0gJ3N0cmluZycgJiYgbXNnLnRyaW0oKSA9PSAnJykgcmV0dXJuOwogICAgdGhpcy5sb2coJ0Nvbm5lY3Rpb24ub25tZXNzYWdlJywgeyBtc2csIGNvZGVjLCBjb2RlY05hbWUgfSk7CiAgICBsZXQgZGF0YTsKICAgIHRyeSB7CiAgICAgIGRhdGEgPSBjb2RlYy5kZWNvZGUoKG1zZyAmJiBtc2cuZGF0YSkgfHwgbXNnKTsKICAgIH0gY2F0Y2goZXJyKSB7CiAgICAgIHRocm93IHRoaXMuZXJyb3IoYCR7dGhpcy5jb2RlYy5uYW1lfSBwYXJzZSBlcnJvcjogJHsoZXJyICYmIGVyci5tZXNzYWdlKSB8fCBtc2d9YCk7CiAgICAgIHJldHVybiB0aGlzLmV4Y2VwdGlvbjsKICAgIH0KICAgIGxldCByZXNwb25zZSA9IHRoaXMucHJvY2Vzc01lc3NhZ2UoZGF0YSk7CiAgICB0aGlzLmxvZygnQ29ubmVjdGlvbi5vbm1lc3NhZ2UnLCB7IGRhdGEsIHJlc3BvbnNlIH0pOwogICAgaWYoaXNUaGVuYWJsZShyZXNwb25zZSkpIHJlc3BvbnNlLnRoZW4ociA9PiB0aGlzLnNlbmRNZXNzYWdlKHIpKTsKICAgIGVsc2UgaWYocmVzcG9uc2UgIT09IHVuZGVmaW5lZCkgdGhpcy5zZW5kTWVzc2FnZShyZXNwb25zZSk7CiAgfQoKICBwcm9jZXNzTWVzc2FnZShkYXRhKSB7CiAgICB0aGlzLmxvZygnQ29ubmVjdGlvbicsICcucHJvY2Vzc01lc3NhZ2UnLCB7IGRhdGEgfSk7CiAgICB0aHJvdyBuZXcgRXJyb3IoJ1ZpcnR1YWwgbWV0aG9kJyk7CiAgfQoKICBvbmNvbm5lY3Qoc29jaykgewogICAgLy9jb25zb2xlLmxvZygiQ29ubmVjdGlvbi5vbmNvbm5lY3QiLCBzb2NrLCB0aGlzKTsKICB9CgogIG9ub3BlbiA9IExvZ1dyYXAoJ0Nvbm5lY3Rpb24ub25vcGVuJyk7CgogIC8qICBvbm9wZW4oYXJnKSB7CiAgICB0aGlzLmxvZygnQ29ubmVjdGlvbi5vbm9wZW4nLCB7IGFyZyB9KTsKICB9Ki8KCiAgb25wb25nKGRhdGEpIHsKICAgIGNvbnNvbGUubG9nKCdDb25uZWN0aW9uLm9ucG9uZzonLCBkYXRhKTsKICB9CgogIG9uZXJyb3IoZXJyb3IpIHsKICAgIGNvbnNvbGUubG9nKCdDb25uZWN0aW9uLm9uZXJyb3InLCBlcnJvciA/IGAgKCR7ZXJyb3J9KWAgOiAnJyk7CiAgICB0aGlzLmNvbm5lY3RlZCA9IGZhbHNlOwogICAgdGhpcy5jbGVhbnVwKCk7CiAgfQoKICBvbmNsb3NlKGNvZGUsIHdoeSkgewogICAgY29uc29sZS5sb2coJ0Nvbm5lY3Rpb24ub25jbG9zZScsIGNvZGUsIHdoeSA/IGAgKCR7d2h5fSlgIDogJycpOwogICAgdGhpcy5jb25uZWN0ZWQgPSBmYWxzZTsKICAgIHRoaXMuY2xlYW51cCgpOwogIH0KCiAgY2xlYW51cCgpIHsKICAgIGlmKHRoaXMuaW5zdGFuY2VzKSBmb3IobGV0IGlkIGluIHRoaXMuaW5zdGFuY2VzKSBkZWxldGUgdGhpcy5pbnN0YW5jZXNbaWRdOwogIH0KCiAgc2VuZE1lc3NhZ2Uob2JqKSB7CiAgICB0aGlzLmxvZygnQ29ubmVjdGlvbi5zZW5kTWVzc2FnZScsIG9iaik7CiAgICBpZih0eXBlb2Ygb2JqID09ICdvYmplY3QnKQogICAgICBpZih0eXBlb2Ygb2JqLnNlcSA9PSAnbnVtYmVyJykgewogICAgICAgIGlmKHRoaXMubWVzc2FnZXMgJiYgdGhpcy5tZXNzYWdlcy5yZXF1ZXN0cykgdGhpcy5tZXNzYWdlcy5yZXF1ZXN0c1tvYmouc2VxXSA9IG9iajsKICAgICAgfSBlbHNlIHsKICAgICAgICBvYmouc2VxID0gdGhpcy5tYWtlU2VxKCk7CiAgICAgIH0KICAgIGxldCBtc2cgPSB0eXBlb2Ygb2JqICE9ICdzdHJpbmcnID8gdGhpcy5jb2RlYy5lbmNvZGUob2JqKSA6IG9iajsKCiAgICB0aGlzLnNvY2tldC5zZW5kKG1zZyk7CiAgfQoKICBzZW5kQ29tbWFuZChjb21tYW5kLCBwYXJhbXMgPSB7fSkgewogICAgbGV0IG1lc3NhZ2UgPSB7IGNvbW1hbmQsIC4uLnBhcmFtcyB9OwogICAgdGhpcy5sb2coJ0Nvbm5lY3Rpb24uc2VuZENvbW1hbmQnLCB7IGNvbW1hbmQsIHBhcmFtcywgbWVzc2FnZSB9KTsKICAgIGlmKHR5cGVvZiBwYXJhbXMgPT0gJ29iamVjdCcgJiYgcGFyYW1zICE9IG51bGwgJiYgdHlwZW9mIHBhcmFtcy5zZXEgIT0gJ251bWJlcicpCiAgICAgIHBhcmFtcy5zZXEgPSB0aGlzLnNlcSA9ICh0aGlzLnNlcSB8IDApICsgMTsKICAgIGlmKHRoaXMubWVzc2FnZXMgJiYgdGhpcy5tZXNzYWdlcy5yZXF1ZXN0cykKICAgICAgaWYodHlwZW9mIHBhcmFtcy5zZXEgPT0gJ251bWJlcicpIHRoaXMubWVzc2FnZXMucmVxdWVzdHNbcGFyYW1zLnNlcV0gPSBtZXNzYWdlOwogICAgaWYodGhpcy5tZXNzYWdlcyAmJiB0aGlzLm1lc3NhZ2VzLnJlcXVlc3RzKSB0aGlzLm1lc3NhZ2VzLnJlcXVlc3RzW3BhcmFtcy5zZXFdID0gbWVzc2FnZTsKICAgIHRoaXMuc2VuZE1lc3NhZ2UobWVzc2FnZSk7CiAgfQoKICBzdGF0aWMgZ2V0Q2FsbGJhY2tzKGluc3RhbmNlLCB2ZXJib3NpdHkgPSAwKSB7CiAgICBjb25zdCB7IGNsYXNzZXMsIGZkbGlzdCwgbG9nIH0gPSBpbnN0YW5jZTsKICAgIGNvbnN0IGN0b3IgPSB0aGlzOwogICAgY29uc3QgdmVyYm9zZSA9IHZlcmJvc2l0eSA+PSAxID8gKG1zZywgLi4uYXJncykgPT4gbG9nKCdWRVJCT1NFICcgKyBtc2csIGFyZ3MpIDogKCkgPT4ge307CiAgICAvL2xvZyhgJHtjdG9yLm5hbWV9LmdldENhbGxiYWNrc2AsIHsgaW5zdGFuY2UsIGxvZywgdmVyYm9zaXR5IH0pOwogICAgY29uc3QgaGFuZGxlID0gKHNvY2ssIGV2ZW50LCAuLi5hcmdzKSA9PiB7CiAgICAgIGxldCBjb25uLCBvYmo7CgogICAgICBpZigoY29ubiA9IGZkbGlzdFtzb2NrLmZkXSkpIHsKICAgICAgICAvL3ZlcmJvc2UoYEhhbmRsZSBmZCAjJHtzb2NrLmZkfSAke2V2ZW50fWApOwogICAgICAgIGNhbGxIYW5kbGVyKGNvbm4sIGV2ZW50LCAuLi5hcmdzKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE5vIGNvbm5lY3Rpb24gZm9yIGZkICMke3NvY2suZmR9IWApOwogICAgICB9CiAgICAgIG9iaiA9IHsgdGhlbjogZm4gPT4gKGZuKHNvY2suZmQpLCBvYmopIH07CiAgICAgIHJldHVybiBvYmo7CiAgICB9OwogICAgY29uc3QgcmVtb3ZlID0gc29jayA9PiB7CiAgICAgIGNvbnN0IHsgZmQgfSA9IHNvY2s7CiAgICAgIGRlbGV0ZSBmZGxpc3RbZmRdOwogICAgfTsKICAgIHJldHVybiB7CiAgICAgIHZlcmJvc2l0eSwKICAgICAgb25Db25uZWN0KHNvY2ssIHJlcSkgewogICAgICAgIHZlcmJvc2UoYENvbm5lY3RlZGAsIHNvY2spOwogICAgICAgIGxldCBjb25uZWN0aW9uID0gZmRsaXN0W3NvY2suZmRdOwogICAgICAgIGlmKCFjb25uZWN0aW9uKSBjb25uZWN0aW9uID0gbmV3IGN0b3Ioc29jaywgaW5zdGFuY2UsIGxvZywgJ2pzb24nLCBjbGFzc2VzKTsKICAgICAgICBjb25uZWN0aW9uLnNvY2tldCA/Pz0gc29jazsKICAgICAgICBjb25zdCB7IHVybCwgbWV0aG9kLCBoZWFkZXJzIH0gPSByZXE7CiAgICAgICAgdmVyYm9zZShgQ29ubmVjdGVkYCwgc29jaywgcmVxKTsKICAgICAgICBmZGxpc3Rbc29jay5mZF0gPSBjb25uZWN0aW9uOwogICAgICAgIGhhbmRsZShzb2NrLCAnY29ubmVjdCcsIHNvY2ssIHJlcSk7CiAgICAgIH0sCiAgICAgIG9uT3Blbihzb2NrKSB7CiAgICAgICAgdmVyYm9zZShgT3BlbmVkYCwgc29jaywgY3Rvci5uYW1lKTsKICAgICAgICBmZGxpc3Rbc29jay5mZF0gPSBuZXcgY3Rvcihzb2NrLCBpbnN0YW5jZSwgbG9nLCAnanNvbicsIGNsYXNzZXMpOwogICAgICAgIGZkbGlzdFtzb2NrLmZkXS5zb2NrZXQgPz89IHNvY2s7CiAgICAgICAgaGFuZGxlKHNvY2ssICdvcGVuJyk7CiAgICAgIH0sCiAgICAgIG9uTWVzc2FnZShzb2NrLCBtc2cpIHsKICAgICAgICB2ZXJib3NlKGBNZXNzYWdlYCwgc29jaywgbXNnKTsKICAgICAgICBoYW5kbGUoc29jaywgJ21lc3NhZ2UnLCBtc2cpOwogICAgICB9LAogICAgICBvbkVycm9yKHNvY2ssIGVycm9yKSB7CiAgICAgICAgdmVyYm9zZShgRXJyb3JgLCBzb2NrLCBlcnJvcik7CiAgICAgICAgY2FsbEhhbmRsZXIoaW5zdGFuY2UsICdlcnJvcicsIGVycm9yKTsKICAgICAgICBoYW5kbGUoc29jaywgJ2Vycm9yJywgZXJyb3IpOwogICAgICAgIHJlbW92ZShzb2NrKTsKICAgICAgfSwKICAgICAgb25DbG9zZShzb2NrLCBjb2RlLCB3aHkpIHsKICAgICAgICB2ZXJib3NlKGBDbG9zZWRgLCBzb2NrLCBjb2RlLCB3aHkpOwogICAgICAgIGhhbmRsZShzb2NrLCAnY2xvc2UnLCBjb2RlLCB3aHkpOwogICAgICAgIHJlbW92ZShzb2NrKTsKICAgICAgfSwKICAgICAgb25Qb25nKHNvY2ssIGRhdGEpIHsKICAgICAgICB2ZXJib3NlKGBQb25nYCwgc29jaywgZGF0YSk7CiAgICAgICAgaGFuZGxlKHNvY2ssICdwb25nJywgZGF0YSk7CiAgICAgIH0KICAgIH07CiAgfQp9CgovL2luaGVyaXRzKENvbm5lY3Rpb24sIEV2ZW50RW1pdHRlcik7CgovKmRlZmluZShDb25uZWN0aW9uLnByb3RvdHlwZSwgeyBbU3ltYm9sLnRvU3RyaW5nVGFnXTogJ0Nvbm5lY3Rpb24nIH0pOyovCndlYWtBc3NpZ24oQ29ubmVjdGlvbi5wcm90b3R5cGUsIC8qRXZlbnRFbWl0dGVyLnByb3RvdHlwZSwgKi8geyBbU3ltYm9sLnRvU3RyaW5nVGFnXTogJ0Nvbm5lY3Rpb24nIH0pOwoKQ29ubmVjdGlvbi5saXN0ID0gW107CgpmdW5jdGlvbiBSUENTZXJ2ZXJFbmRwb2ludChjbGFzc2VzID0ge30pIHsKICByZXR1cm4gewogICAgbmV3KHsgY2xhc3M6IG5hbWUsIGFyZ3MgPSBbXSB9KSB7CiAgICAgIHRoaXMubG9nKCdSUENTZXJ2ZXJFbmRwb2ludC5uZXcnKTsKICAgICAgbGV0IG9iaiwgcmV0LCBpZDsKICAgICAgdHJ5IHsKICAgICAgICBvYmogPSBuZXcgdGhpcy5jbGFzc2VzW25hbWVdKC4uLmFyZ3MpOwogICAgICAgIGlkID0gdGhpcy5tYWtlSWQoKTsKICAgICAgICB0aGlzLmluc3RhbmNlc1tpZF0gPSBvYmo7CiAgICAgIH0gY2F0Y2goZSkgewogICAgICAgIHJldHVybiBzdGF0dXNSZXNwb25zZShmYWxzZSwgZS5tZXNzYWdlKTsKICAgICAgfQogICAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCByZXN1bHQ6IHsgaWQsIG5hbWUgfSB9OwogICAgfSwKICAgIGxpc3QoKSB7CiAgICAgIHRoaXMubG9nKCdSUENTZXJ2ZXJFbmRwb2ludC5saXN0Jyk7CgogICAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCByZXN1bHQ6IE9iamVjdC5rZXlzKHsgLi4uY2xhc3NlcywgLi4udGhpcy5jbGFzc2VzIH0pIH07CiAgICB9LAogICAgZGVsZXRlOiBvYmplY3RDb21tYW5kKCh7IGlkIH0sIHJlc3BvbmQpID0+IHsKICAgICAgZGVsZXRlIHRoaXMuaW5zdGFuY2VzW2lkXTsKICAgICAgcmV0dXJuIHJlc3BvbmQodHJ1ZSk7CiAgICB9KSwKICAgIGNhbGw6IG9iamVjdENvbW1hbmQoKHsgb2JqLCBtZXRob2QsIGFyZ3MgPSBbXSB9LCByZXNwb25kKSA9PiB7CiAgICAgIGlmKG1ldGhvZCBpbiBvYmogJiYgdHlwZW9mIG9ialttZXRob2RdID09ICdmdW5jdGlvbicpIHsKICAgICAgICBjb25zdCByZXN1bHQgPSBvYmpbbWV0aG9kXSguLi5hcmdzKTsKICAgICAgICBpZihpc1RoZW5hYmxlKHJlc3VsdCkpCiAgICAgICAgICByZXR1cm4gcmVzdWx0LnRoZW4ocmVzdWx0ID0+IHJlc3BvbmQodHJ1ZSwgcmVzdWx0KSkuY2F0Y2goZXJyb3IgPT4gcmVzcG9uZChmYWxzZSwgZXJyb3IpKTsKICAgICAgICByZXR1cm4gcmVzcG9uZCh0cnVlLCByZXN1bHQpOwogICAgICB9CiAgICAgIHJldHVybiByZXNwb25kKGZhbHNlLCBgTm8gc3VjaCBtZXRob2Qgb24gb2JqZWN0ICMke2lkfTogJHttZXRob2R9YCk7CiAgICB9KSwKICAgIGtleXM6IG9iamVjdENvbW1hbmQoKHsgb2JqLCBlbnVtZXJhYmxlID0gdHJ1ZSB9LCByZXNwb25kKSA9PiB7CiAgICAgIHJldHVybiByZXNwb25kKAogICAgICAgIHRydWUsCiAgICAgICAgR2V0UHJvcGVydGllcyhvYmosIGVudW1lcmFibGUgPyBvYmogPT4gT2JqZWN0LmtleXMob2JqKSA6IG9iaiA9PiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhvYmopKQogICAgICApOwogICAgfSksCiAgICBuYW1lczogb2JqZWN0Q29tbWFuZCgoeyBvYmosIGVudW1lcmFibGUgPSB0cnVlIH0sIHJlc3BvbmQpID0+IHsKICAgICAgcmV0dXJuIHJlc3BvbmQoCiAgICAgICAgdHJ1ZSwKICAgICAgICBHZXRQcm9wZXJ0aWVzKG9iaiwgb2JqID0+IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG9iaikpCiAgICAgICk7CiAgICB9KSwKICAgIHN5bWJvbHM6IG9iamVjdENvbW1hbmQoKHsgb2JqLCBlbnVtZXJhYmxlID0gdHJ1ZSB9LCByZXNwb25kKSA9PiB7CiAgICAgIHJldHVybiByZXNwb25kKAogICAgICAgIHRydWUsCiAgICAgICAgR2V0UHJvcGVydGllcyhvYmosIG9iaiA9PiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iaikpLm1hcChzeW0gPT4gc3ltLmRlc2NyaXB0aW9uKQogICAgICApOwogICAgfSksCiAgICBwcm9wZXJ0aWVzOiBNYWtlTGlzdENvbW1hbmQodiA9PiB0eXBlb2YgdiAhPSAnZnVuY3Rpb24nKSwKICAgIG1ldGhvZHM6IE1ha2VMaXN0Q29tbWFuZCh2ID0+IHR5cGVvZiB2ID09ICdmdW5jdGlvbicsIHsgZW51bWVyYWJsZTogZmFsc2UgfSksCiAgICBnZXQ6IG9iamVjdENvbW1hbmQoKHsgb2JqLCBwcm9wZXJ0eSB9LCByZXNwb25kKSA9PiB7CiAgICAgIGlmKHByb3BlcnR5IGluIG9iaiAmJiB0eXBlb2Ygb2JqW3Byb3BlcnR5XSAhPSAnZnVuY3Rpb24nKSB7CiAgICAgICAgY29uc3QgcmVzdWx0ID0gb2JqW3Byb3BlcnR5XTsKICAgICAgICByZXR1cm4gcmVzcG9uZCh0cnVlLCByZXN1bHQpOwogICAgICB9CiAgICAgIHJldHVybiByZXNwb25kKGZhbHNlLCBgTm8gc3VjaCBwcm9wZXJ0eSBvbiBvYmplY3QgIyR7aWR9OiAke3Byb3BlcnR5fWApOwogICAgfSksCiAgICBzZXQ6IG9iamVjdENvbW1hbmQoKHsgb2JqLCBwcm9wZXJ0eSwgdmFsdWUgfSwgcmVzcG9uZCkgPT4gewogICAgICByZXR1cm4gcmVzcG9uZCh0cnVlLCAob2JqW3Byb3BlcnR5XSA9IHZhbHVlKSk7CiAgICB9KQogIH07Cn0KCmV4cG9ydCBjbGFzcyBSUENTZXJ2ZXIgZXh0ZW5kcyBDb25uZWN0aW9uIHsKICBjb25zdHJ1Y3Rvcihzb2NrZXQsIGluc3RhbmNlLCBsb2csIGNvZGVjID0gY29kZWNzLmpzb24oZmFsc2UpLCBjbGFzc2VzKSB7CiAgICAvL2xvZygnUlBDU2VydmVyLmNvbnN0cnVjdG9yJywgeyBzb2NrZXQsIGNsYXNzZXMsIGluc3RhbmNlLCBsb2cgfSk7CiAgICBzdXBlcihzb2NrZXQsIGluc3RhbmNlLCBsb2csIGNvZGVjKTsKCiAgICBsZXQgY29ubmVjdGlvbiA9IHRoaXM7CiAgICBkZWZpbmUoY29ubmVjdGlvbiwgewogICAgICBjbGFzc2VzLAogICAgICBpbnN0YW5jZXM6IHt9LAogICAgICBsYXN0SWQ6IDAsCiAgICAgIGNvbm5lY3RlZDogdHJ1ZSwKICAgICAgbWVzc2FnZXM6IHsgcmVxdWVzdHM6IHt9LCByZXNwb25zZXM6IHt9IH0sCiAgICAgIGNvbW1hbmRzOiBSUENTZXJ2ZXJFbmRwb2ludCgpCiAgICB9KTsKCiAgICBSUENTZXJ2ZXIuc2V0LmFkZChjb25uZWN0aW9uKTsKICB9CgogIG1ha2VJZCgpIHsKICAgIHJldHVybiArK3RoaXMubGFzdElkOwogIH0KCiAgcHJvY2Vzc01lc3NhZ2UoZGF0YSkgewogICAgbGV0IGZuLAogICAgICByZXQgPSBudWxsOwogICAgaWYoISgnY29tbWFuZCcgaW4gZGF0YSkpIHJldHVybiBzdGF0dXNSZXNwb25zZShmYWxzZSwgYE5vIGNvbW1hbmQgc3BlY2lmaWVkYCk7CiAgICBjb25zdCB7IGNvbW1hbmQsIHNlcSwgcGFyYW1zIH0gPSBkYXRhOwogICAgY29uc3QgeyBjb21tYW5kcyB9ID0gdGhpczsKICAgIGZuID0gY29tbWFuZHNbY29tbWFuZF07CiAgICB0aGlzLmxvZygnUlBDU2VydmVyLnByb2Nlc3NNZXNzYWdlJywgeyBjb21tYW5kLCBzZXEsIHBhcmFtcyB9KTsKICAgIGlmKHR5cGVvZiBzZXEgPT0gJ251bWJlcicpIHRoaXMubWVzc2FnZXMucmVxdWVzdHNbc2VxXSA9IGRhdGE7CiAgICBpZih0eXBlb2YgZm4gPT0gJ2Z1bmN0aW9uJykgcmV0dXJuIGZuLmNhbGwodGhpcywgZGF0YSk7CiAgICBzd2l0Y2ggKGNvbW1hbmQpIHsKICAgICAgZGVmYXVsdDogewogICAgICAgIHJldCA9IHN0YXR1c1Jlc3BvbnNlKGZhbHNlLCBgTm8gc3VjaCBjb21tYW5kICcke2NvbW1hbmR9J2ApOwogICAgICAgIGJyZWFrOwogICAgICB9CiAgICB9CiAgICByZXR1cm4gcmV0OwogIH0KfQoKZGVmaW5lKFJQQ1NlcnZlci5wcm90b3R5cGUsIHsgW1N5bWJvbC50b1N0cmluZ1RhZ106ICdSUENTZXJ2ZXInIH0pOwoKUlBDU2VydmVyLmxpc3QgPSBbXTsKCi8qKgogKiBAY2xhc3MgVGhpcyBjbGFzcyBkZXNjcmliZXMgYSBjbGllbnQgY29ubmVjdGlvbi4KICoKICogQGNsYXNzICAgICAgUlBDQ2xpZW50CiAqIEBwYXJhbSAgICAgIHtPYmplY3R9IHNvY2tldAogKiBAcGFyYW0gICAgICB7T2JqZWN0fSBjbGFzc2VzCiAqIEBwYXJhbSAgICAgIHtPYmplY3R9IGluc3RhbmNlCiAqIEBwYXJhbSAgICAgIHtGdW5jdGlvbn0gaW5zdGFuY2UKICoKICovCmV4cG9ydCBjbGFzcyBSUENDbGllbnQgZXh0ZW5kcyBDb25uZWN0aW9uIHsKICBjb25zdHJ1Y3Rvcihzb2NrZXQsIGluc3RhbmNlLCBsb2csIGNvZGVjID0gY29kZWNzLmpzb24oZmFsc2UpLCBjbGFzc2VzKSB7CiAgICBzdXBlcihzb2NrZXQsIGluc3RhbmNlLCBsb2csIGNvZGVjKTsKICAgIHRoaXMuaW5zdGFuY2VzID0ge307CiAgICB0aGlzLmNsYXNzZXMgPSBjbGFzc2VzOwogICAgdGhpcy5jb25uZWN0ZWQgPSB0cnVlOwogICAgUlBDQ2xpZW50LnNldC5hZGQodGhpcyk7CiAgICAvL3RoaXMubG9nKCdSUENDbGllbnQuY29uc3RydWN0b3InLCB7IHNvY2tldCwgaW5zdGFuY2UsIGxvZywgY29kZWMsIGNsYXNzZXMgfSAvKiwgbmV3IEVycm9yKCkuc3RhY2sucmVwbGFjZSgvRXJyb3Jcbj8vLCAnJykqLyk7CiAgICAvLwogICAgLy8KICAgIGNvbnNvbGUubG9nKCdSUENDbGllbnQub24nLCB0aGlzLm9uKTsKCiAgICAvL3RoaXMub24oJ2Vycm9yJywgZSA9PiBjb25zb2xlLmVycm9yKCdSUENDbGllbnQnLCBlKSk7CgogICAgLy90aGlzLm9uKCdyZXNwb25zZScsIHIgPT4gY29uc29sZS5sb2coJ1JQQ0NsaWVudC5vbnJlc3BvbnNlJywgcikpOwogICAgbGV0IGFwaTsKCiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLCB7CiAgICAgIGFwaTogewogICAgICAgIGdldCgpIHsKICAgICAgICAgIHJldHVybiBhcGkgPz8gKGFwaSA9IG5ldyBSUENBcGkodGhpcykpOwogICAgICAgIH0KICAgICAgfQogICAgfSk7CiAgfQoKICBwcm9jZXNzTWVzc2FnZShyZXNwb25zZSkgewogICAgLy90aGlzLmxvZygnUlBDQ2xpZW50LnByb2Nlc3NNZXNzYWdlJywgcmVzcG9uc2UsIG5ldyBFcnJvcigpLnN0YWNrLnJlcGxhY2UoL0Vycm9yXG4/LywgJycpKTsKICAgIGNvbnN0IHsgc3VjY2VzcywgZXJyb3IsIHJlc3VsdCwgc2VxIH0gPSByZXNwb25zZTsKCiAgICB0aGlzLmxvZygnUlBDQ2xpZW50LnByb2Nlc3NNZXNzYWdlJywgeyBzdWNjZXNzLCBlcnJvciwgcmVzdWx0LCBzZXEgfSk7CgogICAgaWYoc3VjY2VzcykgdGhpcy5lbWl0KCdyZXNwb25zZScsIHJlc3VsdCk7CiAgICBlbHNlIGlmKGVycm9yKSB0aGlzLmVtaXQoJ2Vycm9yJywgZXJyb3IpOwogIH0KCiAgY29tbWFuZChuYW1lLCBwYXJhbXMpIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZSgoYWNjZXB0LCByZWplY3QpID0+IHsKICAgICAgdGhpcy5vbmNlKCdyZXNwb25zZScsIHJlc3BvbnNlID0+IGFjY2VwdChyZXNwb25zZSkpOwogICAgICB0aGlzLm9uY2UoJ2Vycm9yJywgZSA9PiByZWplY3QoZSkpOwoKICAgICAgdGhpcy5zZW5kQ29tbWFuZChuYW1lLCBwYXJhbXMpOwogICAgfSk7CiAgfQp9CgpkZWZpbmUoUlBDQ2xpZW50LnByb3RvdHlwZSwgeyBbU3ltYm9sLnRvU3RyaW5nVGFnXTogJ1JQQ0NsaWVudCcgfSk7CgovKioKICogQGNsYXNzIENyZWF0ZXMgbmV3IFJQQyBzb2NrZXQKICoKICogQHBhcmFtICAgICAge3N0cmluZ30gICAgIFt1cmw9d2luZG93LmxvY2F0aW9uLmhyZWZdICAgICBVUkwgKHdzOi8vMTI3LjAuMC4xKSBvciBQb3J0CiAqIEBwYXJhbSAgICAgIHtmdW5jdGlvbn0gICBbc2VydmljZT1SUENTZXJ2ZXJdICBUaGUgc2VydmljZSBjb25zdHJ1Y3RvcgogKiBAcmV0dXJuICAgICB7UlBDU29ja2V0fSAgVGhlIFJQQyBzb2NrZXQuCiAqLwpleHBvcnQgZnVuY3Rpb24gUlBDU29ja2V0KHVybCwgc2VydmljZSA9IFJQQ1NlcnZlciwgdmVyYm9zaXR5ID0gMSkgewogIGlmKCFuZXcudGFyZ2V0KSByZXR1cm4gbmV3IFJQQ1NvY2tldCh1cmwsIHNlcnZpY2UsIHZlcmJvc2l0eSk7CgogIGNvbnNvbGUubG9nKCdSUENTb2NrZXQnLCB7IHVybCwgc2VydmljZSwgdmVyYm9zaXR5IH0pOwoKICAvLyBjb25zdCBERUJVRyA9IERlYnVnRmxhZ3MoKTsKICBjb25zdCBpbnN0YW5jZSA9IG5ldy50YXJnZXQgPyB0aGlzIDogbmV3IFJQQ1NvY2tldCh1cmwsIHNlcnZpY2UsIHZlcmJvc2l0eSk7CiAgY29uc3QgbG9nID0gLypjb25zb2xlLmNvbmZpZwogICAgPyAobXNnLCAuLi5hcmdzKSA9PiB7CiAgICAgICAgY29uc3QgeyBjb25zb2xlIH0gPSBnbG9iYWxUaGlzOwogICAgICAgIGNvbnNvbGUgCiAgICAgICAgICAubG9nKAogICAgICAgICAgICB7IG1zZyB9LAogICAgICAgICAgICBjb25zb2xlLmNvbmZpZyh7CiAgICAgICAgICAgICAgbXVsdGlsaW5lOiBmYWxzZSwKICAgICAgICAgICAgICBjb21wYWN0OiBmYWxzZSwKICAgICAgICAgICAgICBtYXhTdHJpbmdMZW5ndGg6IDEwMCwKICAgICAgICAgICAgICBzdHJpbmdCcmVha05ld2xpbmU6IGZhbHNlLAogICAgICAgICAgICAgIGhpZGVLZXlzOiBbJ29iaiddCiAgICAgICAgICAgIH0pLAogICAgICAgICAgICAuLi5hcmdzCiAgICAgICAgICApOwogICAgICB9CiAgICA6IGNvbnNvbGUubG9nOyAqLyAoLi4uYXJncykgPT4gewogICAgbGV0IHRvayA9IChhcmdzWzBdIHx8ICcnKS5yZXBsYWNlKC9bXkEtWmEtejAtOV9dLiovZywgJycpOwoKICAgIC8qaWYoREVCVUdbdG9rXSkgY29uc29sZS5kZWJ1ZyguLi5hcmdzKTsKICAgIGVsc2UgKi8gY29uc29sZS5sb2coLi4uYXJncyk7CiAgfTsKCiAgZGVmaW5lKGluc3RhbmNlLCB7CiAgICBnZXQgZmQoKSB7CiAgICAgIGxldCByZXQgPSBPYmplY3Qua2V5cyh0aGlzLmZkbGlzdClbMF0gPz8gLTE7CiAgICAgIGlmKCFpc05hTigrcmV0KSkgcmV0ID0gK3JldDsKICAgICAgcmV0dXJuIHJldDsKICAgIH0sCiAgICBnZXQgc29ja2V0KCkgewogICAgICByZXR1cm4gdGhpcy5mZGxpc3RbdGhpcy5mZF0/LnNvY2tldDsKICAgIH0sCiAgICBnZXQgY29ubmVjdGlvbigpIHsKICAgICAgcmV0dXJuIHRoaXMuZmRsaXN0W3RoaXMuZmRdOwogICAgfSwKICAgIGZkbGlzdDoge30sCiAgICBjbGFzc2VzOiB7fSwKICAgIGxvZwogIH0pOwoKICBjb25zdCBjYWxsYmFja3MgPSBzZXJ2aWNlLmdldENhbGxiYWNrcyhpbnN0YW5jZSwgdmVyYm9zaXR5KTsKCiAgaWYoIXVybCkgdXJsID0gZ2xvYmFsVGhpcy5sb2NhdGlvbj8uaHJlZjsKICBpZih0eXBlb2YgdXJsICE9ICdvYmplY3QnKSB1cmwgPSBwYXJzZVVSTCh1cmwpOwoKICAvKmlmKHVybC5wcm90b2NvbCA9PSAnd3MnKSB1cmwucHJvdG9jb2wgPSAnaHR0cCc7CiAgaWYodXJsLnByb3RvY29sID09ICd3c3MnKSB1cmwucHJvdG9jb2wgPSAnaHR0cHMnOyovCgogIGRlZmluZShpbnN0YW5jZSwgewogICAgc2VydmljZSwKICAgIGNhbGxiYWNrcywKICAgIHVybCwKICAgIGxvZywKICAgIHJlZ2lzdGVyKGN0b3IpIHsKICAgICAgaWYodHlwZW9mIGN0b3IgPT0gJ29iamVjdCcgJiYgY3RvciAhPT0gbnVsbCkgewogICAgICAgIGZvcihsZXQgbmFtZSBpbiBjdG9yKSBpbnN0YW5jZS5jbGFzc2VzW25hbWVdID0gY3RvcltuYW1lXTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpbnN0YW5jZS5jbGFzc2VzW2N0b3IubmFtZV0gPSBjdG9yOwogICAgICB9CiAgICAgIHJldHVybiB0aGlzOwogICAgfSwKICAgIGxpc3RlbihuZXdfd3MgPSBNYWtlV2ViU29ja2V0LCBvcyA9IGdsb2JhbFRoaXMub3MpIHsKICAgICAgdGhpcy5sb2coYCR7c2VydmljZS5uYW1lfSBsaXN0ZW5pbmcgb24gJHt0aGlzLnVybH1gKTsKICAgICAgaWYob3MpIGNhbGxiYWNrcy5vbkZkID0gc2V0SGFuZGxlcnNGdW5jdGlvbihvcyk7CiAgICAgIHRoaXMubGlzdGVuaW5nID0gdHJ1ZTsKICAgICAgdGhpcy53cyA9IG5ld193cyh0aGlzLnVybCwgY2FsbGJhY2tzLCB0cnVlKTsKICAgICAgaWYobmV3X3dzICE9PSBNYWtlV2ViU29ja2V0KQogICAgICAgIGlmKHRoaXMud3MudGhlbikgdGhpcy53cy50aGVuKCgpID0+ICh0aGlzLmxpc3RlbmluZyA9IGZhbHNlKSk7CiAgICAgICAgZWxzZSB0aGlzLmxpc3RlbmluZyA9IGZhbHNlOwogICAgICByZXR1cm4gdGhpczsKICAgIH0sCiAgICAvKmFzeW5jKi8gY29ubmVjdChuZXdfd3MgPSBNYWtlV2ViU29ja2V0LCBvcyA9IGdsb2JhbFRoaXMub3MpIHsKICAgICAgdGhpcy5sb2coYCR7c2VydmljZS5uYW1lfSBjb25uZWN0aW5nIHRvICR7dGhpcy51cmx9YCk7CiAgICAgIGlmKG9zKSBjYWxsYmFja3Mub25GZCA9IHNldEhhbmRsZXJzRnVuY3Rpb24ob3MpOwogICAgICB0aGlzLndzID0gbmV3X3dzKHRoaXMudXJsLCBjYWxsYmFja3MsIGZhbHNlKTsKICAgICAgLy9jb25zb2xlLmxvZygnY29ubmVjdCgpJywgdGhpcy53cyk7CiAgICAgIHJldHVybiB0aGlzOwogICAgfSwKICAgIGdldCBjb25uZWN0ZWQoKSB7CiAgICAgIGNvbnN0IHdzID0gdGhpcy53czsKICAgICAgY29uc29sZS5sb2coJ3dzJywgd3MpOwogICAgICBpZih3cykgcmV0dXJuIHR5cGVvZiB3cy5yZWFkeVN0YXRlID09ICdudW1iZXInID8gd3MucmVhZHlTdGF0ZSA9PSB3cy5PUEVOIDogZmFsc2U7CiAgICAgIGNvbnN0IHsgZmRsaXN0IH0gPSBpbnN0YW5jZTsKICAgICAgY29uc29sZS5sb2coJ2ZkbGlzdCcsIGZkbGlzdCk7CgogICAgICByZXR1cm4gZmRsaXN0W09iamVjdC5rZXlzKGZkbGlzdClbMF1dLmNvbm5lY3RlZDsKICAgIH0KICB9KTsKCiAgUlBDU29ja2V0LnNldC5hZGQoaW5zdGFuY2UpOwoKICByZXR1cm4gaW5zdGFuY2U7Cn0KCmZvcihsZXQgY3RvciBvZiBbUlBDU29ja2V0LCBDb25uZWN0aW9uLCBSUENDbGllbnQsIFJQQ1NlcnZlcl0pIHsKICBsZXQgc2V0ID0gbmV3IFNldCgpOwogIGRlZmluZShjdG9yLCB7CiAgICBzZXQsCiAgICBnZXQgbGlzdCgpIHsKICAgICAgcmV0dXJuIFsuLi5zZXRdOwogICAgfSwKICAgIGdldCBsYXN0KCkgewogICAgICByZXR1cm4gdGhpcy5saXN0Lmxhc3Q7CiAgICB9CiAgfSk7Cn0KCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShSUENTb2NrZXQucHJvdG90eXBlLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdSUENTb2NrZXQnIH0pOwoKZnVuY3Rpb24gTWFrZVdlYlNvY2tldCh1cmwsIGNhbGxiYWNrcykgewogIGxldCB3czsKICB0cnkgewogICAgd3MgPSBuZXcgV2ViU29ja2V0KHVybCArICcnKTsKICB9IGNhdGNoKGVycm9yKSB7CiAgICBjYWxsYmFja3Mub25FcnJvcih3cywgZXJyb3IpOwogICAgcmV0dXJuIG51bGw7CiAgfQogIHdzLm9uY29ubmVjdCA9ICgpID0+IGNhbGxiYWNrcy5vbkNvbm5lY3Qod3MpOwogIHdzLm9ub3BlbiA9ICgpID0+IGNhbGxiYWNrcy5vbk9wZW4od3MpOwogIHdzLm9uZXJyb3IgPSBlcnJvciA9PiBjYWxsYmFja3Mub25FcnJvcih3cywgZXJyb3IpOwogIHdzLm9ubWVzc2FnZSA9IG1zZyA9PiBjYWxsYmFja3Mub25NZXNzYWdlKHdzLCBtc2cpOwogIHdzLm9ucG9uZyA9IHBvbmcgPT4gY2FsbGJhY2tzLm9uUG9uZyh3cywgcG9uZyk7CiAgd3Mub25jbG9zZSA9IHJlYXNvbiA9PiBjYWxsYmFja3Mub25DbG9zZSh3cywgcmVhc29uKTsKICB3cy5mZCA9IHNvY2tJZCA9IChzb2NrSWQgfCAwKSArIDE7CgogIHJldHVybiB3czsKfQoKZXhwb3J0IGZ1bmN0aW9uIGlzVGhlbmFibGUodmFsdWUpIHsKICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdvYmplY3QnICYmIHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlLnRoZW4gPT0gJ2Z1bmN0aW9uJzsKfQoKZXhwb3J0IGZ1bmN0aW9uIGhhc0hhbmRsZXIob2JqLCBldmVudE5hbWUpIHsKICBpZih0eXBlb2Ygb2JqID09ICdvYmplY3QnICYmIG9iaiAhPSBudWxsKSB7CiAgICBjb25zdCBoYW5kbGVyID0gb2JqWydvbicgKyBldmVudE5hbWVdOwogICAgaWYodHlwZW9mIGhhbmRsZXIgPT0gJ2Z1bmN0aW9uJykgcmV0dXJuIGhhbmRsZXI7CiAgfQp9CgpleHBvcnQgZnVuY3Rpb24gY2FsbEhhbmRsZXIob2JqLCBldmVudE5hbWUsIC4uLmFyZ3MpIHsKICBsZXQgcmV0LAogICAgZm4gPSBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKTsKICBpZihmbikgcmV0dXJuIGZuLmNhbGwob2JqLCAuLi5hcmdzKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIHBhcnNlVVJMKHVybF9vcl9wb3J0KSB7CiAgbGV0IHByb3RvY29sLCBob3N0LCBwb3J0OwogIGlmKCFpc05hTigrdXJsX29yX3BvcnQpKSBbcHJvdG9jb2wsIGhvc3QsIHBvcnRdID0gWyd3cycsICcwLjAuMC4wJywgdXJsX29yX3BvcnRdOwogIGVsc2UgewogICAgW3Byb3RvY29sID0gJ3dzJywgaG9zdCwgcG9ydCA9IDgwXSA9IFsuLi4vKC4qOlwvXC98KShbXjovXSopKDpbMC05XSt8KS4qLy5leGVjKHVybF9vcl9wb3J0KV0uc2xpY2UoMSk7CiAgICBpZih0eXBlb2YgcG9ydCA9PSAnc3RyaW5nJykgcG9ydCA9IHBvcnQuc2xpY2UoMSk7CiAgfQogIHBvcnQgPSArcG9ydDsKICBpZihwcm90b2NvbCkgewogICAgcHJvdG9jb2wgPSBwcm90b2NvbC5zbGljZSgwLCAtMyk7CiAgICBpZihwcm90b2NvbC5zdGFydHNXaXRoKCdodHRwJykpIHByb3RvY29sID0gcHJvdG9jb2wucmVwbGFjZSgnaHR0cCcsICd3cycpOwogIH0gZWxzZSB7CiAgICBwcm90b2NvbCA9ICd3cyc7CiAgfQoKICByZXR1cm4gZGVmaW5lKAogICAgewogICAgICBwcm90b2NvbCwKICAgICAgaG9zdCwKICAgICAgcG9ydAogICAgfSwKICAgIHsKICAgICAgdG9TdHJpbmcoKSB7CiAgICAgICAgY29uc3QgeyBwcm90b2NvbCwgaG9zdCwgcG9ydCB9ID0gdGhpczsKICAgICAgICByZXR1cm4gYCR7cHJvdG9jb2wgfHwgJ3dzJ306Ly8ke2hvc3R9OiR7cG9ydH1gOwogICAgICB9CiAgICB9CiAgKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIEdldFByb3BlcnRpZXMoCiAgb2JqLAogIG1ldGhvZCA9IG9iaiA9PiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhvYmopLAogIHByZWQgPSAob2JqLCBkZXB0aCkgPT4gb2JqICE9PSBPYmplY3QucHJvdG90eXBlCikgewogIGxldCBzZXQgPSBuZXcgU2V0KCk7CiAgbGV0IGRlcHRoID0gMDsKICBkbyB7CiAgICBpZighcHJlZChvYmosIGRlcHRoKSkgYnJlYWs7CiAgICBmb3IobGV0IHByb3Agb2YgbWV0aG9kKG9iaiwgZGVwdGgpKSBzZXQuYWRkKHByb3ApOwogICAgbGV0IHByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaik7CiAgICBpZihwcm90byA9PT0gb2JqKSBicmVhazsKICAgIG9iaiA9IHByb3RvOwogICAgKytkZXB0aDsKICB9IHdoaWxlKHR5cGVvZiBvYmogPT0gJ29iamVjdCcgJiYgb2JqICE9IG51bGwpOwogIHJldHVybiBbLi4uc2V0XTsKfQoKZXhwb3J0IGZ1bmN0aW9uIEdldEtleXMob2JqLCBwcmVkID0gKG9iaiwgZGVwdGgpID0+IG9iaiAhPT0gT2JqZWN0LnByb3RvdHlwZSkgewogIGxldCBrZXlzID0gbmV3IFNldCgpOwogIGZvcihsZXQga2V5IG9mIEdldFByb3BlcnRpZXMob2JqLCBvYmogPT4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMob2JqKSwgcHJlZCkpIGtleXMuYWRkKGtleSk7CiAgZm9yKGxldCBrZXkgb2YgR2V0UHJvcGVydGllcyhvYmosIG9iaiA9PiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iaiksIHByZWQpKSBrZXlzLmFkZChrZXkpOwogIHJldHVybiBbLi4ua2V5c107Cn0KCmV4cG9ydCBmdW5jdGlvbiBnZXRQcm9wZXJ0eURlc2NyaXB0b3JzKG9iaiwgbWVyZ2UgPSB0cnVlLCBwcmVkID0gKHByb3RvLCBkZXB0aCkgPT4gdHJ1ZSkgewogIGxldCBhID0gW107CiAgbGV0IGRlcHRoID0gMCwKICAgIGRlc2MsCiAgICBvazsKICBkbyB7CiAgICBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMob2JqKTsKICAgIHRyeSB7CiAgICAgIG9rID0gcHJlZChvYmosIGRlcHRoKTsKICAgIH0gY2F0Y2goZSkge30KICAgIGlmKG9rKSBhLnB1c2goZGVzYyk7CiAgICBsZXQgcHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqKTsKICAgIGlmKHByb3RvID09PSBvYmopIGJyZWFrOwogICAgb2JqID0gcHJvdG87CiAgICArK2RlcHRoOwogIH0gd2hpbGUodHlwZW9mIG9iaiA9PSAnb2JqZWN0JyAmJiBvYmogIT0gbnVsbCk7CiAgaWYobWVyZ2UpIHsKICAgIGxldCBpID0gMDsKICAgIGxldCByZXN1bHQgPSB7fTsKICAgIGZvcihsZXQgZGVzYyBvZiBhKSBmb3IgKGxldCBwcm9wIG9mIEdldEtleXMoZGVzYykpIGlmKCEocHJvcCBpbiByZXN1bHQpKSByZXN1bHRbcHJvcF0gPSBkZXNjW3Byb3BdOwogICAgcmV0dXJuIHJlc3VsdDsKICB9CiAgcmV0dXJuIGE7Cn0KCmV4cG9ydCBmdW5jdGlvbiBkZWZpbmUob2JqLCAuLi5hcmdzKSB7CiAgbGV0IHByb3BkZXNjID0ge307CiAgZm9yKGxldCBwcm9wcyBvZiBhcmdzKSB7CiAgICBsZXQgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHByb3BzKTsKICAgIGZvcihsZXQgcHJvcCBvZiBHZXRLZXlzKGRlc2MpKSB7CiAgICAgIHByb3BkZXNjW3Byb3BdID0geyAuLi5kZXNjW3Byb3BdLCBlbnVtZXJhYmxlOiBmYWxzZSwgY29uZmlndXJhYmxlOiB0cnVlIH07CiAgICAgIGlmKCd2YWx1ZScgaW4gcHJvcGRlc2NbcHJvcF0pIHByb3BkZXNjW3Byb3BdLndyaXRhYmxlID0gdHJ1ZTsKICAgIH0KICB9CiAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMob2JqLCBwcm9wZGVzYyk7CiAgcmV0dXJuIG9iajsKfQoKZXhwb3J0IGZ1bmN0aW9uIHdlYWtBc3NpZ24ob2JqLCAuLi5hcmdzKSB7CiAgbGV0IHByb3BkZXNjID0ge307CiAgZm9yKGxldCBwcm9wcyBvZiBhcmdzKSB7CiAgICBsZXQgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHByb3BzKTsKICAgIGZvcihsZXQgcHJvcCBvZiBHZXRLZXlzKGRlc2MpKSB7CiAgICAgIGlmKHByb3AgaW4gb2JqKSBjb250aW51ZTsKICAgICAgcHJvcGRlc2NbcHJvcF0gPSB7IC4uLmRlc2NbcHJvcF0sIGVudW1lcmFibGU6IGZhbHNlLCBjb25maWd1cmFibGU6IHRydWUgfTsKICAgICAgaWYoJ3ZhbHVlJyBpbiBwcm9wZGVzY1twcm9wXSkgcHJvcGRlc2NbcHJvcF0ud3JpdGFibGUgPSB0cnVlOwogICAgfQogIH0KICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhvYmosIHByb3BkZXNjKTsKICByZXR1cm4gb2JqOwp9CgpleHBvcnQgZnVuY3Rpb24gc2V0SGFuZGxlcnNGdW5jdGlvbihvcykgewogIHJldHVybiBmdW5jdGlvbihmZCwgcmVhZGFibGUsIHdyaXRhYmxlKSB7CiAgICAvL2NvbnNvbGUubG9nKCdceDFiWzM4OzU7ODJtb25GZFx4MWJbMG0oJywgZmQsICcsJywgcmVhZGFibGUsICcsJywgd3JpdGFibGUsICcpJyk7CiAgICBvcy5zZXRSZWFkSGFuZGxlcihmZCwgcmVhZGFibGUpOwogICAgb3Muc2V0V3JpdGVIYW5kbGVyKGZkLCB3cml0YWJsZSk7CiAgfTsKfQoKLypleHBvcnQgZnVuY3Rpb24gc2V0SGFuZGxlcnMob3MsIGhhbmRsZXJzKSB7CiAgaGFuZGxlcnMub25GZCA9IGZ1bmN0aW9uKGZkLCByZWFkYWJsZSwgd3JpdGFibGUpIHsKICAgIC8vY29uc29sZS5sb2coJ1x4MWJbMzg7NTs4Mm1vbkZkXHgxYlswbSgnLCBmZCwgJywnLCByZWFkYWJsZSwgJywnLCB3cml0YWJsZSwgJyknKTsKICAgIG9zLnNldFJlYWRIYW5kbGVyKGZkLCByZWFkYWJsZSk7CiAgICBvcy5zZXRXcml0ZUhhbmRsZXIoZmQsIHdyaXRhYmxlKTsKICB9Owp9Ki8KCmV4cG9ydCBmdW5jdGlvbiBzdGF0dXNSZXNwb25zZShzdWNjZXNzLCByZXN1bHRfb3JfZXJyb3IsIGRhdGEpIHsKICBsZXQgciA9IHsgc3VjY2VzcyB9OwogIGlmKHJlc3VsdF9vcl9lcnJvciAhPT0gdW5kZWZpbmVkKSByW3N1Y2Nlc3MgPyAncmVzdWx0JyA6ICdlcnJvciddID0gcmVzdWx0X29yX2Vycm9yOwogIGlmKHR5cGVvZiBkYXRhID09ICdvYmplY3QnICYmIGRhdGEgIT0gbnVsbCAmJiB0eXBlb2YgZGF0YS5zZXEgPT0gJ251bWJlcicpIHIuc2VxID0gZGF0YS5zZXE7CiAgcmV0dXJuIHI7Cn0KCmV4cG9ydCBmdW5jdGlvbiBvYmplY3RDb21tYW5kKGZuKSB7CiAgcmV0dXJuIGZ1bmN0aW9uKGRhdGEpIHsKICAgIGNvbnN0IHJlc3BvbmQgPSAoc3VjY2VzcywgcmVzdWx0KSA9PiBzdGF0dXNSZXNwb25zZShzdWNjZXNzLCByZXN1bHQsIGRhdGEpOwogICAgY29uc3QgeyBpZCwgLi4ucmVzdCB9ID0gZGF0YTsKICAgIGlmKGlkIGluIHRoaXMuaW5zdGFuY2VzKSB7CiAgICAgIGRhdGEub2JqID0gdGhpcy5pbnN0YW5jZXNbaWRdOwogICAgICByZXR1cm4gZm4uY2FsbCh0aGlzLCBkYXRhLCByZXNwb25kKTsKICAgIH0KICAgIHJldHVybiByZXNwb25kKGZhbHNlLCBgTm8gc3VjaCBvYmplY3QgIyR7aWR9YCk7CiAgfTsKfQoKZXhwb3J0IGZ1bmN0aW9uIE1ha2VMaXN0Q29tbWFuZChwcmVkID0gdiA9PiB0eXBlb2YgdiAhPSAnZnVuY3Rpb24nLCBkZWZhdWx0cyA9IHsgbWF4RGVwdGg6IEluZmluaXR5IH0pIHsKICByZXR1cm4gb2JqZWN0Q29tbWFuZCgoZGF0YSwgcmVzcG9uZCkgPT4gewogICAgY29uc3QgeyBvYmosIGVudW1lcmFibGUgPSB0cnVlLCBzb3VyY2UgPSBmYWxzZSwga2V5RGVzY3JpcHRvciA9IHRydWUsIHZhbHVlRGVzY3JpcHRvciA9IHRydWUgfSA9IGRhdGE7CiAgICBkZWZhdWx0cyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgLi4uZGVmYXVsdHMgfTsKICAgIGxldCBwcm9wRGVzYyA9IGdldFByb3BlcnR5RGVzY3JpcHRvcnMob2JqLCB0cnVlLCAocHJvdG8sIGRlcHRoKSA9PiBkZXB0aCA8IChkZWZhdWx0cy5tYXhEZXB0aCA/PyBJbmZpbml0eSkpOwogICAgbGV0IGtleXMgPSBHZXRLZXlzKHByb3BEZXNjKTsKICAgIGxldCBtYXAgPSBrZXlzLnJlZHVjZSgoYWNjLCBrZXkpID0+IHsKICAgICAgY29uc3QgZGVzYyA9IHByb3BEZXNjW2tleV07CiAgICAgIGxldCB2YWx1ZSA9IGRlc2M/LnZhbHVlIHx8IG9ialtrZXldOwogICAgICBpZihwcmVkKHZhbHVlKSkgewogICAgICAgIGlmKHZhbHVlRGVzY3JpcHRvcikgewogICAgICAgICAgdmFsdWUgPSBTZXJpYWxpemVWYWx1ZSh2YWx1ZSwgc291cmNlKTsKICAgICAgICAgIGZvcihsZXQgZmxhZyBvZiBbJ2VudW1lcmFibGUnLCAnd3JpdGFibGUnLCAnY29uZmlndXJhYmxlJ10pCiAgICAgICAgICAgIGlmKGRlc2NbZmxhZ10gIT09IHVuZGVmaW5lZCkgaWYgKGRlc2NbZmxhZ10gIT0gZGVmYXVsdHNbZmxhZ10pIHZhbHVlW2ZsYWddID0gZGVzY1tmbGFnXTsKICAgICAgICB9IGVsc2UgaWYodHlwZW9mIHZhbHVlID09ICdmdW5jdGlvbicpIHsKICAgICAgICAgIHZhbHVlID0gdmFsdWUgKyAnJzsKICAgICAgICB9CiAgICAgICAgYWNjLnB1c2goW2tleURlc2NyaXB0b3IgPyBTZXJpYWxpemVWYWx1ZShrZXkpIDoga2V5LCB2YWx1ZV0pOwogICAgICB9CiAgICAgIHJldHVybiBhY2M7CiAgICB9LCBbXSk7CiAgICBjb25zb2xlLmxvZygnTGlzdENvbW1hbmQnLCBtYXApOwogICAgcmV0dXJuIHJlc3BvbmQodHJ1ZSwgbWFwKTsKICB9KTsKfQoKZXhwb3J0IGZ1bmN0aW9uIGdldFByb3RvdHlwZU5hbWUocHJvdG8pIHsKICByZXR1cm4gcHJvdG8uY29uc3RydWN0b3I/Lm5hbWUgPz8gcHJvdG9bU3ltYm9sLnRvU3RyaW5nVGFnXTsKfQoKZnVuY3Rpb24gRGVzZXJpYWxpemVFbnRyaWVzKGUpIHsKICBpZihBcnJheS5pc0FycmF5KGUpKSByZXR1cm4gZS5tYXAoYSA9PiBhLm1hcChEZXNlcmlhbGl6ZVZhbHVlKSk7CiAgdGhyb3cgbmV3IEVycm9yKGBEZXNlcmlhbGl6ZUVudHJpZXMgZT0ke2luc3BlY3QoZSl9YCk7Cn0KCmZ1bmN0aW9uIERlc2VyaWFsaXplS2V5cyhlKSB7CiAgaWYoQXJyYXkuaXNBcnJheShlKSkgcmV0dXJuIGUubWFwKChba10pID0+IERlc2VyaWFsaXplVmFsdWUoaykpOwogIHRocm93IG5ldyBFcnJvcihgRGVzZXJpYWxpemVLZXlzIGU9JHtpbnNwZWN0KGUpfWApOwp9CgpmdW5jdGlvbiBEZXNlcmlhbGl6ZU1hcChlKSB7CiAgcmV0dXJuIG5ldyBNYXAoRGVzZXJpYWxpemVFbnRyaWVzKGUpKTsKfQoKZnVuY3Rpb24gRGVzZXJpYWxpemVPYmplY3QoZSkgewogIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoRGVzZXJpYWxpemVFbnRyaWVzKGUpKTsKfQoKZnVuY3Rpb24gRm9yd2FyZE1ldGhvZHMoZSwgcmV0ID0ge30sIHRoaXNPYmopIHsKICBsZXQga2V5cyA9IERlc2VyaWFsaXplS2V5cyhlKTsKICBmb3IobGV0IGtleSBvZiBrZXlzKSB7CiAgICByZXRba2V5XSA9IE1ha2VDb21tYW5kRnVuY3Rpb24oa2V5LCBvID0+IG8uY29ubmVjdGlvbiwgdGhpc09iaik7CiAgfQogIC8vIGNvbnNvbGUubG9nKGBGb3J3YXJkTWV0aG9kc2AsIHsgZSwga2V5cywgcmV0IH0pOwogIHJldHVybiByZXQ7Cn0KCmZ1bmN0aW9uIEZvcndhcmRPYmplY3QoZSwgdGhpc09iaikgewogIGxldCBvYmogPSBGb3J3YXJkTWV0aG9kcyhlLCB7fSwgdGhpc09iaik7CiAgY29uc29sZS5sb2coYEZvcndhcmRPYmplY3RgLCB7IGUsIG9iaiwgdGhpc09iaiB9KTsKICByZXR1cm4gb2JqOwp9CgpmdW5jdGlvbiBNYWtlQ29tbWFuZEZ1bmN0aW9uKGNtZCwgZ2V0Q29ubmVjdGlvbiwgdGhpc09iaiwgdCkgewogIGNvbnN0IHBmeCA9IFtgUkVTUE9OU0UgdG9gLCB0eXBlb2YgY21kID09ICdzeW1ib2wnID8gY21kIDogYCIke2NtZH0iYF07CiAgdCA/Pz0geyBtZXRob2RzOiBGb3J3YXJkTWV0aG9kcywgcHJvcGVydGllczogRGVzZXJpYWxpemVPYmplY3QsIHN5bWJvbHM6IERlc2VyaWFsaXplU3ltYm9scyB9OwogIGlmKHR5cGVvZiBnZXRDb25uZWN0aW9uICE9ICdmdW5jdGlvbicpCiAgICBnZXRDb25uZWN0aW9uID0gb2JqID0+ICh0eXBlb2Ygb2JqID09ICdvYmplY3QnICYmIG9iaiAhPSBudWxsICYmICdjb25uZWN0aW9uJyBpbiBvYmogJiYgb2JqLmNvbm5lY3Rpb24pIHx8IG9iajsKICAvL2NvbnNvbGUubG9nKCJNYWtlQ29tbWFuZEZ1bmN0aW9uIix7Y21kLGdldENvbm5lY3Rpb24sdGhpc09ian0pOwogIHJldHVybiBmdW5jdGlvbihwYXJhbXMgPSB7fSkgewogICAgdGhpc09iaiA9IHRoaXNPYmogfHwgdGhpczsKICAgIGxldCBjbGllbnQgPSBnZXRDb25uZWN0aW9uKHRoaXNPYmopOwogICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgY2xpZW50Lm9uY2UoJ3Jlc3BvbnNlJywgciA9PiB7CiAgICAgICAgaWYodFtjbWRdKSByID0gdFtjbWRdKHIpOwogICAgICAgIHJlc29sdmUocik7CiAgICAgIH0pOwoKICAgICAgY2xpZW50LnNlbmRDb21tYW5kKGNtZCwgcGFyYW1zKTsKICAgIH0pOwogIH07CiAgcmV0dXJuIGFzeW5jIGZ1bmN0aW9uKHBhcmFtcyA9IHt9KSB7CiAgICBsZXQgY2xpZW50ID0gZ2V0Q29ubmVjdGlvbih0aGlzKTsKICAgIGF3YWl0IGNsaWVudC5zZW5kQ29tbWFuZChjbWQsIHBhcmFtcyk7CiAgICBsZXQgciA9IGF3YWl0IGNsaWVudC53YWl0Rm9yKCdyZXNwb25zZScpOwogICAgaWYodFtjbWRdKSByID0gdFtjbWRdKHIpOwogICAgY29uc29sZS5sb2coYFJFU1BPTlNFIHRvICcke2NtZH0nYCwgcik7CiAgICByZXR1cm4gcjsKICB9Owp9Cgpjb25zdCBUeXBlZEFycmF5UHJvdG90eXBlPU9iamVjdC5nZXRQcm90b3R5cGVPZihVaW50MzJBcnJheS5wcm90b3R5cGUpOwpjb25zdCBUeXBlZEFycmF5Q29uc3RydWN0b3I9IFR5cGVkQXJyYXlQcm90b3R5cGUuY29uc3RydWN0b3I7CgpmdW5jdGlvbiBpc1R5cGVkQXJyYXkodmFsdWUpIHsKICB0cnkgewogIHJldHVybiBUeXBlZEFycmF5UHJvdG90eXBlICA9PT0gT2JqZWN0LmdldFByb3RvdHlwZU9mKE9iamVjdC5nZXRQcm90b3R5cGVPZih2YWx1ZSkpOwp9IGNhdGNoKGUpIHt9Cn0KCgpleHBvcnQgZnVuY3Rpb24gU2VyaWFsaXplVmFsdWUodmFsdWUsIHNvdXJjZSA9IGZhbHNlKSB7CiAgY29uc3QgdHlwZSA9IHR5cGVvZiB2YWx1ZTsKICBsZXQgZGVzYyA9IHsgdHlwZSB9OwoKICBpZih0eXBlID09ICdvYmplY3QnICYmIHZhbHVlICE9IG51bGwpIHsKICAgIGRlc2NbJ2NsYXNzJ10gPSBnZXRQcm90b3R5cGVOYW1lKHZhbHVlKSA/PyBnZXRQcm90b3R5cGVOYW1lKE9iamVjdC5nZXRQcm90b3R5cGVPZih2YWx1ZSkpOwogICAgLy9kZXNjWydjaGFpbiddID0gZ2V0UHJvdG90eXBlQ2hhaW4odmFsdWUpLm1hcChnZXRQcm90b3R5cGVOYW1lKTsKICB9IGVsc2UgaWYodHlwZSA9PSAnc3ltYm9sJykgewogICAgZGVzY1snZGVzY3JpcHRpb24nXSA9IHZhbHVlLmRlc2NyaXB0aW9uOwogICAgZGVzY1snc3ltYm9sJ10gPSB2YWx1ZS50b1N0cmluZygpOwogIH0gZWxzZSBpZih0eXBlID09ICdmdW5jdGlvbicpIHsKICAgIGlmKHZhbHVlLmxlbmd0aCAhPT0gdW5kZWZpbmVkKSBkZXNjWydsZW5ndGgnXSA9IHZhbHVlLmxlbmd0aDsKICB9CiAgaWYodHlwZSA9PSAnb2JqZWN0JykgewogIGlmKHZhbHVlIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHsKICAgIGxldCBhcnJheSA9IG5ldyBVaW50OEFycmF5KHZhbHVlKTsKICAgIHZhbHVlID0gWy4uLmFycmF5XTsKICAgIGRlc2NbJ2NsYXNzJ10gPSAnQXJyYXlCdWZmZXInOwogICAgLy8gZGVsZXRlIGRlc2NbJ2NoYWluJ107CiAgfSBlbHNlIGlmKGlzVHlwZWRBcnJheSh2YWx1ZSkpIHsKICAgIHZhbHVlPVsuLi52YWx1ZV0ubWFwKG4gPT4gdHlwZW9mIG4gPT0gJ251bWJlcicgPyBuIDogbisnJyk7Cn0gZWxzZSBpZih2YWx1ZSBpbnN0YW5jZW9mIFNldCkgewogICAgdmFsdWU9Wy4uLnZhbHVlXTsKICB9Cn0KCiAgaWYodHlwZW9mIHZhbHVlID09ICdmdW5jdGlvbicpIHsKICAgIGlmKHNvdXJjZSkgZGVzYy5zb3VyY2UgPSB2YWx1ZSArICcnOwogIH0gZWxzZSBpZih0eXBlb2YgdmFsdWUgIT0gJ3N5bWJvbCcpIHsKICAgIGRlc2MudmFsdWUgPSB2YWx1ZTsKICB9CiAgcmV0dXJuIGRlc2M7Cn0KCmV4cG9ydCBmdW5jdGlvbiBEZXNlcmlhbGl6ZVN5bWJvbHMobmFtZXMpIHsKICByZXR1cm4gbmFtZXMubWFwKG4gPT4gbi5yZXBsYWNlKC9TeW1ib2xcLi8sICcnKSkubWFwKG4gPT4gU3ltYm9sW25dKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIERlc2VyaWFsaXplVmFsdWUoZGVzYykgewogIGlmKGRlc2MudHlwZSA9PSAnc3ltYm9sJykgcmV0dXJuIFN5bWJvbC5mb3IoZGVzYy5kZXNjcmlwdGlvbik7CiAgaWYoZGVzYy50eXBlID09ICdvYmplY3QnICYmICdjbGFzcycgaW4gZGVzYykgewogICAgICBsZXQgY3RvciA9IGdsb2JhbFRoaXNbZGVzYy5jbGFzc107CgogICAgICBpZihjdG9yKSB7CiAgICAgICAgZGVzYy52YWx1ZSA9IG5ldyBjdG9yKGRlc2MudmFsdWUpOwogICAgICB9CiAgfQogIC8vIGlmKGRlc2MudHlwZT09J3N0cmluZycpCiAgcmV0dXJuIGRlc2MudmFsdWU7Cn0KCmV4cG9ydCBjb25zdCBSUENDb25uZWN0ID0KICAodXJsLCB2ZXJib3NpdHkgPSAxKSA9PgogIChuZXdfd3MgPSBNYWtlV2ViU29ja2V0KSA9PgogICAgbmV3IFJQQ1NvY2tldCh1cmwsIFJQQ0NsaWVudCwgdmVyYm9zaXR5KS5jb25uZWN0KG5ld193cyk7CmV4cG9ydCBjb25zdCBSUENMaXN0ZW4gPQogICh1cmwsIHZlcmJvc2l0eSA9IDEpID0+CiAgKG5ld193cyA9IE1ha2VXZWJTb2NrZXQpID0+CiAgICBuZXcgUlBDU29ja2V0KHVybCwgUlBDU2VydmVyLCB2ZXJib3NpdHkpLmxpc3RlbihuZXdfd3MpOwoAAAAAAAAAAI51AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2cQAAAAAAAPZxAAAAAAAAAAAAAAAA8L8"
				],
				[
					3377,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAAR0AAAAAAAABXQAAAAAAAAAAAAABXQAAAAAAAAGdAAAAAAAAAAAAAAGdAAAAAAAAAd0AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEdAAAAAAAAAR0AAAAAAAAAAAAAAAA8L8"
				],
				[
					3378,
					1,
					"insert",
					{
						"characters": " ctor"
					},
					"BQAAAAd0AAAAAAAACHQAAAAAAAAAAAAACHQAAAAAAAAJdAAAAAAAAAAAAAAJdAAAAAAAAAp0AAAAAAAAAAAAAAp0AAAAAAAAC3QAAAAAAAAAAAAAC3QAAAAAAAAMdAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHdAAAAAAAAAd0AAAAAAAAAAAAAAAA8L8"
				],
				[
					3379,
					1,
					"insert",
					{
						"characters": " !=="
					},
					"BAAAAAx0AAAAAAAADXQAAAAAAAAAAAAADXQAAAAAAAAOdAAAAAAAAAAAAAAOdAAAAAAAAA90AAAAAAAAAAAAAA90AAAAAAAAEHQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMdAAAAAAAAAx0AAAAAAAAAAAAAAAA8L8"
				],
				[
					3380,
					1,
					"insert",
					{
						"characters": " Array"
					},
					"BgAAABB0AAAAAAAAEXQAAAAAAAAAAAAAEXQAAAAAAAASdAAAAAAAAAAAAAASdAAAAAAAABN0AAAAAAAAAAAAABN0AAAAAAAAFHQAAAAAAAAAAAAAFHQAAAAAAAAVdAAAAAAAAAAAAAAVdAAAAAAAABZ0AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQdAAAAAAAABB0AAAAAAAAAAAAAAAA8L8"
				],
				[
					3488,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGYzAAAAAAAAZzMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmMwAAAAAAAGYzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3489,
					1,
					"left_delete",
					null,
					"AQAAAGYzAAAAAAAAZjMAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnMwAAAAAAAGczAAAAAAAAAAAAAAAA8L8"
				],
				[
					3491,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIwzAAAAAAAAjTMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMMwAAAAAAAIwzAAAAAAAAAAAAAAAAbUA"
				],
				[
					3493,
					1,
					"insert",
					{
						"characters": "Seri"
					},
					"BAAAAIwzAAAAAAAAjTMAAAAAAAAAAAAAjTMAAAAAAACOMwAAAAAAAAAAAACOMwAAAAAAAI8zAAAAAAAAAAAAAI8zAAAAAAAAkDMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMMwAAAAAAAIwzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3494,
					1,
					"insert_completion",
					{
						"completion": "SerializeValue",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "SerializeValue"
					},
					"AgAAAIwzAAAAAAAAjDMAAAAAAAAEAAAAU2VyaYwzAAAAAAAAmjMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQMwAAAAAAAJAzAAAAAAAAAAAAAAAA8L8"
				],
				[
					3495,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJozAAAAAAAAnDMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaMwAAAAAAAJozAAAAAAAAAAAAAAAA8L8"
				],
				[
					3496,
					2,
					"right_delete",
					null,
					"AgAAAJszAAAAAAAAmzMAAAAAAAABAAAAKZszAAAAAAAAmzMAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbMwAAAAAAAJszAAAAAAAAAAAAAAAA8L8"
				],
				[
					3498,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAKIzAAAAAAAAozMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiMwAAAAAAAKIzAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 22948,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/minnet-server-http.c",
			"settings":
			{
				"buffer_size": 34735,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 102 files for \"mount_new\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-net/src/minnet-server-http.h:\n   38  void vhost_options_free(JSContext*, MinnetVhostOptions*);\n   39  MinnetHttpMount* mount_create(JSContext*, const char*, const char*, const char* def, const char* pro, enum lws_mount_protocols origin_proto);\n   40: MinnetHttpMount* mount_new(JSContext*, JSValue, const char*);\n   41  struct http_mount* mount_find(MinnetHttpMount*, const char*, size_t);\n   42  struct http_mount* mount_find_s(MinnetHttpMount*, const char*);\n\n~/Projects/plot-cv/quickjs/qjs-net/src/minnet-server.c:\n  139        if(JS_IsUndefined(mountval))\n  140          break;\n  141:       mount = mount_new(ctx, mountval, 0);\n  142        mount->extra_mimetypes = server->mimetypes;\n  143        mount->pro = \"http\";\n  ...\n  154        const char* name = JS_AtomToCString(ctx, prop);\n  155        JSValue mountval = JS_GetProperty(ctx, opt_mounts, prop);\n  156:       mount = mount_new(ctx, mountval, name);\n  157        mount->extra_mimetypes = server->mimetypes;\n  158        mount->pro = \"http\";\n\n~/Projects/plot-cv/quickjs/qjs-net/src/minnet-server-http.c:\n  186  \n  187  MinnetHttpMount*\n  188: mount_new(JSContext* ctx, JSValueConst obj, const char* key) {\n  189    MinnetHttpMount* ret;\n  190    JSValue mnt = JS_UNDEFINED, org = JS_UNDEFINED, def = JS_UNDEFINED, pro = JS_UNDEFINED;\n  ...\n  218    const char* path = JS_ToCString(ctx, mnt);\n  219  \n  220:   DEBUG(\"mount_new '%s'\\n\", path);\n  221  \n  222    if(JS_IsFunction(ctx, org)) {\n\n5 matches across 3 files\n\n\nSearching 102 files for \"exited:\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-net/tests/test-client-http.js:\n   62      let status;\n   63      kill(pid, 9);\n   64:     wait4(pid, st => ((status = st), console.log(`exited: status=${status}`)));\n   65      if(ex) exit(code);\n   66      else return status;\n\n~/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js:\n  125      if(pid > 0) {\n  126        kill(pid, 9);\n  127:       wait4(pid, st => ((status = st), console.log(`exited: status=${status}`)));\n  128      }\n  129      if(ex) exit(code);\n\n2 matches across 2 files\n\n\nSearching 102 files for \"\\.log\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-net/wscli.js:\n   36      let r = typeof buffer == 'string' ? (fd.puts(buffer), fd.tell()) : fd.write(buffer, 0, buffer.byteLength);\n   37      fd.close();\n   38:     console.log(`r`, r);\n   39:     if(r >= 0) console.log(`Wrote '${filename}'.`);\n   40:     else console.log(`Error writing '${filename}': ${std.strerror(err.errno)}`);\n   41      return r;\n   42    }\n   ..\n  116        std.exit(0);\n  117      });\n  118:     let orig_log = console.log;\n  119      let log = this.printFunction((...args) => orig_log(...args));\n  120:     console.log = (...args) => {\n  121        let opts = console.config(console.options);\n  122        this.printStatus(\n  ...\n  210        let p =\n  211          ['ERR', 'WARN', 'NOTICE', 'INFO', 'DEBUG', 'PARSER', 'HEADER', 'EXT', 'CLIENT', 'LATENCY', 'MINNET', 'THREAD'][\n  212:           level && Math.log2(level)\n  213          ] ?? level + '';\n  214        if(p == 'INFO' || /RECEIVE_CLIENT_HTTP_READ|\\[mux|__lws|\\[wsicli|lws_/.test(msg)) return;\n  ...\n  216        if(params.verbose > 1 || params.debug) std.puts(p.padEnd(8) + '\\t' + msg + '\\n');\n  217      });\n  218:     if(params.verbose) console.log(`Connecting to '${url}'...`);\n  219  \n  220      const fn = [net.client, net.server][+listen];\n  ...\n  235        ...callbacks,\n  236        onConnect(ws, req) {\n  237:         console.log('onConnect', { ws, req });\n  238          connections.add(ws);\n  239          Object.assign(globalThis, { ws, req });\n  240  \n  241:         if(params.verbose) console.log('onConnect', { ws, req });\n  242          const remote = `${ws.address}:${ws.port}`;\n  243          try {\n  244            repl = globalThis.repl = new CLI(remote);\n  245          } catch(err) {\n  246:           console.log('error:', err.message);\n  247          }\n  248  \n  ...\n  262          }\n  263  \n  264:         console.log('onClose', { ws, status, reason, error });\n  265          connections.delete(ws);\n  266          if(repl) {\n  ...\n  272        },\n  273        onHttp(req, resp) {\n  274:         console.log('onHttp', console.config({ compact: false }), { req, resp });\n  275          let { headers } = resp;\n  276  \n  ...\n  286          let buffer = resp.body;\n  287          let text = toString(buffer);\n  288:         console.log('this', this);\n  289  \n  290          WriteFile(params.output ?? name ?? 'output.bin', buffer);\n  ...\n  303        },\n  304        onMessage(ws, msg) {\n  305:         console.log('onMessage', console.config({ compact: 1 }), { ws, msg });\n  306          if(typeof msg == 'string') {\n  307            msg = msg.replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r');\n  ...\n  330        })\n  331        .catch(err => {\n  332:         console.log('Failed', err);\n  333        });\n  334    } catch(error) {\n  ...\n  406    main(...scriptArgs.slice(1));\n  407  } catch(error) {\n  408:   console.log(`FAIL: ${error && error.message}\\n${error && error.stack}`);\n  409    std.exit(1);\n  410  }\n\n~/Projects/plot-cv/quickjs/qjs-net/check-dep.js:\n  174        if((def = defines.get(m))) {\n  175          ++def.count;\n  176:         //console.log('def', def);\n  177        }\n  178      }\n  179  \n  180:     //  console.log(`references[${file}]`, console.config({ compact: 1 }), undef);\n  181    }\n  182  \n  ...\n  197    for(let file in files) {\n  198      let { code, functions } = getFile(file);\n  199:     console.log(`Parsing functions '${file}'...`, functions);\n  200  \n  201      for(let [name, [s, e]] of functions) {\n  ...\n  204    }\n  205  \n  206:   console.log('all', all.size);\n  207:   console.log('external', external.size);\n  208:   console.log('used', used.size);\n  209:   console.log('unused', unused.size);\n  210:   console.log('unused', console.config({ compact: false }), [...unused]);\n  211  */\n  212    os.kill(process.pid, os.SIGUSR1);\n  ...\n  234  function MatchSymbols(code, symbols) {\n  235    let sl = [...symbols].join('|') || '[A-Za-z_][A-Za-z0-9_]*';\n  236:   // console.log('sl',sl);\n  237    let re = new RegExp('(?:^|[^\\n])(' + sl + ')', 'g');\n  238  \n\n~/Projects/plot-cv/quickjs/qjs-net/test-rpc.js:\n   22    let ret = f.tell();\n   23    f.close();\n   24:   if(verbose) console.log(`Wrote ${name}: ${ret} bytes`);\n   25  }\n   26  \n   ..\n   55    if(params['no-tls'] === true) params.tls = false;\n   56  \n   57:   console.log('params', params);\n   58:   console.log('setLog', setLog);\n   59    const {\n   60      '@': [url = 'ws://127.0.0.1:8993/ws'],\n   ..\n   65    const listen = params.connect && !params.listen ? false : true;\n   66    const serve = !params.client || params.server;\n   67:   console.log('listen', listen);\n   68:   console.log('serve', serve);\n   69  \n   70    Object.assign(globalThis, { rpc, ...rpc });\n   ..\n   95    };\n   96  \n   97:   console.log = repl.printFunction(log);\n   98    let uri = new URL(url);\n   99:   console.log('main', { url, uri });\n  100  \n  101    let ctor = () => new RPCSocket(url, serve ? RPCServer : RPCClient, +params.verbose);\n  ...\n  107    let connections = new Set();\n  108    function createWS(url, callbacks, listen) {\n  109:     console.log('createWS', { url, callbacks, listen });\n  110      const { protocol, hostname, port, path } = url;\n  111:     console.log('createWS', { protocol, hostname, port, path });\n  112      setLog((params.debug ? LLL_USER : 0) | (((params.debug ? LLL_NOTICE : LLL_WARN) << 1) - 1), (level, message) => {\n  113        repl.printStatus(() => std.puts(message));\n  114:       //if(params.debug) console.log((['ERR', 'WARN', 'NOTICE', 'INFO', 'DEBUG', 'PARSER', 'HEADER', 'EXT', 'CLIENT', 'LATENCY', 'MINNET', 'THREAD'][Math.log2(level)] ?? level + '').padEnd(8), ...args);\n  115      });\n  116  \n  ...\n  148          '/': ['/', '.', 'index.html'],\n  149          '/404.html': function* (req, res) {\n  150:           console.log('/404.html', { req, res });\n  151            yield '<html><head><meta charset=utf-8 http-equiv=\"Content-Language\" content=\"en\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"/error.css\"/></head><body><h1>403</h1></body></html>';\n  152          },\n  ...\n  155            const { status, ok, type } = res;\n  156  \n  157:           console.log('proxy', { url, method, headers }, { status, ok, url, type });\n  158          },\n  159          *config(req, res) {\n  160:           console.log('/config', { req, res });\n  161            yield '{}';\n  162          },\n  ...\n  181            if(components.length < 2 || components[0] != 'home') throw new Error(`Access error`);\n  182  \n  183:           console.log('\\x1b[38;5;215m*files\\x1b[0m', {\n  184              dir,\n  185              components,\n  186              absdir\n  187            });\n  188:           console.log('\\x1b[38;5;215m*files\\x1b[0m', { absdir });\n  189  \n  190            let names = fs.readdirSync(absdir) ?? [];\n  ...\n  224            entries = entries.sort(cmp);\n  225  \n  226:           console.log('\\x1b[38;5;215m*files\\x1b[0m', { entries });\n  227            names = entries.map(([name, obj]) => (objects ? obj : name));\n  228  \n  ...\n  232        ...callbacks,\n  233        onConnect(ws, req) {\n  234:         console.log('test-rpc', { ws, req });\n  235          connections.add(ws);\n  236  \n  ...\n  238        },\n  239        onClose(ws, status, reason, error) {\n  240:         console.log('\\x1b[38;5;165monClose\\x1b[0m', { ws, status, reason, error });\n  241          connections.delete(ws);\n  242  \n  ...\n  245        onHttp(ws, req, rsp) {\n  246          const { url, method, headers } = req;\n  247:         console.log('\\x1b[38;5;33monHttp\\x1b[0m [\\n  ', req, ',\\n  ', rsp, '\\n]');\n  248          return rsp;\n  249        },\n  250        onMessage(ws, data) {\n  251:         console.log('onMessage', ws, `len=${data.length}`, data);\n  252          return callbacks.onMessage(ws, data);\n  253        }\n  ...\n  299  \n  300    function quit(why) {\n  301:     console.log(`quit('${why}')`);\n  302  \n  303      let cfg = { inspectOptions: console.options };\n  ...\n  312    main(...scriptArgs.slice(1));\n  313  } catch(error) {\n  314:   console.log(`FAIL: ${error?.message ?? error}\\n${error?.stack}`);\n  315    std.exit(1);\n  316  } finally {\n  317:   //console.log('SUCCESS');\n  318  }\n  319  \n\n~/Projects/plot-cv/quickjs/qjs-net/tests/test-client-ws.js:\n   14  \n   15    if(args.length == 0) {\n   16:     pid = spawn('server.js', ['localhost', 30000], scriptArgs[0].replace(/.*\\//g, '').replace('.js', '.log'));\n   17      sleep(100);\n   18      args.push('wss://localhost:30000/ws');\n\n~/Projects/plot-cv/quickjs/qjs-net/tests/server.js:\n    7  const w = Worker.parent;\n    8  const name = w ? 'CHILD\\t' : 'PARENT\\t';\n    9: //let log = (...args) => console.log(name, ...args);\n   10: let log = (...args) => console.log(...args);\n   11  const connections = new Set();\n   12  \n   13  /*import('console').then(({ Console }) => { globalThis.console = new Console(err, { inspectOptions: { compact: 0, customInspect: true, maxStringLength: 100 } });\n   14:   log = (...args) => globalThis.console.log(name, ...args);\n   15  });*/\n   16  \n   ..\n  151          },\n  152          onMessage: (ws, msg) => {\n  153:           console.log('onMessage', typeof ws, { ws, msg });\n  154            ws.send('ECHO: ' + msg);\n  155            //ws.send(JSON.stringify({ type: 'message', msg }));\n\n~/Projects/plot-cv/quickjs/qjs-net/tests/test-generator.js:\n    5  \n    6    let gen = new Generator(async (push, stop) => {\n    7:     console.log('generator', { push, stop });\n    8      for(let i = 0; i < 100; i++) {\n    9        let pr = push(new Uint32Array([i * 1e6]));\n   10        await pr;\n   11:       console.log(`wrote #${i}`);\n   12  \n   13        if(i >= 42) stop();\n   ..\n   15      await stop(new Uint8Array([70, 105, 110, 105, 115, 104]));\n   16    });\n   17:   console.log('gen', gen);\n   18  \n   19    /* for await(let item of gen) {\n   20:     console.log('item', new Uint32Array(item));\n   21    }*/\n   22  \n   ..\n   25    while((item = await gen.next())) {\n   26      let { value, done } = item;\n   27:     console.log(`item #${i}`, { value, done });\n   28    }\n   29  }\n\n~/Projects/plot-cv/quickjs/qjs-net/tests/test-fetch.js:\n   39      fetch(url, reqObj)\n   40        .then(response => {\n   41:         console.log('response', response);\n   42          log(console.config({ compact: 0 }), response);\n   43          let prom = response.arrayBuffer();\n   44          prom.then(buf => {\n   45:           console.log('buf', buf);\n   46            let prom = response.text();\n   47:           console.log('prom', prom);\n   48            prom.then(text => {\n   49              log('arrayBuffer()', console.config({ compact: 2 }), buf);\n   ..\n   73      -1,\n   74      (() => {\n   75:       let lf = open('test-fetch.log', 'w');\n   76        return (level, msg) => {\n   77          //  log(logLevels[level].padEnd(10) + msg);\n\n~/Projects/plot-cv/quickjs/qjs-net/tests/common.js:\n   16      return;\n   17  \n   18:   console.log('assert', { actual, expected, message });\n   19  \n   20    throw Error(\n   ..\n   62      if(chunk === undefined) break;\n   63  \n   64:     console.log('Written:', handle.write(chunk, 0, chunk.byteLength));\n   65    }\n   66  \n\n~/Projects/plot-cv/quickjs/qjs-net/tests/test-server-http.js:\n   11    return Client(url, {\n   12      onConnect(ws, req) {\n   13:       console.log('onConnect', { ws, req });\n   14      },\n   15      onClose(ws, reason) {\n   16:       console.log('onClose', { ws, reason });\n   17        exit(reason);\n   18      },\n   19      onError(ws, error) {\n   20:       console.log('onError', { ws, error });\n   21        exit(1);\n   22      },\n   23      onHttp(req, resp) {\n   24        const { url } = resp;\n   25:       console.log('onHttp', { req, resp });\n   26:       console.log('req.url', req.url);\n   27:       console.log('resp.url', resp.url);\n   28:       console.log('url.path', url.path);\n   29  \n   30        let file = loadFile('.' + url.path);\n   31  \n   32        let body = resp.text();\n   33:       console.log('onHttp', { body, file });\n   34  \n   35        if(file.length == body.length) if (file === body) exit(0);\n   ..\n   41     import('console').then(({Console}) => globalThis.console = new Console({ inspectOptions: { compact: 2 } }));\n   42  \n   43:   let pid = spawn('server.js', ['localhost', 30000], scriptArgs[0].replace(/.*\\//g, '').replace('.js', '.log'));\n   44    let status = [];\n   45  \n   ..\n   50    kill(pid, SIGTERM);\n   51    wait4(pid, status, WNOHANG);\n   52:   console.log('status', status);\n   53  }\n   54  \n   ..\n   56    main(...scriptArgs.slice(1));\n   57  } catch(error) {\n   58:   console.log(`FAIL: ${error && error.message}\\n${error && error.stack}`);\n   59    exit(1);\n   60  }\n\n~/Projects/plot-cv/quickjs/qjs-net/tests/client.js:\n   52            ...opts,\n   53            onConnect(ws, req) {\n   54:             console.log('onConnect');\n   55              connections.add(ws);\n   56  \n   ..\n   61              };\n   62  \n   63:             onConnect ? onConnect(ws, req) : console.log('onConnect', ws, req);\n   64            },\n   65            onClose(ws, status, reason, error) {\n   ..\n   70              onClose\n   71                ? onClose(ws, status, reason, error)\n   72:               : (console.log('onClose', { ws, reason }), exit(reason != 1000 && reason != 0 ? 1 : 0));\n   73              pr = reject = resolve = null;\n   74            },\n   ..\n   76              connections.delete(ws);\n   77  \n   78:             onError ? onError(ws, error) : (console.log('onError', { ws, error }), exit(error));\n   79            },\n   80  \n   ..\n   86              onMessage\n   87                ? onMessage(ws, msg)\n   88:               : (console.log('onMessage', console.config({ maxStringLen: 100 }), { ws, msg }),\n   89                  puts(escape(abbreviate(msg)) + '\\n'));\n   90            },\n   ..\n   99              log('onHttp(2)', text.replace(/\\n/g, '\\\\n').substring(0, 100));\n  100  \n  101:             console.log('push', /* await*/ push(text));\n  102            }\n  103          });\n\n~/Projects/plot-cv/quickjs/qjs-net/tests/test-client-http.js:\n   14  \n   15    if(args.length == 0) {\n   16:     pid = spawn('server.js', ['localhost', 30000], null /*scriptArgs[0].replace(/.*\\//g, '').replace('.js', '.log')*/);\n   17      sleep(1000);\n   18      args.push('https://localhost:30000/src/minnet.h');\n   ..\n   42      );\n   43  \n   44:     console.log('cli', cli);\n   45:     console.log('cli.readable', cli.readable);\n   46  \n   47      save(cli.readable, 'output.txt');\n   48  \n   49      /*for await(let chunk of cli.readable) {\n   50:       console.log(\n   51          'DATA: ' +\n   52            chunk\n   ..\n   62      let status;\n   63      kill(pid, 9);\n   64:     wait4(pid, st => ((status = st), console.log(`exited: status=${status}`)));\n   65      if(ex) exit(code);\n   66      else return status;\n\n~/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js:\n   17        'server.js',\n   18        ['localhost', 30000],\n   19:       null //      scriptArgs[0].replace(/.*\\//g, '').replace('.js', '.log')\n   20      );\n   21      sleep(1000);\n   ..\n   26      LLL_ALL,\n   27      (() => {\n   28:       let lf = open('test-client.log', 'w');\n   29        return (level, msg) => {\n   30          log(logLevels[level].padEnd(10) + msg);\n   ..\n   84  \n   85              signal(SIGINT, () => {\n   86:               console.log('SIGINT', terminate(0, false));\n   87                ws.close();\n   88                exit(0);\n   ..\n  125      if(pid > 0) {\n  126        kill(pid, 9);\n  127:       wait4(pid, st => ((status = st), console.log(`exited: status=${status}`)));\n  128      }\n  129      if(ex) exit(code);\n\n~/Projects/plot-cv/quickjs/qjs-net/tests/test-server-ws.js:\n   31  \n   32  function main(...args) {\n   33:   let pid = spawn('server.js', ['localhost', 30000], scriptArgs[0].replace(/.*\\//g, '').replace('.js', '.log'));\n   34    let status = [];\n   35  \n\n~/Projects/plot-cv/quickjs/qjs-net/tests/log.js:\n   20    };\n   21    return Object.keys(llObj).reduce((acc, n) => {\n   22:     let v = Math.log2(llObj[n]);\n   23      if(Math.floor(v) === v) acc[llObj[n]] = n.substring(4);\n   24      return acc;\n   ..\n   66      );\n   67    });\n   68:   return (...args) => cons.log(logName + ':', ...args);\n   69  })();\n   70  \n\n~/Projects/plot-cv/quickjs/qjs-net/tests/spawn.js:\n   21        if(log) {\n   22          fd = open(log, O_WRONLY | O_CREAT | O_TRUNC, 0o644);\n   23:         console.log('opened', log, fd);\n   24          o.stdin = o.stdout = o.stderr = fd;\n   25        }\n\n~/Projects/plot-cv/quickjs/qjs-net/js/debugger-client.js:\n   29  currentLine.id = 'currentLine';\n   30  \n   31: currentSource.subscribe(source => console.log('currentSource set to', source));\n   32: currentLine.subscribe(line => console.log('currentLine set to', line));\n   33  \n   34  const doRender = Util.memoize(RenderUI);\n   ..\n   36  window.addEventListener('load', e => {\n   37    url = Util.parseURL();\n   38:   console.log('URL', url);\n   39    let socketURL = Util.makeURL({\n   40      location: url.location + '/ws',\n   ..\n   44    (async () => {\n   45      globalThis.ws = await CreateSocket(socketURL);\n   46:     console.log(`Loaded`, { socketURL, ws });\n   47    })();\n   48  });\n   ..\n   56      KeyP: Pause\n   57    }[e.code];\n   58:   //console.log('keypress', e, handler);\n   59  \n   60    if(handler) handler();\n   ..\n   84      lines = [...tokens];\n   85    } catch(e) {\n   86:     console.log('Error tokenizing:', e.message);\n   87    }\n   88  \n   ..\n  100          }, []);\n  101  \n  102:       //console.log('text',text);\n  103        acc.push(h(SourceLine, { lineno: i + 1, text: text.join(''), active: activeLine == i + 1 }, text));\n  104  \n  ...\n  109  \n  110  const SourceFile = props => {\n  111:   console.log('props.file', currentSource());\n  112    const file = useTrkl(currentSource);\n  113:   console.log('file', file);\n  114    const filename = file ? path.relative(cwd, file, cwd) : null;\n  115    let text =\n  ...\n  117        !/^<.*>$/.test(file) &&\n  118        useFetch(filename, resp => {\n  119:         console.log('Fetch', resp.status, Util.makeURL({ location: '/' + filename }));\n  120          return resp.text();\n  121        })) ||\n  ...\n  158  function Initiate(command, address, connect = false, args) {\n  159    address ??= `${url.query.address ?? '127.0.0.1'}:${url.query.port ?? 9901}`;\n  160:   console.log('Initiate', { command, address, connect, args });\n  161    return ws.send(JSON.stringify({ command, connect, address, args }));\n  162  }\n  ...\n  193      line -= lexeme.split(/\\n/g).length - 1;\n  194  \n  195:     //console.log('tok', { id, lexeme, line });\n  196  \n  197      if(prev.line != line) {\n  ...\n  234    let ws = (globalThis.ws = new WebSocketClient());\n  235  \n  236:   console.log('ws', ws);\n  237    await ws.connect(endpoint);\n  238  \n  ...\n  243          data = JSON.parse(msg.data);\n  244        } catch(e) {\n  245:         console.log('WS ERROR parsing', msg.data);\n  246        }\n  247        globalThis.response = data;\n  248        if(data) {\n  249:         console.log('ws received ', data);\n  250          const { response, request_seq } = data;\n  251          if(response) {\n  ...\n  261              cwd = response.cwd;\n  262  \n  263:             console.log('command:', command);\n  264:             console.log('response:', response);\n  265  \n  266              if(response.args[0]) {\n  ...\n  275            if(command == 'start') {\n  276              cwd = response.cwd;\n  277:             console.log('start', response);\n  278              RenderUI(response.args[0]);\n  279              continue;\n  ...\n  283          if(responses[request_seq]) responses[request_seq](data);\n  284        } else {\n  285:         console.log('WS', data);\n  286        }\n  287        if(['end', 'error'].indexOf(data.type) >= 0) {\n  ...\n  308  async function UpdatePosition() {\n  309    const stack = (globalThis.stack = await StackTrace());\n  310:   console.log('stack', stack);\n  311  \n  312    const { filename, line, name } = stack[0];\n  ...\n  374  /*const Button = ({image}) => {\n  375  const ref = useClick(e => {\n  376:   console.log('click!!!!');\n  377  });\n  378   return  h('button', { ref, class: 'button' }, h('img', { src: image }));\n  ...\n  384  \n  385  function RenderUI() {\n  386:   console.log('RenderUI');\n  387    /* if(currentSource() != file) \n  388      currentSource(file);*/\n  ...\n  410    const { body } = document;\n  411    let r = render(component, body);\n  412:   console.log('rendered', r);\n  413  }\n  414  \n\n~/Projects/plot-cv/quickjs/qjs-net/js/rpc.js:\n    6    if(typeof log == 'string') {\n    7      let str = log;\n    8:     log = (...args) => console.log(str, ...args);\n    9    } else if(!log) {\n   10:     log = (...args) => console.log(...args);\n   11    }\n   12    return (value, ...args) => (log(value, ...args), value);\n   ..\n   65  DefaultConstructor.prototype.constructor = DefaultConstructor;*/\n   66  \n   67: /*export function EventLogger(instance = {}, callback = (name, event, thisObj) => console.log('EventLogger', { name, event, thisObj })) {\n   68    function WrapEvent(handler, name) {\n   69      return function(e) {\n   ..\n  226        exception: null,\n  227        log(...args) {\n  228:         // console.log(...args);\n  229        },\n  230        messages: { requests: {}, responses: {} }\n  ...\n  240      const status = socket.CLOSE_STATUS_PROTOCOL_ERR || 1000;\n  241  \n  242:     console.log(`ERROR: ${message}`);\n  243      this.exception = new Error(message);\n  244:     console.log('error(', status, message, ')');\n  245      this.close(status, message.slice(0, 128));\n  246      return this.exception;\n  ...\n  249    close(status, reason) {\n  250      const { socket } = this;\n  251:     console.log('close(', status, reason, ')');\n  252      socket.close(status, reason);\n  253      delete this.socket;\n  ...\n  260      if(!msg) return;\n  261      if(typeof msg == 'string' && msg.trim() == '') return;\n  262:     this.log('Connection.onmessage', { msg, codec, codecName });\n  263      let data;\n  264      try {\n  ...\n  269      }\n  270      let response = this.processMessage(data);\n  271:     this.log('Connection.onmessage', { data, response });\n  272      if(isThenable(response)) response.then(r => this.sendMessage(r));\n  273      else if(response !== undefined) this.sendMessage(response);\n  ...\n  275  \n  276    processMessage(data) {\n  277:     this.log('Connection', '.processMessage', { data });\n  278      throw new Error('Virtual method');\n  279    }\n  280  \n  281    onconnect(sock) {\n  282:     //console.log(\"Connection.onconnect\", sock, this);\n  283    }\n  284  \n  ...\n  286  \n  287    /*  onopen(arg) {\n  288:     this.log('Connection.onopen', { arg });\n  289    }*/\n  290  \n  291    onpong(data) {\n  292:     console.log('Connection.onpong:', data);\n  293    }\n  294  \n  295    onerror(error) {\n  296:     console.log('Connection.onerror', error ? ` (${error})` : '');\n  297      this.connected = false;\n  298      this.cleanup();\n  ...\n  300  \n  301    onclose(code, why) {\n  302:     console.log('Connection.onclose', code, why ? ` (${why})` : '');\n  303      this.connected = false;\n  304      this.cleanup();\n  ...\n  310  \n  311    sendMessage(obj) {\n  312:     this.log('Connection.sendMessage', obj);\n  313      if(typeof obj == 'object')\n  314        if(typeof obj.seq == 'number') {\n  ...\n  324    sendCommand(command, params = {}) {\n  325      let message = { command, ...params };\n  326:     this.log('Connection.sendCommand', { command, params, message });\n  327      if(typeof params == 'object' && params != null && typeof params.seq != 'number')\n  328        params.seq = this.seq = (this.seq | 0) + 1;\n  ...\n  405    return {\n  406      new({ class: name, args = [] }) {\n  407:       this.log('RPCServerEndpoint.new');\n  408        let obj, ret, id;\n  409        try {\n  ...\n  417      },\n  418      list() {\n  419:       this.log('RPCServerEndpoint.list');\n  420  \n  421        return { success: true, result: Object.keys({ ...classes, ...this.classes }) };\n  ...\n  496      const { commands } = this;\n  497      fn = commands[command];\n  498:     this.log('RPCServer.processMessage', { command, seq, params });\n  499      if(typeof seq == 'number') this.messages.requests[seq] = data;\n  500      if(typeof fn == 'function') return fn.call(this, data);\n  ...\n  530      this.connected = true;\n  531      RPCClient.set.add(this);\n  532:     //this.log('RPCClient.constructor', { socket, instance, log, codec, classes } /*, new Error().stack.replace(/Error\\n?/, '')*/);\n  533      //\n  534      //\n  535:     console.log('RPCClient.on', this.on);\n  536  \n  537      //this.on('error', e => console.error('RPCClient', e));\n  538  \n  539:     //this.on('response', r => console.log('RPCClient.onresponse', r));\n  540      let api;\n  541  \n  ...\n  550  \n  551    processMessage(response) {\n  552:     //this.log('RPCClient.processMessage', response, new Error().stack.replace(/Error\\n?/, ''));\n  553      const { success, error, result, seq } = response;\n  554  \n  555:     this.log('RPCClient.processMessage', { success, error, result, seq });\n  556  \n  557      if(success) this.emit('response', result);\n  ...\n  581    if(!new.target) return new RPCSocket(url, service, verbosity);\n  582  \n  583:   console.log('RPCSocket', { url, service, verbosity });\n  584  \n  585    // const DEBUG = DebugFlags();\n  ...\n  589          const { console } = globalThis;\n  590          console \n  591:           .log(\n  592              { msg },\n  593              console.config({\n  ...\n  601            );\n  602        }\n  603:     : console.log; */ (...args) => {\n  604      let tok = (args[0] || '').replace(/[^A-Za-z0-9_].*/g, '');\n  605  \n  606      /*if(DEBUG[tok]) console.debug(...args);\n  607:     else */ console.log(...args);\n  608    };\n  609  \n  ...\n  647      },\n  648      listen(new_ws = MakeWebSocket, os = globalThis.os) {\n  649:       this.log(`${service.name} listening on ${this.url}`);\n  650        if(os) callbacks.onFd = setHandlersFunction(os);\n  651        this.listening = true;\n  ...\n  657      },\n  658      /*async*/ connect(new_ws = MakeWebSocket, os = globalThis.os) {\n  659:       this.log(`${service.name} connecting to ${this.url}`);\n  660        if(os) callbacks.onFd = setHandlersFunction(os);\n  661        this.ws = new_ws(this.url, callbacks, false);\n  662:       //console.log('connect()', this.ws);\n  663        return this;\n  664      },\n  665      get connected() {\n  666        const ws = this.ws;\n  667:       console.log('ws', ws);\n  668        if(ws) return typeof ws.readyState == 'number' ? ws.readyState == ws.OPEN : false;\n  669        const { fdlist } = instance;\n  670:       console.log('fdlist', fdlist);\n  671  \n  672        return fdlist[Object.keys(fdlist)[0]].connected;\n  ...\n  839  export function setHandlersFunction(os) {\n  840    return function(fd, readable, writable) {\n  841:     //console.log('\\x1b[38;5;82monFd\\x1b[0m(', fd, ',', readable, ',', writable, ')');\n  842      os.setReadHandler(fd, readable);\n  843      os.setWriteHandler(fd, writable);\n  ...\n  847  /*export function setHandlers(os, handlers) {\n  848    handlers.onFd = function(fd, readable, writable) {\n  849:     //console.log('\\x1b[38;5;82monFd\\x1b[0m(', fd, ',', readable, ',', writable, ')');\n  850      os.setReadHandler(fd, readable);\n  851      os.setWriteHandler(fd, writable);\n  ...\n  893        return acc;\n  894      }, []);\n  895:     console.log('ListCommand', map);\n  896      return respond(true, map);\n  897    });\n  ...\n  925      ret[key] = MakeCommandFunction(key, o => o.connection, thisObj);\n  926    }\n  927:   // console.log(`ForwardMethods`, { e, keys, ret });\n  928    return ret;\n  929  }\n  ...\n  931  function ForwardObject(e, thisObj) {\n  932    let obj = ForwardMethods(e, {}, thisObj);\n  933:   console.log(`ForwardObject`, { e, obj, thisObj });\n  934    return obj;\n  935  }\n  ...\n  940    if(typeof getConnection != 'function')\n  941      getConnection = obj => (typeof obj == 'object' && obj != null && 'connection' in obj && obj.connection) || obj;\n  942:   //console.log(\"MakeCommandFunction\",{cmd,getConnection,thisObj});\n  943    return function(params = {}) {\n  944      thisObj = thisObj || this;\n  ...\n  958      let r = await client.waitFor('response');\n  959      if(t[cmd]) r = t[cmd](r);\n  960:     console.log(`RESPONSE to '${cmd}'`, r);\n  961      return r;\n  962    };\n\n~/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js:\n    6  \n    7  setLog(/*LLL_ALL |*/ (LLL_NOTICE - 1) | LLL_USER, (level, message) =>\n    8:   console.log(logLevels[level].padEnd(10), message)\n    9  );\n   10  \n   ..\n   19        '/': ['/', '.', 'index.html'],\n   20        '/404.html': function* (req, res) {\n   21:         console.log('/404.html', { req, res });\n   22          yield '<html><head><meta charset=utf-8 http-equiv=\"Content-Language\" content=\"en\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"/error.css\"/></head><body><h1>403</h1></body></html>';\n   23        },\n   24        *generator(req, res) {\n   25:         console.log('/generator', { req, res });\n   26          yield 'This';\n   27          yield ' ';\n   ..\n   37      },\n   38      onConnect(ws, req) {\n   39:       console.log('onConnect', { ws, req });\n   40      },\n   41      onClose(ws, status, reason) {\n   42:       console.log('onClose', { ws, status, reason });\n   43        ws.close(status);\n   44      },\n   45      onError(ws, error) {\n   46:       console.log('onError', { ws, error });\n   47      },\n   48      onHttp(ws, req, resp) {\n   49:       console.log('onHttp', { req, resp });\n   50        Object.assign(globalThis, { req, resp });\n   51      },\n   52      onMessage(ws, msg) {\n   53:       console.log('onMessage', ws.fd, msg);\n   54        ws.send('ECHO: ' + msg);\n   55      },\n   56      onFd(fd, rd, wr) {\n   57:       console.log('onFd', fd, rd, wr);\n   58        setReadHandler(fd, rd);\n   59        setWriteHandler(fd, wr);\n\n168 matches across 18 files\n\n\nSearching 102 files for \"\\.log\"\" (regex, case sensitive)\n\n0 matches\n\nSearching 102 files for \"\\.log'\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-net/tests/test-client-ws.js:\n   14  \n   15    if(args.length == 0) {\n   16:     pid = spawn('server.js', ['localhost', 30000], scriptArgs[0].replace(/.*\\//g, '').replace('.js', '.log'));\n   17      sleep(100);\n   18      args.push('wss://localhost:30000/ws');\n\n~/Projects/plot-cv/quickjs/qjs-net/tests/test-fetch.js:\n   73      -1,\n   74      (() => {\n   75:       let lf = open('test-fetch.log', 'w');\n   76        return (level, msg) => {\n   77          //  log(logLevels[level].padEnd(10) + msg);\n\n~/Projects/plot-cv/quickjs/qjs-net/tests/test-server-http.js:\n   41     import('console').then(({Console}) => globalThis.console = new Console({ inspectOptions: { compact: 2 } }));\n   42  \n   43:   let pid = spawn('server.js', ['localhost', 30000], scriptArgs[0].replace(/.*\\//g, '').replace('.js', '.log'));\n   44    let status = [];\n   45  \n\n~/Projects/plot-cv/quickjs/qjs-net/tests/test-client-http.js:\n   14  \n   15    if(args.length == 0) {\n   16:     pid = spawn('server.js', ['localhost', 30000], null /*scriptArgs[0].replace(/.*\\//g, '').replace('.js', '.log')*/);\n   17      sleep(1000);\n   18      args.push('https://localhost:30000/src/minnet.h');\n\n~/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js:\n   17        'server.js',\n   18        ['localhost', 30000],\n   19:       null //      scriptArgs[0].replace(/.*\\//g, '').replace('.js', '.log')\n   20      );\n   21      sleep(1000);\n   ..\n   26      LLL_ALL,\n   27      (() => {\n   28:       let lf = open('test-client.log', 'w');\n   29        return (level, msg) => {\n   30          log(logLevels[level].padEnd(10) + msg);\n\n~/Projects/plot-cv/quickjs/qjs-net/tests/test-server-ws.js:\n   31  \n   32  function main(...args) {\n   33:   let pid = spawn('server.js', ['localhost', 30000], scriptArgs[0].replace(/.*\\//g, '').replace('.js', '.log'));\n   34    let status = [];\n   35  \n\n7 matches across 6 files\n\n\nSearching 102 files for \"lws_create_context\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-net/src/minnet-client.c:\n  244        //  client_certificate(&client->context, options);\n  245  \n  246:       if(!(context->lws = lws_create_context(&context->info))) {\n  247          lwsl_err(\"minnet-client: libwebsockets init failed\\n\");\n  248          return JS_ThrowInternalError(ctx, \"minnet-client: libwebsockets init failed\");\n\n~/Projects/plot-cv/quickjs/qjs-net/src/minnet-server.c:\n   98  static BOOL\n   99  server_init(MinnetServer* server) {\n  100:   if(!(server->context.lws = lws_create_context(&server->context.info))) {\n  101      lwsl_err(\"libwebsockets init failed\\n\");\n  102      return FALSE;\n\n2 matches across 2 files\n\n\nSearching 777 files for \"lws_create_context\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-client/main.c:\n  198  \tinfo.register_notifier_list\t= na;\n  199  \n  200: \tcontext = lws_create_context(&info);\n  201  \tif (!context) {\n  202  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/test-sshd.c:\n  751  \t\t       LWS_SERVER_OPTION_DO_SSL_GLOBAL_INIT;\n  752  \n  753: \tcontext = lws_create_context(&info);\n  754  \tif (!context) {\n  755  \t\tlwsl_err(\"Failed to create context\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/test-server.c:\n  638  \t\tinfo.options |= LWS_SERVER_OPTION_REDIRECT_HTTP_TO_HTTPS;\n  639  \n  640: \tcontext = lws_create_context(&info);\n  641  \tif (context == NULL) {\n  642  \t\tlwsl_err(\"libwebsocket init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/test-client.c:\n  783  \t\tlwsl_notice(\" Requiring peer cert hostname matches\\n\");\n  784  #endif\n  785: \tcontext = lws_create_context(&info);\n  786  \tif (context == NULL) {\n  787  \t\tfprintf(stderr, \"Creating libwebsocket context failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-context-vhost.h:\n  931  \n  932  /**\n  933:  * lws_create_context() - Create the websocket handler\n  934   * \\param info:\tpointer to struct with parameters\n  935   *\n  ...\n  965   */\n  966  LWS_VISIBLE LWS_EXTERN struct lws_context *\n  967: lws_create_context(const struct lws_context_creation_info *info);\n  968  \n  969  \n  ...\n 1053  /**\n 1054   * lws_create_vhost() - Create a vhost (virtual server context)\n 1055:  * \\param context:\tpointer to result of lws_create_context()\n 1056   * \\param info:\t\tpointer to struct with parameters\n 1057   *\n ....\n 1105  /**\n 1106   * lwsws_get_config_vhosts() - Create vhosts from a JSON server config file\n 1107:  * \\param context:\tpointer to result of lws_create_context()\n 1108   * \\param info:\t\tpointer to struct with parameters\n 1109   * \\param d:\t\tfilepath of the config file\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server-threadpool/minimal-ws-server-threadpool.c:\n  118  \t\tLWS_SERVER_OPTION_HTTP_HEADERS_SECURITY_BEST_PRACTICES_ENFORCE;\n  119  \n  120: \tcontext = lws_create_context(&info);\n  121  \tif (!context) {\n  122  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server-pmd/minimal-ws-server-pmd.c:\n   94  \t\tLWS_SERVER_OPTION_HTTP_HEADERS_SECURITY_BEST_PRACTICES_ENFORCE;\n   95  \n   96: \tcontext = lws_create_context(&info);\n   97  \tif (!context) {\n   98  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server-threads/minimal-ws-server.c:\n  118  \t\tLWS_SERVER_OPTION_HTTP_HEADERS_SECURITY_BEST_PRACTICES_ENFORCE;\n  119  \n  120: \tcontext = lws_create_context(&info);\n  121  \tif (!context) {\n  122  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server-threads-foreign-libuv-smp/minimal-ws-server.c:\n  170  \t\tLWS_SERVER_OPTION_HTTP_HEADERS_SECURITY_BEST_PRACTICES_ENFORCE;\n  171  \n  172: \tcontext = lws_create_context(&info);\n  173  \tif (!context) {\n  174  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server/minimal-ws-server.c:\n  112  \t\tinfo.retry_and_idle_policy = &retry;\n  113  \n  114: \tcontext = lws_create_context(&info);\n  115  \tif (!context) {\n  116  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-raw-proxy/minimal-ws-raw-proxy.c:\n  445  \t\tinfo.retry_and_idle_policy = &retry;\n  446  \n  447: \tcontext = lws_create_context(&info);\n  448  \tif (!context) {\n  449  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server-timer/minimal-ws-server.c:\n  130  \t\tinfo.retry_and_idle_policy = &retry;\n  131  \n  132: \tcontext = lws_create_context(&info);\n  133  \tif (!context) {\n  134  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server-ring/minimal-ws-server-ring.c:\n   83  \t\tLWS_SERVER_OPTION_HTTP_HEADERS_SECURITY_BEST_PRACTICES_ENFORCE;\n   84  \n   85: \tcontext = lws_create_context(&info);\n   86  \tif (!context) {\n   87  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server-pmd-corner/minimal-ws-server-pmd-corner.c:\n   94  \t\tLWS_SERVER_OPTION_HTTP_HEADERS_SECURITY_BEST_PRACTICES_ENFORCE;\n   95  \n   96: \tcontext = lws_create_context(&info);\n   97  \tif (!context) {\n   98  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server-threads-smp/minimal-ws-server.c:\n  171  \t\tLWS_SERVER_OPTION_HTTP_HEADERS_SECURITY_BEST_PRACTICES_ENFORCE;\n  172  \n  173: \tcontext = lws_create_context(&info);\n  174  \tif (!context) {\n  175  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server-echo/minimal-ws-server-echo.c:\n  102  \t\tLWS_SERVER_OPTION_HTTP_HEADERS_SECURITY_BEST_PRACTICES_ENFORCE;\n  103  \n  104: \tcontext = lws_create_context(&info);\n  105  \tif (!context) {\n  106  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-server-pmd-bulk/minimal-ws-server-pmd-bulk.c:\n  129  \tinfo.pt_serv_buf_size = 32 * 1024;\n  130  \n  131: \tcontext = lws_create_context(&info);\n  132  \tif (!context) {\n  133  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-server/minimal-ws-broker/minimal-ws-broker.c:\n   83  \t\tLWS_SERVER_OPTION_HTTP_HEADERS_SECURITY_BEST_PRACTICES_ENFORCE;\n   84  \n   85: \tcontext = lws_create_context(&info);\n   86  \tif (!context) {\n   87  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/api-tests/api-test-gencrypto/main.c:\n   34  \tinfo.options = LWS_SERVER_OPTION_DO_SSL_GLOBAL_INIT;\n   35  \n   36: \tcontext = lws_create_context(&info);\n   37  \tif (!context) {\n   38  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/api-tests/api-test-lws_tokenize/main.c:\n  380  \t}\n  381  #endif\n  382: \tcx = lws_create_context(&info);\n  383  \n  384  \t/* lws_strexp */\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/api-tests/api-test-jose/main.c:\n   36  \tinfo.options = 0;\n   37  \n   38: \tcontext = lws_create_context(&info);\n   39  \tif (!context) {\n   40  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/api-tests/api-test-secure-streams/main.c:\n  369  \t/* create the context */\n  370  \n  371: \tcontext = lws_create_context(&info);\n  372  \tif (!context) {\n  373  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/api-tests/api-test-lws_cache/main.c:\n  486  \tlwsl_user(\"LWS API selftest: lws_cache\\n\");\n  487  \n  488: \tcx = lws_create_context(&info);\n  489  \tif (!cx) {\n  490  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/api-tests/api-test-cose/main.c:\n   34  \tinfo.options = 0;\n   35  \n   36: \tcontext = lws_create_context(&info);\n   37  \tif (!context) {\n   38  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/api-tests/api-test-lws_sequencer/main.c:\n  355  #endif\n  356  \n  357: \tcontext = lws_create_context(&info);\n  358  \tif (!context) {\n  359  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/api-tests/api-test-lws_struct_sqlite/main.c:\n   91  \tinfo.port = CONTEXT_PORT_NO_LISTEN;\n   92  #endif\n   93: \tcontext = lws_create_context(&info);\n   94  \tif (!context) {\n   95  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/api-tests/api-test-smtp_client/main.c:\n  202  \tinfo.options = LWS_SERVER_OPTION_EXPLICIT_VHOSTS;\n  203  \n  204: \tcontext = lws_create_context(&info);\n  205  \tif (!context) {\n  206  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/api-tests/api-test-async-dns/main.c:\n  278  \tinfo.options = LWS_SERVER_OPTION_DO_SSL_GLOBAL_INIT;\n  279  \n  280: \tcontext = lws_create_context(&info);\n  281  \tif (!context) {\n  282  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/api-tests/api-test-dhcpc/main.c:\n   72  #endif\n   73  \n   74: \tcontext = lws_create_context(&info);\n   75  \tif (!context) {\n   76  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/api-tests/api-test-lws_smd/main.c:\n  213  \tinfo.register_notifier_list = na;\n  214  \n  215: \tcontext = lws_create_context(&info);\n  216  \tif (!context) {\n  217  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/dbus-client/minimal-dbus-ws-proxy-testclient/minimal-dbus-ws-proxy-testclient.c:\n  389  \tmemset(&info, 0, sizeof info); /* otherwise uninitialized garbage */\n  390  \tinfo.options = LWS_SERVER_OPTION_EXPLICIT_VHOSTS;\n  391: \tcontext = lws_create_context(&info);\n  392  \tif (!context) {\n  393  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/dbus-client/minimal-dbus-client/minimal-dbus-client.c:\n  240  \tmemset(&info, 0, sizeof info); /* otherwise uninitialized garbage */\n  241  \tinfo.options = LWS_SERVER_OPTION_EXPLICIT_VHOSTS;\n  242: \tcontext = lws_create_context(&info);\n  243  \tif (!context) {\n  244  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client/minimal-http-client.c:\n  402  \t}\n  403  #endif\n  404: \tcontext = lws_create_context(&info);\n  405  \tif (!context) {\n  406  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-jit-trust/minimal-http-client.c:\n  439  \tinfo.max_http_header_data = 8192;\n  440  \n  441: \tcontext = lws_create_context(&info);\n  442  \tif (!context) {\n  443  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-certinfo/minimal-http-client-certinfo.c:\n  211  #endif\n  212  \n  213: \tcontext = lws_create_context(&info);\n  214  \tif (!context) {\n  215  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-custom-headers/minimal-http-client-custom-headers.c:\n  185  #endif\n  186  \n  187: \tcontext = lws_create_context(&info);\n  188  \tif (!context) {\n  189  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-captive-portal/minimal-http-client-captive-portal.c:\n  304  \tinfo.register_notifier_list = app_notifier_list;\n  305  \n  306: \tcontext = lws_create_context(&info);\n  307  \tif (!context) {\n  308  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-multi/minimal-http-client-multi.c:\n  593  \t\tinfo.simultaneous_ssl_handshake_restriction = atoi(p);\n  594  \n  595: \tcontext = lws_create_context(&info);\n  596  \tif (!context) {\n  597  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-attach/minimal-http-client-attach.c:\n  189  \tinfo.protocols = protocols;\n  190  \n  191: \tcontext = lws_create_context(&info);\n  192  \tif (!context) {\n  193  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-h2-rxflow/minimal-http-client.c:\n  289  \t}\n  290  #endif\n  291: \tcontext = lws_create_context(&info);\n  292  \tif (!context) {\n  293  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-post/minimal-http-client-post.c:\n  223  #endif\n  224  \n  225: \tcontext = lws_create_context(&info);\n  226  \tif (!context) {\n  227  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-client/minimal-http-client-hugeurl/minimal-http-client-hugeurl.c:\n  181  #endif\n  182  \n  183: \tcontext = lws_create_context(&info);\n  184  \tif (!context) {\n  185  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/abstract/protocols/smtp-client/main.c:\n   75  \tinfo.options = LWS_SERVER_OPTION_EXPLICIT_VHOSTS;\n   76  \n   77: \tcontext = lws_create_context(&info);\n   78  \tif (!context) {\n   79  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-tx/minimal-ws-client.c:\n  330  \tinfo.fd_limit_per_thread = 1 + 1 + 1;\n  331  \n  332: \tcontext = lws_create_context(&info);\n  333  \tif (!context) {\n  334  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-spam-tx-rx/minimal-ws-client.c:\n  209  \tinfo.fd_limit_per_thread = (unsigned int)(1 + nclients + 1);\n  210  \n  211: \tcontext = lws_create_context(&info);\n  212  \tif (!context) {\n  213  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-pmd-bulk/minimal-ws-client-pmd-bulk.c:\n  116  \tinfo.fd_limit_per_thread = 1 + 1 + 1;\n  117  \n  118: \tcontext = lws_create_context(&info);\n  119  \tif (!context) {\n  120  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-echo/minimal-ws-client-echo.c:\n  155  \t\tsignal(SIGINT, sigint_handler);\n  156  \n  157: \tcontext = lws_create_context(&info);\n  158  \tif (!context) {\n  159  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-rx/minimal-ws-client.c:\n  118  \tinfo.fd_limit_per_thread = 1 + 1 + 1;\n  119  \n  120: \tcontext = lws_create_context(&info);\n  121  \tif (!context) {\n  122  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client/minimal-ws-client.c:\n  198  \tinfo.fd_limit_per_thread = 1 + 1 + 1;\n  199  \n  200: \tcontext = lws_create_context(&info);\n  201  \tif (!context) {\n  202  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-ping/minimal-ws-client-ping.c:\n  145  \tinfo.fd_limit_per_thread = 1 + 1 + 1;\n  146  \n  147: \tcontext = lws_create_context(&info);\n  148  \tif (!context) {\n  149  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-spam/minimal-ws-client-spam.c:\n  263  \tinfo.fd_limit_per_thread = (unsigned int)(1 + concurrent + 1);\n  264  \n  265: \tcontext = lws_create_context(&info);\n  266  \tif (!context) {\n  267  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-binance/main.c:\n  363  #endif\n  364  \n  365: \tcontext = lws_create_context(&info);\n  366  \tif (!context) {\n  367  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/gtk/minimal-gtk/main.c:\n  166  #endif\n  167  \n  168: \tcontext = lws_create_context(&info);\n  169  \tif (!context) {\n  170  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/crypto/minimal-crypto-jwk/main.c:\n  110  \tinfo.options = 0;\n  111  \n  112: \tcontext = lws_create_context(&info);\n  113  \tif (!context) {\n  114  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/crypto/minimal-crypto-cose-sign/main.c:\n  123  #endif\n  124  \n  125: \tcontext = lws_create_context(&info);\n  126  \tif (!context) {\n  127  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/crypto/minimal-crypto-jws/main.c:\n   41  \tinfo.options = 0;\n   42  \n   43: \tcontext = lws_create_context(&info);\n   44  \tif (!context) {\n   45  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/crypto/minimal-crypto-x509/main.c:\n   78  \tinfo.options = 0;\n   79  \n   80: \tcontext = lws_create_context(&info);\n   81  \tif (!context) {\n   82  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/crypto/minimal-crypto-cose-key/main.c:\n  134  #endif\n  135  \n  136: \tcontext = lws_create_context(&info);\n  137  \tif (!context) {\n  138  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/crypto/minimal-crypto-jwe/main.c:\n  103  \tinfo.options = 0;\n  104  \n  105: \tcontext = lws_create_context(&info);\n  106  \tif (!context) {\n  107  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-client-tx/minimal-secure-streams-client-tx.c:\n  182  \t}\n  183  \n  184: \tcontext = lws_create_context(&info);\n  185  \tif (!context) {\n  186  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-smd/multi.c:\n  389  \t/* create the context */\n  390  \n  391: \tcontext = lws_create_context(&info);\n  392  \tif (!context) {\n  393  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-smd/minimal-secure-streams-smd.c:\n  310  \t/* create the context */\n  311  \n  312: \tcontext = lws_create_context(&info);\n  313  \tif (!context) {\n  314  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-staticpolicy/minimal-secure-streams.c:\n  242  \t/* create the context */\n  243  \n  244: \tcontext = lws_create_context(&info);\n  245  \tif (!context) {\n  246  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-threads/minimal-secure-streams-threads.c:\n  259  \t/* create the context */\n  260  \n  261: \tcontext = lws_create_context(&info);\n  262  \tif (!context) {\n  263  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams/minimal-secure-streams.c:\n  622  \t/* create the context */\n  623  \n  624: \tcontext = lws_create_context(&info);\n  625  \tif (!context) {\n  626  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-sigv4/ss-s3-main.c:\n  271  \t/* create the context */\n  272  \n  273: \tcontext = lws_create_context(&info);\n  274  \tif (!context) {\n  275  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-stress/minimal-secure-streams.c:\n  682  \t/* create the context */\n  683  \n  684: \tcontext = lws_create_context(&info);\n  685  \tif (!context) {\n  686  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-hugeurl/minimal-secure-streams.c:\n  422  \t/* create the context */\n  423  \n  424: \tcontext = lws_create_context(&info);\n  425  \tif (!context) {\n  426  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-blob/minimal-secure-streams.c:\n  582  \t/* create the context */\n  583  \n  584: \tcontext = lws_create_context(&info);\n  585  \tif (!context) {\n  586  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-testsfail/minimal-secure-streams-testsfail.c:\n  871  \t/* create the context */\n  872  \n  873: \tcontext = lws_create_context(&info);\n  874  \tif (!context) {\n  875  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-post/minimal-secure-streams-post.c:\n  525  \t/* create the context */\n  526  \n  527: \tcontext = lws_create_context(&info);\n  528  \tif (!context) {\n  529  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-proxy/main.c:\n  293  #endif\n  294  \n  295: \tcontext = lws_create_context(&info);\n  296  \tif (!context) {\n  297  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-avs/main-client.c:\n  106  \tinfo.register_notifier_list = app_notifier_list;\n  107  \n  108: \tcontext = lws_create_context(&info);\n  109  \tif (!context) {\n  110  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-avs/main.c:\n  349  \tputs(default_ss_policy);\n  350  \n  351: \tcontext = lws_create_context(&info);\n  352  \tif (!context) {\n  353  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-metadata/minimal-secure-streams.c:\n  324  \t/* create the context */\n  325  \n  326: \tcontext = lws_create_context(&info);\n  327  \tif (!context) {\n  328  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-seq/minimal-secure-streams.c:\n  375  \tinfo.port = CONTEXT_PORT_NO_LISTEN;\n  376  \n  377: \tcontext = lws_create_context(&info);\n  378  \tif (!context) {\n  379  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-perf/minimal-secure-streams.c:\n  505  \t/* create the context */\n  506  \n  507: \tcontext = lws_create_context(&info);\n  508  \tif (!context) {\n  509  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-alexa/main.c:\n  395  \tinfo.register_notifier_list = app_notifier_list;\n  396  \n  397: \tcontext = lws_create_context(&info);\n  398  \tif (!context) {\n  399  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-binance/main.c:\n  245  \tinfo.pss_policies_json = \"policy.json\"; /* literal JSON, or path */\n  246  \n  247: \tcx = lws_create_context(&info);\n  248  \tif (!cx) {\n  249  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-policy2c/minimal-secure-streams.c:\n   97  \t/* create the context */\n   98  \n   99: \tcontext = lws_create_context(&info);\n  100  \tif (!context) {\n  101  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-server-raw/main.c:\n   85  \tinfo.early_smd_class_filter\t= LWSSMDCL_SYSTEM_STATE;\n   86  \n   87: \tcontext = lws_create_context(&info);\n   88  \tif (!context) {\n   89  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/secure-streams/minimal-secure-streams-server/main.c:\n  287  \tinfo.early_smd_class_filter\t= LWSSMDCL_SYSTEM_STATE;\n  288  \n  289: \tcontext = lws_create_context(&info);\n  290  \tif (!context) {\n  291  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-audio/audio.c:\n  197  \tinfo.protocols = protocols;\n  198  \n  199: \tcontext = lws_create_context(&info);\n  200  \tif (!context) {\n  201  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-netcat/minimal-raw-netcat.c:\n  159  \tinfo.options = LWS_SERVER_OPTION_EXPLICIT_VHOSTS;\n  160  \n  161: \tcontext = lws_create_context(&info);\n  162  \tif (!context) {\n  163  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-fallback-http-server/minimal-raw-fallback-http-server.c:\n  135  #endif\n  136  \n  137: \tcontext = lws_create_context(&info);\n  138  \tif (!context) {\n  139  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-adopt-udp/minimal-raw-adopt-udp.c:\n  164  \tinfo.options = LWS_SERVER_OPTION_EXPLICIT_VHOSTS;\n  165  \n  166: \tcontext = lws_create_context(&info);\n  167  \tif (!context) {\n  168  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-vhost/minimal-raw-vhost.c:\n  146  #endif\n  147  \n  148: \tcontext = lws_create_context(&info);\n  149  \tif (!context) {\n  150  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-proxy/minimal-raw-proxy.c:\n   77  \tinfo.listen_accept_protocol = \"raw-proxy\";\n   78  \n   79: \tcontext = lws_create_context(&info);\n   80  \tif (!context) {\n   81  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-serial/minimal-raw-file.c:\n  221  \tlws_strncpy(filepath, argv[1], sizeof(filepath));\n  222  \n  223: \tcontext = lws_create_context(&info);\n  224  \tif (!context) {\n  225  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-adopt-tcp/minimal-raw-adopt-tcp.c:\n  115  \tinfo.options = LWS_SERVER_OPTION_EXPLICIT_VHOSTS;\n  116  \n  117: \tcontext = lws_create_context(&info);\n  118  \tif (!context) {\n  119  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-proxy-fallback/minimal-raw-proxy-fallback.c:\n  122  #endif\n  123  \n  124: \tcontext = lws_create_context(&info);\n  125  \tif (!context) {\n  126  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/raw/minimal-raw-file/minimal-raw-file.c:\n  146  \tlws_strncpy(filepath, argv[1], sizeof(filepath));\n  147  \n  148: \tcontext = lws_create_context(&info);\n  149  \tif (!context) {\n  150  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-tls-80/minimal-http-server-tls-80.c:\n   99  \t\tLWS_SERVER_OPTION_HTTP_HEADERS_SECURITY_BEST_PRACTICES_ENFORCE;\n  100  \n  101: \tcontext = lws_create_context(&info);\n  102  \tif (!context) {\n  103  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-fulltext-search/minimal-http-server.c:\n  112  \tpvo_idx.value = index_filepath;\n  113  \n  114: \tcontext = lws_create_context(&info);\n  115  \tif (!context) {\n  116  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-form-post/minimal-http-server-form-post.c:\n  209  \t}\n  210  \n  211: \tcontext = lws_create_context(&info);\n  212  \tif (!context) {\n  213  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-dynamic/minimal-http-server-dynamic.c:\n  301  \t\tinfo.max_http_header_pool = 1;\n  302  \n  303: \tcontext = lws_create_context(&info);\n  304  \tif (!context) {\n  305  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-mimetypes/minimal-http-server-mimetypes.c:\n   80  \t\tLWS_SERVER_OPTION_HTTP_HEADERS_SECURITY_BEST_PRACTICES_ENFORCE;\n   81  \n   82: \tcontext = lws_create_context(&info);\n   83  \tif (!context) {\n   84  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-eventlib/minimal-http-server-eventlib.c:\n  109  \t\t\t\t\tsignal(SIGINT, sigint_handler);\n  110  \n  111: \tcontext = lws_create_context(&info);\n  112  \tif (!context) {\n  113  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-smp/minimal-http-server-smp.c:\n  115  #endif\n  116  \n  117: \tcontext = lws_create_context(&info);\n  118  \tif (!context) {\n  119  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-sse-ring/minimal-http-server-sse-ring.c:\n  389  \t\tLWS_SERVER_OPTION_HTTP_HEADERS_SECURITY_BEST_PRACTICES_ENFORCE;\n  390  \n  391: \tcontext = lws_create_context(&info);\n  392  \tif (!context) {\n  393  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-eventlib-custom/minimal-http-server.c:\n  439  \tinfo.protocols = protocols;\n  440  \n  441: \tcontext = lws_create_context(&info);\n  442  \tif (!context) {\n  443  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-form-post-file/minimal-http-server-form-post-file.c:\n  248  \t\tLWS_SERVER_OPTION_HTTP_HEADERS_SECURITY_BEST_PRACTICES_ENFORCE;\n  249  \n  250: \tcontext = lws_create_context(&info);\n  251  \tif (!context) {\n  252  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-proxy/minimal-http-server-proxy.c:\n   70  \tinfo.ssl_private_key_filepath = \"localhost-100y.key\";\n   71  \n   72: \tcontext = lws_create_context(&info);\n   73  \tif (!context) {\n   74  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-eventlib-smp/minimal-http-server-eventlib-smp.c:\n  145  \t\t\t\t\tsignal(SIGINT, sigint_handler);\n  146  \n  147: \tcontext = lws_create_context(&info);\n  148  \tif (!context) {\n  149  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-multivhost/minimal-http-server.c:\n  116  \t * the context and no longer creates a default vhost\n  117  \t */\n  118: \tcontext = lws_create_context(&info);\n  119  \tif (!context) {\n  120  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-custom-headers/minimal-http-server-custom-headers.c:\n  181  \t\tinfo.max_http_header_pool = 1;\n  182  \n  183: \tcontext = lws_create_context(&info);\n  184  \tif (!context) {\n  185  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-eventlib-foreign/minimal-http-server-eventlib-foreign.c:\n  192  \t\tinfo.foreign_loops = foreign_loops;\n  193  \n  194: \t\tcontext = lws_create_context(&info);\n  195  \t\tif (!context) {\n  196  \t\t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-form-get/minimal-http-server-form-get.c:\n  133  \t\tLWS_SERVER_OPTION_HTTP_HEADERS_SECURITY_BEST_PRACTICES_ENFORCE;\n  134  \n  135: \tcontext = lws_create_context(&info);\n  136  \tif (!context) {\n  137  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-form-post-lwsac/minimal-http-server-form-post.c:\n  205  \t}\n  206  \n  207: \tcontext = lws_create_context(&info);\n  208  \tif (!context) {\n  209  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-tls/minimal-http-server-tls.c:\n  136  \t\tinfo.options |= LWS_SERVER_OPTION_VHOST_UPG_STRICT_HOST_CHECK;\n  137  \n  138: \tcontext = lws_create_context(&info);\n  139  \tif (!context) {\n  140  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-sse/minimal-http-server-sse.c:\n  219  #endif\n  220  \n  221: \tcontext = lws_create_context(&info);\n  222  \tif (!context) {\n  223  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-deaddrop/minimal-http-server-deaddrop.c:\n  159  #endif\n  160  \n  161: \tcontext = lws_create_context(&info);\n  162  \tif (!context) {\n  163  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-cgi/minimal-http-server.c:\n   91  #endif\n   92  \n   93: \tcontext = lws_create_context(&info);\n   94  \tif (!context) {\n   95  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-h2-long-poll/minimal-http-server.c:\n  144  \t\tinfo.retry_and_idle_policy = &retry;\n  145  \n  146: \tcontext = lws_create_context(&info);\n  147  \tif (!context) {\n  148  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-eventlib-demos/minimal-http-server-eventlib-demos.c:\n  189  \t\t\t\t\tsignal(SIGINT, sigint_handler);\n  190  \n  191: \tcontext = lws_create_context(&info);\n  192  \tif (!context) {\n  193  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-basicauth/minimal-http-server-basicauth.c:\n   99  \t\tLWS_SERVER_OPTION_HTTP_HEADERS_SECURITY_BEST_PRACTICES_ENFORCE;\n  100  \n  101: \tcontext = lws_create_context(&info);\n  102  \tif (!context) {\n  103  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server/minimal-http-server.c:\n   76  \t\tinfo.options |= LWS_SERVER_OPTION_H2_PRIOR_KNOWLEDGE;\n   77  \n   78: \tcontext = lws_create_context(&info);\n   79  \tif (!context) {\n   80  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-tls-mem/minimal-http-server-tls-mem.c:\n  420  \t\tinfo.options |= LWS_SERVER_OPTION_VHOST_UPG_STRICT_HOST_CHECK;\n  421  \n  422: \tcontext = lws_create_context(&info);\n  423  \tif (!context) {\n  424  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/dbus-server/minimal-dbus-server/main.c:\n  477  \tmemset(&info, 0, sizeof info); /* otherwise uninitialized garbage */\n  478  \tinfo.options = LWS_SERVER_OPTION_EXPLICIT_VHOSTS;\n  479: \tcontext = lws_create_context(&info);\n  480  \tif (!context) {\n  481  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/dbus-server/minimal-dbus-ws-proxy/main.c:\n   83  \tinfo.pvo = &pvo;\n   84  \n   85: \tcontext = lws_create_context(&info);\n   86  \tif (!context) {\n   87  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/client-server/minimal-ws-proxy/minimal-ws-proxy.c:\n   86  \tinfo.protocols = protocols;\n   87  \n   88: \tcontext = lws_create_context(&info);\n   89  \tif (!context) {\n   90  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/mqtt-client/minimal-mqtt-client/minimal-mqtt-client.c:\n  340  #endif\n  341  \n  342: \tcontext = lws_create_context(&info);\n  343  \tif (!context) {\n  344  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/mqtt-client/minimal-mqtt-client-multi/minimal-mqtt-client-multi.c:\n  430  #endif\n  431  \n  432: \tcontext = lws_create_context(&info);\n  433  \tif (!context) {\n  434  \t\tlwsl_err(\"lws init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lwsws/main.c:\n  170  \tinfo.pcontext = &context;\n  171  \n  172: \tcontext = lws_create_context(&info);\n  173  \tif (context == NULL) {\n  174  \t\tlwsl_err(\"libwebsocket init failed\\n\");\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core/context.c:\n  371  \n  372  struct lws_context *\n  373: lws_create_context(const struct lws_context_creation_info *info)\n  374  {\n  375  \tstruct lws_context *context = NULL;\n\n~/Projects/plot-cv/quickjs/qjs-net/src/minnet-client.c:\n  244        //  client_certificate(&client->context, options);\n  245  \n  246:       if(!(context->lws = lws_create_context(&context->info))) {\n  247          lwsl_err(\"minnet-client: libwebsockets init failed\\n\");\n  248          return JS_ThrowInternalError(ctx, \"minnet-client: libwebsockets init failed\");\n\n~/Projects/plot-cv/quickjs/qjs-net/src/minnet-server.c:\n   98  static BOOL\n   99  server_init(MinnetServer* server) {\n  100:   if(!(server->context.lws = lws_create_context(&server->context.info))) {\n  101      lwsl_err(\"libwebsockets init failed\\n\");\n  102      return FALSE;\n\n130 matches across 127 files\n",
			"settings":
			{
				"buffer_size": 71979,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "libwebsockets/lib/core/context.c",
			"settings":
			{
				"buffer_size": 59978,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/minnet-server-proxy.c",
			"settings":
			{
				"buffer_size": 5217,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/test-server-ws.js",
			"settings":
			{
				"buffer_size": 1178,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/test-client-http.js",
			"settings":
			{
				"buffer_size": 2061,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/test-client.js",
			"settings":
			{
				"buffer_size": 4087,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					22,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANUCAAAAAAAA1gIAAAAAAAAAAAAA1gIAAAAAAADWAgAAAAAAAAsAAAAgbnVsbCAvLyAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVAgAAAAAAAOACAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"right_delete",
					null,
					"AQAAANYCAAAAAAAA1gIAAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWAgAAAAAAANYCAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "tests/spawn.js",
			"settings":
			{
				"buffer_size": 1101,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/minnet-server.c",
			"settings":
			{
				"buffer_size": 18640,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					148,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAN8gAAAAAAAA4CAAAAAAAAAAAAAA4CAAAAAAAADhIAAAAAAAAAAAAADhIAAAAAAAAOIgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfIAAAAAAAAN8gAAAAAAAAAAAAAAAA8L8"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": " argc"
					},
					"BQAAAOIgAAAAAAAA4yAAAAAAAAAAAAAA4yAAAAAAAADkIAAAAAAAAAAAAADkIAAAAAAAAOUgAAAAAAAAAAAAAOUgAAAAAAAA5iAAAAAAAAAAAAAA5iAAAAAAAADnIAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiIAAAAAAAAOIgAAAAAAAAAAAAAAAA8L8"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": " >"
					},
					"AgAAAOcgAAAAAAAA6CAAAAAAAAAAAAAA6CAAAAAAAADpIAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnIAAAAAAAAOcgAAAAAAAAAAAAAAAA8L8"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAOkgAAAAAAAA6iAAAAAAAAAAAAAA6iAAAAAAAADrIAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpIAAAAAAAAOkgAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "tests/server.js",
			"settings":
			{
				"buffer_size": 4803,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					25,
					1,
					"insert",
					{
						"characters": "console."
					},
					"CAAAAOMRAAAAAAAA5BEAAAAAAAAAAAAA5BEAAAAAAADlEQAAAAAAAAAAAADlEQAAAAAAAOYRAAAAAAAAAAAAAOYRAAAAAAAA5xEAAAAAAAAAAAAA5xEAAAAAAADoEQAAAAAAAAAAAADoEQAAAAAAAOkRAAAAAAAAAAAAAOkRAAAAAAAA6hEAAAAAAAAAAAAA6hEAAAAAAADrEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjEQAAAAAAAOMRAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "tests/test-fetch.js",
			"settings":
			{
				"buffer_size": 3544,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					49,
					1,
					"cut",
					null,
					"AQAAALMDAAAAAAAAswMAAAAAAAAoAAAAICAgICAgICAgIGF1dGhvcml0eTogJ3d3dy5kaXNjb2dzLmNvbScsCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzAwAAAAAAANsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					81,
					1,
					"cut",
					null,
					"AQAAAEMEAAAAAAAAQwQAAAAAAAAsAAAAICAgICAgICAgICd1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzJzogJzEnLAo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDBAAAAAAAAG8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"left_delete",
					null,
					"AQAAAEEEAAAAAAAAQQQAAAAAAABkAwAALAogICAgICAgICAgY29va2llOgogICAgICAgICAgICAnc2lkPWRlYjE0MzMwZjg5OTk1NTk4YjRjZDM3ZWNkOGYwYzNkOyBsYW5ndWFnZTI9ZW47IG1wX3Nlc3Npb249ZWQ1NzAwZjI1ZmFjM2M2NDNiODcyMTkxOyBPcHRhbm9uQ29uc2VudD1pc0lBQkdsb2JhbD1mYWxzZSZkYXRlc3RhbXA9TW9uK0ZlYisxNCsyMDIyKzA5JTNBMTUlM0E1OStHTVQlMkIwMTAwKyhDZW50cmFsK0V1cm9wZWFuK1N0YW5kYXJkK1RpbWUpJnZlcnNpb249Ni4yMC4wJmhvc3RzPSZjb25zZW50SWQ9MTZmNmIyMjYtYTBmZC00MjlkLWJhMzQtMGJkYWQ1N2QzOGYxJmludGVyYWN0aW9uQ291bnQ9MSZsYW5kaW5nUGF0aD1odHRwcyUzQSUyRiUyRnd3dy5kaXNjb2dzLmNvbSUyRnNlbGwlMkZ1bmRlZmluZWQmZ3JvdXBzPUMwMDAxJTNBMSUyQ0MwMDA0JTNBMSUyQ0MwMDAzJTNBMSUyQ0MwMDAyJTNBMSUyQ1NUQUNLOCUzQTA7IGN1cnJlbmN5PVVTRDsgY2tfdXNlcm5hbWU9ZGlza29zZW5uOyBwcGNfb25ib2FyZF9wcm9tcHQ9c2Vlbjsgc2Vzc2lvbj0iNVYwby9EMUxtMnYzT1l6MzJkUU52a1RlQWtFPT9fZXhwaXJlcz1NVFkyTWpNM05EWTRNUT09JmF1dGhfdG9rZW49SWt0Q1owdFdhV2R4V2twM2NXZHVielprWTBSb01YcEViMDlFSWc9PSZjcmVhdGVkX2F0PUlqSXdNakl0TURNdE1EbFVNVEE2TkRRNk5ERXVNamMzTURreElnPT0maWRwJTNBdXNlcl9pZD1PRE0yT1RBeU1nPT0iOyBfX2NmX2JtPXdvMXZiY3NIZFJMZFAxZC4wVEdFWjRuTlo0Q3JFXzNLMmo2RW11Ym9hYTgtMTY0NzA2NzUyNi0wLUFWTDEvc0hrb1JoRjcvUUlYdU1DNW5zVFdRR285SGVGdlYrdW5OMkF6S2RwUll4NzVmZ1FjTytvLzhtcVdWdVArQ0ZCekNvVlgraUdhUVcyejNlZGZOcz0nCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBBAAAAAAAAKUHAAAAAAAAAAAAAAAAAAA"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMYEAAAAAAAAxwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGBAAAAAAAAMYEAAAAAAAAAAAAAAAAAAA"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALIDAAAAAAAAswMAAAAAAAAAAAAAswMAAAAAAAC9AwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyAwAAAAAAALIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					136,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAL0DAAAAAAAAvwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9AwAAAAAAAL0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "connection"
					},
					"CgAAAL4DAAAAAAAAvwMAAAAAAAAAAAAAvwMAAAAAAADAAwAAAAAAAAAAAADAAwAAAAAAAMEDAAAAAAAAAAAAAMEDAAAAAAAAwgMAAAAAAAAAAAAAwgMAAAAAAADDAwAAAAAAAAAAAADDAwAAAAAAAMQDAAAAAAAAAAAAAMQDAAAAAAAAxQMAAAAAAAAAAAAAxQMAAAAAAADGAwAAAAAAAAAAAADGAwAAAAAAAMcDAAAAAAAAAAAAAMcDAAAAAAAAyAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+AwAAAAAAAL4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAMkDAAAAAAAAygMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJAwAAAAAAAMkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMoDAAAAAAAAywMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKAwAAAAAAAMoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					141,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAMsDAAAAAAAAzQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLAwAAAAAAAMsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "keep-alive"
					},
					"CgAAAMwDAAAAAAAAzQMAAAAAAAAAAAAAzQMAAAAAAADOAwAAAAAAAAAAAADOAwAAAAAAAM8DAAAAAAAAAAAAAM8DAAAAAAAA0AMAAAAAAAAAAAAA0AMAAAAAAADRAwAAAAAAAAAAAADRAwAAAAAAANIDAAAAAAAAAAAAANIDAAAAAAAA0wMAAAAAAAAAAAAA0wMAAAAAAADUAwAAAAAAAAAAAADUAwAAAAAAANUDAAAAAAAAAAAAANUDAAAAAAAA1gMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMAwAAAAAAAMwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANcDAAAAAAAA2AMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXAwAAAAAAANcDAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "src/minnet-fetch.c",
			"settings":
			{
				"buffer_size": 3451,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/generator.c",
			"settings":
			{
				"buffer_size": 6842,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/minnet-client-http.c",
			"settings":
			{
				"buffer_size": 12575,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test-rpc.js",
			"settings":
			{
				"buffer_size": 9587,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					24,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAABAOAAAAAAAAEQ4AAAAAAAAAAAAAEQ4AAAAAAAASDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQDgAAAAAAABAOAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAABIOAAAAAAAAEw4AAAAAAAAAAAAAEw4AAAAAAAAUDgAAAAAAAAAAAAAUDgAAAAAAABUOAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASDgAAAAAAABIOAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " std.puts("
					},
					"CgAAABUOAAAAAAAAFg4AAAAAAAAAAAAAFg4AAAAAAAAXDgAAAAAAAAAAAAAXDgAAAAAAABgOAAAAAAAAAAAAABgOAAAAAAAAGQ4AAAAAAAAAAAAAGQ4AAAAAAAAaDgAAAAAAAAAAAAAaDgAAAAAAABsOAAAAAAAAAAAAABsOAAAAAAAAHA4AAAAAAAAAAAAAHA4AAAAAAAAdDgAAAAAAAAAAAAAdDgAAAAAAAB4OAAAAAAAAAAAAAB4OAAAAAAAAHw4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVDgAAAAAAABUOAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB8OAAAAAAAAIA4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfDgAAAAAAAB8OAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"cut",
					null,
					"AQAAACAOAAAAAAAAIA4AAAAAAAAJAAAALi4uYXJncyk7",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgDgAAAAAAACkOAAAAAAAA////////738"
				],
				[
					30,
					1,
					"left_delete",
					null,
					"AQAAAB8OAAAAAAAAHw4AAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgDgAAAAAAACAOAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					7,
					"left_delete",
					null,
					"BwAAAPENAAAAAAAA8Q0AAAAAAAABAAAAc/ANAAAAAAAA8A0AAAAAAAABAAAAZ+8NAAAAAAAA7w0AAAAAAAABAAAAcu4NAAAAAAAA7g0AAAAAAAABAAAAYe0NAAAAAAAA7Q0AAAAAAAABAAAALuwNAAAAAAAA7A0AAAAAAAABAAAALusNAAAAAAAA6w0AAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyDQAAAAAAAPINAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "message"
					},
					"BwAAAOsNAAAAAAAA7A0AAAAAAAAAAAAA7A0AAAAAAADtDQAAAAAAAAAAAADtDQAAAAAAAO4NAAAAAAAAAAAAAO4NAAAAAAAA7w0AAAAAAAAAAAAA7w0AAAAAAADwDQAAAAAAAAAAAADwDQAAAAAAAPENAAAAAAAAAAAAAPENAAAAAAAA8g0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrDQAAAAAAAOsNAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "message));"
					},
					"CgAAAB8OAAAAAAAAIA4AAAAAAAAAAAAAIA4AAAAAAAAhDgAAAAAAAAAAAAAhDgAAAAAAACIOAAAAAAAAAAAAACIOAAAAAAAAIw4AAAAAAAAAAAAAIw4AAAAAAAAkDgAAAAAAAAAAAAAkDgAAAAAAACUOAAAAAAAAAAAAACUOAAAAAAAAJg4AAAAAAAAAAAAAJg4AAAAAAAAnDgAAAAAAAAAAAAAnDgAAAAAAACgOAAAAAAAAAAAAACgOAAAAAAAAKQ4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfDgAAAAAAAB8OAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "tests/fetch.js",
			"settings":
			{
				"buffer_size": 1210,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/log.js",
			"settings":
			{
				"buffer_size": 2014,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/test-generator.js",
			"settings":
			{
				"buffer_size": 777,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					22,
					1,
					"left_delete",
					null,
					"AQAAACQAAAAAAAAAJAAAAAAAAAAZAAAAaW1wb3J0IFJFUEwgZnJvbSAncmVwbCc7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkAAAAAAAAAD0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"cut",
					null,
					"AQAAAPsCAAAAAAAA+wIAAAAAAABEAAAAICBsZXQgcmVwbCA9IG5ldyBSRVBMKCk7CiAgY29uc29sZS5sb2coJ3JlcGwnLCByZXBsKTsKICByZXBsLnJ1bigpOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7AgAAAAAAAD8DAAAAAAAAAAAAAAAAAAA"
				],
				[
					32,
					1,
					"left_delete",
					null,
					"AQAAAPkCAAAAAAAA+QIAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6AgAAAAAAAPoCAAAAAAAAAAAAAAAAAAA"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "log"
					},
					"BAAAAC0AAAAAAAAALgAAAAAAAAAAAAAALgAAAAAAAAAuAAAAAAAAAAcAAABDb25zb2xlLgAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAADAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtAAAAAAAAADQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					7,
					"left_delete",
					null,
					"BwAAAD8AAAAAAAAAPwAAAAAAAAABAAAAZT4AAAAAAAAAPgAAAAAAAAABAAAAbD0AAAAAAAAAPQAAAAAAAAABAAAAbzwAAAAAAAAAPAAAAAAAAAABAAAAczsAAAAAAAAAOwAAAAAAAAABAAAAbjoAAAAAAAAAOgAAAAAAAAABAAAAbzkAAAAAAAAAOQAAAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "./log.js"
					},
					"CAAAADkAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABBAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					67,
					1,
					"",
					null,
					"AQAAANwAAAAAAAAA3wAAAAAAAAALAAAAY29uc29sZS5sb2c",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcAAAAAAAAAOcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					68,
					1,
					"",
					null,
					"AQAAAGgBAAAAAAAAawEAAAAAAAALAAAAY29uc29sZS5sb2c",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoAQAAAAAAAHMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					1,
					"",
					null,
					"AQAAAOQBAAAAAAAA5wEAAAAAAAALAAAAY29uc29sZS5sb2c",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkAQAAAAAAAO8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"",
					null,
					"AQAAABwCAAAAAAAAHwIAAAAAAAALAAAAY29uc29sZS5sb2c",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcAgAAAAAAACcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					134,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADiAgAAaW1wb3J0IHsgZ2VuZXJhdG9yIH0gZnJvbSAnbmV0LnNvJzsKaW1wb3J0IHsgbG9nIH0gZnJvbSAnLi9sb2cuanMnOwoKYXN5bmMgZnVuY3Rpb24gbWFpbigpIHsKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZSh7IGluc3BlY3RPcHRpb25zOiB7IGNvbXBhY3Q6IDIgfSB9KTsKCiAgbGV0IGdlbiA9IG5ldyBnZW5lcmF0b3IoYXN5bmMgKHB1c2gsIHN0b3ApID0+IHsKICAgIGxvZygnZ2VuZXJhdG9yJywgeyBwdXNoLCBzdG9wIH0pOwogICAgZm9yKGxldCBpID0gMDsgaSA8IDEwMDsgaSsrKSB7CiAgICAgIGxldCBwciA9IHB1c2gobmV3IFVpbnQzMkFycmF5KFtpICogMWU2XSkpOwogICAgICBhd2FpdCBwcjsKICAgICAgbG9nKGB3cm90ZSAjJHtpfWApOwoKICAgICAgaWYoaSA+PSA0Mikgc3RvcCgpOwogICAgfQogICAgYXdhaXQgc3RvcChuZXcgVWludDhBcnJheShbNzAsIDEwNSwgMTEwLCAxMDUsIDExNSwgMTA0XSkpOwogIH0pOwogIGxvZygnZ2VuJywgZ2VuKTsKCiAgLyogZm9yIGF3YWl0KGxldCBpdGVtIG9mIGdlbikgewogICAgbG9nKCdpdGVtJywgbmV3IFVpbnQzMkFycmF5KGl0ZW0pKTsKICB9Ki8KCiAgbGV0IGl0ZW0sCiAgICBpID0gMDsKICB3aGlsZSgoaXRlbSA9IGF3YWl0IGdlbi5uZXh0KCkpKSB7CiAgICBsZXQgeyB2YWx1ZSwgZG9uZSB9ID0gaXRlbTsKICAgIGNvbnNvbGUubG9nKGBpdGVtICMke2l9YCwgeyB2YWx1ZSwgZG9uZSB9KTsKICB9Cn0KCm1haW4oKTsKAAAAAAAAAADaAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnAgAAAAAAALICAAAAAAAAAAAAAAAA8L8"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "impor)"
					},
					"BgAAAF8AAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABhAAAAAAAAAAAAAABhAAAAAAAAAGIAAAAAAAAAAAAAAGIAAAAAAAAAYwAAAAAAAAAAAAAAYwAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGUAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfAAAAAAAAAF8AAAAAAAAAAAAAAAAAMEA"
				],
				[
					168,
					1,
					"left_delete",
					null,
					"AQAAAGQAAAAAAAAAZAAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlAAAAAAAAAGUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "t('console')"
					},
					"DAAAAGQAAAAAAAAAZQAAAAAAAAAAAAAAZQAAAAAAAABmAAAAAAAAAAAAAABmAAAAAAAAAGcAAAAAAAAAAAAAAGcAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABpAAAAAAAAAAAAAABpAAAAAAAAAGoAAAAAAAAAAAAAAGoAAAAAAAAAawAAAAAAAAAAAAAAawAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAG0AAAAAAAAAAAAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkAAAAAAAAAGQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": ".then("
					},
					"BgAAAHAAAAAAAAAAcQAAAAAAAAAAAAAAcQAAAAAAAAByAAAAAAAAAAAAAAByAAAAAAAAAHMAAAAAAAAAAAAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAB1AAAAAAAAAHYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHYAAAAAAAAAdwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2AAAAAAAAAHYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					172,
					1,
					"left_delete",
					null,
					"AQAAAHYAAAAAAAAAdgAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3AAAAAAAAAHcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": "({Console})"
					},
					"CwAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHkAAAAAAAAAAAAAAHkAAAAAAAAAegAAAAAAAAAAAAAAegAAAAAAAAB7AAAAAAAAAAAAAAB7AAAAAAAAAHwAAAAAAAAAAAAAAHwAAAAAAAAAfQAAAAAAAAAAAAAAfQAAAAAAAAB+AAAAAAAAAAAAAAB+AAAAAAAAAH8AAAAAAAAAAAAAAH8AAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACBAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2AAAAAAAAAHYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAIEAAAAAAAAAggAAAAAAAAAAAAAAggAAAAAAAACDAAAAAAAAAAAAAACDAAAAAAAAAIQAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBAAAAAAAAAIEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIQAAAAAAAAAhQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEAAAAAAAAAIQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					178,
					1,
					"left_delete",
					null,
					"AQAAAMkAAAAAAAAAyQAAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKAAAAAAAAAMoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": ")="
					},
					"AgAAAMkAAAAAAAAAygAAAAAAAAAAAAAAygAAAAAAAADLAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					180,
					2,
					"left_delete",
					null,
					"AgAAAMoAAAAAAAAAygAAAAAAAAABAAAAPckAAAAAAAAAyQAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLAAAAAAAAAMsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": "));"
					},
					"AwAAAMkAAAAAAAAAygAAAAAAAAAAAAAAygAAAAAAAADLAAAAAAAAAAAAAADLAAAAAAAAAMwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					185,
					1,
					"right_delete",
					null,
					"AQAAACQAAAAAAAAAJAAAAAAAAAAgAAAAaW1wb3J0IHsgbG9nIH0gZnJvbSAnLi9sb2cuanMnOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkAAAAAAAAAEQAAAAAAAAAAAAAAAAAAAA"
				],
				[
					198,
					1,
					"",
					null,
					"AQAAAOQAAAAAAAAA8AAAAAAAAAAEAAAAbG9nKA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkAAAAAAAAAOgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					199,
					1,
					"",
					null,
					"AQAAAHgBAAAAAAAAhAEAAAAAAAAEAAAAbG9nKA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AQAAAAAAAHwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					200,
					1,
					"",
					null,
					"AQAAAPwBAAAAAAAACAIAAAAAAAAEAAAAbG9nKA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8AQAAAAAAAAACAAAAAAAAAAAAAAAA8L8"
				],
				[
					201,
					1,
					"",
					null,
					"AQAAADwCAAAAAAAASAIAAAAAAAAEAAAAbG9nKA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8AgAAAAAAAEACAAAAAAAAAAAAAAAA8L8"
				],
				[
					202,
					1,
					"",
					null,
					"AQAAAM8CAAAAAAAA2wIAAAAAAAAEAAAAbG9nKA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPAgAAAAAAANMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					217,
					1,
					"delete_word",
					{
						"forward": true
					},
					"AQAAAKkAAAAAAAAAqQAAAAAAAAADAAAAKSk7",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpAAAAAAAAAKkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					220,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAKkAAAAAAAAAqgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpAAAAAAAAAKkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					221,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKoAAAAAAAAArAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqAAAAAAAAAKoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					222,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAKoAAAAAAAAAqgAAAAAAAAABAAAAKKoAAAAAAAAAqgAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrAAAAAAAAAKsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKoAAAAAAAAAqwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqAAAAAAAAAKoAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "tests/test-server-http.js",
			"settings":
			{
				"buffer_size": 1577,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					16,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMoDAAAAAAAAywMAAAAAAAAAAAAAywMAAAAAAADMAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKAwAAAAAAAMoDAAAAAAAAAAAAAAAAIEA"
				],
				[
					18,
					1,
					"paste",
					null,
					"AQAAAMoDAAAAAAAAOQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKAwAAAAAAAMoDAAAAAAAAAAAAAAAAIEA"
				],
				[
					31,
					1,
					"",
					null,
					"CgAAAIkFAAAAAAAAlwUAAAAAAAAGAAAAICBsb2coNgUAAAAAAABEBQAAAAAAAAYAAAAgIGxvZyg6AwAAAAAAAEwDAAAAAAAACgAAACAgICAgIGxvZyjOAgAAAAAAAOACAAAAAAAACgAAACAgICAgIGxvZyitAgAAAAAAAL8CAAAAAAAACgAAACAgICAgIGxvZyiOAgAAAAAAAKACAAAAAAAACgAAACAgICAgIGxvZyhqAgAAAAAAAHwCAAAAAAAACgAAACAgICAgIGxvZyj7AQAAAAAAAA0CAAAAAAAACgAAACAgICAgIGxvZyihAQAAAAAAALMBAAAAAAAACgAAACAgICAgIGxvZyhbAQAAAAAAAG0BAAAAAAAACgAAACAgICAgIGxvZyg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChAQAAAAAAAKsBAAAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Build debug",
					""
				],
				[
					"CMake",
					""
				],
				[
					"Rebuild CScope",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"make",
					""
				],
				[
					"prettier",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/NinjaBuild/ninja.sublime-build",
					""
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				"Clean"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"ou",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"lua",
				"Pretty Lua: Format"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-net",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/examples",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/plugins",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/url.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ws.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/opaque.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/session.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-websocket.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-url.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/buffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/buffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server-ws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/ws/server-ws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-ws-state.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/jsutils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/js/rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/js/event-emitter.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/js/debugger-client.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-eventlib-demos/mount-origin/test.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-eventlib-demos/minimal-http-server-eventlib-demos.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugins/protocol_lws_mirror.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/http-server.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-fetch.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/remove-functions.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-generator.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-eventlib-demos/mount-origin/test.css",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/jsutils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-form-parser.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/url.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/headers.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/opaque.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-response.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/response.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/request.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/response.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/form-parser.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/form-parser.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/deferred.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/session.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/closure.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/request.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/deferred.c.orig",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/allocated.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/assure.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/asynciterator.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/callback.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/context.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/deferred.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/generator.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/headers.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/lws-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/poll.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/query.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ref.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-request.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/READMEs/README.fault-injection.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-request.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/asynciterator.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/generator.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/lws-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-client.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-write.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/http/server/server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/roles/http/header.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/log.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/spawn.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/callback.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-plugin-broker.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/check-dep.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/android/app/src/main/AndroidManifest.xml",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/client/client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/premake.lua",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/premake5.lua",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/premake4.lua",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/build.ninja",
		"/home/roman/Projects/quickjs/Makefile",
		"/home/roman/Projects/qjs-net/Makefile",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/common.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/client.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-fetch.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/fetch.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-client-http.js",
		"/home/roman/Projects/mariadb-10.3-10.3.38/libmariadb/include/mysql.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build-libwebsockets.sh",
		"/home/roman/Projects/openssl-3.0.2/Makefile",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build.ninja",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/test-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/ref.c",
		"/home/roman/Projects/nanovg/premake4.lua",
		"/home/roman/Projects/c-parse/nanosvg/premake4.lua",
		"/home/roman/Projects/an-tronics/eagle/Simple-Bug-2SC9014.brd",
		"/home/roman/Projects/an-tronics/eagle/Simple-Bug-2SC9014.sch",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/context.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/test-server-http.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-custom-headers/minimal-http-server-custom-headers.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/http-server/minimal-http-server-sse/minimal-http-server-sse.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server-http.h",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-url.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-response.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-request.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/test.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/lws-common.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-rx/minimal-ws-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 146.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,-*/build/*,-*/xlibwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,-*/build/*,-*/libwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,-*/build/*,-*/xlibwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*,-*/xlibwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*,-*/libwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*,-*/xlibwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*,-*/libwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*,-*/xlibwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*,-*/libwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*,-*/xlibwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*,-*/libwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,*.js,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/build/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h,-*/libwebsockets/*",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,/home/roman/Projects/plot-cv/quickjs/qjs-net/lib,*.c,*.h",
			"/home/roman/Projects/plot-cv/quickjs/qjs-net,*.c,*.h",
			"<project filters>,*.c,*.h,-*/build/*,-*/libwebsockets/*",
			"<project filters>,*.[ch],-*/build/*,-*/libwebsockets/*",
			"<project filters>,-*/build/*,-*/libwebsockets/*",
			"<project filters>",
			"*.[ch],lib/*.[ch]",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"proxy",
			"lws_create_context",
			"\\.log'",
			"\\.log\"",
			"\\.log",
			"terminate",
			"import",
			"terminate",
			"exited:",
			"opt_",
			"mount_new",
			"mount_create",
			"resp->generator",
			"RECEIVE_CLIENT_HTTP_READ",
			"setLog",
			"COMPLETED_CLIENT_HTTP",
			"discogs",
			"^(\\s*)log\\(",
			"log\\(",
			"console\\.log",
			"'repl'",
			"MODULE_PATH ",
			"TESTS",
			"objectCommand",
			"'get'",
			"RECEIVE:",
			"onMessage",
			"minnet_server",
			"lws_is_[a-z]*_fragment",
			"ByteBuffer;",
			"lws_is_[a-z]*_fragment",
			"CLIENT_RECEIVE:",
			"WRITEABLE:",
			"_WRITEABLE:",
			"minnet_ws_send",
			"objectCommand",
			"SerializeValue",
			"MakeListCommand",
			"methods",
			"methods\\(",
			"'methods'",
			"new Proxy",
			"MakeCommandFunct",
			"'call'",
			"call\\(",
			"'get'",
			"command\\(",
			"onmessage",
			"verbosity",
			"this.log",
			"command\\(",
			"onFd",
			"sendCommand",
			"weakAssign",
			"function define",
			"^Object\\.assign",
			"^Object.assign",
			"function define\\(",
			"define\\(",
			"client:",
			"client",
			"connection[^s]",
			"connection",
			"get connection",
			"weakAssign",
			"_ESTABLISHED",
			"onFd",
			"_inspect",
			"serve",
			"async connect",
			"MakeWebSocket",
			"listen\\(",
			"new_ws",
			"setHandlers",
			"onFd",
			"MakeWebSocket",
			"WebSocket",
			"rpc\\.",
			"rpc2",
			"EventLogger",
			"$",
			"DefaultConstructor",
			"Mapper",
			"GetClasses",
			"RPCServer",
			"getpeername",
			"_ESTABLISHED",
			"lws_context_user",
			"READYSTATE:",
			"connections",
			"listener",
			"Socket",
			"RPC(Socket|Connect|Listen)",
			"RPCSocket",
			"verbosity",
			"getCallbacks",
			"getCallback",
			"getCallbacks",
			"onConnect",
			"RPCSocket",
			"class RPCSocket",
			"FAMILY,",
			"FAMILY:",
			"RPCSocket",
			"getCallbacks",
			"verbose",
			"onConnect",
			"CopyToClipboard",
			"wss",
			"-config",
			"-confi8g",
			"WriteJSON",
			"WriteFile",
			"types",
			"RPCClient",
			"new RPCClient",
			"RPCClient",
			"get\\(",
			" get\\(",
			"get\\(",
			"objectCommand",
			"keys\\(",
			"objectCommand",
			"list",
			"'list'",
			"VfnDecorator",
			"VfnAdapter",
			"GetClasses"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\\1console.log(",
			"console.log(",
			"log",
			"define",
			"set_write",
			"set_read",
			"closure->",
			"read.state",
			"minnet_fd_callback",
			"",
			"resp",
			"",
			"HEADERS_SET",
			"HEADERS_GET",
			"ThisAsArg",
			"}\\n\\n\\1",
			"}\\n\\n",
			"",
			"ccr",
			"JSCClosureRecord",
			"js_cclosure_record",
			"js_cclosure_new(",
			"js_cclosure_f",
			"\"with-\\1\"",
			"\"with-quickjs\"",
			"\\n    ",
			" }",
			"{ ",
			"SharedLib",
			"JS_SHARED_LIBRARY",
			"$quickjs_prefix",
			" -I",
			"$libwebsockets_prefix",
			"${OPENSSL_PREFIX}",
			"OPENSSL_PREFIX",
			"",
			"cb->ctx",
			"session_callback",
			"struct socket",
			"struct form_parser",
			"QJSNET_LIB_LWS_UTILS_H",
			"\\1",
			"",
			")",
			"push_value",
			"push_block",
			"session",
			"opaque_list",
			"session",
			",",
			"\\1#\\2",
			"resp",
			"opaque",
			"}\\n\n    case ",
			"tail_bind",
			"tail_decorate",
			"RINGBUFFER_COUNT",
			"RINGBUFFER_BYTELEN",
			"RINGBUFFER_ELEMENTLEN",
			"RINGBUFFER_INSERTRANGE",
			"RINGBUFFER_LINEARINSERTRANGE",
			"linearInsertRange",
			"RINGBUFFER_ELEMENTLENGTH",
			"rb",
			"buf.",
			"FinalizerFunction",
			"DeferredFunction",
			"FunctionPointer",
			"av[",
			"session",
			"MinnetHttpMount",
			"MinnetResponse",
			"wsi",
			"ws->lwsi",
			"QJSNET_LIB_ASYNCITERATOR_H",
			"JS_FreeValueRT(rt,",
			"client->request",
			"MINNET",
			"MINNET_RINGBUFFER_H",
			"WJSNET_LIBQJSNET_LIB_RESPONSE_H",
			"WJSNET_LIBQJSNET_LIB_REQUEST_H",
			"WJSNET_LIBQJSNET_LIB_URL_H",
			"WJSNET_LIBQJSNET_LIB_WS_H",
			"WJSNET_LIB",
			"response",
			"arequest",
			"\\1//console",
			"log",
			"\\1",
			"\\1//DEBUG",
			"fp",
			"JS_FreeValueRT(rt,",
			"DEBUG(",
			"printf(",
			"printf(\"",
			" DEBUG(",
			"is_h2",
			"get_host_and_port",
			"JSCallback",
			"MINNET_GENERATOR_H",
			"MINNET_RINGBUFFER_H",
			"QUICKJS_NET_LIB_POLL_H",
			"(wsi_token_exists(\\1))",
			"h2",
			"closure_free",
			"closure_dup(cc)",
			"fetch_",
			"MinnetFetch",
			"MinnetHandler",
			"js_entry_reset",
			"js_entry_clear",
			"req->url."
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 117,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server-proxy.c",
							"function_name_status_row": 8,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									76,
									85
								],
								[
									124,
									135
								],
								[
									153,
									163
								],
								[
									291,
									303
								]
							],
							"symlist":
							[
								"—Ⓒ– proxy_msg { … } ; — type",
								"\tⓉ  proxy_msg_t ; — typedef",
								"—Ⓒ– proxy_conn { … } ; — type",
								"\tⓉ  proxy_conn_t ; — typedef"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680391289.73,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "js/rpc.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30128,
						"regions":
						{
						},
						"selection":
						[
							[
								12747,
								12747
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 449,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680386641.79,
							"tabs_extra_last_activated_sheet_index": 0,
							"tabs_extra_moving":
							[
								3,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6309.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22948,
						"regions":
						{
						},
						"selection":
						[
							[
								13210,
								13222
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 461,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680390977.78,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6489.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/minnet-server-http.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34735,
						"regions":
						{
						},
						"selection":
						[
							[
								5688,
								5697
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 219,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680391313.22,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2619.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 71979,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions": "",
								"scope": ""
							}
						},
						"selection":
						[
							[
								71198,
								71198
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"detect_indentation": false,
							"function_name_status_row": 1874,
							"line_numbers": false,
							"output_tag": 7,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1680614525.76,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 29207.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "libwebsockets/lib/core/context.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 59978,
						"regions":
						{
						},
						"selection":
						[
							[
								9315,
								9333
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 372,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"tabs_extra_last_activated": 1680781471.81,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5143.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/minnet-server-proxy.c",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 5217,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680791180.63,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "tests/test-server-ws.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1178,
						"regions":
						{
						},
						"selection":
						[
							[
								772,
								772
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 32,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680391983.26,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 35.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "tests/test-client-http.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2061,
						"regions":
						{
							"col_0000DDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										1201,
										1211
									]
								],
								"scope": "col_0000DDFF"
							},
							"col_0000DDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000DDFF_circle.png",
								"regions":
								[
									[
										1173,
										1173
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								1725,
								1725
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 60,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680391919.89,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 474.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "tests/test-client.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4087,
						"regions":
						{
							"col_0000DDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										3190,
										3200
									]
								],
								"scope": "col_0000DDFF"
							},
							"col_0000DDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000DDFF_circle.png",
								"regions":
								[
									[
										3163,
										3163
									]
								],
								"scope": "col_gutter"
							},
							"col_C0C0C0FF":
							{
								"flags": 16,
								"regions":
								[
									[
										1670,
										1680
									]
								],
								"scope": "col_C0C0C0FF"
							},
							"col_C0C0C0FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_C0C0C0FF_circle.png",
								"regions":
								[
									[
										1635,
										1635
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								726,
								726
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 18,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680391980.58,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 109.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "tests/spawn.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1101,
						"regions":
						{
						},
						"selection":
						[
							[
								684,
								684
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 23,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680392065.65,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/minnet-server.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18640,
						"regions":
						{
						},
						"selection":
						[
							[
								11761,
								11761
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 354,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680391731.84,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4593.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "tests/server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4803,
						"regions":
						{
						},
						"selection":
						[
							[
								4587,
								4587
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 152,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680614519.39,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1530.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "tests/test-fetch.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3544,
						"regions":
						{
							"col_DD0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										264,
										274
									]
								],
								"scope": "col_DD0000FF"
							},
							"col_DD0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DD0000FF_circle.png",
								"regions":
								[
									[
										245,
										245
									]
								],
								"scope": "col_gutter"
							},
							"col_DD8800FF":
							{
								"flags": 16,
								"regions":
								[
									[
										1171,
										1181
									]
								],
								"scope": "col_DD8800FF"
							},
							"col_DD8800FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DD8800FF_circle.png",
								"regions":
								[
									[
										1153,
										1153
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								1284,
								1310
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 39,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680388772.8,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "src/minnet-fetch.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3451,
						"regions":
						{
						},
						"selection":
						[
							[
								2825,
								2925
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 91,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680388586.38,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 765.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "lib/generator.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6842,
						"regions":
						{
						},
						"selection":
						[
							[
								3267,
								3232
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 123,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680388768.65,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1235.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "src/minnet-client-http.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12575,
						"regions":
						{
						},
						"selection":
						[
							[
								9497,
								9497
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 276,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680388773.46,
							"tabs_extra_last_activated_sheet_index": 5,
							"tabs_extra_moving":
							[
								3,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3729.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "test-rpc.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9587,
						"regions":
						{
							"col_0087FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										8208,
										8221
									]
								],
								"scope": "col_0087FFFF"
							},
							"col_0087FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0087FFFF_circle.png",
								"regions":
								[
									[
										8187,
										8187
									]
								],
								"scope": "col_gutter"
							},
							"col_00AFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2465,
										2478
									]
								],
								"scope": "col_00AFFFFF"
							},
							"col_00AFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00AFFFFF_circle.png",
								"regions":
								[
									[
										2418,
										2418
									]
								],
								"scope": "col_gutter"
							},
							"col_D700FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2441,
										2455
									],
									[
										7946,
										7960
									]
								],
								"scope": "col_D700FFFF"
							},
							"col_D700FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_D700FFFF_circle.png",
								"regions":
								[
									[
										2418,
										2418
									],
									[
										7925,
										7925
									]
								],
								"scope": "col_gutter"
							},
							"col_FFAF5FFF":
							{
								"flags": 16,
								"regions":
								[
									[
										6224,
										6238
									],
									[
										6353,
										6367
									],
									[
										7494,
										7508
									]
								],
								"scope": "col_FFAF5FFF"
							},
							"col_FFAF5FFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFAF5FFF_circle.png",
								"regions":
								[
									[
										6201,
										6201
									],
									[
										6330,
										6330
									],
									[
										7471,
										7471
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								3463,
								3469
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 111,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680388769.26,
							"tabs_extra_last_activated_sheet_index": 6,
							"tabs_extra_moving":
							[
								3,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1239.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "tests/fetch.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1210,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680388384.69,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "tests/log.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2014,
						"regions":
						{
						},
						"selection":
						[
							[
								1785,
								1789
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 61,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680392067.01,
							"tabs_extra_last_activated_sheet_index": 16,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 360.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "tests/test-generator.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 777,
						"regions":
						{
						},
						"selection":
						[
							[
								61,
								172
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 3,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680387648.16,
							"tabs_extra_last_activated_sheet_index": 4,
							"tabs_extra_moving":
							[
								3,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "tests/test-server-http.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1577,
						"regions":
						{
						},
						"selection":
						[
							[
								622,
								622
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 48,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1680387683.33,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 35.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 0.0
	},
	"output.Debugger Console":
	{
		"height": 108.0
	},
	"output.coffeecompile_output":
	{
		"height": 132.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "minnet.sublime-project",
	"replace":
	{
		"height": 66.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"spawn.js",
				"tests/spawn.js"
			],
			[
				"minnet-server-htt",
				"src/minnet-server-http.c"
			],
			[
				"test-rpc",
				"test-rpc.js"
			],
			[
				"test-fe",
				"tests/test-fetch.js"
			],
			[
				"fetch.js",
				"tests/fetch.js"
			],
			[
				"CMakeLists",
				"CMakeLists.txt"
			],
			[
				"minnet.c",
				"src/minnet.c"
			],
			[
				"minnet-clie",
				"src/minnet-client.c"
			],
			[
				"minnet-server-ws",
				"src/minnet-server-ws.c"
			],
			[
				"server-ws.c",
				"libwebsockets/lib/roles/ws/server-ws.c"
			],
			[
				"minnet-server-http",
				"src/minnet-server-http.c"
			],
			[
				"minnet-web",
				"src/minnet-websocket.c"
			],
			[
				"minnet-url",
				"src/minnet-url.c"
			],
			[
				"rpc.js",
				"js/rpc.js"
			],
			[
				"minnet-client-http",
				"src/minnet-client-http.c"
			],
			[
				"client-htt",
				"src/minnet-client-http.c"
			],
			[
				"opaque.h",
				"lib/opaque.h"
			],
			[
				"websocket.c",
				"src/minnet-websocket.c"
			],
			[
				"minnet-webs",
				"src/minnet-websocket.c"
			],
			[
				"minnet-socket",
				"src/minnet-websocket.c"
			],
			[
				"minnet-server.c",
				"src/minnet-server.c"
			],
			[
				"url.h",
				"lib/url.h"
			],
			[
				"eventlib-de",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-eventlib-demos/minimal-http-server-eventlib-demos.c"
			],
			[
				"protocol_lws_mir",
				"libwebsockets/plugins/protocol_lws_mirror.c"
			],
			[
				"http-ser",
				"examples/http-server.js"
			],
			[
				"minnet-server",
				"src/minnet-server.c"
			],
			[
				"jsutils",
				"lib/jsutils.h"
			],
			[
				"-client-http.c",
				"src/minnet-client-http.c"
			],
			[
				"server-ht",
				"src/minnet-server-http.c"
			],
			[
				"remove",
				"remove-functions.c"
			],
			[
				"server.js",
				"tests/server.js"
			],
			[
				"buf",
				"lib/buffer.c"
			],
			[
				"opaque",
				"lib/opaque.c"
			],
			[
				"buffer.c",
				"lib/buffer.c"
			],
			[
				".h",
				"lib/opaque.h"
			],
			[
				"request.h",
				"lib/request.h"
			],
			[
				"ref.h",
				"lib/ref.h"
			],
			[
				"ref.j",
				"libwebsockets/READMEs/README.fault-injection.md"
			],
			[
				"context.h",
				"lib/context.h"
			],
			[
				"deferre",
				"lib/deferred.c"
			],
			[
				"request.c",
				"lib/request.c"
			],
			[
				"minnet-res",
				"src/minnet-response.c"
			],
			[
				"respose",
				"lib/response.c"
			],
			[
				"headers.c",
				"lib/headers.c"
			],
			[
				"uffer.h",
				"lib/buffer.h"
			],
			[
				"buffer.h",
				"lib/buffer.h"
			],
			[
				"remo",
				"remove-functions.c"
			],
			[
				"headers.h",
				"lib/headers.h"
			],
			[
				"headers",
				"lib/headers.c"
			],
			[
				"utils.h",
				"lib/utils.h"
			],
			[
				"defer",
				"lib/deferred.c"
			],
			[
				"check",
				"check-dep.js"
			],
			[
				"minnet-req",
				"src/minnet-request.c"
			],
			[
				"check-de",
				"check-dep.js"
			],
			[
				"heades",
				"lib/headers.c"
			],
			[
				"request",
				"lib/request.c"
			],
			[
				"jsutils.c",
				"lib/jsutils.c"
			],
			[
				"-requet",
				"src/minnet-request.c"
			],
			[
				"ringbuffer",
				"lib/ringbuffer.c"
			],
			[
				"check-dep",
				"check-dep.js"
			],
			[
				"plugin-br",
				"src/minnet-plugin-broker.c"
			],
			[
				"server-ws",
				"src/minnet-server-ws.c"
			],
			[
				"callback.c",
				"lib/callback.c"
			],
			[
				"callback",
				"lib/callback.h"
			],
			[
				"test-opx",
				"libwebsockets/test-apps/android/app/src/main/AndroidManifest.xml"
			],
			[
				"wscli",
				"wscli.js"
			],
			[
				"minnet-cli",
				"src/minnet-client.c"
			],
			[
				"wscli.js",
				"wscli.js"
			],
			[
				"client.c",
				"src/minnet-client.c"
			],
			[
				"premake4",
				"premake4.lua"
			],
			[
				"premake5",
				"premake5.lua"
			],
			[
				"premake.l",
				"premake.lua"
			],
			[
				"minnet.h",
				"src/minnet.h"
			],
			[
				"header",
				"lib/headers.c"
			],
			[
				"session.h",
				"lib/session.h"
			],
			[
				"generator.h",
				"lib/generator.h"
			],
			[
				"generator.c",
				"lib/generator.c"
			],
			[
				"jsut",
				"lib/jsutils.h"
			],
			[
				"minnet-server-ht",
				"src/minnet-server-http.c"
			],
			[
				"test-client",
				"tests/test-client-http.js"
			],
			[
				"log.js",
				"tests/log.js"
			],
			[
				"build-lib",
				"build-libwebsockets.sh"
			],
			[
				"minnet-client-htt",
				"src/minnet-client-http.c"
			],
			[
				"premake",
				"premake5.lua"
			],
			[
				"server-htt",
				"src/minnet-server-http.c"
			],
			[
				"ref.c",
				"lib/ref.c"
			],
			[
				"utils.c",
				"lib/utils.c"
			],
			[
				"lws-utils",
				"lib/lws-utils.c"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"lws_mirr",
				"libwebsockets/plugins/protocol_lws_mirror.c"
			],
			[
				"server-http.c ",
				"src/minnet-server-http.c"
			],
			[
				"lws-call",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"lws-write",
				"libwebsockets/include/libwebsockets/lws-write.h"
			],
			[
				"context.c",
				"lib/context.c"
			],
			[
				"minnet-webso",
				"src/minnet-websocket.c"
			],
			[
				"ws.h",
				"lib/ws.h"
			],
			[
				"lws-util",
				"lib/lws-utils.h"
			],
			[
				"mirror",
				"libwebsockets/plugins/protocol_lws_mirror.c"
			],
			[
				"conso",
				"libwebsockets/lib/core-net/socks5-client.c"
			],
			[
				"lws_mi",
				"libwebsockets/plugins/protocol_lws_mirror.c"
			],
			[
				"_mirror",
				"libwebsockets/plugins/protocol_lws_mirror.c"
			],
			[
				"lws_raw_",
				"libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c"
			],
			[
				"url.c",
				"lib/url.c"
			],
			[
				"lws-ut",
				"lib/lws-utils.h"
			],
			[
				"minnet.js",
				"js/minnet.js"
			],
			[
				"queue.h",
				"lib/queue.h"
			],
			[
				"closure.h",
				"lib/closure.h"
			],
			[
				"test-ge",
				"tests/test-generator.js"
			],
			[
				"minnet-ge",
				"minnet-generator.c"
			],
			[
				"hash.c",
				"minnet-hash.c"
			],
			[
				"minnet-has",
				"minnet-hash.c"
			],
			[
				"server-http",
				"minnet-server-http.c"
			],
			[
				"-ws",
				"minnet-server-ws.c"
			],
			[
				"minnet.cv",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-eventlib/mount-origin/strict-csp.svg"
			],
			[
				"-ws.c",
				"minnet-server-ws.c"
			],
			[
				"session",
				"lib/session.h"
			],
			[
				"client.js",
				"tests/client.js"
			],
			[
				"test-clie",
				"tests/test-client-http.js"
			],
			[
				"test-client-ht",
				"tests/test-client-http.js"
			],
			[
				"test-client-htt",
				"tests/test-client-http.js"
			],
			[
				"-gene",
				"tests/test-generator.js"
			],
			[
				"queue.c",
				"lib/queue.c"
			],
			[
				"respo",
				"lib/response.c"
			],
			[
				"minnet-we",
				"minnet-websocket.c"
			],
			[
				"lws-htt",
				"libwebsockets/include/libwebsockets/lws-http.h"
			],
			[
				"server-ring",
				"libwebsockets/minimal-examples/ws-server/minimal-ws-server-ring/protocol_lws_minimal.c"
			],
			[
				"sse-",
				"libwebsockets/minimal-examples/http-server/minimal-http-server-sse-ring/minimal-http-server-sse-ring.c"
			],
			[
				"jsuti",
				"lib/jsutils.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 592.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 308.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
